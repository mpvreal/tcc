; ModuleID = 'LocalReduce/Norm1Functions.c'
source_filename = "LocalReduce/Norm1Functions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [29 x i8] c"LocalReduce/Norm1Functions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5444 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1222
    i32 104, label %1829
    i32 105, label %2434
    i32 106, label %3036
    i32 107, label %3640
    i32 108, label %4240
    i32 109, label %4844
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %5444

30:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %31
    i32 0, label %328
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %5444

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %192

45:                                               ; preds = %31
  br i1 %35, label %46, label %5444

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %190
  %55 = phi i32 [ 0, %46 ], [ %142, %190 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %141, %190 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !12

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !16

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !17

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = tail call fast double @llvm.fabs.f64(double %137)
  %139 = fadd fast double %138, %135
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = fadd fast double %131, %56
  %142 = add nuw nsw i32 %55, 1
  br i1 %48, label %143, label %190

143:                                              ; preds = %127
  %144 = load i32, ptr %4, align 4, !tbaa !5
  %145 = load i32, ptr %12, align 4, !tbaa !5
  %146 = add nsw i32 %145, -1
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %167, label %148

148:                                              ; preds = %143
  %149 = icmp eq i32 %144, %146
  br i1 %149, label %150, label %183

150:                                              ; preds = %148
  store i32 0, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %151, ptr %6, align 4, !tbaa !5
  br i1 %53, label %190, label %152

152:                                              ; preds = %150, %177
  %153 = phi i64 [ %181, %177 ], [ 1, %150 ]
  %154 = getelementptr inbounds i32, ptr %4, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !5
  %156 = getelementptr inbounds i32, ptr %12, i64 %153
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = add nsw i32 %157, -1
  %159 = icmp slt i32 %155, %158
  br i1 %159, label %160, label %175

160:                                              ; preds = %152
  br i1 %147, label %167, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds i32, ptr %7, i64 %153
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = getelementptr inbounds i32, ptr %6, i64 %153
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = add nsw i32 %165, %163
  store i32 %166, ptr %164, align 4, !tbaa !5
  br label %185

167:                                              ; preds = %143, %160
  %168 = phi i32 [ %155, %160 ], [ %144, %143 ]
  %169 = phi ptr [ %154, %160 ], [ %4, %143 ]
  %170 = phi i64 [ %153, %160 ], [ 0, %143 ]
  %171 = add nsw i32 %168, 1
  store i32 %171, ptr %169, align 4, !tbaa !5
  %172 = getelementptr inbounds i32, ptr %7, i64 %170
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %170
  br label %185

175:                                              ; preds = %152
  %176 = icmp eq i32 %155, %158
  br i1 %176, label %177, label %183

177:                                              ; preds = %175
  store i32 0, ptr %154, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %8, i64 %153
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %153
  store i32 %179, ptr %180, align 4, !tbaa !5
  %181 = add nuw nsw i64 %153, 1
  %182 = icmp eq i64 %181, %51
  br i1 %182, label %190, label %152, !llvm.loop !20

183:                                              ; preds = %148, %175
  %184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

185:                                              ; preds = %161, %167
  %186 = phi ptr [ %174, %167 ], [ %154, %161 ]
  %187 = phi i32 [ %173, %167 ], [ 1, %161 ]
  %188 = load i32, ptr %186, align 4, !tbaa !5
  %189 = add nsw i32 %188, %187
  store i32 %189, ptr %186, align 4, !tbaa !5
  br label %190

190:                                              ; preds = %177, %185, %150, %127
  %191 = icmp eq i32 %142, %5
  br i1 %191, label %5444, label %54, !llvm.loop !22

192:                                              ; preds = %37, %326
  %193 = phi i32 [ 0, %37 ], [ %275, %326 ]
  %194 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %195, label %264

195:                                              ; preds = %192, %254
  %196 = phi i32 [ %263, %254 ], [ 0, %192 ]
  %197 = phi i64 [ %205, %254 ], [ %42, %192 ]
  %198 = phi i64 [ %262, %254 ], [ %41, %192 ]
  %199 = phi i32 [ %260, %254 ], [ %194, %192 ]
  %200 = sub i32 %40, %196
  %201 = tail call i32 @llvm.smin.i32(i32 %200, i32 0)
  %202 = sub i32 %200, %201
  %203 = zext i32 %202 to i64
  %204 = add nuw nsw i64 %203, 1
  %205 = add nsw i64 %197, -1
  %206 = icmp ult i32 %202, 31
  br i1 %206, label %242, label %207

207:                                              ; preds = %195
  %208 = and i64 %204, 8589934560
  %209 = sub i64 %198, %208
  br label %210

210:                                              ; preds = %210, %207
  %211 = phi i64 [ 0, %207 ], [ %234, %210 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %230, %210 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %231, %210 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %232, %210 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %233, %210 ]
  %216 = sub i64 %198, %211
  %217 = getelementptr inbounds i32, ptr %11, i64 %216
  %218 = getelementptr inbounds i32, ptr %217, i64 -7
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %217, i64 -15
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %217, i64 -23
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %217, i64 -31
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = mul <8 x i32> %220, %212
  %231 = mul <8 x i32> %223, %213
  %232 = mul <8 x i32> %226, %214
  %233 = mul <8 x i32> %229, %215
  %234 = add nuw i64 %211, 32
  %235 = icmp eq i64 %234, %208
  br i1 %235, label %236, label %210, !llvm.loop !23

236:                                              ; preds = %210
  %237 = mul <8 x i32> %231, %230
  %238 = mul <8 x i32> %232, %237
  %239 = mul <8 x i32> %233, %238
  %240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %239)
  %241 = icmp eq i64 %204, %208
  br i1 %241, label %254, label %242

242:                                              ; preds = %195, %236
  %243 = phi i64 [ %198, %195 ], [ %209, %236 ]
  %244 = phi i32 [ 1, %195 ], [ %240, %236 ]
  br label %245

245:                                              ; preds = %242, %245
  %246 = phi i64 [ %251, %245 ], [ %243, %242 ]
  %247 = phi i32 [ %250, %245 ], [ %244, %242 ]
  %248 = getelementptr inbounds i32, ptr %11, i64 %246
  %249 = load i32, ptr %248, align 4, !tbaa !5
  %250 = mul nsw i32 %249, %247
  %251 = add nsw i64 %246, -1
  %252 = trunc i64 %246 to i32
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %245, label %254, !llvm.loop !24

254:                                              ; preds = %245, %236
  %255 = phi i32 [ %240, %236 ], [ %250, %245 ]
  %256 = and i64 %205, 4294967295
  %257 = getelementptr inbounds i32, ptr %6, i64 %256
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %255
  %260 = add nsw i32 %259, %199
  %261 = icmp sgt i64 %197, 2
  %262 = add nsw i64 %198, -1
  %263 = add i32 %196, 1
  br i1 %261, label %195, label %264, !llvm.loop !25

264:                                              ; preds = %254, %192
  %265 = phi i32 [ %194, %192 ], [ %260, %254 ]
  %266 = icmp slt i32 %265, %5
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

269:                                              ; preds = %264
  %270 = load i8, ptr %26, align 1, !tbaa !11
  %271 = sext i32 %265 to i64
  %272 = getelementptr inbounds i8, ptr %24, i64 %271
  %273 = load i8, ptr %272, align 1, !tbaa !11
  %274 = add i8 %273, %270
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %193, 1
  br i1 %39, label %276, label %326

276:                                              ; preds = %269
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %44, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %42
  br i1 %318, label %326, label %285, !llvm.loop !26

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %269
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5444, label %192, !llvm.loop !27

328:                                              ; preds = %30
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5444

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %482

342:                                              ; preds = %328
  br i1 %332, label %343, label %5444

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %480
  %352 = phi i32 [ 0, %343 ], [ %432, %480 ]
  %353 = phi double [ 0.000000e+00, %343 ], [ %431, %480 ]
  %354 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %355, label %424

355:                                              ; preds = %351, %414
  %356 = phi i32 [ %423, %414 ], [ 0, %351 ]
  %357 = phi i64 [ %365, %414 ], [ %348, %351 ]
  %358 = phi i64 [ %422, %414 ], [ %347, %351 ]
  %359 = phi i32 [ %420, %414 ], [ %354, %351 ]
  %360 = sub i32 %346, %356
  %361 = tail call i32 @llvm.smin.i32(i32 %360, i32 0)
  %362 = sub i32 %360, %361
  %363 = zext i32 %362 to i64
  %364 = add nuw nsw i64 %363, 1
  %365 = add nsw i64 %357, -1
  %366 = icmp ult i32 %362, 31
  br i1 %366, label %402, label %367

367:                                              ; preds = %355
  %368 = and i64 %364, 8589934560
  %369 = sub i64 %358, %368
  br label %370

370:                                              ; preds = %370, %367
  %371 = phi i64 [ 0, %367 ], [ %394, %370 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %390, %370 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %391, %370 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %392, %370 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %393, %370 ]
  %376 = sub i64 %358, %371
  %377 = getelementptr inbounds i32, ptr %9, i64 %376
  %378 = getelementptr inbounds i32, ptr %377, i64 -7
  %379 = load <8 x i32>, ptr %378, align 4, !tbaa !5
  %380 = shufflevector <8 x i32> %379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %381 = getelementptr inbounds i32, ptr %377, i64 -15
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %377, i64 -23
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %377, i64 -31
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = mul <8 x i32> %380, %372
  %391 = mul <8 x i32> %383, %373
  %392 = mul <8 x i32> %386, %374
  %393 = mul <8 x i32> %389, %375
  %394 = add nuw i64 %371, 32
  %395 = icmp eq i64 %394, %368
  br i1 %395, label %396, label %370, !llvm.loop !28

396:                                              ; preds = %370
  %397 = mul <8 x i32> %391, %390
  %398 = mul <8 x i32> %392, %397
  %399 = mul <8 x i32> %393, %398
  %400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %399)
  %401 = icmp eq i64 %364, %368
  br i1 %401, label %414, label %402

402:                                              ; preds = %355, %396
  %403 = phi i64 [ %358, %355 ], [ %369, %396 ]
  %404 = phi i32 [ 1, %355 ], [ %400, %396 ]
  br label %405

405:                                              ; preds = %402, %405
  %406 = phi i64 [ %411, %405 ], [ %403, %402 ]
  %407 = phi i32 [ %410, %405 ], [ %404, %402 ]
  %408 = getelementptr inbounds i32, ptr %9, i64 %406
  %409 = load i32, ptr %408, align 4, !tbaa !5
  %410 = mul nsw i32 %409, %407
  %411 = add nsw i64 %406, -1
  %412 = trunc i64 %406 to i32
  %413 = icmp sgt i32 %412, 0
  br i1 %413, label %405, label %414, !llvm.loop !29

414:                                              ; preds = %405, %396
  %415 = phi i32 [ %400, %396 ], [ %410, %405 ]
  %416 = and i64 %365, 4294967295
  %417 = getelementptr inbounds i32, ptr %6, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !5
  %419 = mul nsw i32 %418, %415
  %420 = add nsw i32 %419, %359
  %421 = icmp sgt i64 %357, 2
  %422 = add nsw i64 %358, -1
  %423 = add i32 %356, 1
  br i1 %421, label %355, label %424, !llvm.loop !30

424:                                              ; preds = %414, %351
  %425 = phi i32 [ %354, %351 ], [ %420, %414 ]
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i8, ptr %24, i64 %426
  %428 = load i8, ptr %427, align 1, !tbaa !11
  %429 = load i8, ptr %26, align 1, !tbaa !11
  %430 = add i8 %429, %428
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = fadd fast double %353, 1.000000e+00
  %432 = add nuw nsw i32 %352, 1
  br i1 %345, label %433, label %480

433:                                              ; preds = %424
  %434 = load i32, ptr %4, align 4, !tbaa !5
  %435 = load i32, ptr %12, align 4, !tbaa !5
  %436 = add nsw i32 %435, -1
  %437 = icmp slt i32 %434, %436
  br i1 %437, label %457, label %438

438:                                              ; preds = %433
  %439 = icmp eq i32 %434, %436
  br i1 %439, label %440, label %473

440:                                              ; preds = %438
  store i32 0, ptr %4, align 4, !tbaa !5
  %441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %441, ptr %6, align 4, !tbaa !5
  br i1 %350, label %480, label %442

442:                                              ; preds = %440, %467
  %443 = phi i64 [ %471, %467 ], [ 1, %440 ]
  %444 = getelementptr inbounds i32, ptr %4, i64 %443
  %445 = load i32, ptr %444, align 4, !tbaa !5
  %446 = getelementptr inbounds i32, ptr %12, i64 %443
  %447 = load i32, ptr %446, align 4, !tbaa !5
  %448 = add nsw i32 %447, -1
  %449 = icmp slt i32 %445, %448
  br i1 %449, label %450, label %465

450:                                              ; preds = %442
  br i1 %437, label %457, label %451

451:                                              ; preds = %450
  %452 = getelementptr inbounds i32, ptr %7, i64 %443
  %453 = load i32, ptr %452, align 4, !tbaa !5
  %454 = getelementptr inbounds i32, ptr %6, i64 %443
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = add nsw i32 %455, %453
  store i32 %456, ptr %454, align 4, !tbaa !5
  br label %475

457:                                              ; preds = %433, %450
  %458 = phi i32 [ %445, %450 ], [ %434, %433 ]
  %459 = phi ptr [ %444, %450 ], [ %4, %433 ]
  %460 = phi i64 [ %443, %450 ], [ 0, %433 ]
  %461 = add nsw i32 %458, 1
  store i32 %461, ptr %459, align 4, !tbaa !5
  %462 = getelementptr inbounds i32, ptr %7, i64 %460
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %6, i64 %460
  br label %475

465:                                              ; preds = %442
  %466 = icmp eq i32 %445, %448
  br i1 %466, label %467, label %473

467:                                              ; preds = %465
  store i32 0, ptr %444, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %8, i64 %443
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %443
  store i32 %469, ptr %470, align 4, !tbaa !5
  %471 = add nuw nsw i64 %443, 1
  %472 = icmp eq i64 %471, %348
  br i1 %472, label %480, label %442, !llvm.loop !31

473:                                              ; preds = %438, %465
  %474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

475:                                              ; preds = %451, %457
  %476 = phi ptr [ %464, %457 ], [ %444, %451 ]
  %477 = phi i32 [ %463, %457 ], [ 1, %451 ]
  %478 = load i32, ptr %476, align 4, !tbaa !5
  %479 = add nsw i32 %478, %477
  store i32 %479, ptr %476, align 4, !tbaa !5
  br label %480

480:                                              ; preds = %467, %475, %440, %424
  %481 = icmp eq i32 %432, %5
  br i1 %481, label %5444, label %351, !llvm.loop !32

482:                                              ; preds = %334, %616
  %483 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %484 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %485, label %554

485:                                              ; preds = %482, %544
  %486 = phi i32 [ %553, %544 ], [ 0, %482 ]
  %487 = phi i64 [ %495, %544 ], [ %339, %482 ]
  %488 = phi i64 [ %552, %544 ], [ %338, %482 ]
  %489 = phi i32 [ %550, %544 ], [ %484, %482 ]
  %490 = sub i32 %337, %486
  %491 = tail call i32 @llvm.smin.i32(i32 %490, i32 0)
  %492 = sub i32 %490, %491
  %493 = zext i32 %492 to i64
  %494 = add nuw nsw i64 %493, 1
  %495 = add nsw i64 %487, -1
  %496 = icmp ult i32 %492, 31
  br i1 %496, label %532, label %497

497:                                              ; preds = %485
  %498 = and i64 %494, 8589934560
  %499 = sub i64 %488, %498
  br label %500

500:                                              ; preds = %500, %497
  %501 = phi i64 [ 0, %497 ], [ %524, %500 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %520, %500 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %521, %500 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %522, %500 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %523, %500 ]
  %506 = sub i64 %488, %501
  %507 = getelementptr inbounds i32, ptr %11, i64 %506
  %508 = getelementptr inbounds i32, ptr %507, i64 -7
  %509 = load <8 x i32>, ptr %508, align 4, !tbaa !5
  %510 = shufflevector <8 x i32> %509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %511 = getelementptr inbounds i32, ptr %507, i64 -15
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %507, i64 -23
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %507, i64 -31
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = mul <8 x i32> %510, %502
  %521 = mul <8 x i32> %513, %503
  %522 = mul <8 x i32> %516, %504
  %523 = mul <8 x i32> %519, %505
  %524 = add nuw i64 %501, 32
  %525 = icmp eq i64 %524, %498
  br i1 %525, label %526, label %500, !llvm.loop !33

526:                                              ; preds = %500
  %527 = mul <8 x i32> %521, %520
  %528 = mul <8 x i32> %522, %527
  %529 = mul <8 x i32> %523, %528
  %530 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %529)
  %531 = icmp eq i64 %494, %498
  br i1 %531, label %544, label %532

532:                                              ; preds = %485, %526
  %533 = phi i64 [ %488, %485 ], [ %499, %526 ]
  %534 = phi i32 [ 1, %485 ], [ %530, %526 ]
  br label %535

535:                                              ; preds = %532, %535
  %536 = phi i64 [ %541, %535 ], [ %533, %532 ]
  %537 = phi i32 [ %540, %535 ], [ %534, %532 ]
  %538 = getelementptr inbounds i32, ptr %11, i64 %536
  %539 = load i32, ptr %538, align 4, !tbaa !5
  %540 = mul nsw i32 %539, %537
  %541 = add nsw i64 %536, -1
  %542 = trunc i64 %536 to i32
  %543 = icmp sgt i32 %542, 0
  br i1 %543, label %535, label %544, !llvm.loop !34

544:                                              ; preds = %535, %526
  %545 = phi i32 [ %530, %526 ], [ %540, %535 ]
  %546 = and i64 %495, 4294967295
  %547 = getelementptr inbounds i32, ptr %6, i64 %546
  %548 = load i32, ptr %547, align 4, !tbaa !5
  %549 = mul nsw i32 %548, %545
  %550 = add nsw i32 %549, %489
  %551 = icmp sgt i64 %487, 2
  %552 = add nsw i64 %488, -1
  %553 = add i32 %486, 1
  br i1 %551, label %485, label %554, !llvm.loop !35

554:                                              ; preds = %544, %482
  %555 = phi i32 [ %484, %482 ], [ %550, %544 ]
  %556 = icmp slt i32 %555, %5
  br i1 %556, label %559, label %557

557:                                              ; preds = %554
  %558 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

559:                                              ; preds = %554
  %560 = sext i32 %555 to i64
  %561 = getelementptr inbounds i8, ptr %24, i64 %560
  %562 = load i8, ptr %561, align 1, !tbaa !11
  %563 = load i8, ptr %26, align 1, !tbaa !11
  %564 = add i8 %563, %562
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %483, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %559
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !36

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %559
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5444, label %482, !llvm.loop !37

618:                                              ; preds = %30
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = load i8, ptr %622, align 1, !tbaa !11
  %628 = zext i8 %627 to i32
  store i32 %628, ptr %624, align 4, !tbaa !5
  br label %5444

629:                                              ; preds = %620
  switch i32 %1, label %1220 [
    i32 1, label %630
    i32 0, label %928
  ]

630:                                              ; preds = %629
  %631 = getelementptr inbounds i32, ptr %3, i64 %19
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp eq i32 %632, 0
  %634 = icmp sgt i32 %5, 0
  br i1 %633, label %644, label %635

635:                                              ; preds = %630
  br i1 %634, label %636, label %5444

636:                                              ; preds = %635
  %637 = icmp sgt i32 %13, 1
  %638 = icmp sgt i32 %13, 0
  %639 = add i32 %13, -2
  %640 = zext i32 %639 to i64
  %641 = zext i32 %13 to i64
  %642 = add nuw i32 %5, 1
  %643 = icmp eq i32 %13, 1
  br label %791

644:                                              ; preds = %630
  br i1 %634, label %645, label %5444

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %653

653:                                              ; preds = %645, %789
  %654 = phi i32 [ 0, %645 ], [ %741, %789 ]
  %655 = phi double [ 0.000000e+00, %645 ], [ %740, %789 ]
  %656 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %657, label %726

657:                                              ; preds = %653, %716
  %658 = phi i32 [ %725, %716 ], [ 0, %653 ]
  %659 = phi i64 [ %667, %716 ], [ %650, %653 ]
  %660 = phi i64 [ %724, %716 ], [ %649, %653 ]
  %661 = phi i32 [ %722, %716 ], [ %656, %653 ]
  %662 = sub i32 %648, %658
  %663 = tail call i32 @llvm.smin.i32(i32 %662, i32 0)
  %664 = sub i32 %662, %663
  %665 = zext i32 %664 to i64
  %666 = add nuw nsw i64 %665, 1
  %667 = add nsw i64 %659, -1
  %668 = icmp ult i32 %664, 31
  br i1 %668, label %704, label %669

669:                                              ; preds = %657
  %670 = and i64 %666, 8589934560
  %671 = sub i64 %660, %670
  br label %672

672:                                              ; preds = %672, %669
  %673 = phi i64 [ 0, %669 ], [ %696, %672 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %692, %672 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %693, %672 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %694, %672 ]
  %677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %695, %672 ]
  %678 = sub i64 %660, %673
  %679 = getelementptr inbounds i32, ptr %9, i64 %678
  %680 = getelementptr inbounds i32, ptr %679, i64 -7
  %681 = load <8 x i32>, ptr %680, align 4, !tbaa !5
  %682 = shufflevector <8 x i32> %681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %683 = getelementptr inbounds i32, ptr %679, i64 -15
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = getelementptr inbounds i32, ptr %679, i64 -23
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %679, i64 -31
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = mul <8 x i32> %682, %674
  %693 = mul <8 x i32> %685, %675
  %694 = mul <8 x i32> %688, %676
  %695 = mul <8 x i32> %691, %677
  %696 = add nuw i64 %673, 32
  %697 = icmp eq i64 %696, %670
  br i1 %697, label %698, label %672, !llvm.loop !38

698:                                              ; preds = %672
  %699 = mul <8 x i32> %693, %692
  %700 = mul <8 x i32> %694, %699
  %701 = mul <8 x i32> %695, %700
  %702 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %701)
  %703 = icmp eq i64 %666, %670
  br i1 %703, label %716, label %704

704:                                              ; preds = %657, %698
  %705 = phi i64 [ %660, %657 ], [ %671, %698 ]
  %706 = phi i32 [ 1, %657 ], [ %702, %698 ]
  br label %707

707:                                              ; preds = %704, %707
  %708 = phi i64 [ %713, %707 ], [ %705, %704 ]
  %709 = phi i32 [ %712, %707 ], [ %706, %704 ]
  %710 = getelementptr inbounds i32, ptr %9, i64 %708
  %711 = load i32, ptr %710, align 4, !tbaa !5
  %712 = mul nsw i32 %711, %709
  %713 = add nsw i64 %708, -1
  %714 = trunc i64 %708 to i32
  %715 = icmp sgt i32 %714, 0
  br i1 %715, label %707, label %716, !llvm.loop !39

716:                                              ; preds = %707, %698
  %717 = phi i32 [ %702, %698 ], [ %712, %707 ]
  %718 = and i64 %667, 4294967295
  %719 = getelementptr inbounds i32, ptr %6, i64 %718
  %720 = load i32, ptr %719, align 4, !tbaa !5
  %721 = mul nsw i32 %720, %717
  %722 = add nsw i32 %721, %661
  %723 = icmp sgt i64 %659, 2
  %724 = add nsw i64 %660, -1
  %725 = add i32 %658, 1
  br i1 %723, label %657, label %726, !llvm.loop !40

726:                                              ; preds = %716, %653
  %727 = phi i32 [ %656, %653 ], [ %722, %716 ]
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds double, ptr %2, i64 %728
  %730 = load double, ptr %729, align 8, !tbaa !18
  %731 = getelementptr inbounds i8, ptr %622, i64 %728
  %732 = load i8, ptr %731, align 1, !tbaa !11
  %733 = load i32, ptr %624, align 4, !tbaa !5
  %734 = sitofp i32 %733 to double
  %735 = uitofp i8 %732 to double
  %736 = fmul fast double %730, %735
  %737 = tail call fast double @llvm.fabs.f64(double %736)
  %738 = fadd fast double %737, %734
  %739 = fptosi double %738 to i32
  store i32 %739, ptr %624, align 4, !tbaa !5
  %740 = fadd fast double %730, %655
  %741 = add nuw nsw i32 %654, 1
  br i1 %647, label %742, label %789

742:                                              ; preds = %726
  %743 = load i32, ptr %4, align 4, !tbaa !5
  %744 = load i32, ptr %12, align 4, !tbaa !5
  %745 = add nsw i32 %744, -1
  %746 = icmp slt i32 %743, %745
  br i1 %746, label %766, label %747

747:                                              ; preds = %742
  %748 = icmp eq i32 %743, %745
  br i1 %748, label %749, label %782

749:                                              ; preds = %747
  store i32 0, ptr %4, align 4, !tbaa !5
  %750 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %750, ptr %6, align 4, !tbaa !5
  br i1 %652, label %789, label %751

751:                                              ; preds = %749, %776
  %752 = phi i64 [ %780, %776 ], [ 1, %749 ]
  %753 = getelementptr inbounds i32, ptr %4, i64 %752
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = getelementptr inbounds i32, ptr %12, i64 %752
  %756 = load i32, ptr %755, align 4, !tbaa !5
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %754, %757
  br i1 %758, label %759, label %774

759:                                              ; preds = %751
  br i1 %746, label %766, label %760

760:                                              ; preds = %759
  %761 = getelementptr inbounds i32, ptr %7, i64 %752
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = getelementptr inbounds i32, ptr %6, i64 %752
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = add nsw i32 %764, %762
  store i32 %765, ptr %763, align 4, !tbaa !5
  br label %784

766:                                              ; preds = %742, %759
  %767 = phi i32 [ %754, %759 ], [ %743, %742 ]
  %768 = phi ptr [ %753, %759 ], [ %4, %742 ]
  %769 = phi i64 [ %752, %759 ], [ 0, %742 ]
  %770 = add nsw i32 %767, 1
  store i32 %770, ptr %768, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %7, i64 %769
  %772 = load i32, ptr %771, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %6, i64 %769
  br label %784

774:                                              ; preds = %751
  %775 = icmp eq i32 %754, %757
  br i1 %775, label %776, label %782

776:                                              ; preds = %774
  store i32 0, ptr %753, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %8, i64 %752
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %6, i64 %752
  store i32 %778, ptr %779, align 4, !tbaa !5
  %780 = add nuw nsw i64 %752, 1
  %781 = icmp eq i64 %780, %650
  br i1 %781, label %789, label %751, !llvm.loop !41

782:                                              ; preds = %747, %774
  %783 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

784:                                              ; preds = %760, %766
  %785 = phi ptr [ %773, %766 ], [ %753, %760 ]
  %786 = phi i32 [ %772, %766 ], [ 1, %760 ]
  %787 = load i32, ptr %785, align 4, !tbaa !5
  %788 = add nsw i32 %787, %786
  store i32 %788, ptr %785, align 4, !tbaa !5
  br label %789

789:                                              ; preds = %776, %784, %749, %726
  %790 = icmp eq i32 %741, %5
  br i1 %790, label %5444, label %653, !llvm.loop !42

791:                                              ; preds = %636, %926
  %792 = phi i32 [ 0, %636 ], [ %875, %926 ]
  %793 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %637, label %794, label %863

794:                                              ; preds = %791, %853
  %795 = phi i32 [ %862, %853 ], [ 0, %791 ]
  %796 = phi i64 [ %804, %853 ], [ %641, %791 ]
  %797 = phi i64 [ %861, %853 ], [ %640, %791 ]
  %798 = phi i32 [ %859, %853 ], [ %793, %791 ]
  %799 = sub i32 %639, %795
  %800 = tail call i32 @llvm.smin.i32(i32 %799, i32 0)
  %801 = sub i32 %799, %800
  %802 = zext i32 %801 to i64
  %803 = add nuw nsw i64 %802, 1
  %804 = add nsw i64 %796, -1
  %805 = icmp ult i32 %801, 31
  br i1 %805, label %841, label %806

806:                                              ; preds = %794
  %807 = and i64 %803, 8589934560
  %808 = sub i64 %797, %807
  br label %809

809:                                              ; preds = %809, %806
  %810 = phi i64 [ 0, %806 ], [ %833, %809 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %806 ], [ %829, %809 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %806 ], [ %830, %809 ]
  %813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %806 ], [ %831, %809 ]
  %814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %806 ], [ %832, %809 ]
  %815 = sub i64 %797, %810
  %816 = getelementptr inbounds i32, ptr %11, i64 %815
  %817 = getelementptr inbounds i32, ptr %816, i64 -7
  %818 = load <8 x i32>, ptr %817, align 4, !tbaa !5
  %819 = shufflevector <8 x i32> %818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %820 = getelementptr inbounds i32, ptr %816, i64 -15
  %821 = load <8 x i32>, ptr %820, align 4, !tbaa !5
  %822 = shufflevector <8 x i32> %821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %823 = getelementptr inbounds i32, ptr %816, i64 -23
  %824 = load <8 x i32>, ptr %823, align 4, !tbaa !5
  %825 = shufflevector <8 x i32> %824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %826 = getelementptr inbounds i32, ptr %816, i64 -31
  %827 = load <8 x i32>, ptr %826, align 4, !tbaa !5
  %828 = shufflevector <8 x i32> %827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %829 = mul <8 x i32> %819, %811
  %830 = mul <8 x i32> %822, %812
  %831 = mul <8 x i32> %825, %813
  %832 = mul <8 x i32> %828, %814
  %833 = add nuw i64 %810, 32
  %834 = icmp eq i64 %833, %807
  br i1 %834, label %835, label %809, !llvm.loop !43

835:                                              ; preds = %809
  %836 = mul <8 x i32> %830, %829
  %837 = mul <8 x i32> %831, %836
  %838 = mul <8 x i32> %832, %837
  %839 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %838)
  %840 = icmp eq i64 %803, %807
  br i1 %840, label %853, label %841

841:                                              ; preds = %794, %835
  %842 = phi i64 [ %797, %794 ], [ %808, %835 ]
  %843 = phi i32 [ 1, %794 ], [ %839, %835 ]
  br label %844

844:                                              ; preds = %841, %844
  %845 = phi i64 [ %850, %844 ], [ %842, %841 ]
  %846 = phi i32 [ %849, %844 ], [ %843, %841 ]
  %847 = getelementptr inbounds i32, ptr %11, i64 %845
  %848 = load i32, ptr %847, align 4, !tbaa !5
  %849 = mul nsw i32 %848, %846
  %850 = add nsw i64 %845, -1
  %851 = trunc i64 %845 to i32
  %852 = icmp sgt i32 %851, 0
  br i1 %852, label %844, label %853, !llvm.loop !44

853:                                              ; preds = %844, %835
  %854 = phi i32 [ %839, %835 ], [ %849, %844 ]
  %855 = and i64 %804, 4294967295
  %856 = getelementptr inbounds i32, ptr %6, i64 %855
  %857 = load i32, ptr %856, align 4, !tbaa !5
  %858 = mul nsw i32 %857, %854
  %859 = add nsw i32 %858, %798
  %860 = icmp sgt i64 %796, 2
  %861 = add nsw i64 %797, -1
  %862 = add i32 %795, 1
  br i1 %860, label %794, label %863, !llvm.loop !45

863:                                              ; preds = %853, %791
  %864 = phi i32 [ %793, %791 ], [ %859, %853 ]
  %865 = icmp slt i32 %864, %5
  br i1 %865, label %868, label %866

866:                                              ; preds = %863
  %867 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

868:                                              ; preds = %863
  %869 = load i32, ptr %624, align 4, !tbaa !5
  %870 = sext i32 %864 to i64
  %871 = getelementptr inbounds i8, ptr %622, i64 %870
  %872 = load i8, ptr %871, align 1, !tbaa !11
  %873 = zext i8 %872 to i32
  %874 = add i32 %869, %873
  store i32 %874, ptr %624, align 4, !tbaa !5
  %875 = add nuw nsw i32 %792, 1
  br i1 %638, label %876, label %926

876:                                              ; preds = %868
  %877 = load i32, ptr %4, align 4, !tbaa !5
  %878 = load i32, ptr %12, align 4, !tbaa !5
  %879 = add nsw i32 %878, -1
  %880 = icmp slt i32 %877, %879
  br i1 %880, label %903, label %881

881:                                              ; preds = %876
  %882 = icmp eq i32 %877, %879
  br i1 %882, label %883, label %919

883:                                              ; preds = %881
  store i32 0, ptr %4, align 4, !tbaa !5
  %884 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %884, ptr %6, align 4, !tbaa !5
  br i1 %643, label %926, label %885

885:                                              ; preds = %883, %913
  %886 = phi i64 [ %917, %913 ], [ 1, %883 ]
  %887 = getelementptr inbounds i32, ptr %4, i64 %886
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = getelementptr inbounds i32, ptr %12, i64 %886
  %890 = load i32, ptr %889, align 4, !tbaa !5
  %891 = add nsw i32 %890, -1
  %892 = icmp slt i32 %888, %891
  br i1 %892, label %893, label %911

893:                                              ; preds = %885
  br i1 %880, label %903, label %894

894:                                              ; preds = %893
  %895 = shl i64 %886, 32
  %896 = add i64 %895, -4294967296
  %897 = ashr exact i64 %896, 32
  %898 = getelementptr inbounds i32, ptr %7, i64 %897
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = getelementptr inbounds i32, ptr %6, i64 %886
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = add nsw i32 %901, %899
  store i32 %902, ptr %900, align 4, !tbaa !5
  br label %921

903:                                              ; preds = %876, %893
  %904 = phi i32 [ %888, %893 ], [ %877, %876 ]
  %905 = phi ptr [ %887, %893 ], [ %4, %876 ]
  %906 = phi i64 [ %886, %893 ], [ 0, %876 ]
  %907 = add nsw i32 %904, 1
  store i32 %907, ptr %905, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %7, i64 %906
  %909 = load i32, ptr %908, align 4, !tbaa !5
  %910 = getelementptr inbounds i32, ptr %6, i64 %906
  br label %921

911:                                              ; preds = %885
  %912 = icmp eq i32 %888, %891
  br i1 %912, label %913, label %919

913:                                              ; preds = %911
  store i32 0, ptr %887, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %8, i64 %886
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %6, i64 %886
  store i32 %915, ptr %916, align 4, !tbaa !5
  %917 = add nuw nsw i64 %886, 1
  %918 = icmp eq i64 %917, %641
  br i1 %918, label %926, label %885, !llvm.loop !46

919:                                              ; preds = %881, %911
  %920 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

921:                                              ; preds = %894, %903
  %922 = phi ptr [ %910, %903 ], [ %887, %894 ]
  %923 = phi i32 [ %909, %903 ], [ 1, %894 ]
  %924 = load i32, ptr %922, align 4, !tbaa !5
  %925 = add nsw i32 %924, %923
  store i32 %925, ptr %922, align 4, !tbaa !5
  br label %926

926:                                              ; preds = %913, %921, %883, %868
  %927 = icmp eq i32 %875, %5
  br i1 %927, label %5444, label %791, !llvm.loop !47

928:                                              ; preds = %629
  %929 = getelementptr inbounds i32, ptr %3, i64 %19
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = icmp eq i32 %930, 0
  %932 = icmp sgt i32 %5, 0
  br i1 %931, label %942, label %933

933:                                              ; preds = %928
  br i1 %932, label %934, label %5444

934:                                              ; preds = %933
  %935 = icmp sgt i32 %13, 1
  %936 = icmp sgt i32 %13, 0
  %937 = add i32 %13, -2
  %938 = zext i32 %937 to i64
  %939 = zext i32 %13 to i64
  %940 = add nuw i32 %5, 1
  %941 = icmp eq i32 %13, 1
  br label %1083

942:                                              ; preds = %928
  br i1 %932, label %943, label %5444

943:                                              ; preds = %942
  %944 = icmp sgt i32 %13, 1
  %945 = icmp sgt i32 %13, 0
  %946 = add i32 %13, -2
  %947 = zext i32 %946 to i64
  %948 = zext i32 %13 to i64
  %949 = add nuw i32 %5, 1
  %950 = icmp eq i32 %13, 1
  br label %951

951:                                              ; preds = %943, %1081
  %952 = phi i32 [ 0, %943 ], [ %1033, %1081 ]
  %953 = phi double [ 0.000000e+00, %943 ], [ %1032, %1081 ]
  %954 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %944, label %955, label %1024

955:                                              ; preds = %951, %1014
  %956 = phi i32 [ %1023, %1014 ], [ 0, %951 ]
  %957 = phi i64 [ %965, %1014 ], [ %948, %951 ]
  %958 = phi i64 [ %1022, %1014 ], [ %947, %951 ]
  %959 = phi i32 [ %1020, %1014 ], [ %954, %951 ]
  %960 = sub i32 %946, %956
  %961 = tail call i32 @llvm.smin.i32(i32 %960, i32 0)
  %962 = sub i32 %960, %961
  %963 = zext i32 %962 to i64
  %964 = add nuw nsw i64 %963, 1
  %965 = add nsw i64 %957, -1
  %966 = icmp ult i32 %962, 31
  br i1 %966, label %1002, label %967

967:                                              ; preds = %955
  %968 = and i64 %964, 8589934560
  %969 = sub i64 %958, %968
  br label %970

970:                                              ; preds = %970, %967
  %971 = phi i64 [ 0, %967 ], [ %994, %970 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %967 ], [ %990, %970 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %967 ], [ %991, %970 ]
  %974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %967 ], [ %992, %970 ]
  %975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %967 ], [ %993, %970 ]
  %976 = sub i64 %958, %971
  %977 = getelementptr inbounds i32, ptr %9, i64 %976
  %978 = getelementptr inbounds i32, ptr %977, i64 -7
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %977, i64 -15
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = getelementptr inbounds i32, ptr %977, i64 -23
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = getelementptr inbounds i32, ptr %977, i64 -31
  %988 = load <8 x i32>, ptr %987, align 4, !tbaa !5
  %989 = shufflevector <8 x i32> %988, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %990 = mul <8 x i32> %980, %972
  %991 = mul <8 x i32> %983, %973
  %992 = mul <8 x i32> %986, %974
  %993 = mul <8 x i32> %989, %975
  %994 = add nuw i64 %971, 32
  %995 = icmp eq i64 %994, %968
  br i1 %995, label %996, label %970, !llvm.loop !48

996:                                              ; preds = %970
  %997 = mul <8 x i32> %991, %990
  %998 = mul <8 x i32> %992, %997
  %999 = mul <8 x i32> %993, %998
  %1000 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %999)
  %1001 = icmp eq i64 %964, %968
  br i1 %1001, label %1014, label %1002

1002:                                             ; preds = %955, %996
  %1003 = phi i64 [ %958, %955 ], [ %969, %996 ]
  %1004 = phi i32 [ 1, %955 ], [ %1000, %996 ]
  br label %1005

1005:                                             ; preds = %1002, %1005
  %1006 = phi i64 [ %1011, %1005 ], [ %1003, %1002 ]
  %1007 = phi i32 [ %1010, %1005 ], [ %1004, %1002 ]
  %1008 = getelementptr inbounds i32, ptr %9, i64 %1006
  %1009 = load i32, ptr %1008, align 4, !tbaa !5
  %1010 = mul nsw i32 %1009, %1007
  %1011 = add nsw i64 %1006, -1
  %1012 = trunc i64 %1006 to i32
  %1013 = icmp sgt i32 %1012, 0
  br i1 %1013, label %1005, label %1014, !llvm.loop !49

1014:                                             ; preds = %1005, %996
  %1015 = phi i32 [ %1000, %996 ], [ %1010, %1005 ]
  %1016 = and i64 %965, 4294967295
  %1017 = getelementptr inbounds i32, ptr %6, i64 %1016
  %1018 = load i32, ptr %1017, align 4, !tbaa !5
  %1019 = mul nsw i32 %1018, %1015
  %1020 = add nsw i32 %1019, %959
  %1021 = icmp sgt i64 %957, 2
  %1022 = add nsw i64 %958, -1
  %1023 = add i32 %956, 1
  br i1 %1021, label %955, label %1024, !llvm.loop !50

1024:                                             ; preds = %1014, %951
  %1025 = phi i32 [ %954, %951 ], [ %1020, %1014 ]
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds i8, ptr %622, i64 %1026
  %1028 = load i8, ptr %1027, align 1, !tbaa !11
  %1029 = zext i8 %1028 to i32
  %1030 = load i32, ptr %624, align 4, !tbaa !5
  %1031 = add nsw i32 %1030, %1029
  store i32 %1031, ptr %624, align 4, !tbaa !5
  %1032 = fadd fast double %953, 1.000000e+00
  %1033 = add nuw nsw i32 %952, 1
  br i1 %945, label %1034, label %1081

1034:                                             ; preds = %1024
  %1035 = load i32, ptr %4, align 4, !tbaa !5
  %1036 = load i32, ptr %12, align 4, !tbaa !5
  %1037 = add nsw i32 %1036, -1
  %1038 = icmp slt i32 %1035, %1037
  br i1 %1038, label %1058, label %1039

1039:                                             ; preds = %1034
  %1040 = icmp eq i32 %1035, %1037
  br i1 %1040, label %1041, label %1074

1041:                                             ; preds = %1039
  store i32 0, ptr %4, align 4, !tbaa !5
  %1042 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1042, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1081, label %1043

1043:                                             ; preds = %1041, %1068
  %1044 = phi i64 [ %1072, %1068 ], [ 1, %1041 ]
  %1045 = getelementptr inbounds i32, ptr %4, i64 %1044
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = getelementptr inbounds i32, ptr %12, i64 %1044
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, -1
  %1050 = icmp slt i32 %1046, %1049
  br i1 %1050, label %1051, label %1066

1051:                                             ; preds = %1043
  br i1 %1038, label %1058, label %1052

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds i32, ptr %7, i64 %1044
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1044
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, %1054
  store i32 %1057, ptr %1055, align 4, !tbaa !5
  br label %1076

1058:                                             ; preds = %1034, %1051
  %1059 = phi i32 [ %1046, %1051 ], [ %1035, %1034 ]
  %1060 = phi ptr [ %1045, %1051 ], [ %4, %1034 ]
  %1061 = phi i64 [ %1044, %1051 ], [ 0, %1034 ]
  %1062 = add nsw i32 %1059, 1
  store i32 %1062, ptr %1060, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %6, i64 %1061
  br label %1076

1066:                                             ; preds = %1043
  %1067 = icmp eq i32 %1046, %1049
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1066
  store i32 0, ptr %1045, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %8, i64 %1044
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1044
  store i32 %1070, ptr %1071, align 4, !tbaa !5
  %1072 = add nuw nsw i64 %1044, 1
  %1073 = icmp eq i64 %1072, %948
  br i1 %1073, label %1081, label %1043, !llvm.loop !51

1074:                                             ; preds = %1039, %1066
  %1075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1076:                                             ; preds = %1052, %1058
  %1077 = phi ptr [ %1065, %1058 ], [ %1045, %1052 ]
  %1078 = phi i32 [ %1064, %1058 ], [ 1, %1052 ]
  %1079 = load i32, ptr %1077, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, %1078
  store i32 %1080, ptr %1077, align 4, !tbaa !5
  br label %1081

1081:                                             ; preds = %1068, %1076, %1041, %1024
  %1082 = icmp eq i32 %1033, %5
  br i1 %1082, label %5444, label %951, !llvm.loop !52

1083:                                             ; preds = %934, %1218
  %1084 = phi i32 [ 0, %934 ], [ %1167, %1218 ]
  %1085 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %935, label %1086, label %1155

1086:                                             ; preds = %1083, %1145
  %1087 = phi i32 [ %1154, %1145 ], [ 0, %1083 ]
  %1088 = phi i64 [ %1096, %1145 ], [ %939, %1083 ]
  %1089 = phi i64 [ %1153, %1145 ], [ %938, %1083 ]
  %1090 = phi i32 [ %1151, %1145 ], [ %1085, %1083 ]
  %1091 = sub i32 %937, %1087
  %1092 = tail call i32 @llvm.smin.i32(i32 %1091, i32 0)
  %1093 = sub i32 %1091, %1092
  %1094 = zext i32 %1093 to i64
  %1095 = add nuw nsw i64 %1094, 1
  %1096 = add nsw i64 %1088, -1
  %1097 = icmp ult i32 %1093, 31
  br i1 %1097, label %1133, label %1098

1098:                                             ; preds = %1086
  %1099 = and i64 %1095, 8589934560
  %1100 = sub i64 %1089, %1099
  br label %1101

1101:                                             ; preds = %1101, %1098
  %1102 = phi i64 [ 0, %1098 ], [ %1125, %1101 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1121, %1101 ]
  %1104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1122, %1101 ]
  %1105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1123, %1101 ]
  %1106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1124, %1101 ]
  %1107 = sub i64 %1089, %1102
  %1108 = getelementptr inbounds i32, ptr %11, i64 %1107
  %1109 = getelementptr inbounds i32, ptr %1108, i64 -7
  %1110 = load <8 x i32>, ptr %1109, align 4, !tbaa !5
  %1111 = shufflevector <8 x i32> %1110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1112 = getelementptr inbounds i32, ptr %1108, i64 -15
  %1113 = load <8 x i32>, ptr %1112, align 4, !tbaa !5
  %1114 = shufflevector <8 x i32> %1113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1115 = getelementptr inbounds i32, ptr %1108, i64 -23
  %1116 = load <8 x i32>, ptr %1115, align 4, !tbaa !5
  %1117 = shufflevector <8 x i32> %1116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1118 = getelementptr inbounds i32, ptr %1108, i64 -31
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = mul <8 x i32> %1111, %1103
  %1122 = mul <8 x i32> %1114, %1104
  %1123 = mul <8 x i32> %1117, %1105
  %1124 = mul <8 x i32> %1120, %1106
  %1125 = add nuw i64 %1102, 32
  %1126 = icmp eq i64 %1125, %1099
  br i1 %1126, label %1127, label %1101, !llvm.loop !53

1127:                                             ; preds = %1101
  %1128 = mul <8 x i32> %1122, %1121
  %1129 = mul <8 x i32> %1123, %1128
  %1130 = mul <8 x i32> %1124, %1129
  %1131 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1130)
  %1132 = icmp eq i64 %1095, %1099
  br i1 %1132, label %1145, label %1133

1133:                                             ; preds = %1086, %1127
  %1134 = phi i64 [ %1089, %1086 ], [ %1100, %1127 ]
  %1135 = phi i32 [ 1, %1086 ], [ %1131, %1127 ]
  br label %1136

1136:                                             ; preds = %1133, %1136
  %1137 = phi i64 [ %1142, %1136 ], [ %1134, %1133 ]
  %1138 = phi i32 [ %1141, %1136 ], [ %1135, %1133 ]
  %1139 = getelementptr inbounds i32, ptr %11, i64 %1137
  %1140 = load i32, ptr %1139, align 4, !tbaa !5
  %1141 = mul nsw i32 %1140, %1138
  %1142 = add nsw i64 %1137, -1
  %1143 = trunc i64 %1137 to i32
  %1144 = icmp sgt i32 %1143, 0
  br i1 %1144, label %1136, label %1145, !llvm.loop !54

1145:                                             ; preds = %1136, %1127
  %1146 = phi i32 [ %1131, %1127 ], [ %1141, %1136 ]
  %1147 = and i64 %1096, 4294967295
  %1148 = getelementptr inbounds i32, ptr %6, i64 %1147
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1146
  %1151 = add nsw i32 %1150, %1090
  %1152 = icmp sgt i64 %1088, 2
  %1153 = add nsw i64 %1089, -1
  %1154 = add i32 %1087, 1
  br i1 %1152, label %1086, label %1155, !llvm.loop !55

1155:                                             ; preds = %1145, %1083
  %1156 = phi i32 [ %1085, %1083 ], [ %1151, %1145 ]
  %1157 = icmp slt i32 %1156, %5
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1155
  %1159 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

1160:                                             ; preds = %1155
  %1161 = sext i32 %1156 to i64
  %1162 = getelementptr inbounds i8, ptr %622, i64 %1161
  %1163 = load i8, ptr %1162, align 1, !tbaa !11
  %1164 = zext i8 %1163 to i32
  %1165 = load i32, ptr %624, align 4, !tbaa !5
  %1166 = add nsw i32 %1165, %1164
  store i32 %1166, ptr %624, align 4, !tbaa !5
  %1167 = add nuw nsw i32 %1084, 1
  br i1 %936, label %1168, label %1218

1168:                                             ; preds = %1160
  %1169 = load i32, ptr %4, align 4, !tbaa !5
  %1170 = load i32, ptr %12, align 4, !tbaa !5
  %1171 = add nsw i32 %1170, -1
  %1172 = icmp slt i32 %1169, %1171
  br i1 %1172, label %1195, label %1173

1173:                                             ; preds = %1168
  %1174 = icmp eq i32 %1169, %1171
  br i1 %1174, label %1175, label %1211

1175:                                             ; preds = %1173
  store i32 0, ptr %4, align 4, !tbaa !5
  %1176 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1176, ptr %6, align 4, !tbaa !5
  br i1 %941, label %1218, label %1177

1177:                                             ; preds = %1175, %1205
  %1178 = phi i64 [ %1209, %1205 ], [ 1, %1175 ]
  %1179 = getelementptr inbounds i32, ptr %4, i64 %1178
  %1180 = load i32, ptr %1179, align 4, !tbaa !5
  %1181 = getelementptr inbounds i32, ptr %12, i64 %1178
  %1182 = load i32, ptr %1181, align 4, !tbaa !5
  %1183 = add nsw i32 %1182, -1
  %1184 = icmp slt i32 %1180, %1183
  br i1 %1184, label %1185, label %1203

1185:                                             ; preds = %1177
  br i1 %1172, label %1195, label %1186

1186:                                             ; preds = %1185
  %1187 = shl i64 %1178, 32
  %1188 = add i64 %1187, -4294967296
  %1189 = ashr exact i64 %1188, 32
  %1190 = getelementptr inbounds i32, ptr %7, i64 %1189
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %6, i64 %1178
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = add nsw i32 %1193, %1191
  store i32 %1194, ptr %1192, align 4, !tbaa !5
  br label %1213

1195:                                             ; preds = %1168, %1185
  %1196 = phi i32 [ %1180, %1185 ], [ %1169, %1168 ]
  %1197 = phi ptr [ %1179, %1185 ], [ %4, %1168 ]
  %1198 = phi i64 [ %1178, %1185 ], [ 0, %1168 ]
  %1199 = add nsw i32 %1196, 1
  store i32 %1199, ptr %1197, align 4, !tbaa !5
  %1200 = getelementptr inbounds i32, ptr %7, i64 %1198
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %6, i64 %1198
  br label %1213

1203:                                             ; preds = %1177
  %1204 = icmp eq i32 %1180, %1183
  br i1 %1204, label %1205, label %1211

1205:                                             ; preds = %1203
  store i32 0, ptr %1179, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %8, i64 %1178
  %1207 = load i32, ptr %1206, align 4, !tbaa !5
  %1208 = getelementptr inbounds i32, ptr %6, i64 %1178
  store i32 %1207, ptr %1208, align 4, !tbaa !5
  %1209 = add nuw nsw i64 %1178, 1
  %1210 = icmp eq i64 %1209, %939
  br i1 %1210, label %1218, label %1177, !llvm.loop !56

1211:                                             ; preds = %1173, %1203
  %1212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1213:                                             ; preds = %1186, %1195
  %1214 = phi ptr [ %1202, %1195 ], [ %1179, %1186 ]
  %1215 = phi i32 [ %1201, %1195 ], [ 1, %1186 ]
  %1216 = load i32, ptr %1214, align 4, !tbaa !5
  %1217 = add nsw i32 %1216, %1215
  store i32 %1217, ptr %1214, align 4, !tbaa !5
  br label %1218

1218:                                             ; preds = %1205, %1213, %1175, %1160
  %1219 = icmp eq i32 %1167, %5
  br i1 %1219, label %5444, label %1083, !llvm.loop !57

1220:                                             ; preds = %629
  %1221 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

1222:                                             ; preds = %18
  %1223 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1224 = load ptr, ptr %1223, align 8, !tbaa !9
  %1225 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1226 = load ptr, ptr %1225, align 8, !tbaa !9
  store i8 0, ptr %1226, align 1, !tbaa !11
  %1227 = icmp eq i32 %13, 0
  br i1 %1227, label %1228, label %1231

1228:                                             ; preds = %1222
  %1229 = load i8, ptr %1224, align 1, !tbaa !11
  %1230 = tail call i8 @llvm.abs.i8(i8 %1229, i1 false)
  store i8 %1230, ptr %1226, align 1, !tbaa !11
  br label %5444

1231:                                             ; preds = %1222
  switch i32 %1, label %1827 [
    i32 1, label %1232
    i32 0, label %1535
  ]

1232:                                             ; preds = %1231
  %1233 = getelementptr inbounds i32, ptr %3, i64 %19
  %1234 = load i32, ptr %1233, align 4, !tbaa !5
  %1235 = icmp eq i32 %1234, 0
  %1236 = icmp sgt i32 %5, 0
  br i1 %1235, label %1246, label %1237

1237:                                             ; preds = %1232
  br i1 %1236, label %1238, label %5444

1238:                                             ; preds = %1237
  %1239 = icmp sgt i32 %13, 1
  %1240 = icmp sgt i32 %13, 0
  %1241 = add i32 %13, -2
  %1242 = zext i32 %1241 to i64
  %1243 = zext i32 %13 to i64
  %1244 = add nuw i32 %5, 1
  %1245 = icmp eq i32 %13, 1
  br label %1393

1246:                                             ; preds = %1232
  br i1 %1236, label %1247, label %5444

1247:                                             ; preds = %1246
  %1248 = icmp sgt i32 %13, 1
  %1249 = icmp sgt i32 %13, 0
  %1250 = add i32 %13, -2
  %1251 = zext i32 %1250 to i64
  %1252 = zext i32 %13 to i64
  %1253 = add nuw i32 %5, 1
  %1254 = icmp eq i32 %13, 1
  br label %1255

1255:                                             ; preds = %1247, %1391
  %1256 = phi i32 [ 0, %1247 ], [ %1343, %1391 ]
  %1257 = phi double [ 0.000000e+00, %1247 ], [ %1342, %1391 ]
  %1258 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1248, label %1259, label %1328

1259:                                             ; preds = %1255, %1318
  %1260 = phi i32 [ %1327, %1318 ], [ 0, %1255 ]
  %1261 = phi i64 [ %1269, %1318 ], [ %1252, %1255 ]
  %1262 = phi i64 [ %1326, %1318 ], [ %1251, %1255 ]
  %1263 = phi i32 [ %1324, %1318 ], [ %1258, %1255 ]
  %1264 = sub i32 %1250, %1260
  %1265 = tail call i32 @llvm.smin.i32(i32 %1264, i32 0)
  %1266 = sub i32 %1264, %1265
  %1267 = zext i32 %1266 to i64
  %1268 = add nuw nsw i64 %1267, 1
  %1269 = add nsw i64 %1261, -1
  %1270 = icmp ult i32 %1266, 31
  br i1 %1270, label %1306, label %1271

1271:                                             ; preds = %1259
  %1272 = and i64 %1268, 8589934560
  %1273 = sub i64 %1262, %1272
  br label %1274

1274:                                             ; preds = %1274, %1271
  %1275 = phi i64 [ 0, %1271 ], [ %1298, %1274 ]
  %1276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1294, %1274 ]
  %1277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1295, %1274 ]
  %1278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1296, %1274 ]
  %1279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1271 ], [ %1297, %1274 ]
  %1280 = sub i64 %1262, %1275
  %1281 = getelementptr inbounds i32, ptr %9, i64 %1280
  %1282 = getelementptr inbounds i32, ptr %1281, i64 -7
  %1283 = load <8 x i32>, ptr %1282, align 4, !tbaa !5
  %1284 = shufflevector <8 x i32> %1283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1285 = getelementptr inbounds i32, ptr %1281, i64 -15
  %1286 = load <8 x i32>, ptr %1285, align 4, !tbaa !5
  %1287 = shufflevector <8 x i32> %1286, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1288 = getelementptr inbounds i32, ptr %1281, i64 -23
  %1289 = load <8 x i32>, ptr %1288, align 4, !tbaa !5
  %1290 = shufflevector <8 x i32> %1289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1291 = getelementptr inbounds i32, ptr %1281, i64 -31
  %1292 = load <8 x i32>, ptr %1291, align 4, !tbaa !5
  %1293 = shufflevector <8 x i32> %1292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1294 = mul <8 x i32> %1284, %1276
  %1295 = mul <8 x i32> %1287, %1277
  %1296 = mul <8 x i32> %1290, %1278
  %1297 = mul <8 x i32> %1293, %1279
  %1298 = add nuw i64 %1275, 32
  %1299 = icmp eq i64 %1298, %1272
  br i1 %1299, label %1300, label %1274, !llvm.loop !58

1300:                                             ; preds = %1274
  %1301 = mul <8 x i32> %1295, %1294
  %1302 = mul <8 x i32> %1296, %1301
  %1303 = mul <8 x i32> %1297, %1302
  %1304 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1303)
  %1305 = icmp eq i64 %1268, %1272
  br i1 %1305, label %1318, label %1306

1306:                                             ; preds = %1259, %1300
  %1307 = phi i64 [ %1262, %1259 ], [ %1273, %1300 ]
  %1308 = phi i32 [ 1, %1259 ], [ %1304, %1300 ]
  br label %1309

1309:                                             ; preds = %1306, %1309
  %1310 = phi i64 [ %1315, %1309 ], [ %1307, %1306 ]
  %1311 = phi i32 [ %1314, %1309 ], [ %1308, %1306 ]
  %1312 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1313 = load i32, ptr %1312, align 4, !tbaa !5
  %1314 = mul nsw i32 %1313, %1311
  %1315 = add nsw i64 %1310, -1
  %1316 = trunc i64 %1310 to i32
  %1317 = icmp sgt i32 %1316, 0
  br i1 %1317, label %1309, label %1318, !llvm.loop !59

1318:                                             ; preds = %1309, %1300
  %1319 = phi i32 [ %1304, %1300 ], [ %1314, %1309 ]
  %1320 = and i64 %1269, 4294967295
  %1321 = getelementptr inbounds i32, ptr %6, i64 %1320
  %1322 = load i32, ptr %1321, align 4, !tbaa !5
  %1323 = mul nsw i32 %1322, %1319
  %1324 = add nsw i32 %1323, %1263
  %1325 = icmp sgt i64 %1261, 2
  %1326 = add nsw i64 %1262, -1
  %1327 = add i32 %1260, 1
  br i1 %1325, label %1259, label %1328, !llvm.loop !60

1328:                                             ; preds = %1318, %1255
  %1329 = phi i32 [ %1258, %1255 ], [ %1324, %1318 ]
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds double, ptr %2, i64 %1330
  %1332 = load double, ptr %1331, align 8, !tbaa !18
  %1333 = getelementptr inbounds i8, ptr %1224, i64 %1330
  %1334 = load i8, ptr %1333, align 1, !tbaa !11
  %1335 = load i8, ptr %1226, align 1, !tbaa !11
  %1336 = sitofp i8 %1335 to double
  %1337 = sitofp i8 %1334 to double
  %1338 = fmul fast double %1332, %1337
  %1339 = tail call fast double @llvm.fabs.f64(double %1338)
  %1340 = fadd fast double %1339, %1336
  %1341 = fptosi double %1340 to i8
  store i8 %1341, ptr %1226, align 1, !tbaa !11
  %1342 = fadd fast double %1332, %1257
  %1343 = add nuw nsw i32 %1256, 1
  br i1 %1249, label %1344, label %1391

1344:                                             ; preds = %1328
  %1345 = load i32, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %12, align 4, !tbaa !5
  %1347 = add nsw i32 %1346, -1
  %1348 = icmp slt i32 %1345, %1347
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1344
  %1350 = icmp eq i32 %1345, %1347
  br i1 %1350, label %1351, label %1384

1351:                                             ; preds = %1349
  store i32 0, ptr %4, align 4, !tbaa !5
  %1352 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1352, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1391, label %1353

1353:                                             ; preds = %1351, %1378
  %1354 = phi i64 [ %1382, %1378 ], [ 1, %1351 ]
  %1355 = getelementptr inbounds i32, ptr %4, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = getelementptr inbounds i32, ptr %12, i64 %1354
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = add nsw i32 %1358, -1
  %1360 = icmp slt i32 %1356, %1359
  br i1 %1360, label %1361, label %1376

1361:                                             ; preds = %1353
  br i1 %1348, label %1368, label %1362

1362:                                             ; preds = %1361
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1354
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, %1364
  store i32 %1367, ptr %1365, align 4, !tbaa !5
  br label %1386

1368:                                             ; preds = %1344, %1361
  %1369 = phi i32 [ %1356, %1361 ], [ %1345, %1344 ]
  %1370 = phi ptr [ %1355, %1361 ], [ %4, %1344 ]
  %1371 = phi i64 [ %1354, %1361 ], [ 0, %1344 ]
  %1372 = add nsw i32 %1369, 1
  store i32 %1372, ptr %1370, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1371
  br label %1386

1376:                                             ; preds = %1353
  %1377 = icmp eq i32 %1356, %1359
  br i1 %1377, label %1378, label %1384

1378:                                             ; preds = %1376
  store i32 0, ptr %1355, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %8, i64 %1354
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1354
  store i32 %1380, ptr %1381, align 4, !tbaa !5
  %1382 = add nuw nsw i64 %1354, 1
  %1383 = icmp eq i64 %1382, %1252
  br i1 %1383, label %1391, label %1353, !llvm.loop !61

1384:                                             ; preds = %1349, %1376
  %1385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1386:                                             ; preds = %1362, %1368
  %1387 = phi ptr [ %1375, %1368 ], [ %1355, %1362 ]
  %1388 = phi i32 [ %1374, %1368 ], [ 1, %1362 ]
  %1389 = load i32, ptr %1387, align 4, !tbaa !5
  %1390 = add nsw i32 %1389, %1388
  store i32 %1390, ptr %1387, align 4, !tbaa !5
  br label %1391

1391:                                             ; preds = %1378, %1386, %1351, %1328
  %1392 = icmp eq i32 %1343, %5
  br i1 %1392, label %5444, label %1255, !llvm.loop !62

1393:                                             ; preds = %1238, %1533
  %1394 = phi i32 [ 0, %1238 ], [ %1482, %1533 ]
  %1395 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1239, label %1396, label %1465

1396:                                             ; preds = %1393, %1455
  %1397 = phi i32 [ %1464, %1455 ], [ 0, %1393 ]
  %1398 = phi i64 [ %1406, %1455 ], [ %1243, %1393 ]
  %1399 = phi i64 [ %1463, %1455 ], [ %1242, %1393 ]
  %1400 = phi i32 [ %1461, %1455 ], [ %1395, %1393 ]
  %1401 = sub i32 %1241, %1397
  %1402 = tail call i32 @llvm.smin.i32(i32 %1401, i32 0)
  %1403 = sub i32 %1401, %1402
  %1404 = zext i32 %1403 to i64
  %1405 = add nuw nsw i64 %1404, 1
  %1406 = add nsw i64 %1398, -1
  %1407 = icmp ult i32 %1403, 31
  br i1 %1407, label %1443, label %1408

1408:                                             ; preds = %1396
  %1409 = and i64 %1405, 8589934560
  %1410 = sub i64 %1399, %1409
  br label %1411

1411:                                             ; preds = %1411, %1408
  %1412 = phi i64 [ 0, %1408 ], [ %1435, %1411 ]
  %1413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1431, %1411 ]
  %1414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1432, %1411 ]
  %1415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1433, %1411 ]
  %1416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1434, %1411 ]
  %1417 = sub i64 %1399, %1412
  %1418 = getelementptr inbounds i32, ptr %11, i64 %1417
  %1419 = getelementptr inbounds i32, ptr %1418, i64 -7
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1418, i64 -15
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = getelementptr inbounds i32, ptr %1418, i64 -23
  %1426 = load <8 x i32>, ptr %1425, align 4, !tbaa !5
  %1427 = shufflevector <8 x i32> %1426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1428 = getelementptr inbounds i32, ptr %1418, i64 -31
  %1429 = load <8 x i32>, ptr %1428, align 4, !tbaa !5
  %1430 = shufflevector <8 x i32> %1429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1431 = mul <8 x i32> %1421, %1413
  %1432 = mul <8 x i32> %1424, %1414
  %1433 = mul <8 x i32> %1427, %1415
  %1434 = mul <8 x i32> %1430, %1416
  %1435 = add nuw i64 %1412, 32
  %1436 = icmp eq i64 %1435, %1409
  br i1 %1436, label %1437, label %1411, !llvm.loop !63

1437:                                             ; preds = %1411
  %1438 = mul <8 x i32> %1432, %1431
  %1439 = mul <8 x i32> %1433, %1438
  %1440 = mul <8 x i32> %1434, %1439
  %1441 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1440)
  %1442 = icmp eq i64 %1405, %1409
  br i1 %1442, label %1455, label %1443

1443:                                             ; preds = %1396, %1437
  %1444 = phi i64 [ %1399, %1396 ], [ %1410, %1437 ]
  %1445 = phi i32 [ 1, %1396 ], [ %1441, %1437 ]
  br label %1446

1446:                                             ; preds = %1443, %1446
  %1447 = phi i64 [ %1452, %1446 ], [ %1444, %1443 ]
  %1448 = phi i32 [ %1451, %1446 ], [ %1445, %1443 ]
  %1449 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1450 = load i32, ptr %1449, align 4, !tbaa !5
  %1451 = mul nsw i32 %1450, %1448
  %1452 = add nsw i64 %1447, -1
  %1453 = trunc i64 %1447 to i32
  %1454 = icmp sgt i32 %1453, 0
  br i1 %1454, label %1446, label %1455, !llvm.loop !64

1455:                                             ; preds = %1446, %1437
  %1456 = phi i32 [ %1441, %1437 ], [ %1451, %1446 ]
  %1457 = and i64 %1406, 4294967295
  %1458 = getelementptr inbounds i32, ptr %6, i64 %1457
  %1459 = load i32, ptr %1458, align 4, !tbaa !5
  %1460 = mul nsw i32 %1459, %1456
  %1461 = add nsw i32 %1460, %1400
  %1462 = icmp sgt i64 %1398, 2
  %1463 = add nsw i64 %1399, -1
  %1464 = add i32 %1397, 1
  br i1 %1462, label %1396, label %1465, !llvm.loop !65

1465:                                             ; preds = %1455, %1393
  %1466 = phi i32 [ %1395, %1393 ], [ %1461, %1455 ]
  %1467 = icmp slt i32 %1466, %5
  br i1 %1467, label %1470, label %1468

1468:                                             ; preds = %1465
  %1469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

1470:                                             ; preds = %1465
  %1471 = sext i32 %1466 to i64
  %1472 = getelementptr inbounds i8, ptr %1224, i64 %1471
  %1473 = load i8, ptr %1472, align 1, !tbaa !11
  %1474 = load i8, ptr %1226, align 1, !tbaa !11
  %1475 = sitofp i8 %1474 to double
  %1476 = sitofp i8 %1473 to double
  %1477 = icmp slt i8 %1473, 0
  %1478 = fneg fast double %1476
  %1479 = select fast i1 %1477, double %1478, double %1476
  %1480 = fadd fast double %1479, %1475
  %1481 = fptosi double %1480 to i8
  store i8 %1481, ptr %1226, align 1, !tbaa !11
  %1482 = add nuw nsw i32 %1394, 1
  br i1 %1240, label %1483, label %1533

1483:                                             ; preds = %1470
  %1484 = load i32, ptr %4, align 4, !tbaa !5
  %1485 = load i32, ptr %12, align 4, !tbaa !5
  %1486 = add nsw i32 %1485, -1
  %1487 = icmp slt i32 %1484, %1486
  br i1 %1487, label %1510, label %1488

1488:                                             ; preds = %1483
  %1489 = icmp eq i32 %1484, %1486
  br i1 %1489, label %1490, label %1526

1490:                                             ; preds = %1488
  store i32 0, ptr %4, align 4, !tbaa !5
  %1491 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1491, ptr %6, align 4, !tbaa !5
  br i1 %1245, label %1533, label %1492

1492:                                             ; preds = %1490, %1520
  %1493 = phi i64 [ %1524, %1520 ], [ 1, %1490 ]
  %1494 = getelementptr inbounds i32, ptr %4, i64 %1493
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = getelementptr inbounds i32, ptr %12, i64 %1493
  %1497 = load i32, ptr %1496, align 4, !tbaa !5
  %1498 = add nsw i32 %1497, -1
  %1499 = icmp slt i32 %1495, %1498
  br i1 %1499, label %1500, label %1518

1500:                                             ; preds = %1492
  br i1 %1487, label %1510, label %1501

1501:                                             ; preds = %1500
  %1502 = shl i64 %1493, 32
  %1503 = add i64 %1502, -4294967296
  %1504 = ashr exact i64 %1503, 32
  %1505 = getelementptr inbounds i32, ptr %7, i64 %1504
  %1506 = load i32, ptr %1505, align 4, !tbaa !5
  %1507 = getelementptr inbounds i32, ptr %6, i64 %1493
  %1508 = load i32, ptr %1507, align 4, !tbaa !5
  %1509 = add nsw i32 %1508, %1506
  store i32 %1509, ptr %1507, align 4, !tbaa !5
  br label %1528

1510:                                             ; preds = %1483, %1500
  %1511 = phi i32 [ %1495, %1500 ], [ %1484, %1483 ]
  %1512 = phi ptr [ %1494, %1500 ], [ %4, %1483 ]
  %1513 = phi i64 [ %1493, %1500 ], [ 0, %1483 ]
  %1514 = add nsw i32 %1511, 1
  store i32 %1514, ptr %1512, align 4, !tbaa !5
  %1515 = getelementptr inbounds i32, ptr %7, i64 %1513
  %1516 = load i32, ptr %1515, align 4, !tbaa !5
  %1517 = getelementptr inbounds i32, ptr %6, i64 %1513
  br label %1528

1518:                                             ; preds = %1492
  %1519 = icmp eq i32 %1495, %1498
  br i1 %1519, label %1520, label %1526

1520:                                             ; preds = %1518
  store i32 0, ptr %1494, align 4, !tbaa !5
  %1521 = getelementptr inbounds i32, ptr %8, i64 %1493
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = getelementptr inbounds i32, ptr %6, i64 %1493
  store i32 %1522, ptr %1523, align 4, !tbaa !5
  %1524 = add nuw nsw i64 %1493, 1
  %1525 = icmp eq i64 %1524, %1243
  br i1 %1525, label %1533, label %1492, !llvm.loop !66

1526:                                             ; preds = %1488, %1518
  %1527 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1528:                                             ; preds = %1501, %1510
  %1529 = phi ptr [ %1517, %1510 ], [ %1494, %1501 ]
  %1530 = phi i32 [ %1516, %1510 ], [ 1, %1501 ]
  %1531 = load i32, ptr %1529, align 4, !tbaa !5
  %1532 = add nsw i32 %1531, %1530
  store i32 %1532, ptr %1529, align 4, !tbaa !5
  br label %1533

1533:                                             ; preds = %1520, %1528, %1490, %1470
  %1534 = icmp eq i32 %1482, %5
  br i1 %1534, label %5444, label %1393, !llvm.loop !67

1535:                                             ; preds = %1231
  %1536 = getelementptr inbounds i32, ptr %3, i64 %19
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = icmp eq i32 %1537, 0
  %1539 = icmp sgt i32 %5, 0
  br i1 %1538, label %1549, label %1540

1540:                                             ; preds = %1535
  br i1 %1539, label %1541, label %5444

1541:                                             ; preds = %1540
  %1542 = icmp sgt i32 %13, 1
  %1543 = icmp sgt i32 %13, 0
  %1544 = add i32 %13, -2
  %1545 = zext i32 %1544 to i64
  %1546 = zext i32 %13 to i64
  %1547 = add nuw i32 %5, 1
  %1548 = icmp eq i32 %13, 1
  br label %1690

1549:                                             ; preds = %1535
  br i1 %1539, label %1550, label %5444

1550:                                             ; preds = %1549
  %1551 = icmp sgt i32 %13, 1
  %1552 = icmp sgt i32 %13, 0
  %1553 = add i32 %13, -2
  %1554 = zext i32 %1553 to i64
  %1555 = zext i32 %13 to i64
  %1556 = add nuw i32 %5, 1
  %1557 = icmp eq i32 %13, 1
  br label %1558

1558:                                             ; preds = %1550, %1688
  %1559 = phi i32 [ 0, %1550 ], [ %1640, %1688 ]
  %1560 = phi double [ 0.000000e+00, %1550 ], [ %1639, %1688 ]
  %1561 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1551, label %1562, label %1631

1562:                                             ; preds = %1558, %1621
  %1563 = phi i32 [ %1630, %1621 ], [ 0, %1558 ]
  %1564 = phi i64 [ %1572, %1621 ], [ %1555, %1558 ]
  %1565 = phi i64 [ %1629, %1621 ], [ %1554, %1558 ]
  %1566 = phi i32 [ %1627, %1621 ], [ %1561, %1558 ]
  %1567 = sub i32 %1553, %1563
  %1568 = tail call i32 @llvm.smin.i32(i32 %1567, i32 0)
  %1569 = sub i32 %1567, %1568
  %1570 = zext i32 %1569 to i64
  %1571 = add nuw nsw i64 %1570, 1
  %1572 = add nsw i64 %1564, -1
  %1573 = icmp ult i32 %1569, 31
  br i1 %1573, label %1609, label %1574

1574:                                             ; preds = %1562
  %1575 = and i64 %1571, 8589934560
  %1576 = sub i64 %1565, %1575
  br label %1577

1577:                                             ; preds = %1577, %1574
  %1578 = phi i64 [ 0, %1574 ], [ %1601, %1577 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1574 ], [ %1597, %1577 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1574 ], [ %1598, %1577 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1574 ], [ %1599, %1577 ]
  %1582 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1574 ], [ %1600, %1577 ]
  %1583 = sub i64 %1565, %1578
  %1584 = getelementptr inbounds i32, ptr %9, i64 %1583
  %1585 = getelementptr inbounds i32, ptr %1584, i64 -7
  %1586 = load <8 x i32>, ptr %1585, align 4, !tbaa !5
  %1587 = shufflevector <8 x i32> %1586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1588 = getelementptr inbounds i32, ptr %1584, i64 -15
  %1589 = load <8 x i32>, ptr %1588, align 4, !tbaa !5
  %1590 = shufflevector <8 x i32> %1589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1591 = getelementptr inbounds i32, ptr %1584, i64 -23
  %1592 = load <8 x i32>, ptr %1591, align 4, !tbaa !5
  %1593 = shufflevector <8 x i32> %1592, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1594 = getelementptr inbounds i32, ptr %1584, i64 -31
  %1595 = load <8 x i32>, ptr %1594, align 4, !tbaa !5
  %1596 = shufflevector <8 x i32> %1595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1597 = mul <8 x i32> %1587, %1579
  %1598 = mul <8 x i32> %1590, %1580
  %1599 = mul <8 x i32> %1593, %1581
  %1600 = mul <8 x i32> %1596, %1582
  %1601 = add nuw i64 %1578, 32
  %1602 = icmp eq i64 %1601, %1575
  br i1 %1602, label %1603, label %1577, !llvm.loop !68

1603:                                             ; preds = %1577
  %1604 = mul <8 x i32> %1598, %1597
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = mul <8 x i32> %1600, %1605
  %1607 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1606)
  %1608 = icmp eq i64 %1571, %1575
  br i1 %1608, label %1621, label %1609

1609:                                             ; preds = %1562, %1603
  %1610 = phi i64 [ %1565, %1562 ], [ %1576, %1603 ]
  %1611 = phi i32 [ 1, %1562 ], [ %1607, %1603 ]
  br label %1612

1612:                                             ; preds = %1609, %1612
  %1613 = phi i64 [ %1618, %1612 ], [ %1610, %1609 ]
  %1614 = phi i32 [ %1617, %1612 ], [ %1611, %1609 ]
  %1615 = getelementptr inbounds i32, ptr %9, i64 %1613
  %1616 = load i32, ptr %1615, align 4, !tbaa !5
  %1617 = mul nsw i32 %1616, %1614
  %1618 = add nsw i64 %1613, -1
  %1619 = trunc i64 %1613 to i32
  %1620 = icmp sgt i32 %1619, 0
  br i1 %1620, label %1612, label %1621, !llvm.loop !69

1621:                                             ; preds = %1612, %1603
  %1622 = phi i32 [ %1607, %1603 ], [ %1617, %1612 ]
  %1623 = and i64 %1572, 4294967295
  %1624 = getelementptr inbounds i32, ptr %6, i64 %1623
  %1625 = load i32, ptr %1624, align 4, !tbaa !5
  %1626 = mul nsw i32 %1625, %1622
  %1627 = add nsw i32 %1626, %1566
  %1628 = icmp sgt i64 %1564, 2
  %1629 = add nsw i64 %1565, -1
  %1630 = add i32 %1563, 1
  br i1 %1628, label %1562, label %1631, !llvm.loop !70

1631:                                             ; preds = %1621, %1558
  %1632 = phi i32 [ %1561, %1558 ], [ %1627, %1621 ]
  %1633 = sext i32 %1632 to i64
  %1634 = getelementptr inbounds i8, ptr %1224, i64 %1633
  %1635 = load i8, ptr %1634, align 1, !tbaa !11
  %1636 = load i8, ptr %1226, align 1, !tbaa !11
  %1637 = tail call i8 @llvm.abs.i8(i8 %1635, i1 false)
  %1638 = add i8 %1636, %1637
  store i8 %1638, ptr %1226, align 1, !tbaa !11
  %1639 = fadd fast double %1560, 1.000000e+00
  %1640 = add nuw nsw i32 %1559, 1
  br i1 %1552, label %1641, label %1688

1641:                                             ; preds = %1631
  %1642 = load i32, ptr %4, align 4, !tbaa !5
  %1643 = load i32, ptr %12, align 4, !tbaa !5
  %1644 = add nsw i32 %1643, -1
  %1645 = icmp slt i32 %1642, %1644
  br i1 %1645, label %1665, label %1646

1646:                                             ; preds = %1641
  %1647 = icmp eq i32 %1642, %1644
  br i1 %1647, label %1648, label %1681

1648:                                             ; preds = %1646
  store i32 0, ptr %4, align 4, !tbaa !5
  %1649 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1649, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1688, label %1650

1650:                                             ; preds = %1648, %1675
  %1651 = phi i64 [ %1679, %1675 ], [ 1, %1648 ]
  %1652 = getelementptr inbounds i32, ptr %4, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = getelementptr inbounds i32, ptr %12, i64 %1651
  %1655 = load i32, ptr %1654, align 4, !tbaa !5
  %1656 = add nsw i32 %1655, -1
  %1657 = icmp slt i32 %1653, %1656
  br i1 %1657, label %1658, label %1673

1658:                                             ; preds = %1650
  br i1 %1645, label %1665, label %1659

1659:                                             ; preds = %1658
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1651
  %1661 = load i32, ptr %1660, align 4, !tbaa !5
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1651
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = add nsw i32 %1663, %1661
  store i32 %1664, ptr %1662, align 4, !tbaa !5
  br label %1683

1665:                                             ; preds = %1641, %1658
  %1666 = phi i32 [ %1653, %1658 ], [ %1642, %1641 ]
  %1667 = phi ptr [ %1652, %1658 ], [ %4, %1641 ]
  %1668 = phi i64 [ %1651, %1658 ], [ 0, %1641 ]
  %1669 = add nsw i32 %1666, 1
  store i32 %1669, ptr %1667, align 4, !tbaa !5
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1668
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1668
  br label %1683

1673:                                             ; preds = %1650
  %1674 = icmp eq i32 %1653, %1656
  br i1 %1674, label %1675, label %1681

1675:                                             ; preds = %1673
  store i32 0, ptr %1652, align 4, !tbaa !5
  %1676 = getelementptr inbounds i32, ptr %8, i64 %1651
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1651
  store i32 %1677, ptr %1678, align 4, !tbaa !5
  %1679 = add nuw nsw i64 %1651, 1
  %1680 = icmp eq i64 %1679, %1555
  br i1 %1680, label %1688, label %1650, !llvm.loop !71

1681:                                             ; preds = %1646, %1673
  %1682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1683:                                             ; preds = %1659, %1665
  %1684 = phi ptr [ %1672, %1665 ], [ %1652, %1659 ]
  %1685 = phi i32 [ %1671, %1665 ], [ 1, %1659 ]
  %1686 = load i32, ptr %1684, align 4, !tbaa !5
  %1687 = add nsw i32 %1686, %1685
  store i32 %1687, ptr %1684, align 4, !tbaa !5
  br label %1688

1688:                                             ; preds = %1675, %1683, %1648, %1631
  %1689 = icmp eq i32 %1640, %5
  br i1 %1689, label %5444, label %1558, !llvm.loop !72

1690:                                             ; preds = %1541, %1825
  %1691 = phi i32 [ 0, %1541 ], [ %1774, %1825 ]
  %1692 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1542, label %1693, label %1762

1693:                                             ; preds = %1690, %1752
  %1694 = phi i32 [ %1761, %1752 ], [ 0, %1690 ]
  %1695 = phi i64 [ %1703, %1752 ], [ %1546, %1690 ]
  %1696 = phi i64 [ %1760, %1752 ], [ %1545, %1690 ]
  %1697 = phi i32 [ %1758, %1752 ], [ %1692, %1690 ]
  %1698 = sub i32 %1544, %1694
  %1699 = tail call i32 @llvm.smin.i32(i32 %1698, i32 0)
  %1700 = sub i32 %1698, %1699
  %1701 = zext i32 %1700 to i64
  %1702 = add nuw nsw i64 %1701, 1
  %1703 = add nsw i64 %1695, -1
  %1704 = icmp ult i32 %1700, 31
  br i1 %1704, label %1740, label %1705

1705:                                             ; preds = %1693
  %1706 = and i64 %1702, 8589934560
  %1707 = sub i64 %1696, %1706
  br label %1708

1708:                                             ; preds = %1708, %1705
  %1709 = phi i64 [ 0, %1705 ], [ %1732, %1708 ]
  %1710 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1705 ], [ %1728, %1708 ]
  %1711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1705 ], [ %1729, %1708 ]
  %1712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1705 ], [ %1730, %1708 ]
  %1713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1705 ], [ %1731, %1708 ]
  %1714 = sub i64 %1696, %1709
  %1715 = getelementptr inbounds i32, ptr %11, i64 %1714
  %1716 = getelementptr inbounds i32, ptr %1715, i64 -7
  %1717 = load <8 x i32>, ptr %1716, align 4, !tbaa !5
  %1718 = shufflevector <8 x i32> %1717, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1719 = getelementptr inbounds i32, ptr %1715, i64 -15
  %1720 = load <8 x i32>, ptr %1719, align 4, !tbaa !5
  %1721 = shufflevector <8 x i32> %1720, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1722 = getelementptr inbounds i32, ptr %1715, i64 -23
  %1723 = load <8 x i32>, ptr %1722, align 4, !tbaa !5
  %1724 = shufflevector <8 x i32> %1723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1725 = getelementptr inbounds i32, ptr %1715, i64 -31
  %1726 = load <8 x i32>, ptr %1725, align 4, !tbaa !5
  %1727 = shufflevector <8 x i32> %1726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1728 = mul <8 x i32> %1718, %1710
  %1729 = mul <8 x i32> %1721, %1711
  %1730 = mul <8 x i32> %1724, %1712
  %1731 = mul <8 x i32> %1727, %1713
  %1732 = add nuw i64 %1709, 32
  %1733 = icmp eq i64 %1732, %1706
  br i1 %1733, label %1734, label %1708, !llvm.loop !73

1734:                                             ; preds = %1708
  %1735 = mul <8 x i32> %1729, %1728
  %1736 = mul <8 x i32> %1730, %1735
  %1737 = mul <8 x i32> %1731, %1736
  %1738 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1737)
  %1739 = icmp eq i64 %1702, %1706
  br i1 %1739, label %1752, label %1740

1740:                                             ; preds = %1693, %1734
  %1741 = phi i64 [ %1696, %1693 ], [ %1707, %1734 ]
  %1742 = phi i32 [ 1, %1693 ], [ %1738, %1734 ]
  br label %1743

1743:                                             ; preds = %1740, %1743
  %1744 = phi i64 [ %1749, %1743 ], [ %1741, %1740 ]
  %1745 = phi i32 [ %1748, %1743 ], [ %1742, %1740 ]
  %1746 = getelementptr inbounds i32, ptr %11, i64 %1744
  %1747 = load i32, ptr %1746, align 4, !tbaa !5
  %1748 = mul nsw i32 %1747, %1745
  %1749 = add nsw i64 %1744, -1
  %1750 = trunc i64 %1744 to i32
  %1751 = icmp sgt i32 %1750, 0
  br i1 %1751, label %1743, label %1752, !llvm.loop !74

1752:                                             ; preds = %1743, %1734
  %1753 = phi i32 [ %1738, %1734 ], [ %1748, %1743 ]
  %1754 = and i64 %1703, 4294967295
  %1755 = getelementptr inbounds i32, ptr %6, i64 %1754
  %1756 = load i32, ptr %1755, align 4, !tbaa !5
  %1757 = mul nsw i32 %1756, %1753
  %1758 = add nsw i32 %1757, %1697
  %1759 = icmp sgt i64 %1695, 2
  %1760 = add nsw i64 %1696, -1
  %1761 = add i32 %1694, 1
  br i1 %1759, label %1693, label %1762, !llvm.loop !75

1762:                                             ; preds = %1752, %1690
  %1763 = phi i32 [ %1692, %1690 ], [ %1758, %1752 ]
  %1764 = icmp slt i32 %1763, %5
  br i1 %1764, label %1767, label %1765

1765:                                             ; preds = %1762
  %1766 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

1767:                                             ; preds = %1762
  %1768 = sext i32 %1763 to i64
  %1769 = getelementptr inbounds i8, ptr %1224, i64 %1768
  %1770 = load i8, ptr %1769, align 1, !tbaa !11
  %1771 = load i8, ptr %1226, align 1, !tbaa !11
  %1772 = tail call i8 @llvm.abs.i8(i8 %1770, i1 false)
  %1773 = add i8 %1771, %1772
  store i8 %1773, ptr %1226, align 1, !tbaa !11
  %1774 = add nuw nsw i32 %1691, 1
  br i1 %1543, label %1775, label %1825

1775:                                             ; preds = %1767
  %1776 = load i32, ptr %4, align 4, !tbaa !5
  %1777 = load i32, ptr %12, align 4, !tbaa !5
  %1778 = add nsw i32 %1777, -1
  %1779 = icmp slt i32 %1776, %1778
  br i1 %1779, label %1802, label %1780

1780:                                             ; preds = %1775
  %1781 = icmp eq i32 %1776, %1778
  br i1 %1781, label %1782, label %1818

1782:                                             ; preds = %1780
  store i32 0, ptr %4, align 4, !tbaa !5
  %1783 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1783, ptr %6, align 4, !tbaa !5
  br i1 %1548, label %1825, label %1784

1784:                                             ; preds = %1782, %1812
  %1785 = phi i64 [ %1816, %1812 ], [ 1, %1782 ]
  %1786 = getelementptr inbounds i32, ptr %4, i64 %1785
  %1787 = load i32, ptr %1786, align 4, !tbaa !5
  %1788 = getelementptr inbounds i32, ptr %12, i64 %1785
  %1789 = load i32, ptr %1788, align 4, !tbaa !5
  %1790 = add nsw i32 %1789, -1
  %1791 = icmp slt i32 %1787, %1790
  br i1 %1791, label %1792, label %1810

1792:                                             ; preds = %1784
  br i1 %1779, label %1802, label %1793

1793:                                             ; preds = %1792
  %1794 = shl i64 %1785, 32
  %1795 = add i64 %1794, -4294967296
  %1796 = ashr exact i64 %1795, 32
  %1797 = getelementptr inbounds i32, ptr %7, i64 %1796
  %1798 = load i32, ptr %1797, align 4, !tbaa !5
  %1799 = getelementptr inbounds i32, ptr %6, i64 %1785
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = add nsw i32 %1800, %1798
  store i32 %1801, ptr %1799, align 4, !tbaa !5
  br label %1820

1802:                                             ; preds = %1775, %1792
  %1803 = phi i32 [ %1787, %1792 ], [ %1776, %1775 ]
  %1804 = phi ptr [ %1786, %1792 ], [ %4, %1775 ]
  %1805 = phi i64 [ %1785, %1792 ], [ 0, %1775 ]
  %1806 = add nsw i32 %1803, 1
  store i32 %1806, ptr %1804, align 4, !tbaa !5
  %1807 = getelementptr inbounds i32, ptr %7, i64 %1805
  %1808 = load i32, ptr %1807, align 4, !tbaa !5
  %1809 = getelementptr inbounds i32, ptr %6, i64 %1805
  br label %1820

1810:                                             ; preds = %1784
  %1811 = icmp eq i32 %1787, %1790
  br i1 %1811, label %1812, label %1818

1812:                                             ; preds = %1810
  store i32 0, ptr %1786, align 4, !tbaa !5
  %1813 = getelementptr inbounds i32, ptr %8, i64 %1785
  %1814 = load i32, ptr %1813, align 4, !tbaa !5
  %1815 = getelementptr inbounds i32, ptr %6, i64 %1785
  store i32 %1814, ptr %1815, align 4, !tbaa !5
  %1816 = add nuw nsw i64 %1785, 1
  %1817 = icmp eq i64 %1816, %1546
  br i1 %1817, label %1825, label %1784, !llvm.loop !76

1818:                                             ; preds = %1780, %1810
  %1819 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1820:                                             ; preds = %1793, %1802
  %1821 = phi ptr [ %1809, %1802 ], [ %1786, %1793 ]
  %1822 = phi i32 [ %1808, %1802 ], [ 1, %1793 ]
  %1823 = load i32, ptr %1821, align 4, !tbaa !5
  %1824 = add nsw i32 %1823, %1822
  store i32 %1824, ptr %1821, align 4, !tbaa !5
  br label %1825

1825:                                             ; preds = %1812, %1820, %1782, %1767
  %1826 = icmp eq i32 %1774, %5
  br i1 %1826, label %5444, label %1690, !llvm.loop !77

1827:                                             ; preds = %1231
  %1828 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

1829:                                             ; preds = %18
  %1830 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1831 = load ptr, ptr %1830, align 8, !tbaa !9
  %1832 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1833 = load ptr, ptr %1832, align 8, !tbaa !9
  store i16 0, ptr %1833, align 2, !tbaa !78
  %1834 = icmp eq i32 %13, 0
  br i1 %1834, label %1835, label %1838

1835:                                             ; preds = %1829
  %1836 = load i8, ptr %1831, align 1, !tbaa !11
  %1837 = zext i8 %1836 to i16
  store i16 %1837, ptr %1833, align 2, !tbaa !78
  br label %5444

1838:                                             ; preds = %1829
  switch i32 %1, label %2432 [
    i32 1, label %1839
    i32 0, label %2140
  ]

1839:                                             ; preds = %1838
  %1840 = getelementptr inbounds i32, ptr %3, i64 %19
  %1841 = load i32, ptr %1840, align 4, !tbaa !5
  %1842 = icmp eq i32 %1841, 0
  %1843 = icmp sgt i32 %5, 0
  br i1 %1842, label %1853, label %1844

1844:                                             ; preds = %1839
  br i1 %1843, label %1845, label %5444

1845:                                             ; preds = %1844
  %1846 = icmp sgt i32 %13, 1
  %1847 = icmp sgt i32 %13, 0
  %1848 = add i32 %13, -2
  %1849 = zext i32 %1848 to i64
  %1850 = zext i32 %13 to i64
  %1851 = add nuw i32 %5, 1
  %1852 = icmp eq i32 %13, 1
  br label %2000

1853:                                             ; preds = %1839
  br i1 %1843, label %1854, label %5444

1854:                                             ; preds = %1853
  %1855 = icmp sgt i32 %13, 1
  %1856 = icmp sgt i32 %13, 0
  %1857 = add i32 %13, -2
  %1858 = zext i32 %1857 to i64
  %1859 = zext i32 %13 to i64
  %1860 = add nuw i32 %5, 1
  %1861 = icmp eq i32 %13, 1
  br label %1862

1862:                                             ; preds = %1854, %1998
  %1863 = phi i16 [ 0, %1854 ], [ %1948, %1998 ]
  %1864 = phi i32 [ 0, %1854 ], [ %1950, %1998 ]
  %1865 = phi double [ 0.000000e+00, %1854 ], [ %1949, %1998 ]
  %1866 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1855, label %1867, label %1936

1867:                                             ; preds = %1862, %1926
  %1868 = phi i32 [ %1935, %1926 ], [ 0, %1862 ]
  %1869 = phi i64 [ %1877, %1926 ], [ %1859, %1862 ]
  %1870 = phi i64 [ %1934, %1926 ], [ %1858, %1862 ]
  %1871 = phi i32 [ %1932, %1926 ], [ %1866, %1862 ]
  %1872 = sub i32 %1857, %1868
  %1873 = tail call i32 @llvm.smin.i32(i32 %1872, i32 0)
  %1874 = sub i32 %1872, %1873
  %1875 = zext i32 %1874 to i64
  %1876 = add nuw nsw i64 %1875, 1
  %1877 = add nsw i64 %1869, -1
  %1878 = icmp ult i32 %1874, 31
  br i1 %1878, label %1914, label %1879

1879:                                             ; preds = %1867
  %1880 = and i64 %1876, 8589934560
  %1881 = sub i64 %1870, %1880
  br label %1882

1882:                                             ; preds = %1882, %1879
  %1883 = phi i64 [ 0, %1879 ], [ %1906, %1882 ]
  %1884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1879 ], [ %1902, %1882 ]
  %1885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1879 ], [ %1903, %1882 ]
  %1886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1879 ], [ %1904, %1882 ]
  %1887 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1879 ], [ %1905, %1882 ]
  %1888 = sub i64 %1870, %1883
  %1889 = getelementptr inbounds i32, ptr %9, i64 %1888
  %1890 = getelementptr inbounds i32, ptr %1889, i64 -7
  %1891 = load <8 x i32>, ptr %1890, align 4, !tbaa !5
  %1892 = shufflevector <8 x i32> %1891, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1893 = getelementptr inbounds i32, ptr %1889, i64 -15
  %1894 = load <8 x i32>, ptr %1893, align 4, !tbaa !5
  %1895 = shufflevector <8 x i32> %1894, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1896 = getelementptr inbounds i32, ptr %1889, i64 -23
  %1897 = load <8 x i32>, ptr %1896, align 4, !tbaa !5
  %1898 = shufflevector <8 x i32> %1897, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1899 = getelementptr inbounds i32, ptr %1889, i64 -31
  %1900 = load <8 x i32>, ptr %1899, align 4, !tbaa !5
  %1901 = shufflevector <8 x i32> %1900, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1902 = mul <8 x i32> %1892, %1884
  %1903 = mul <8 x i32> %1895, %1885
  %1904 = mul <8 x i32> %1898, %1886
  %1905 = mul <8 x i32> %1901, %1887
  %1906 = add nuw i64 %1883, 32
  %1907 = icmp eq i64 %1906, %1880
  br i1 %1907, label %1908, label %1882, !llvm.loop !80

1908:                                             ; preds = %1882
  %1909 = mul <8 x i32> %1903, %1902
  %1910 = mul <8 x i32> %1904, %1909
  %1911 = mul <8 x i32> %1905, %1910
  %1912 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1911)
  %1913 = icmp eq i64 %1876, %1880
  br i1 %1913, label %1926, label %1914

1914:                                             ; preds = %1867, %1908
  %1915 = phi i64 [ %1870, %1867 ], [ %1881, %1908 ]
  %1916 = phi i32 [ 1, %1867 ], [ %1912, %1908 ]
  br label %1917

1917:                                             ; preds = %1914, %1917
  %1918 = phi i64 [ %1923, %1917 ], [ %1915, %1914 ]
  %1919 = phi i32 [ %1922, %1917 ], [ %1916, %1914 ]
  %1920 = getelementptr inbounds i32, ptr %9, i64 %1918
  %1921 = load i32, ptr %1920, align 4, !tbaa !5
  %1922 = mul nsw i32 %1921, %1919
  %1923 = add nsw i64 %1918, -1
  %1924 = trunc i64 %1918 to i32
  %1925 = icmp sgt i32 %1924, 0
  br i1 %1925, label %1917, label %1926, !llvm.loop !81

1926:                                             ; preds = %1917, %1908
  %1927 = phi i32 [ %1912, %1908 ], [ %1922, %1917 ]
  %1928 = and i64 %1877, 4294967295
  %1929 = getelementptr inbounds i32, ptr %6, i64 %1928
  %1930 = load i32, ptr %1929, align 4, !tbaa !5
  %1931 = mul nsw i32 %1930, %1927
  %1932 = add nsw i32 %1931, %1871
  %1933 = icmp sgt i64 %1869, 2
  %1934 = add nsw i64 %1870, -1
  %1935 = add i32 %1868, 1
  br i1 %1933, label %1867, label %1936, !llvm.loop !82

1936:                                             ; preds = %1926, %1862
  %1937 = phi i32 [ %1866, %1862 ], [ %1932, %1926 ]
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds double, ptr %2, i64 %1938
  %1940 = load double, ptr %1939, align 8, !tbaa !18
  %1941 = getelementptr inbounds i8, ptr %1831, i64 %1938
  %1942 = load i8, ptr %1941, align 1, !tbaa !11
  %1943 = sitofp i16 %1863 to double
  %1944 = uitofp i8 %1942 to double
  %1945 = fmul fast double %1940, %1944
  %1946 = tail call fast double @llvm.fabs.f64(double %1945)
  %1947 = fadd fast double %1946, %1943
  %1948 = fptosi double %1947 to i16
  store i16 %1948, ptr %1833, align 2, !tbaa !78
  %1949 = fadd fast double %1940, %1865
  %1950 = add nuw nsw i32 %1864, 1
  br i1 %1856, label %1951, label %1998

1951:                                             ; preds = %1936
  %1952 = load i32, ptr %4, align 4, !tbaa !5
  %1953 = load i32, ptr %12, align 4, !tbaa !5
  %1954 = add nsw i32 %1953, -1
  %1955 = icmp slt i32 %1952, %1954
  br i1 %1955, label %1975, label %1956

1956:                                             ; preds = %1951
  %1957 = icmp eq i32 %1952, %1954
  br i1 %1957, label %1958, label %1991

1958:                                             ; preds = %1956
  store i32 0, ptr %4, align 4, !tbaa !5
  %1959 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1959, ptr %6, align 4, !tbaa !5
  br i1 %1861, label %1998, label %1960

1960:                                             ; preds = %1958, %1985
  %1961 = phi i64 [ %1989, %1985 ], [ 1, %1958 ]
  %1962 = getelementptr inbounds i32, ptr %4, i64 %1961
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = getelementptr inbounds i32, ptr %12, i64 %1961
  %1965 = load i32, ptr %1964, align 4, !tbaa !5
  %1966 = add nsw i32 %1965, -1
  %1967 = icmp slt i32 %1963, %1966
  br i1 %1967, label %1968, label %1983

1968:                                             ; preds = %1960
  br i1 %1955, label %1975, label %1969

1969:                                             ; preds = %1968
  %1970 = getelementptr inbounds i32, ptr %7, i64 %1961
  %1971 = load i32, ptr %1970, align 4, !tbaa !5
  %1972 = getelementptr inbounds i32, ptr %6, i64 %1961
  %1973 = load i32, ptr %1972, align 4, !tbaa !5
  %1974 = add nsw i32 %1973, %1971
  store i32 %1974, ptr %1972, align 4, !tbaa !5
  br label %1993

1975:                                             ; preds = %1951, %1968
  %1976 = phi i32 [ %1963, %1968 ], [ %1952, %1951 ]
  %1977 = phi ptr [ %1962, %1968 ], [ %4, %1951 ]
  %1978 = phi i64 [ %1961, %1968 ], [ 0, %1951 ]
  %1979 = add nsw i32 %1976, 1
  store i32 %1979, ptr %1977, align 4, !tbaa !5
  %1980 = getelementptr inbounds i32, ptr %7, i64 %1978
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %6, i64 %1978
  br label %1993

1983:                                             ; preds = %1960
  %1984 = icmp eq i32 %1963, %1966
  br i1 %1984, label %1985, label %1991

1985:                                             ; preds = %1983
  store i32 0, ptr %1962, align 4, !tbaa !5
  %1986 = getelementptr inbounds i32, ptr %8, i64 %1961
  %1987 = load i32, ptr %1986, align 4, !tbaa !5
  %1988 = getelementptr inbounds i32, ptr %6, i64 %1961
  store i32 %1987, ptr %1988, align 4, !tbaa !5
  %1989 = add nuw nsw i64 %1961, 1
  %1990 = icmp eq i64 %1989, %1859
  br i1 %1990, label %1998, label %1960, !llvm.loop !83

1991:                                             ; preds = %1956, %1983
  %1992 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

1993:                                             ; preds = %1969, %1975
  %1994 = phi ptr [ %1982, %1975 ], [ %1962, %1969 ]
  %1995 = phi i32 [ %1981, %1975 ], [ 1, %1969 ]
  %1996 = load i32, ptr %1994, align 4, !tbaa !5
  %1997 = add nsw i32 %1996, %1995
  store i32 %1997, ptr %1994, align 4, !tbaa !5
  br label %1998

1998:                                             ; preds = %1985, %1993, %1958, %1936
  %1999 = icmp eq i32 %1950, %5
  br i1 %1999, label %5444, label %1862, !llvm.loop !84

2000:                                             ; preds = %1845, %2138
  %2001 = phi i32 [ 0, %1845 ], [ %2085, %2138 ]
  %2002 = phi i32 [ 0, %1845 ], [ %2087, %2138 ]
  %2003 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1846, label %2004, label %2073

2004:                                             ; preds = %2000, %2063
  %2005 = phi i32 [ %2072, %2063 ], [ 0, %2000 ]
  %2006 = phi i64 [ %2014, %2063 ], [ %1850, %2000 ]
  %2007 = phi i64 [ %2071, %2063 ], [ %1849, %2000 ]
  %2008 = phi i32 [ %2069, %2063 ], [ %2003, %2000 ]
  %2009 = sub i32 %1848, %2005
  %2010 = tail call i32 @llvm.smin.i32(i32 %2009, i32 0)
  %2011 = sub i32 %2009, %2010
  %2012 = zext i32 %2011 to i64
  %2013 = add nuw nsw i64 %2012, 1
  %2014 = add nsw i64 %2006, -1
  %2015 = icmp ult i32 %2011, 31
  br i1 %2015, label %2051, label %2016

2016:                                             ; preds = %2004
  %2017 = and i64 %2013, 8589934560
  %2018 = sub i64 %2007, %2017
  br label %2019

2019:                                             ; preds = %2019, %2016
  %2020 = phi i64 [ 0, %2016 ], [ %2043, %2019 ]
  %2021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2016 ], [ %2039, %2019 ]
  %2022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2016 ], [ %2040, %2019 ]
  %2023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2016 ], [ %2041, %2019 ]
  %2024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2016 ], [ %2042, %2019 ]
  %2025 = sub i64 %2007, %2020
  %2026 = getelementptr inbounds i32, ptr %11, i64 %2025
  %2027 = getelementptr inbounds i32, ptr %2026, i64 -7
  %2028 = load <8 x i32>, ptr %2027, align 4, !tbaa !5
  %2029 = shufflevector <8 x i32> %2028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2030 = getelementptr inbounds i32, ptr %2026, i64 -15
  %2031 = load <8 x i32>, ptr %2030, align 4, !tbaa !5
  %2032 = shufflevector <8 x i32> %2031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2033 = getelementptr inbounds i32, ptr %2026, i64 -23
  %2034 = load <8 x i32>, ptr %2033, align 4, !tbaa !5
  %2035 = shufflevector <8 x i32> %2034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2036 = getelementptr inbounds i32, ptr %2026, i64 -31
  %2037 = load <8 x i32>, ptr %2036, align 4, !tbaa !5
  %2038 = shufflevector <8 x i32> %2037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2039 = mul <8 x i32> %2029, %2021
  %2040 = mul <8 x i32> %2032, %2022
  %2041 = mul <8 x i32> %2035, %2023
  %2042 = mul <8 x i32> %2038, %2024
  %2043 = add nuw i64 %2020, 32
  %2044 = icmp eq i64 %2043, %2017
  br i1 %2044, label %2045, label %2019, !llvm.loop !85

2045:                                             ; preds = %2019
  %2046 = mul <8 x i32> %2040, %2039
  %2047 = mul <8 x i32> %2041, %2046
  %2048 = mul <8 x i32> %2042, %2047
  %2049 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2048)
  %2050 = icmp eq i64 %2013, %2017
  br i1 %2050, label %2063, label %2051

2051:                                             ; preds = %2004, %2045
  %2052 = phi i64 [ %2007, %2004 ], [ %2018, %2045 ]
  %2053 = phi i32 [ 1, %2004 ], [ %2049, %2045 ]
  br label %2054

2054:                                             ; preds = %2051, %2054
  %2055 = phi i64 [ %2060, %2054 ], [ %2052, %2051 ]
  %2056 = phi i32 [ %2059, %2054 ], [ %2053, %2051 ]
  %2057 = getelementptr inbounds i32, ptr %11, i64 %2055
  %2058 = load i32, ptr %2057, align 4, !tbaa !5
  %2059 = mul nsw i32 %2058, %2056
  %2060 = add nsw i64 %2055, -1
  %2061 = trunc i64 %2055 to i32
  %2062 = icmp sgt i32 %2061, 0
  br i1 %2062, label %2054, label %2063, !llvm.loop !86

2063:                                             ; preds = %2054, %2045
  %2064 = phi i32 [ %2049, %2045 ], [ %2059, %2054 ]
  %2065 = and i64 %2014, 4294967295
  %2066 = getelementptr inbounds i32, ptr %6, i64 %2065
  %2067 = load i32, ptr %2066, align 4, !tbaa !5
  %2068 = mul nsw i32 %2067, %2064
  %2069 = add nsw i32 %2068, %2008
  %2070 = icmp sgt i64 %2006, 2
  %2071 = add nsw i64 %2007, -1
  %2072 = add i32 %2005, 1
  br i1 %2070, label %2004, label %2073, !llvm.loop !87

2073:                                             ; preds = %2063, %2000
  %2074 = phi i32 [ %2003, %2000 ], [ %2069, %2063 ]
  %2075 = icmp slt i32 %2074, %5
  br i1 %2075, label %2078, label %2076

2076:                                             ; preds = %2073
  %2077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

2078:                                             ; preds = %2073
  %2079 = shl i32 %2001, 16
  %2080 = ashr exact i32 %2079, 16
  %2081 = sext i32 %2074 to i64
  %2082 = getelementptr inbounds i8, ptr %1831, i64 %2081
  %2083 = load i8, ptr %2082, align 1, !tbaa !11
  %2084 = zext i8 %2083 to i32
  %2085 = add nsw i32 %2080, %2084
  %2086 = trunc i32 %2085 to i16
  store i16 %2086, ptr %1833, align 2, !tbaa !78
  %2087 = add nuw nsw i32 %2002, 1
  br i1 %1847, label %2088, label %2138

2088:                                             ; preds = %2078
  %2089 = load i32, ptr %4, align 4, !tbaa !5
  %2090 = load i32, ptr %12, align 4, !tbaa !5
  %2091 = add nsw i32 %2090, -1
  %2092 = icmp slt i32 %2089, %2091
  br i1 %2092, label %2115, label %2093

2093:                                             ; preds = %2088
  %2094 = icmp eq i32 %2089, %2091
  br i1 %2094, label %2095, label %2131

2095:                                             ; preds = %2093
  store i32 0, ptr %4, align 4, !tbaa !5
  %2096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2096, ptr %6, align 4, !tbaa !5
  br i1 %1852, label %2138, label %2097

2097:                                             ; preds = %2095, %2125
  %2098 = phi i64 [ %2129, %2125 ], [ 1, %2095 ]
  %2099 = getelementptr inbounds i32, ptr %4, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %12, i64 %2098
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = add nsw i32 %2102, -1
  %2104 = icmp slt i32 %2100, %2103
  br i1 %2104, label %2105, label %2123

2105:                                             ; preds = %2097
  br i1 %2092, label %2115, label %2106

2106:                                             ; preds = %2105
  %2107 = shl i64 %2098, 32
  %2108 = add i64 %2107, -4294967296
  %2109 = ashr exact i64 %2108, 32
  %2110 = getelementptr inbounds i32, ptr %7, i64 %2109
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = add nsw i32 %2113, %2111
  store i32 %2114, ptr %2112, align 4, !tbaa !5
  br label %2133

2115:                                             ; preds = %2088, %2105
  %2116 = phi i32 [ %2100, %2105 ], [ %2089, %2088 ]
  %2117 = phi ptr [ %2099, %2105 ], [ %4, %2088 ]
  %2118 = phi i64 [ %2098, %2105 ], [ 0, %2088 ]
  %2119 = add nsw i32 %2116, 1
  store i32 %2119, ptr %2117, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2118
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2118
  br label %2133

2123:                                             ; preds = %2097
  %2124 = icmp eq i32 %2100, %2103
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2123
  store i32 0, ptr %2099, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %8, i64 %2098
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %6, i64 %2098
  store i32 %2127, ptr %2128, align 4, !tbaa !5
  %2129 = add nuw nsw i64 %2098, 1
  %2130 = icmp eq i64 %2129, %1850
  br i1 %2130, label %2138, label %2097, !llvm.loop !88

2131:                                             ; preds = %2093, %2123
  %2132 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2133:                                             ; preds = %2106, %2115
  %2134 = phi ptr [ %2122, %2115 ], [ %2099, %2106 ]
  %2135 = phi i32 [ %2121, %2115 ], [ 1, %2106 ]
  %2136 = load i32, ptr %2134, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, %2135
  store i32 %2137, ptr %2134, align 4, !tbaa !5
  br label %2138

2138:                                             ; preds = %2125, %2133, %2095, %2078
  %2139 = icmp eq i32 %2087, %5
  br i1 %2139, label %5444, label %2000, !llvm.loop !89

2140:                                             ; preds = %1838
  %2141 = getelementptr inbounds i32, ptr %3, i64 %19
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = icmp eq i32 %2142, 0
  %2144 = icmp sgt i32 %5, 0
  br i1 %2143, label %2154, label %2145

2145:                                             ; preds = %2140
  br i1 %2144, label %2146, label %5444

2146:                                             ; preds = %2145
  %2147 = icmp sgt i32 %13, 1
  %2148 = icmp sgt i32 %13, 0
  %2149 = add i32 %13, -2
  %2150 = zext i32 %2149 to i64
  %2151 = zext i32 %13 to i64
  %2152 = add nuw i32 %5, 1
  %2153 = icmp eq i32 %13, 1
  br label %2295

2154:                                             ; preds = %2140
  br i1 %2144, label %2155, label %5444

2155:                                             ; preds = %2154
  %2156 = icmp sgt i32 %13, 1
  %2157 = icmp sgt i32 %13, 0
  %2158 = add i32 %13, -2
  %2159 = zext i32 %2158 to i64
  %2160 = zext i32 %13 to i64
  %2161 = add nuw i32 %5, 1
  %2162 = icmp eq i32 %13, 1
  br label %2163

2163:                                             ; preds = %2155, %2293
  %2164 = phi i16 [ 0, %2155 ], [ %2243, %2293 ]
  %2165 = phi i32 [ 0, %2155 ], [ %2245, %2293 ]
  %2166 = phi double [ 0.000000e+00, %2155 ], [ %2244, %2293 ]
  %2167 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2156, label %2168, label %2237

2168:                                             ; preds = %2163, %2227
  %2169 = phi i32 [ %2236, %2227 ], [ 0, %2163 ]
  %2170 = phi i64 [ %2178, %2227 ], [ %2160, %2163 ]
  %2171 = phi i64 [ %2235, %2227 ], [ %2159, %2163 ]
  %2172 = phi i32 [ %2233, %2227 ], [ %2167, %2163 ]
  %2173 = sub i32 %2158, %2169
  %2174 = tail call i32 @llvm.smin.i32(i32 %2173, i32 0)
  %2175 = sub i32 %2173, %2174
  %2176 = zext i32 %2175 to i64
  %2177 = add nuw nsw i64 %2176, 1
  %2178 = add nsw i64 %2170, -1
  %2179 = icmp ult i32 %2175, 31
  br i1 %2179, label %2215, label %2180

2180:                                             ; preds = %2168
  %2181 = and i64 %2177, 8589934560
  %2182 = sub i64 %2171, %2181
  br label %2183

2183:                                             ; preds = %2183, %2180
  %2184 = phi i64 [ 0, %2180 ], [ %2207, %2183 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2203, %2183 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2204, %2183 ]
  %2187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2205, %2183 ]
  %2188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2206, %2183 ]
  %2189 = sub i64 %2171, %2184
  %2190 = getelementptr inbounds i32, ptr %9, i64 %2189
  %2191 = getelementptr inbounds i32, ptr %2190, i64 -7
  %2192 = load <8 x i32>, ptr %2191, align 4, !tbaa !5
  %2193 = shufflevector <8 x i32> %2192, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2194 = getelementptr inbounds i32, ptr %2190, i64 -15
  %2195 = load <8 x i32>, ptr %2194, align 4, !tbaa !5
  %2196 = shufflevector <8 x i32> %2195, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2197 = getelementptr inbounds i32, ptr %2190, i64 -23
  %2198 = load <8 x i32>, ptr %2197, align 4, !tbaa !5
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2200 = getelementptr inbounds i32, ptr %2190, i64 -31
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = mul <8 x i32> %2193, %2185
  %2204 = mul <8 x i32> %2196, %2186
  %2205 = mul <8 x i32> %2199, %2187
  %2206 = mul <8 x i32> %2202, %2188
  %2207 = add nuw i64 %2184, 32
  %2208 = icmp eq i64 %2207, %2181
  br i1 %2208, label %2209, label %2183, !llvm.loop !90

2209:                                             ; preds = %2183
  %2210 = mul <8 x i32> %2204, %2203
  %2211 = mul <8 x i32> %2205, %2210
  %2212 = mul <8 x i32> %2206, %2211
  %2213 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2212)
  %2214 = icmp eq i64 %2177, %2181
  br i1 %2214, label %2227, label %2215

2215:                                             ; preds = %2168, %2209
  %2216 = phi i64 [ %2171, %2168 ], [ %2182, %2209 ]
  %2217 = phi i32 [ 1, %2168 ], [ %2213, %2209 ]
  br label %2218

2218:                                             ; preds = %2215, %2218
  %2219 = phi i64 [ %2224, %2218 ], [ %2216, %2215 ]
  %2220 = phi i32 [ %2223, %2218 ], [ %2217, %2215 ]
  %2221 = getelementptr inbounds i32, ptr %9, i64 %2219
  %2222 = load i32, ptr %2221, align 4, !tbaa !5
  %2223 = mul nsw i32 %2222, %2220
  %2224 = add nsw i64 %2219, -1
  %2225 = trunc i64 %2219 to i32
  %2226 = icmp sgt i32 %2225, 0
  br i1 %2226, label %2218, label %2227, !llvm.loop !91

2227:                                             ; preds = %2218, %2209
  %2228 = phi i32 [ %2213, %2209 ], [ %2223, %2218 ]
  %2229 = and i64 %2178, 4294967295
  %2230 = getelementptr inbounds i32, ptr %6, i64 %2229
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2228
  %2233 = add nsw i32 %2232, %2172
  %2234 = icmp sgt i64 %2170, 2
  %2235 = add nsw i64 %2171, -1
  %2236 = add i32 %2169, 1
  br i1 %2234, label %2168, label %2237, !llvm.loop !92

2237:                                             ; preds = %2227, %2163
  %2238 = phi i32 [ %2167, %2163 ], [ %2233, %2227 ]
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds i8, ptr %1831, i64 %2239
  %2241 = load i8, ptr %2240, align 1, !tbaa !11
  %2242 = zext i8 %2241 to i16
  %2243 = add i16 %2164, %2242
  store i16 %2243, ptr %1833, align 2, !tbaa !78
  %2244 = fadd fast double %2166, 1.000000e+00
  %2245 = add nuw nsw i32 %2165, 1
  br i1 %2157, label %2246, label %2293

2246:                                             ; preds = %2237
  %2247 = load i32, ptr %4, align 4, !tbaa !5
  %2248 = load i32, ptr %12, align 4, !tbaa !5
  %2249 = add nsw i32 %2248, -1
  %2250 = icmp slt i32 %2247, %2249
  br i1 %2250, label %2270, label %2251

2251:                                             ; preds = %2246
  %2252 = icmp eq i32 %2247, %2249
  br i1 %2252, label %2253, label %2286

2253:                                             ; preds = %2251
  store i32 0, ptr %4, align 4, !tbaa !5
  %2254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2254, ptr %6, align 4, !tbaa !5
  br i1 %2162, label %2293, label %2255

2255:                                             ; preds = %2253, %2280
  %2256 = phi i64 [ %2284, %2280 ], [ 1, %2253 ]
  %2257 = getelementptr inbounds i32, ptr %4, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %12, i64 %2256
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = add nsw i32 %2260, -1
  %2262 = icmp slt i32 %2258, %2261
  br i1 %2262, label %2263, label %2278

2263:                                             ; preds = %2255
  br i1 %2250, label %2270, label %2264

2264:                                             ; preds = %2263
  %2265 = getelementptr inbounds i32, ptr %7, i64 %2256
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2268 = load i32, ptr %2267, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, %2266
  store i32 %2269, ptr %2267, align 4, !tbaa !5
  br label %2288

2270:                                             ; preds = %2246, %2263
  %2271 = phi i32 [ %2258, %2263 ], [ %2247, %2246 ]
  %2272 = phi ptr [ %2257, %2263 ], [ %4, %2246 ]
  %2273 = phi i64 [ %2256, %2263 ], [ 0, %2246 ]
  %2274 = add nsw i32 %2271, 1
  store i32 %2274, ptr %2272, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %7, i64 %2273
  %2276 = load i32, ptr %2275, align 4, !tbaa !5
  %2277 = getelementptr inbounds i32, ptr %6, i64 %2273
  br label %2288

2278:                                             ; preds = %2255
  %2279 = icmp eq i32 %2258, %2261
  br i1 %2279, label %2280, label %2286

2280:                                             ; preds = %2278
  store i32 0, ptr %2257, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %8, i64 %2256
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2256
  store i32 %2282, ptr %2283, align 4, !tbaa !5
  %2284 = add nuw nsw i64 %2256, 1
  %2285 = icmp eq i64 %2284, %2160
  br i1 %2285, label %2293, label %2255, !llvm.loop !93

2286:                                             ; preds = %2251, %2278
  %2287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2288:                                             ; preds = %2264, %2270
  %2289 = phi ptr [ %2277, %2270 ], [ %2257, %2264 ]
  %2290 = phi i32 [ %2276, %2270 ], [ 1, %2264 ]
  %2291 = load i32, ptr %2289, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, %2290
  store i32 %2292, ptr %2289, align 4, !tbaa !5
  br label %2293

2293:                                             ; preds = %2280, %2288, %2253, %2237
  %2294 = icmp eq i32 %2245, %5
  br i1 %2294, label %5444, label %2163, !llvm.loop !94

2295:                                             ; preds = %2146, %2430
  %2296 = phi i16 [ 0, %2146 ], [ %2378, %2430 ]
  %2297 = phi i32 [ 0, %2146 ], [ %2379, %2430 ]
  %2298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2147, label %2299, label %2368

2299:                                             ; preds = %2295, %2358
  %2300 = phi i32 [ %2367, %2358 ], [ 0, %2295 ]
  %2301 = phi i64 [ %2309, %2358 ], [ %2151, %2295 ]
  %2302 = phi i64 [ %2366, %2358 ], [ %2150, %2295 ]
  %2303 = phi i32 [ %2364, %2358 ], [ %2298, %2295 ]
  %2304 = sub i32 %2149, %2300
  %2305 = tail call i32 @llvm.smin.i32(i32 %2304, i32 0)
  %2306 = sub i32 %2304, %2305
  %2307 = zext i32 %2306 to i64
  %2308 = add nuw nsw i64 %2307, 1
  %2309 = add nsw i64 %2301, -1
  %2310 = icmp ult i32 %2306, 31
  br i1 %2310, label %2346, label %2311

2311:                                             ; preds = %2299
  %2312 = and i64 %2308, 8589934560
  %2313 = sub i64 %2302, %2312
  br label %2314

2314:                                             ; preds = %2314, %2311
  %2315 = phi i64 [ 0, %2311 ], [ %2338, %2314 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2334, %2314 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2335, %2314 ]
  %2318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2336, %2314 ]
  %2319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2337, %2314 ]
  %2320 = sub i64 %2302, %2315
  %2321 = getelementptr inbounds i32, ptr %11, i64 %2320
  %2322 = getelementptr inbounds i32, ptr %2321, i64 -7
  %2323 = load <8 x i32>, ptr %2322, align 4, !tbaa !5
  %2324 = shufflevector <8 x i32> %2323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2325 = getelementptr inbounds i32, ptr %2321, i64 -15
  %2326 = load <8 x i32>, ptr %2325, align 4, !tbaa !5
  %2327 = shufflevector <8 x i32> %2326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2328 = getelementptr inbounds i32, ptr %2321, i64 -23
  %2329 = load <8 x i32>, ptr %2328, align 4, !tbaa !5
  %2330 = shufflevector <8 x i32> %2329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2331 = getelementptr inbounds i32, ptr %2321, i64 -31
  %2332 = load <8 x i32>, ptr %2331, align 4, !tbaa !5
  %2333 = shufflevector <8 x i32> %2332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2334 = mul <8 x i32> %2324, %2316
  %2335 = mul <8 x i32> %2327, %2317
  %2336 = mul <8 x i32> %2330, %2318
  %2337 = mul <8 x i32> %2333, %2319
  %2338 = add nuw i64 %2315, 32
  %2339 = icmp eq i64 %2338, %2312
  br i1 %2339, label %2340, label %2314, !llvm.loop !95

2340:                                             ; preds = %2314
  %2341 = mul <8 x i32> %2335, %2334
  %2342 = mul <8 x i32> %2336, %2341
  %2343 = mul <8 x i32> %2337, %2342
  %2344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2343)
  %2345 = icmp eq i64 %2308, %2312
  br i1 %2345, label %2358, label %2346

2346:                                             ; preds = %2299, %2340
  %2347 = phi i64 [ %2302, %2299 ], [ %2313, %2340 ]
  %2348 = phi i32 [ 1, %2299 ], [ %2344, %2340 ]
  br label %2349

2349:                                             ; preds = %2346, %2349
  %2350 = phi i64 [ %2355, %2349 ], [ %2347, %2346 ]
  %2351 = phi i32 [ %2354, %2349 ], [ %2348, %2346 ]
  %2352 = getelementptr inbounds i32, ptr %11, i64 %2350
  %2353 = load i32, ptr %2352, align 4, !tbaa !5
  %2354 = mul nsw i32 %2353, %2351
  %2355 = add nsw i64 %2350, -1
  %2356 = trunc i64 %2350 to i32
  %2357 = icmp sgt i32 %2356, 0
  br i1 %2357, label %2349, label %2358, !llvm.loop !96

2358:                                             ; preds = %2349, %2340
  %2359 = phi i32 [ %2344, %2340 ], [ %2354, %2349 ]
  %2360 = and i64 %2309, 4294967295
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !5
  %2363 = mul nsw i32 %2362, %2359
  %2364 = add nsw i32 %2363, %2303
  %2365 = icmp sgt i64 %2301, 2
  %2366 = add nsw i64 %2302, -1
  %2367 = add i32 %2300, 1
  br i1 %2365, label %2299, label %2368, !llvm.loop !97

2368:                                             ; preds = %2358, %2295
  %2369 = phi i32 [ %2298, %2295 ], [ %2364, %2358 ]
  %2370 = icmp slt i32 %2369, %5
  br i1 %2370, label %2373, label %2371

2371:                                             ; preds = %2368
  %2372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

2373:                                             ; preds = %2368
  %2374 = sext i32 %2369 to i64
  %2375 = getelementptr inbounds i8, ptr %1831, i64 %2374
  %2376 = load i8, ptr %2375, align 1, !tbaa !11
  %2377 = zext i8 %2376 to i16
  %2378 = add i16 %2296, %2377
  store i16 %2378, ptr %1833, align 2, !tbaa !78
  %2379 = add nuw nsw i32 %2297, 1
  br i1 %2148, label %2380, label %2430

2380:                                             ; preds = %2373
  %2381 = load i32, ptr %4, align 4, !tbaa !5
  %2382 = load i32, ptr %12, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, -1
  %2384 = icmp slt i32 %2381, %2383
  br i1 %2384, label %2407, label %2385

2385:                                             ; preds = %2380
  %2386 = icmp eq i32 %2381, %2383
  br i1 %2386, label %2387, label %2423

2387:                                             ; preds = %2385
  store i32 0, ptr %4, align 4, !tbaa !5
  %2388 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2388, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2430, label %2389

2389:                                             ; preds = %2387, %2417
  %2390 = phi i64 [ %2421, %2417 ], [ 1, %2387 ]
  %2391 = getelementptr inbounds i32, ptr %4, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = getelementptr inbounds i32, ptr %12, i64 %2390
  %2394 = load i32, ptr %2393, align 4, !tbaa !5
  %2395 = add nsw i32 %2394, -1
  %2396 = icmp slt i32 %2392, %2395
  br i1 %2396, label %2397, label %2415

2397:                                             ; preds = %2389
  br i1 %2384, label %2407, label %2398

2398:                                             ; preds = %2397
  %2399 = shl i64 %2390, 32
  %2400 = add i64 %2399, -4294967296
  %2401 = ashr exact i64 %2400, 32
  %2402 = getelementptr inbounds i32, ptr %7, i64 %2401
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2390
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, %2403
  store i32 %2406, ptr %2404, align 4, !tbaa !5
  br label %2425

2407:                                             ; preds = %2380, %2397
  %2408 = phi i32 [ %2392, %2397 ], [ %2381, %2380 ]
  %2409 = phi ptr [ %2391, %2397 ], [ %4, %2380 ]
  %2410 = phi i64 [ %2390, %2397 ], [ 0, %2380 ]
  %2411 = add nsw i32 %2408, 1
  store i32 %2411, ptr %2409, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %7, i64 %2410
  %2413 = load i32, ptr %2412, align 4, !tbaa !5
  %2414 = getelementptr inbounds i32, ptr %6, i64 %2410
  br label %2425

2415:                                             ; preds = %2389
  %2416 = icmp eq i32 %2392, %2395
  br i1 %2416, label %2417, label %2423

2417:                                             ; preds = %2415
  store i32 0, ptr %2391, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %8, i64 %2390
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2390
  store i32 %2419, ptr %2420, align 4, !tbaa !5
  %2421 = add nuw nsw i64 %2390, 1
  %2422 = icmp eq i64 %2421, %2151
  br i1 %2422, label %2430, label %2389, !llvm.loop !98

2423:                                             ; preds = %2385, %2415
  %2424 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2425:                                             ; preds = %2398, %2407
  %2426 = phi ptr [ %2414, %2407 ], [ %2391, %2398 ]
  %2427 = phi i32 [ %2413, %2407 ], [ 1, %2398 ]
  %2428 = load i32, ptr %2426, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2427
  store i32 %2429, ptr %2426, align 4, !tbaa !5
  br label %2430

2430:                                             ; preds = %2417, %2425, %2387, %2373
  %2431 = icmp eq i32 %2379, %5
  br i1 %2431, label %5444, label %2295, !llvm.loop !99

2432:                                             ; preds = %1838
  %2433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

2434:                                             ; preds = %18
  %2435 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  %2437 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2438 = load ptr, ptr %2437, align 8, !tbaa !9
  store i32 0, ptr %2438, align 4, !tbaa !5
  %2439 = icmp eq i32 %13, 0
  br i1 %2439, label %2440, label %2443

2440:                                             ; preds = %2434
  %2441 = load i8, ptr %2436, align 1, !tbaa !11
  %2442 = zext i8 %2441 to i32
  store i32 %2442, ptr %2438, align 4, !tbaa !5
  br label %5444

2443:                                             ; preds = %2434
  switch i32 %1, label %3034 [
    i32 1, label %2444
    i32 0, label %2742
  ]

2444:                                             ; preds = %2443
  %2445 = getelementptr inbounds i32, ptr %3, i64 %19
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp sgt i32 %5, 0
  br i1 %2447, label %2458, label %2449

2449:                                             ; preds = %2444
  br i1 %2448, label %2450, label %5444

2450:                                             ; preds = %2449
  %2451 = icmp sgt i32 %13, 1
  %2452 = icmp sgt i32 %13, 0
  %2453 = add i32 %13, -2
  %2454 = zext i32 %2453 to i64
  %2455 = zext i32 %13 to i64
  %2456 = add nuw i32 %5, 1
  %2457 = icmp eq i32 %13, 1
  br label %2605

2458:                                             ; preds = %2444
  br i1 %2448, label %2459, label %5444

2459:                                             ; preds = %2458
  %2460 = icmp sgt i32 %13, 1
  %2461 = icmp sgt i32 %13, 0
  %2462 = add i32 %13, -2
  %2463 = zext i32 %2462 to i64
  %2464 = zext i32 %13 to i64
  %2465 = add nuw i32 %5, 1
  %2466 = icmp eq i32 %13, 1
  br label %2467

2467:                                             ; preds = %2459, %2603
  %2468 = phi i32 [ 0, %2459 ], [ %2555, %2603 ]
  %2469 = phi double [ 0.000000e+00, %2459 ], [ %2554, %2603 ]
  %2470 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2460, label %2471, label %2540

2471:                                             ; preds = %2467, %2530
  %2472 = phi i32 [ %2539, %2530 ], [ 0, %2467 ]
  %2473 = phi i64 [ %2481, %2530 ], [ %2464, %2467 ]
  %2474 = phi i64 [ %2538, %2530 ], [ %2463, %2467 ]
  %2475 = phi i32 [ %2536, %2530 ], [ %2470, %2467 ]
  %2476 = sub i32 %2462, %2472
  %2477 = tail call i32 @llvm.smin.i32(i32 %2476, i32 0)
  %2478 = sub i32 %2476, %2477
  %2479 = zext i32 %2478 to i64
  %2480 = add nuw nsw i64 %2479, 1
  %2481 = add nsw i64 %2473, -1
  %2482 = icmp ult i32 %2478, 31
  br i1 %2482, label %2518, label %2483

2483:                                             ; preds = %2471
  %2484 = and i64 %2480, 8589934560
  %2485 = sub i64 %2474, %2484
  br label %2486

2486:                                             ; preds = %2486, %2483
  %2487 = phi i64 [ 0, %2483 ], [ %2510, %2486 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2506, %2486 ]
  %2489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2507, %2486 ]
  %2490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2508, %2486 ]
  %2491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2509, %2486 ]
  %2492 = sub i64 %2474, %2487
  %2493 = getelementptr inbounds i32, ptr %9, i64 %2492
  %2494 = getelementptr inbounds i32, ptr %2493, i64 -7
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2493, i64 -15
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2493, i64 -23
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = getelementptr inbounds i32, ptr %2493, i64 -31
  %2504 = load <8 x i32>, ptr %2503, align 4, !tbaa !5
  %2505 = shufflevector <8 x i32> %2504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2506 = mul <8 x i32> %2496, %2488
  %2507 = mul <8 x i32> %2499, %2489
  %2508 = mul <8 x i32> %2502, %2490
  %2509 = mul <8 x i32> %2505, %2491
  %2510 = add nuw i64 %2487, 32
  %2511 = icmp eq i64 %2510, %2484
  br i1 %2511, label %2512, label %2486, !llvm.loop !100

2512:                                             ; preds = %2486
  %2513 = mul <8 x i32> %2507, %2506
  %2514 = mul <8 x i32> %2508, %2513
  %2515 = mul <8 x i32> %2509, %2514
  %2516 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2515)
  %2517 = icmp eq i64 %2480, %2484
  br i1 %2517, label %2530, label %2518

2518:                                             ; preds = %2471, %2512
  %2519 = phi i64 [ %2474, %2471 ], [ %2485, %2512 ]
  %2520 = phi i32 [ 1, %2471 ], [ %2516, %2512 ]
  br label %2521

2521:                                             ; preds = %2518, %2521
  %2522 = phi i64 [ %2527, %2521 ], [ %2519, %2518 ]
  %2523 = phi i32 [ %2526, %2521 ], [ %2520, %2518 ]
  %2524 = getelementptr inbounds i32, ptr %9, i64 %2522
  %2525 = load i32, ptr %2524, align 4, !tbaa !5
  %2526 = mul nsw i32 %2525, %2523
  %2527 = add nsw i64 %2522, -1
  %2528 = trunc i64 %2522 to i32
  %2529 = icmp sgt i32 %2528, 0
  br i1 %2529, label %2521, label %2530, !llvm.loop !101

2530:                                             ; preds = %2521, %2512
  %2531 = phi i32 [ %2516, %2512 ], [ %2526, %2521 ]
  %2532 = and i64 %2481, 4294967295
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2532
  %2534 = load i32, ptr %2533, align 4, !tbaa !5
  %2535 = mul nsw i32 %2534, %2531
  %2536 = add nsw i32 %2535, %2475
  %2537 = icmp sgt i64 %2473, 2
  %2538 = add nsw i64 %2474, -1
  %2539 = add i32 %2472, 1
  br i1 %2537, label %2471, label %2540, !llvm.loop !102

2540:                                             ; preds = %2530, %2467
  %2541 = phi i32 [ %2470, %2467 ], [ %2536, %2530 ]
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds double, ptr %2, i64 %2542
  %2544 = load double, ptr %2543, align 8, !tbaa !18
  %2545 = getelementptr inbounds i8, ptr %2436, i64 %2542
  %2546 = load i8, ptr %2545, align 1, !tbaa !11
  %2547 = load i32, ptr %2438, align 4, !tbaa !5
  %2548 = sitofp i32 %2547 to double
  %2549 = uitofp i8 %2546 to double
  %2550 = fmul fast double %2544, %2549
  %2551 = tail call fast double @llvm.fabs.f64(double %2550)
  %2552 = fadd fast double %2551, %2548
  %2553 = fptosi double %2552 to i32
  store i32 %2553, ptr %2438, align 4, !tbaa !5
  %2554 = fadd fast double %2544, %2469
  %2555 = add nuw nsw i32 %2468, 1
  br i1 %2461, label %2556, label %2603

2556:                                             ; preds = %2540
  %2557 = load i32, ptr %4, align 4, !tbaa !5
  %2558 = load i32, ptr %12, align 4, !tbaa !5
  %2559 = add nsw i32 %2558, -1
  %2560 = icmp slt i32 %2557, %2559
  br i1 %2560, label %2580, label %2561

2561:                                             ; preds = %2556
  %2562 = icmp eq i32 %2557, %2559
  br i1 %2562, label %2563, label %2596

2563:                                             ; preds = %2561
  store i32 0, ptr %4, align 4, !tbaa !5
  %2564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2564, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2603, label %2565

2565:                                             ; preds = %2563, %2590
  %2566 = phi i64 [ %2594, %2590 ], [ 1, %2563 ]
  %2567 = getelementptr inbounds i32, ptr %4, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %12, i64 %2566
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = add nsw i32 %2570, -1
  %2572 = icmp slt i32 %2568, %2571
  br i1 %2572, label %2573, label %2588

2573:                                             ; preds = %2565
  br i1 %2560, label %2580, label %2574

2574:                                             ; preds = %2573
  %2575 = getelementptr inbounds i32, ptr %7, i64 %2566
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = add nsw i32 %2578, %2576
  store i32 %2579, ptr %2577, align 4, !tbaa !5
  br label %2598

2580:                                             ; preds = %2556, %2573
  %2581 = phi i32 [ %2568, %2573 ], [ %2557, %2556 ]
  %2582 = phi ptr [ %2567, %2573 ], [ %4, %2556 ]
  %2583 = phi i64 [ %2566, %2573 ], [ 0, %2556 ]
  %2584 = add nsw i32 %2581, 1
  store i32 %2584, ptr %2582, align 4, !tbaa !5
  %2585 = getelementptr inbounds i32, ptr %7, i64 %2583
  %2586 = load i32, ptr %2585, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %6, i64 %2583
  br label %2598

2588:                                             ; preds = %2565
  %2589 = icmp eq i32 %2568, %2571
  br i1 %2589, label %2590, label %2596

2590:                                             ; preds = %2588
  store i32 0, ptr %2567, align 4, !tbaa !5
  %2591 = getelementptr inbounds i32, ptr %8, i64 %2566
  %2592 = load i32, ptr %2591, align 4, !tbaa !5
  %2593 = getelementptr inbounds i32, ptr %6, i64 %2566
  store i32 %2592, ptr %2593, align 4, !tbaa !5
  %2594 = add nuw nsw i64 %2566, 1
  %2595 = icmp eq i64 %2594, %2464
  br i1 %2595, label %2603, label %2565, !llvm.loop !103

2596:                                             ; preds = %2561, %2588
  %2597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2598:                                             ; preds = %2574, %2580
  %2599 = phi ptr [ %2587, %2580 ], [ %2567, %2574 ]
  %2600 = phi i32 [ %2586, %2580 ], [ 1, %2574 ]
  %2601 = load i32, ptr %2599, align 4, !tbaa !5
  %2602 = add nsw i32 %2601, %2600
  store i32 %2602, ptr %2599, align 4, !tbaa !5
  br label %2603

2603:                                             ; preds = %2590, %2598, %2563, %2540
  %2604 = icmp eq i32 %2555, %5
  br i1 %2604, label %5444, label %2467, !llvm.loop !104

2605:                                             ; preds = %2450, %2740
  %2606 = phi i32 [ 0, %2450 ], [ %2689, %2740 ]
  %2607 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2451, label %2608, label %2677

2608:                                             ; preds = %2605, %2667
  %2609 = phi i32 [ %2676, %2667 ], [ 0, %2605 ]
  %2610 = phi i64 [ %2618, %2667 ], [ %2455, %2605 ]
  %2611 = phi i64 [ %2675, %2667 ], [ %2454, %2605 ]
  %2612 = phi i32 [ %2673, %2667 ], [ %2607, %2605 ]
  %2613 = sub i32 %2453, %2609
  %2614 = tail call i32 @llvm.smin.i32(i32 %2613, i32 0)
  %2615 = sub i32 %2613, %2614
  %2616 = zext i32 %2615 to i64
  %2617 = add nuw nsw i64 %2616, 1
  %2618 = add nsw i64 %2610, -1
  %2619 = icmp ult i32 %2615, 31
  br i1 %2619, label %2655, label %2620

2620:                                             ; preds = %2608
  %2621 = and i64 %2617, 8589934560
  %2622 = sub i64 %2611, %2621
  br label %2623

2623:                                             ; preds = %2623, %2620
  %2624 = phi i64 [ 0, %2620 ], [ %2647, %2623 ]
  %2625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2643, %2623 ]
  %2626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2644, %2623 ]
  %2627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2645, %2623 ]
  %2628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2646, %2623 ]
  %2629 = sub i64 %2611, %2624
  %2630 = getelementptr inbounds i32, ptr %11, i64 %2629
  %2631 = getelementptr inbounds i32, ptr %2630, i64 -7
  %2632 = load <8 x i32>, ptr %2631, align 4, !tbaa !5
  %2633 = shufflevector <8 x i32> %2632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2634 = getelementptr inbounds i32, ptr %2630, i64 -15
  %2635 = load <8 x i32>, ptr %2634, align 4, !tbaa !5
  %2636 = shufflevector <8 x i32> %2635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2637 = getelementptr inbounds i32, ptr %2630, i64 -23
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !5
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2630, i64 -31
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = mul <8 x i32> %2633, %2625
  %2644 = mul <8 x i32> %2636, %2626
  %2645 = mul <8 x i32> %2639, %2627
  %2646 = mul <8 x i32> %2642, %2628
  %2647 = add nuw i64 %2624, 32
  %2648 = icmp eq i64 %2647, %2621
  br i1 %2648, label %2649, label %2623, !llvm.loop !105

2649:                                             ; preds = %2623
  %2650 = mul <8 x i32> %2644, %2643
  %2651 = mul <8 x i32> %2645, %2650
  %2652 = mul <8 x i32> %2646, %2651
  %2653 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2652)
  %2654 = icmp eq i64 %2617, %2621
  br i1 %2654, label %2667, label %2655

2655:                                             ; preds = %2608, %2649
  %2656 = phi i64 [ %2611, %2608 ], [ %2622, %2649 ]
  %2657 = phi i32 [ 1, %2608 ], [ %2653, %2649 ]
  br label %2658

2658:                                             ; preds = %2655, %2658
  %2659 = phi i64 [ %2664, %2658 ], [ %2656, %2655 ]
  %2660 = phi i32 [ %2663, %2658 ], [ %2657, %2655 ]
  %2661 = getelementptr inbounds i32, ptr %11, i64 %2659
  %2662 = load i32, ptr %2661, align 4, !tbaa !5
  %2663 = mul nsw i32 %2662, %2660
  %2664 = add nsw i64 %2659, -1
  %2665 = trunc i64 %2659 to i32
  %2666 = icmp sgt i32 %2665, 0
  br i1 %2666, label %2658, label %2667, !llvm.loop !106

2667:                                             ; preds = %2658, %2649
  %2668 = phi i32 [ %2653, %2649 ], [ %2663, %2658 ]
  %2669 = and i64 %2618, 4294967295
  %2670 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2668
  %2673 = add nsw i32 %2672, %2612
  %2674 = icmp sgt i64 %2610, 2
  %2675 = add nsw i64 %2611, -1
  %2676 = add i32 %2609, 1
  br i1 %2674, label %2608, label %2677, !llvm.loop !107

2677:                                             ; preds = %2667, %2605
  %2678 = phi i32 [ %2607, %2605 ], [ %2673, %2667 ]
  %2679 = icmp slt i32 %2678, %5
  br i1 %2679, label %2682, label %2680

2680:                                             ; preds = %2677
  %2681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

2682:                                             ; preds = %2677
  %2683 = load i32, ptr %2438, align 4, !tbaa !5
  %2684 = sext i32 %2678 to i64
  %2685 = getelementptr inbounds i8, ptr %2436, i64 %2684
  %2686 = load i8, ptr %2685, align 1, !tbaa !11
  %2687 = zext i8 %2686 to i32
  %2688 = add i32 %2683, %2687
  store i32 %2688, ptr %2438, align 4, !tbaa !5
  %2689 = add nuw nsw i32 %2606, 1
  br i1 %2452, label %2690, label %2740

2690:                                             ; preds = %2682
  %2691 = load i32, ptr %4, align 4, !tbaa !5
  %2692 = load i32, ptr %12, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, -1
  %2694 = icmp slt i32 %2691, %2693
  br i1 %2694, label %2717, label %2695

2695:                                             ; preds = %2690
  %2696 = icmp eq i32 %2691, %2693
  br i1 %2696, label %2697, label %2733

2697:                                             ; preds = %2695
  store i32 0, ptr %4, align 4, !tbaa !5
  %2698 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2698, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2740, label %2699

2699:                                             ; preds = %2697, %2727
  %2700 = phi i64 [ %2731, %2727 ], [ 1, %2697 ]
  %2701 = getelementptr inbounds i32, ptr %4, i64 %2700
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = getelementptr inbounds i32, ptr %12, i64 %2700
  %2704 = load i32, ptr %2703, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, -1
  %2706 = icmp slt i32 %2702, %2705
  br i1 %2706, label %2707, label %2725

2707:                                             ; preds = %2699
  br i1 %2694, label %2717, label %2708

2708:                                             ; preds = %2707
  %2709 = shl i64 %2700, 32
  %2710 = add i64 %2709, -4294967296
  %2711 = ashr exact i64 %2710, 32
  %2712 = getelementptr inbounds i32, ptr %7, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2700
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2713
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  br label %2735

2717:                                             ; preds = %2690, %2707
  %2718 = phi i32 [ %2702, %2707 ], [ %2691, %2690 ]
  %2719 = phi ptr [ %2701, %2707 ], [ %4, %2690 ]
  %2720 = phi i64 [ %2700, %2707 ], [ 0, %2690 ]
  %2721 = add nsw i32 %2718, 1
  store i32 %2721, ptr %2719, align 4, !tbaa !5
  %2722 = getelementptr inbounds i32, ptr %7, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !5
  %2724 = getelementptr inbounds i32, ptr %6, i64 %2720
  br label %2735

2725:                                             ; preds = %2699
  %2726 = icmp eq i32 %2702, %2705
  br i1 %2726, label %2727, label %2733

2727:                                             ; preds = %2725
  store i32 0, ptr %2701, align 4, !tbaa !5
  %2728 = getelementptr inbounds i32, ptr %8, i64 %2700
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = getelementptr inbounds i32, ptr %6, i64 %2700
  store i32 %2729, ptr %2730, align 4, !tbaa !5
  %2731 = add nuw nsw i64 %2700, 1
  %2732 = icmp eq i64 %2731, %2455
  br i1 %2732, label %2740, label %2699, !llvm.loop !108

2733:                                             ; preds = %2695, %2725
  %2734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2735:                                             ; preds = %2708, %2717
  %2736 = phi ptr [ %2724, %2717 ], [ %2701, %2708 ]
  %2737 = phi i32 [ %2723, %2717 ], [ 1, %2708 ]
  %2738 = load i32, ptr %2736, align 4, !tbaa !5
  %2739 = add nsw i32 %2738, %2737
  store i32 %2739, ptr %2736, align 4, !tbaa !5
  br label %2740

2740:                                             ; preds = %2727, %2735, %2697, %2682
  %2741 = icmp eq i32 %2689, %5
  br i1 %2741, label %5444, label %2605, !llvm.loop !109

2742:                                             ; preds = %2443
  %2743 = getelementptr inbounds i32, ptr %3, i64 %19
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp sgt i32 %5, 0
  br i1 %2745, label %2756, label %2747

2747:                                             ; preds = %2742
  br i1 %2746, label %2748, label %5444

2748:                                             ; preds = %2747
  %2749 = icmp sgt i32 %13, 1
  %2750 = icmp sgt i32 %13, 0
  %2751 = add i32 %13, -2
  %2752 = zext i32 %2751 to i64
  %2753 = zext i32 %13 to i64
  %2754 = add nuw i32 %5, 1
  %2755 = icmp eq i32 %13, 1
  br label %2897

2756:                                             ; preds = %2742
  br i1 %2746, label %2757, label %5444

2757:                                             ; preds = %2756
  %2758 = icmp sgt i32 %13, 1
  %2759 = icmp sgt i32 %13, 0
  %2760 = add i32 %13, -2
  %2761 = zext i32 %2760 to i64
  %2762 = zext i32 %13 to i64
  %2763 = add nuw i32 %5, 1
  %2764 = icmp eq i32 %13, 1
  br label %2765

2765:                                             ; preds = %2757, %2895
  %2766 = phi i32 [ 0, %2757 ], [ %2847, %2895 ]
  %2767 = phi double [ 0.000000e+00, %2757 ], [ %2846, %2895 ]
  %2768 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2758, label %2769, label %2838

2769:                                             ; preds = %2765, %2828
  %2770 = phi i32 [ %2837, %2828 ], [ 0, %2765 ]
  %2771 = phi i64 [ %2779, %2828 ], [ %2762, %2765 ]
  %2772 = phi i64 [ %2836, %2828 ], [ %2761, %2765 ]
  %2773 = phi i32 [ %2834, %2828 ], [ %2768, %2765 ]
  %2774 = sub i32 %2760, %2770
  %2775 = tail call i32 @llvm.smin.i32(i32 %2774, i32 0)
  %2776 = sub i32 %2774, %2775
  %2777 = zext i32 %2776 to i64
  %2778 = add nuw nsw i64 %2777, 1
  %2779 = add nsw i64 %2771, -1
  %2780 = icmp ult i32 %2776, 31
  br i1 %2780, label %2816, label %2781

2781:                                             ; preds = %2769
  %2782 = and i64 %2778, 8589934560
  %2783 = sub i64 %2772, %2782
  br label %2784

2784:                                             ; preds = %2784, %2781
  %2785 = phi i64 [ 0, %2781 ], [ %2808, %2784 ]
  %2786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2804, %2784 ]
  %2787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2805, %2784 ]
  %2788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2806, %2784 ]
  %2789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2807, %2784 ]
  %2790 = sub i64 %2772, %2785
  %2791 = getelementptr inbounds i32, ptr %9, i64 %2790
  %2792 = getelementptr inbounds i32, ptr %2791, i64 -7
  %2793 = load <8 x i32>, ptr %2792, align 4, !tbaa !5
  %2794 = shufflevector <8 x i32> %2793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2795 = getelementptr inbounds i32, ptr %2791, i64 -15
  %2796 = load <8 x i32>, ptr %2795, align 4, !tbaa !5
  %2797 = shufflevector <8 x i32> %2796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2798 = getelementptr inbounds i32, ptr %2791, i64 -23
  %2799 = load <8 x i32>, ptr %2798, align 4, !tbaa !5
  %2800 = shufflevector <8 x i32> %2799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2801 = getelementptr inbounds i32, ptr %2791, i64 -31
  %2802 = load <8 x i32>, ptr %2801, align 4, !tbaa !5
  %2803 = shufflevector <8 x i32> %2802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2804 = mul <8 x i32> %2794, %2786
  %2805 = mul <8 x i32> %2797, %2787
  %2806 = mul <8 x i32> %2800, %2788
  %2807 = mul <8 x i32> %2803, %2789
  %2808 = add nuw i64 %2785, 32
  %2809 = icmp eq i64 %2808, %2782
  br i1 %2809, label %2810, label %2784, !llvm.loop !110

2810:                                             ; preds = %2784
  %2811 = mul <8 x i32> %2805, %2804
  %2812 = mul <8 x i32> %2806, %2811
  %2813 = mul <8 x i32> %2807, %2812
  %2814 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2813)
  %2815 = icmp eq i64 %2778, %2782
  br i1 %2815, label %2828, label %2816

2816:                                             ; preds = %2769, %2810
  %2817 = phi i64 [ %2772, %2769 ], [ %2783, %2810 ]
  %2818 = phi i32 [ 1, %2769 ], [ %2814, %2810 ]
  br label %2819

2819:                                             ; preds = %2816, %2819
  %2820 = phi i64 [ %2825, %2819 ], [ %2817, %2816 ]
  %2821 = phi i32 [ %2824, %2819 ], [ %2818, %2816 ]
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2823 = load i32, ptr %2822, align 4, !tbaa !5
  %2824 = mul nsw i32 %2823, %2821
  %2825 = add nsw i64 %2820, -1
  %2826 = trunc i64 %2820 to i32
  %2827 = icmp sgt i32 %2826, 0
  br i1 %2827, label %2819, label %2828, !llvm.loop !111

2828:                                             ; preds = %2819, %2810
  %2829 = phi i32 [ %2814, %2810 ], [ %2824, %2819 ]
  %2830 = and i64 %2779, 4294967295
  %2831 = getelementptr inbounds i32, ptr %6, i64 %2830
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = mul nsw i32 %2832, %2829
  %2834 = add nsw i32 %2833, %2773
  %2835 = icmp sgt i64 %2771, 2
  %2836 = add nsw i64 %2772, -1
  %2837 = add i32 %2770, 1
  br i1 %2835, label %2769, label %2838, !llvm.loop !112

2838:                                             ; preds = %2828, %2765
  %2839 = phi i32 [ %2768, %2765 ], [ %2834, %2828 ]
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds i8, ptr %2436, i64 %2840
  %2842 = load i8, ptr %2841, align 1, !tbaa !11
  %2843 = zext i8 %2842 to i32
  %2844 = load i32, ptr %2438, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2843
  store i32 %2845, ptr %2438, align 4, !tbaa !5
  %2846 = fadd fast double %2767, 1.000000e+00
  %2847 = add nuw nsw i32 %2766, 1
  br i1 %2759, label %2848, label %2895

2848:                                             ; preds = %2838
  %2849 = load i32, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %12, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, -1
  %2852 = icmp slt i32 %2849, %2851
  br i1 %2852, label %2872, label %2853

2853:                                             ; preds = %2848
  %2854 = icmp eq i32 %2849, %2851
  br i1 %2854, label %2855, label %2888

2855:                                             ; preds = %2853
  store i32 0, ptr %4, align 4, !tbaa !5
  %2856 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2856, ptr %6, align 4, !tbaa !5
  br i1 %2764, label %2895, label %2857

2857:                                             ; preds = %2855, %2882
  %2858 = phi i64 [ %2886, %2882 ], [ 1, %2855 ]
  %2859 = getelementptr inbounds i32, ptr %4, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = getelementptr inbounds i32, ptr %12, i64 %2858
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = add nsw i32 %2862, -1
  %2864 = icmp slt i32 %2860, %2863
  br i1 %2864, label %2865, label %2880

2865:                                             ; preds = %2857
  br i1 %2852, label %2872, label %2866

2866:                                             ; preds = %2865
  %2867 = getelementptr inbounds i32, ptr %7, i64 %2858
  %2868 = load i32, ptr %2867, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = add nsw i32 %2870, %2868
  store i32 %2871, ptr %2869, align 4, !tbaa !5
  br label %2890

2872:                                             ; preds = %2848, %2865
  %2873 = phi i32 [ %2860, %2865 ], [ %2849, %2848 ]
  %2874 = phi ptr [ %2859, %2865 ], [ %4, %2848 ]
  %2875 = phi i64 [ %2858, %2865 ], [ 0, %2848 ]
  %2876 = add nsw i32 %2873, 1
  store i32 %2876, ptr %2874, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %7, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2875
  br label %2890

2880:                                             ; preds = %2857
  %2881 = icmp eq i32 %2860, %2863
  br i1 %2881, label %2882, label %2888

2882:                                             ; preds = %2880
  store i32 0, ptr %2859, align 4, !tbaa !5
  %2883 = getelementptr inbounds i32, ptr %8, i64 %2858
  %2884 = load i32, ptr %2883, align 4, !tbaa !5
  %2885 = getelementptr inbounds i32, ptr %6, i64 %2858
  store i32 %2884, ptr %2885, align 4, !tbaa !5
  %2886 = add nuw nsw i64 %2858, 1
  %2887 = icmp eq i64 %2886, %2762
  br i1 %2887, label %2895, label %2857, !llvm.loop !113

2888:                                             ; preds = %2853, %2880
  %2889 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

2890:                                             ; preds = %2866, %2872
  %2891 = phi ptr [ %2879, %2872 ], [ %2859, %2866 ]
  %2892 = phi i32 [ %2878, %2872 ], [ 1, %2866 ]
  %2893 = load i32, ptr %2891, align 4, !tbaa !5
  %2894 = add nsw i32 %2893, %2892
  store i32 %2894, ptr %2891, align 4, !tbaa !5
  br label %2895

2895:                                             ; preds = %2882, %2890, %2855, %2838
  %2896 = icmp eq i32 %2847, %5
  br i1 %2896, label %5444, label %2765, !llvm.loop !114

2897:                                             ; preds = %2748, %3032
  %2898 = phi i32 [ 0, %2748 ], [ %2981, %3032 ]
  %2899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2749, label %2900, label %2969

2900:                                             ; preds = %2897, %2959
  %2901 = phi i32 [ %2968, %2959 ], [ 0, %2897 ]
  %2902 = phi i64 [ %2910, %2959 ], [ %2753, %2897 ]
  %2903 = phi i64 [ %2967, %2959 ], [ %2752, %2897 ]
  %2904 = phi i32 [ %2965, %2959 ], [ %2899, %2897 ]
  %2905 = sub i32 %2751, %2901
  %2906 = tail call i32 @llvm.smin.i32(i32 %2905, i32 0)
  %2907 = sub i32 %2905, %2906
  %2908 = zext i32 %2907 to i64
  %2909 = add nuw nsw i64 %2908, 1
  %2910 = add nsw i64 %2902, -1
  %2911 = icmp ult i32 %2907, 31
  br i1 %2911, label %2947, label %2912

2912:                                             ; preds = %2900
  %2913 = and i64 %2909, 8589934560
  %2914 = sub i64 %2903, %2913
  br label %2915

2915:                                             ; preds = %2915, %2912
  %2916 = phi i64 [ 0, %2912 ], [ %2939, %2915 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2935, %2915 ]
  %2918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2936, %2915 ]
  %2919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2937, %2915 ]
  %2920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2938, %2915 ]
  %2921 = sub i64 %2903, %2916
  %2922 = getelementptr inbounds i32, ptr %11, i64 %2921
  %2923 = getelementptr inbounds i32, ptr %2922, i64 -7
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2922, i64 -15
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2922, i64 -23
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !5
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = getelementptr inbounds i32, ptr %2922, i64 -31
  %2933 = load <8 x i32>, ptr %2932, align 4, !tbaa !5
  %2934 = shufflevector <8 x i32> %2933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2935 = mul <8 x i32> %2925, %2917
  %2936 = mul <8 x i32> %2928, %2918
  %2937 = mul <8 x i32> %2931, %2919
  %2938 = mul <8 x i32> %2934, %2920
  %2939 = add nuw i64 %2916, 32
  %2940 = icmp eq i64 %2939, %2913
  br i1 %2940, label %2941, label %2915, !llvm.loop !115

2941:                                             ; preds = %2915
  %2942 = mul <8 x i32> %2936, %2935
  %2943 = mul <8 x i32> %2937, %2942
  %2944 = mul <8 x i32> %2938, %2943
  %2945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2944)
  %2946 = icmp eq i64 %2909, %2913
  br i1 %2946, label %2959, label %2947

2947:                                             ; preds = %2900, %2941
  %2948 = phi i64 [ %2903, %2900 ], [ %2914, %2941 ]
  %2949 = phi i32 [ 1, %2900 ], [ %2945, %2941 ]
  br label %2950

2950:                                             ; preds = %2947, %2950
  %2951 = phi i64 [ %2956, %2950 ], [ %2948, %2947 ]
  %2952 = phi i32 [ %2955, %2950 ], [ %2949, %2947 ]
  %2953 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2954 = load i32, ptr %2953, align 4, !tbaa !5
  %2955 = mul nsw i32 %2954, %2952
  %2956 = add nsw i64 %2951, -1
  %2957 = trunc i64 %2951 to i32
  %2958 = icmp sgt i32 %2957, 0
  br i1 %2958, label %2950, label %2959, !llvm.loop !116

2959:                                             ; preds = %2950, %2941
  %2960 = phi i32 [ %2945, %2941 ], [ %2955, %2950 ]
  %2961 = and i64 %2910, 4294967295
  %2962 = getelementptr inbounds i32, ptr %6, i64 %2961
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = mul nsw i32 %2963, %2960
  %2965 = add nsw i32 %2964, %2904
  %2966 = icmp sgt i64 %2902, 2
  %2967 = add nsw i64 %2903, -1
  %2968 = add i32 %2901, 1
  br i1 %2966, label %2900, label %2969, !llvm.loop !117

2969:                                             ; preds = %2959, %2897
  %2970 = phi i32 [ %2899, %2897 ], [ %2965, %2959 ]
  %2971 = icmp slt i32 %2970, %5
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2969
  %2973 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

2974:                                             ; preds = %2969
  %2975 = sext i32 %2970 to i64
  %2976 = getelementptr inbounds i8, ptr %2436, i64 %2975
  %2977 = load i8, ptr %2976, align 1, !tbaa !11
  %2978 = zext i8 %2977 to i32
  %2979 = load i32, ptr %2438, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2978
  store i32 %2980, ptr %2438, align 4, !tbaa !5
  %2981 = add nuw nsw i32 %2898, 1
  br i1 %2750, label %2982, label %3032

2982:                                             ; preds = %2974
  %2983 = load i32, ptr %4, align 4, !tbaa !5
  %2984 = load i32, ptr %12, align 4, !tbaa !5
  %2985 = add nsw i32 %2984, -1
  %2986 = icmp slt i32 %2983, %2985
  br i1 %2986, label %3009, label %2987

2987:                                             ; preds = %2982
  %2988 = icmp eq i32 %2983, %2985
  br i1 %2988, label %2989, label %3025

2989:                                             ; preds = %2987
  store i32 0, ptr %4, align 4, !tbaa !5
  %2990 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2990, ptr %6, align 4, !tbaa !5
  br i1 %2755, label %3032, label %2991

2991:                                             ; preds = %2989, %3019
  %2992 = phi i64 [ %3023, %3019 ], [ 1, %2989 ]
  %2993 = getelementptr inbounds i32, ptr %4, i64 %2992
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %12, i64 %2992
  %2996 = load i32, ptr %2995, align 4, !tbaa !5
  %2997 = add nsw i32 %2996, -1
  %2998 = icmp slt i32 %2994, %2997
  br i1 %2998, label %2999, label %3017

2999:                                             ; preds = %2991
  br i1 %2986, label %3009, label %3000

3000:                                             ; preds = %2999
  %3001 = shl i64 %2992, 32
  %3002 = add i64 %3001, -4294967296
  %3003 = ashr exact i64 %3002, 32
  %3004 = getelementptr inbounds i32, ptr %7, i64 %3003
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %6, i64 %2992
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = add nsw i32 %3007, %3005
  store i32 %3008, ptr %3006, align 4, !tbaa !5
  br label %3027

3009:                                             ; preds = %2982, %2999
  %3010 = phi i32 [ %2994, %2999 ], [ %2983, %2982 ]
  %3011 = phi ptr [ %2993, %2999 ], [ %4, %2982 ]
  %3012 = phi i64 [ %2992, %2999 ], [ 0, %2982 ]
  %3013 = add nsw i32 %3010, 1
  store i32 %3013, ptr %3011, align 4, !tbaa !5
  %3014 = getelementptr inbounds i32, ptr %7, i64 %3012
  %3015 = load i32, ptr %3014, align 4, !tbaa !5
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3012
  br label %3027

3017:                                             ; preds = %2991
  %3018 = icmp eq i32 %2994, %2997
  br i1 %3018, label %3019, label %3025

3019:                                             ; preds = %3017
  store i32 0, ptr %2993, align 4, !tbaa !5
  %3020 = getelementptr inbounds i32, ptr %8, i64 %2992
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = getelementptr inbounds i32, ptr %6, i64 %2992
  store i32 %3021, ptr %3022, align 4, !tbaa !5
  %3023 = add nuw nsw i64 %2992, 1
  %3024 = icmp eq i64 %3023, %2753
  br i1 %3024, label %3032, label %2991, !llvm.loop !118

3025:                                             ; preds = %2987, %3017
  %3026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3027:                                             ; preds = %3000, %3009
  %3028 = phi ptr [ %3016, %3009 ], [ %2993, %3000 ]
  %3029 = phi i32 [ %3015, %3009 ], [ 1, %3000 ]
  %3030 = load i32, ptr %3028, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, %3029
  store i32 %3031, ptr %3028, align 4, !tbaa !5
  br label %3032

3032:                                             ; preds = %3019, %3027, %2989, %2974
  %3033 = icmp eq i32 %2981, %5
  br i1 %3033, label %5444, label %2897, !llvm.loop !119

3034:                                             ; preds = %2443
  %3035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

3036:                                             ; preds = %18
  %3037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3038 = load ptr, ptr %3037, align 8, !tbaa !9
  %3039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3040 = load ptr, ptr %3039, align 8, !tbaa !9
  store i64 0, ptr %3040, align 8, !tbaa !120
  %3041 = icmp eq i32 %13, 0
  br i1 %3041, label %3042, label %3045

3042:                                             ; preds = %3036
  %3043 = load i8, ptr %3038, align 1, !tbaa !11
  %3044 = zext i8 %3043 to i64
  store i64 %3044, ptr %3040, align 8, !tbaa !120
  br label %5444

3045:                                             ; preds = %3036
  switch i32 %1, label %3638 [
    i32 1, label %3046
    i32 0, label %3346
  ]

3046:                                             ; preds = %3045
  %3047 = getelementptr inbounds i32, ptr %3, i64 %19
  %3048 = load i32, ptr %3047, align 4, !tbaa !5
  %3049 = icmp eq i32 %3048, 0
  %3050 = icmp sgt i32 %5, 0
  br i1 %3049, label %3060, label %3051

3051:                                             ; preds = %3046
  br i1 %3050, label %3052, label %5444

3052:                                             ; preds = %3051
  %3053 = icmp sgt i32 %13, 1
  %3054 = icmp sgt i32 %13, 0
  %3055 = add i32 %13, -2
  %3056 = zext i32 %3055 to i64
  %3057 = zext i32 %13 to i64
  %3058 = add nuw i32 %5, 1
  %3059 = icmp eq i32 %13, 1
  br label %3207

3060:                                             ; preds = %3046
  br i1 %3050, label %3061, label %5444

3061:                                             ; preds = %3060
  %3062 = icmp sgt i32 %13, 1
  %3063 = icmp sgt i32 %13, 0
  %3064 = add i32 %13, -2
  %3065 = zext i32 %3064 to i64
  %3066 = zext i32 %13 to i64
  %3067 = add nuw i32 %5, 1
  %3068 = icmp eq i32 %13, 1
  br label %3069

3069:                                             ; preds = %3061, %3205
  %3070 = phi i64 [ 0, %3061 ], [ %3155, %3205 ]
  %3071 = phi i32 [ 0, %3061 ], [ %3157, %3205 ]
  %3072 = phi double [ 0.000000e+00, %3061 ], [ %3156, %3205 ]
  %3073 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3062, label %3074, label %3143

3074:                                             ; preds = %3069, %3133
  %3075 = phi i32 [ %3142, %3133 ], [ 0, %3069 ]
  %3076 = phi i64 [ %3084, %3133 ], [ %3066, %3069 ]
  %3077 = phi i64 [ %3141, %3133 ], [ %3065, %3069 ]
  %3078 = phi i32 [ %3139, %3133 ], [ %3073, %3069 ]
  %3079 = sub i32 %3064, %3075
  %3080 = tail call i32 @llvm.smin.i32(i32 %3079, i32 0)
  %3081 = sub i32 %3079, %3080
  %3082 = zext i32 %3081 to i64
  %3083 = add nuw nsw i64 %3082, 1
  %3084 = add nsw i64 %3076, -1
  %3085 = icmp ult i32 %3081, 31
  br i1 %3085, label %3121, label %3086

3086:                                             ; preds = %3074
  %3087 = and i64 %3083, 8589934560
  %3088 = sub i64 %3077, %3087
  br label %3089

3089:                                             ; preds = %3089, %3086
  %3090 = phi i64 [ 0, %3086 ], [ %3113, %3089 ]
  %3091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3109, %3089 ]
  %3092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3110, %3089 ]
  %3093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3111, %3089 ]
  %3094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3112, %3089 ]
  %3095 = sub i64 %3077, %3090
  %3096 = getelementptr inbounds i32, ptr %9, i64 %3095
  %3097 = getelementptr inbounds i32, ptr %3096, i64 -7
  %3098 = load <8 x i32>, ptr %3097, align 4, !tbaa !5
  %3099 = shufflevector <8 x i32> %3098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3100 = getelementptr inbounds i32, ptr %3096, i64 -15
  %3101 = load <8 x i32>, ptr %3100, align 4, !tbaa !5
  %3102 = shufflevector <8 x i32> %3101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3103 = getelementptr inbounds i32, ptr %3096, i64 -23
  %3104 = load <8 x i32>, ptr %3103, align 4, !tbaa !5
  %3105 = shufflevector <8 x i32> %3104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3106 = getelementptr inbounds i32, ptr %3096, i64 -31
  %3107 = load <8 x i32>, ptr %3106, align 4, !tbaa !5
  %3108 = shufflevector <8 x i32> %3107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3109 = mul <8 x i32> %3099, %3091
  %3110 = mul <8 x i32> %3102, %3092
  %3111 = mul <8 x i32> %3105, %3093
  %3112 = mul <8 x i32> %3108, %3094
  %3113 = add nuw i64 %3090, 32
  %3114 = icmp eq i64 %3113, %3087
  br i1 %3114, label %3115, label %3089, !llvm.loop !122

3115:                                             ; preds = %3089
  %3116 = mul <8 x i32> %3110, %3109
  %3117 = mul <8 x i32> %3111, %3116
  %3118 = mul <8 x i32> %3112, %3117
  %3119 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3118)
  %3120 = icmp eq i64 %3083, %3087
  br i1 %3120, label %3133, label %3121

3121:                                             ; preds = %3074, %3115
  %3122 = phi i64 [ %3077, %3074 ], [ %3088, %3115 ]
  %3123 = phi i32 [ 1, %3074 ], [ %3119, %3115 ]
  br label %3124

3124:                                             ; preds = %3121, %3124
  %3125 = phi i64 [ %3130, %3124 ], [ %3122, %3121 ]
  %3126 = phi i32 [ %3129, %3124 ], [ %3123, %3121 ]
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3125
  %3128 = load i32, ptr %3127, align 4, !tbaa !5
  %3129 = mul nsw i32 %3128, %3126
  %3130 = add nsw i64 %3125, -1
  %3131 = trunc i64 %3125 to i32
  %3132 = icmp sgt i32 %3131, 0
  br i1 %3132, label %3124, label %3133, !llvm.loop !123

3133:                                             ; preds = %3124, %3115
  %3134 = phi i32 [ %3119, %3115 ], [ %3129, %3124 ]
  %3135 = and i64 %3084, 4294967295
  %3136 = getelementptr inbounds i32, ptr %6, i64 %3135
  %3137 = load i32, ptr %3136, align 4, !tbaa !5
  %3138 = mul nsw i32 %3137, %3134
  %3139 = add nsw i32 %3138, %3078
  %3140 = icmp sgt i64 %3076, 2
  %3141 = add nsw i64 %3077, -1
  %3142 = add i32 %3075, 1
  br i1 %3140, label %3074, label %3143, !llvm.loop !124

3143:                                             ; preds = %3133, %3069
  %3144 = phi i32 [ %3073, %3069 ], [ %3139, %3133 ]
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds double, ptr %2, i64 %3145
  %3147 = load double, ptr %3146, align 8, !tbaa !18
  %3148 = getelementptr inbounds i8, ptr %3038, i64 %3145
  %3149 = load i8, ptr %3148, align 1, !tbaa !11
  %3150 = sitofp i64 %3070 to double
  %3151 = uitofp i8 %3149 to double
  %3152 = fmul fast double %3147, %3151
  %3153 = tail call fast double @llvm.fabs.f64(double %3152)
  %3154 = fadd fast double %3153, %3150
  %3155 = fptosi double %3154 to i64
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  %3156 = fadd fast double %3147, %3072
  %3157 = add nuw nsw i32 %3071, 1
  br i1 %3063, label %3158, label %3205

3158:                                             ; preds = %3143
  %3159 = load i32, ptr %4, align 4, !tbaa !5
  %3160 = load i32, ptr %12, align 4, !tbaa !5
  %3161 = add nsw i32 %3160, -1
  %3162 = icmp slt i32 %3159, %3161
  br i1 %3162, label %3182, label %3163

3163:                                             ; preds = %3158
  %3164 = icmp eq i32 %3159, %3161
  br i1 %3164, label %3165, label %3198

3165:                                             ; preds = %3163
  store i32 0, ptr %4, align 4, !tbaa !5
  %3166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3166, ptr %6, align 4, !tbaa !5
  br i1 %3068, label %3205, label %3167

3167:                                             ; preds = %3165, %3192
  %3168 = phi i64 [ %3196, %3192 ], [ 1, %3165 ]
  %3169 = getelementptr inbounds i32, ptr %4, i64 %3168
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %12, i64 %3168
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, -1
  %3174 = icmp slt i32 %3170, %3173
  br i1 %3174, label %3175, label %3190

3175:                                             ; preds = %3167
  br i1 %3162, label %3182, label %3176

3176:                                             ; preds = %3175
  %3177 = getelementptr inbounds i32, ptr %7, i64 %3168
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %6, i64 %3168
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = add nsw i32 %3180, %3178
  store i32 %3181, ptr %3179, align 4, !tbaa !5
  br label %3200

3182:                                             ; preds = %3158, %3175
  %3183 = phi i32 [ %3170, %3175 ], [ %3159, %3158 ]
  %3184 = phi ptr [ %3169, %3175 ], [ %4, %3158 ]
  %3185 = phi i64 [ %3168, %3175 ], [ 0, %3158 ]
  %3186 = add nsw i32 %3183, 1
  store i32 %3186, ptr %3184, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %7, i64 %3185
  %3188 = load i32, ptr %3187, align 4, !tbaa !5
  %3189 = getelementptr inbounds i32, ptr %6, i64 %3185
  br label %3200

3190:                                             ; preds = %3167
  %3191 = icmp eq i32 %3170, %3173
  br i1 %3191, label %3192, label %3198

3192:                                             ; preds = %3190
  store i32 0, ptr %3169, align 4, !tbaa !5
  %3193 = getelementptr inbounds i32, ptr %8, i64 %3168
  %3194 = load i32, ptr %3193, align 4, !tbaa !5
  %3195 = getelementptr inbounds i32, ptr %6, i64 %3168
  store i32 %3194, ptr %3195, align 4, !tbaa !5
  %3196 = add nuw nsw i64 %3168, 1
  %3197 = icmp eq i64 %3196, %3066
  br i1 %3197, label %3205, label %3167, !llvm.loop !125

3198:                                             ; preds = %3163, %3190
  %3199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3200:                                             ; preds = %3176, %3182
  %3201 = phi ptr [ %3189, %3182 ], [ %3169, %3176 ]
  %3202 = phi i32 [ %3188, %3182 ], [ 1, %3176 ]
  %3203 = load i32, ptr %3201, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, %3202
  store i32 %3204, ptr %3201, align 4, !tbaa !5
  br label %3205

3205:                                             ; preds = %3192, %3200, %3165, %3143
  %3206 = icmp eq i32 %3157, %5
  br i1 %3206, label %5444, label %3069, !llvm.loop !126

3207:                                             ; preds = %3052, %3344
  %3208 = phi i64 [ 0, %3052 ], [ %3292, %3344 ]
  %3209 = phi i32 [ 0, %3052 ], [ %3293, %3344 ]
  %3210 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3053, label %3211, label %3280

3211:                                             ; preds = %3207, %3270
  %3212 = phi i32 [ %3279, %3270 ], [ 0, %3207 ]
  %3213 = phi i64 [ %3221, %3270 ], [ %3057, %3207 ]
  %3214 = phi i64 [ %3278, %3270 ], [ %3056, %3207 ]
  %3215 = phi i32 [ %3276, %3270 ], [ %3210, %3207 ]
  %3216 = sub i32 %3055, %3212
  %3217 = tail call i32 @llvm.smin.i32(i32 %3216, i32 0)
  %3218 = sub i32 %3216, %3217
  %3219 = zext i32 %3218 to i64
  %3220 = add nuw nsw i64 %3219, 1
  %3221 = add nsw i64 %3213, -1
  %3222 = icmp ult i32 %3218, 31
  br i1 %3222, label %3258, label %3223

3223:                                             ; preds = %3211
  %3224 = and i64 %3220, 8589934560
  %3225 = sub i64 %3214, %3224
  br label %3226

3226:                                             ; preds = %3226, %3223
  %3227 = phi i64 [ 0, %3223 ], [ %3250, %3226 ]
  %3228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3246, %3226 ]
  %3229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3247, %3226 ]
  %3230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3248, %3226 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3249, %3226 ]
  %3232 = sub i64 %3214, %3227
  %3233 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3234 = getelementptr inbounds i32, ptr %3233, i64 -7
  %3235 = load <8 x i32>, ptr %3234, align 4, !tbaa !5
  %3236 = shufflevector <8 x i32> %3235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3237 = getelementptr inbounds i32, ptr %3233, i64 -15
  %3238 = load <8 x i32>, ptr %3237, align 4, !tbaa !5
  %3239 = shufflevector <8 x i32> %3238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3240 = getelementptr inbounds i32, ptr %3233, i64 -23
  %3241 = load <8 x i32>, ptr %3240, align 4, !tbaa !5
  %3242 = shufflevector <8 x i32> %3241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3243 = getelementptr inbounds i32, ptr %3233, i64 -31
  %3244 = load <8 x i32>, ptr %3243, align 4, !tbaa !5
  %3245 = shufflevector <8 x i32> %3244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3246 = mul <8 x i32> %3236, %3228
  %3247 = mul <8 x i32> %3239, %3229
  %3248 = mul <8 x i32> %3242, %3230
  %3249 = mul <8 x i32> %3245, %3231
  %3250 = add nuw i64 %3227, 32
  %3251 = icmp eq i64 %3250, %3224
  br i1 %3251, label %3252, label %3226, !llvm.loop !127

3252:                                             ; preds = %3226
  %3253 = mul <8 x i32> %3247, %3246
  %3254 = mul <8 x i32> %3248, %3253
  %3255 = mul <8 x i32> %3249, %3254
  %3256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3255)
  %3257 = icmp eq i64 %3220, %3224
  br i1 %3257, label %3270, label %3258

3258:                                             ; preds = %3211, %3252
  %3259 = phi i64 [ %3214, %3211 ], [ %3225, %3252 ]
  %3260 = phi i32 [ 1, %3211 ], [ %3256, %3252 ]
  br label %3261

3261:                                             ; preds = %3258, %3261
  %3262 = phi i64 [ %3267, %3261 ], [ %3259, %3258 ]
  %3263 = phi i32 [ %3266, %3261 ], [ %3260, %3258 ]
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3262
  %3265 = load i32, ptr %3264, align 4, !tbaa !5
  %3266 = mul nsw i32 %3265, %3263
  %3267 = add nsw i64 %3262, -1
  %3268 = trunc i64 %3262 to i32
  %3269 = icmp sgt i32 %3268, 0
  br i1 %3269, label %3261, label %3270, !llvm.loop !128

3270:                                             ; preds = %3261, %3252
  %3271 = phi i32 [ %3256, %3252 ], [ %3266, %3261 ]
  %3272 = and i64 %3221, 4294967295
  %3273 = getelementptr inbounds i32, ptr %6, i64 %3272
  %3274 = load i32, ptr %3273, align 4, !tbaa !5
  %3275 = mul nsw i32 %3274, %3271
  %3276 = add nsw i32 %3275, %3215
  %3277 = icmp sgt i64 %3213, 2
  %3278 = add nsw i64 %3214, -1
  %3279 = add i32 %3212, 1
  br i1 %3277, label %3211, label %3280, !llvm.loop !129

3280:                                             ; preds = %3270, %3207
  %3281 = phi i32 [ %3210, %3207 ], [ %3276, %3270 ]
  %3282 = icmp slt i32 %3281, %5
  br i1 %3282, label %3285, label %3283

3283:                                             ; preds = %3280
  %3284 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

3285:                                             ; preds = %3280
  %3286 = sitofp i64 %3208 to double
  %3287 = sext i32 %3281 to i64
  %3288 = getelementptr inbounds i8, ptr %3038, i64 %3287
  %3289 = load i8, ptr %3288, align 1, !tbaa !11
  %3290 = uitofp i8 %3289 to double
  %3291 = fadd fast double %3290, %3286
  %3292 = fptosi double %3291 to i64
  store i64 %3292, ptr %3040, align 8, !tbaa !120
  %3293 = add nuw nsw i32 %3209, 1
  br i1 %3054, label %3294, label %3344

3294:                                             ; preds = %3285
  %3295 = load i32, ptr %4, align 4, !tbaa !5
  %3296 = load i32, ptr %12, align 4, !tbaa !5
  %3297 = add nsw i32 %3296, -1
  %3298 = icmp slt i32 %3295, %3297
  br i1 %3298, label %3321, label %3299

3299:                                             ; preds = %3294
  %3300 = icmp eq i32 %3295, %3297
  br i1 %3300, label %3301, label %3337

3301:                                             ; preds = %3299
  store i32 0, ptr %4, align 4, !tbaa !5
  %3302 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3302, ptr %6, align 4, !tbaa !5
  br i1 %3059, label %3344, label %3303

3303:                                             ; preds = %3301, %3331
  %3304 = phi i64 [ %3335, %3331 ], [ 1, %3301 ]
  %3305 = getelementptr inbounds i32, ptr %4, i64 %3304
  %3306 = load i32, ptr %3305, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %12, i64 %3304
  %3308 = load i32, ptr %3307, align 4, !tbaa !5
  %3309 = add nsw i32 %3308, -1
  %3310 = icmp slt i32 %3306, %3309
  br i1 %3310, label %3311, label %3329

3311:                                             ; preds = %3303
  br i1 %3298, label %3321, label %3312

3312:                                             ; preds = %3311
  %3313 = shl i64 %3304, 32
  %3314 = add i64 %3313, -4294967296
  %3315 = ashr exact i64 %3314, 32
  %3316 = getelementptr inbounds i32, ptr %7, i64 %3315
  %3317 = load i32, ptr %3316, align 4, !tbaa !5
  %3318 = getelementptr inbounds i32, ptr %6, i64 %3304
  %3319 = load i32, ptr %3318, align 4, !tbaa !5
  %3320 = add nsw i32 %3319, %3317
  store i32 %3320, ptr %3318, align 4, !tbaa !5
  br label %3339

3321:                                             ; preds = %3294, %3311
  %3322 = phi i32 [ %3306, %3311 ], [ %3295, %3294 ]
  %3323 = phi ptr [ %3305, %3311 ], [ %4, %3294 ]
  %3324 = phi i64 [ %3304, %3311 ], [ 0, %3294 ]
  %3325 = add nsw i32 %3322, 1
  store i32 %3325, ptr %3323, align 4, !tbaa !5
  %3326 = getelementptr inbounds i32, ptr %7, i64 %3324
  %3327 = load i32, ptr %3326, align 4, !tbaa !5
  %3328 = getelementptr inbounds i32, ptr %6, i64 %3324
  br label %3339

3329:                                             ; preds = %3303
  %3330 = icmp eq i32 %3306, %3309
  br i1 %3330, label %3331, label %3337

3331:                                             ; preds = %3329
  store i32 0, ptr %3305, align 4, !tbaa !5
  %3332 = getelementptr inbounds i32, ptr %8, i64 %3304
  %3333 = load i32, ptr %3332, align 4, !tbaa !5
  %3334 = getelementptr inbounds i32, ptr %6, i64 %3304
  store i32 %3333, ptr %3334, align 4, !tbaa !5
  %3335 = add nuw nsw i64 %3304, 1
  %3336 = icmp eq i64 %3335, %3057
  br i1 %3336, label %3344, label %3303, !llvm.loop !130

3337:                                             ; preds = %3299, %3329
  %3338 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3339:                                             ; preds = %3312, %3321
  %3340 = phi ptr [ %3328, %3321 ], [ %3305, %3312 ]
  %3341 = phi i32 [ %3327, %3321 ], [ 1, %3312 ]
  %3342 = load i32, ptr %3340, align 4, !tbaa !5
  %3343 = add nsw i32 %3342, %3341
  store i32 %3343, ptr %3340, align 4, !tbaa !5
  br label %3344

3344:                                             ; preds = %3331, %3339, %3301, %3285
  %3345 = icmp eq i32 %3293, %5
  br i1 %3345, label %5444, label %3207, !llvm.loop !131

3346:                                             ; preds = %3045
  %3347 = getelementptr inbounds i32, ptr %3, i64 %19
  %3348 = load i32, ptr %3347, align 4, !tbaa !5
  %3349 = icmp eq i32 %3348, 0
  %3350 = icmp sgt i32 %5, 0
  br i1 %3349, label %3360, label %3351

3351:                                             ; preds = %3346
  br i1 %3350, label %3352, label %5444

3352:                                             ; preds = %3351
  %3353 = icmp sgt i32 %13, 1
  %3354 = icmp sgt i32 %13, 0
  %3355 = add i32 %13, -2
  %3356 = zext i32 %3355 to i64
  %3357 = zext i32 %13 to i64
  %3358 = add nuw i32 %5, 1
  %3359 = icmp eq i32 %13, 1
  br label %3501

3360:                                             ; preds = %3346
  br i1 %3350, label %3361, label %5444

3361:                                             ; preds = %3360
  %3362 = icmp sgt i32 %13, 1
  %3363 = icmp sgt i32 %13, 0
  %3364 = add i32 %13, -2
  %3365 = zext i32 %3364 to i64
  %3366 = zext i32 %13 to i64
  %3367 = add nuw i32 %5, 1
  %3368 = icmp eq i32 %13, 1
  br label %3369

3369:                                             ; preds = %3361, %3499
  %3370 = phi i64 [ 0, %3361 ], [ %3449, %3499 ]
  %3371 = phi i32 [ 0, %3361 ], [ %3451, %3499 ]
  %3372 = phi double [ 0.000000e+00, %3361 ], [ %3450, %3499 ]
  %3373 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3362, label %3374, label %3443

3374:                                             ; preds = %3369, %3433
  %3375 = phi i32 [ %3442, %3433 ], [ 0, %3369 ]
  %3376 = phi i64 [ %3384, %3433 ], [ %3366, %3369 ]
  %3377 = phi i64 [ %3441, %3433 ], [ %3365, %3369 ]
  %3378 = phi i32 [ %3439, %3433 ], [ %3373, %3369 ]
  %3379 = sub i32 %3364, %3375
  %3380 = tail call i32 @llvm.smin.i32(i32 %3379, i32 0)
  %3381 = sub i32 %3379, %3380
  %3382 = zext i32 %3381 to i64
  %3383 = add nuw nsw i64 %3382, 1
  %3384 = add nsw i64 %3376, -1
  %3385 = icmp ult i32 %3381, 31
  br i1 %3385, label %3421, label %3386

3386:                                             ; preds = %3374
  %3387 = and i64 %3383, 8589934560
  %3388 = sub i64 %3377, %3387
  br label %3389

3389:                                             ; preds = %3389, %3386
  %3390 = phi i64 [ 0, %3386 ], [ %3413, %3389 ]
  %3391 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3386 ], [ %3409, %3389 ]
  %3392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3386 ], [ %3410, %3389 ]
  %3393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3386 ], [ %3411, %3389 ]
  %3394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3386 ], [ %3412, %3389 ]
  %3395 = sub i64 %3377, %3390
  %3396 = getelementptr inbounds i32, ptr %9, i64 %3395
  %3397 = getelementptr inbounds i32, ptr %3396, i64 -7
  %3398 = load <8 x i32>, ptr %3397, align 4, !tbaa !5
  %3399 = shufflevector <8 x i32> %3398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3400 = getelementptr inbounds i32, ptr %3396, i64 -15
  %3401 = load <8 x i32>, ptr %3400, align 4, !tbaa !5
  %3402 = shufflevector <8 x i32> %3401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3403 = getelementptr inbounds i32, ptr %3396, i64 -23
  %3404 = load <8 x i32>, ptr %3403, align 4, !tbaa !5
  %3405 = shufflevector <8 x i32> %3404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3406 = getelementptr inbounds i32, ptr %3396, i64 -31
  %3407 = load <8 x i32>, ptr %3406, align 4, !tbaa !5
  %3408 = shufflevector <8 x i32> %3407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3409 = mul <8 x i32> %3399, %3391
  %3410 = mul <8 x i32> %3402, %3392
  %3411 = mul <8 x i32> %3405, %3393
  %3412 = mul <8 x i32> %3408, %3394
  %3413 = add nuw i64 %3390, 32
  %3414 = icmp eq i64 %3413, %3387
  br i1 %3414, label %3415, label %3389, !llvm.loop !132

3415:                                             ; preds = %3389
  %3416 = mul <8 x i32> %3410, %3409
  %3417 = mul <8 x i32> %3411, %3416
  %3418 = mul <8 x i32> %3412, %3417
  %3419 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3418)
  %3420 = icmp eq i64 %3383, %3387
  br i1 %3420, label %3433, label %3421

3421:                                             ; preds = %3374, %3415
  %3422 = phi i64 [ %3377, %3374 ], [ %3388, %3415 ]
  %3423 = phi i32 [ 1, %3374 ], [ %3419, %3415 ]
  br label %3424

3424:                                             ; preds = %3421, %3424
  %3425 = phi i64 [ %3430, %3424 ], [ %3422, %3421 ]
  %3426 = phi i32 [ %3429, %3424 ], [ %3423, %3421 ]
  %3427 = getelementptr inbounds i32, ptr %9, i64 %3425
  %3428 = load i32, ptr %3427, align 4, !tbaa !5
  %3429 = mul nsw i32 %3428, %3426
  %3430 = add nsw i64 %3425, -1
  %3431 = trunc i64 %3425 to i32
  %3432 = icmp sgt i32 %3431, 0
  br i1 %3432, label %3424, label %3433, !llvm.loop !133

3433:                                             ; preds = %3424, %3415
  %3434 = phi i32 [ %3419, %3415 ], [ %3429, %3424 ]
  %3435 = and i64 %3384, 4294967295
  %3436 = getelementptr inbounds i32, ptr %6, i64 %3435
  %3437 = load i32, ptr %3436, align 4, !tbaa !5
  %3438 = mul nsw i32 %3437, %3434
  %3439 = add nsw i32 %3438, %3378
  %3440 = icmp sgt i64 %3376, 2
  %3441 = add nsw i64 %3377, -1
  %3442 = add i32 %3375, 1
  br i1 %3440, label %3374, label %3443, !llvm.loop !134

3443:                                             ; preds = %3433, %3369
  %3444 = phi i32 [ %3373, %3369 ], [ %3439, %3433 ]
  %3445 = sext i32 %3444 to i64
  %3446 = getelementptr inbounds i8, ptr %3038, i64 %3445
  %3447 = load i8, ptr %3446, align 1, !tbaa !11
  %3448 = zext i8 %3447 to i64
  %3449 = add nuw nsw i64 %3370, %3448
  store i64 %3449, ptr %3040, align 8, !tbaa !120
  %3450 = fadd fast double %3372, 1.000000e+00
  %3451 = add nuw nsw i32 %3371, 1
  br i1 %3363, label %3452, label %3499

3452:                                             ; preds = %3443
  %3453 = load i32, ptr %4, align 4, !tbaa !5
  %3454 = load i32, ptr %12, align 4, !tbaa !5
  %3455 = add nsw i32 %3454, -1
  %3456 = icmp slt i32 %3453, %3455
  br i1 %3456, label %3476, label %3457

3457:                                             ; preds = %3452
  %3458 = icmp eq i32 %3453, %3455
  br i1 %3458, label %3459, label %3492

3459:                                             ; preds = %3457
  store i32 0, ptr %4, align 4, !tbaa !5
  %3460 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3460, ptr %6, align 4, !tbaa !5
  br i1 %3368, label %3499, label %3461

3461:                                             ; preds = %3459, %3486
  %3462 = phi i64 [ %3490, %3486 ], [ 1, %3459 ]
  %3463 = getelementptr inbounds i32, ptr %4, i64 %3462
  %3464 = load i32, ptr %3463, align 4, !tbaa !5
  %3465 = getelementptr inbounds i32, ptr %12, i64 %3462
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = add nsw i32 %3466, -1
  %3468 = icmp slt i32 %3464, %3467
  br i1 %3468, label %3469, label %3484

3469:                                             ; preds = %3461
  br i1 %3456, label %3476, label %3470

3470:                                             ; preds = %3469
  %3471 = getelementptr inbounds i32, ptr %7, i64 %3462
  %3472 = load i32, ptr %3471, align 4, !tbaa !5
  %3473 = getelementptr inbounds i32, ptr %6, i64 %3462
  %3474 = load i32, ptr %3473, align 4, !tbaa !5
  %3475 = add nsw i32 %3474, %3472
  store i32 %3475, ptr %3473, align 4, !tbaa !5
  br label %3494

3476:                                             ; preds = %3452, %3469
  %3477 = phi i32 [ %3464, %3469 ], [ %3453, %3452 ]
  %3478 = phi ptr [ %3463, %3469 ], [ %4, %3452 ]
  %3479 = phi i64 [ %3462, %3469 ], [ 0, %3452 ]
  %3480 = add nsw i32 %3477, 1
  store i32 %3480, ptr %3478, align 4, !tbaa !5
  %3481 = getelementptr inbounds i32, ptr %7, i64 %3479
  %3482 = load i32, ptr %3481, align 4, !tbaa !5
  %3483 = getelementptr inbounds i32, ptr %6, i64 %3479
  br label %3494

3484:                                             ; preds = %3461
  %3485 = icmp eq i32 %3464, %3467
  br i1 %3485, label %3486, label %3492

3486:                                             ; preds = %3484
  store i32 0, ptr %3463, align 4, !tbaa !5
  %3487 = getelementptr inbounds i32, ptr %8, i64 %3462
  %3488 = load i32, ptr %3487, align 4, !tbaa !5
  %3489 = getelementptr inbounds i32, ptr %6, i64 %3462
  store i32 %3488, ptr %3489, align 4, !tbaa !5
  %3490 = add nuw nsw i64 %3462, 1
  %3491 = icmp eq i64 %3490, %3366
  br i1 %3491, label %3499, label %3461, !llvm.loop !135

3492:                                             ; preds = %3457, %3484
  %3493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3494:                                             ; preds = %3470, %3476
  %3495 = phi ptr [ %3483, %3476 ], [ %3463, %3470 ]
  %3496 = phi i32 [ %3482, %3476 ], [ 1, %3470 ]
  %3497 = load i32, ptr %3495, align 4, !tbaa !5
  %3498 = add nsw i32 %3497, %3496
  store i32 %3498, ptr %3495, align 4, !tbaa !5
  br label %3499

3499:                                             ; preds = %3486, %3494, %3459, %3443
  %3500 = icmp eq i32 %3451, %5
  br i1 %3500, label %5444, label %3369, !llvm.loop !136

3501:                                             ; preds = %3352, %3636
  %3502 = phi i64 [ 0, %3352 ], [ %3584, %3636 ]
  %3503 = phi i32 [ 0, %3352 ], [ %3585, %3636 ]
  %3504 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3353, label %3505, label %3574

3505:                                             ; preds = %3501, %3564
  %3506 = phi i32 [ %3573, %3564 ], [ 0, %3501 ]
  %3507 = phi i64 [ %3515, %3564 ], [ %3357, %3501 ]
  %3508 = phi i64 [ %3572, %3564 ], [ %3356, %3501 ]
  %3509 = phi i32 [ %3570, %3564 ], [ %3504, %3501 ]
  %3510 = sub i32 %3355, %3506
  %3511 = tail call i32 @llvm.smin.i32(i32 %3510, i32 0)
  %3512 = sub i32 %3510, %3511
  %3513 = zext i32 %3512 to i64
  %3514 = add nuw nsw i64 %3513, 1
  %3515 = add nsw i64 %3507, -1
  %3516 = icmp ult i32 %3512, 31
  br i1 %3516, label %3552, label %3517

3517:                                             ; preds = %3505
  %3518 = and i64 %3514, 8589934560
  %3519 = sub i64 %3508, %3518
  br label %3520

3520:                                             ; preds = %3520, %3517
  %3521 = phi i64 [ 0, %3517 ], [ %3544, %3520 ]
  %3522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3517 ], [ %3540, %3520 ]
  %3523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3517 ], [ %3541, %3520 ]
  %3524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3517 ], [ %3542, %3520 ]
  %3525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3517 ], [ %3543, %3520 ]
  %3526 = sub i64 %3508, %3521
  %3527 = getelementptr inbounds i32, ptr %11, i64 %3526
  %3528 = getelementptr inbounds i32, ptr %3527, i64 -7
  %3529 = load <8 x i32>, ptr %3528, align 4, !tbaa !5
  %3530 = shufflevector <8 x i32> %3529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3531 = getelementptr inbounds i32, ptr %3527, i64 -15
  %3532 = load <8 x i32>, ptr %3531, align 4, !tbaa !5
  %3533 = shufflevector <8 x i32> %3532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3534 = getelementptr inbounds i32, ptr %3527, i64 -23
  %3535 = load <8 x i32>, ptr %3534, align 4, !tbaa !5
  %3536 = shufflevector <8 x i32> %3535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3537 = getelementptr inbounds i32, ptr %3527, i64 -31
  %3538 = load <8 x i32>, ptr %3537, align 4, !tbaa !5
  %3539 = shufflevector <8 x i32> %3538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3540 = mul <8 x i32> %3530, %3522
  %3541 = mul <8 x i32> %3533, %3523
  %3542 = mul <8 x i32> %3536, %3524
  %3543 = mul <8 x i32> %3539, %3525
  %3544 = add nuw i64 %3521, 32
  %3545 = icmp eq i64 %3544, %3518
  br i1 %3545, label %3546, label %3520, !llvm.loop !137

3546:                                             ; preds = %3520
  %3547 = mul <8 x i32> %3541, %3540
  %3548 = mul <8 x i32> %3542, %3547
  %3549 = mul <8 x i32> %3543, %3548
  %3550 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3549)
  %3551 = icmp eq i64 %3514, %3518
  br i1 %3551, label %3564, label %3552

3552:                                             ; preds = %3505, %3546
  %3553 = phi i64 [ %3508, %3505 ], [ %3519, %3546 ]
  %3554 = phi i32 [ 1, %3505 ], [ %3550, %3546 ]
  br label %3555

3555:                                             ; preds = %3552, %3555
  %3556 = phi i64 [ %3561, %3555 ], [ %3553, %3552 ]
  %3557 = phi i32 [ %3560, %3555 ], [ %3554, %3552 ]
  %3558 = getelementptr inbounds i32, ptr %11, i64 %3556
  %3559 = load i32, ptr %3558, align 4, !tbaa !5
  %3560 = mul nsw i32 %3559, %3557
  %3561 = add nsw i64 %3556, -1
  %3562 = trunc i64 %3556 to i32
  %3563 = icmp sgt i32 %3562, 0
  br i1 %3563, label %3555, label %3564, !llvm.loop !138

3564:                                             ; preds = %3555, %3546
  %3565 = phi i32 [ %3550, %3546 ], [ %3560, %3555 ]
  %3566 = and i64 %3515, 4294967295
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3566
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = mul nsw i32 %3568, %3565
  %3570 = add nsw i32 %3569, %3509
  %3571 = icmp sgt i64 %3507, 2
  %3572 = add nsw i64 %3508, -1
  %3573 = add i32 %3506, 1
  br i1 %3571, label %3505, label %3574, !llvm.loop !139

3574:                                             ; preds = %3564, %3501
  %3575 = phi i32 [ %3504, %3501 ], [ %3570, %3564 ]
  %3576 = icmp slt i32 %3575, %5
  br i1 %3576, label %3579, label %3577

3577:                                             ; preds = %3574
  %3578 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

3579:                                             ; preds = %3574
  %3580 = sext i32 %3575 to i64
  %3581 = getelementptr inbounds i8, ptr %3038, i64 %3580
  %3582 = load i8, ptr %3581, align 1, !tbaa !11
  %3583 = zext i8 %3582 to i64
  %3584 = add nuw nsw i64 %3502, %3583
  store i64 %3584, ptr %3040, align 8, !tbaa !120
  %3585 = add nuw nsw i32 %3503, 1
  br i1 %3354, label %3586, label %3636

3586:                                             ; preds = %3579
  %3587 = load i32, ptr %4, align 4, !tbaa !5
  %3588 = load i32, ptr %12, align 4, !tbaa !5
  %3589 = add nsw i32 %3588, -1
  %3590 = icmp slt i32 %3587, %3589
  br i1 %3590, label %3613, label %3591

3591:                                             ; preds = %3586
  %3592 = icmp eq i32 %3587, %3589
  br i1 %3592, label %3593, label %3629

3593:                                             ; preds = %3591
  store i32 0, ptr %4, align 4, !tbaa !5
  %3594 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3594, ptr %6, align 4, !tbaa !5
  br i1 %3359, label %3636, label %3595

3595:                                             ; preds = %3593, %3623
  %3596 = phi i64 [ %3627, %3623 ], [ 1, %3593 ]
  %3597 = getelementptr inbounds i32, ptr %4, i64 %3596
  %3598 = load i32, ptr %3597, align 4, !tbaa !5
  %3599 = getelementptr inbounds i32, ptr %12, i64 %3596
  %3600 = load i32, ptr %3599, align 4, !tbaa !5
  %3601 = add nsw i32 %3600, -1
  %3602 = icmp slt i32 %3598, %3601
  br i1 %3602, label %3603, label %3621

3603:                                             ; preds = %3595
  br i1 %3590, label %3613, label %3604

3604:                                             ; preds = %3603
  %3605 = shl i64 %3596, 32
  %3606 = add i64 %3605, -4294967296
  %3607 = ashr exact i64 %3606, 32
  %3608 = getelementptr inbounds i32, ptr %7, i64 %3607
  %3609 = load i32, ptr %3608, align 4, !tbaa !5
  %3610 = getelementptr inbounds i32, ptr %6, i64 %3596
  %3611 = load i32, ptr %3610, align 4, !tbaa !5
  %3612 = add nsw i32 %3611, %3609
  store i32 %3612, ptr %3610, align 4, !tbaa !5
  br label %3631

3613:                                             ; preds = %3586, %3603
  %3614 = phi i32 [ %3598, %3603 ], [ %3587, %3586 ]
  %3615 = phi ptr [ %3597, %3603 ], [ %4, %3586 ]
  %3616 = phi i64 [ %3596, %3603 ], [ 0, %3586 ]
  %3617 = add nsw i32 %3614, 1
  store i32 %3617, ptr %3615, align 4, !tbaa !5
  %3618 = getelementptr inbounds i32, ptr %7, i64 %3616
  %3619 = load i32, ptr %3618, align 4, !tbaa !5
  %3620 = getelementptr inbounds i32, ptr %6, i64 %3616
  br label %3631

3621:                                             ; preds = %3595
  %3622 = icmp eq i32 %3598, %3601
  br i1 %3622, label %3623, label %3629

3623:                                             ; preds = %3621
  store i32 0, ptr %3597, align 4, !tbaa !5
  %3624 = getelementptr inbounds i32, ptr %8, i64 %3596
  %3625 = load i32, ptr %3624, align 4, !tbaa !5
  %3626 = getelementptr inbounds i32, ptr %6, i64 %3596
  store i32 %3625, ptr %3626, align 4, !tbaa !5
  %3627 = add nuw nsw i64 %3596, 1
  %3628 = icmp eq i64 %3627, %3357
  br i1 %3628, label %3636, label %3595, !llvm.loop !140

3629:                                             ; preds = %3591, %3621
  %3630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3631:                                             ; preds = %3604, %3613
  %3632 = phi ptr [ %3620, %3613 ], [ %3597, %3604 ]
  %3633 = phi i32 [ %3619, %3613 ], [ 1, %3604 ]
  %3634 = load i32, ptr %3632, align 4, !tbaa !5
  %3635 = add nsw i32 %3634, %3633
  store i32 %3635, ptr %3632, align 4, !tbaa !5
  br label %3636

3636:                                             ; preds = %3623, %3631, %3593, %3579
  %3637 = icmp eq i32 %3585, %5
  br i1 %3637, label %5444, label %3501, !llvm.loop !141

3638:                                             ; preds = %3045
  %3639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

3640:                                             ; preds = %18
  %3641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3642 = load ptr, ptr %3641, align 8, !tbaa !9
  %3643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3644 = load ptr, ptr %3643, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3644, align 8, !tbaa !18
  %3645 = icmp eq i32 %13, 0
  br i1 %3645, label %3646, label %3649

3646:                                             ; preds = %3640
  %3647 = load i8, ptr %3642, align 1, !tbaa !11
  %3648 = uitofp i8 %3647 to double
  store double %3648, ptr %3644, align 8, !tbaa !18
  br label %5444

3649:                                             ; preds = %3640
  switch i32 %1, label %4238 [
    i32 1, label %3650
    i32 0, label %3946
  ]

3650:                                             ; preds = %3649
  %3651 = getelementptr inbounds i32, ptr %3, i64 %19
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = icmp eq i32 %3652, 0
  %3654 = icmp sgt i32 %5, 0
  br i1 %3653, label %3664, label %3655

3655:                                             ; preds = %3650
  br i1 %3654, label %3656, label %5444

3656:                                             ; preds = %3655
  %3657 = icmp sgt i32 %13, 1
  %3658 = icmp sgt i32 %13, 0
  %3659 = add i32 %13, -2
  %3660 = zext i32 %3659 to i64
  %3661 = zext i32 %13 to i64
  %3662 = add nuw i32 %5, 1
  %3663 = icmp eq i32 %13, 1
  br label %3809

3664:                                             ; preds = %3650
  br i1 %3654, label %3665, label %5444

3665:                                             ; preds = %3664
  %3666 = icmp sgt i32 %13, 1
  %3667 = icmp sgt i32 %13, 0
  %3668 = add i32 %13, -2
  %3669 = zext i32 %3668 to i64
  %3670 = zext i32 %13 to i64
  %3671 = add nuw i32 %5, 1
  %3672 = icmp eq i32 %13, 1
  br label %3673

3673:                                             ; preds = %3665, %3807
  %3674 = phi double [ 0.000000e+00, %3665 ], [ %3757, %3807 ]
  %3675 = phi i32 [ 0, %3665 ], [ %3759, %3807 ]
  %3676 = phi double [ 0.000000e+00, %3665 ], [ %3758, %3807 ]
  %3677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3666, label %3678, label %3747

3678:                                             ; preds = %3673, %3737
  %3679 = phi i32 [ %3746, %3737 ], [ 0, %3673 ]
  %3680 = phi i64 [ %3688, %3737 ], [ %3670, %3673 ]
  %3681 = phi i64 [ %3745, %3737 ], [ %3669, %3673 ]
  %3682 = phi i32 [ %3743, %3737 ], [ %3677, %3673 ]
  %3683 = sub i32 %3668, %3679
  %3684 = tail call i32 @llvm.smin.i32(i32 %3683, i32 0)
  %3685 = sub i32 %3683, %3684
  %3686 = zext i32 %3685 to i64
  %3687 = add nuw nsw i64 %3686, 1
  %3688 = add nsw i64 %3680, -1
  %3689 = icmp ult i32 %3685, 31
  br i1 %3689, label %3725, label %3690

3690:                                             ; preds = %3678
  %3691 = and i64 %3687, 8589934560
  %3692 = sub i64 %3681, %3691
  br label %3693

3693:                                             ; preds = %3693, %3690
  %3694 = phi i64 [ 0, %3690 ], [ %3717, %3693 ]
  %3695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3713, %3693 ]
  %3696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3714, %3693 ]
  %3697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3715, %3693 ]
  %3698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3716, %3693 ]
  %3699 = sub i64 %3681, %3694
  %3700 = getelementptr inbounds i32, ptr %9, i64 %3699
  %3701 = getelementptr inbounds i32, ptr %3700, i64 -7
  %3702 = load <8 x i32>, ptr %3701, align 4, !tbaa !5
  %3703 = shufflevector <8 x i32> %3702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3704 = getelementptr inbounds i32, ptr %3700, i64 -15
  %3705 = load <8 x i32>, ptr %3704, align 4, !tbaa !5
  %3706 = shufflevector <8 x i32> %3705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3707 = getelementptr inbounds i32, ptr %3700, i64 -23
  %3708 = load <8 x i32>, ptr %3707, align 4, !tbaa !5
  %3709 = shufflevector <8 x i32> %3708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3710 = getelementptr inbounds i32, ptr %3700, i64 -31
  %3711 = load <8 x i32>, ptr %3710, align 4, !tbaa !5
  %3712 = shufflevector <8 x i32> %3711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3713 = mul <8 x i32> %3703, %3695
  %3714 = mul <8 x i32> %3706, %3696
  %3715 = mul <8 x i32> %3709, %3697
  %3716 = mul <8 x i32> %3712, %3698
  %3717 = add nuw i64 %3694, 32
  %3718 = icmp eq i64 %3717, %3691
  br i1 %3718, label %3719, label %3693, !llvm.loop !142

3719:                                             ; preds = %3693
  %3720 = mul <8 x i32> %3714, %3713
  %3721 = mul <8 x i32> %3715, %3720
  %3722 = mul <8 x i32> %3716, %3721
  %3723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3722)
  %3724 = icmp eq i64 %3687, %3691
  br i1 %3724, label %3737, label %3725

3725:                                             ; preds = %3678, %3719
  %3726 = phi i64 [ %3681, %3678 ], [ %3692, %3719 ]
  %3727 = phi i32 [ 1, %3678 ], [ %3723, %3719 ]
  br label %3728

3728:                                             ; preds = %3725, %3728
  %3729 = phi i64 [ %3734, %3728 ], [ %3726, %3725 ]
  %3730 = phi i32 [ %3733, %3728 ], [ %3727, %3725 ]
  %3731 = getelementptr inbounds i32, ptr %9, i64 %3729
  %3732 = load i32, ptr %3731, align 4, !tbaa !5
  %3733 = mul nsw i32 %3732, %3730
  %3734 = add nsw i64 %3729, -1
  %3735 = trunc i64 %3729 to i32
  %3736 = icmp sgt i32 %3735, 0
  br i1 %3736, label %3728, label %3737, !llvm.loop !143

3737:                                             ; preds = %3728, %3719
  %3738 = phi i32 [ %3723, %3719 ], [ %3733, %3728 ]
  %3739 = and i64 %3688, 4294967295
  %3740 = getelementptr inbounds i32, ptr %6, i64 %3739
  %3741 = load i32, ptr %3740, align 4, !tbaa !5
  %3742 = mul nsw i32 %3741, %3738
  %3743 = add nsw i32 %3742, %3682
  %3744 = icmp sgt i64 %3680, 2
  %3745 = add nsw i64 %3681, -1
  %3746 = add i32 %3679, 1
  br i1 %3744, label %3678, label %3747, !llvm.loop !144

3747:                                             ; preds = %3737, %3673
  %3748 = phi i32 [ %3677, %3673 ], [ %3743, %3737 ]
  %3749 = sext i32 %3748 to i64
  %3750 = getelementptr inbounds double, ptr %2, i64 %3749
  %3751 = load double, ptr %3750, align 8, !tbaa !18
  %3752 = getelementptr inbounds i8, ptr %3642, i64 %3749
  %3753 = load i8, ptr %3752, align 1, !tbaa !11
  %3754 = uitofp i8 %3753 to double
  %3755 = fmul fast double %3751, %3754
  %3756 = tail call fast double @llvm.fabs.f64(double %3755)
  %3757 = fadd fast double %3756, %3674
  store double %3757, ptr %3644, align 8, !tbaa !18
  %3758 = fadd fast double %3751, %3676
  %3759 = add nuw nsw i32 %3675, 1
  br i1 %3667, label %3760, label %3807

3760:                                             ; preds = %3747
  %3761 = load i32, ptr %4, align 4, !tbaa !5
  %3762 = load i32, ptr %12, align 4, !tbaa !5
  %3763 = add nsw i32 %3762, -1
  %3764 = icmp slt i32 %3761, %3763
  br i1 %3764, label %3784, label %3765

3765:                                             ; preds = %3760
  %3766 = icmp eq i32 %3761, %3763
  br i1 %3766, label %3767, label %3800

3767:                                             ; preds = %3765
  store i32 0, ptr %4, align 4, !tbaa !5
  %3768 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3768, ptr %6, align 4, !tbaa !5
  br i1 %3672, label %3807, label %3769

3769:                                             ; preds = %3767, %3794
  %3770 = phi i64 [ %3798, %3794 ], [ 1, %3767 ]
  %3771 = getelementptr inbounds i32, ptr %4, i64 %3770
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = getelementptr inbounds i32, ptr %12, i64 %3770
  %3774 = load i32, ptr %3773, align 4, !tbaa !5
  %3775 = add nsw i32 %3774, -1
  %3776 = icmp slt i32 %3772, %3775
  br i1 %3776, label %3777, label %3792

3777:                                             ; preds = %3769
  br i1 %3764, label %3784, label %3778

3778:                                             ; preds = %3777
  %3779 = getelementptr inbounds i32, ptr %7, i64 %3770
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3770
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = add nsw i32 %3782, %3780
  store i32 %3783, ptr %3781, align 4, !tbaa !5
  br label %3802

3784:                                             ; preds = %3760, %3777
  %3785 = phi i32 [ %3772, %3777 ], [ %3761, %3760 ]
  %3786 = phi ptr [ %3771, %3777 ], [ %4, %3760 ]
  %3787 = phi i64 [ %3770, %3777 ], [ 0, %3760 ]
  %3788 = add nsw i32 %3785, 1
  store i32 %3788, ptr %3786, align 4, !tbaa !5
  %3789 = getelementptr inbounds i32, ptr %7, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = getelementptr inbounds i32, ptr %6, i64 %3787
  br label %3802

3792:                                             ; preds = %3769
  %3793 = icmp eq i32 %3772, %3775
  br i1 %3793, label %3794, label %3800

3794:                                             ; preds = %3792
  store i32 0, ptr %3771, align 4, !tbaa !5
  %3795 = getelementptr inbounds i32, ptr %8, i64 %3770
  %3796 = load i32, ptr %3795, align 4, !tbaa !5
  %3797 = getelementptr inbounds i32, ptr %6, i64 %3770
  store i32 %3796, ptr %3797, align 4, !tbaa !5
  %3798 = add nuw nsw i64 %3770, 1
  %3799 = icmp eq i64 %3798, %3670
  br i1 %3799, label %3807, label %3769, !llvm.loop !145

3800:                                             ; preds = %3765, %3792
  %3801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3802:                                             ; preds = %3778, %3784
  %3803 = phi ptr [ %3791, %3784 ], [ %3771, %3778 ]
  %3804 = phi i32 [ %3790, %3784 ], [ 1, %3778 ]
  %3805 = load i32, ptr %3803, align 4, !tbaa !5
  %3806 = add nsw i32 %3805, %3804
  store i32 %3806, ptr %3803, align 4, !tbaa !5
  br label %3807

3807:                                             ; preds = %3794, %3802, %3767, %3747
  %3808 = icmp eq i32 %3759, %5
  br i1 %3808, label %5444, label %3673, !llvm.loop !146

3809:                                             ; preds = %3656, %3944
  %3810 = phi double [ 0.000000e+00, %3656 ], [ %3892, %3944 ]
  %3811 = phi i32 [ 0, %3656 ], [ %3893, %3944 ]
  %3812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3657, label %3813, label %3882

3813:                                             ; preds = %3809, %3872
  %3814 = phi i32 [ %3881, %3872 ], [ 0, %3809 ]
  %3815 = phi i64 [ %3823, %3872 ], [ %3661, %3809 ]
  %3816 = phi i64 [ %3880, %3872 ], [ %3660, %3809 ]
  %3817 = phi i32 [ %3878, %3872 ], [ %3812, %3809 ]
  %3818 = sub i32 %3659, %3814
  %3819 = tail call i32 @llvm.smin.i32(i32 %3818, i32 0)
  %3820 = sub i32 %3818, %3819
  %3821 = zext i32 %3820 to i64
  %3822 = add nuw nsw i64 %3821, 1
  %3823 = add nsw i64 %3815, -1
  %3824 = icmp ult i32 %3820, 31
  br i1 %3824, label %3860, label %3825

3825:                                             ; preds = %3813
  %3826 = and i64 %3822, 8589934560
  %3827 = sub i64 %3816, %3826
  br label %3828

3828:                                             ; preds = %3828, %3825
  %3829 = phi i64 [ 0, %3825 ], [ %3852, %3828 ]
  %3830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3848, %3828 ]
  %3831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3849, %3828 ]
  %3832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3850, %3828 ]
  %3833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3851, %3828 ]
  %3834 = sub i64 %3816, %3829
  %3835 = getelementptr inbounds i32, ptr %11, i64 %3834
  %3836 = getelementptr inbounds i32, ptr %3835, i64 -7
  %3837 = load <8 x i32>, ptr %3836, align 4, !tbaa !5
  %3838 = shufflevector <8 x i32> %3837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3839 = getelementptr inbounds i32, ptr %3835, i64 -15
  %3840 = load <8 x i32>, ptr %3839, align 4, !tbaa !5
  %3841 = shufflevector <8 x i32> %3840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3842 = getelementptr inbounds i32, ptr %3835, i64 -23
  %3843 = load <8 x i32>, ptr %3842, align 4, !tbaa !5
  %3844 = shufflevector <8 x i32> %3843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3845 = getelementptr inbounds i32, ptr %3835, i64 -31
  %3846 = load <8 x i32>, ptr %3845, align 4, !tbaa !5
  %3847 = shufflevector <8 x i32> %3846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3848 = mul <8 x i32> %3838, %3830
  %3849 = mul <8 x i32> %3841, %3831
  %3850 = mul <8 x i32> %3844, %3832
  %3851 = mul <8 x i32> %3847, %3833
  %3852 = add nuw i64 %3829, 32
  %3853 = icmp eq i64 %3852, %3826
  br i1 %3853, label %3854, label %3828, !llvm.loop !147

3854:                                             ; preds = %3828
  %3855 = mul <8 x i32> %3849, %3848
  %3856 = mul <8 x i32> %3850, %3855
  %3857 = mul <8 x i32> %3851, %3856
  %3858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3857)
  %3859 = icmp eq i64 %3822, %3826
  br i1 %3859, label %3872, label %3860

3860:                                             ; preds = %3813, %3854
  %3861 = phi i64 [ %3816, %3813 ], [ %3827, %3854 ]
  %3862 = phi i32 [ 1, %3813 ], [ %3858, %3854 ]
  br label %3863

3863:                                             ; preds = %3860, %3863
  %3864 = phi i64 [ %3869, %3863 ], [ %3861, %3860 ]
  %3865 = phi i32 [ %3868, %3863 ], [ %3862, %3860 ]
  %3866 = getelementptr inbounds i32, ptr %11, i64 %3864
  %3867 = load i32, ptr %3866, align 4, !tbaa !5
  %3868 = mul nsw i32 %3867, %3865
  %3869 = add nsw i64 %3864, -1
  %3870 = trunc i64 %3864 to i32
  %3871 = icmp sgt i32 %3870, 0
  br i1 %3871, label %3863, label %3872, !llvm.loop !148

3872:                                             ; preds = %3863, %3854
  %3873 = phi i32 [ %3858, %3854 ], [ %3868, %3863 ]
  %3874 = and i64 %3823, 4294967295
  %3875 = getelementptr inbounds i32, ptr %6, i64 %3874
  %3876 = load i32, ptr %3875, align 4, !tbaa !5
  %3877 = mul nsw i32 %3876, %3873
  %3878 = add nsw i32 %3877, %3817
  %3879 = icmp sgt i64 %3815, 2
  %3880 = add nsw i64 %3816, -1
  %3881 = add i32 %3814, 1
  br i1 %3879, label %3813, label %3882, !llvm.loop !149

3882:                                             ; preds = %3872, %3809
  %3883 = phi i32 [ %3812, %3809 ], [ %3878, %3872 ]
  %3884 = icmp slt i32 %3883, %5
  br i1 %3884, label %3887, label %3885

3885:                                             ; preds = %3882
  %3886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

3887:                                             ; preds = %3882
  %3888 = sext i32 %3883 to i64
  %3889 = getelementptr inbounds i8, ptr %3642, i64 %3888
  %3890 = load i8, ptr %3889, align 1, !tbaa !11
  %3891 = uitofp i8 %3890 to double
  %3892 = fadd fast double %3810, %3891
  store double %3892, ptr %3644, align 8, !tbaa !18
  %3893 = add nuw nsw i32 %3811, 1
  br i1 %3658, label %3894, label %3944

3894:                                             ; preds = %3887
  %3895 = load i32, ptr %4, align 4, !tbaa !5
  %3896 = load i32, ptr %12, align 4, !tbaa !5
  %3897 = add nsw i32 %3896, -1
  %3898 = icmp slt i32 %3895, %3897
  br i1 %3898, label %3921, label %3899

3899:                                             ; preds = %3894
  %3900 = icmp eq i32 %3895, %3897
  br i1 %3900, label %3901, label %3937

3901:                                             ; preds = %3899
  store i32 0, ptr %4, align 4, !tbaa !5
  %3902 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3902, ptr %6, align 4, !tbaa !5
  br i1 %3663, label %3944, label %3903

3903:                                             ; preds = %3901, %3931
  %3904 = phi i64 [ %3935, %3931 ], [ 1, %3901 ]
  %3905 = getelementptr inbounds i32, ptr %4, i64 %3904
  %3906 = load i32, ptr %3905, align 4, !tbaa !5
  %3907 = getelementptr inbounds i32, ptr %12, i64 %3904
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = add nsw i32 %3908, -1
  %3910 = icmp slt i32 %3906, %3909
  br i1 %3910, label %3911, label %3929

3911:                                             ; preds = %3903
  br i1 %3898, label %3921, label %3912

3912:                                             ; preds = %3911
  %3913 = shl i64 %3904, 32
  %3914 = add i64 %3913, -4294967296
  %3915 = ashr exact i64 %3914, 32
  %3916 = getelementptr inbounds i32, ptr %7, i64 %3915
  %3917 = load i32, ptr %3916, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %6, i64 %3904
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = add nsw i32 %3919, %3917
  store i32 %3920, ptr %3918, align 4, !tbaa !5
  br label %3939

3921:                                             ; preds = %3894, %3911
  %3922 = phi i32 [ %3906, %3911 ], [ %3895, %3894 ]
  %3923 = phi ptr [ %3905, %3911 ], [ %4, %3894 ]
  %3924 = phi i64 [ %3904, %3911 ], [ 0, %3894 ]
  %3925 = add nsw i32 %3922, 1
  store i32 %3925, ptr %3923, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %7, i64 %3924
  %3927 = load i32, ptr %3926, align 4, !tbaa !5
  %3928 = getelementptr inbounds i32, ptr %6, i64 %3924
  br label %3939

3929:                                             ; preds = %3903
  %3930 = icmp eq i32 %3906, %3909
  br i1 %3930, label %3931, label %3937

3931:                                             ; preds = %3929
  store i32 0, ptr %3905, align 4, !tbaa !5
  %3932 = getelementptr inbounds i32, ptr %8, i64 %3904
  %3933 = load i32, ptr %3932, align 4, !tbaa !5
  %3934 = getelementptr inbounds i32, ptr %6, i64 %3904
  store i32 %3933, ptr %3934, align 4, !tbaa !5
  %3935 = add nuw nsw i64 %3904, 1
  %3936 = icmp eq i64 %3935, %3661
  br i1 %3936, label %3944, label %3903, !llvm.loop !150

3937:                                             ; preds = %3899, %3929
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

3939:                                             ; preds = %3912, %3921
  %3940 = phi ptr [ %3928, %3921 ], [ %3905, %3912 ]
  %3941 = phi i32 [ %3927, %3921 ], [ 1, %3912 ]
  %3942 = load i32, ptr %3940, align 4, !tbaa !5
  %3943 = add nsw i32 %3942, %3941
  store i32 %3943, ptr %3940, align 4, !tbaa !5
  br label %3944

3944:                                             ; preds = %3931, %3939, %3901, %3887
  %3945 = icmp eq i32 %3893, %5
  br i1 %3945, label %5444, label %3809, !llvm.loop !151

3946:                                             ; preds = %3649
  %3947 = getelementptr inbounds i32, ptr %3, i64 %19
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = icmp eq i32 %3948, 0
  %3950 = icmp sgt i32 %5, 0
  br i1 %3949, label %3960, label %3951

3951:                                             ; preds = %3946
  br i1 %3950, label %3952, label %5444

3952:                                             ; preds = %3951
  %3953 = icmp sgt i32 %13, 1
  %3954 = icmp sgt i32 %13, 0
  %3955 = add i32 %13, -2
  %3956 = zext i32 %3955 to i64
  %3957 = zext i32 %13 to i64
  %3958 = add nuw i32 %5, 1
  %3959 = icmp eq i32 %13, 1
  br label %4101

3960:                                             ; preds = %3946
  br i1 %3950, label %3961, label %5444

3961:                                             ; preds = %3960
  %3962 = icmp sgt i32 %13, 1
  %3963 = icmp sgt i32 %13, 0
  %3964 = add i32 %13, -2
  %3965 = zext i32 %3964 to i64
  %3966 = zext i32 %13 to i64
  %3967 = add nuw i32 %5, 1
  %3968 = icmp eq i32 %13, 1
  br label %3969

3969:                                             ; preds = %3961, %4099
  %3970 = phi double [ 0.000000e+00, %3961 ], [ %4049, %4099 ]
  %3971 = phi i32 [ 0, %3961 ], [ %4051, %4099 ]
  %3972 = phi double [ 0.000000e+00, %3961 ], [ %4050, %4099 ]
  %3973 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3962, label %3974, label %4043

3974:                                             ; preds = %3969, %4033
  %3975 = phi i32 [ %4042, %4033 ], [ 0, %3969 ]
  %3976 = phi i64 [ %3984, %4033 ], [ %3966, %3969 ]
  %3977 = phi i64 [ %4041, %4033 ], [ %3965, %3969 ]
  %3978 = phi i32 [ %4039, %4033 ], [ %3973, %3969 ]
  %3979 = sub i32 %3964, %3975
  %3980 = tail call i32 @llvm.smin.i32(i32 %3979, i32 0)
  %3981 = sub i32 %3979, %3980
  %3982 = zext i32 %3981 to i64
  %3983 = add nuw nsw i64 %3982, 1
  %3984 = add nsw i64 %3976, -1
  %3985 = icmp ult i32 %3981, 31
  br i1 %3985, label %4021, label %3986

3986:                                             ; preds = %3974
  %3987 = and i64 %3983, 8589934560
  %3988 = sub i64 %3977, %3987
  br label %3989

3989:                                             ; preds = %3989, %3986
  %3990 = phi i64 [ 0, %3986 ], [ %4013, %3989 ]
  %3991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4009, %3989 ]
  %3992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4010, %3989 ]
  %3993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4011, %3989 ]
  %3994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4012, %3989 ]
  %3995 = sub i64 %3977, %3990
  %3996 = getelementptr inbounds i32, ptr %9, i64 %3995
  %3997 = getelementptr inbounds i32, ptr %3996, i64 -7
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = getelementptr inbounds i32, ptr %3996, i64 -15
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !5
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3996, i64 -23
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !5
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = getelementptr inbounds i32, ptr %3996, i64 -31
  %4007 = load <8 x i32>, ptr %4006, align 4, !tbaa !5
  %4008 = shufflevector <8 x i32> %4007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4009 = mul <8 x i32> %3999, %3991
  %4010 = mul <8 x i32> %4002, %3992
  %4011 = mul <8 x i32> %4005, %3993
  %4012 = mul <8 x i32> %4008, %3994
  %4013 = add nuw i64 %3990, 32
  %4014 = icmp eq i64 %4013, %3987
  br i1 %4014, label %4015, label %3989, !llvm.loop !152

4015:                                             ; preds = %3989
  %4016 = mul <8 x i32> %4010, %4009
  %4017 = mul <8 x i32> %4011, %4016
  %4018 = mul <8 x i32> %4012, %4017
  %4019 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4018)
  %4020 = icmp eq i64 %3983, %3987
  br i1 %4020, label %4033, label %4021

4021:                                             ; preds = %3974, %4015
  %4022 = phi i64 [ %3977, %3974 ], [ %3988, %4015 ]
  %4023 = phi i32 [ 1, %3974 ], [ %4019, %4015 ]
  br label %4024

4024:                                             ; preds = %4021, %4024
  %4025 = phi i64 [ %4030, %4024 ], [ %4022, %4021 ]
  %4026 = phi i32 [ %4029, %4024 ], [ %4023, %4021 ]
  %4027 = getelementptr inbounds i32, ptr %9, i64 %4025
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = mul nsw i32 %4028, %4026
  %4030 = add nsw i64 %4025, -1
  %4031 = trunc i64 %4025 to i32
  %4032 = icmp sgt i32 %4031, 0
  br i1 %4032, label %4024, label %4033, !llvm.loop !153

4033:                                             ; preds = %4024, %4015
  %4034 = phi i32 [ %4019, %4015 ], [ %4029, %4024 ]
  %4035 = and i64 %3984, 4294967295
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4035
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = mul nsw i32 %4037, %4034
  %4039 = add nsw i32 %4038, %3978
  %4040 = icmp sgt i64 %3976, 2
  %4041 = add nsw i64 %3977, -1
  %4042 = add i32 %3975, 1
  br i1 %4040, label %3974, label %4043, !llvm.loop !154

4043:                                             ; preds = %4033, %3969
  %4044 = phi i32 [ %3973, %3969 ], [ %4039, %4033 ]
  %4045 = sext i32 %4044 to i64
  %4046 = getelementptr inbounds i8, ptr %3642, i64 %4045
  %4047 = load i8, ptr %4046, align 1, !tbaa !11
  %4048 = uitofp i8 %4047 to double
  %4049 = fadd fast double %3970, %4048
  store double %4049, ptr %3644, align 8, !tbaa !18
  %4050 = fadd fast double %3972, 1.000000e+00
  %4051 = add nuw nsw i32 %3971, 1
  br i1 %3963, label %4052, label %4099

4052:                                             ; preds = %4043
  %4053 = load i32, ptr %4, align 4, !tbaa !5
  %4054 = load i32, ptr %12, align 4, !tbaa !5
  %4055 = add nsw i32 %4054, -1
  %4056 = icmp slt i32 %4053, %4055
  br i1 %4056, label %4076, label %4057

4057:                                             ; preds = %4052
  %4058 = icmp eq i32 %4053, %4055
  br i1 %4058, label %4059, label %4092

4059:                                             ; preds = %4057
  store i32 0, ptr %4, align 4, !tbaa !5
  %4060 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4060, ptr %6, align 4, !tbaa !5
  br i1 %3968, label %4099, label %4061

4061:                                             ; preds = %4059, %4086
  %4062 = phi i64 [ %4090, %4086 ], [ 1, %4059 ]
  %4063 = getelementptr inbounds i32, ptr %4, i64 %4062
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = getelementptr inbounds i32, ptr %12, i64 %4062
  %4066 = load i32, ptr %4065, align 4, !tbaa !5
  %4067 = add nsw i32 %4066, -1
  %4068 = icmp slt i32 %4064, %4067
  br i1 %4068, label %4069, label %4084

4069:                                             ; preds = %4061
  br i1 %4056, label %4076, label %4070

4070:                                             ; preds = %4069
  %4071 = getelementptr inbounds i32, ptr %7, i64 %4062
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = getelementptr inbounds i32, ptr %6, i64 %4062
  %4074 = load i32, ptr %4073, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, %4072
  store i32 %4075, ptr %4073, align 4, !tbaa !5
  br label %4094

4076:                                             ; preds = %4052, %4069
  %4077 = phi i32 [ %4064, %4069 ], [ %4053, %4052 ]
  %4078 = phi ptr [ %4063, %4069 ], [ %4, %4052 ]
  %4079 = phi i64 [ %4062, %4069 ], [ 0, %4052 ]
  %4080 = add nsw i32 %4077, 1
  store i32 %4080, ptr %4078, align 4, !tbaa !5
  %4081 = getelementptr inbounds i32, ptr %7, i64 %4079
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = getelementptr inbounds i32, ptr %6, i64 %4079
  br label %4094

4084:                                             ; preds = %4061
  %4085 = icmp eq i32 %4064, %4067
  br i1 %4085, label %4086, label %4092

4086:                                             ; preds = %4084
  store i32 0, ptr %4063, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %8, i64 %4062
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = getelementptr inbounds i32, ptr %6, i64 %4062
  store i32 %4088, ptr %4089, align 4, !tbaa !5
  %4090 = add nuw nsw i64 %4062, 1
  %4091 = icmp eq i64 %4090, %3966
  br i1 %4091, label %4099, label %4061, !llvm.loop !155

4092:                                             ; preds = %4057, %4084
  %4093 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4094:                                             ; preds = %4070, %4076
  %4095 = phi ptr [ %4083, %4076 ], [ %4063, %4070 ]
  %4096 = phi i32 [ %4082, %4076 ], [ 1, %4070 ]
  %4097 = load i32, ptr %4095, align 4, !tbaa !5
  %4098 = add nsw i32 %4097, %4096
  store i32 %4098, ptr %4095, align 4, !tbaa !5
  br label %4099

4099:                                             ; preds = %4086, %4094, %4059, %4043
  %4100 = icmp eq i32 %4051, %5
  br i1 %4100, label %5444, label %3969, !llvm.loop !156

4101:                                             ; preds = %3952, %4236
  %4102 = phi double [ 0.000000e+00, %3952 ], [ %4184, %4236 ]
  %4103 = phi i32 [ 0, %3952 ], [ %4185, %4236 ]
  %4104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3953, label %4105, label %4174

4105:                                             ; preds = %4101, %4164
  %4106 = phi i32 [ %4173, %4164 ], [ 0, %4101 ]
  %4107 = phi i64 [ %4115, %4164 ], [ %3957, %4101 ]
  %4108 = phi i64 [ %4172, %4164 ], [ %3956, %4101 ]
  %4109 = phi i32 [ %4170, %4164 ], [ %4104, %4101 ]
  %4110 = sub i32 %3955, %4106
  %4111 = tail call i32 @llvm.smin.i32(i32 %4110, i32 0)
  %4112 = sub i32 %4110, %4111
  %4113 = zext i32 %4112 to i64
  %4114 = add nuw nsw i64 %4113, 1
  %4115 = add nsw i64 %4107, -1
  %4116 = icmp ult i32 %4112, 31
  br i1 %4116, label %4152, label %4117

4117:                                             ; preds = %4105
  %4118 = and i64 %4114, 8589934560
  %4119 = sub i64 %4108, %4118
  br label %4120

4120:                                             ; preds = %4120, %4117
  %4121 = phi i64 [ 0, %4117 ], [ %4144, %4120 ]
  %4122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4140, %4120 ]
  %4123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4141, %4120 ]
  %4124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4142, %4120 ]
  %4125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4143, %4120 ]
  %4126 = sub i64 %4108, %4121
  %4127 = getelementptr inbounds i32, ptr %11, i64 %4126
  %4128 = getelementptr inbounds i32, ptr %4127, i64 -7
  %4129 = load <8 x i32>, ptr %4128, align 4, !tbaa !5
  %4130 = shufflevector <8 x i32> %4129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4131 = getelementptr inbounds i32, ptr %4127, i64 -15
  %4132 = load <8 x i32>, ptr %4131, align 4, !tbaa !5
  %4133 = shufflevector <8 x i32> %4132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4134 = getelementptr inbounds i32, ptr %4127, i64 -23
  %4135 = load <8 x i32>, ptr %4134, align 4, !tbaa !5
  %4136 = shufflevector <8 x i32> %4135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4137 = getelementptr inbounds i32, ptr %4127, i64 -31
  %4138 = load <8 x i32>, ptr %4137, align 4, !tbaa !5
  %4139 = shufflevector <8 x i32> %4138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4140 = mul <8 x i32> %4130, %4122
  %4141 = mul <8 x i32> %4133, %4123
  %4142 = mul <8 x i32> %4136, %4124
  %4143 = mul <8 x i32> %4139, %4125
  %4144 = add nuw i64 %4121, 32
  %4145 = icmp eq i64 %4144, %4118
  br i1 %4145, label %4146, label %4120, !llvm.loop !157

4146:                                             ; preds = %4120
  %4147 = mul <8 x i32> %4141, %4140
  %4148 = mul <8 x i32> %4142, %4147
  %4149 = mul <8 x i32> %4143, %4148
  %4150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4149)
  %4151 = icmp eq i64 %4114, %4118
  br i1 %4151, label %4164, label %4152

4152:                                             ; preds = %4105, %4146
  %4153 = phi i64 [ %4108, %4105 ], [ %4119, %4146 ]
  %4154 = phi i32 [ 1, %4105 ], [ %4150, %4146 ]
  br label %4155

4155:                                             ; preds = %4152, %4155
  %4156 = phi i64 [ %4161, %4155 ], [ %4153, %4152 ]
  %4157 = phi i32 [ %4160, %4155 ], [ %4154, %4152 ]
  %4158 = getelementptr inbounds i32, ptr %11, i64 %4156
  %4159 = load i32, ptr %4158, align 4, !tbaa !5
  %4160 = mul nsw i32 %4159, %4157
  %4161 = add nsw i64 %4156, -1
  %4162 = trunc i64 %4156 to i32
  %4163 = icmp sgt i32 %4162, 0
  br i1 %4163, label %4155, label %4164, !llvm.loop !158

4164:                                             ; preds = %4155, %4146
  %4165 = phi i32 [ %4150, %4146 ], [ %4160, %4155 ]
  %4166 = and i64 %4115, 4294967295
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4166
  %4168 = load i32, ptr %4167, align 4, !tbaa !5
  %4169 = mul nsw i32 %4168, %4165
  %4170 = add nsw i32 %4169, %4109
  %4171 = icmp sgt i64 %4107, 2
  %4172 = add nsw i64 %4108, -1
  %4173 = add i32 %4106, 1
  br i1 %4171, label %4105, label %4174, !llvm.loop !159

4174:                                             ; preds = %4164, %4101
  %4175 = phi i32 [ %4104, %4101 ], [ %4170, %4164 ]
  %4176 = icmp slt i32 %4175, %5
  br i1 %4176, label %4179, label %4177

4177:                                             ; preds = %4174
  %4178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

4179:                                             ; preds = %4174
  %4180 = sext i32 %4175 to i64
  %4181 = getelementptr inbounds i8, ptr %3642, i64 %4180
  %4182 = load i8, ptr %4181, align 1, !tbaa !11
  %4183 = uitofp i8 %4182 to double
  %4184 = fadd fast double %4102, %4183
  store double %4184, ptr %3644, align 8, !tbaa !18
  %4185 = add nuw nsw i32 %4103, 1
  br i1 %3954, label %4186, label %4236

4186:                                             ; preds = %4179
  %4187 = load i32, ptr %4, align 4, !tbaa !5
  %4188 = load i32, ptr %12, align 4, !tbaa !5
  %4189 = add nsw i32 %4188, -1
  %4190 = icmp slt i32 %4187, %4189
  br i1 %4190, label %4213, label %4191

4191:                                             ; preds = %4186
  %4192 = icmp eq i32 %4187, %4189
  br i1 %4192, label %4193, label %4229

4193:                                             ; preds = %4191
  store i32 0, ptr %4, align 4, !tbaa !5
  %4194 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4194, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %4236, label %4195

4195:                                             ; preds = %4193, %4223
  %4196 = phi i64 [ %4227, %4223 ], [ 1, %4193 ]
  %4197 = getelementptr inbounds i32, ptr %4, i64 %4196
  %4198 = load i32, ptr %4197, align 4, !tbaa !5
  %4199 = getelementptr inbounds i32, ptr %12, i64 %4196
  %4200 = load i32, ptr %4199, align 4, !tbaa !5
  %4201 = add nsw i32 %4200, -1
  %4202 = icmp slt i32 %4198, %4201
  br i1 %4202, label %4203, label %4221

4203:                                             ; preds = %4195
  br i1 %4190, label %4213, label %4204

4204:                                             ; preds = %4203
  %4205 = shl i64 %4196, 32
  %4206 = add i64 %4205, -4294967296
  %4207 = ashr exact i64 %4206, 32
  %4208 = getelementptr inbounds i32, ptr %7, i64 %4207
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4196
  %4211 = load i32, ptr %4210, align 4, !tbaa !5
  %4212 = add nsw i32 %4211, %4209
  store i32 %4212, ptr %4210, align 4, !tbaa !5
  br label %4231

4213:                                             ; preds = %4186, %4203
  %4214 = phi i32 [ %4198, %4203 ], [ %4187, %4186 ]
  %4215 = phi ptr [ %4197, %4203 ], [ %4, %4186 ]
  %4216 = phi i64 [ %4196, %4203 ], [ 0, %4186 ]
  %4217 = add nsw i32 %4214, 1
  store i32 %4217, ptr %4215, align 4, !tbaa !5
  %4218 = getelementptr inbounds i32, ptr %7, i64 %4216
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = getelementptr inbounds i32, ptr %6, i64 %4216
  br label %4231

4221:                                             ; preds = %4195
  %4222 = icmp eq i32 %4198, %4201
  br i1 %4222, label %4223, label %4229

4223:                                             ; preds = %4221
  store i32 0, ptr %4197, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %8, i64 %4196
  %4225 = load i32, ptr %4224, align 4, !tbaa !5
  %4226 = getelementptr inbounds i32, ptr %6, i64 %4196
  store i32 %4225, ptr %4226, align 4, !tbaa !5
  %4227 = add nuw nsw i64 %4196, 1
  %4228 = icmp eq i64 %4227, %3957
  br i1 %4228, label %4236, label %4195, !llvm.loop !160

4229:                                             ; preds = %4191, %4221
  %4230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4231:                                             ; preds = %4204, %4213
  %4232 = phi ptr [ %4220, %4213 ], [ %4197, %4204 ]
  %4233 = phi i32 [ %4219, %4213 ], [ 1, %4204 ]
  %4234 = load i32, ptr %4232, align 4, !tbaa !5
  %4235 = add nsw i32 %4234, %4233
  store i32 %4235, ptr %4232, align 4, !tbaa !5
  br label %4236

4236:                                             ; preds = %4223, %4231, %4193, %4179
  %4237 = icmp eq i32 %4185, %5
  br i1 %4237, label %5444, label %4101, !llvm.loop !161

4238:                                             ; preds = %3649
  %4239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

4240:                                             ; preds = %18
  %4241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4242 = load ptr, ptr %4241, align 8, !tbaa !9
  %4243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4244 = load ptr, ptr %4243, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4244, align 4, !tbaa !162
  %4245 = icmp eq i32 %13, 0
  br i1 %4245, label %4246, label %4249

4246:                                             ; preds = %4240
  %4247 = load i8, ptr %4242, align 1, !tbaa !11
  %4248 = uitofp i8 %4247 to float
  store float %4248, ptr %4244, align 4, !tbaa !162
  br label %5444

4249:                                             ; preds = %4240
  switch i32 %1, label %4842 [
    i32 1, label %4250
    i32 0, label %4550
  ]

4250:                                             ; preds = %4249
  %4251 = getelementptr inbounds i32, ptr %3, i64 %19
  %4252 = load i32, ptr %4251, align 4, !tbaa !5
  %4253 = icmp eq i32 %4252, 0
  %4254 = icmp sgt i32 %5, 0
  br i1 %4253, label %4264, label %4255

4255:                                             ; preds = %4250
  br i1 %4254, label %4256, label %5444

4256:                                             ; preds = %4255
  %4257 = icmp sgt i32 %13, 1
  %4258 = icmp sgt i32 %13, 0
  %4259 = add i32 %13, -2
  %4260 = zext i32 %4259 to i64
  %4261 = zext i32 %13 to i64
  %4262 = add nuw i32 %5, 1
  %4263 = icmp eq i32 %13, 1
  br label %4411

4264:                                             ; preds = %4250
  br i1 %4254, label %4265, label %5444

4265:                                             ; preds = %4264
  %4266 = icmp sgt i32 %13, 1
  %4267 = icmp sgt i32 %13, 0
  %4268 = add i32 %13, -2
  %4269 = zext i32 %4268 to i64
  %4270 = zext i32 %13 to i64
  %4271 = add nuw i32 %5, 1
  %4272 = icmp eq i32 %13, 1
  br label %4273

4273:                                             ; preds = %4265, %4409
  %4274 = phi float [ 0.000000e+00, %4265 ], [ %4359, %4409 ]
  %4275 = phi i32 [ 0, %4265 ], [ %4361, %4409 ]
  %4276 = phi double [ 0.000000e+00, %4265 ], [ %4360, %4409 ]
  %4277 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4266, label %4278, label %4347

4278:                                             ; preds = %4273, %4337
  %4279 = phi i32 [ %4346, %4337 ], [ 0, %4273 ]
  %4280 = phi i64 [ %4288, %4337 ], [ %4270, %4273 ]
  %4281 = phi i64 [ %4345, %4337 ], [ %4269, %4273 ]
  %4282 = phi i32 [ %4343, %4337 ], [ %4277, %4273 ]
  %4283 = sub i32 %4268, %4279
  %4284 = tail call i32 @llvm.smin.i32(i32 %4283, i32 0)
  %4285 = sub i32 %4283, %4284
  %4286 = zext i32 %4285 to i64
  %4287 = add nuw nsw i64 %4286, 1
  %4288 = add nsw i64 %4280, -1
  %4289 = icmp ult i32 %4285, 31
  br i1 %4289, label %4325, label %4290

4290:                                             ; preds = %4278
  %4291 = and i64 %4287, 8589934560
  %4292 = sub i64 %4281, %4291
  br label %4293

4293:                                             ; preds = %4293, %4290
  %4294 = phi i64 [ 0, %4290 ], [ %4317, %4293 ]
  %4295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4313, %4293 ]
  %4296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4314, %4293 ]
  %4297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4315, %4293 ]
  %4298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4316, %4293 ]
  %4299 = sub i64 %4281, %4294
  %4300 = getelementptr inbounds i32, ptr %9, i64 %4299
  %4301 = getelementptr inbounds i32, ptr %4300, i64 -7
  %4302 = load <8 x i32>, ptr %4301, align 4, !tbaa !5
  %4303 = shufflevector <8 x i32> %4302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4304 = getelementptr inbounds i32, ptr %4300, i64 -15
  %4305 = load <8 x i32>, ptr %4304, align 4, !tbaa !5
  %4306 = shufflevector <8 x i32> %4305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4307 = getelementptr inbounds i32, ptr %4300, i64 -23
  %4308 = load <8 x i32>, ptr %4307, align 4, !tbaa !5
  %4309 = shufflevector <8 x i32> %4308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4310 = getelementptr inbounds i32, ptr %4300, i64 -31
  %4311 = load <8 x i32>, ptr %4310, align 4, !tbaa !5
  %4312 = shufflevector <8 x i32> %4311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4313 = mul <8 x i32> %4303, %4295
  %4314 = mul <8 x i32> %4306, %4296
  %4315 = mul <8 x i32> %4309, %4297
  %4316 = mul <8 x i32> %4312, %4298
  %4317 = add nuw i64 %4294, 32
  %4318 = icmp eq i64 %4317, %4291
  br i1 %4318, label %4319, label %4293, !llvm.loop !164

4319:                                             ; preds = %4293
  %4320 = mul <8 x i32> %4314, %4313
  %4321 = mul <8 x i32> %4315, %4320
  %4322 = mul <8 x i32> %4316, %4321
  %4323 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4322)
  %4324 = icmp eq i64 %4287, %4291
  br i1 %4324, label %4337, label %4325

4325:                                             ; preds = %4278, %4319
  %4326 = phi i64 [ %4281, %4278 ], [ %4292, %4319 ]
  %4327 = phi i32 [ 1, %4278 ], [ %4323, %4319 ]
  br label %4328

4328:                                             ; preds = %4325, %4328
  %4329 = phi i64 [ %4334, %4328 ], [ %4326, %4325 ]
  %4330 = phi i32 [ %4333, %4328 ], [ %4327, %4325 ]
  %4331 = getelementptr inbounds i32, ptr %9, i64 %4329
  %4332 = load i32, ptr %4331, align 4, !tbaa !5
  %4333 = mul nsw i32 %4332, %4330
  %4334 = add nsw i64 %4329, -1
  %4335 = trunc i64 %4329 to i32
  %4336 = icmp sgt i32 %4335, 0
  br i1 %4336, label %4328, label %4337, !llvm.loop !165

4337:                                             ; preds = %4328, %4319
  %4338 = phi i32 [ %4323, %4319 ], [ %4333, %4328 ]
  %4339 = and i64 %4288, 4294967295
  %4340 = getelementptr inbounds i32, ptr %6, i64 %4339
  %4341 = load i32, ptr %4340, align 4, !tbaa !5
  %4342 = mul nsw i32 %4341, %4338
  %4343 = add nsw i32 %4342, %4282
  %4344 = icmp sgt i64 %4280, 2
  %4345 = add nsw i64 %4281, -1
  %4346 = add i32 %4279, 1
  br i1 %4344, label %4278, label %4347, !llvm.loop !166

4347:                                             ; preds = %4337, %4273
  %4348 = phi i32 [ %4277, %4273 ], [ %4343, %4337 ]
  %4349 = sext i32 %4348 to i64
  %4350 = getelementptr inbounds double, ptr %2, i64 %4349
  %4351 = load double, ptr %4350, align 8, !tbaa !18
  %4352 = getelementptr inbounds i8, ptr %4242, i64 %4349
  %4353 = load i8, ptr %4352, align 1, !tbaa !11
  %4354 = fpext float %4274 to double
  %4355 = uitofp i8 %4353 to double
  %4356 = fmul fast double %4351, %4355
  %4357 = tail call fast double @llvm.fabs.f64(double %4356)
  %4358 = fadd fast double %4357, %4354
  %4359 = fptrunc double %4358 to float
  store float %4359, ptr %4244, align 4, !tbaa !162
  %4360 = fadd fast double %4351, %4276
  %4361 = add nuw nsw i32 %4275, 1
  br i1 %4267, label %4362, label %4409

4362:                                             ; preds = %4347
  %4363 = load i32, ptr %4, align 4, !tbaa !5
  %4364 = load i32, ptr %12, align 4, !tbaa !5
  %4365 = add nsw i32 %4364, -1
  %4366 = icmp slt i32 %4363, %4365
  br i1 %4366, label %4386, label %4367

4367:                                             ; preds = %4362
  %4368 = icmp eq i32 %4363, %4365
  br i1 %4368, label %4369, label %4402

4369:                                             ; preds = %4367
  store i32 0, ptr %4, align 4, !tbaa !5
  %4370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4370, ptr %6, align 4, !tbaa !5
  br i1 %4272, label %4409, label %4371

4371:                                             ; preds = %4369, %4396
  %4372 = phi i64 [ %4400, %4396 ], [ 1, %4369 ]
  %4373 = getelementptr inbounds i32, ptr %4, i64 %4372
  %4374 = load i32, ptr %4373, align 4, !tbaa !5
  %4375 = getelementptr inbounds i32, ptr %12, i64 %4372
  %4376 = load i32, ptr %4375, align 4, !tbaa !5
  %4377 = add nsw i32 %4376, -1
  %4378 = icmp slt i32 %4374, %4377
  br i1 %4378, label %4379, label %4394

4379:                                             ; preds = %4371
  br i1 %4366, label %4386, label %4380

4380:                                             ; preds = %4379
  %4381 = getelementptr inbounds i32, ptr %7, i64 %4372
  %4382 = load i32, ptr %4381, align 4, !tbaa !5
  %4383 = getelementptr inbounds i32, ptr %6, i64 %4372
  %4384 = load i32, ptr %4383, align 4, !tbaa !5
  %4385 = add nsw i32 %4384, %4382
  store i32 %4385, ptr %4383, align 4, !tbaa !5
  br label %4404

4386:                                             ; preds = %4362, %4379
  %4387 = phi i32 [ %4374, %4379 ], [ %4363, %4362 ]
  %4388 = phi ptr [ %4373, %4379 ], [ %4, %4362 ]
  %4389 = phi i64 [ %4372, %4379 ], [ 0, %4362 ]
  %4390 = add nsw i32 %4387, 1
  store i32 %4390, ptr %4388, align 4, !tbaa !5
  %4391 = getelementptr inbounds i32, ptr %7, i64 %4389
  %4392 = load i32, ptr %4391, align 4, !tbaa !5
  %4393 = getelementptr inbounds i32, ptr %6, i64 %4389
  br label %4404

4394:                                             ; preds = %4371
  %4395 = icmp eq i32 %4374, %4377
  br i1 %4395, label %4396, label %4402

4396:                                             ; preds = %4394
  store i32 0, ptr %4373, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %8, i64 %4372
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = getelementptr inbounds i32, ptr %6, i64 %4372
  store i32 %4398, ptr %4399, align 4, !tbaa !5
  %4400 = add nuw nsw i64 %4372, 1
  %4401 = icmp eq i64 %4400, %4270
  br i1 %4401, label %4409, label %4371, !llvm.loop !167

4402:                                             ; preds = %4367, %4394
  %4403 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4404:                                             ; preds = %4380, %4386
  %4405 = phi ptr [ %4393, %4386 ], [ %4373, %4380 ]
  %4406 = phi i32 [ %4392, %4386 ], [ 1, %4380 ]
  %4407 = load i32, ptr %4405, align 4, !tbaa !5
  %4408 = add nsw i32 %4407, %4406
  store i32 %4408, ptr %4405, align 4, !tbaa !5
  br label %4409

4409:                                             ; preds = %4396, %4404, %4369, %4347
  %4410 = icmp eq i32 %4361, %5
  br i1 %4410, label %5444, label %4273, !llvm.loop !168

4411:                                             ; preds = %4256, %4548
  %4412 = phi float [ 0.000000e+00, %4256 ], [ %4496, %4548 ]
  %4413 = phi i32 [ 0, %4256 ], [ %4497, %4548 ]
  %4414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4257, label %4415, label %4484

4415:                                             ; preds = %4411, %4474
  %4416 = phi i32 [ %4483, %4474 ], [ 0, %4411 ]
  %4417 = phi i64 [ %4425, %4474 ], [ %4261, %4411 ]
  %4418 = phi i64 [ %4482, %4474 ], [ %4260, %4411 ]
  %4419 = phi i32 [ %4480, %4474 ], [ %4414, %4411 ]
  %4420 = sub i32 %4259, %4416
  %4421 = tail call i32 @llvm.smin.i32(i32 %4420, i32 0)
  %4422 = sub i32 %4420, %4421
  %4423 = zext i32 %4422 to i64
  %4424 = add nuw nsw i64 %4423, 1
  %4425 = add nsw i64 %4417, -1
  %4426 = icmp ult i32 %4422, 31
  br i1 %4426, label %4462, label %4427

4427:                                             ; preds = %4415
  %4428 = and i64 %4424, 8589934560
  %4429 = sub i64 %4418, %4428
  br label %4430

4430:                                             ; preds = %4430, %4427
  %4431 = phi i64 [ 0, %4427 ], [ %4454, %4430 ]
  %4432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4450, %4430 ]
  %4433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4451, %4430 ]
  %4434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4452, %4430 ]
  %4435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4453, %4430 ]
  %4436 = sub i64 %4418, %4431
  %4437 = getelementptr inbounds i32, ptr %11, i64 %4436
  %4438 = getelementptr inbounds i32, ptr %4437, i64 -7
  %4439 = load <8 x i32>, ptr %4438, align 4, !tbaa !5
  %4440 = shufflevector <8 x i32> %4439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4441 = getelementptr inbounds i32, ptr %4437, i64 -15
  %4442 = load <8 x i32>, ptr %4441, align 4, !tbaa !5
  %4443 = shufflevector <8 x i32> %4442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4444 = getelementptr inbounds i32, ptr %4437, i64 -23
  %4445 = load <8 x i32>, ptr %4444, align 4, !tbaa !5
  %4446 = shufflevector <8 x i32> %4445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4447 = getelementptr inbounds i32, ptr %4437, i64 -31
  %4448 = load <8 x i32>, ptr %4447, align 4, !tbaa !5
  %4449 = shufflevector <8 x i32> %4448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4450 = mul <8 x i32> %4440, %4432
  %4451 = mul <8 x i32> %4443, %4433
  %4452 = mul <8 x i32> %4446, %4434
  %4453 = mul <8 x i32> %4449, %4435
  %4454 = add nuw i64 %4431, 32
  %4455 = icmp eq i64 %4454, %4428
  br i1 %4455, label %4456, label %4430, !llvm.loop !169

4456:                                             ; preds = %4430
  %4457 = mul <8 x i32> %4451, %4450
  %4458 = mul <8 x i32> %4452, %4457
  %4459 = mul <8 x i32> %4453, %4458
  %4460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4459)
  %4461 = icmp eq i64 %4424, %4428
  br i1 %4461, label %4474, label %4462

4462:                                             ; preds = %4415, %4456
  %4463 = phi i64 [ %4418, %4415 ], [ %4429, %4456 ]
  %4464 = phi i32 [ 1, %4415 ], [ %4460, %4456 ]
  br label %4465

4465:                                             ; preds = %4462, %4465
  %4466 = phi i64 [ %4471, %4465 ], [ %4463, %4462 ]
  %4467 = phi i32 [ %4470, %4465 ], [ %4464, %4462 ]
  %4468 = getelementptr inbounds i32, ptr %11, i64 %4466
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = mul nsw i32 %4469, %4467
  %4471 = add nsw i64 %4466, -1
  %4472 = trunc i64 %4466 to i32
  %4473 = icmp sgt i32 %4472, 0
  br i1 %4473, label %4465, label %4474, !llvm.loop !170

4474:                                             ; preds = %4465, %4456
  %4475 = phi i32 [ %4460, %4456 ], [ %4470, %4465 ]
  %4476 = and i64 %4425, 4294967295
  %4477 = getelementptr inbounds i32, ptr %6, i64 %4476
  %4478 = load i32, ptr %4477, align 4, !tbaa !5
  %4479 = mul nsw i32 %4478, %4475
  %4480 = add nsw i32 %4479, %4419
  %4481 = icmp sgt i64 %4417, 2
  %4482 = add nsw i64 %4418, -1
  %4483 = add i32 %4416, 1
  br i1 %4481, label %4415, label %4484, !llvm.loop !171

4484:                                             ; preds = %4474, %4411
  %4485 = phi i32 [ %4414, %4411 ], [ %4480, %4474 ]
  %4486 = icmp slt i32 %4485, %5
  br i1 %4486, label %4489, label %4487

4487:                                             ; preds = %4484
  %4488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

4489:                                             ; preds = %4484
  %4490 = sext i32 %4485 to i64
  %4491 = getelementptr inbounds i8, ptr %4242, i64 %4490
  %4492 = load i8, ptr %4491, align 1, !tbaa !11
  %4493 = fpext float %4412 to double
  %4494 = uitofp i8 %4492 to double
  %4495 = fadd fast double %4493, %4494
  %4496 = fptrunc double %4495 to float
  store float %4496, ptr %4244, align 4, !tbaa !162
  %4497 = add nuw nsw i32 %4413, 1
  br i1 %4258, label %4498, label %4548

4498:                                             ; preds = %4489
  %4499 = load i32, ptr %4, align 4, !tbaa !5
  %4500 = load i32, ptr %12, align 4, !tbaa !5
  %4501 = add nsw i32 %4500, -1
  %4502 = icmp slt i32 %4499, %4501
  br i1 %4502, label %4525, label %4503

4503:                                             ; preds = %4498
  %4504 = icmp eq i32 %4499, %4501
  br i1 %4504, label %4505, label %4541

4505:                                             ; preds = %4503
  store i32 0, ptr %4, align 4, !tbaa !5
  %4506 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4506, ptr %6, align 4, !tbaa !5
  br i1 %4263, label %4548, label %4507

4507:                                             ; preds = %4505, %4535
  %4508 = phi i64 [ %4539, %4535 ], [ 1, %4505 ]
  %4509 = getelementptr inbounds i32, ptr %4, i64 %4508
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %12, i64 %4508
  %4512 = load i32, ptr %4511, align 4, !tbaa !5
  %4513 = add nsw i32 %4512, -1
  %4514 = icmp slt i32 %4510, %4513
  br i1 %4514, label %4515, label %4533

4515:                                             ; preds = %4507
  br i1 %4502, label %4525, label %4516

4516:                                             ; preds = %4515
  %4517 = shl i64 %4508, 32
  %4518 = add i64 %4517, -4294967296
  %4519 = ashr exact i64 %4518, 32
  %4520 = getelementptr inbounds i32, ptr %7, i64 %4519
  %4521 = load i32, ptr %4520, align 4, !tbaa !5
  %4522 = getelementptr inbounds i32, ptr %6, i64 %4508
  %4523 = load i32, ptr %4522, align 4, !tbaa !5
  %4524 = add nsw i32 %4523, %4521
  store i32 %4524, ptr %4522, align 4, !tbaa !5
  br label %4543

4525:                                             ; preds = %4498, %4515
  %4526 = phi i32 [ %4510, %4515 ], [ %4499, %4498 ]
  %4527 = phi ptr [ %4509, %4515 ], [ %4, %4498 ]
  %4528 = phi i64 [ %4508, %4515 ], [ 0, %4498 ]
  %4529 = add nsw i32 %4526, 1
  store i32 %4529, ptr %4527, align 4, !tbaa !5
  %4530 = getelementptr inbounds i32, ptr %7, i64 %4528
  %4531 = load i32, ptr %4530, align 4, !tbaa !5
  %4532 = getelementptr inbounds i32, ptr %6, i64 %4528
  br label %4543

4533:                                             ; preds = %4507
  %4534 = icmp eq i32 %4510, %4513
  br i1 %4534, label %4535, label %4541

4535:                                             ; preds = %4533
  store i32 0, ptr %4509, align 4, !tbaa !5
  %4536 = getelementptr inbounds i32, ptr %8, i64 %4508
  %4537 = load i32, ptr %4536, align 4, !tbaa !5
  %4538 = getelementptr inbounds i32, ptr %6, i64 %4508
  store i32 %4537, ptr %4538, align 4, !tbaa !5
  %4539 = add nuw nsw i64 %4508, 1
  %4540 = icmp eq i64 %4539, %4261
  br i1 %4540, label %4548, label %4507, !llvm.loop !172

4541:                                             ; preds = %4503, %4533
  %4542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4543:                                             ; preds = %4516, %4525
  %4544 = phi ptr [ %4532, %4525 ], [ %4509, %4516 ]
  %4545 = phi i32 [ %4531, %4525 ], [ 1, %4516 ]
  %4546 = load i32, ptr %4544, align 4, !tbaa !5
  %4547 = add nsw i32 %4546, %4545
  store i32 %4547, ptr %4544, align 4, !tbaa !5
  br label %4548

4548:                                             ; preds = %4535, %4543, %4505, %4489
  %4549 = icmp eq i32 %4497, %5
  br i1 %4549, label %5444, label %4411, !llvm.loop !173

4550:                                             ; preds = %4249
  %4551 = getelementptr inbounds i32, ptr %3, i64 %19
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = icmp eq i32 %4552, 0
  %4554 = icmp sgt i32 %5, 0
  br i1 %4553, label %4564, label %4555

4555:                                             ; preds = %4550
  br i1 %4554, label %4556, label %5444

4556:                                             ; preds = %4555
  %4557 = icmp sgt i32 %13, 1
  %4558 = icmp sgt i32 %13, 0
  %4559 = add i32 %13, -2
  %4560 = zext i32 %4559 to i64
  %4561 = zext i32 %13 to i64
  %4562 = add nuw i32 %5, 1
  %4563 = icmp eq i32 %13, 1
  br label %4705

4564:                                             ; preds = %4550
  br i1 %4554, label %4565, label %5444

4565:                                             ; preds = %4564
  %4566 = icmp sgt i32 %13, 1
  %4567 = icmp sgt i32 %13, 0
  %4568 = add i32 %13, -2
  %4569 = zext i32 %4568 to i64
  %4570 = zext i32 %13 to i64
  %4571 = add nuw i32 %5, 1
  %4572 = icmp eq i32 %13, 1
  br label %4573

4573:                                             ; preds = %4565, %4703
  %4574 = phi float [ 0.000000e+00, %4565 ], [ %4653, %4703 ]
  %4575 = phi i32 [ 0, %4565 ], [ %4655, %4703 ]
  %4576 = phi double [ 0.000000e+00, %4565 ], [ %4654, %4703 ]
  %4577 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4566, label %4578, label %4647

4578:                                             ; preds = %4573, %4637
  %4579 = phi i32 [ %4646, %4637 ], [ 0, %4573 ]
  %4580 = phi i64 [ %4588, %4637 ], [ %4570, %4573 ]
  %4581 = phi i64 [ %4645, %4637 ], [ %4569, %4573 ]
  %4582 = phi i32 [ %4643, %4637 ], [ %4577, %4573 ]
  %4583 = sub i32 %4568, %4579
  %4584 = tail call i32 @llvm.smin.i32(i32 %4583, i32 0)
  %4585 = sub i32 %4583, %4584
  %4586 = zext i32 %4585 to i64
  %4587 = add nuw nsw i64 %4586, 1
  %4588 = add nsw i64 %4580, -1
  %4589 = icmp ult i32 %4585, 31
  br i1 %4589, label %4625, label %4590

4590:                                             ; preds = %4578
  %4591 = and i64 %4587, 8589934560
  %4592 = sub i64 %4581, %4591
  br label %4593

4593:                                             ; preds = %4593, %4590
  %4594 = phi i64 [ 0, %4590 ], [ %4617, %4593 ]
  %4595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4590 ], [ %4613, %4593 ]
  %4596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4590 ], [ %4614, %4593 ]
  %4597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4590 ], [ %4615, %4593 ]
  %4598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4590 ], [ %4616, %4593 ]
  %4599 = sub i64 %4581, %4594
  %4600 = getelementptr inbounds i32, ptr %9, i64 %4599
  %4601 = getelementptr inbounds i32, ptr %4600, i64 -7
  %4602 = load <8 x i32>, ptr %4601, align 4, !tbaa !5
  %4603 = shufflevector <8 x i32> %4602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4604 = getelementptr inbounds i32, ptr %4600, i64 -15
  %4605 = load <8 x i32>, ptr %4604, align 4, !tbaa !5
  %4606 = shufflevector <8 x i32> %4605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4607 = getelementptr inbounds i32, ptr %4600, i64 -23
  %4608 = load <8 x i32>, ptr %4607, align 4, !tbaa !5
  %4609 = shufflevector <8 x i32> %4608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4610 = getelementptr inbounds i32, ptr %4600, i64 -31
  %4611 = load <8 x i32>, ptr %4610, align 4, !tbaa !5
  %4612 = shufflevector <8 x i32> %4611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4613 = mul <8 x i32> %4603, %4595
  %4614 = mul <8 x i32> %4606, %4596
  %4615 = mul <8 x i32> %4609, %4597
  %4616 = mul <8 x i32> %4612, %4598
  %4617 = add nuw i64 %4594, 32
  %4618 = icmp eq i64 %4617, %4591
  br i1 %4618, label %4619, label %4593, !llvm.loop !174

4619:                                             ; preds = %4593
  %4620 = mul <8 x i32> %4614, %4613
  %4621 = mul <8 x i32> %4615, %4620
  %4622 = mul <8 x i32> %4616, %4621
  %4623 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4622)
  %4624 = icmp eq i64 %4587, %4591
  br i1 %4624, label %4637, label %4625

4625:                                             ; preds = %4578, %4619
  %4626 = phi i64 [ %4581, %4578 ], [ %4592, %4619 ]
  %4627 = phi i32 [ 1, %4578 ], [ %4623, %4619 ]
  br label %4628

4628:                                             ; preds = %4625, %4628
  %4629 = phi i64 [ %4634, %4628 ], [ %4626, %4625 ]
  %4630 = phi i32 [ %4633, %4628 ], [ %4627, %4625 ]
  %4631 = getelementptr inbounds i32, ptr %9, i64 %4629
  %4632 = load i32, ptr %4631, align 4, !tbaa !5
  %4633 = mul nsw i32 %4632, %4630
  %4634 = add nsw i64 %4629, -1
  %4635 = trunc i64 %4629 to i32
  %4636 = icmp sgt i32 %4635, 0
  br i1 %4636, label %4628, label %4637, !llvm.loop !175

4637:                                             ; preds = %4628, %4619
  %4638 = phi i32 [ %4623, %4619 ], [ %4633, %4628 ]
  %4639 = and i64 %4588, 4294967295
  %4640 = getelementptr inbounds i32, ptr %6, i64 %4639
  %4641 = load i32, ptr %4640, align 4, !tbaa !5
  %4642 = mul nsw i32 %4641, %4638
  %4643 = add nsw i32 %4642, %4582
  %4644 = icmp sgt i64 %4580, 2
  %4645 = add nsw i64 %4581, -1
  %4646 = add i32 %4579, 1
  br i1 %4644, label %4578, label %4647, !llvm.loop !176

4647:                                             ; preds = %4637, %4573
  %4648 = phi i32 [ %4577, %4573 ], [ %4643, %4637 ]
  %4649 = sext i32 %4648 to i64
  %4650 = getelementptr inbounds i8, ptr %4242, i64 %4649
  %4651 = load i8, ptr %4650, align 1, !tbaa !11
  %4652 = uitofp i8 %4651 to float
  %4653 = fadd fast float %4574, %4652
  store float %4653, ptr %4244, align 4, !tbaa !162
  %4654 = fadd fast double %4576, 1.000000e+00
  %4655 = add nuw nsw i32 %4575, 1
  br i1 %4567, label %4656, label %4703

4656:                                             ; preds = %4647
  %4657 = load i32, ptr %4, align 4, !tbaa !5
  %4658 = load i32, ptr %12, align 4, !tbaa !5
  %4659 = add nsw i32 %4658, -1
  %4660 = icmp slt i32 %4657, %4659
  br i1 %4660, label %4680, label %4661

4661:                                             ; preds = %4656
  %4662 = icmp eq i32 %4657, %4659
  br i1 %4662, label %4663, label %4696

4663:                                             ; preds = %4661
  store i32 0, ptr %4, align 4, !tbaa !5
  %4664 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4664, ptr %6, align 4, !tbaa !5
  br i1 %4572, label %4703, label %4665

4665:                                             ; preds = %4663, %4690
  %4666 = phi i64 [ %4694, %4690 ], [ 1, %4663 ]
  %4667 = getelementptr inbounds i32, ptr %4, i64 %4666
  %4668 = load i32, ptr %4667, align 4, !tbaa !5
  %4669 = getelementptr inbounds i32, ptr %12, i64 %4666
  %4670 = load i32, ptr %4669, align 4, !tbaa !5
  %4671 = add nsw i32 %4670, -1
  %4672 = icmp slt i32 %4668, %4671
  br i1 %4672, label %4673, label %4688

4673:                                             ; preds = %4665
  br i1 %4660, label %4680, label %4674

4674:                                             ; preds = %4673
  %4675 = getelementptr inbounds i32, ptr %7, i64 %4666
  %4676 = load i32, ptr %4675, align 4, !tbaa !5
  %4677 = getelementptr inbounds i32, ptr %6, i64 %4666
  %4678 = load i32, ptr %4677, align 4, !tbaa !5
  %4679 = add nsw i32 %4678, %4676
  store i32 %4679, ptr %4677, align 4, !tbaa !5
  br label %4698

4680:                                             ; preds = %4656, %4673
  %4681 = phi i32 [ %4668, %4673 ], [ %4657, %4656 ]
  %4682 = phi ptr [ %4667, %4673 ], [ %4, %4656 ]
  %4683 = phi i64 [ %4666, %4673 ], [ 0, %4656 ]
  %4684 = add nsw i32 %4681, 1
  store i32 %4684, ptr %4682, align 4, !tbaa !5
  %4685 = getelementptr inbounds i32, ptr %7, i64 %4683
  %4686 = load i32, ptr %4685, align 4, !tbaa !5
  %4687 = getelementptr inbounds i32, ptr %6, i64 %4683
  br label %4698

4688:                                             ; preds = %4665
  %4689 = icmp eq i32 %4668, %4671
  br i1 %4689, label %4690, label %4696

4690:                                             ; preds = %4688
  store i32 0, ptr %4667, align 4, !tbaa !5
  %4691 = getelementptr inbounds i32, ptr %8, i64 %4666
  %4692 = load i32, ptr %4691, align 4, !tbaa !5
  %4693 = getelementptr inbounds i32, ptr %6, i64 %4666
  store i32 %4692, ptr %4693, align 4, !tbaa !5
  %4694 = add nuw nsw i64 %4666, 1
  %4695 = icmp eq i64 %4694, %4570
  br i1 %4695, label %4703, label %4665, !llvm.loop !177

4696:                                             ; preds = %4661, %4688
  %4697 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4698:                                             ; preds = %4674, %4680
  %4699 = phi ptr [ %4687, %4680 ], [ %4667, %4674 ]
  %4700 = phi i32 [ %4686, %4680 ], [ 1, %4674 ]
  %4701 = load i32, ptr %4699, align 4, !tbaa !5
  %4702 = add nsw i32 %4701, %4700
  store i32 %4702, ptr %4699, align 4, !tbaa !5
  br label %4703

4703:                                             ; preds = %4690, %4698, %4663, %4647
  %4704 = icmp eq i32 %4655, %5
  br i1 %4704, label %5444, label %4573, !llvm.loop !178

4705:                                             ; preds = %4556, %4840
  %4706 = phi float [ 0.000000e+00, %4556 ], [ %4788, %4840 ]
  %4707 = phi i32 [ 0, %4556 ], [ %4789, %4840 ]
  %4708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4557, label %4709, label %4778

4709:                                             ; preds = %4705, %4768
  %4710 = phi i32 [ %4777, %4768 ], [ 0, %4705 ]
  %4711 = phi i64 [ %4719, %4768 ], [ %4561, %4705 ]
  %4712 = phi i64 [ %4776, %4768 ], [ %4560, %4705 ]
  %4713 = phi i32 [ %4774, %4768 ], [ %4708, %4705 ]
  %4714 = sub i32 %4559, %4710
  %4715 = tail call i32 @llvm.smin.i32(i32 %4714, i32 0)
  %4716 = sub i32 %4714, %4715
  %4717 = zext i32 %4716 to i64
  %4718 = add nuw nsw i64 %4717, 1
  %4719 = add nsw i64 %4711, -1
  %4720 = icmp ult i32 %4716, 31
  br i1 %4720, label %4756, label %4721

4721:                                             ; preds = %4709
  %4722 = and i64 %4718, 8589934560
  %4723 = sub i64 %4712, %4722
  br label %4724

4724:                                             ; preds = %4724, %4721
  %4725 = phi i64 [ 0, %4721 ], [ %4748, %4724 ]
  %4726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4721 ], [ %4744, %4724 ]
  %4727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4721 ], [ %4745, %4724 ]
  %4728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4721 ], [ %4746, %4724 ]
  %4729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4721 ], [ %4747, %4724 ]
  %4730 = sub i64 %4712, %4725
  %4731 = getelementptr inbounds i32, ptr %11, i64 %4730
  %4732 = getelementptr inbounds i32, ptr %4731, i64 -7
  %4733 = load <8 x i32>, ptr %4732, align 4, !tbaa !5
  %4734 = shufflevector <8 x i32> %4733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4735 = getelementptr inbounds i32, ptr %4731, i64 -15
  %4736 = load <8 x i32>, ptr %4735, align 4, !tbaa !5
  %4737 = shufflevector <8 x i32> %4736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4738 = getelementptr inbounds i32, ptr %4731, i64 -23
  %4739 = load <8 x i32>, ptr %4738, align 4, !tbaa !5
  %4740 = shufflevector <8 x i32> %4739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4741 = getelementptr inbounds i32, ptr %4731, i64 -31
  %4742 = load <8 x i32>, ptr %4741, align 4, !tbaa !5
  %4743 = shufflevector <8 x i32> %4742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4744 = mul <8 x i32> %4734, %4726
  %4745 = mul <8 x i32> %4737, %4727
  %4746 = mul <8 x i32> %4740, %4728
  %4747 = mul <8 x i32> %4743, %4729
  %4748 = add nuw i64 %4725, 32
  %4749 = icmp eq i64 %4748, %4722
  br i1 %4749, label %4750, label %4724, !llvm.loop !179

4750:                                             ; preds = %4724
  %4751 = mul <8 x i32> %4745, %4744
  %4752 = mul <8 x i32> %4746, %4751
  %4753 = mul <8 x i32> %4747, %4752
  %4754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4753)
  %4755 = icmp eq i64 %4718, %4722
  br i1 %4755, label %4768, label %4756

4756:                                             ; preds = %4709, %4750
  %4757 = phi i64 [ %4712, %4709 ], [ %4723, %4750 ]
  %4758 = phi i32 [ 1, %4709 ], [ %4754, %4750 ]
  br label %4759

4759:                                             ; preds = %4756, %4759
  %4760 = phi i64 [ %4765, %4759 ], [ %4757, %4756 ]
  %4761 = phi i32 [ %4764, %4759 ], [ %4758, %4756 ]
  %4762 = getelementptr inbounds i32, ptr %11, i64 %4760
  %4763 = load i32, ptr %4762, align 4, !tbaa !5
  %4764 = mul nsw i32 %4763, %4761
  %4765 = add nsw i64 %4760, -1
  %4766 = trunc i64 %4760 to i32
  %4767 = icmp sgt i32 %4766, 0
  br i1 %4767, label %4759, label %4768, !llvm.loop !180

4768:                                             ; preds = %4759, %4750
  %4769 = phi i32 [ %4754, %4750 ], [ %4764, %4759 ]
  %4770 = and i64 %4719, 4294967295
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4770
  %4772 = load i32, ptr %4771, align 4, !tbaa !5
  %4773 = mul nsw i32 %4772, %4769
  %4774 = add nsw i32 %4773, %4713
  %4775 = icmp sgt i64 %4711, 2
  %4776 = add nsw i64 %4712, -1
  %4777 = add i32 %4710, 1
  br i1 %4775, label %4709, label %4778, !llvm.loop !181

4778:                                             ; preds = %4768, %4705
  %4779 = phi i32 [ %4708, %4705 ], [ %4774, %4768 ]
  %4780 = icmp slt i32 %4779, %5
  br i1 %4780, label %4783, label %4781

4781:                                             ; preds = %4778
  %4782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

4783:                                             ; preds = %4778
  %4784 = sext i32 %4779 to i64
  %4785 = getelementptr inbounds i8, ptr %4242, i64 %4784
  %4786 = load i8, ptr %4785, align 1, !tbaa !11
  %4787 = uitofp i8 %4786 to float
  %4788 = fadd fast float %4706, %4787
  store float %4788, ptr %4244, align 4, !tbaa !162
  %4789 = add nuw nsw i32 %4707, 1
  br i1 %4558, label %4790, label %4840

4790:                                             ; preds = %4783
  %4791 = load i32, ptr %4, align 4, !tbaa !5
  %4792 = load i32, ptr %12, align 4, !tbaa !5
  %4793 = add nsw i32 %4792, -1
  %4794 = icmp slt i32 %4791, %4793
  br i1 %4794, label %4817, label %4795

4795:                                             ; preds = %4790
  %4796 = icmp eq i32 %4791, %4793
  br i1 %4796, label %4797, label %4833

4797:                                             ; preds = %4795
  store i32 0, ptr %4, align 4, !tbaa !5
  %4798 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4798, ptr %6, align 4, !tbaa !5
  br i1 %4563, label %4840, label %4799

4799:                                             ; preds = %4797, %4827
  %4800 = phi i64 [ %4831, %4827 ], [ 1, %4797 ]
  %4801 = getelementptr inbounds i32, ptr %4, i64 %4800
  %4802 = load i32, ptr %4801, align 4, !tbaa !5
  %4803 = getelementptr inbounds i32, ptr %12, i64 %4800
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = add nsw i32 %4804, -1
  %4806 = icmp slt i32 %4802, %4805
  br i1 %4806, label %4807, label %4825

4807:                                             ; preds = %4799
  br i1 %4794, label %4817, label %4808

4808:                                             ; preds = %4807
  %4809 = shl i64 %4800, 32
  %4810 = add i64 %4809, -4294967296
  %4811 = ashr exact i64 %4810, 32
  %4812 = getelementptr inbounds i32, ptr %7, i64 %4811
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = getelementptr inbounds i32, ptr %6, i64 %4800
  %4815 = load i32, ptr %4814, align 4, !tbaa !5
  %4816 = add nsw i32 %4815, %4813
  store i32 %4816, ptr %4814, align 4, !tbaa !5
  br label %4835

4817:                                             ; preds = %4790, %4807
  %4818 = phi i32 [ %4802, %4807 ], [ %4791, %4790 ]
  %4819 = phi ptr [ %4801, %4807 ], [ %4, %4790 ]
  %4820 = phi i64 [ %4800, %4807 ], [ 0, %4790 ]
  %4821 = add nsw i32 %4818, 1
  store i32 %4821, ptr %4819, align 4, !tbaa !5
  %4822 = getelementptr inbounds i32, ptr %7, i64 %4820
  %4823 = load i32, ptr %4822, align 4, !tbaa !5
  %4824 = getelementptr inbounds i32, ptr %6, i64 %4820
  br label %4835

4825:                                             ; preds = %4799
  %4826 = icmp eq i32 %4802, %4805
  br i1 %4826, label %4827, label %4833

4827:                                             ; preds = %4825
  store i32 0, ptr %4801, align 4, !tbaa !5
  %4828 = getelementptr inbounds i32, ptr %8, i64 %4800
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = getelementptr inbounds i32, ptr %6, i64 %4800
  store i32 %4829, ptr %4830, align 4, !tbaa !5
  %4831 = add nuw nsw i64 %4800, 1
  %4832 = icmp eq i64 %4831, %4561
  br i1 %4832, label %4840, label %4799, !llvm.loop !182

4833:                                             ; preds = %4795, %4825
  %4834 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

4835:                                             ; preds = %4808, %4817
  %4836 = phi ptr [ %4824, %4817 ], [ %4801, %4808 ]
  %4837 = phi i32 [ %4823, %4817 ], [ 1, %4808 ]
  %4838 = load i32, ptr %4836, align 4, !tbaa !5
  %4839 = add nsw i32 %4838, %4837
  store i32 %4839, ptr %4836, align 4, !tbaa !5
  br label %4840

4840:                                             ; preds = %4827, %4835, %4797, %4783
  %4841 = icmp eq i32 %4789, %5
  br i1 %4841, label %5444, label %4705, !llvm.loop !183

4842:                                             ; preds = %4249
  %4843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

4844:                                             ; preds = %18
  %4845 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4846 = load ptr, ptr %4845, align 8, !tbaa !9
  %4847 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4848 = load ptr, ptr %4847, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4848, align 8, !tbaa !18
  %4849 = icmp eq i32 %13, 0
  br i1 %4849, label %4850, label %4853

4850:                                             ; preds = %4844
  %4851 = load i8, ptr %4846, align 1, !tbaa !11
  %4852 = uitofp i8 %4851 to double
  store double %4852, ptr %4848, align 8, !tbaa !18
  br label %5444

4853:                                             ; preds = %4844
  switch i32 %1, label %5442 [
    i32 1, label %4854
    i32 0, label %5150
  ]

4854:                                             ; preds = %4853
  %4855 = getelementptr inbounds i32, ptr %3, i64 %19
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = icmp eq i32 %4856, 0
  %4858 = icmp sgt i32 %5, 0
  br i1 %4857, label %4868, label %4859

4859:                                             ; preds = %4854
  br i1 %4858, label %4860, label %5444

4860:                                             ; preds = %4859
  %4861 = icmp sgt i32 %13, 1
  %4862 = icmp sgt i32 %13, 0
  %4863 = add i32 %13, -2
  %4864 = zext i32 %4863 to i64
  %4865 = zext i32 %13 to i64
  %4866 = add nuw i32 %5, 1
  %4867 = icmp eq i32 %13, 1
  br label %5013

4868:                                             ; preds = %4854
  br i1 %4858, label %4869, label %5444

4869:                                             ; preds = %4868
  %4870 = icmp sgt i32 %13, 1
  %4871 = icmp sgt i32 %13, 0
  %4872 = add i32 %13, -2
  %4873 = zext i32 %4872 to i64
  %4874 = zext i32 %13 to i64
  %4875 = add nuw i32 %5, 1
  %4876 = icmp eq i32 %13, 1
  br label %4877

4877:                                             ; preds = %4869, %5011
  %4878 = phi double [ 0.000000e+00, %4869 ], [ %4961, %5011 ]
  %4879 = phi i32 [ 0, %4869 ], [ %4963, %5011 ]
  %4880 = phi double [ 0.000000e+00, %4869 ], [ %4962, %5011 ]
  %4881 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4870, label %4882, label %4951

4882:                                             ; preds = %4877, %4941
  %4883 = phi i32 [ %4950, %4941 ], [ 0, %4877 ]
  %4884 = phi i64 [ %4892, %4941 ], [ %4874, %4877 ]
  %4885 = phi i64 [ %4949, %4941 ], [ %4873, %4877 ]
  %4886 = phi i32 [ %4947, %4941 ], [ %4881, %4877 ]
  %4887 = sub i32 %4872, %4883
  %4888 = tail call i32 @llvm.smin.i32(i32 %4887, i32 0)
  %4889 = sub i32 %4887, %4888
  %4890 = zext i32 %4889 to i64
  %4891 = add nuw nsw i64 %4890, 1
  %4892 = add nsw i64 %4884, -1
  %4893 = icmp ult i32 %4889, 31
  br i1 %4893, label %4929, label %4894

4894:                                             ; preds = %4882
  %4895 = and i64 %4891, 8589934560
  %4896 = sub i64 %4885, %4895
  br label %4897

4897:                                             ; preds = %4897, %4894
  %4898 = phi i64 [ 0, %4894 ], [ %4921, %4897 ]
  %4899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4894 ], [ %4917, %4897 ]
  %4900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4894 ], [ %4918, %4897 ]
  %4901 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4894 ], [ %4919, %4897 ]
  %4902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4894 ], [ %4920, %4897 ]
  %4903 = sub i64 %4885, %4898
  %4904 = getelementptr inbounds i32, ptr %9, i64 %4903
  %4905 = getelementptr inbounds i32, ptr %4904, i64 -7
  %4906 = load <8 x i32>, ptr %4905, align 4, !tbaa !5
  %4907 = shufflevector <8 x i32> %4906, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4908 = getelementptr inbounds i32, ptr %4904, i64 -15
  %4909 = load <8 x i32>, ptr %4908, align 4, !tbaa !5
  %4910 = shufflevector <8 x i32> %4909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4911 = getelementptr inbounds i32, ptr %4904, i64 -23
  %4912 = load <8 x i32>, ptr %4911, align 4, !tbaa !5
  %4913 = shufflevector <8 x i32> %4912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4914 = getelementptr inbounds i32, ptr %4904, i64 -31
  %4915 = load <8 x i32>, ptr %4914, align 4, !tbaa !5
  %4916 = shufflevector <8 x i32> %4915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4917 = mul <8 x i32> %4907, %4899
  %4918 = mul <8 x i32> %4910, %4900
  %4919 = mul <8 x i32> %4913, %4901
  %4920 = mul <8 x i32> %4916, %4902
  %4921 = add nuw i64 %4898, 32
  %4922 = icmp eq i64 %4921, %4895
  br i1 %4922, label %4923, label %4897, !llvm.loop !184

4923:                                             ; preds = %4897
  %4924 = mul <8 x i32> %4918, %4917
  %4925 = mul <8 x i32> %4919, %4924
  %4926 = mul <8 x i32> %4920, %4925
  %4927 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4926)
  %4928 = icmp eq i64 %4891, %4895
  br i1 %4928, label %4941, label %4929

4929:                                             ; preds = %4882, %4923
  %4930 = phi i64 [ %4885, %4882 ], [ %4896, %4923 ]
  %4931 = phi i32 [ 1, %4882 ], [ %4927, %4923 ]
  br label %4932

4932:                                             ; preds = %4929, %4932
  %4933 = phi i64 [ %4938, %4932 ], [ %4930, %4929 ]
  %4934 = phi i32 [ %4937, %4932 ], [ %4931, %4929 ]
  %4935 = getelementptr inbounds i32, ptr %9, i64 %4933
  %4936 = load i32, ptr %4935, align 4, !tbaa !5
  %4937 = mul nsw i32 %4936, %4934
  %4938 = add nsw i64 %4933, -1
  %4939 = trunc i64 %4933 to i32
  %4940 = icmp sgt i32 %4939, 0
  br i1 %4940, label %4932, label %4941, !llvm.loop !185

4941:                                             ; preds = %4932, %4923
  %4942 = phi i32 [ %4927, %4923 ], [ %4937, %4932 ]
  %4943 = and i64 %4892, 4294967295
  %4944 = getelementptr inbounds i32, ptr %6, i64 %4943
  %4945 = load i32, ptr %4944, align 4, !tbaa !5
  %4946 = mul nsw i32 %4945, %4942
  %4947 = add nsw i32 %4946, %4886
  %4948 = icmp sgt i64 %4884, 2
  %4949 = add nsw i64 %4885, -1
  %4950 = add i32 %4883, 1
  br i1 %4948, label %4882, label %4951, !llvm.loop !186

4951:                                             ; preds = %4941, %4877
  %4952 = phi i32 [ %4881, %4877 ], [ %4947, %4941 ]
  %4953 = sext i32 %4952 to i64
  %4954 = getelementptr inbounds double, ptr %2, i64 %4953
  %4955 = load double, ptr %4954, align 8, !tbaa !18
  %4956 = getelementptr inbounds i8, ptr %4846, i64 %4953
  %4957 = load i8, ptr %4956, align 1, !tbaa !11
  %4958 = uitofp i8 %4957 to double
  %4959 = fmul fast double %4955, %4958
  %4960 = tail call fast double @llvm.fabs.f64(double %4959)
  %4961 = fadd fast double %4960, %4878
  store double %4961, ptr %4848, align 8, !tbaa !18
  %4962 = fadd fast double %4955, %4880
  %4963 = add nuw nsw i32 %4879, 1
  br i1 %4871, label %4964, label %5011

4964:                                             ; preds = %4951
  %4965 = load i32, ptr %4, align 4, !tbaa !5
  %4966 = load i32, ptr %12, align 4, !tbaa !5
  %4967 = add nsw i32 %4966, -1
  %4968 = icmp slt i32 %4965, %4967
  br i1 %4968, label %4988, label %4969

4969:                                             ; preds = %4964
  %4970 = icmp eq i32 %4965, %4967
  br i1 %4970, label %4971, label %5004

4971:                                             ; preds = %4969
  store i32 0, ptr %4, align 4, !tbaa !5
  %4972 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4972, ptr %6, align 4, !tbaa !5
  br i1 %4876, label %5011, label %4973

4973:                                             ; preds = %4971, %4998
  %4974 = phi i64 [ %5002, %4998 ], [ 1, %4971 ]
  %4975 = getelementptr inbounds i32, ptr %4, i64 %4974
  %4976 = load i32, ptr %4975, align 4, !tbaa !5
  %4977 = getelementptr inbounds i32, ptr %12, i64 %4974
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = add nsw i32 %4978, -1
  %4980 = icmp slt i32 %4976, %4979
  br i1 %4980, label %4981, label %4996

4981:                                             ; preds = %4973
  br i1 %4968, label %4988, label %4982

4982:                                             ; preds = %4981
  %4983 = getelementptr inbounds i32, ptr %7, i64 %4974
  %4984 = load i32, ptr %4983, align 4, !tbaa !5
  %4985 = getelementptr inbounds i32, ptr %6, i64 %4974
  %4986 = load i32, ptr %4985, align 4, !tbaa !5
  %4987 = add nsw i32 %4986, %4984
  store i32 %4987, ptr %4985, align 4, !tbaa !5
  br label %5006

4988:                                             ; preds = %4964, %4981
  %4989 = phi i32 [ %4976, %4981 ], [ %4965, %4964 ]
  %4990 = phi ptr [ %4975, %4981 ], [ %4, %4964 ]
  %4991 = phi i64 [ %4974, %4981 ], [ 0, %4964 ]
  %4992 = add nsw i32 %4989, 1
  store i32 %4992, ptr %4990, align 4, !tbaa !5
  %4993 = getelementptr inbounds i32, ptr %7, i64 %4991
  %4994 = load i32, ptr %4993, align 4, !tbaa !5
  %4995 = getelementptr inbounds i32, ptr %6, i64 %4991
  br label %5006

4996:                                             ; preds = %4973
  %4997 = icmp eq i32 %4976, %4979
  br i1 %4997, label %4998, label %5004

4998:                                             ; preds = %4996
  store i32 0, ptr %4975, align 4, !tbaa !5
  %4999 = getelementptr inbounds i32, ptr %8, i64 %4974
  %5000 = load i32, ptr %4999, align 4, !tbaa !5
  %5001 = getelementptr inbounds i32, ptr %6, i64 %4974
  store i32 %5000, ptr %5001, align 4, !tbaa !5
  %5002 = add nuw nsw i64 %4974, 1
  %5003 = icmp eq i64 %5002, %4874
  br i1 %5003, label %5011, label %4973, !llvm.loop !187

5004:                                             ; preds = %4969, %4996
  %5005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

5006:                                             ; preds = %4982, %4988
  %5007 = phi ptr [ %4995, %4988 ], [ %4975, %4982 ]
  %5008 = phi i32 [ %4994, %4988 ], [ 1, %4982 ]
  %5009 = load i32, ptr %5007, align 4, !tbaa !5
  %5010 = add nsw i32 %5009, %5008
  store i32 %5010, ptr %5007, align 4, !tbaa !5
  br label %5011

5011:                                             ; preds = %4998, %5006, %4971, %4951
  %5012 = icmp eq i32 %4963, %5
  br i1 %5012, label %5444, label %4877, !llvm.loop !188

5013:                                             ; preds = %4860, %5148
  %5014 = phi double [ 0.000000e+00, %4860 ], [ %5096, %5148 ]
  %5015 = phi i32 [ 0, %4860 ], [ %5097, %5148 ]
  %5016 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4861, label %5017, label %5086

5017:                                             ; preds = %5013, %5076
  %5018 = phi i32 [ %5085, %5076 ], [ 0, %5013 ]
  %5019 = phi i64 [ %5027, %5076 ], [ %4865, %5013 ]
  %5020 = phi i64 [ %5084, %5076 ], [ %4864, %5013 ]
  %5021 = phi i32 [ %5082, %5076 ], [ %5016, %5013 ]
  %5022 = sub i32 %4863, %5018
  %5023 = tail call i32 @llvm.smin.i32(i32 %5022, i32 0)
  %5024 = sub i32 %5022, %5023
  %5025 = zext i32 %5024 to i64
  %5026 = add nuw nsw i64 %5025, 1
  %5027 = add nsw i64 %5019, -1
  %5028 = icmp ult i32 %5024, 31
  br i1 %5028, label %5064, label %5029

5029:                                             ; preds = %5017
  %5030 = and i64 %5026, 8589934560
  %5031 = sub i64 %5020, %5030
  br label %5032

5032:                                             ; preds = %5032, %5029
  %5033 = phi i64 [ 0, %5029 ], [ %5056, %5032 ]
  %5034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5029 ], [ %5052, %5032 ]
  %5035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5029 ], [ %5053, %5032 ]
  %5036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5029 ], [ %5054, %5032 ]
  %5037 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5029 ], [ %5055, %5032 ]
  %5038 = sub i64 %5020, %5033
  %5039 = getelementptr inbounds i32, ptr %11, i64 %5038
  %5040 = getelementptr inbounds i32, ptr %5039, i64 -7
  %5041 = load <8 x i32>, ptr %5040, align 4, !tbaa !5
  %5042 = shufflevector <8 x i32> %5041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5043 = getelementptr inbounds i32, ptr %5039, i64 -15
  %5044 = load <8 x i32>, ptr %5043, align 4, !tbaa !5
  %5045 = shufflevector <8 x i32> %5044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5046 = getelementptr inbounds i32, ptr %5039, i64 -23
  %5047 = load <8 x i32>, ptr %5046, align 4, !tbaa !5
  %5048 = shufflevector <8 x i32> %5047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5049 = getelementptr inbounds i32, ptr %5039, i64 -31
  %5050 = load <8 x i32>, ptr %5049, align 4, !tbaa !5
  %5051 = shufflevector <8 x i32> %5050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5052 = mul <8 x i32> %5042, %5034
  %5053 = mul <8 x i32> %5045, %5035
  %5054 = mul <8 x i32> %5048, %5036
  %5055 = mul <8 x i32> %5051, %5037
  %5056 = add nuw i64 %5033, 32
  %5057 = icmp eq i64 %5056, %5030
  br i1 %5057, label %5058, label %5032, !llvm.loop !189

5058:                                             ; preds = %5032
  %5059 = mul <8 x i32> %5053, %5052
  %5060 = mul <8 x i32> %5054, %5059
  %5061 = mul <8 x i32> %5055, %5060
  %5062 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5061)
  %5063 = icmp eq i64 %5026, %5030
  br i1 %5063, label %5076, label %5064

5064:                                             ; preds = %5017, %5058
  %5065 = phi i64 [ %5020, %5017 ], [ %5031, %5058 ]
  %5066 = phi i32 [ 1, %5017 ], [ %5062, %5058 ]
  br label %5067

5067:                                             ; preds = %5064, %5067
  %5068 = phi i64 [ %5073, %5067 ], [ %5065, %5064 ]
  %5069 = phi i32 [ %5072, %5067 ], [ %5066, %5064 ]
  %5070 = getelementptr inbounds i32, ptr %11, i64 %5068
  %5071 = load i32, ptr %5070, align 4, !tbaa !5
  %5072 = mul nsw i32 %5071, %5069
  %5073 = add nsw i64 %5068, -1
  %5074 = trunc i64 %5068 to i32
  %5075 = icmp sgt i32 %5074, 0
  br i1 %5075, label %5067, label %5076, !llvm.loop !190

5076:                                             ; preds = %5067, %5058
  %5077 = phi i32 [ %5062, %5058 ], [ %5072, %5067 ]
  %5078 = and i64 %5027, 4294967295
  %5079 = getelementptr inbounds i32, ptr %6, i64 %5078
  %5080 = load i32, ptr %5079, align 4, !tbaa !5
  %5081 = mul nsw i32 %5080, %5077
  %5082 = add nsw i32 %5081, %5021
  %5083 = icmp sgt i64 %5019, 2
  %5084 = add nsw i64 %5020, -1
  %5085 = add i32 %5018, 1
  br i1 %5083, label %5017, label %5086, !llvm.loop !191

5086:                                             ; preds = %5076, %5013
  %5087 = phi i32 [ %5016, %5013 ], [ %5082, %5076 ]
  %5088 = icmp slt i32 %5087, %5
  br i1 %5088, label %5091, label %5089

5089:                                             ; preds = %5086
  %5090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

5091:                                             ; preds = %5086
  %5092 = sext i32 %5087 to i64
  %5093 = getelementptr inbounds i8, ptr %4846, i64 %5092
  %5094 = load i8, ptr %5093, align 1, !tbaa !11
  %5095 = uitofp i8 %5094 to double
  %5096 = fadd fast double %5014, %5095
  store double %5096, ptr %4848, align 8, !tbaa !18
  %5097 = add nuw nsw i32 %5015, 1
  br i1 %4862, label %5098, label %5148

5098:                                             ; preds = %5091
  %5099 = load i32, ptr %4, align 4, !tbaa !5
  %5100 = load i32, ptr %12, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, -1
  %5102 = icmp slt i32 %5099, %5101
  br i1 %5102, label %5125, label %5103

5103:                                             ; preds = %5098
  %5104 = icmp eq i32 %5099, %5101
  br i1 %5104, label %5105, label %5141

5105:                                             ; preds = %5103
  store i32 0, ptr %4, align 4, !tbaa !5
  %5106 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5106, ptr %6, align 4, !tbaa !5
  br i1 %4867, label %5148, label %5107

5107:                                             ; preds = %5105, %5135
  %5108 = phi i64 [ %5139, %5135 ], [ 1, %5105 ]
  %5109 = getelementptr inbounds i32, ptr %4, i64 %5108
  %5110 = load i32, ptr %5109, align 4, !tbaa !5
  %5111 = getelementptr inbounds i32, ptr %12, i64 %5108
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = add nsw i32 %5112, -1
  %5114 = icmp slt i32 %5110, %5113
  br i1 %5114, label %5115, label %5133

5115:                                             ; preds = %5107
  br i1 %5102, label %5125, label %5116

5116:                                             ; preds = %5115
  %5117 = shl i64 %5108, 32
  %5118 = add i64 %5117, -4294967296
  %5119 = ashr exact i64 %5118, 32
  %5120 = getelementptr inbounds i32, ptr %7, i64 %5119
  %5121 = load i32, ptr %5120, align 4, !tbaa !5
  %5122 = getelementptr inbounds i32, ptr %6, i64 %5108
  %5123 = load i32, ptr %5122, align 4, !tbaa !5
  %5124 = add nsw i32 %5123, %5121
  store i32 %5124, ptr %5122, align 4, !tbaa !5
  br label %5143

5125:                                             ; preds = %5098, %5115
  %5126 = phi i32 [ %5110, %5115 ], [ %5099, %5098 ]
  %5127 = phi ptr [ %5109, %5115 ], [ %4, %5098 ]
  %5128 = phi i64 [ %5108, %5115 ], [ 0, %5098 ]
  %5129 = add nsw i32 %5126, 1
  store i32 %5129, ptr %5127, align 4, !tbaa !5
  %5130 = getelementptr inbounds i32, ptr %7, i64 %5128
  %5131 = load i32, ptr %5130, align 4, !tbaa !5
  %5132 = getelementptr inbounds i32, ptr %6, i64 %5128
  br label %5143

5133:                                             ; preds = %5107
  %5134 = icmp eq i32 %5110, %5113
  br i1 %5134, label %5135, label %5141

5135:                                             ; preds = %5133
  store i32 0, ptr %5109, align 4, !tbaa !5
  %5136 = getelementptr inbounds i32, ptr %8, i64 %5108
  %5137 = load i32, ptr %5136, align 4, !tbaa !5
  %5138 = getelementptr inbounds i32, ptr %6, i64 %5108
  store i32 %5137, ptr %5138, align 4, !tbaa !5
  %5139 = add nuw nsw i64 %5108, 1
  %5140 = icmp eq i64 %5139, %4865
  br i1 %5140, label %5148, label %5107, !llvm.loop !192

5141:                                             ; preds = %5103, %5133
  %5142 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

5143:                                             ; preds = %5116, %5125
  %5144 = phi ptr [ %5132, %5125 ], [ %5109, %5116 ]
  %5145 = phi i32 [ %5131, %5125 ], [ 1, %5116 ]
  %5146 = load i32, ptr %5144, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, %5145
  store i32 %5147, ptr %5144, align 4, !tbaa !5
  br label %5148

5148:                                             ; preds = %5135, %5143, %5105, %5091
  %5149 = icmp eq i32 %5097, %5
  br i1 %5149, label %5444, label %5013, !llvm.loop !193

5150:                                             ; preds = %4853
  %5151 = getelementptr inbounds i32, ptr %3, i64 %19
  %5152 = load i32, ptr %5151, align 4, !tbaa !5
  %5153 = icmp eq i32 %5152, 0
  %5154 = icmp sgt i32 %5, 0
  br i1 %5153, label %5164, label %5155

5155:                                             ; preds = %5150
  br i1 %5154, label %5156, label %5444

5156:                                             ; preds = %5155
  %5157 = icmp sgt i32 %13, 1
  %5158 = icmp sgt i32 %13, 0
  %5159 = add i32 %13, -2
  %5160 = zext i32 %5159 to i64
  %5161 = zext i32 %13 to i64
  %5162 = add nuw i32 %5, 1
  %5163 = icmp eq i32 %13, 1
  br label %5305

5164:                                             ; preds = %5150
  br i1 %5154, label %5165, label %5444

5165:                                             ; preds = %5164
  %5166 = icmp sgt i32 %13, 1
  %5167 = icmp sgt i32 %13, 0
  %5168 = add i32 %13, -2
  %5169 = zext i32 %5168 to i64
  %5170 = zext i32 %13 to i64
  %5171 = add nuw i32 %5, 1
  %5172 = icmp eq i32 %13, 1
  br label %5173

5173:                                             ; preds = %5165, %5303
  %5174 = phi double [ 0.000000e+00, %5165 ], [ %5253, %5303 ]
  %5175 = phi i32 [ 0, %5165 ], [ %5255, %5303 ]
  %5176 = phi double [ 0.000000e+00, %5165 ], [ %5254, %5303 ]
  %5177 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5166, label %5178, label %5247

5178:                                             ; preds = %5173, %5237
  %5179 = phi i32 [ %5246, %5237 ], [ 0, %5173 ]
  %5180 = phi i64 [ %5188, %5237 ], [ %5170, %5173 ]
  %5181 = phi i64 [ %5245, %5237 ], [ %5169, %5173 ]
  %5182 = phi i32 [ %5243, %5237 ], [ %5177, %5173 ]
  %5183 = sub i32 %5168, %5179
  %5184 = tail call i32 @llvm.smin.i32(i32 %5183, i32 0)
  %5185 = sub i32 %5183, %5184
  %5186 = zext i32 %5185 to i64
  %5187 = add nuw nsw i64 %5186, 1
  %5188 = add nsw i64 %5180, -1
  %5189 = icmp ult i32 %5185, 31
  br i1 %5189, label %5225, label %5190

5190:                                             ; preds = %5178
  %5191 = and i64 %5187, 8589934560
  %5192 = sub i64 %5181, %5191
  br label %5193

5193:                                             ; preds = %5193, %5190
  %5194 = phi i64 [ 0, %5190 ], [ %5217, %5193 ]
  %5195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5190 ], [ %5213, %5193 ]
  %5196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5190 ], [ %5214, %5193 ]
  %5197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5190 ], [ %5215, %5193 ]
  %5198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5190 ], [ %5216, %5193 ]
  %5199 = sub i64 %5181, %5194
  %5200 = getelementptr inbounds i32, ptr %9, i64 %5199
  %5201 = getelementptr inbounds i32, ptr %5200, i64 -7
  %5202 = load <8 x i32>, ptr %5201, align 4, !tbaa !5
  %5203 = shufflevector <8 x i32> %5202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5204 = getelementptr inbounds i32, ptr %5200, i64 -15
  %5205 = load <8 x i32>, ptr %5204, align 4, !tbaa !5
  %5206 = shufflevector <8 x i32> %5205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5207 = getelementptr inbounds i32, ptr %5200, i64 -23
  %5208 = load <8 x i32>, ptr %5207, align 4, !tbaa !5
  %5209 = shufflevector <8 x i32> %5208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5210 = getelementptr inbounds i32, ptr %5200, i64 -31
  %5211 = load <8 x i32>, ptr %5210, align 4, !tbaa !5
  %5212 = shufflevector <8 x i32> %5211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5213 = mul <8 x i32> %5203, %5195
  %5214 = mul <8 x i32> %5206, %5196
  %5215 = mul <8 x i32> %5209, %5197
  %5216 = mul <8 x i32> %5212, %5198
  %5217 = add nuw i64 %5194, 32
  %5218 = icmp eq i64 %5217, %5191
  br i1 %5218, label %5219, label %5193, !llvm.loop !194

5219:                                             ; preds = %5193
  %5220 = mul <8 x i32> %5214, %5213
  %5221 = mul <8 x i32> %5215, %5220
  %5222 = mul <8 x i32> %5216, %5221
  %5223 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5222)
  %5224 = icmp eq i64 %5187, %5191
  br i1 %5224, label %5237, label %5225

5225:                                             ; preds = %5178, %5219
  %5226 = phi i64 [ %5181, %5178 ], [ %5192, %5219 ]
  %5227 = phi i32 [ 1, %5178 ], [ %5223, %5219 ]
  br label %5228

5228:                                             ; preds = %5225, %5228
  %5229 = phi i64 [ %5234, %5228 ], [ %5226, %5225 ]
  %5230 = phi i32 [ %5233, %5228 ], [ %5227, %5225 ]
  %5231 = getelementptr inbounds i32, ptr %9, i64 %5229
  %5232 = load i32, ptr %5231, align 4, !tbaa !5
  %5233 = mul nsw i32 %5232, %5230
  %5234 = add nsw i64 %5229, -1
  %5235 = trunc i64 %5229 to i32
  %5236 = icmp sgt i32 %5235, 0
  br i1 %5236, label %5228, label %5237, !llvm.loop !195

5237:                                             ; preds = %5228, %5219
  %5238 = phi i32 [ %5223, %5219 ], [ %5233, %5228 ]
  %5239 = and i64 %5188, 4294967295
  %5240 = getelementptr inbounds i32, ptr %6, i64 %5239
  %5241 = load i32, ptr %5240, align 4, !tbaa !5
  %5242 = mul nsw i32 %5241, %5238
  %5243 = add nsw i32 %5242, %5182
  %5244 = icmp sgt i64 %5180, 2
  %5245 = add nsw i64 %5181, -1
  %5246 = add i32 %5179, 1
  br i1 %5244, label %5178, label %5247, !llvm.loop !196

5247:                                             ; preds = %5237, %5173
  %5248 = phi i32 [ %5177, %5173 ], [ %5243, %5237 ]
  %5249 = sext i32 %5248 to i64
  %5250 = getelementptr inbounds i8, ptr %4846, i64 %5249
  %5251 = load i8, ptr %5250, align 1, !tbaa !11
  %5252 = uitofp i8 %5251 to double
  %5253 = fadd fast double %5174, %5252
  store double %5253, ptr %4848, align 8, !tbaa !18
  %5254 = fadd fast double %5176, 1.000000e+00
  %5255 = add nuw nsw i32 %5175, 1
  br i1 %5167, label %5256, label %5303

5256:                                             ; preds = %5247
  %5257 = load i32, ptr %4, align 4, !tbaa !5
  %5258 = load i32, ptr %12, align 4, !tbaa !5
  %5259 = add nsw i32 %5258, -1
  %5260 = icmp slt i32 %5257, %5259
  br i1 %5260, label %5280, label %5261

5261:                                             ; preds = %5256
  %5262 = icmp eq i32 %5257, %5259
  br i1 %5262, label %5263, label %5296

5263:                                             ; preds = %5261
  store i32 0, ptr %4, align 4, !tbaa !5
  %5264 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5264, ptr %6, align 4, !tbaa !5
  br i1 %5172, label %5303, label %5265

5265:                                             ; preds = %5263, %5290
  %5266 = phi i64 [ %5294, %5290 ], [ 1, %5263 ]
  %5267 = getelementptr inbounds i32, ptr %4, i64 %5266
  %5268 = load i32, ptr %5267, align 4, !tbaa !5
  %5269 = getelementptr inbounds i32, ptr %12, i64 %5266
  %5270 = load i32, ptr %5269, align 4, !tbaa !5
  %5271 = add nsw i32 %5270, -1
  %5272 = icmp slt i32 %5268, %5271
  br i1 %5272, label %5273, label %5288

5273:                                             ; preds = %5265
  br i1 %5260, label %5280, label %5274

5274:                                             ; preds = %5273
  %5275 = getelementptr inbounds i32, ptr %7, i64 %5266
  %5276 = load i32, ptr %5275, align 4, !tbaa !5
  %5277 = getelementptr inbounds i32, ptr %6, i64 %5266
  %5278 = load i32, ptr %5277, align 4, !tbaa !5
  %5279 = add nsw i32 %5278, %5276
  store i32 %5279, ptr %5277, align 4, !tbaa !5
  br label %5298

5280:                                             ; preds = %5256, %5273
  %5281 = phi i32 [ %5268, %5273 ], [ %5257, %5256 ]
  %5282 = phi ptr [ %5267, %5273 ], [ %4, %5256 ]
  %5283 = phi i64 [ %5266, %5273 ], [ 0, %5256 ]
  %5284 = add nsw i32 %5281, 1
  store i32 %5284, ptr %5282, align 4, !tbaa !5
  %5285 = getelementptr inbounds i32, ptr %7, i64 %5283
  %5286 = load i32, ptr %5285, align 4, !tbaa !5
  %5287 = getelementptr inbounds i32, ptr %6, i64 %5283
  br label %5298

5288:                                             ; preds = %5265
  %5289 = icmp eq i32 %5268, %5271
  br i1 %5289, label %5290, label %5296

5290:                                             ; preds = %5288
  store i32 0, ptr %5267, align 4, !tbaa !5
  %5291 = getelementptr inbounds i32, ptr %8, i64 %5266
  %5292 = load i32, ptr %5291, align 4, !tbaa !5
  %5293 = getelementptr inbounds i32, ptr %6, i64 %5266
  store i32 %5292, ptr %5293, align 4, !tbaa !5
  %5294 = add nuw nsw i64 %5266, 1
  %5295 = icmp eq i64 %5294, %5170
  br i1 %5295, label %5303, label %5265, !llvm.loop !197

5296:                                             ; preds = %5261, %5288
  %5297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

5298:                                             ; preds = %5274, %5280
  %5299 = phi ptr [ %5287, %5280 ], [ %5267, %5274 ]
  %5300 = phi i32 [ %5286, %5280 ], [ 1, %5274 ]
  %5301 = load i32, ptr %5299, align 4, !tbaa !5
  %5302 = add nsw i32 %5301, %5300
  store i32 %5302, ptr %5299, align 4, !tbaa !5
  br label %5303

5303:                                             ; preds = %5290, %5298, %5263, %5247
  %5304 = icmp eq i32 %5255, %5
  br i1 %5304, label %5444, label %5173, !llvm.loop !198

5305:                                             ; preds = %5156, %5440
  %5306 = phi double [ 0.000000e+00, %5156 ], [ %5388, %5440 ]
  %5307 = phi i32 [ 0, %5156 ], [ %5389, %5440 ]
  %5308 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5157, label %5309, label %5378

5309:                                             ; preds = %5305, %5368
  %5310 = phi i32 [ %5377, %5368 ], [ 0, %5305 ]
  %5311 = phi i64 [ %5319, %5368 ], [ %5161, %5305 ]
  %5312 = phi i64 [ %5376, %5368 ], [ %5160, %5305 ]
  %5313 = phi i32 [ %5374, %5368 ], [ %5308, %5305 ]
  %5314 = sub i32 %5159, %5310
  %5315 = tail call i32 @llvm.smin.i32(i32 %5314, i32 0)
  %5316 = sub i32 %5314, %5315
  %5317 = zext i32 %5316 to i64
  %5318 = add nuw nsw i64 %5317, 1
  %5319 = add nsw i64 %5311, -1
  %5320 = icmp ult i32 %5316, 31
  br i1 %5320, label %5356, label %5321

5321:                                             ; preds = %5309
  %5322 = and i64 %5318, 8589934560
  %5323 = sub i64 %5312, %5322
  br label %5324

5324:                                             ; preds = %5324, %5321
  %5325 = phi i64 [ 0, %5321 ], [ %5348, %5324 ]
  %5326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5321 ], [ %5344, %5324 ]
  %5327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5321 ], [ %5345, %5324 ]
  %5328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5321 ], [ %5346, %5324 ]
  %5329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5321 ], [ %5347, %5324 ]
  %5330 = sub i64 %5312, %5325
  %5331 = getelementptr inbounds i32, ptr %11, i64 %5330
  %5332 = getelementptr inbounds i32, ptr %5331, i64 -7
  %5333 = load <8 x i32>, ptr %5332, align 4, !tbaa !5
  %5334 = shufflevector <8 x i32> %5333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5335 = getelementptr inbounds i32, ptr %5331, i64 -15
  %5336 = load <8 x i32>, ptr %5335, align 4, !tbaa !5
  %5337 = shufflevector <8 x i32> %5336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5338 = getelementptr inbounds i32, ptr %5331, i64 -23
  %5339 = load <8 x i32>, ptr %5338, align 4, !tbaa !5
  %5340 = shufflevector <8 x i32> %5339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5341 = getelementptr inbounds i32, ptr %5331, i64 -31
  %5342 = load <8 x i32>, ptr %5341, align 4, !tbaa !5
  %5343 = shufflevector <8 x i32> %5342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5344 = mul <8 x i32> %5334, %5326
  %5345 = mul <8 x i32> %5337, %5327
  %5346 = mul <8 x i32> %5340, %5328
  %5347 = mul <8 x i32> %5343, %5329
  %5348 = add nuw i64 %5325, 32
  %5349 = icmp eq i64 %5348, %5322
  br i1 %5349, label %5350, label %5324, !llvm.loop !199

5350:                                             ; preds = %5324
  %5351 = mul <8 x i32> %5345, %5344
  %5352 = mul <8 x i32> %5346, %5351
  %5353 = mul <8 x i32> %5347, %5352
  %5354 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5353)
  %5355 = icmp eq i64 %5318, %5322
  br i1 %5355, label %5368, label %5356

5356:                                             ; preds = %5309, %5350
  %5357 = phi i64 [ %5312, %5309 ], [ %5323, %5350 ]
  %5358 = phi i32 [ 1, %5309 ], [ %5354, %5350 ]
  br label %5359

5359:                                             ; preds = %5356, %5359
  %5360 = phi i64 [ %5365, %5359 ], [ %5357, %5356 ]
  %5361 = phi i32 [ %5364, %5359 ], [ %5358, %5356 ]
  %5362 = getelementptr inbounds i32, ptr %11, i64 %5360
  %5363 = load i32, ptr %5362, align 4, !tbaa !5
  %5364 = mul nsw i32 %5363, %5361
  %5365 = add nsw i64 %5360, -1
  %5366 = trunc i64 %5360 to i32
  %5367 = icmp sgt i32 %5366, 0
  br i1 %5367, label %5359, label %5368, !llvm.loop !200

5368:                                             ; preds = %5359, %5350
  %5369 = phi i32 [ %5354, %5350 ], [ %5364, %5359 ]
  %5370 = and i64 %5319, 4294967295
  %5371 = getelementptr inbounds i32, ptr %6, i64 %5370
  %5372 = load i32, ptr %5371, align 4, !tbaa !5
  %5373 = mul nsw i32 %5372, %5369
  %5374 = add nsw i32 %5373, %5313
  %5375 = icmp sgt i64 %5311, 2
  %5376 = add nsw i64 %5312, -1
  %5377 = add i32 %5310, 1
  br i1 %5375, label %5309, label %5378, !llvm.loop !201

5378:                                             ; preds = %5368, %5305
  %5379 = phi i32 [ %5308, %5305 ], [ %5374, %5368 ]
  %5380 = icmp slt i32 %5379, %5
  br i1 %5380, label %5383, label %5381

5381:                                             ; preds = %5378
  %5382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5449

5383:                                             ; preds = %5378
  %5384 = sext i32 %5379 to i64
  %5385 = getelementptr inbounds i8, ptr %4846, i64 %5384
  %5386 = load i8, ptr %5385, align 1, !tbaa !11
  %5387 = uitofp i8 %5386 to double
  %5388 = fadd fast double %5306, %5387
  store double %5388, ptr %4848, align 8, !tbaa !18
  %5389 = add nuw nsw i32 %5307, 1
  br i1 %5158, label %5390, label %5440

5390:                                             ; preds = %5383
  %5391 = load i32, ptr %4, align 4, !tbaa !5
  %5392 = load i32, ptr %12, align 4, !tbaa !5
  %5393 = add nsw i32 %5392, -1
  %5394 = icmp slt i32 %5391, %5393
  br i1 %5394, label %5417, label %5395

5395:                                             ; preds = %5390
  %5396 = icmp eq i32 %5391, %5393
  br i1 %5396, label %5397, label %5433

5397:                                             ; preds = %5395
  store i32 0, ptr %4, align 4, !tbaa !5
  %5398 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5398, ptr %6, align 4, !tbaa !5
  br i1 %5163, label %5440, label %5399

5399:                                             ; preds = %5397, %5427
  %5400 = phi i64 [ %5431, %5427 ], [ 1, %5397 ]
  %5401 = getelementptr inbounds i32, ptr %4, i64 %5400
  %5402 = load i32, ptr %5401, align 4, !tbaa !5
  %5403 = getelementptr inbounds i32, ptr %12, i64 %5400
  %5404 = load i32, ptr %5403, align 4, !tbaa !5
  %5405 = add nsw i32 %5404, -1
  %5406 = icmp slt i32 %5402, %5405
  br i1 %5406, label %5407, label %5425

5407:                                             ; preds = %5399
  br i1 %5394, label %5417, label %5408

5408:                                             ; preds = %5407
  %5409 = shl i64 %5400, 32
  %5410 = add i64 %5409, -4294967296
  %5411 = ashr exact i64 %5410, 32
  %5412 = getelementptr inbounds i32, ptr %7, i64 %5411
  %5413 = load i32, ptr %5412, align 4, !tbaa !5
  %5414 = getelementptr inbounds i32, ptr %6, i64 %5400
  %5415 = load i32, ptr %5414, align 4, !tbaa !5
  %5416 = add nsw i32 %5415, %5413
  store i32 %5416, ptr %5414, align 4, !tbaa !5
  br label %5435

5417:                                             ; preds = %5390, %5407
  %5418 = phi i32 [ %5402, %5407 ], [ %5391, %5390 ]
  %5419 = phi ptr [ %5401, %5407 ], [ %4, %5390 ]
  %5420 = phi i64 [ %5400, %5407 ], [ 0, %5390 ]
  %5421 = add nsw i32 %5418, 1
  store i32 %5421, ptr %5419, align 4, !tbaa !5
  %5422 = getelementptr inbounds i32, ptr %7, i64 %5420
  %5423 = load i32, ptr %5422, align 4, !tbaa !5
  %5424 = getelementptr inbounds i32, ptr %6, i64 %5420
  br label %5435

5425:                                             ; preds = %5399
  %5426 = icmp eq i32 %5402, %5405
  br i1 %5426, label %5427, label %5433

5427:                                             ; preds = %5425
  store i32 0, ptr %5401, align 4, !tbaa !5
  %5428 = getelementptr inbounds i32, ptr %8, i64 %5400
  %5429 = load i32, ptr %5428, align 4, !tbaa !5
  %5430 = getelementptr inbounds i32, ptr %6, i64 %5400
  store i32 %5429, ptr %5430, align 4, !tbaa !5
  %5431 = add nuw nsw i64 %5400, 1
  %5432 = icmp eq i64 %5431, %5161
  br i1 %5432, label %5440, label %5399, !llvm.loop !202

5433:                                             ; preds = %5395, %5425
  %5434 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5449

5435:                                             ; preds = %5408, %5417
  %5436 = phi ptr [ %5424, %5417 ], [ %5401, %5408 ]
  %5437 = phi i32 [ %5423, %5417 ], [ 1, %5408 ]
  %5438 = load i32, ptr %5436, align 4, !tbaa !5
  %5439 = add nsw i32 %5438, %5437
  store i32 %5439, ptr %5436, align 4, !tbaa !5
  br label %5440

5440:                                             ; preds = %5427, %5435, %5397, %5383
  %5441 = icmp eq i32 %5389, %5
  br i1 %5441, label %5444, label %5305, !llvm.loop !203

5442:                                             ; preds = %4853
  %5443 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5444

5444:                                             ; preds = %5440, %5303, %5148, %5011, %4840, %4703, %4548, %4409, %4236, %4099, %3944, %3807, %3636, %3499, %3344, %3205, %3032, %2895, %2740, %2603, %2430, %2293, %2138, %1998, %1825, %1688, %1533, %1391, %1218, %1081, %926, %789, %616, %480, %326, %190, %5155, %5164, %4859, %4868, %4555, %4564, %4255, %4264, %3951, %3960, %3655, %3664, %3351, %3360, %3051, %3060, %2747, %2756, %2449, %2458, %2145, %2154, %1844, %1853, %1540, %1549, %1237, %1246, %933, %942, %635, %644, %333, %342, %36, %45, %4850, %5442, %4246, %4842, %3646, %4238, %3042, %3638, %2440, %3034, %1835, %2432, %1228, %1827, %626, %1220, %28, %618, %18
  %5445 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %618 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1220 ], [ 0.000000e+00, %626 ], [ 0.000000e+00, %1827 ], [ 0.000000e+00, %1228 ], [ 0.000000e+00, %2432 ], [ 0.000000e+00, %1835 ], [ 0.000000e+00, %3034 ], [ 0.000000e+00, %2440 ], [ 0.000000e+00, %3638 ], [ 0.000000e+00, %3042 ], [ 0.000000e+00, %4238 ], [ 0.000000e+00, %3646 ], [ 0.000000e+00, %4842 ], [ 0.000000e+00, %4246 ], [ 0.000000e+00, %5442 ], [ 0.000000e+00, %4850 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %342 ], [ 0.000000e+00, %333 ], [ 0.000000e+00, %644 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %942 ], [ 0.000000e+00, %933 ], [ 0.000000e+00, %1246 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %1549 ], [ 0.000000e+00, %1540 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %2154 ], [ 0.000000e+00, %2145 ], [ 0.000000e+00, %2458 ], [ 0.000000e+00, %2449 ], [ 0.000000e+00, %2756 ], [ 0.000000e+00, %2747 ], [ 0.000000e+00, %3060 ], [ 0.000000e+00, %3051 ], [ 0.000000e+00, %3360 ], [ 0.000000e+00, %3351 ], [ 0.000000e+00, %3664 ], [ 0.000000e+00, %3655 ], [ 0.000000e+00, %3960 ], [ 0.000000e+00, %3951 ], [ 0.000000e+00, %4264 ], [ 0.000000e+00, %4255 ], [ 0.000000e+00, %4564 ], [ 0.000000e+00, %4555 ], [ 0.000000e+00, %4868 ], [ 0.000000e+00, %4859 ], [ 0.000000e+00, %5164 ], [ 0.000000e+00, %5155 ], [ %141, %190 ], [ 0.000000e+00, %326 ], [ %431, %480 ], [ 0.000000e+00, %616 ], [ %740, %789 ], [ 0.000000e+00, %926 ], [ %1032, %1081 ], [ 0.000000e+00, %1218 ], [ %1342, %1391 ], [ 0.000000e+00, %1533 ], [ %1639, %1688 ], [ 0.000000e+00, %1825 ], [ %1949, %1998 ], [ 0.000000e+00, %2138 ], [ %2244, %2293 ], [ 0.000000e+00, %2430 ], [ %2554, %2603 ], [ 0.000000e+00, %2740 ], [ %2846, %2895 ], [ 0.000000e+00, %3032 ], [ %3156, %3205 ], [ 0.000000e+00, %3344 ], [ %3450, %3499 ], [ 0.000000e+00, %3636 ], [ %3758, %3807 ], [ 0.000000e+00, %3944 ], [ %4050, %4099 ], [ 0.000000e+00, %4236 ], [ %4360, %4409 ], [ 0.000000e+00, %4548 ], [ %4654, %4703 ], [ 0.000000e+00, %4840 ], [ %4962, %5011 ], [ 0.000000e+00, %5148 ], [ %5254, %5303 ], [ 0.000000e+00, %5440 ]
  %5446 = phi i32 [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1220 ], [ 1, %626 ], [ 1, %1827 ], [ 1, %1228 ], [ 1, %2432 ], [ 1, %1835 ], [ 1, %3034 ], [ 1, %2440 ], [ 1, %3638 ], [ 1, %3042 ], [ 1, %4238 ], [ 1, %3646 ], [ 1, %4842 ], [ 1, %4246 ], [ 1, %5442 ], [ 1, %4850 ], [ 1, %45 ], [ 1, %36 ], [ 1, %342 ], [ 1, %333 ], [ 1, %644 ], [ 1, %635 ], [ 1, %942 ], [ 1, %933 ], [ 1, %1246 ], [ 1, %1237 ], [ 1, %1549 ], [ 1, %1540 ], [ 1, %1853 ], [ 1, %1844 ], [ 1, %2154 ], [ 1, %2145 ], [ 1, %2458 ], [ 1, %2449 ], [ 1, %2756 ], [ 1, %2747 ], [ 1, %3060 ], [ 1, %3051 ], [ 1, %3360 ], [ 1, %3351 ], [ 1, %3664 ], [ 1, %3655 ], [ 1, %3960 ], [ 1, %3951 ], [ 1, %4264 ], [ 1, %4255 ], [ 1, %4564 ], [ 1, %4555 ], [ 1, %4868 ], [ 1, %4859 ], [ 1, %5164 ], [ 1, %5155 ], [ %52, %190 ], [ %43, %326 ], [ %349, %480 ], [ %340, %616 ], [ %651, %789 ], [ %642, %926 ], [ %949, %1081 ], [ %940, %1218 ], [ %1253, %1391 ], [ %1244, %1533 ], [ %1556, %1688 ], [ %1547, %1825 ], [ %1860, %1998 ], [ %1851, %2138 ], [ %2161, %2293 ], [ %2152, %2430 ], [ %2465, %2603 ], [ %2456, %2740 ], [ %2763, %2895 ], [ %2754, %3032 ], [ %3067, %3205 ], [ %3058, %3344 ], [ %3367, %3499 ], [ %3358, %3636 ], [ %3671, %3807 ], [ %3662, %3944 ], [ %3967, %4099 ], [ %3958, %4236 ], [ %4271, %4409 ], [ %4262, %4548 ], [ %4571, %4703 ], [ %4562, %4840 ], [ %4875, %5011 ], [ %4866, %5148 ], [ %5171, %5303 ], [ %5162, %5440 ]
  %5447 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5446, ptr noundef nonnull @.str.5) #3
  %5448 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5445, ptr noundef nonnull @.str.6) #3
  br label %5449

5449:                                             ; preds = %5004, %5089, %5141, %5296, %5381, %5433, %4402, %4487, %4541, %4696, %4781, %4833, %3800, %3885, %3937, %4092, %4177, %4229, %3198, %3283, %3337, %3492, %3577, %3629, %2596, %2680, %2733, %2888, %2972, %3025, %1991, %2076, %2131, %2286, %2371, %2423, %1384, %1468, %1526, %1681, %1765, %1818, %782, %866, %919, %1074, %1158, %1211, %183, %267, %319, %473, %557, %609, %5444
  %5450 = phi i32 [ 0, %5444 ], [ -1, %609 ], [ -1, %557 ], [ -1, %473 ], [ -1, %319 ], [ -1, %267 ], [ -1, %183 ], [ -1, %1211 ], [ -1, %1158 ], [ -1, %1074 ], [ -1, %919 ], [ -1, %866 ], [ -1, %782 ], [ -1, %1818 ], [ -1, %1765 ], [ -1, %1681 ], [ -1, %1526 ], [ -1, %1468 ], [ -1, %1384 ], [ -1, %2423 ], [ -1, %2371 ], [ -1, %2286 ], [ -1, %2131 ], [ -1, %2076 ], [ -1, %1991 ], [ -1, %3025 ], [ -1, %2972 ], [ -1, %2888 ], [ -1, %2733 ], [ -1, %2680 ], [ -1, %2596 ], [ -1, %3629 ], [ -1, %3577 ], [ -1, %3492 ], [ -1, %3337 ], [ -1, %3283 ], [ -1, %3198 ], [ -1, %4229 ], [ -1, %4177 ], [ -1, %4092 ], [ -1, %3937 ], [ -1, %3885 ], [ -1, %3800 ], [ -1, %4833 ], [ -1, %4781 ], [ -1, %4696 ], [ -1, %4541 ], [ -1, %4487 ], [ -1, %4402 ], [ -1, %5433 ], [ -1, %5381 ], [ -1, %5296 ], [ -1, %5141 ], [ -1, %5089 ], [ -1, %5004 ]
  ret i32 %5450
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5545 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1232
    i32 104, label %1855
    i32 105, label %2478
    i32 106, label %3085
    i32 107, label %3695
    i32 108, label %4307
    i32 109, label %4925
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5545

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5545

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5545

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !204

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !205

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !206

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i32, ptr %24, i64 %130
  %134 = load i32, ptr %133, align 4, !tbaa !5
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i32 %134, 255
  %138 = sitofp i32 %137 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %136
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !207

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5545, label %55, !llvm.loop !208

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !209

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !210

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !211

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds i32, ptr %24, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !5
  %276 = trunc i32 %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !212

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5545, label %194, !llvm.loop !213

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5545

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5545

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !214

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !215

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !216

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i32, ptr %24, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !5
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = trunc i32 %431 to i8
  %434 = add i8 %432, %433
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !217

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5545, label %354, !llvm.loop !218

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !219

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !220

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !221

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds i32, ptr %24, i64 %564
  %566 = load i32, ptr %565, align 4, !tbaa !5
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = trunc i32 %566 to i8
  %569 = add i8 %567, %568
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !222

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5545, label %486, !llvm.loop !223

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %625
  %632 = load i32, ptr %627, align 4, !tbaa !5
  %633 = tail call i32 @llvm.abs.i32(i32 %632, i1 true)
  store i32 %633, ptr %629, align 4, !tbaa !5
  br label %5545

634:                                              ; preds = %625
  switch i32 %1, label %1230 [
    i32 1, label %635
    i32 0, label %938
  ]

635:                                              ; preds = %634
  %636 = getelementptr inbounds i32, ptr %3, i64 %19
  %637 = load i32, ptr %636, align 4, !tbaa !5
  %638 = icmp eq i32 %637, 0
  %639 = icmp sgt i32 %5, 0
  br i1 %638, label %649, label %640

640:                                              ; preds = %635
  br i1 %639, label %641, label %5545

641:                                              ; preds = %640
  %642 = icmp sgt i32 %13, 1
  %643 = icmp sgt i32 %13, 0
  %644 = add i32 %13, -2
  %645 = zext i32 %644 to i64
  %646 = zext i32 %13 to i64
  %647 = add nuw i32 %5, 1
  %648 = icmp eq i32 %13, 1
  br label %796

649:                                              ; preds = %635
  br i1 %639, label %650, label %5545

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %658

658:                                              ; preds = %650, %794
  %659 = phi i32 [ 0, %650 ], [ %746, %794 ]
  %660 = phi double [ 0.000000e+00, %650 ], [ %745, %794 ]
  %661 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %651, label %662, label %731

662:                                              ; preds = %658, %721
  %663 = phi i32 [ %730, %721 ], [ 0, %658 ]
  %664 = phi i64 [ %672, %721 ], [ %655, %658 ]
  %665 = phi i64 [ %729, %721 ], [ %654, %658 ]
  %666 = phi i32 [ %727, %721 ], [ %661, %658 ]
  %667 = sub i32 %653, %663
  %668 = tail call i32 @llvm.smin.i32(i32 %667, i32 0)
  %669 = sub i32 %667, %668
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 1
  %672 = add nsw i64 %664, -1
  %673 = icmp ult i32 %669, 31
  br i1 %673, label %709, label %674

674:                                              ; preds = %662
  %675 = and i64 %671, 8589934560
  %676 = sub i64 %665, %675
  br label %677

677:                                              ; preds = %677, %674
  %678 = phi i64 [ 0, %674 ], [ %701, %677 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %697, %677 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %698, %677 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %699, %677 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %700, %677 ]
  %683 = sub i64 %665, %678
  %684 = getelementptr inbounds i32, ptr %9, i64 %683
  %685 = getelementptr inbounds i32, ptr %684, i64 -7
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %684, i64 -15
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %684, i64 -23
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %684, i64 -31
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = mul <8 x i32> %687, %679
  %698 = mul <8 x i32> %690, %680
  %699 = mul <8 x i32> %693, %681
  %700 = mul <8 x i32> %696, %682
  %701 = add nuw i64 %678, 32
  %702 = icmp eq i64 %701, %675
  br i1 %702, label %703, label %677, !llvm.loop !224

703:                                              ; preds = %677
  %704 = mul <8 x i32> %698, %697
  %705 = mul <8 x i32> %699, %704
  %706 = mul <8 x i32> %700, %705
  %707 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %706)
  %708 = icmp eq i64 %671, %675
  br i1 %708, label %721, label %709

709:                                              ; preds = %662, %703
  %710 = phi i64 [ %665, %662 ], [ %676, %703 ]
  %711 = phi i32 [ 1, %662 ], [ %707, %703 ]
  br label %712

712:                                              ; preds = %709, %712
  %713 = phi i64 [ %718, %712 ], [ %710, %709 ]
  %714 = phi i32 [ %717, %712 ], [ %711, %709 ]
  %715 = getelementptr inbounds i32, ptr %9, i64 %713
  %716 = load i32, ptr %715, align 4, !tbaa !5
  %717 = mul nsw i32 %716, %714
  %718 = add nsw i64 %713, -1
  %719 = trunc i64 %713 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %712, label %721, !llvm.loop !225

721:                                              ; preds = %712, %703
  %722 = phi i32 [ %707, %703 ], [ %717, %712 ]
  %723 = and i64 %672, 4294967295
  %724 = getelementptr inbounds i32, ptr %6, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !5
  %726 = mul nsw i32 %725, %722
  %727 = add nsw i32 %726, %666
  %728 = icmp sgt i64 %664, 2
  %729 = add nsw i64 %665, -1
  %730 = add i32 %663, 1
  br i1 %728, label %662, label %731, !llvm.loop !226

731:                                              ; preds = %721, %658
  %732 = phi i32 [ %661, %658 ], [ %727, %721 ]
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %2, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !18
  %736 = getelementptr inbounds i32, ptr %627, i64 %733
  %737 = load i32, ptr %736, align 4, !tbaa !5
  %738 = load i32, ptr %629, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i32 %737 to double
  %741 = fmul fast double %735, %740
  %742 = tail call fast double @llvm.fabs.f64(double %741)
  %743 = fadd fast double %742, %739
  %744 = fptosi double %743 to i32
  store i32 %744, ptr %629, align 4, !tbaa !5
  %745 = fadd fast double %735, %660
  %746 = add nuw nsw i32 %659, 1
  br i1 %652, label %747, label %794

747:                                              ; preds = %731
  %748 = load i32, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %12, align 4, !tbaa !5
  %750 = add nsw i32 %749, -1
  %751 = icmp slt i32 %748, %750
  br i1 %751, label %771, label %752

752:                                              ; preds = %747
  %753 = icmp eq i32 %748, %750
  br i1 %753, label %754, label %787

754:                                              ; preds = %752
  store i32 0, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %755, ptr %6, align 4, !tbaa !5
  br i1 %657, label %794, label %756

756:                                              ; preds = %754, %781
  %757 = phi i64 [ %785, %781 ], [ 1, %754 ]
  %758 = getelementptr inbounds i32, ptr %4, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %12, i64 %757
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %759, %762
  br i1 %763, label %764, label %779

764:                                              ; preds = %756
  br i1 %751, label %771, label %765

765:                                              ; preds = %764
  %766 = getelementptr inbounds i32, ptr %7, i64 %757
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %6, i64 %757
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = add nsw i32 %769, %767
  store i32 %770, ptr %768, align 4, !tbaa !5
  br label %789

771:                                              ; preds = %747, %764
  %772 = phi i32 [ %759, %764 ], [ %748, %747 ]
  %773 = phi ptr [ %758, %764 ], [ %4, %747 ]
  %774 = phi i64 [ %757, %764 ], [ 0, %747 ]
  %775 = add nsw i32 %772, 1
  store i32 %775, ptr %773, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %7, i64 %774
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %774
  br label %789

779:                                              ; preds = %756
  %780 = icmp eq i32 %759, %762
  br i1 %780, label %781, label %787

781:                                              ; preds = %779
  store i32 0, ptr %758, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %8, i64 %757
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %757
  store i32 %783, ptr %784, align 4, !tbaa !5
  %785 = add nuw nsw i64 %757, 1
  %786 = icmp eq i64 %785, %655
  br i1 %786, label %794, label %756, !llvm.loop !227

787:                                              ; preds = %752, %779
  %788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

789:                                              ; preds = %765, %771
  %790 = phi ptr [ %778, %771 ], [ %758, %765 ]
  %791 = phi i32 [ %777, %771 ], [ 1, %765 ]
  %792 = load i32, ptr %790, align 4, !tbaa !5
  %793 = add nsw i32 %792, %791
  store i32 %793, ptr %790, align 4, !tbaa !5
  br label %794

794:                                              ; preds = %781, %789, %754, %731
  %795 = icmp eq i32 %746, %5
  br i1 %795, label %5545, label %658, !llvm.loop !228

796:                                              ; preds = %641, %936
  %797 = phi i32 [ 0, %641 ], [ %885, %936 ]
  %798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %642, label %799, label %868

799:                                              ; preds = %796, %858
  %800 = phi i32 [ %867, %858 ], [ 0, %796 ]
  %801 = phi i64 [ %809, %858 ], [ %646, %796 ]
  %802 = phi i64 [ %866, %858 ], [ %645, %796 ]
  %803 = phi i32 [ %864, %858 ], [ %798, %796 ]
  %804 = sub i32 %644, %800
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 0)
  %806 = sub i32 %804, %805
  %807 = zext i32 %806 to i64
  %808 = add nuw nsw i64 %807, 1
  %809 = add nsw i64 %801, -1
  %810 = icmp ult i32 %806, 31
  br i1 %810, label %846, label %811

811:                                              ; preds = %799
  %812 = and i64 %808, 8589934560
  %813 = sub i64 %802, %812
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %838, %814 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %834, %814 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %835, %814 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %836, %814 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %837, %814 ]
  %820 = sub i64 %802, %815
  %821 = getelementptr inbounds i32, ptr %11, i64 %820
  %822 = getelementptr inbounds i32, ptr %821, i64 -7
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %821, i64 -15
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %821, i64 -23
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %821, i64 -31
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = mul <8 x i32> %824, %816
  %835 = mul <8 x i32> %827, %817
  %836 = mul <8 x i32> %830, %818
  %837 = mul <8 x i32> %833, %819
  %838 = add nuw i64 %815, 32
  %839 = icmp eq i64 %838, %812
  br i1 %839, label %840, label %814, !llvm.loop !229

840:                                              ; preds = %814
  %841 = mul <8 x i32> %835, %834
  %842 = mul <8 x i32> %836, %841
  %843 = mul <8 x i32> %837, %842
  %844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %843)
  %845 = icmp eq i64 %808, %812
  br i1 %845, label %858, label %846

846:                                              ; preds = %799, %840
  %847 = phi i64 [ %802, %799 ], [ %813, %840 ]
  %848 = phi i32 [ 1, %799 ], [ %844, %840 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %855, %849 ], [ %847, %846 ]
  %851 = phi i32 [ %854, %849 ], [ %848, %846 ]
  %852 = getelementptr inbounds i32, ptr %11, i64 %850
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %851
  %855 = add nsw i64 %850, -1
  %856 = trunc i64 %850 to i32
  %857 = icmp sgt i32 %856, 0
  br i1 %857, label %849, label %858, !llvm.loop !230

858:                                              ; preds = %849, %840
  %859 = phi i32 [ %844, %840 ], [ %854, %849 ]
  %860 = and i64 %809, 4294967295
  %861 = getelementptr inbounds i32, ptr %6, i64 %860
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = mul nsw i32 %862, %859
  %864 = add nsw i32 %863, %803
  %865 = icmp sgt i64 %801, 2
  %866 = add nsw i64 %802, -1
  %867 = add i32 %800, 1
  br i1 %865, label %799, label %868, !llvm.loop !231

868:                                              ; preds = %858, %796
  %869 = phi i32 [ %798, %796 ], [ %864, %858 ]
  %870 = icmp slt i32 %869, %5
  br i1 %870, label %873, label %871

871:                                              ; preds = %868
  %872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

873:                                              ; preds = %868
  %874 = sext i32 %869 to i64
  %875 = getelementptr inbounds i32, ptr %627, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !5
  %877 = load i32, ptr %629, align 4, !tbaa !5
  %878 = sitofp i32 %877 to double
  %879 = sitofp i32 %876 to double
  %880 = icmp slt i32 %876, 0
  %881 = fneg fast double %879
  %882 = select fast i1 %880, double %881, double %879
  %883 = fadd fast double %882, %878
  %884 = fptosi double %883 to i32
  store i32 %884, ptr %629, align 4, !tbaa !5
  %885 = add nuw nsw i32 %797, 1
  br i1 %643, label %886, label %936

886:                                              ; preds = %873
  %887 = load i32, ptr %4, align 4, !tbaa !5
  %888 = load i32, ptr %12, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %887, %889
  br i1 %890, label %913, label %891

891:                                              ; preds = %886
  %892 = icmp eq i32 %887, %889
  br i1 %892, label %893, label %929

893:                                              ; preds = %891
  store i32 0, ptr %4, align 4, !tbaa !5
  %894 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %894, ptr %6, align 4, !tbaa !5
  br i1 %648, label %936, label %895

895:                                              ; preds = %893, %923
  %896 = phi i64 [ %927, %923 ], [ 1, %893 ]
  %897 = getelementptr inbounds i32, ptr %4, i64 %896
  %898 = load i32, ptr %897, align 4, !tbaa !5
  %899 = getelementptr inbounds i32, ptr %12, i64 %896
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = add nsw i32 %900, -1
  %902 = icmp slt i32 %898, %901
  br i1 %902, label %903, label %921

903:                                              ; preds = %895
  br i1 %890, label %913, label %904

904:                                              ; preds = %903
  %905 = shl i64 %896, 32
  %906 = add i64 %905, -4294967296
  %907 = ashr exact i64 %906, 32
  %908 = getelementptr inbounds i32, ptr %7, i64 %907
  %909 = load i32, ptr %908, align 4, !tbaa !5
  %910 = getelementptr inbounds i32, ptr %6, i64 %896
  %911 = load i32, ptr %910, align 4, !tbaa !5
  %912 = add nsw i32 %911, %909
  store i32 %912, ptr %910, align 4, !tbaa !5
  br label %931

913:                                              ; preds = %886, %903
  %914 = phi i32 [ %898, %903 ], [ %887, %886 ]
  %915 = phi ptr [ %897, %903 ], [ %4, %886 ]
  %916 = phi i64 [ %896, %903 ], [ 0, %886 ]
  %917 = add nsw i32 %914, 1
  store i32 %917, ptr %915, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %7, i64 %916
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %916
  br label %931

921:                                              ; preds = %895
  %922 = icmp eq i32 %898, %901
  br i1 %922, label %923, label %929

923:                                              ; preds = %921
  store i32 0, ptr %897, align 4, !tbaa !5
  %924 = getelementptr inbounds i32, ptr %8, i64 %896
  %925 = load i32, ptr %924, align 4, !tbaa !5
  %926 = getelementptr inbounds i32, ptr %6, i64 %896
  store i32 %925, ptr %926, align 4, !tbaa !5
  %927 = add nuw nsw i64 %896, 1
  %928 = icmp eq i64 %927, %646
  br i1 %928, label %936, label %895, !llvm.loop !232

929:                                              ; preds = %891, %921
  %930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

931:                                              ; preds = %904, %913
  %932 = phi ptr [ %920, %913 ], [ %897, %904 ]
  %933 = phi i32 [ %919, %913 ], [ 1, %904 ]
  %934 = load i32, ptr %932, align 4, !tbaa !5
  %935 = add nsw i32 %934, %933
  store i32 %935, ptr %932, align 4, !tbaa !5
  br label %936

936:                                              ; preds = %923, %931, %893, %873
  %937 = icmp eq i32 %885, %5
  br i1 %937, label %5545, label %796, !llvm.loop !233

938:                                              ; preds = %634
  %939 = getelementptr inbounds i32, ptr %3, i64 %19
  %940 = load i32, ptr %939, align 4, !tbaa !5
  %941 = icmp eq i32 %940, 0
  %942 = icmp sgt i32 %5, 0
  br i1 %941, label %952, label %943

943:                                              ; preds = %938
  br i1 %942, label %944, label %5545

944:                                              ; preds = %943
  %945 = icmp sgt i32 %13, 1
  %946 = icmp sgt i32 %13, 0
  %947 = add i32 %13, -2
  %948 = zext i32 %947 to i64
  %949 = zext i32 %13 to i64
  %950 = add nuw i32 %5, 1
  %951 = icmp eq i32 %13, 1
  br label %1093

952:                                              ; preds = %938
  br i1 %942, label %953, label %5545

953:                                              ; preds = %952
  %954 = icmp sgt i32 %13, 1
  %955 = icmp sgt i32 %13, 0
  %956 = add i32 %13, -2
  %957 = zext i32 %956 to i64
  %958 = zext i32 %13 to i64
  %959 = add nuw i32 %5, 1
  %960 = icmp eq i32 %13, 1
  br label %961

961:                                              ; preds = %953, %1091
  %962 = phi i32 [ 0, %953 ], [ %1043, %1091 ]
  %963 = phi double [ 0.000000e+00, %953 ], [ %1042, %1091 ]
  %964 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %954, label %965, label %1034

965:                                              ; preds = %961, %1024
  %966 = phi i32 [ %1033, %1024 ], [ 0, %961 ]
  %967 = phi i64 [ %975, %1024 ], [ %958, %961 ]
  %968 = phi i64 [ %1032, %1024 ], [ %957, %961 ]
  %969 = phi i32 [ %1030, %1024 ], [ %964, %961 ]
  %970 = sub i32 %956, %966
  %971 = tail call i32 @llvm.smin.i32(i32 %970, i32 0)
  %972 = sub i32 %970, %971
  %973 = zext i32 %972 to i64
  %974 = add nuw nsw i64 %973, 1
  %975 = add nsw i64 %967, -1
  %976 = icmp ult i32 %972, 31
  br i1 %976, label %1012, label %977

977:                                              ; preds = %965
  %978 = and i64 %974, 8589934560
  %979 = sub i64 %968, %978
  br label %980

980:                                              ; preds = %980, %977
  %981 = phi i64 [ 0, %977 ], [ %1004, %980 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1000, %980 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1001, %980 ]
  %984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1002, %980 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1003, %980 ]
  %986 = sub i64 %968, %981
  %987 = getelementptr inbounds i32, ptr %9, i64 %986
  %988 = getelementptr inbounds i32, ptr %987, i64 -7
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %987, i64 -15
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %987, i64 -23
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %987, i64 -31
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = mul <8 x i32> %990, %982
  %1001 = mul <8 x i32> %993, %983
  %1002 = mul <8 x i32> %996, %984
  %1003 = mul <8 x i32> %999, %985
  %1004 = add nuw i64 %981, 32
  %1005 = icmp eq i64 %1004, %978
  br i1 %1005, label %1006, label %980, !llvm.loop !234

1006:                                             ; preds = %980
  %1007 = mul <8 x i32> %1001, %1000
  %1008 = mul <8 x i32> %1002, %1007
  %1009 = mul <8 x i32> %1003, %1008
  %1010 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1009)
  %1011 = icmp eq i64 %974, %978
  br i1 %1011, label %1024, label %1012

1012:                                             ; preds = %965, %1006
  %1013 = phi i64 [ %968, %965 ], [ %979, %1006 ]
  %1014 = phi i32 [ 1, %965 ], [ %1010, %1006 ]
  br label %1015

1015:                                             ; preds = %1012, %1015
  %1016 = phi i64 [ %1021, %1015 ], [ %1013, %1012 ]
  %1017 = phi i32 [ %1020, %1015 ], [ %1014, %1012 ]
  %1018 = getelementptr inbounds i32, ptr %9, i64 %1016
  %1019 = load i32, ptr %1018, align 4, !tbaa !5
  %1020 = mul nsw i32 %1019, %1017
  %1021 = add nsw i64 %1016, -1
  %1022 = trunc i64 %1016 to i32
  %1023 = icmp sgt i32 %1022, 0
  br i1 %1023, label %1015, label %1024, !llvm.loop !235

1024:                                             ; preds = %1015, %1006
  %1025 = phi i32 [ %1010, %1006 ], [ %1020, %1015 ]
  %1026 = and i64 %975, 4294967295
  %1027 = getelementptr inbounds i32, ptr %6, i64 %1026
  %1028 = load i32, ptr %1027, align 4, !tbaa !5
  %1029 = mul nsw i32 %1028, %1025
  %1030 = add nsw i32 %1029, %969
  %1031 = icmp sgt i64 %967, 2
  %1032 = add nsw i64 %968, -1
  %1033 = add i32 %966, 1
  br i1 %1031, label %965, label %1034, !llvm.loop !236

1034:                                             ; preds = %1024, %961
  %1035 = phi i32 [ %964, %961 ], [ %1030, %1024 ]
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds i32, ptr %627, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = load i32, ptr %629, align 4, !tbaa !5
  %1040 = tail call i32 @llvm.abs.i32(i32 %1038, i1 true)
  %1041 = add nsw i32 %1039, %1040
  store i32 %1041, ptr %629, align 4, !tbaa !5
  %1042 = fadd fast double %963, 1.000000e+00
  %1043 = add nuw nsw i32 %962, 1
  br i1 %955, label %1044, label %1091

1044:                                             ; preds = %1034
  %1045 = load i32, ptr %4, align 4, !tbaa !5
  %1046 = load i32, ptr %12, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, -1
  %1048 = icmp slt i32 %1045, %1047
  br i1 %1048, label %1068, label %1049

1049:                                             ; preds = %1044
  %1050 = icmp eq i32 %1045, %1047
  br i1 %1050, label %1051, label %1084

1051:                                             ; preds = %1049
  store i32 0, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1052, ptr %6, align 4, !tbaa !5
  br i1 %960, label %1091, label %1053

1053:                                             ; preds = %1051, %1078
  %1054 = phi i64 [ %1082, %1078 ], [ 1, %1051 ]
  %1055 = getelementptr inbounds i32, ptr %4, i64 %1054
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = getelementptr inbounds i32, ptr %12, i64 %1054
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = add nsw i32 %1058, -1
  %1060 = icmp slt i32 %1056, %1059
  br i1 %1060, label %1061, label %1076

1061:                                             ; preds = %1053
  br i1 %1048, label %1068, label %1062

1062:                                             ; preds = %1061
  %1063 = getelementptr inbounds i32, ptr %7, i64 %1054
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %6, i64 %1054
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = add nsw i32 %1066, %1064
  store i32 %1067, ptr %1065, align 4, !tbaa !5
  br label %1086

1068:                                             ; preds = %1044, %1061
  %1069 = phi i32 [ %1056, %1061 ], [ %1045, %1044 ]
  %1070 = phi ptr [ %1055, %1061 ], [ %4, %1044 ]
  %1071 = phi i64 [ %1054, %1061 ], [ 0, %1044 ]
  %1072 = add nsw i32 %1069, 1
  store i32 %1072, ptr %1070, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %6, i64 %1071
  br label %1086

1076:                                             ; preds = %1053
  %1077 = icmp eq i32 %1056, %1059
  br i1 %1077, label %1078, label %1084

1078:                                             ; preds = %1076
  store i32 0, ptr %1055, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %8, i64 %1054
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1054
  store i32 %1080, ptr %1081, align 4, !tbaa !5
  %1082 = add nuw nsw i64 %1054, 1
  %1083 = icmp eq i64 %1082, %958
  br i1 %1083, label %1091, label %1053, !llvm.loop !237

1084:                                             ; preds = %1049, %1076
  %1085 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1086:                                             ; preds = %1062, %1068
  %1087 = phi ptr [ %1075, %1068 ], [ %1055, %1062 ]
  %1088 = phi i32 [ %1074, %1068 ], [ 1, %1062 ]
  %1089 = load i32, ptr %1087, align 4, !tbaa !5
  %1090 = add nsw i32 %1089, %1088
  store i32 %1090, ptr %1087, align 4, !tbaa !5
  br label %1091

1091:                                             ; preds = %1078, %1086, %1051, %1034
  %1092 = icmp eq i32 %1043, %5
  br i1 %1092, label %5545, label %961, !llvm.loop !238

1093:                                             ; preds = %944, %1228
  %1094 = phi i32 [ 0, %944 ], [ %1177, %1228 ]
  %1095 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1096, label %1165

1096:                                             ; preds = %1093, %1155
  %1097 = phi i32 [ %1164, %1155 ], [ 0, %1093 ]
  %1098 = phi i64 [ %1106, %1155 ], [ %949, %1093 ]
  %1099 = phi i64 [ %1163, %1155 ], [ %948, %1093 ]
  %1100 = phi i32 [ %1161, %1155 ], [ %1095, %1093 ]
  %1101 = sub i32 %947, %1097
  %1102 = tail call i32 @llvm.smin.i32(i32 %1101, i32 0)
  %1103 = sub i32 %1101, %1102
  %1104 = zext i32 %1103 to i64
  %1105 = add nuw nsw i64 %1104, 1
  %1106 = add nsw i64 %1098, -1
  %1107 = icmp ult i32 %1103, 31
  br i1 %1107, label %1143, label %1108

1108:                                             ; preds = %1096
  %1109 = and i64 %1105, 8589934560
  %1110 = sub i64 %1099, %1109
  br label %1111

1111:                                             ; preds = %1111, %1108
  %1112 = phi i64 [ 0, %1108 ], [ %1135, %1111 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1131, %1111 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1132, %1111 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1133, %1111 ]
  %1116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1134, %1111 ]
  %1117 = sub i64 %1099, %1112
  %1118 = getelementptr inbounds i32, ptr %11, i64 %1117
  %1119 = getelementptr inbounds i32, ptr %1118, i64 -7
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1118, i64 -15
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = getelementptr inbounds i32, ptr %1118, i64 -23
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1118, i64 -31
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = mul <8 x i32> %1121, %1113
  %1132 = mul <8 x i32> %1124, %1114
  %1133 = mul <8 x i32> %1127, %1115
  %1134 = mul <8 x i32> %1130, %1116
  %1135 = add nuw i64 %1112, 32
  %1136 = icmp eq i64 %1135, %1109
  br i1 %1136, label %1137, label %1111, !llvm.loop !239

1137:                                             ; preds = %1111
  %1138 = mul <8 x i32> %1132, %1131
  %1139 = mul <8 x i32> %1133, %1138
  %1140 = mul <8 x i32> %1134, %1139
  %1141 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1140)
  %1142 = icmp eq i64 %1105, %1109
  br i1 %1142, label %1155, label %1143

1143:                                             ; preds = %1096, %1137
  %1144 = phi i64 [ %1099, %1096 ], [ %1110, %1137 ]
  %1145 = phi i32 [ 1, %1096 ], [ %1141, %1137 ]
  br label %1146

1146:                                             ; preds = %1143, %1146
  %1147 = phi i64 [ %1152, %1146 ], [ %1144, %1143 ]
  %1148 = phi i32 [ %1151, %1146 ], [ %1145, %1143 ]
  %1149 = getelementptr inbounds i32, ptr %11, i64 %1147
  %1150 = load i32, ptr %1149, align 4, !tbaa !5
  %1151 = mul nsw i32 %1150, %1148
  %1152 = add nsw i64 %1147, -1
  %1153 = trunc i64 %1147 to i32
  %1154 = icmp sgt i32 %1153, 0
  br i1 %1154, label %1146, label %1155, !llvm.loop !240

1155:                                             ; preds = %1146, %1137
  %1156 = phi i32 [ %1141, %1137 ], [ %1151, %1146 ]
  %1157 = and i64 %1106, 4294967295
  %1158 = getelementptr inbounds i32, ptr %6, i64 %1157
  %1159 = load i32, ptr %1158, align 4, !tbaa !5
  %1160 = mul nsw i32 %1159, %1156
  %1161 = add nsw i32 %1160, %1100
  %1162 = icmp sgt i64 %1098, 2
  %1163 = add nsw i64 %1099, -1
  %1164 = add i32 %1097, 1
  br i1 %1162, label %1096, label %1165, !llvm.loop !241

1165:                                             ; preds = %1155, %1093
  %1166 = phi i32 [ %1095, %1093 ], [ %1161, %1155 ]
  %1167 = icmp slt i32 %1166, %5
  br i1 %1167, label %1170, label %1168

1168:                                             ; preds = %1165
  %1169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1170:                                             ; preds = %1165
  %1171 = sext i32 %1166 to i64
  %1172 = getelementptr inbounds i32, ptr %627, i64 %1171
  %1173 = load i32, ptr %1172, align 4, !tbaa !5
  %1174 = load i32, ptr %629, align 4, !tbaa !5
  %1175 = tail call i32 @llvm.abs.i32(i32 %1173, i1 true)
  %1176 = add nsw i32 %1174, %1175
  store i32 %1176, ptr %629, align 4, !tbaa !5
  %1177 = add nuw nsw i32 %1094, 1
  br i1 %946, label %1178, label %1228

1178:                                             ; preds = %1170
  %1179 = load i32, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %12, align 4, !tbaa !5
  %1181 = add nsw i32 %1180, -1
  %1182 = icmp slt i32 %1179, %1181
  br i1 %1182, label %1205, label %1183

1183:                                             ; preds = %1178
  %1184 = icmp eq i32 %1179, %1181
  br i1 %1184, label %1185, label %1221

1185:                                             ; preds = %1183
  store i32 0, ptr %4, align 4, !tbaa !5
  %1186 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1186, ptr %6, align 4, !tbaa !5
  br i1 %951, label %1228, label %1187

1187:                                             ; preds = %1185, %1215
  %1188 = phi i64 [ %1219, %1215 ], [ 1, %1185 ]
  %1189 = getelementptr inbounds i32, ptr %4, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %12, i64 %1188
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, -1
  %1194 = icmp slt i32 %1190, %1193
  br i1 %1194, label %1195, label %1213

1195:                                             ; preds = %1187
  br i1 %1182, label %1205, label %1196

1196:                                             ; preds = %1195
  %1197 = shl i64 %1188, 32
  %1198 = add i64 %1197, -4294967296
  %1199 = ashr exact i64 %1198, 32
  %1200 = getelementptr inbounds i32, ptr %7, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %6, i64 %1188
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = add nsw i32 %1203, %1201
  store i32 %1204, ptr %1202, align 4, !tbaa !5
  br label %1223

1205:                                             ; preds = %1178, %1195
  %1206 = phi i32 [ %1190, %1195 ], [ %1179, %1178 ]
  %1207 = phi ptr [ %1189, %1195 ], [ %4, %1178 ]
  %1208 = phi i64 [ %1188, %1195 ], [ 0, %1178 ]
  %1209 = add nsw i32 %1206, 1
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1208
  br label %1223

1213:                                             ; preds = %1187
  %1214 = icmp eq i32 %1190, %1193
  br i1 %1214, label %1215, label %1221

1215:                                             ; preds = %1213
  store i32 0, ptr %1189, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %8, i64 %1188
  %1217 = load i32, ptr %1216, align 4, !tbaa !5
  %1218 = getelementptr inbounds i32, ptr %6, i64 %1188
  store i32 %1217, ptr %1218, align 4, !tbaa !5
  %1219 = add nuw nsw i64 %1188, 1
  %1220 = icmp eq i64 %1219, %949
  br i1 %1220, label %1228, label %1187, !llvm.loop !242

1221:                                             ; preds = %1183, %1213
  %1222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1223:                                             ; preds = %1196, %1205
  %1224 = phi ptr [ %1212, %1205 ], [ %1189, %1196 ]
  %1225 = phi i32 [ %1211, %1205 ], [ 1, %1196 ]
  %1226 = load i32, ptr %1224, align 4, !tbaa !5
  %1227 = add nsw i32 %1226, %1225
  store i32 %1227, ptr %1224, align 4, !tbaa !5
  br label %1228

1228:                                             ; preds = %1215, %1223, %1185, %1170
  %1229 = icmp eq i32 %1177, %5
  br i1 %1229, label %5545, label %1093, !llvm.loop !243

1230:                                             ; preds = %634
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1232:                                             ; preds = %18
  %1233 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1234 = load ptr, ptr %1233, align 8, !tbaa !9
  %1235 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1236 = load ptr, ptr %1235, align 8, !tbaa !9
  store i8 0, ptr %1236, align 1, !tbaa !11
  %1237 = icmp eq i32 %13, 0
  br i1 %1237, label %1238, label %1245

1238:                                             ; preds = %1232
  %1239 = load i32, ptr %1234, align 4, !tbaa !5
  %1240 = and i32 %1239, 128
  %1241 = icmp eq i32 %1240, 0
  %1242 = sub i32 0, %1239
  %1243 = select i1 %1241, i32 %1239, i32 %1242
  %1244 = trunc i32 %1243 to i8
  store i8 %1244, ptr %1236, align 1, !tbaa !11
  br label %5545

1245:                                             ; preds = %1232
  switch i32 %1, label %1853 [
    i32 1, label %1246
    i32 0, label %1553
  ]

1246:                                             ; preds = %1245
  %1247 = getelementptr inbounds i32, ptr %3, i64 %19
  %1248 = load i32, ptr %1247, align 4, !tbaa !5
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp sgt i32 %5, 0
  br i1 %1249, label %1260, label %1251

1251:                                             ; preds = %1246
  br i1 %1250, label %1252, label %5545

1252:                                             ; preds = %1251
  %1253 = icmp sgt i32 %13, 1
  %1254 = icmp sgt i32 %13, 0
  %1255 = add i32 %13, -2
  %1256 = zext i32 %1255 to i64
  %1257 = zext i32 %13 to i64
  %1258 = add nuw i32 %5, 1
  %1259 = icmp eq i32 %13, 1
  br label %1409

1260:                                             ; preds = %1246
  br i1 %1250, label %1261, label %5545

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1269

1269:                                             ; preds = %1261, %1407
  %1270 = phi i32 [ 0, %1261 ], [ %1359, %1407 ]
  %1271 = phi double [ 0.000000e+00, %1261 ], [ %1358, %1407 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1262, label %1273, label %1342

1273:                                             ; preds = %1269, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1269 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1266, %1269 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1265, %1269 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1269 ]
  %1278 = sub i32 %1264, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !244

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !245

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !246

1342:                                             ; preds = %1332, %1269
  %1343 = phi i32 [ %1272, %1269 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds i32, ptr %1234, i64 %1344
  %1348 = load i32, ptr %1347, align 4, !tbaa !5
  %1349 = load i8, ptr %1236, align 1, !tbaa !11
  %1350 = sitofp i8 %1349 to double
  %1351 = shl i32 %1348, 24
  %1352 = ashr exact i32 %1351, 24
  %1353 = sitofp i32 %1352 to double
  %1354 = fmul fast double %1346, %1353
  %1355 = tail call fast double @llvm.fabs.f64(double %1354)
  %1356 = fadd fast double %1355, %1350
  %1357 = fptosi double %1356 to i8
  store i8 %1357, ptr %1236, align 1, !tbaa !11
  %1358 = fadd fast double %1346, %1271
  %1359 = add nuw nsw i32 %1270, 1
  br i1 %1263, label %1360, label %1407

1360:                                             ; preds = %1342
  %1361 = load i32, ptr %4, align 4, !tbaa !5
  %1362 = load i32, ptr %12, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, -1
  %1364 = icmp slt i32 %1361, %1363
  br i1 %1364, label %1384, label %1365

1365:                                             ; preds = %1360
  %1366 = icmp eq i32 %1361, %1363
  br i1 %1366, label %1367, label %1400

1367:                                             ; preds = %1365
  store i32 0, ptr %4, align 4, !tbaa !5
  %1368 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1368, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1407, label %1369

1369:                                             ; preds = %1367, %1394
  %1370 = phi i64 [ %1398, %1394 ], [ 1, %1367 ]
  %1371 = getelementptr inbounds i32, ptr %4, i64 %1370
  %1372 = load i32, ptr %1371, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %12, i64 %1370
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = add nsw i32 %1374, -1
  %1376 = icmp slt i32 %1372, %1375
  br i1 %1376, label %1377, label %1392

1377:                                             ; preds = %1369
  br i1 %1364, label %1384, label %1378

1378:                                             ; preds = %1377
  %1379 = getelementptr inbounds i32, ptr %7, i64 %1370
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1370
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = add nsw i32 %1382, %1380
  store i32 %1383, ptr %1381, align 4, !tbaa !5
  br label %1402

1384:                                             ; preds = %1360, %1377
  %1385 = phi i32 [ %1372, %1377 ], [ %1361, %1360 ]
  %1386 = phi ptr [ %1371, %1377 ], [ %4, %1360 ]
  %1387 = phi i64 [ %1370, %1377 ], [ 0, %1360 ]
  %1388 = add nsw i32 %1385, 1
  store i32 %1388, ptr %1386, align 4, !tbaa !5
  %1389 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1390 = load i32, ptr %1389, align 4, !tbaa !5
  %1391 = getelementptr inbounds i32, ptr %6, i64 %1387
  br label %1402

1392:                                             ; preds = %1369
  %1393 = icmp eq i32 %1372, %1375
  br i1 %1393, label %1394, label %1400

1394:                                             ; preds = %1392
  store i32 0, ptr %1371, align 4, !tbaa !5
  %1395 = getelementptr inbounds i32, ptr %8, i64 %1370
  %1396 = load i32, ptr %1395, align 4, !tbaa !5
  %1397 = getelementptr inbounds i32, ptr %6, i64 %1370
  store i32 %1396, ptr %1397, align 4, !tbaa !5
  %1398 = add nuw nsw i64 %1370, 1
  %1399 = icmp eq i64 %1398, %1266
  br i1 %1399, label %1407, label %1369, !llvm.loop !247

1400:                                             ; preds = %1365, %1392
  %1401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1402:                                             ; preds = %1378, %1384
  %1403 = phi ptr [ %1391, %1384 ], [ %1371, %1378 ]
  %1404 = phi i32 [ %1390, %1384 ], [ 1, %1378 ]
  %1405 = load i32, ptr %1403, align 4, !tbaa !5
  %1406 = add nsw i32 %1405, %1404
  store i32 %1406, ptr %1403, align 4, !tbaa !5
  br label %1407

1407:                                             ; preds = %1394, %1402, %1367, %1342
  %1408 = icmp eq i32 %1359, %5
  br i1 %1408, label %5545, label %1269, !llvm.loop !248

1409:                                             ; preds = %1252, %1551
  %1410 = phi i32 [ 0, %1252 ], [ %1500, %1551 ]
  %1411 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1412, label %1481

1412:                                             ; preds = %1409, %1471
  %1413 = phi i32 [ %1480, %1471 ], [ 0, %1409 ]
  %1414 = phi i64 [ %1422, %1471 ], [ %1257, %1409 ]
  %1415 = phi i64 [ %1479, %1471 ], [ %1256, %1409 ]
  %1416 = phi i32 [ %1477, %1471 ], [ %1411, %1409 ]
  %1417 = sub i32 %1255, %1413
  %1418 = tail call i32 @llvm.smin.i32(i32 %1417, i32 0)
  %1419 = sub i32 %1417, %1418
  %1420 = zext i32 %1419 to i64
  %1421 = add nuw nsw i64 %1420, 1
  %1422 = add nsw i64 %1414, -1
  %1423 = icmp ult i32 %1419, 31
  br i1 %1423, label %1459, label %1424

1424:                                             ; preds = %1412
  %1425 = and i64 %1421, 8589934560
  %1426 = sub i64 %1415, %1425
  br label %1427

1427:                                             ; preds = %1427, %1424
  %1428 = phi i64 [ 0, %1424 ], [ %1451, %1427 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1447, %1427 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1448, %1427 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1449, %1427 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1450, %1427 ]
  %1433 = sub i64 %1415, %1428
  %1434 = getelementptr inbounds i32, ptr %11, i64 %1433
  %1435 = getelementptr inbounds i32, ptr %1434, i64 -7
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1434, i64 -15
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1434, i64 -23
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1434, i64 -31
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = mul <8 x i32> %1437, %1429
  %1448 = mul <8 x i32> %1440, %1430
  %1449 = mul <8 x i32> %1443, %1431
  %1450 = mul <8 x i32> %1446, %1432
  %1451 = add nuw i64 %1428, 32
  %1452 = icmp eq i64 %1451, %1425
  br i1 %1452, label %1453, label %1427, !llvm.loop !249

1453:                                             ; preds = %1427
  %1454 = mul <8 x i32> %1448, %1447
  %1455 = mul <8 x i32> %1449, %1454
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1456)
  %1458 = icmp eq i64 %1421, %1425
  br i1 %1458, label %1471, label %1459

1459:                                             ; preds = %1412, %1453
  %1460 = phi i64 [ %1415, %1412 ], [ %1426, %1453 ]
  %1461 = phi i32 [ 1, %1412 ], [ %1457, %1453 ]
  br label %1462

1462:                                             ; preds = %1459, %1462
  %1463 = phi i64 [ %1468, %1462 ], [ %1460, %1459 ]
  %1464 = phi i32 [ %1467, %1462 ], [ %1461, %1459 ]
  %1465 = getelementptr inbounds i32, ptr %11, i64 %1463
  %1466 = load i32, ptr %1465, align 4, !tbaa !5
  %1467 = mul nsw i32 %1466, %1464
  %1468 = add nsw i64 %1463, -1
  %1469 = trunc i64 %1463 to i32
  %1470 = icmp sgt i32 %1469, 0
  br i1 %1470, label %1462, label %1471, !llvm.loop !250

1471:                                             ; preds = %1462, %1453
  %1472 = phi i32 [ %1457, %1453 ], [ %1467, %1462 ]
  %1473 = and i64 %1422, 4294967295
  %1474 = getelementptr inbounds i32, ptr %6, i64 %1473
  %1475 = load i32, ptr %1474, align 4, !tbaa !5
  %1476 = mul nsw i32 %1475, %1472
  %1477 = add nsw i32 %1476, %1416
  %1478 = icmp sgt i64 %1414, 2
  %1479 = add nsw i64 %1415, -1
  %1480 = add i32 %1413, 1
  br i1 %1478, label %1412, label %1481, !llvm.loop !251

1481:                                             ; preds = %1471, %1409
  %1482 = phi i32 [ %1411, %1409 ], [ %1477, %1471 ]
  %1483 = icmp slt i32 %1482, %5
  br i1 %1483, label %1486, label %1484

1484:                                             ; preds = %1481
  %1485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1486:                                             ; preds = %1481
  %1487 = sext i32 %1482 to i64
  %1488 = getelementptr inbounds i32, ptr %1234, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !5
  %1490 = load i8, ptr %1236, align 1, !tbaa !11
  %1491 = sitofp i8 %1490 to double
  %1492 = shl i32 %1489, 24
  %1493 = ashr exact i32 %1492, 24
  %1494 = sitofp i32 %1493 to double
  %1495 = icmp slt i32 %1492, 0
  %1496 = fneg fast double %1494
  %1497 = select fast i1 %1495, double %1496, double %1494
  %1498 = fadd fast double %1497, %1491
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1236, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1410, 1
  br i1 %1254, label %1501, label %1551

1501:                                             ; preds = %1486
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1257
  br i1 %1543, label %1551, label %1510, !llvm.loop !252

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1486
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5545, label %1409, !llvm.loop !253

1553:                                             ; preds = %1245
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5545

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1712

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5545

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1710
  %1577 = phi i32 [ 0, %1568 ], [ %1662, %1710 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1661, %1710 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !254

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !255

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !256

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i32, ptr %1234, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = load i8, ptr %1236, align 1, !tbaa !11
  %1655 = and i32 %1653, 128
  %1656 = icmp eq i32 %1655, 0
  %1657 = sub i32 0, %1653
  %1658 = select i1 %1656, i32 %1653, i32 %1657
  %1659 = trunc i32 %1658 to i8
  %1660 = add i8 %1654, %1659
  store i8 %1660, ptr %1236, align 1, !tbaa !11
  %1661 = fadd fast double %1578, 1.000000e+00
  %1662 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1663, label %1710

1663:                                             ; preds = %1649
  %1664 = load i32, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %12, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !5
  %1671 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1671, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !5
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !5
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !5
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !5
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1573
  br i1 %1702, label %1710, label %1672, !llvm.loop !257

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !5
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !5
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1649
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5545, label %1576, !llvm.loop !258

1712:                                             ; preds = %1559, %1851
  %1713 = phi i32 [ 0, %1559 ], [ %1800, %1851 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1564, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1563, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1562, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !5
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !259

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !5
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !260

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !5
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !261

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds i32, ptr %1234, i64 %1790
  %1792 = load i32, ptr %1791, align 4, !tbaa !5
  %1793 = load i8, ptr %1236, align 1, !tbaa !11
  %1794 = and i32 %1792, 128
  %1795 = icmp eq i32 %1794, 0
  %1796 = sub i32 0, %1792
  %1797 = select i1 %1795, i32 %1792, i32 %1796
  %1798 = trunc i32 %1797 to i8
  %1799 = add i8 %1793, %1798
  store i8 %1799, ptr %1236, align 1, !tbaa !11
  %1800 = add nuw nsw i32 %1713, 1
  br i1 %1561, label %1801, label %1851

1801:                                             ; preds = %1789
  %1802 = load i32, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %12, align 4, !tbaa !5
  %1804 = add nsw i32 %1803, -1
  %1805 = icmp slt i32 %1802, %1804
  br i1 %1805, label %1828, label %1806

1806:                                             ; preds = %1801
  %1807 = icmp eq i32 %1802, %1804
  br i1 %1807, label %1808, label %1844

1808:                                             ; preds = %1806
  store i32 0, ptr %4, align 4, !tbaa !5
  %1809 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1809, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1851, label %1810

1810:                                             ; preds = %1808, %1838
  %1811 = phi i64 [ %1842, %1838 ], [ 1, %1808 ]
  %1812 = getelementptr inbounds i32, ptr %4, i64 %1811
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %12, i64 %1811
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = add nsw i32 %1815, -1
  %1817 = icmp slt i32 %1813, %1816
  br i1 %1817, label %1818, label %1836

1818:                                             ; preds = %1810
  br i1 %1805, label %1828, label %1819

1819:                                             ; preds = %1818
  %1820 = shl i64 %1811, 32
  %1821 = add i64 %1820, -4294967296
  %1822 = ashr exact i64 %1821, 32
  %1823 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %6, i64 %1811
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = add nsw i32 %1826, %1824
  store i32 %1827, ptr %1825, align 4, !tbaa !5
  br label %1846

1828:                                             ; preds = %1801, %1818
  %1829 = phi i32 [ %1813, %1818 ], [ %1802, %1801 ]
  %1830 = phi ptr [ %1812, %1818 ], [ %4, %1801 ]
  %1831 = phi i64 [ %1811, %1818 ], [ 0, %1801 ]
  %1832 = add nsw i32 %1829, 1
  store i32 %1832, ptr %1830, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1831
  br label %1846

1836:                                             ; preds = %1810
  %1837 = icmp eq i32 %1813, %1816
  br i1 %1837, label %1838, label %1844

1838:                                             ; preds = %1836
  store i32 0, ptr %1812, align 4, !tbaa !5
  %1839 = getelementptr inbounds i32, ptr %8, i64 %1811
  %1840 = load i32, ptr %1839, align 4, !tbaa !5
  %1841 = getelementptr inbounds i32, ptr %6, i64 %1811
  store i32 %1840, ptr %1841, align 4, !tbaa !5
  %1842 = add nuw nsw i64 %1811, 1
  %1843 = icmp eq i64 %1842, %1564
  br i1 %1843, label %1851, label %1810, !llvm.loop !262

1844:                                             ; preds = %1806, %1836
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1846:                                             ; preds = %1819, %1828
  %1847 = phi ptr [ %1835, %1828 ], [ %1812, %1819 ]
  %1848 = phi i32 [ %1834, %1828 ], [ 1, %1819 ]
  %1849 = load i32, ptr %1847, align 4, !tbaa !5
  %1850 = add nsw i32 %1849, %1848
  store i32 %1850, ptr %1847, align 4, !tbaa !5
  br label %1851

1851:                                             ; preds = %1838, %1846, %1808, %1789
  %1852 = icmp eq i32 %1800, %5
  br i1 %1852, label %5545, label %1712, !llvm.loop !263

1853:                                             ; preds = %1245
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1855:                                             ; preds = %18
  %1856 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !9
  %1858 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1859 = load ptr, ptr %1858, align 8, !tbaa !9
  store i16 0, ptr %1859, align 2, !tbaa !78
  %1860 = icmp eq i32 %13, 0
  br i1 %1860, label %1861, label %1868

1861:                                             ; preds = %1855
  %1862 = load i32, ptr %1857, align 4, !tbaa !5
  %1863 = and i32 %1862, 32768
  %1864 = icmp eq i32 %1863, 0
  %1865 = sub i32 0, %1862
  %1866 = select i1 %1864, i32 %1862, i32 %1865
  %1867 = trunc i32 %1866 to i16
  store i16 %1867, ptr %1859, align 2, !tbaa !78
  br label %5545

1868:                                             ; preds = %1855
  switch i32 %1, label %2476 [
    i32 1, label %1869
    i32 0, label %2176
  ]

1869:                                             ; preds = %1868
  %1870 = getelementptr inbounds i32, ptr %3, i64 %19
  %1871 = load i32, ptr %1870, align 4, !tbaa !5
  %1872 = icmp eq i32 %1871, 0
  %1873 = icmp sgt i32 %5, 0
  br i1 %1872, label %1883, label %1874

1874:                                             ; preds = %1869
  br i1 %1873, label %1875, label %5545

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %2032

1883:                                             ; preds = %1869
  br i1 %1873, label %1884, label %5545

1884:                                             ; preds = %1883
  %1885 = icmp sgt i32 %13, 1
  %1886 = icmp sgt i32 %13, 0
  %1887 = add i32 %13, -2
  %1888 = zext i32 %1887 to i64
  %1889 = zext i32 %13 to i64
  %1890 = add nuw i32 %5, 1
  %1891 = icmp eq i32 %13, 1
  br label %1892

1892:                                             ; preds = %1884, %2030
  %1893 = phi i16 [ 0, %1884 ], [ %1980, %2030 ]
  %1894 = phi i32 [ 0, %1884 ], [ %1982, %2030 ]
  %1895 = phi double [ 0.000000e+00, %1884 ], [ %1981, %2030 ]
  %1896 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1885, label %1897, label %1966

1897:                                             ; preds = %1892, %1956
  %1898 = phi i32 [ %1965, %1956 ], [ 0, %1892 ]
  %1899 = phi i64 [ %1907, %1956 ], [ %1889, %1892 ]
  %1900 = phi i64 [ %1964, %1956 ], [ %1888, %1892 ]
  %1901 = phi i32 [ %1962, %1956 ], [ %1896, %1892 ]
  %1902 = sub i32 %1887, %1898
  %1903 = tail call i32 @llvm.smin.i32(i32 %1902, i32 0)
  %1904 = sub i32 %1902, %1903
  %1905 = zext i32 %1904 to i64
  %1906 = add nuw nsw i64 %1905, 1
  %1907 = add nsw i64 %1899, -1
  %1908 = icmp ult i32 %1904, 31
  br i1 %1908, label %1944, label %1909

1909:                                             ; preds = %1897
  %1910 = and i64 %1906, 8589934560
  %1911 = sub i64 %1900, %1910
  br label %1912

1912:                                             ; preds = %1912, %1909
  %1913 = phi i64 [ 0, %1909 ], [ %1936, %1912 ]
  %1914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1932, %1912 ]
  %1915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1933, %1912 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1934, %1912 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1935, %1912 ]
  %1918 = sub i64 %1900, %1913
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1918
  %1920 = getelementptr inbounds i32, ptr %1919, i64 -7
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = getelementptr inbounds i32, ptr %1919, i64 -15
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = getelementptr inbounds i32, ptr %1919, i64 -23
  %1927 = load <8 x i32>, ptr %1926, align 4, !tbaa !5
  %1928 = shufflevector <8 x i32> %1927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1929 = getelementptr inbounds i32, ptr %1919, i64 -31
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !5
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = mul <8 x i32> %1922, %1914
  %1933 = mul <8 x i32> %1925, %1915
  %1934 = mul <8 x i32> %1928, %1916
  %1935 = mul <8 x i32> %1931, %1917
  %1936 = add nuw i64 %1913, 32
  %1937 = icmp eq i64 %1936, %1910
  br i1 %1937, label %1938, label %1912, !llvm.loop !264

1938:                                             ; preds = %1912
  %1939 = mul <8 x i32> %1933, %1932
  %1940 = mul <8 x i32> %1934, %1939
  %1941 = mul <8 x i32> %1935, %1940
  %1942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1941)
  %1943 = icmp eq i64 %1906, %1910
  br i1 %1943, label %1956, label %1944

1944:                                             ; preds = %1897, %1938
  %1945 = phi i64 [ %1900, %1897 ], [ %1911, %1938 ]
  %1946 = phi i32 [ 1, %1897 ], [ %1942, %1938 ]
  br label %1947

1947:                                             ; preds = %1944, %1947
  %1948 = phi i64 [ %1953, %1947 ], [ %1945, %1944 ]
  %1949 = phi i32 [ %1952, %1947 ], [ %1946, %1944 ]
  %1950 = getelementptr inbounds i32, ptr %9, i64 %1948
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1949
  %1953 = add nsw i64 %1948, -1
  %1954 = trunc i64 %1948 to i32
  %1955 = icmp sgt i32 %1954, 0
  br i1 %1955, label %1947, label %1956, !llvm.loop !265

1956:                                             ; preds = %1947, %1938
  %1957 = phi i32 [ %1942, %1938 ], [ %1952, %1947 ]
  %1958 = and i64 %1907, 4294967295
  %1959 = getelementptr inbounds i32, ptr %6, i64 %1958
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = mul nsw i32 %1960, %1957
  %1962 = add nsw i32 %1961, %1901
  %1963 = icmp sgt i64 %1899, 2
  %1964 = add nsw i64 %1900, -1
  %1965 = add i32 %1898, 1
  br i1 %1963, label %1897, label %1966, !llvm.loop !266

1966:                                             ; preds = %1956, %1892
  %1967 = phi i32 [ %1896, %1892 ], [ %1962, %1956 ]
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds double, ptr %2, i64 %1968
  %1970 = load double, ptr %1969, align 8, !tbaa !18
  %1971 = getelementptr inbounds i32, ptr %1857, i64 %1968
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = sitofp i16 %1893 to double
  %1974 = shl i32 %1972, 16
  %1975 = ashr exact i32 %1974, 16
  %1976 = sitofp i32 %1975 to double
  %1977 = fmul fast double %1970, %1976
  %1978 = tail call fast double @llvm.fabs.f64(double %1977)
  %1979 = fadd fast double %1978, %1973
  %1980 = fptosi double %1979 to i16
  %1981 = fadd fast double %1970, %1895
  %1982 = add nuw nsw i32 %1894, 1
  br i1 %1886, label %1983, label %2030

1983:                                             ; preds = %1966
  %1984 = load i32, ptr %4, align 4, !tbaa !5
  %1985 = load i32, ptr %12, align 4, !tbaa !5
  %1986 = add nsw i32 %1985, -1
  %1987 = icmp slt i32 %1984, %1986
  br i1 %1987, label %2007, label %1988

1988:                                             ; preds = %1983
  %1989 = icmp eq i32 %1984, %1986
  br i1 %1989, label %1990, label %2023

1990:                                             ; preds = %1988
  store i32 0, ptr %4, align 4, !tbaa !5
  %1991 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1991, ptr %6, align 4, !tbaa !5
  br i1 %1891, label %2030, label %1992

1992:                                             ; preds = %1990, %2017
  %1993 = phi i64 [ %2021, %2017 ], [ 1, %1990 ]
  %1994 = getelementptr inbounds i32, ptr %4, i64 %1993
  %1995 = load i32, ptr %1994, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %12, i64 %1993
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = add nsw i32 %1997, -1
  %1999 = icmp slt i32 %1995, %1998
  br i1 %1999, label %2000, label %2015

2000:                                             ; preds = %1992
  br i1 %1987, label %2007, label %2001

2001:                                             ; preds = %2000
  %2002 = getelementptr inbounds i32, ptr %7, i64 %1993
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %1993
  %2005 = load i32, ptr %2004, align 4, !tbaa !5
  %2006 = add nsw i32 %2005, %2003
  store i32 %2006, ptr %2004, align 4, !tbaa !5
  br label %2025

2007:                                             ; preds = %1983, %2000
  %2008 = phi i32 [ %1995, %2000 ], [ %1984, %1983 ]
  %2009 = phi ptr [ %1994, %2000 ], [ %4, %1983 ]
  %2010 = phi i64 [ %1993, %2000 ], [ 0, %1983 ]
  %2011 = add nsw i32 %2008, 1
  store i32 %2011, ptr %2009, align 4, !tbaa !5
  %2012 = getelementptr inbounds i32, ptr %7, i64 %2010
  %2013 = load i32, ptr %2012, align 4, !tbaa !5
  %2014 = getelementptr inbounds i32, ptr %6, i64 %2010
  br label %2025

2015:                                             ; preds = %1992
  %2016 = icmp eq i32 %1995, %1998
  br i1 %2016, label %2017, label %2023

2017:                                             ; preds = %2015
  store i32 0, ptr %1994, align 4, !tbaa !5
  %2018 = getelementptr inbounds i32, ptr %8, i64 %1993
  %2019 = load i32, ptr %2018, align 4, !tbaa !5
  %2020 = getelementptr inbounds i32, ptr %6, i64 %1993
  store i32 %2019, ptr %2020, align 4, !tbaa !5
  %2021 = add nuw nsw i64 %1993, 1
  %2022 = icmp eq i64 %2021, %1889
  br i1 %2022, label %2030, label %1992, !llvm.loop !267

2023:                                             ; preds = %1988, %2015
  store i16 %1980, ptr %1859, align 2, !tbaa !78
  %2024 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2025:                                             ; preds = %2001, %2007
  %2026 = phi ptr [ %2014, %2007 ], [ %1994, %2001 ]
  %2027 = phi i32 [ %2013, %2007 ], [ 1, %2001 ]
  %2028 = load i32, ptr %2026, align 4, !tbaa !5
  %2029 = add nsw i32 %2028, %2027
  store i32 %2029, ptr %2026, align 4, !tbaa !5
  br label %2030

2030:                                             ; preds = %2017, %2025, %1990, %1966
  %2031 = icmp eq i32 %1982, %5
  br i1 %2031, label %5537, label %1892, !llvm.loop !268

2032:                                             ; preds = %1875, %2174
  %2033 = phi i16 [ 0, %1875 ], [ %2122, %2174 ]
  %2034 = phi i32 [ 0, %1875 ], [ %2123, %2174 ]
  %2035 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %2036, label %2105

2036:                                             ; preds = %2032, %2095
  %2037 = phi i32 [ %2104, %2095 ], [ 0, %2032 ]
  %2038 = phi i64 [ %2046, %2095 ], [ %1880, %2032 ]
  %2039 = phi i64 [ %2103, %2095 ], [ %1879, %2032 ]
  %2040 = phi i32 [ %2101, %2095 ], [ %2035, %2032 ]
  %2041 = sub i32 %1878, %2037
  %2042 = tail call i32 @llvm.smin.i32(i32 %2041, i32 0)
  %2043 = sub i32 %2041, %2042
  %2044 = zext i32 %2043 to i64
  %2045 = add nuw nsw i64 %2044, 1
  %2046 = add nsw i64 %2038, -1
  %2047 = icmp ult i32 %2043, 31
  br i1 %2047, label %2083, label %2048

2048:                                             ; preds = %2036
  %2049 = and i64 %2045, 8589934560
  %2050 = sub i64 %2039, %2049
  br label %2051

2051:                                             ; preds = %2051, %2048
  %2052 = phi i64 [ 0, %2048 ], [ %2075, %2051 ]
  %2053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2071, %2051 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2072, %2051 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2073, %2051 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2074, %2051 ]
  %2057 = sub i64 %2039, %2052
  %2058 = getelementptr inbounds i32, ptr %11, i64 %2057
  %2059 = getelementptr inbounds i32, ptr %2058, i64 -7
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2058, i64 -15
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !5
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = getelementptr inbounds i32, ptr %2058, i64 -23
  %2066 = load <8 x i32>, ptr %2065, align 4, !tbaa !5
  %2067 = shufflevector <8 x i32> %2066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2068 = getelementptr inbounds i32, ptr %2058, i64 -31
  %2069 = load <8 x i32>, ptr %2068, align 4, !tbaa !5
  %2070 = shufflevector <8 x i32> %2069, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2071 = mul <8 x i32> %2061, %2053
  %2072 = mul <8 x i32> %2064, %2054
  %2073 = mul <8 x i32> %2067, %2055
  %2074 = mul <8 x i32> %2070, %2056
  %2075 = add nuw i64 %2052, 32
  %2076 = icmp eq i64 %2075, %2049
  br i1 %2076, label %2077, label %2051, !llvm.loop !269

2077:                                             ; preds = %2051
  %2078 = mul <8 x i32> %2072, %2071
  %2079 = mul <8 x i32> %2073, %2078
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2080)
  %2082 = icmp eq i64 %2045, %2049
  br i1 %2082, label %2095, label %2083

2083:                                             ; preds = %2036, %2077
  %2084 = phi i64 [ %2039, %2036 ], [ %2050, %2077 ]
  %2085 = phi i32 [ 1, %2036 ], [ %2081, %2077 ]
  br label %2086

2086:                                             ; preds = %2083, %2086
  %2087 = phi i64 [ %2092, %2086 ], [ %2084, %2083 ]
  %2088 = phi i32 [ %2091, %2086 ], [ %2085, %2083 ]
  %2089 = getelementptr inbounds i32, ptr %11, i64 %2087
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = mul nsw i32 %2090, %2088
  %2092 = add nsw i64 %2087, -1
  %2093 = trunc i64 %2087 to i32
  %2094 = icmp sgt i32 %2093, 0
  br i1 %2094, label %2086, label %2095, !llvm.loop !270

2095:                                             ; preds = %2086, %2077
  %2096 = phi i32 [ %2081, %2077 ], [ %2091, %2086 ]
  %2097 = and i64 %2046, 4294967295
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2097
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = mul nsw i32 %2099, %2096
  %2101 = add nsw i32 %2100, %2040
  %2102 = icmp sgt i64 %2038, 2
  %2103 = add nsw i64 %2039, -1
  %2104 = add i32 %2037, 1
  br i1 %2102, label %2036, label %2105, !llvm.loop !271

2105:                                             ; preds = %2095, %2032
  %2106 = phi i32 [ %2035, %2032 ], [ %2101, %2095 ]
  %2107 = icmp slt i32 %2106, %5
  br i1 %2107, label %2110, label %2108

2108:                                             ; preds = %2105
  %2109 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2110:                                             ; preds = %2105
  %2111 = sext i32 %2106 to i64
  %2112 = getelementptr inbounds i32, ptr %1857, i64 %2111
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = sitofp i16 %2033 to double
  %2115 = shl i32 %2113, 16
  %2116 = ashr exact i32 %2115, 16
  %2117 = sitofp i32 %2116 to double
  %2118 = icmp slt i32 %2115, 0
  %2119 = fneg fast double %2117
  %2120 = select fast i1 %2118, double %2119, double %2117
  %2121 = fadd fast double %2120, %2114
  %2122 = fptosi double %2121 to i16
  store i16 %2122, ptr %1859, align 2, !tbaa !78
  %2123 = add nuw nsw i32 %2034, 1
  br i1 %1877, label %2124, label %2174

2124:                                             ; preds = %2110
  %2125 = load i32, ptr %4, align 4, !tbaa !5
  %2126 = load i32, ptr %12, align 4, !tbaa !5
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2125, %2127
  br i1 %2128, label %2151, label %2129

2129:                                             ; preds = %2124
  %2130 = icmp eq i32 %2125, %2127
  br i1 %2130, label %2131, label %2167

2131:                                             ; preds = %2129
  store i32 0, ptr %4, align 4, !tbaa !5
  %2132 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2132, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2174, label %2133

2133:                                             ; preds = %2131, %2161
  %2134 = phi i64 [ %2165, %2161 ], [ 1, %2131 ]
  %2135 = getelementptr inbounds i32, ptr %4, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %12, i64 %2134
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, -1
  %2140 = icmp slt i32 %2136, %2139
  br i1 %2140, label %2141, label %2159

2141:                                             ; preds = %2133
  br i1 %2128, label %2151, label %2142

2142:                                             ; preds = %2141
  %2143 = shl i64 %2134, 32
  %2144 = add i64 %2143, -4294967296
  %2145 = ashr exact i64 %2144, 32
  %2146 = getelementptr inbounds i32, ptr %7, i64 %2145
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = getelementptr inbounds i32, ptr %6, i64 %2134
  %2149 = load i32, ptr %2148, align 4, !tbaa !5
  %2150 = add nsw i32 %2149, %2147
  store i32 %2150, ptr %2148, align 4, !tbaa !5
  br label %2169

2151:                                             ; preds = %2124, %2141
  %2152 = phi i32 [ %2136, %2141 ], [ %2125, %2124 ]
  %2153 = phi ptr [ %2135, %2141 ], [ %4, %2124 ]
  %2154 = phi i64 [ %2134, %2141 ], [ 0, %2124 ]
  %2155 = add nsw i32 %2152, 1
  store i32 %2155, ptr %2153, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %7, i64 %2154
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = getelementptr inbounds i32, ptr %6, i64 %2154
  br label %2169

2159:                                             ; preds = %2133
  %2160 = icmp eq i32 %2136, %2139
  br i1 %2160, label %2161, label %2167

2161:                                             ; preds = %2159
  store i32 0, ptr %2135, align 4, !tbaa !5
  %2162 = getelementptr inbounds i32, ptr %8, i64 %2134
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2134
  store i32 %2163, ptr %2164, align 4, !tbaa !5
  %2165 = add nuw nsw i64 %2134, 1
  %2166 = icmp eq i64 %2165, %1880
  br i1 %2166, label %2174, label %2133, !llvm.loop !272

2167:                                             ; preds = %2129, %2159
  %2168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2169:                                             ; preds = %2142, %2151
  %2170 = phi ptr [ %2158, %2151 ], [ %2135, %2142 ]
  %2171 = phi i32 [ %2157, %2151 ], [ 1, %2142 ]
  %2172 = load i32, ptr %2170, align 4, !tbaa !5
  %2173 = add nsw i32 %2172, %2171
  store i32 %2173, ptr %2170, align 4, !tbaa !5
  br label %2174

2174:                                             ; preds = %2161, %2169, %2131, %2110
  %2175 = icmp eq i32 %2123, %5
  br i1 %2175, label %5545, label %2032, !llvm.loop !273

2176:                                             ; preds = %1868
  %2177 = getelementptr inbounds i32, ptr %3, i64 %19
  %2178 = load i32, ptr %2177, align 4, !tbaa !5
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp sgt i32 %5, 0
  br i1 %2179, label %2190, label %2181

2181:                                             ; preds = %2176
  br i1 %2180, label %2182, label %5545

2182:                                             ; preds = %2181
  %2183 = icmp sgt i32 %13, 1
  %2184 = icmp sgt i32 %13, 0
  %2185 = add i32 %13, -2
  %2186 = zext i32 %2185 to i64
  %2187 = zext i32 %13 to i64
  %2188 = add nuw i32 %5, 1
  %2189 = icmp eq i32 %13, 1
  br label %2335

2190:                                             ; preds = %2176
  br i1 %2180, label %2191, label %5545

2191:                                             ; preds = %2190
  %2192 = icmp sgt i32 %13, 1
  %2193 = icmp sgt i32 %13, 0
  %2194 = add i32 %13, -2
  %2195 = zext i32 %2194 to i64
  %2196 = zext i32 %13 to i64
  %2197 = add nuw i32 %5, 1
  %2198 = icmp eq i32 %13, 1
  br label %2199

2199:                                             ; preds = %2191, %2333
  %2200 = phi i16 [ 0, %2191 ], [ %2283, %2333 ]
  %2201 = phi i32 [ 0, %2191 ], [ %2285, %2333 ]
  %2202 = phi double [ 0.000000e+00, %2191 ], [ %2284, %2333 ]
  %2203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2192, label %2204, label %2273

2204:                                             ; preds = %2199, %2263
  %2205 = phi i32 [ %2272, %2263 ], [ 0, %2199 ]
  %2206 = phi i64 [ %2214, %2263 ], [ %2196, %2199 ]
  %2207 = phi i64 [ %2271, %2263 ], [ %2195, %2199 ]
  %2208 = phi i32 [ %2269, %2263 ], [ %2203, %2199 ]
  %2209 = sub i32 %2194, %2205
  %2210 = tail call i32 @llvm.smin.i32(i32 %2209, i32 0)
  %2211 = sub i32 %2209, %2210
  %2212 = zext i32 %2211 to i64
  %2213 = add nuw nsw i64 %2212, 1
  %2214 = add nsw i64 %2206, -1
  %2215 = icmp ult i32 %2211, 31
  br i1 %2215, label %2251, label %2216

2216:                                             ; preds = %2204
  %2217 = and i64 %2213, 8589934560
  %2218 = sub i64 %2207, %2217
  br label %2219

2219:                                             ; preds = %2219, %2216
  %2220 = phi i64 [ 0, %2216 ], [ %2243, %2219 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2239, %2219 ]
  %2222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2240, %2219 ]
  %2223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2241, %2219 ]
  %2224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2242, %2219 ]
  %2225 = sub i64 %2207, %2220
  %2226 = getelementptr inbounds i32, ptr %9, i64 %2225
  %2227 = getelementptr inbounds i32, ptr %2226, i64 -7
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !5
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = getelementptr inbounds i32, ptr %2226, i64 -15
  %2231 = load <8 x i32>, ptr %2230, align 4, !tbaa !5
  %2232 = shufflevector <8 x i32> %2231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2233 = getelementptr inbounds i32, ptr %2226, i64 -23
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !5
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2226, i64 -31
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !5
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = mul <8 x i32> %2229, %2221
  %2240 = mul <8 x i32> %2232, %2222
  %2241 = mul <8 x i32> %2235, %2223
  %2242 = mul <8 x i32> %2238, %2224
  %2243 = add nuw i64 %2220, 32
  %2244 = icmp eq i64 %2243, %2217
  br i1 %2244, label %2245, label %2219, !llvm.loop !274

2245:                                             ; preds = %2219
  %2246 = mul <8 x i32> %2240, %2239
  %2247 = mul <8 x i32> %2241, %2246
  %2248 = mul <8 x i32> %2242, %2247
  %2249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2248)
  %2250 = icmp eq i64 %2213, %2217
  br i1 %2250, label %2263, label %2251

2251:                                             ; preds = %2204, %2245
  %2252 = phi i64 [ %2207, %2204 ], [ %2218, %2245 ]
  %2253 = phi i32 [ 1, %2204 ], [ %2249, %2245 ]
  br label %2254

2254:                                             ; preds = %2251, %2254
  %2255 = phi i64 [ %2260, %2254 ], [ %2252, %2251 ]
  %2256 = phi i32 [ %2259, %2254 ], [ %2253, %2251 ]
  %2257 = getelementptr inbounds i32, ptr %9, i64 %2255
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = mul nsw i32 %2258, %2256
  %2260 = add nsw i64 %2255, -1
  %2261 = trunc i64 %2255 to i32
  %2262 = icmp sgt i32 %2261, 0
  br i1 %2262, label %2254, label %2263, !llvm.loop !275

2263:                                             ; preds = %2254, %2245
  %2264 = phi i32 [ %2249, %2245 ], [ %2259, %2254 ]
  %2265 = and i64 %2214, 4294967295
  %2266 = getelementptr inbounds i32, ptr %6, i64 %2265
  %2267 = load i32, ptr %2266, align 4, !tbaa !5
  %2268 = mul nsw i32 %2267, %2264
  %2269 = add nsw i32 %2268, %2208
  %2270 = icmp sgt i64 %2206, 2
  %2271 = add nsw i64 %2207, -1
  %2272 = add i32 %2205, 1
  br i1 %2270, label %2204, label %2273, !llvm.loop !276

2273:                                             ; preds = %2263, %2199
  %2274 = phi i32 [ %2203, %2199 ], [ %2269, %2263 ]
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds i32, ptr %1857, i64 %2275
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = and i32 %2277, 32768
  %2279 = icmp eq i32 %2278, 0
  %2280 = sub i32 0, %2277
  %2281 = select i1 %2279, i32 %2277, i32 %2280
  %2282 = trunc i32 %2281 to i16
  %2283 = add i16 %2200, %2282
  %2284 = fadd fast double %2202, 1.000000e+00
  %2285 = add nuw nsw i32 %2201, 1
  br i1 %2193, label %2286, label %2333

2286:                                             ; preds = %2273
  %2287 = load i32, ptr %4, align 4, !tbaa !5
  %2288 = load i32, ptr %12, align 4, !tbaa !5
  %2289 = add nsw i32 %2288, -1
  %2290 = icmp slt i32 %2287, %2289
  br i1 %2290, label %2310, label %2291

2291:                                             ; preds = %2286
  %2292 = icmp eq i32 %2287, %2289
  br i1 %2292, label %2293, label %2326

2293:                                             ; preds = %2291
  store i32 0, ptr %4, align 4, !tbaa !5
  %2294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2294, ptr %6, align 4, !tbaa !5
  br i1 %2198, label %2333, label %2295

2295:                                             ; preds = %2293, %2320
  %2296 = phi i64 [ %2324, %2320 ], [ 1, %2293 ]
  %2297 = getelementptr inbounds i32, ptr %4, i64 %2296
  %2298 = load i32, ptr %2297, align 4, !tbaa !5
  %2299 = getelementptr inbounds i32, ptr %12, i64 %2296
  %2300 = load i32, ptr %2299, align 4, !tbaa !5
  %2301 = add nsw i32 %2300, -1
  %2302 = icmp slt i32 %2298, %2301
  br i1 %2302, label %2303, label %2318

2303:                                             ; preds = %2295
  br i1 %2290, label %2310, label %2304

2304:                                             ; preds = %2303
  %2305 = getelementptr inbounds i32, ptr %7, i64 %2296
  %2306 = load i32, ptr %2305, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %6, i64 %2296
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = add nsw i32 %2308, %2306
  store i32 %2309, ptr %2307, align 4, !tbaa !5
  br label %2328

2310:                                             ; preds = %2286, %2303
  %2311 = phi i32 [ %2298, %2303 ], [ %2287, %2286 ]
  %2312 = phi ptr [ %2297, %2303 ], [ %4, %2286 ]
  %2313 = phi i64 [ %2296, %2303 ], [ 0, %2286 ]
  %2314 = add nsw i32 %2311, 1
  store i32 %2314, ptr %2312, align 4, !tbaa !5
  %2315 = getelementptr inbounds i32, ptr %7, i64 %2313
  %2316 = load i32, ptr %2315, align 4, !tbaa !5
  %2317 = getelementptr inbounds i32, ptr %6, i64 %2313
  br label %2328

2318:                                             ; preds = %2295
  %2319 = icmp eq i32 %2298, %2301
  br i1 %2319, label %2320, label %2326

2320:                                             ; preds = %2318
  store i32 0, ptr %2297, align 4, !tbaa !5
  %2321 = getelementptr inbounds i32, ptr %8, i64 %2296
  %2322 = load i32, ptr %2321, align 4, !tbaa !5
  %2323 = getelementptr inbounds i32, ptr %6, i64 %2296
  store i32 %2322, ptr %2323, align 4, !tbaa !5
  %2324 = add nuw nsw i64 %2296, 1
  %2325 = icmp eq i64 %2324, %2196
  br i1 %2325, label %2333, label %2295, !llvm.loop !277

2326:                                             ; preds = %2291, %2318
  store i16 %2283, ptr %1859, align 2, !tbaa !78
  %2327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2328:                                             ; preds = %2304, %2310
  %2329 = phi ptr [ %2317, %2310 ], [ %2297, %2304 ]
  %2330 = phi i32 [ %2316, %2310 ], [ 1, %2304 ]
  %2331 = load i32, ptr %2329, align 4, !tbaa !5
  %2332 = add nsw i32 %2331, %2330
  store i32 %2332, ptr %2329, align 4, !tbaa !5
  br label %2333

2333:                                             ; preds = %2320, %2328, %2293, %2273
  %2334 = icmp eq i32 %2285, %5
  br i1 %2334, label %5538, label %2199, !llvm.loop !278

2335:                                             ; preds = %2182, %2474
  %2336 = phi i16 [ 0, %2182 ], [ %2422, %2474 ]
  %2337 = phi i32 [ 0, %2182 ], [ %2423, %2474 ]
  %2338 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2339, label %2408

2339:                                             ; preds = %2335, %2398
  %2340 = phi i32 [ %2407, %2398 ], [ 0, %2335 ]
  %2341 = phi i64 [ %2349, %2398 ], [ %2187, %2335 ]
  %2342 = phi i64 [ %2406, %2398 ], [ %2186, %2335 ]
  %2343 = phi i32 [ %2404, %2398 ], [ %2338, %2335 ]
  %2344 = sub i32 %2185, %2340
  %2345 = tail call i32 @llvm.smin.i32(i32 %2344, i32 0)
  %2346 = sub i32 %2344, %2345
  %2347 = zext i32 %2346 to i64
  %2348 = add nuw nsw i64 %2347, 1
  %2349 = add nsw i64 %2341, -1
  %2350 = icmp ult i32 %2346, 31
  br i1 %2350, label %2386, label %2351

2351:                                             ; preds = %2339
  %2352 = and i64 %2348, 8589934560
  %2353 = sub i64 %2342, %2352
  br label %2354

2354:                                             ; preds = %2354, %2351
  %2355 = phi i64 [ 0, %2351 ], [ %2378, %2354 ]
  %2356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2374, %2354 ]
  %2357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2375, %2354 ]
  %2358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2376, %2354 ]
  %2359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2377, %2354 ]
  %2360 = sub i64 %2342, %2355
  %2361 = getelementptr inbounds i32, ptr %11, i64 %2360
  %2362 = getelementptr inbounds i32, ptr %2361, i64 -7
  %2363 = load <8 x i32>, ptr %2362, align 4, !tbaa !5
  %2364 = shufflevector <8 x i32> %2363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2365 = getelementptr inbounds i32, ptr %2361, i64 -15
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !5
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2361, i64 -23
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !5
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = getelementptr inbounds i32, ptr %2361, i64 -31
  %2372 = load <8 x i32>, ptr %2371, align 4, !tbaa !5
  %2373 = shufflevector <8 x i32> %2372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2374 = mul <8 x i32> %2364, %2356
  %2375 = mul <8 x i32> %2367, %2357
  %2376 = mul <8 x i32> %2370, %2358
  %2377 = mul <8 x i32> %2373, %2359
  %2378 = add nuw i64 %2355, 32
  %2379 = icmp eq i64 %2378, %2352
  br i1 %2379, label %2380, label %2354, !llvm.loop !279

2380:                                             ; preds = %2354
  %2381 = mul <8 x i32> %2375, %2374
  %2382 = mul <8 x i32> %2376, %2381
  %2383 = mul <8 x i32> %2377, %2382
  %2384 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2383)
  %2385 = icmp eq i64 %2348, %2352
  br i1 %2385, label %2398, label %2386

2386:                                             ; preds = %2339, %2380
  %2387 = phi i64 [ %2342, %2339 ], [ %2353, %2380 ]
  %2388 = phi i32 [ 1, %2339 ], [ %2384, %2380 ]
  br label %2389

2389:                                             ; preds = %2386, %2389
  %2390 = phi i64 [ %2395, %2389 ], [ %2387, %2386 ]
  %2391 = phi i32 [ %2394, %2389 ], [ %2388, %2386 ]
  %2392 = getelementptr inbounds i32, ptr %11, i64 %2390
  %2393 = load i32, ptr %2392, align 4, !tbaa !5
  %2394 = mul nsw i32 %2393, %2391
  %2395 = add nsw i64 %2390, -1
  %2396 = trunc i64 %2390 to i32
  %2397 = icmp sgt i32 %2396, 0
  br i1 %2397, label %2389, label %2398, !llvm.loop !280

2398:                                             ; preds = %2389, %2380
  %2399 = phi i32 [ %2384, %2380 ], [ %2394, %2389 ]
  %2400 = and i64 %2349, 4294967295
  %2401 = getelementptr inbounds i32, ptr %6, i64 %2400
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = mul nsw i32 %2402, %2399
  %2404 = add nsw i32 %2403, %2343
  %2405 = icmp sgt i64 %2341, 2
  %2406 = add nsw i64 %2342, -1
  %2407 = add i32 %2340, 1
  br i1 %2405, label %2339, label %2408, !llvm.loop !281

2408:                                             ; preds = %2398, %2335
  %2409 = phi i32 [ %2338, %2335 ], [ %2404, %2398 ]
  %2410 = icmp slt i32 %2409, %5
  br i1 %2410, label %2413, label %2411

2411:                                             ; preds = %2408
  %2412 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2413:                                             ; preds = %2408
  %2414 = sext i32 %2409 to i64
  %2415 = getelementptr inbounds i32, ptr %1857, i64 %2414
  %2416 = load i32, ptr %2415, align 4, !tbaa !5
  %2417 = and i32 %2416, 32768
  %2418 = icmp eq i32 %2417, 0
  %2419 = sub i32 0, %2416
  %2420 = select i1 %2418, i32 %2416, i32 %2419
  %2421 = trunc i32 %2420 to i16
  %2422 = add i16 %2336, %2421
  store i16 %2422, ptr %1859, align 2, !tbaa !78
  %2423 = add nuw nsw i32 %2337, 1
  br i1 %2184, label %2424, label %2474

2424:                                             ; preds = %2413
  %2425 = load i32, ptr %4, align 4, !tbaa !5
  %2426 = load i32, ptr %12, align 4, !tbaa !5
  %2427 = add nsw i32 %2426, -1
  %2428 = icmp slt i32 %2425, %2427
  br i1 %2428, label %2451, label %2429

2429:                                             ; preds = %2424
  %2430 = icmp eq i32 %2425, %2427
  br i1 %2430, label %2431, label %2467

2431:                                             ; preds = %2429
  store i32 0, ptr %4, align 4, !tbaa !5
  %2432 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2432, ptr %6, align 4, !tbaa !5
  br i1 %2189, label %2474, label %2433

2433:                                             ; preds = %2431, %2461
  %2434 = phi i64 [ %2465, %2461 ], [ 1, %2431 ]
  %2435 = getelementptr inbounds i32, ptr %4, i64 %2434
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %12, i64 %2434
  %2438 = load i32, ptr %2437, align 4, !tbaa !5
  %2439 = add nsw i32 %2438, -1
  %2440 = icmp slt i32 %2436, %2439
  br i1 %2440, label %2441, label %2459

2441:                                             ; preds = %2433
  br i1 %2428, label %2451, label %2442

2442:                                             ; preds = %2441
  %2443 = shl i64 %2434, 32
  %2444 = add i64 %2443, -4294967296
  %2445 = ashr exact i64 %2444, 32
  %2446 = getelementptr inbounds i32, ptr %7, i64 %2445
  %2447 = load i32, ptr %2446, align 4, !tbaa !5
  %2448 = getelementptr inbounds i32, ptr %6, i64 %2434
  %2449 = load i32, ptr %2448, align 4, !tbaa !5
  %2450 = add nsw i32 %2449, %2447
  store i32 %2450, ptr %2448, align 4, !tbaa !5
  br label %2469

2451:                                             ; preds = %2424, %2441
  %2452 = phi i32 [ %2436, %2441 ], [ %2425, %2424 ]
  %2453 = phi ptr [ %2435, %2441 ], [ %4, %2424 ]
  %2454 = phi i64 [ %2434, %2441 ], [ 0, %2424 ]
  %2455 = add nsw i32 %2452, 1
  store i32 %2455, ptr %2453, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %7, i64 %2454
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = getelementptr inbounds i32, ptr %6, i64 %2454
  br label %2469

2459:                                             ; preds = %2433
  %2460 = icmp eq i32 %2436, %2439
  br i1 %2460, label %2461, label %2467

2461:                                             ; preds = %2459
  store i32 0, ptr %2435, align 4, !tbaa !5
  %2462 = getelementptr inbounds i32, ptr %8, i64 %2434
  %2463 = load i32, ptr %2462, align 4, !tbaa !5
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2434
  store i32 %2463, ptr %2464, align 4, !tbaa !5
  %2465 = add nuw nsw i64 %2434, 1
  %2466 = icmp eq i64 %2465, %2187
  br i1 %2466, label %2474, label %2433, !llvm.loop !282

2467:                                             ; preds = %2429, %2459
  %2468 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2469:                                             ; preds = %2442, %2451
  %2470 = phi ptr [ %2458, %2451 ], [ %2435, %2442 ]
  %2471 = phi i32 [ %2457, %2451 ], [ 1, %2442 ]
  %2472 = load i32, ptr %2470, align 4, !tbaa !5
  %2473 = add nsw i32 %2472, %2471
  store i32 %2473, ptr %2470, align 4, !tbaa !5
  br label %2474

2474:                                             ; preds = %2461, %2469, %2431, %2413
  %2475 = icmp eq i32 %2423, %5
  br i1 %2475, label %5545, label %2335, !llvm.loop !283

2476:                                             ; preds = %1868
  %2477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

2478:                                             ; preds = %18
  %2479 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2480 = load ptr, ptr %2479, align 8, !tbaa !9
  %2481 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !9
  store i32 0, ptr %2482, align 4, !tbaa !5
  %2483 = icmp eq i32 %13, 0
  br i1 %2483, label %2484, label %2487

2484:                                             ; preds = %2478
  %2485 = load i32, ptr %2480, align 4, !tbaa !5
  %2486 = tail call i32 @llvm.abs.i32(i32 %2485, i1 true)
  store i32 %2486, ptr %2482, align 4, !tbaa !5
  br label %5545

2487:                                             ; preds = %2478
  switch i32 %1, label %3083 [
    i32 1, label %2488
    i32 0, label %2791
  ]

2488:                                             ; preds = %2487
  %2489 = getelementptr inbounds i32, ptr %3, i64 %19
  %2490 = load i32, ptr %2489, align 4, !tbaa !5
  %2491 = icmp eq i32 %2490, 0
  %2492 = icmp sgt i32 %5, 0
  br i1 %2491, label %2502, label %2493

2493:                                             ; preds = %2488
  br i1 %2492, label %2494, label %5545

2494:                                             ; preds = %2493
  %2495 = icmp sgt i32 %13, 1
  %2496 = icmp sgt i32 %13, 0
  %2497 = add i32 %13, -2
  %2498 = zext i32 %2497 to i64
  %2499 = zext i32 %13 to i64
  %2500 = add nuw i32 %5, 1
  %2501 = icmp eq i32 %13, 1
  br label %2649

2502:                                             ; preds = %2488
  br i1 %2492, label %2503, label %5545

2503:                                             ; preds = %2502
  %2504 = icmp sgt i32 %13, 1
  %2505 = icmp sgt i32 %13, 0
  %2506 = add i32 %13, -2
  %2507 = zext i32 %2506 to i64
  %2508 = zext i32 %13 to i64
  %2509 = add nuw i32 %5, 1
  %2510 = icmp eq i32 %13, 1
  br label %2511

2511:                                             ; preds = %2503, %2647
  %2512 = phi i32 [ 0, %2503 ], [ %2599, %2647 ]
  %2513 = phi double [ 0.000000e+00, %2503 ], [ %2598, %2647 ]
  %2514 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2504, label %2515, label %2584

2515:                                             ; preds = %2511, %2574
  %2516 = phi i32 [ %2583, %2574 ], [ 0, %2511 ]
  %2517 = phi i64 [ %2525, %2574 ], [ %2508, %2511 ]
  %2518 = phi i64 [ %2582, %2574 ], [ %2507, %2511 ]
  %2519 = phi i32 [ %2580, %2574 ], [ %2514, %2511 ]
  %2520 = sub i32 %2506, %2516
  %2521 = tail call i32 @llvm.smin.i32(i32 %2520, i32 0)
  %2522 = sub i32 %2520, %2521
  %2523 = zext i32 %2522 to i64
  %2524 = add nuw nsw i64 %2523, 1
  %2525 = add nsw i64 %2517, -1
  %2526 = icmp ult i32 %2522, 31
  br i1 %2526, label %2562, label %2527

2527:                                             ; preds = %2515
  %2528 = and i64 %2524, 8589934560
  %2529 = sub i64 %2518, %2528
  br label %2530

2530:                                             ; preds = %2530, %2527
  %2531 = phi i64 [ 0, %2527 ], [ %2554, %2530 ]
  %2532 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2550, %2530 ]
  %2533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2551, %2530 ]
  %2534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2552, %2530 ]
  %2535 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2553, %2530 ]
  %2536 = sub i64 %2518, %2531
  %2537 = getelementptr inbounds i32, ptr %9, i64 %2536
  %2538 = getelementptr inbounds i32, ptr %2537, i64 -7
  %2539 = load <8 x i32>, ptr %2538, align 4, !tbaa !5
  %2540 = shufflevector <8 x i32> %2539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2541 = getelementptr inbounds i32, ptr %2537, i64 -15
  %2542 = load <8 x i32>, ptr %2541, align 4, !tbaa !5
  %2543 = shufflevector <8 x i32> %2542, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2544 = getelementptr inbounds i32, ptr %2537, i64 -23
  %2545 = load <8 x i32>, ptr %2544, align 4, !tbaa !5
  %2546 = shufflevector <8 x i32> %2545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2547 = getelementptr inbounds i32, ptr %2537, i64 -31
  %2548 = load <8 x i32>, ptr %2547, align 4, !tbaa !5
  %2549 = shufflevector <8 x i32> %2548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2550 = mul <8 x i32> %2540, %2532
  %2551 = mul <8 x i32> %2543, %2533
  %2552 = mul <8 x i32> %2546, %2534
  %2553 = mul <8 x i32> %2549, %2535
  %2554 = add nuw i64 %2531, 32
  %2555 = icmp eq i64 %2554, %2528
  br i1 %2555, label %2556, label %2530, !llvm.loop !284

2556:                                             ; preds = %2530
  %2557 = mul <8 x i32> %2551, %2550
  %2558 = mul <8 x i32> %2552, %2557
  %2559 = mul <8 x i32> %2553, %2558
  %2560 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2559)
  %2561 = icmp eq i64 %2524, %2528
  br i1 %2561, label %2574, label %2562

2562:                                             ; preds = %2515, %2556
  %2563 = phi i64 [ %2518, %2515 ], [ %2529, %2556 ]
  %2564 = phi i32 [ 1, %2515 ], [ %2560, %2556 ]
  br label %2565

2565:                                             ; preds = %2562, %2565
  %2566 = phi i64 [ %2571, %2565 ], [ %2563, %2562 ]
  %2567 = phi i32 [ %2570, %2565 ], [ %2564, %2562 ]
  %2568 = getelementptr inbounds i32, ptr %9, i64 %2566
  %2569 = load i32, ptr %2568, align 4, !tbaa !5
  %2570 = mul nsw i32 %2569, %2567
  %2571 = add nsw i64 %2566, -1
  %2572 = trunc i64 %2566 to i32
  %2573 = icmp sgt i32 %2572, 0
  br i1 %2573, label %2565, label %2574, !llvm.loop !285

2574:                                             ; preds = %2565, %2556
  %2575 = phi i32 [ %2560, %2556 ], [ %2570, %2565 ]
  %2576 = and i64 %2525, 4294967295
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2576
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = mul nsw i32 %2578, %2575
  %2580 = add nsw i32 %2579, %2519
  %2581 = icmp sgt i64 %2517, 2
  %2582 = add nsw i64 %2518, -1
  %2583 = add i32 %2516, 1
  br i1 %2581, label %2515, label %2584, !llvm.loop !286

2584:                                             ; preds = %2574, %2511
  %2585 = phi i32 [ %2514, %2511 ], [ %2580, %2574 ]
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds double, ptr %2, i64 %2586
  %2588 = load double, ptr %2587, align 8, !tbaa !18
  %2589 = getelementptr inbounds i32, ptr %2480, i64 %2586
  %2590 = load i32, ptr %2589, align 4, !tbaa !5
  %2591 = load i32, ptr %2482, align 4, !tbaa !5
  %2592 = sitofp i32 %2591 to double
  %2593 = sitofp i32 %2590 to double
  %2594 = fmul fast double %2588, %2593
  %2595 = tail call fast double @llvm.fabs.f64(double %2594)
  %2596 = fadd fast double %2595, %2592
  %2597 = fptosi double %2596 to i32
  store i32 %2597, ptr %2482, align 4, !tbaa !5
  %2598 = fadd fast double %2588, %2513
  %2599 = add nuw nsw i32 %2512, 1
  br i1 %2505, label %2600, label %2647

2600:                                             ; preds = %2584
  %2601 = load i32, ptr %4, align 4, !tbaa !5
  %2602 = load i32, ptr %12, align 4, !tbaa !5
  %2603 = add nsw i32 %2602, -1
  %2604 = icmp slt i32 %2601, %2603
  br i1 %2604, label %2624, label %2605

2605:                                             ; preds = %2600
  %2606 = icmp eq i32 %2601, %2603
  br i1 %2606, label %2607, label %2640

2607:                                             ; preds = %2605
  store i32 0, ptr %4, align 4, !tbaa !5
  %2608 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2608, ptr %6, align 4, !tbaa !5
  br i1 %2510, label %2647, label %2609

2609:                                             ; preds = %2607, %2634
  %2610 = phi i64 [ %2638, %2634 ], [ 1, %2607 ]
  %2611 = getelementptr inbounds i32, ptr %4, i64 %2610
  %2612 = load i32, ptr %2611, align 4, !tbaa !5
  %2613 = getelementptr inbounds i32, ptr %12, i64 %2610
  %2614 = load i32, ptr %2613, align 4, !tbaa !5
  %2615 = add nsw i32 %2614, -1
  %2616 = icmp slt i32 %2612, %2615
  br i1 %2616, label %2617, label %2632

2617:                                             ; preds = %2609
  br i1 %2604, label %2624, label %2618

2618:                                             ; preds = %2617
  %2619 = getelementptr inbounds i32, ptr %7, i64 %2610
  %2620 = load i32, ptr %2619, align 4, !tbaa !5
  %2621 = getelementptr inbounds i32, ptr %6, i64 %2610
  %2622 = load i32, ptr %2621, align 4, !tbaa !5
  %2623 = add nsw i32 %2622, %2620
  store i32 %2623, ptr %2621, align 4, !tbaa !5
  br label %2642

2624:                                             ; preds = %2600, %2617
  %2625 = phi i32 [ %2612, %2617 ], [ %2601, %2600 ]
  %2626 = phi ptr [ %2611, %2617 ], [ %4, %2600 ]
  %2627 = phi i64 [ %2610, %2617 ], [ 0, %2600 ]
  %2628 = add nsw i32 %2625, 1
  store i32 %2628, ptr %2626, align 4, !tbaa !5
  %2629 = getelementptr inbounds i32, ptr %7, i64 %2627
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2627
  br label %2642

2632:                                             ; preds = %2609
  %2633 = icmp eq i32 %2612, %2615
  br i1 %2633, label %2634, label %2640

2634:                                             ; preds = %2632
  store i32 0, ptr %2611, align 4, !tbaa !5
  %2635 = getelementptr inbounds i32, ptr %8, i64 %2610
  %2636 = load i32, ptr %2635, align 4, !tbaa !5
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2610
  store i32 %2636, ptr %2637, align 4, !tbaa !5
  %2638 = add nuw nsw i64 %2610, 1
  %2639 = icmp eq i64 %2638, %2508
  br i1 %2639, label %2647, label %2609, !llvm.loop !287

2640:                                             ; preds = %2605, %2632
  %2641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2642:                                             ; preds = %2618, %2624
  %2643 = phi ptr [ %2631, %2624 ], [ %2611, %2618 ]
  %2644 = phi i32 [ %2630, %2624 ], [ 1, %2618 ]
  %2645 = load i32, ptr %2643, align 4, !tbaa !5
  %2646 = add nsw i32 %2645, %2644
  store i32 %2646, ptr %2643, align 4, !tbaa !5
  br label %2647

2647:                                             ; preds = %2634, %2642, %2607, %2584
  %2648 = icmp eq i32 %2599, %5
  br i1 %2648, label %5545, label %2511, !llvm.loop !288

2649:                                             ; preds = %2494, %2789
  %2650 = phi i32 [ 0, %2494 ], [ %2738, %2789 ]
  %2651 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2495, label %2652, label %2721

2652:                                             ; preds = %2649, %2711
  %2653 = phi i32 [ %2720, %2711 ], [ 0, %2649 ]
  %2654 = phi i64 [ %2662, %2711 ], [ %2499, %2649 ]
  %2655 = phi i64 [ %2719, %2711 ], [ %2498, %2649 ]
  %2656 = phi i32 [ %2717, %2711 ], [ %2651, %2649 ]
  %2657 = sub i32 %2497, %2653
  %2658 = tail call i32 @llvm.smin.i32(i32 %2657, i32 0)
  %2659 = sub i32 %2657, %2658
  %2660 = zext i32 %2659 to i64
  %2661 = add nuw nsw i64 %2660, 1
  %2662 = add nsw i64 %2654, -1
  %2663 = icmp ult i32 %2659, 31
  br i1 %2663, label %2699, label %2664

2664:                                             ; preds = %2652
  %2665 = and i64 %2661, 8589934560
  %2666 = sub i64 %2655, %2665
  br label %2667

2667:                                             ; preds = %2667, %2664
  %2668 = phi i64 [ 0, %2664 ], [ %2691, %2667 ]
  %2669 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2687, %2667 ]
  %2670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2688, %2667 ]
  %2671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2689, %2667 ]
  %2672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2690, %2667 ]
  %2673 = sub i64 %2655, %2668
  %2674 = getelementptr inbounds i32, ptr %11, i64 %2673
  %2675 = getelementptr inbounds i32, ptr %2674, i64 -7
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !5
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = getelementptr inbounds i32, ptr %2674, i64 -15
  %2679 = load <8 x i32>, ptr %2678, align 4, !tbaa !5
  %2680 = shufflevector <8 x i32> %2679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2681 = getelementptr inbounds i32, ptr %2674, i64 -23
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !5
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2674, i64 -31
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !5
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = mul <8 x i32> %2677, %2669
  %2688 = mul <8 x i32> %2680, %2670
  %2689 = mul <8 x i32> %2683, %2671
  %2690 = mul <8 x i32> %2686, %2672
  %2691 = add nuw i64 %2668, 32
  %2692 = icmp eq i64 %2691, %2665
  br i1 %2692, label %2693, label %2667, !llvm.loop !289

2693:                                             ; preds = %2667
  %2694 = mul <8 x i32> %2688, %2687
  %2695 = mul <8 x i32> %2689, %2694
  %2696 = mul <8 x i32> %2690, %2695
  %2697 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2696)
  %2698 = icmp eq i64 %2661, %2665
  br i1 %2698, label %2711, label %2699

2699:                                             ; preds = %2652, %2693
  %2700 = phi i64 [ %2655, %2652 ], [ %2666, %2693 ]
  %2701 = phi i32 [ 1, %2652 ], [ %2697, %2693 ]
  br label %2702

2702:                                             ; preds = %2699, %2702
  %2703 = phi i64 [ %2708, %2702 ], [ %2700, %2699 ]
  %2704 = phi i32 [ %2707, %2702 ], [ %2701, %2699 ]
  %2705 = getelementptr inbounds i32, ptr %11, i64 %2703
  %2706 = load i32, ptr %2705, align 4, !tbaa !5
  %2707 = mul nsw i32 %2706, %2704
  %2708 = add nsw i64 %2703, -1
  %2709 = trunc i64 %2703 to i32
  %2710 = icmp sgt i32 %2709, 0
  br i1 %2710, label %2702, label %2711, !llvm.loop !290

2711:                                             ; preds = %2702, %2693
  %2712 = phi i32 [ %2697, %2693 ], [ %2707, %2702 ]
  %2713 = and i64 %2662, 4294967295
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = mul nsw i32 %2715, %2712
  %2717 = add nsw i32 %2716, %2656
  %2718 = icmp sgt i64 %2654, 2
  %2719 = add nsw i64 %2655, -1
  %2720 = add i32 %2653, 1
  br i1 %2718, label %2652, label %2721, !llvm.loop !291

2721:                                             ; preds = %2711, %2649
  %2722 = phi i32 [ %2651, %2649 ], [ %2717, %2711 ]
  %2723 = icmp slt i32 %2722, %5
  br i1 %2723, label %2726, label %2724

2724:                                             ; preds = %2721
  %2725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2726:                                             ; preds = %2721
  %2727 = sext i32 %2722 to i64
  %2728 = getelementptr inbounds i32, ptr %2480, i64 %2727
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = load i32, ptr %2482, align 4, !tbaa !5
  %2731 = sitofp i32 %2730 to double
  %2732 = sitofp i32 %2729 to double
  %2733 = icmp slt i32 %2729, 0
  %2734 = fneg fast double %2732
  %2735 = select fast i1 %2733, double %2734, double %2732
  %2736 = fadd fast double %2735, %2731
  %2737 = fptosi double %2736 to i32
  store i32 %2737, ptr %2482, align 4, !tbaa !5
  %2738 = add nuw nsw i32 %2650, 1
  br i1 %2496, label %2739, label %2789

2739:                                             ; preds = %2726
  %2740 = load i32, ptr %4, align 4, !tbaa !5
  %2741 = load i32, ptr %12, align 4, !tbaa !5
  %2742 = add nsw i32 %2741, -1
  %2743 = icmp slt i32 %2740, %2742
  br i1 %2743, label %2766, label %2744

2744:                                             ; preds = %2739
  %2745 = icmp eq i32 %2740, %2742
  br i1 %2745, label %2746, label %2782

2746:                                             ; preds = %2744
  store i32 0, ptr %4, align 4, !tbaa !5
  %2747 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2747, ptr %6, align 4, !tbaa !5
  br i1 %2501, label %2789, label %2748

2748:                                             ; preds = %2746, %2776
  %2749 = phi i64 [ %2780, %2776 ], [ 1, %2746 ]
  %2750 = getelementptr inbounds i32, ptr %4, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %12, i64 %2749
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = add nsw i32 %2753, -1
  %2755 = icmp slt i32 %2751, %2754
  br i1 %2755, label %2756, label %2774

2756:                                             ; preds = %2748
  br i1 %2743, label %2766, label %2757

2757:                                             ; preds = %2756
  %2758 = shl i64 %2749, 32
  %2759 = add i64 %2758, -4294967296
  %2760 = ashr exact i64 %2759, 32
  %2761 = getelementptr inbounds i32, ptr %7, i64 %2760
  %2762 = load i32, ptr %2761, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %6, i64 %2749
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = add nsw i32 %2764, %2762
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  br label %2784

2766:                                             ; preds = %2739, %2756
  %2767 = phi i32 [ %2751, %2756 ], [ %2740, %2739 ]
  %2768 = phi ptr [ %2750, %2756 ], [ %4, %2739 ]
  %2769 = phi i64 [ %2749, %2756 ], [ 0, %2739 ]
  %2770 = add nsw i32 %2767, 1
  store i32 %2770, ptr %2768, align 4, !tbaa !5
  %2771 = getelementptr inbounds i32, ptr %7, i64 %2769
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2769
  br label %2784

2774:                                             ; preds = %2748
  %2775 = icmp eq i32 %2751, %2754
  br i1 %2775, label %2776, label %2782

2776:                                             ; preds = %2774
  store i32 0, ptr %2750, align 4, !tbaa !5
  %2777 = getelementptr inbounds i32, ptr %8, i64 %2749
  %2778 = load i32, ptr %2777, align 4, !tbaa !5
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2749
  store i32 %2778, ptr %2779, align 4, !tbaa !5
  %2780 = add nuw nsw i64 %2749, 1
  %2781 = icmp eq i64 %2780, %2499
  br i1 %2781, label %2789, label %2748, !llvm.loop !292

2782:                                             ; preds = %2744, %2774
  %2783 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2784:                                             ; preds = %2757, %2766
  %2785 = phi ptr [ %2773, %2766 ], [ %2750, %2757 ]
  %2786 = phi i32 [ %2772, %2766 ], [ 1, %2757 ]
  %2787 = load i32, ptr %2785, align 4, !tbaa !5
  %2788 = add nsw i32 %2787, %2786
  store i32 %2788, ptr %2785, align 4, !tbaa !5
  br label %2789

2789:                                             ; preds = %2776, %2784, %2746, %2726
  %2790 = icmp eq i32 %2738, %5
  br i1 %2790, label %5545, label %2649, !llvm.loop !293

2791:                                             ; preds = %2487
  %2792 = getelementptr inbounds i32, ptr %3, i64 %19
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = icmp eq i32 %2793, 0
  %2795 = icmp sgt i32 %5, 0
  br i1 %2794, label %2805, label %2796

2796:                                             ; preds = %2791
  br i1 %2795, label %2797, label %5545

2797:                                             ; preds = %2796
  %2798 = icmp sgt i32 %13, 1
  %2799 = icmp sgt i32 %13, 0
  %2800 = add i32 %13, -2
  %2801 = zext i32 %2800 to i64
  %2802 = zext i32 %13 to i64
  %2803 = add nuw i32 %5, 1
  %2804 = icmp eq i32 %13, 1
  br label %2946

2805:                                             ; preds = %2791
  br i1 %2795, label %2806, label %5545

2806:                                             ; preds = %2805
  %2807 = icmp sgt i32 %13, 1
  %2808 = icmp sgt i32 %13, 0
  %2809 = add i32 %13, -2
  %2810 = zext i32 %2809 to i64
  %2811 = zext i32 %13 to i64
  %2812 = add nuw i32 %5, 1
  %2813 = icmp eq i32 %13, 1
  br label %2814

2814:                                             ; preds = %2806, %2944
  %2815 = phi i32 [ 0, %2806 ], [ %2896, %2944 ]
  %2816 = phi double [ 0.000000e+00, %2806 ], [ %2895, %2944 ]
  %2817 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2807, label %2818, label %2887

2818:                                             ; preds = %2814, %2877
  %2819 = phi i32 [ %2886, %2877 ], [ 0, %2814 ]
  %2820 = phi i64 [ %2828, %2877 ], [ %2811, %2814 ]
  %2821 = phi i64 [ %2885, %2877 ], [ %2810, %2814 ]
  %2822 = phi i32 [ %2883, %2877 ], [ %2817, %2814 ]
  %2823 = sub i32 %2809, %2819
  %2824 = tail call i32 @llvm.smin.i32(i32 %2823, i32 0)
  %2825 = sub i32 %2823, %2824
  %2826 = zext i32 %2825 to i64
  %2827 = add nuw nsw i64 %2826, 1
  %2828 = add nsw i64 %2820, -1
  %2829 = icmp ult i32 %2825, 31
  br i1 %2829, label %2865, label %2830

2830:                                             ; preds = %2818
  %2831 = and i64 %2827, 8589934560
  %2832 = sub i64 %2821, %2831
  br label %2833

2833:                                             ; preds = %2833, %2830
  %2834 = phi i64 [ 0, %2830 ], [ %2857, %2833 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2853, %2833 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2854, %2833 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2855, %2833 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2856, %2833 ]
  %2839 = sub i64 %2821, %2834
  %2840 = getelementptr inbounds i32, ptr %9, i64 %2839
  %2841 = getelementptr inbounds i32, ptr %2840, i64 -7
  %2842 = load <8 x i32>, ptr %2841, align 4, !tbaa !5
  %2843 = shufflevector <8 x i32> %2842, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2844 = getelementptr inbounds i32, ptr %2840, i64 -15
  %2845 = load <8 x i32>, ptr %2844, align 4, !tbaa !5
  %2846 = shufflevector <8 x i32> %2845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2847 = getelementptr inbounds i32, ptr %2840, i64 -23
  %2848 = load <8 x i32>, ptr %2847, align 4, !tbaa !5
  %2849 = shufflevector <8 x i32> %2848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2850 = getelementptr inbounds i32, ptr %2840, i64 -31
  %2851 = load <8 x i32>, ptr %2850, align 4, !tbaa !5
  %2852 = shufflevector <8 x i32> %2851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2853 = mul <8 x i32> %2843, %2835
  %2854 = mul <8 x i32> %2846, %2836
  %2855 = mul <8 x i32> %2849, %2837
  %2856 = mul <8 x i32> %2852, %2838
  %2857 = add nuw i64 %2834, 32
  %2858 = icmp eq i64 %2857, %2831
  br i1 %2858, label %2859, label %2833, !llvm.loop !294

2859:                                             ; preds = %2833
  %2860 = mul <8 x i32> %2854, %2853
  %2861 = mul <8 x i32> %2855, %2860
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2862)
  %2864 = icmp eq i64 %2827, %2831
  br i1 %2864, label %2877, label %2865

2865:                                             ; preds = %2818, %2859
  %2866 = phi i64 [ %2821, %2818 ], [ %2832, %2859 ]
  %2867 = phi i32 [ 1, %2818 ], [ %2863, %2859 ]
  br label %2868

2868:                                             ; preds = %2865, %2868
  %2869 = phi i64 [ %2874, %2868 ], [ %2866, %2865 ]
  %2870 = phi i32 [ %2873, %2868 ], [ %2867, %2865 ]
  %2871 = getelementptr inbounds i32, ptr %9, i64 %2869
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = mul nsw i32 %2872, %2870
  %2874 = add nsw i64 %2869, -1
  %2875 = trunc i64 %2869 to i32
  %2876 = icmp sgt i32 %2875, 0
  br i1 %2876, label %2868, label %2877, !llvm.loop !295

2877:                                             ; preds = %2868, %2859
  %2878 = phi i32 [ %2863, %2859 ], [ %2873, %2868 ]
  %2879 = and i64 %2828, 4294967295
  %2880 = getelementptr inbounds i32, ptr %6, i64 %2879
  %2881 = load i32, ptr %2880, align 4, !tbaa !5
  %2882 = mul nsw i32 %2881, %2878
  %2883 = add nsw i32 %2882, %2822
  %2884 = icmp sgt i64 %2820, 2
  %2885 = add nsw i64 %2821, -1
  %2886 = add i32 %2819, 1
  br i1 %2884, label %2818, label %2887, !llvm.loop !296

2887:                                             ; preds = %2877, %2814
  %2888 = phi i32 [ %2817, %2814 ], [ %2883, %2877 ]
  %2889 = sext i32 %2888 to i64
  %2890 = getelementptr inbounds i32, ptr %2480, i64 %2889
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = load i32, ptr %2482, align 4, !tbaa !5
  %2893 = tail call i32 @llvm.abs.i32(i32 %2891, i1 true)
  %2894 = add nsw i32 %2892, %2893
  store i32 %2894, ptr %2482, align 4, !tbaa !5
  %2895 = fadd fast double %2816, 1.000000e+00
  %2896 = add nuw nsw i32 %2815, 1
  br i1 %2808, label %2897, label %2944

2897:                                             ; preds = %2887
  %2898 = load i32, ptr %4, align 4, !tbaa !5
  %2899 = load i32, ptr %12, align 4, !tbaa !5
  %2900 = add nsw i32 %2899, -1
  %2901 = icmp slt i32 %2898, %2900
  br i1 %2901, label %2921, label %2902

2902:                                             ; preds = %2897
  %2903 = icmp eq i32 %2898, %2900
  br i1 %2903, label %2904, label %2937

2904:                                             ; preds = %2902
  store i32 0, ptr %4, align 4, !tbaa !5
  %2905 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2905, ptr %6, align 4, !tbaa !5
  br i1 %2813, label %2944, label %2906

2906:                                             ; preds = %2904, %2931
  %2907 = phi i64 [ %2935, %2931 ], [ 1, %2904 ]
  %2908 = getelementptr inbounds i32, ptr %4, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !5
  %2910 = getelementptr inbounds i32, ptr %12, i64 %2907
  %2911 = load i32, ptr %2910, align 4, !tbaa !5
  %2912 = add nsw i32 %2911, -1
  %2913 = icmp slt i32 %2909, %2912
  br i1 %2913, label %2914, label %2929

2914:                                             ; preds = %2906
  br i1 %2901, label %2921, label %2915

2915:                                             ; preds = %2914
  %2916 = getelementptr inbounds i32, ptr %7, i64 %2907
  %2917 = load i32, ptr %2916, align 4, !tbaa !5
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2907
  %2919 = load i32, ptr %2918, align 4, !tbaa !5
  %2920 = add nsw i32 %2919, %2917
  store i32 %2920, ptr %2918, align 4, !tbaa !5
  br label %2939

2921:                                             ; preds = %2897, %2914
  %2922 = phi i32 [ %2909, %2914 ], [ %2898, %2897 ]
  %2923 = phi ptr [ %2908, %2914 ], [ %4, %2897 ]
  %2924 = phi i64 [ %2907, %2914 ], [ 0, %2897 ]
  %2925 = add nsw i32 %2922, 1
  store i32 %2925, ptr %2923, align 4, !tbaa !5
  %2926 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2927 = load i32, ptr %2926, align 4, !tbaa !5
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2924
  br label %2939

2929:                                             ; preds = %2906
  %2930 = icmp eq i32 %2909, %2912
  br i1 %2930, label %2931, label %2937

2931:                                             ; preds = %2929
  store i32 0, ptr %2908, align 4, !tbaa !5
  %2932 = getelementptr inbounds i32, ptr %8, i64 %2907
  %2933 = load i32, ptr %2932, align 4, !tbaa !5
  %2934 = getelementptr inbounds i32, ptr %6, i64 %2907
  store i32 %2933, ptr %2934, align 4, !tbaa !5
  %2935 = add nuw nsw i64 %2907, 1
  %2936 = icmp eq i64 %2935, %2811
  br i1 %2936, label %2944, label %2906, !llvm.loop !297

2937:                                             ; preds = %2902, %2929
  %2938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2939:                                             ; preds = %2915, %2921
  %2940 = phi ptr [ %2928, %2921 ], [ %2908, %2915 ]
  %2941 = phi i32 [ %2927, %2921 ], [ 1, %2915 ]
  %2942 = load i32, ptr %2940, align 4, !tbaa !5
  %2943 = add nsw i32 %2942, %2941
  store i32 %2943, ptr %2940, align 4, !tbaa !5
  br label %2944

2944:                                             ; preds = %2931, %2939, %2904, %2887
  %2945 = icmp eq i32 %2896, %5
  br i1 %2945, label %5545, label %2814, !llvm.loop !298

2946:                                             ; preds = %2797, %3081
  %2947 = phi i32 [ 0, %2797 ], [ %3030, %3081 ]
  %2948 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2798, label %2949, label %3018

2949:                                             ; preds = %2946, %3008
  %2950 = phi i32 [ %3017, %3008 ], [ 0, %2946 ]
  %2951 = phi i64 [ %2959, %3008 ], [ %2802, %2946 ]
  %2952 = phi i64 [ %3016, %3008 ], [ %2801, %2946 ]
  %2953 = phi i32 [ %3014, %3008 ], [ %2948, %2946 ]
  %2954 = sub i32 %2800, %2950
  %2955 = tail call i32 @llvm.smin.i32(i32 %2954, i32 0)
  %2956 = sub i32 %2954, %2955
  %2957 = zext i32 %2956 to i64
  %2958 = add nuw nsw i64 %2957, 1
  %2959 = add nsw i64 %2951, -1
  %2960 = icmp ult i32 %2956, 31
  br i1 %2960, label %2996, label %2961

2961:                                             ; preds = %2949
  %2962 = and i64 %2958, 8589934560
  %2963 = sub i64 %2952, %2962
  br label %2964

2964:                                             ; preds = %2964, %2961
  %2965 = phi i64 [ 0, %2961 ], [ %2988, %2964 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2984, %2964 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2985, %2964 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2986, %2964 ]
  %2969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2987, %2964 ]
  %2970 = sub i64 %2952, %2965
  %2971 = getelementptr inbounds i32, ptr %11, i64 %2970
  %2972 = getelementptr inbounds i32, ptr %2971, i64 -7
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !5
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = getelementptr inbounds i32, ptr %2971, i64 -15
  %2976 = load <8 x i32>, ptr %2975, align 4, !tbaa !5
  %2977 = shufflevector <8 x i32> %2976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2978 = getelementptr inbounds i32, ptr %2971, i64 -23
  %2979 = load <8 x i32>, ptr %2978, align 4, !tbaa !5
  %2980 = shufflevector <8 x i32> %2979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2981 = getelementptr inbounds i32, ptr %2971, i64 -31
  %2982 = load <8 x i32>, ptr %2981, align 4, !tbaa !5
  %2983 = shufflevector <8 x i32> %2982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2984 = mul <8 x i32> %2974, %2966
  %2985 = mul <8 x i32> %2977, %2967
  %2986 = mul <8 x i32> %2980, %2968
  %2987 = mul <8 x i32> %2983, %2969
  %2988 = add nuw i64 %2965, 32
  %2989 = icmp eq i64 %2988, %2962
  br i1 %2989, label %2990, label %2964, !llvm.loop !299

2990:                                             ; preds = %2964
  %2991 = mul <8 x i32> %2985, %2984
  %2992 = mul <8 x i32> %2986, %2991
  %2993 = mul <8 x i32> %2987, %2992
  %2994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2993)
  %2995 = icmp eq i64 %2958, %2962
  br i1 %2995, label %3008, label %2996

2996:                                             ; preds = %2949, %2990
  %2997 = phi i64 [ %2952, %2949 ], [ %2963, %2990 ]
  %2998 = phi i32 [ 1, %2949 ], [ %2994, %2990 ]
  br label %2999

2999:                                             ; preds = %2996, %2999
  %3000 = phi i64 [ %3005, %2999 ], [ %2997, %2996 ]
  %3001 = phi i32 [ %3004, %2999 ], [ %2998, %2996 ]
  %3002 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3003 = load i32, ptr %3002, align 4, !tbaa !5
  %3004 = mul nsw i32 %3003, %3001
  %3005 = add nsw i64 %3000, -1
  %3006 = trunc i64 %3000 to i32
  %3007 = icmp sgt i32 %3006, 0
  br i1 %3007, label %2999, label %3008, !llvm.loop !300

3008:                                             ; preds = %2999, %2990
  %3009 = phi i32 [ %2994, %2990 ], [ %3004, %2999 ]
  %3010 = and i64 %2959, 4294967295
  %3011 = getelementptr inbounds i32, ptr %6, i64 %3010
  %3012 = load i32, ptr %3011, align 4, !tbaa !5
  %3013 = mul nsw i32 %3012, %3009
  %3014 = add nsw i32 %3013, %2953
  %3015 = icmp sgt i64 %2951, 2
  %3016 = add nsw i64 %2952, -1
  %3017 = add i32 %2950, 1
  br i1 %3015, label %2949, label %3018, !llvm.loop !301

3018:                                             ; preds = %3008, %2946
  %3019 = phi i32 [ %2948, %2946 ], [ %3014, %3008 ]
  %3020 = icmp slt i32 %3019, %5
  br i1 %3020, label %3023, label %3021

3021:                                             ; preds = %3018
  %3022 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3023:                                             ; preds = %3018
  %3024 = sext i32 %3019 to i64
  %3025 = getelementptr inbounds i32, ptr %2480, i64 %3024
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = load i32, ptr %2482, align 4, !tbaa !5
  %3028 = tail call i32 @llvm.abs.i32(i32 %3026, i1 true)
  %3029 = add nsw i32 %3027, %3028
  store i32 %3029, ptr %2482, align 4, !tbaa !5
  %3030 = add nuw nsw i32 %2947, 1
  br i1 %2799, label %3031, label %3081

3031:                                             ; preds = %3023
  %3032 = load i32, ptr %4, align 4, !tbaa !5
  %3033 = load i32, ptr %12, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3032, %3034
  br i1 %3035, label %3058, label %3036

3036:                                             ; preds = %3031
  %3037 = icmp eq i32 %3032, %3034
  br i1 %3037, label %3038, label %3074

3038:                                             ; preds = %3036
  store i32 0, ptr %4, align 4, !tbaa !5
  %3039 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3039, ptr %6, align 4, !tbaa !5
  br i1 %2804, label %3081, label %3040

3040:                                             ; preds = %3038, %3068
  %3041 = phi i64 [ %3072, %3068 ], [ 1, %3038 ]
  %3042 = getelementptr inbounds i32, ptr %4, i64 %3041
  %3043 = load i32, ptr %3042, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %12, i64 %3041
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, -1
  %3047 = icmp slt i32 %3043, %3046
  br i1 %3047, label %3048, label %3066

3048:                                             ; preds = %3040
  br i1 %3035, label %3058, label %3049

3049:                                             ; preds = %3048
  %3050 = shl i64 %3041, 32
  %3051 = add i64 %3050, -4294967296
  %3052 = ashr exact i64 %3051, 32
  %3053 = getelementptr inbounds i32, ptr %7, i64 %3052
  %3054 = load i32, ptr %3053, align 4, !tbaa !5
  %3055 = getelementptr inbounds i32, ptr %6, i64 %3041
  %3056 = load i32, ptr %3055, align 4, !tbaa !5
  %3057 = add nsw i32 %3056, %3054
  store i32 %3057, ptr %3055, align 4, !tbaa !5
  br label %3076

3058:                                             ; preds = %3031, %3048
  %3059 = phi i32 [ %3043, %3048 ], [ %3032, %3031 ]
  %3060 = phi ptr [ %3042, %3048 ], [ %4, %3031 ]
  %3061 = phi i64 [ %3041, %3048 ], [ 0, %3031 ]
  %3062 = add nsw i32 %3059, 1
  store i32 %3062, ptr %3060, align 4, !tbaa !5
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3061
  %3064 = load i32, ptr %3063, align 4, !tbaa !5
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3061
  br label %3076

3066:                                             ; preds = %3040
  %3067 = icmp eq i32 %3043, %3046
  br i1 %3067, label %3068, label %3074

3068:                                             ; preds = %3066
  store i32 0, ptr %3042, align 4, !tbaa !5
  %3069 = getelementptr inbounds i32, ptr %8, i64 %3041
  %3070 = load i32, ptr %3069, align 4, !tbaa !5
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3041
  store i32 %3070, ptr %3071, align 4, !tbaa !5
  %3072 = add nuw nsw i64 %3041, 1
  %3073 = icmp eq i64 %3072, %2802
  br i1 %3073, label %3081, label %3040, !llvm.loop !302

3074:                                             ; preds = %3036, %3066
  %3075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3076:                                             ; preds = %3049, %3058
  %3077 = phi ptr [ %3065, %3058 ], [ %3042, %3049 ]
  %3078 = phi i32 [ %3064, %3058 ], [ 1, %3049 ]
  %3079 = load i32, ptr %3077, align 4, !tbaa !5
  %3080 = add nsw i32 %3079, %3078
  store i32 %3080, ptr %3077, align 4, !tbaa !5
  br label %3081

3081:                                             ; preds = %3068, %3076, %3038, %3023
  %3082 = icmp eq i32 %3030, %5
  br i1 %3082, label %5545, label %2946, !llvm.loop !303

3083:                                             ; preds = %2487
  %3084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3085:                                             ; preds = %18
  %3086 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3087 = load ptr, ptr %3086, align 8, !tbaa !9
  %3088 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3089 = load ptr, ptr %3088, align 8, !tbaa !9
  store i64 0, ptr %3089, align 8, !tbaa !120
  %3090 = icmp eq i32 %13, 0
  br i1 %3090, label %3091, label %3095

3091:                                             ; preds = %3085
  %3092 = load i32, ptr %3087, align 4, !tbaa !5
  %3093 = tail call i32 @llvm.abs.i32(i32 %3092, i1 false)
  %3094 = zext i32 %3093 to i64
  store i64 %3094, ptr %3089, align 8, !tbaa !120
  br label %5545

3095:                                             ; preds = %3085
  switch i32 %1, label %3693 [
    i32 1, label %3096
    i32 0, label %3399
  ]

3096:                                             ; preds = %3095
  %3097 = getelementptr inbounds i32, ptr %3, i64 %19
  %3098 = load i32, ptr %3097, align 4, !tbaa !5
  %3099 = icmp eq i32 %3098, 0
  %3100 = icmp sgt i32 %5, 0
  br i1 %3099, label %3110, label %3101

3101:                                             ; preds = %3096
  br i1 %3100, label %3102, label %5545

3102:                                             ; preds = %3101
  %3103 = icmp sgt i32 %13, 1
  %3104 = icmp sgt i32 %13, 0
  %3105 = add i32 %13, -2
  %3106 = zext i32 %3105 to i64
  %3107 = zext i32 %13 to i64
  %3108 = add nuw i32 %5, 1
  %3109 = icmp eq i32 %13, 1
  br label %3257

3110:                                             ; preds = %3096
  br i1 %3100, label %3111, label %5545

3111:                                             ; preds = %3110
  %3112 = icmp sgt i32 %13, 1
  %3113 = icmp sgt i32 %13, 0
  %3114 = add i32 %13, -2
  %3115 = zext i32 %3114 to i64
  %3116 = zext i32 %13 to i64
  %3117 = add nuw i32 %5, 1
  %3118 = icmp eq i32 %13, 1
  br label %3119

3119:                                             ; preds = %3111, %3255
  %3120 = phi i64 [ 0, %3111 ], [ %3205, %3255 ]
  %3121 = phi i32 [ 0, %3111 ], [ %3207, %3255 ]
  %3122 = phi double [ 0.000000e+00, %3111 ], [ %3206, %3255 ]
  %3123 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3112, label %3124, label %3193

3124:                                             ; preds = %3119, %3183
  %3125 = phi i32 [ %3192, %3183 ], [ 0, %3119 ]
  %3126 = phi i64 [ %3134, %3183 ], [ %3116, %3119 ]
  %3127 = phi i64 [ %3191, %3183 ], [ %3115, %3119 ]
  %3128 = phi i32 [ %3189, %3183 ], [ %3123, %3119 ]
  %3129 = sub i32 %3114, %3125
  %3130 = tail call i32 @llvm.smin.i32(i32 %3129, i32 0)
  %3131 = sub i32 %3129, %3130
  %3132 = zext i32 %3131 to i64
  %3133 = add nuw nsw i64 %3132, 1
  %3134 = add nsw i64 %3126, -1
  %3135 = icmp ult i32 %3131, 31
  br i1 %3135, label %3171, label %3136

3136:                                             ; preds = %3124
  %3137 = and i64 %3133, 8589934560
  %3138 = sub i64 %3127, %3137
  br label %3139

3139:                                             ; preds = %3139, %3136
  %3140 = phi i64 [ 0, %3136 ], [ %3163, %3139 ]
  %3141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3159, %3139 ]
  %3142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3160, %3139 ]
  %3143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3161, %3139 ]
  %3144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3162, %3139 ]
  %3145 = sub i64 %3127, %3140
  %3146 = getelementptr inbounds i32, ptr %9, i64 %3145
  %3147 = getelementptr inbounds i32, ptr %3146, i64 -7
  %3148 = load <8 x i32>, ptr %3147, align 4, !tbaa !5
  %3149 = shufflevector <8 x i32> %3148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3150 = getelementptr inbounds i32, ptr %3146, i64 -15
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !5
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = getelementptr inbounds i32, ptr %3146, i64 -23
  %3154 = load <8 x i32>, ptr %3153, align 4, !tbaa !5
  %3155 = shufflevector <8 x i32> %3154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3156 = getelementptr inbounds i32, ptr %3146, i64 -31
  %3157 = load <8 x i32>, ptr %3156, align 4, !tbaa !5
  %3158 = shufflevector <8 x i32> %3157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3159 = mul <8 x i32> %3149, %3141
  %3160 = mul <8 x i32> %3152, %3142
  %3161 = mul <8 x i32> %3155, %3143
  %3162 = mul <8 x i32> %3158, %3144
  %3163 = add nuw i64 %3140, 32
  %3164 = icmp eq i64 %3163, %3137
  br i1 %3164, label %3165, label %3139, !llvm.loop !304

3165:                                             ; preds = %3139
  %3166 = mul <8 x i32> %3160, %3159
  %3167 = mul <8 x i32> %3161, %3166
  %3168 = mul <8 x i32> %3162, %3167
  %3169 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3168)
  %3170 = icmp eq i64 %3133, %3137
  br i1 %3170, label %3183, label %3171

3171:                                             ; preds = %3124, %3165
  %3172 = phi i64 [ %3127, %3124 ], [ %3138, %3165 ]
  %3173 = phi i32 [ 1, %3124 ], [ %3169, %3165 ]
  br label %3174

3174:                                             ; preds = %3171, %3174
  %3175 = phi i64 [ %3180, %3174 ], [ %3172, %3171 ]
  %3176 = phi i32 [ %3179, %3174 ], [ %3173, %3171 ]
  %3177 = getelementptr inbounds i32, ptr %9, i64 %3175
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = mul nsw i32 %3178, %3176
  %3180 = add nsw i64 %3175, -1
  %3181 = trunc i64 %3175 to i32
  %3182 = icmp sgt i32 %3181, 0
  br i1 %3182, label %3174, label %3183, !llvm.loop !305

3183:                                             ; preds = %3174, %3165
  %3184 = phi i32 [ %3169, %3165 ], [ %3179, %3174 ]
  %3185 = and i64 %3134, 4294967295
  %3186 = getelementptr inbounds i32, ptr %6, i64 %3185
  %3187 = load i32, ptr %3186, align 4, !tbaa !5
  %3188 = mul nsw i32 %3187, %3184
  %3189 = add nsw i32 %3188, %3128
  %3190 = icmp sgt i64 %3126, 2
  %3191 = add nsw i64 %3127, -1
  %3192 = add i32 %3125, 1
  br i1 %3190, label %3124, label %3193, !llvm.loop !306

3193:                                             ; preds = %3183, %3119
  %3194 = phi i32 [ %3123, %3119 ], [ %3189, %3183 ]
  %3195 = sext i32 %3194 to i64
  %3196 = getelementptr inbounds double, ptr %2, i64 %3195
  %3197 = load double, ptr %3196, align 8, !tbaa !18
  %3198 = getelementptr inbounds i32, ptr %3087, i64 %3195
  %3199 = load i32, ptr %3198, align 4, !tbaa !5
  %3200 = sitofp i64 %3120 to double
  %3201 = sitofp i32 %3199 to double
  %3202 = fmul fast double %3197, %3201
  %3203 = tail call fast double @llvm.fabs.f64(double %3202)
  %3204 = fadd fast double %3203, %3200
  %3205 = fptosi double %3204 to i64
  %3206 = fadd fast double %3197, %3122
  %3207 = add nuw nsw i32 %3121, 1
  br i1 %3113, label %3208, label %3255

3208:                                             ; preds = %3193
  %3209 = load i32, ptr %4, align 4, !tbaa !5
  %3210 = load i32, ptr %12, align 4, !tbaa !5
  %3211 = add nsw i32 %3210, -1
  %3212 = icmp slt i32 %3209, %3211
  br i1 %3212, label %3232, label %3213

3213:                                             ; preds = %3208
  %3214 = icmp eq i32 %3209, %3211
  br i1 %3214, label %3215, label %3248

3215:                                             ; preds = %3213
  store i32 0, ptr %4, align 4, !tbaa !5
  %3216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3216, ptr %6, align 4, !tbaa !5
  br i1 %3118, label %3255, label %3217

3217:                                             ; preds = %3215, %3242
  %3218 = phi i64 [ %3246, %3242 ], [ 1, %3215 ]
  %3219 = getelementptr inbounds i32, ptr %4, i64 %3218
  %3220 = load i32, ptr %3219, align 4, !tbaa !5
  %3221 = getelementptr inbounds i32, ptr %12, i64 %3218
  %3222 = load i32, ptr %3221, align 4, !tbaa !5
  %3223 = add nsw i32 %3222, -1
  %3224 = icmp slt i32 %3220, %3223
  br i1 %3224, label %3225, label %3240

3225:                                             ; preds = %3217
  br i1 %3212, label %3232, label %3226

3226:                                             ; preds = %3225
  %3227 = getelementptr inbounds i32, ptr %7, i64 %3218
  %3228 = load i32, ptr %3227, align 4, !tbaa !5
  %3229 = getelementptr inbounds i32, ptr %6, i64 %3218
  %3230 = load i32, ptr %3229, align 4, !tbaa !5
  %3231 = add nsw i32 %3230, %3228
  store i32 %3231, ptr %3229, align 4, !tbaa !5
  br label %3250

3232:                                             ; preds = %3208, %3225
  %3233 = phi i32 [ %3220, %3225 ], [ %3209, %3208 ]
  %3234 = phi ptr [ %3219, %3225 ], [ %4, %3208 ]
  %3235 = phi i64 [ %3218, %3225 ], [ 0, %3208 ]
  %3236 = add nsw i32 %3233, 1
  store i32 %3236, ptr %3234, align 4, !tbaa !5
  %3237 = getelementptr inbounds i32, ptr %7, i64 %3235
  %3238 = load i32, ptr %3237, align 4, !tbaa !5
  %3239 = getelementptr inbounds i32, ptr %6, i64 %3235
  br label %3250

3240:                                             ; preds = %3217
  %3241 = icmp eq i32 %3220, %3223
  br i1 %3241, label %3242, label %3248

3242:                                             ; preds = %3240
  store i32 0, ptr %3219, align 4, !tbaa !5
  %3243 = getelementptr inbounds i32, ptr %8, i64 %3218
  %3244 = load i32, ptr %3243, align 4, !tbaa !5
  %3245 = getelementptr inbounds i32, ptr %6, i64 %3218
  store i32 %3244, ptr %3245, align 4, !tbaa !5
  %3246 = add nuw nsw i64 %3218, 1
  %3247 = icmp eq i64 %3246, %3116
  br i1 %3247, label %3255, label %3217, !llvm.loop !307

3248:                                             ; preds = %3213, %3240
  store i64 %3205, ptr %3089, align 8, !tbaa !120
  %3249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3250:                                             ; preds = %3226, %3232
  %3251 = phi ptr [ %3239, %3232 ], [ %3219, %3226 ]
  %3252 = phi i32 [ %3238, %3232 ], [ 1, %3226 ]
  %3253 = load i32, ptr %3251, align 4, !tbaa !5
  %3254 = add nsw i32 %3253, %3252
  store i32 %3254, ptr %3251, align 4, !tbaa !5
  br label %3255

3255:                                             ; preds = %3242, %3250, %3215, %3193
  %3256 = icmp eq i32 %3207, %5
  br i1 %3256, label %5539, label %3119, !llvm.loop !308

3257:                                             ; preds = %3102, %3397
  %3258 = phi i64 [ 0, %3102 ], [ %3345, %3397 ]
  %3259 = phi i32 [ 0, %3102 ], [ %3346, %3397 ]
  %3260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3103, label %3261, label %3330

3261:                                             ; preds = %3257, %3320
  %3262 = phi i32 [ %3329, %3320 ], [ 0, %3257 ]
  %3263 = phi i64 [ %3271, %3320 ], [ %3107, %3257 ]
  %3264 = phi i64 [ %3328, %3320 ], [ %3106, %3257 ]
  %3265 = phi i32 [ %3326, %3320 ], [ %3260, %3257 ]
  %3266 = sub i32 %3105, %3262
  %3267 = tail call i32 @llvm.smin.i32(i32 %3266, i32 0)
  %3268 = sub i32 %3266, %3267
  %3269 = zext i32 %3268 to i64
  %3270 = add nuw nsw i64 %3269, 1
  %3271 = add nsw i64 %3263, -1
  %3272 = icmp ult i32 %3268, 31
  br i1 %3272, label %3308, label %3273

3273:                                             ; preds = %3261
  %3274 = and i64 %3270, 8589934560
  %3275 = sub i64 %3264, %3274
  br label %3276

3276:                                             ; preds = %3276, %3273
  %3277 = phi i64 [ 0, %3273 ], [ %3300, %3276 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3296, %3276 ]
  %3279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3297, %3276 ]
  %3280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3298, %3276 ]
  %3281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3299, %3276 ]
  %3282 = sub i64 %3264, %3277
  %3283 = getelementptr inbounds i32, ptr %11, i64 %3282
  %3284 = getelementptr inbounds i32, ptr %3283, i64 -7
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3283, i64 -15
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !5
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3283, i64 -23
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !5
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = getelementptr inbounds i32, ptr %3283, i64 -31
  %3294 = load <8 x i32>, ptr %3293, align 4, !tbaa !5
  %3295 = shufflevector <8 x i32> %3294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3296 = mul <8 x i32> %3286, %3278
  %3297 = mul <8 x i32> %3289, %3279
  %3298 = mul <8 x i32> %3292, %3280
  %3299 = mul <8 x i32> %3295, %3281
  %3300 = add nuw i64 %3277, 32
  %3301 = icmp eq i64 %3300, %3274
  br i1 %3301, label %3302, label %3276, !llvm.loop !309

3302:                                             ; preds = %3276
  %3303 = mul <8 x i32> %3297, %3296
  %3304 = mul <8 x i32> %3298, %3303
  %3305 = mul <8 x i32> %3299, %3304
  %3306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3305)
  %3307 = icmp eq i64 %3270, %3274
  br i1 %3307, label %3320, label %3308

3308:                                             ; preds = %3261, %3302
  %3309 = phi i64 [ %3264, %3261 ], [ %3275, %3302 ]
  %3310 = phi i32 [ 1, %3261 ], [ %3306, %3302 ]
  br label %3311

3311:                                             ; preds = %3308, %3311
  %3312 = phi i64 [ %3317, %3311 ], [ %3309, %3308 ]
  %3313 = phi i32 [ %3316, %3311 ], [ %3310, %3308 ]
  %3314 = getelementptr inbounds i32, ptr %11, i64 %3312
  %3315 = load i32, ptr %3314, align 4, !tbaa !5
  %3316 = mul nsw i32 %3315, %3313
  %3317 = add nsw i64 %3312, -1
  %3318 = trunc i64 %3312 to i32
  %3319 = icmp sgt i32 %3318, 0
  br i1 %3319, label %3311, label %3320, !llvm.loop !310

3320:                                             ; preds = %3311, %3302
  %3321 = phi i32 [ %3306, %3302 ], [ %3316, %3311 ]
  %3322 = and i64 %3271, 4294967295
  %3323 = getelementptr inbounds i32, ptr %6, i64 %3322
  %3324 = load i32, ptr %3323, align 4, !tbaa !5
  %3325 = mul nsw i32 %3324, %3321
  %3326 = add nsw i32 %3325, %3265
  %3327 = icmp sgt i64 %3263, 2
  %3328 = add nsw i64 %3264, -1
  %3329 = add i32 %3262, 1
  br i1 %3327, label %3261, label %3330, !llvm.loop !311

3330:                                             ; preds = %3320, %3257
  %3331 = phi i32 [ %3260, %3257 ], [ %3326, %3320 ]
  %3332 = icmp slt i32 %3331, %5
  br i1 %3332, label %3335, label %3333

3333:                                             ; preds = %3330
  %3334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3335:                                             ; preds = %3330
  %3336 = sext i32 %3331 to i64
  %3337 = getelementptr inbounds i32, ptr %3087, i64 %3336
  %3338 = load i32, ptr %3337, align 4, !tbaa !5
  %3339 = sitofp i64 %3258 to double
  %3340 = sitofp i32 %3338 to double
  %3341 = icmp slt i32 %3338, 0
  %3342 = fneg fast double %3340
  %3343 = select fast i1 %3341, double %3342, double %3340
  %3344 = fadd fast double %3343, %3339
  %3345 = fptosi double %3344 to i64
  store i64 %3345, ptr %3089, align 8, !tbaa !120
  %3346 = add nuw nsw i32 %3259, 1
  br i1 %3104, label %3347, label %3397

3347:                                             ; preds = %3335
  %3348 = load i32, ptr %4, align 4, !tbaa !5
  %3349 = load i32, ptr %12, align 4, !tbaa !5
  %3350 = add nsw i32 %3349, -1
  %3351 = icmp slt i32 %3348, %3350
  br i1 %3351, label %3374, label %3352

3352:                                             ; preds = %3347
  %3353 = icmp eq i32 %3348, %3350
  br i1 %3353, label %3354, label %3390

3354:                                             ; preds = %3352
  store i32 0, ptr %4, align 4, !tbaa !5
  %3355 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3355, ptr %6, align 4, !tbaa !5
  br i1 %3109, label %3397, label %3356

3356:                                             ; preds = %3354, %3384
  %3357 = phi i64 [ %3388, %3384 ], [ 1, %3354 ]
  %3358 = getelementptr inbounds i32, ptr %4, i64 %3357
  %3359 = load i32, ptr %3358, align 4, !tbaa !5
  %3360 = getelementptr inbounds i32, ptr %12, i64 %3357
  %3361 = load i32, ptr %3360, align 4, !tbaa !5
  %3362 = add nsw i32 %3361, -1
  %3363 = icmp slt i32 %3359, %3362
  br i1 %3363, label %3364, label %3382

3364:                                             ; preds = %3356
  br i1 %3351, label %3374, label %3365

3365:                                             ; preds = %3364
  %3366 = shl i64 %3357, 32
  %3367 = add i64 %3366, -4294967296
  %3368 = ashr exact i64 %3367, 32
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3368
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3357
  %3372 = load i32, ptr %3371, align 4, !tbaa !5
  %3373 = add nsw i32 %3372, %3370
  store i32 %3373, ptr %3371, align 4, !tbaa !5
  br label %3392

3374:                                             ; preds = %3347, %3364
  %3375 = phi i32 [ %3359, %3364 ], [ %3348, %3347 ]
  %3376 = phi ptr [ %3358, %3364 ], [ %4, %3347 ]
  %3377 = phi i64 [ %3357, %3364 ], [ 0, %3347 ]
  %3378 = add nsw i32 %3375, 1
  store i32 %3378, ptr %3376, align 4, !tbaa !5
  %3379 = getelementptr inbounds i32, ptr %7, i64 %3377
  %3380 = load i32, ptr %3379, align 4, !tbaa !5
  %3381 = getelementptr inbounds i32, ptr %6, i64 %3377
  br label %3392

3382:                                             ; preds = %3356
  %3383 = icmp eq i32 %3359, %3362
  br i1 %3383, label %3384, label %3390

3384:                                             ; preds = %3382
  store i32 0, ptr %3358, align 4, !tbaa !5
  %3385 = getelementptr inbounds i32, ptr %8, i64 %3357
  %3386 = load i32, ptr %3385, align 4, !tbaa !5
  %3387 = getelementptr inbounds i32, ptr %6, i64 %3357
  store i32 %3386, ptr %3387, align 4, !tbaa !5
  %3388 = add nuw nsw i64 %3357, 1
  %3389 = icmp eq i64 %3388, %3107
  br i1 %3389, label %3397, label %3356, !llvm.loop !312

3390:                                             ; preds = %3352, %3382
  %3391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3392:                                             ; preds = %3365, %3374
  %3393 = phi ptr [ %3381, %3374 ], [ %3358, %3365 ]
  %3394 = phi i32 [ %3380, %3374 ], [ 1, %3365 ]
  %3395 = load i32, ptr %3393, align 4, !tbaa !5
  %3396 = add nsw i32 %3395, %3394
  store i32 %3396, ptr %3393, align 4, !tbaa !5
  br label %3397

3397:                                             ; preds = %3384, %3392, %3354, %3335
  %3398 = icmp eq i32 %3346, %5
  br i1 %3398, label %5545, label %3257, !llvm.loop !313

3399:                                             ; preds = %3095
  %3400 = getelementptr inbounds i32, ptr %3, i64 %19
  %3401 = load i32, ptr %3400, align 4, !tbaa !5
  %3402 = icmp eq i32 %3401, 0
  %3403 = icmp sgt i32 %5, 0
  br i1 %3402, label %3413, label %3404

3404:                                             ; preds = %3399
  br i1 %3403, label %3405, label %5545

3405:                                             ; preds = %3404
  %3406 = icmp sgt i32 %13, 1
  %3407 = icmp sgt i32 %13, 0
  %3408 = add i32 %13, -2
  %3409 = zext i32 %3408 to i64
  %3410 = zext i32 %13 to i64
  %3411 = add nuw i32 %5, 1
  %3412 = icmp eq i32 %13, 1
  br label %3555

3413:                                             ; preds = %3399
  br i1 %3403, label %3414, label %5545

3414:                                             ; preds = %3413
  %3415 = icmp sgt i32 %13, 1
  %3416 = icmp sgt i32 %13, 0
  %3417 = add i32 %13, -2
  %3418 = zext i32 %3417 to i64
  %3419 = zext i32 %13 to i64
  %3420 = add nuw i32 %5, 1
  %3421 = icmp eq i32 %13, 1
  br label %3422

3422:                                             ; preds = %3414, %3553
  %3423 = phi i64 [ 0, %3414 ], [ %3503, %3553 ]
  %3424 = phi i32 [ 0, %3414 ], [ %3505, %3553 ]
  %3425 = phi double [ 0.000000e+00, %3414 ], [ %3504, %3553 ]
  %3426 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3415, label %3427, label %3496

3427:                                             ; preds = %3422, %3486
  %3428 = phi i32 [ %3495, %3486 ], [ 0, %3422 ]
  %3429 = phi i64 [ %3437, %3486 ], [ %3419, %3422 ]
  %3430 = phi i64 [ %3494, %3486 ], [ %3418, %3422 ]
  %3431 = phi i32 [ %3492, %3486 ], [ %3426, %3422 ]
  %3432 = sub i32 %3417, %3428
  %3433 = tail call i32 @llvm.smin.i32(i32 %3432, i32 0)
  %3434 = sub i32 %3432, %3433
  %3435 = zext i32 %3434 to i64
  %3436 = add nuw nsw i64 %3435, 1
  %3437 = add nsw i64 %3429, -1
  %3438 = icmp ult i32 %3434, 31
  br i1 %3438, label %3474, label %3439

3439:                                             ; preds = %3427
  %3440 = and i64 %3436, 8589934560
  %3441 = sub i64 %3430, %3440
  br label %3442

3442:                                             ; preds = %3442, %3439
  %3443 = phi i64 [ 0, %3439 ], [ %3466, %3442 ]
  %3444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3462, %3442 ]
  %3445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3463, %3442 ]
  %3446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3464, %3442 ]
  %3447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3465, %3442 ]
  %3448 = sub i64 %3430, %3443
  %3449 = getelementptr inbounds i32, ptr %9, i64 %3448
  %3450 = getelementptr inbounds i32, ptr %3449, i64 -7
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !5
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3449, i64 -15
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !5
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = getelementptr inbounds i32, ptr %3449, i64 -23
  %3457 = load <8 x i32>, ptr %3456, align 4, !tbaa !5
  %3458 = shufflevector <8 x i32> %3457, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3459 = getelementptr inbounds i32, ptr %3449, i64 -31
  %3460 = load <8 x i32>, ptr %3459, align 4, !tbaa !5
  %3461 = shufflevector <8 x i32> %3460, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3462 = mul <8 x i32> %3452, %3444
  %3463 = mul <8 x i32> %3455, %3445
  %3464 = mul <8 x i32> %3458, %3446
  %3465 = mul <8 x i32> %3461, %3447
  %3466 = add nuw i64 %3443, 32
  %3467 = icmp eq i64 %3466, %3440
  br i1 %3467, label %3468, label %3442, !llvm.loop !314

3468:                                             ; preds = %3442
  %3469 = mul <8 x i32> %3463, %3462
  %3470 = mul <8 x i32> %3464, %3469
  %3471 = mul <8 x i32> %3465, %3470
  %3472 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3471)
  %3473 = icmp eq i64 %3436, %3440
  br i1 %3473, label %3486, label %3474

3474:                                             ; preds = %3427, %3468
  %3475 = phi i64 [ %3430, %3427 ], [ %3441, %3468 ]
  %3476 = phi i32 [ 1, %3427 ], [ %3472, %3468 ]
  br label %3477

3477:                                             ; preds = %3474, %3477
  %3478 = phi i64 [ %3483, %3477 ], [ %3475, %3474 ]
  %3479 = phi i32 [ %3482, %3477 ], [ %3476, %3474 ]
  %3480 = getelementptr inbounds i32, ptr %9, i64 %3478
  %3481 = load i32, ptr %3480, align 4, !tbaa !5
  %3482 = mul nsw i32 %3481, %3479
  %3483 = add nsw i64 %3478, -1
  %3484 = trunc i64 %3478 to i32
  %3485 = icmp sgt i32 %3484, 0
  br i1 %3485, label %3477, label %3486, !llvm.loop !315

3486:                                             ; preds = %3477, %3468
  %3487 = phi i32 [ %3472, %3468 ], [ %3482, %3477 ]
  %3488 = and i64 %3437, 4294967295
  %3489 = getelementptr inbounds i32, ptr %6, i64 %3488
  %3490 = load i32, ptr %3489, align 4, !tbaa !5
  %3491 = mul nsw i32 %3490, %3487
  %3492 = add nsw i32 %3491, %3431
  %3493 = icmp sgt i64 %3429, 2
  %3494 = add nsw i64 %3430, -1
  %3495 = add i32 %3428, 1
  br i1 %3493, label %3427, label %3496, !llvm.loop !316

3496:                                             ; preds = %3486, %3422
  %3497 = phi i32 [ %3426, %3422 ], [ %3492, %3486 ]
  %3498 = sext i32 %3497 to i64
  %3499 = getelementptr inbounds i32, ptr %3087, i64 %3498
  %3500 = load i32, ptr %3499, align 4, !tbaa !5
  %3501 = tail call i32 @llvm.abs.i32(i32 %3500, i1 false)
  %3502 = zext i32 %3501 to i64
  %3503 = add nuw nsw i64 %3423, %3502
  %3504 = fadd fast double %3425, 1.000000e+00
  %3505 = add nuw nsw i32 %3424, 1
  br i1 %3416, label %3506, label %3553

3506:                                             ; preds = %3496
  %3507 = load i32, ptr %4, align 4, !tbaa !5
  %3508 = load i32, ptr %12, align 4, !tbaa !5
  %3509 = add nsw i32 %3508, -1
  %3510 = icmp slt i32 %3507, %3509
  br i1 %3510, label %3530, label %3511

3511:                                             ; preds = %3506
  %3512 = icmp eq i32 %3507, %3509
  br i1 %3512, label %3513, label %3546

3513:                                             ; preds = %3511
  store i32 0, ptr %4, align 4, !tbaa !5
  %3514 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3514, ptr %6, align 4, !tbaa !5
  br i1 %3421, label %3553, label %3515

3515:                                             ; preds = %3513, %3540
  %3516 = phi i64 [ %3544, %3540 ], [ 1, %3513 ]
  %3517 = getelementptr inbounds i32, ptr %4, i64 %3516
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = getelementptr inbounds i32, ptr %12, i64 %3516
  %3520 = load i32, ptr %3519, align 4, !tbaa !5
  %3521 = add nsw i32 %3520, -1
  %3522 = icmp slt i32 %3518, %3521
  br i1 %3522, label %3523, label %3538

3523:                                             ; preds = %3515
  br i1 %3510, label %3530, label %3524

3524:                                             ; preds = %3523
  %3525 = getelementptr inbounds i32, ptr %7, i64 %3516
  %3526 = load i32, ptr %3525, align 4, !tbaa !5
  %3527 = getelementptr inbounds i32, ptr %6, i64 %3516
  %3528 = load i32, ptr %3527, align 4, !tbaa !5
  %3529 = add nsw i32 %3528, %3526
  store i32 %3529, ptr %3527, align 4, !tbaa !5
  br label %3548

3530:                                             ; preds = %3506, %3523
  %3531 = phi i32 [ %3518, %3523 ], [ %3507, %3506 ]
  %3532 = phi ptr [ %3517, %3523 ], [ %4, %3506 ]
  %3533 = phi i64 [ %3516, %3523 ], [ 0, %3506 ]
  %3534 = add nsw i32 %3531, 1
  store i32 %3534, ptr %3532, align 4, !tbaa !5
  %3535 = getelementptr inbounds i32, ptr %7, i64 %3533
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = getelementptr inbounds i32, ptr %6, i64 %3533
  br label %3548

3538:                                             ; preds = %3515
  %3539 = icmp eq i32 %3518, %3521
  br i1 %3539, label %3540, label %3546

3540:                                             ; preds = %3538
  store i32 0, ptr %3517, align 4, !tbaa !5
  %3541 = getelementptr inbounds i32, ptr %8, i64 %3516
  %3542 = load i32, ptr %3541, align 4, !tbaa !5
  %3543 = getelementptr inbounds i32, ptr %6, i64 %3516
  store i32 %3542, ptr %3543, align 4, !tbaa !5
  %3544 = add nuw nsw i64 %3516, 1
  %3545 = icmp eq i64 %3544, %3419
  br i1 %3545, label %3553, label %3515, !llvm.loop !317

3546:                                             ; preds = %3511, %3538
  store i64 %3503, ptr %3089, align 8, !tbaa !120
  %3547 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3548:                                             ; preds = %3524, %3530
  %3549 = phi ptr [ %3537, %3530 ], [ %3517, %3524 ]
  %3550 = phi i32 [ %3536, %3530 ], [ 1, %3524 ]
  %3551 = load i32, ptr %3549, align 4, !tbaa !5
  %3552 = add nsw i32 %3551, %3550
  store i32 %3552, ptr %3549, align 4, !tbaa !5
  br label %3553

3553:                                             ; preds = %3540, %3548, %3513, %3496
  %3554 = icmp eq i32 %3505, %5
  br i1 %3554, label %5540, label %3422, !llvm.loop !318

3555:                                             ; preds = %3405, %3691
  %3556 = phi i64 [ 0, %3405 ], [ %3639, %3691 ]
  %3557 = phi i32 [ 0, %3405 ], [ %3640, %3691 ]
  %3558 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3406, label %3559, label %3628

3559:                                             ; preds = %3555, %3618
  %3560 = phi i32 [ %3627, %3618 ], [ 0, %3555 ]
  %3561 = phi i64 [ %3569, %3618 ], [ %3410, %3555 ]
  %3562 = phi i64 [ %3626, %3618 ], [ %3409, %3555 ]
  %3563 = phi i32 [ %3624, %3618 ], [ %3558, %3555 ]
  %3564 = sub i32 %3408, %3560
  %3565 = tail call i32 @llvm.smin.i32(i32 %3564, i32 0)
  %3566 = sub i32 %3564, %3565
  %3567 = zext i32 %3566 to i64
  %3568 = add nuw nsw i64 %3567, 1
  %3569 = add nsw i64 %3561, -1
  %3570 = icmp ult i32 %3566, 31
  br i1 %3570, label %3606, label %3571

3571:                                             ; preds = %3559
  %3572 = and i64 %3568, 8589934560
  %3573 = sub i64 %3562, %3572
  br label %3574

3574:                                             ; preds = %3574, %3571
  %3575 = phi i64 [ 0, %3571 ], [ %3598, %3574 ]
  %3576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3594, %3574 ]
  %3577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3595, %3574 ]
  %3578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3596, %3574 ]
  %3579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3597, %3574 ]
  %3580 = sub i64 %3562, %3575
  %3581 = getelementptr inbounds i32, ptr %11, i64 %3580
  %3582 = getelementptr inbounds i32, ptr %3581, i64 -7
  %3583 = load <8 x i32>, ptr %3582, align 4, !tbaa !5
  %3584 = shufflevector <8 x i32> %3583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3585 = getelementptr inbounds i32, ptr %3581, i64 -15
  %3586 = load <8 x i32>, ptr %3585, align 4, !tbaa !5
  %3587 = shufflevector <8 x i32> %3586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3588 = getelementptr inbounds i32, ptr %3581, i64 -23
  %3589 = load <8 x i32>, ptr %3588, align 4, !tbaa !5
  %3590 = shufflevector <8 x i32> %3589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3591 = getelementptr inbounds i32, ptr %3581, i64 -31
  %3592 = load <8 x i32>, ptr %3591, align 4, !tbaa !5
  %3593 = shufflevector <8 x i32> %3592, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3594 = mul <8 x i32> %3584, %3576
  %3595 = mul <8 x i32> %3587, %3577
  %3596 = mul <8 x i32> %3590, %3578
  %3597 = mul <8 x i32> %3593, %3579
  %3598 = add nuw i64 %3575, 32
  %3599 = icmp eq i64 %3598, %3572
  br i1 %3599, label %3600, label %3574, !llvm.loop !319

3600:                                             ; preds = %3574
  %3601 = mul <8 x i32> %3595, %3594
  %3602 = mul <8 x i32> %3596, %3601
  %3603 = mul <8 x i32> %3597, %3602
  %3604 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3603)
  %3605 = icmp eq i64 %3568, %3572
  br i1 %3605, label %3618, label %3606

3606:                                             ; preds = %3559, %3600
  %3607 = phi i64 [ %3562, %3559 ], [ %3573, %3600 ]
  %3608 = phi i32 [ 1, %3559 ], [ %3604, %3600 ]
  br label %3609

3609:                                             ; preds = %3606, %3609
  %3610 = phi i64 [ %3615, %3609 ], [ %3607, %3606 ]
  %3611 = phi i32 [ %3614, %3609 ], [ %3608, %3606 ]
  %3612 = getelementptr inbounds i32, ptr %11, i64 %3610
  %3613 = load i32, ptr %3612, align 4, !tbaa !5
  %3614 = mul nsw i32 %3613, %3611
  %3615 = add nsw i64 %3610, -1
  %3616 = trunc i64 %3610 to i32
  %3617 = icmp sgt i32 %3616, 0
  br i1 %3617, label %3609, label %3618, !llvm.loop !320

3618:                                             ; preds = %3609, %3600
  %3619 = phi i32 [ %3604, %3600 ], [ %3614, %3609 ]
  %3620 = and i64 %3569, 4294967295
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3620
  %3622 = load i32, ptr %3621, align 4, !tbaa !5
  %3623 = mul nsw i32 %3622, %3619
  %3624 = add nsw i32 %3623, %3563
  %3625 = icmp sgt i64 %3561, 2
  %3626 = add nsw i64 %3562, -1
  %3627 = add i32 %3560, 1
  br i1 %3625, label %3559, label %3628, !llvm.loop !321

3628:                                             ; preds = %3618, %3555
  %3629 = phi i32 [ %3558, %3555 ], [ %3624, %3618 ]
  %3630 = icmp slt i32 %3629, %5
  br i1 %3630, label %3633, label %3631

3631:                                             ; preds = %3628
  %3632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3633:                                             ; preds = %3628
  %3634 = sext i32 %3629 to i64
  %3635 = getelementptr inbounds i32, ptr %3087, i64 %3634
  %3636 = load i32, ptr %3635, align 4, !tbaa !5
  %3637 = tail call i32 @llvm.abs.i32(i32 %3636, i1 false)
  %3638 = zext i32 %3637 to i64
  %3639 = add nuw nsw i64 %3556, %3638
  store i64 %3639, ptr %3089, align 8, !tbaa !120
  %3640 = add nuw nsw i32 %3557, 1
  br i1 %3407, label %3641, label %3691

3641:                                             ; preds = %3633
  %3642 = load i32, ptr %4, align 4, !tbaa !5
  %3643 = load i32, ptr %12, align 4, !tbaa !5
  %3644 = add nsw i32 %3643, -1
  %3645 = icmp slt i32 %3642, %3644
  br i1 %3645, label %3668, label %3646

3646:                                             ; preds = %3641
  %3647 = icmp eq i32 %3642, %3644
  br i1 %3647, label %3648, label %3684

3648:                                             ; preds = %3646
  store i32 0, ptr %4, align 4, !tbaa !5
  %3649 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3649, ptr %6, align 4, !tbaa !5
  br i1 %3412, label %3691, label %3650

3650:                                             ; preds = %3648, %3678
  %3651 = phi i64 [ %3682, %3678 ], [ 1, %3648 ]
  %3652 = getelementptr inbounds i32, ptr %4, i64 %3651
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = getelementptr inbounds i32, ptr %12, i64 %3651
  %3655 = load i32, ptr %3654, align 4, !tbaa !5
  %3656 = add nsw i32 %3655, -1
  %3657 = icmp slt i32 %3653, %3656
  br i1 %3657, label %3658, label %3676

3658:                                             ; preds = %3650
  br i1 %3645, label %3668, label %3659

3659:                                             ; preds = %3658
  %3660 = shl i64 %3651, 32
  %3661 = add i64 %3660, -4294967296
  %3662 = ashr exact i64 %3661, 32
  %3663 = getelementptr inbounds i32, ptr %7, i64 %3662
  %3664 = load i32, ptr %3663, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %6, i64 %3651
  %3666 = load i32, ptr %3665, align 4, !tbaa !5
  %3667 = add nsw i32 %3666, %3664
  store i32 %3667, ptr %3665, align 4, !tbaa !5
  br label %3686

3668:                                             ; preds = %3641, %3658
  %3669 = phi i32 [ %3653, %3658 ], [ %3642, %3641 ]
  %3670 = phi ptr [ %3652, %3658 ], [ %4, %3641 ]
  %3671 = phi i64 [ %3651, %3658 ], [ 0, %3641 ]
  %3672 = add nsw i32 %3669, 1
  store i32 %3672, ptr %3670, align 4, !tbaa !5
  %3673 = getelementptr inbounds i32, ptr %7, i64 %3671
  %3674 = load i32, ptr %3673, align 4, !tbaa !5
  %3675 = getelementptr inbounds i32, ptr %6, i64 %3671
  br label %3686

3676:                                             ; preds = %3650
  %3677 = icmp eq i32 %3653, %3656
  br i1 %3677, label %3678, label %3684

3678:                                             ; preds = %3676
  store i32 0, ptr %3652, align 4, !tbaa !5
  %3679 = getelementptr inbounds i32, ptr %8, i64 %3651
  %3680 = load i32, ptr %3679, align 4, !tbaa !5
  %3681 = getelementptr inbounds i32, ptr %6, i64 %3651
  store i32 %3680, ptr %3681, align 4, !tbaa !5
  %3682 = add nuw nsw i64 %3651, 1
  %3683 = icmp eq i64 %3682, %3410
  br i1 %3683, label %3691, label %3650, !llvm.loop !322

3684:                                             ; preds = %3646, %3676
  %3685 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3686:                                             ; preds = %3659, %3668
  %3687 = phi ptr [ %3675, %3668 ], [ %3652, %3659 ]
  %3688 = phi i32 [ %3674, %3668 ], [ 1, %3659 ]
  %3689 = load i32, ptr %3687, align 4, !tbaa !5
  %3690 = add nsw i32 %3689, %3688
  store i32 %3690, ptr %3687, align 4, !tbaa !5
  br label %3691

3691:                                             ; preds = %3678, %3686, %3648, %3633
  %3692 = icmp eq i32 %3640, %5
  br i1 %3692, label %5545, label %3555, !llvm.loop !323

3693:                                             ; preds = %3095
  %3694 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3695:                                             ; preds = %18
  %3696 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3697 = load ptr, ptr %3696, align 8, !tbaa !9
  %3698 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3699 = load ptr, ptr %3698, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3699, align 8, !tbaa !18
  %3700 = icmp eq i32 %13, 0
  br i1 %3700, label %3701, label %3707

3701:                                             ; preds = %3695
  %3702 = load i32, ptr %3697, align 4, !tbaa !5
  %3703 = sitofp i32 %3702 to double
  %3704 = icmp slt i32 %3702, 0
  %3705 = fneg fast double %3703
  %3706 = select fast i1 %3704, double %3705, double %3703
  store double %3706, ptr %3699, align 8, !tbaa !18
  br label %5545

3707:                                             ; preds = %3695
  switch i32 %1, label %4305 [
    i32 1, label %3708
    i32 0, label %4007
  ]

3708:                                             ; preds = %3707
  %3709 = getelementptr inbounds i32, ptr %3, i64 %19
  %3710 = load i32, ptr %3709, align 4, !tbaa !5
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp sgt i32 %5, 0
  br i1 %3711, label %3722, label %3713

3713:                                             ; preds = %3708
  br i1 %3712, label %3714, label %5545

3714:                                             ; preds = %3713
  %3715 = icmp sgt i32 %13, 1
  %3716 = icmp sgt i32 %13, 0
  %3717 = add i32 %13, -2
  %3718 = zext i32 %3717 to i64
  %3719 = zext i32 %13 to i64
  %3720 = add nuw i32 %5, 1
  %3721 = icmp eq i32 %13, 1
  br label %3867

3722:                                             ; preds = %3708
  br i1 %3712, label %3723, label %5545

3723:                                             ; preds = %3722
  %3724 = icmp sgt i32 %13, 1
  %3725 = icmp sgt i32 %13, 0
  %3726 = add i32 %13, -2
  %3727 = zext i32 %3726 to i64
  %3728 = zext i32 %13 to i64
  %3729 = add nuw i32 %5, 1
  %3730 = icmp eq i32 %13, 1
  br label %3731

3731:                                             ; preds = %3723, %3865
  %3732 = phi double [ 0.000000e+00, %3723 ], [ %3815, %3865 ]
  %3733 = phi i32 [ 0, %3723 ], [ %3817, %3865 ]
  %3734 = phi double [ 0.000000e+00, %3723 ], [ %3816, %3865 ]
  %3735 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3724, label %3736, label %3805

3736:                                             ; preds = %3731, %3795
  %3737 = phi i32 [ %3804, %3795 ], [ 0, %3731 ]
  %3738 = phi i64 [ %3746, %3795 ], [ %3728, %3731 ]
  %3739 = phi i64 [ %3803, %3795 ], [ %3727, %3731 ]
  %3740 = phi i32 [ %3801, %3795 ], [ %3735, %3731 ]
  %3741 = sub i32 %3726, %3737
  %3742 = tail call i32 @llvm.smin.i32(i32 %3741, i32 0)
  %3743 = sub i32 %3741, %3742
  %3744 = zext i32 %3743 to i64
  %3745 = add nuw nsw i64 %3744, 1
  %3746 = add nsw i64 %3738, -1
  %3747 = icmp ult i32 %3743, 31
  br i1 %3747, label %3783, label %3748

3748:                                             ; preds = %3736
  %3749 = and i64 %3745, 8589934560
  %3750 = sub i64 %3739, %3749
  br label %3751

3751:                                             ; preds = %3751, %3748
  %3752 = phi i64 [ 0, %3748 ], [ %3775, %3751 ]
  %3753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3771, %3751 ]
  %3754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3772, %3751 ]
  %3755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3773, %3751 ]
  %3756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3774, %3751 ]
  %3757 = sub i64 %3739, %3752
  %3758 = getelementptr inbounds i32, ptr %9, i64 %3757
  %3759 = getelementptr inbounds i32, ptr %3758, i64 -7
  %3760 = load <8 x i32>, ptr %3759, align 4, !tbaa !5
  %3761 = shufflevector <8 x i32> %3760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3762 = getelementptr inbounds i32, ptr %3758, i64 -15
  %3763 = load <8 x i32>, ptr %3762, align 4, !tbaa !5
  %3764 = shufflevector <8 x i32> %3763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3765 = getelementptr inbounds i32, ptr %3758, i64 -23
  %3766 = load <8 x i32>, ptr %3765, align 4, !tbaa !5
  %3767 = shufflevector <8 x i32> %3766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3768 = getelementptr inbounds i32, ptr %3758, i64 -31
  %3769 = load <8 x i32>, ptr %3768, align 4, !tbaa !5
  %3770 = shufflevector <8 x i32> %3769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3771 = mul <8 x i32> %3761, %3753
  %3772 = mul <8 x i32> %3764, %3754
  %3773 = mul <8 x i32> %3767, %3755
  %3774 = mul <8 x i32> %3770, %3756
  %3775 = add nuw i64 %3752, 32
  %3776 = icmp eq i64 %3775, %3749
  br i1 %3776, label %3777, label %3751, !llvm.loop !324

3777:                                             ; preds = %3751
  %3778 = mul <8 x i32> %3772, %3771
  %3779 = mul <8 x i32> %3773, %3778
  %3780 = mul <8 x i32> %3774, %3779
  %3781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3780)
  %3782 = icmp eq i64 %3745, %3749
  br i1 %3782, label %3795, label %3783

3783:                                             ; preds = %3736, %3777
  %3784 = phi i64 [ %3739, %3736 ], [ %3750, %3777 ]
  %3785 = phi i32 [ 1, %3736 ], [ %3781, %3777 ]
  br label %3786

3786:                                             ; preds = %3783, %3786
  %3787 = phi i64 [ %3792, %3786 ], [ %3784, %3783 ]
  %3788 = phi i32 [ %3791, %3786 ], [ %3785, %3783 ]
  %3789 = getelementptr inbounds i32, ptr %9, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = mul nsw i32 %3790, %3788
  %3792 = add nsw i64 %3787, -1
  %3793 = trunc i64 %3787 to i32
  %3794 = icmp sgt i32 %3793, 0
  br i1 %3794, label %3786, label %3795, !llvm.loop !325

3795:                                             ; preds = %3786, %3777
  %3796 = phi i32 [ %3781, %3777 ], [ %3791, %3786 ]
  %3797 = and i64 %3746, 4294967295
  %3798 = getelementptr inbounds i32, ptr %6, i64 %3797
  %3799 = load i32, ptr %3798, align 4, !tbaa !5
  %3800 = mul nsw i32 %3799, %3796
  %3801 = add nsw i32 %3800, %3740
  %3802 = icmp sgt i64 %3738, 2
  %3803 = add nsw i64 %3739, -1
  %3804 = add i32 %3737, 1
  br i1 %3802, label %3736, label %3805, !llvm.loop !326

3805:                                             ; preds = %3795, %3731
  %3806 = phi i32 [ %3735, %3731 ], [ %3801, %3795 ]
  %3807 = sext i32 %3806 to i64
  %3808 = getelementptr inbounds double, ptr %2, i64 %3807
  %3809 = load double, ptr %3808, align 8, !tbaa !18
  %3810 = getelementptr inbounds i32, ptr %3697, i64 %3807
  %3811 = load i32, ptr %3810, align 4, !tbaa !5
  %3812 = sitofp i32 %3811 to double
  %3813 = fmul fast double %3809, %3812
  %3814 = tail call fast double @llvm.fabs.f64(double %3813)
  %3815 = fadd fast double %3814, %3732
  store double %3815, ptr %3699, align 8, !tbaa !18
  %3816 = fadd fast double %3809, %3734
  %3817 = add nuw nsw i32 %3733, 1
  br i1 %3725, label %3818, label %3865

3818:                                             ; preds = %3805
  %3819 = load i32, ptr %4, align 4, !tbaa !5
  %3820 = load i32, ptr %12, align 4, !tbaa !5
  %3821 = add nsw i32 %3820, -1
  %3822 = icmp slt i32 %3819, %3821
  br i1 %3822, label %3842, label %3823

3823:                                             ; preds = %3818
  %3824 = icmp eq i32 %3819, %3821
  br i1 %3824, label %3825, label %3858

3825:                                             ; preds = %3823
  store i32 0, ptr %4, align 4, !tbaa !5
  %3826 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3826, ptr %6, align 4, !tbaa !5
  br i1 %3730, label %3865, label %3827

3827:                                             ; preds = %3825, %3852
  %3828 = phi i64 [ %3856, %3852 ], [ 1, %3825 ]
  %3829 = getelementptr inbounds i32, ptr %4, i64 %3828
  %3830 = load i32, ptr %3829, align 4, !tbaa !5
  %3831 = getelementptr inbounds i32, ptr %12, i64 %3828
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = add nsw i32 %3832, -1
  %3834 = icmp slt i32 %3830, %3833
  br i1 %3834, label %3835, label %3850

3835:                                             ; preds = %3827
  br i1 %3822, label %3842, label %3836

3836:                                             ; preds = %3835
  %3837 = getelementptr inbounds i32, ptr %7, i64 %3828
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %6, i64 %3828
  %3840 = load i32, ptr %3839, align 4, !tbaa !5
  %3841 = add nsw i32 %3840, %3838
  store i32 %3841, ptr %3839, align 4, !tbaa !5
  br label %3860

3842:                                             ; preds = %3818, %3835
  %3843 = phi i32 [ %3830, %3835 ], [ %3819, %3818 ]
  %3844 = phi ptr [ %3829, %3835 ], [ %4, %3818 ]
  %3845 = phi i64 [ %3828, %3835 ], [ 0, %3818 ]
  %3846 = add nsw i32 %3843, 1
  store i32 %3846, ptr %3844, align 4, !tbaa !5
  %3847 = getelementptr inbounds i32, ptr %7, i64 %3845
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3845
  br label %3860

3850:                                             ; preds = %3827
  %3851 = icmp eq i32 %3830, %3833
  br i1 %3851, label %3852, label %3858

3852:                                             ; preds = %3850
  store i32 0, ptr %3829, align 4, !tbaa !5
  %3853 = getelementptr inbounds i32, ptr %8, i64 %3828
  %3854 = load i32, ptr %3853, align 4, !tbaa !5
  %3855 = getelementptr inbounds i32, ptr %6, i64 %3828
  store i32 %3854, ptr %3855, align 4, !tbaa !5
  %3856 = add nuw nsw i64 %3828, 1
  %3857 = icmp eq i64 %3856, %3728
  br i1 %3857, label %3865, label %3827, !llvm.loop !327

3858:                                             ; preds = %3823, %3850
  %3859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3860:                                             ; preds = %3836, %3842
  %3861 = phi ptr [ %3849, %3842 ], [ %3829, %3836 ]
  %3862 = phi i32 [ %3848, %3842 ], [ 1, %3836 ]
  %3863 = load i32, ptr %3861, align 4, !tbaa !5
  %3864 = add nsw i32 %3863, %3862
  store i32 %3864, ptr %3861, align 4, !tbaa !5
  br label %3865

3865:                                             ; preds = %3852, %3860, %3825, %3805
  %3866 = icmp eq i32 %3817, %5
  br i1 %3866, label %5545, label %3731, !llvm.loop !328

3867:                                             ; preds = %3714, %4005
  %3868 = phi double [ 0.000000e+00, %3714 ], [ %3953, %4005 ]
  %3869 = phi i32 [ 0, %3714 ], [ %3954, %4005 ]
  %3870 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3715, label %3871, label %3940

3871:                                             ; preds = %3867, %3930
  %3872 = phi i32 [ %3939, %3930 ], [ 0, %3867 ]
  %3873 = phi i64 [ %3881, %3930 ], [ %3719, %3867 ]
  %3874 = phi i64 [ %3938, %3930 ], [ %3718, %3867 ]
  %3875 = phi i32 [ %3936, %3930 ], [ %3870, %3867 ]
  %3876 = sub i32 %3717, %3872
  %3877 = tail call i32 @llvm.smin.i32(i32 %3876, i32 0)
  %3878 = sub i32 %3876, %3877
  %3879 = zext i32 %3878 to i64
  %3880 = add nuw nsw i64 %3879, 1
  %3881 = add nsw i64 %3873, -1
  %3882 = icmp ult i32 %3878, 31
  br i1 %3882, label %3918, label %3883

3883:                                             ; preds = %3871
  %3884 = and i64 %3880, 8589934560
  %3885 = sub i64 %3874, %3884
  br label %3886

3886:                                             ; preds = %3886, %3883
  %3887 = phi i64 [ 0, %3883 ], [ %3910, %3886 ]
  %3888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3906, %3886 ]
  %3889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3907, %3886 ]
  %3890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3908, %3886 ]
  %3891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3909, %3886 ]
  %3892 = sub i64 %3874, %3887
  %3893 = getelementptr inbounds i32, ptr %11, i64 %3892
  %3894 = getelementptr inbounds i32, ptr %3893, i64 -7
  %3895 = load <8 x i32>, ptr %3894, align 4, !tbaa !5
  %3896 = shufflevector <8 x i32> %3895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3897 = getelementptr inbounds i32, ptr %3893, i64 -15
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = getelementptr inbounds i32, ptr %3893, i64 -23
  %3901 = load <8 x i32>, ptr %3900, align 4, !tbaa !5
  %3902 = shufflevector <8 x i32> %3901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3903 = getelementptr inbounds i32, ptr %3893, i64 -31
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !5
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = mul <8 x i32> %3896, %3888
  %3907 = mul <8 x i32> %3899, %3889
  %3908 = mul <8 x i32> %3902, %3890
  %3909 = mul <8 x i32> %3905, %3891
  %3910 = add nuw i64 %3887, 32
  %3911 = icmp eq i64 %3910, %3884
  br i1 %3911, label %3912, label %3886, !llvm.loop !329

3912:                                             ; preds = %3886
  %3913 = mul <8 x i32> %3907, %3906
  %3914 = mul <8 x i32> %3908, %3913
  %3915 = mul <8 x i32> %3909, %3914
  %3916 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3915)
  %3917 = icmp eq i64 %3880, %3884
  br i1 %3917, label %3930, label %3918

3918:                                             ; preds = %3871, %3912
  %3919 = phi i64 [ %3874, %3871 ], [ %3885, %3912 ]
  %3920 = phi i32 [ 1, %3871 ], [ %3916, %3912 ]
  br label %3921

3921:                                             ; preds = %3918, %3921
  %3922 = phi i64 [ %3927, %3921 ], [ %3919, %3918 ]
  %3923 = phi i32 [ %3926, %3921 ], [ %3920, %3918 ]
  %3924 = getelementptr inbounds i32, ptr %11, i64 %3922
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = mul nsw i32 %3925, %3923
  %3927 = add nsw i64 %3922, -1
  %3928 = trunc i64 %3922 to i32
  %3929 = icmp sgt i32 %3928, 0
  br i1 %3929, label %3921, label %3930, !llvm.loop !330

3930:                                             ; preds = %3921, %3912
  %3931 = phi i32 [ %3916, %3912 ], [ %3926, %3921 ]
  %3932 = and i64 %3881, 4294967295
  %3933 = getelementptr inbounds i32, ptr %6, i64 %3932
  %3934 = load i32, ptr %3933, align 4, !tbaa !5
  %3935 = mul nsw i32 %3934, %3931
  %3936 = add nsw i32 %3935, %3875
  %3937 = icmp sgt i64 %3873, 2
  %3938 = add nsw i64 %3874, -1
  %3939 = add i32 %3872, 1
  br i1 %3937, label %3871, label %3940, !llvm.loop !331

3940:                                             ; preds = %3930, %3867
  %3941 = phi i32 [ %3870, %3867 ], [ %3936, %3930 ]
  %3942 = icmp slt i32 %3941, %5
  br i1 %3942, label %3945, label %3943

3943:                                             ; preds = %3940
  %3944 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3945:                                             ; preds = %3940
  %3946 = sext i32 %3941 to i64
  %3947 = getelementptr inbounds i32, ptr %3697, i64 %3946
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = sitofp i32 %3948 to double
  %3950 = icmp slt i32 %3948, 0
  %3951 = fneg fast double %3949
  %3952 = select fast i1 %3950, double %3951, double %3949
  %3953 = fadd fast double %3952, %3868
  store double %3953, ptr %3699, align 8, !tbaa !18
  %3954 = add nuw nsw i32 %3869, 1
  br i1 %3716, label %3955, label %4005

3955:                                             ; preds = %3945
  %3956 = load i32, ptr %4, align 4, !tbaa !5
  %3957 = load i32, ptr %12, align 4, !tbaa !5
  %3958 = add nsw i32 %3957, -1
  %3959 = icmp slt i32 %3956, %3958
  br i1 %3959, label %3982, label %3960

3960:                                             ; preds = %3955
  %3961 = icmp eq i32 %3956, %3958
  br i1 %3961, label %3962, label %3998

3962:                                             ; preds = %3960
  store i32 0, ptr %4, align 4, !tbaa !5
  %3963 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3963, ptr %6, align 4, !tbaa !5
  br i1 %3721, label %4005, label %3964

3964:                                             ; preds = %3962, %3992
  %3965 = phi i64 [ %3996, %3992 ], [ 1, %3962 ]
  %3966 = getelementptr inbounds i32, ptr %4, i64 %3965
  %3967 = load i32, ptr %3966, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %12, i64 %3965
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = add nsw i32 %3969, -1
  %3971 = icmp slt i32 %3967, %3970
  br i1 %3971, label %3972, label %3990

3972:                                             ; preds = %3964
  br i1 %3959, label %3982, label %3973

3973:                                             ; preds = %3972
  %3974 = shl i64 %3965, 32
  %3975 = add i64 %3974, -4294967296
  %3976 = ashr exact i64 %3975, 32
  %3977 = getelementptr inbounds i32, ptr %7, i64 %3976
  %3978 = load i32, ptr %3977, align 4, !tbaa !5
  %3979 = getelementptr inbounds i32, ptr %6, i64 %3965
  %3980 = load i32, ptr %3979, align 4, !tbaa !5
  %3981 = add nsw i32 %3980, %3978
  store i32 %3981, ptr %3979, align 4, !tbaa !5
  br label %4000

3982:                                             ; preds = %3955, %3972
  %3983 = phi i32 [ %3967, %3972 ], [ %3956, %3955 ]
  %3984 = phi ptr [ %3966, %3972 ], [ %4, %3955 ]
  %3985 = phi i64 [ %3965, %3972 ], [ 0, %3955 ]
  %3986 = add nsw i32 %3983, 1
  store i32 %3986, ptr %3984, align 4, !tbaa !5
  %3987 = getelementptr inbounds i32, ptr %7, i64 %3985
  %3988 = load i32, ptr %3987, align 4, !tbaa !5
  %3989 = getelementptr inbounds i32, ptr %6, i64 %3985
  br label %4000

3990:                                             ; preds = %3964
  %3991 = icmp eq i32 %3967, %3970
  br i1 %3991, label %3992, label %3998

3992:                                             ; preds = %3990
  store i32 0, ptr %3966, align 4, !tbaa !5
  %3993 = getelementptr inbounds i32, ptr %8, i64 %3965
  %3994 = load i32, ptr %3993, align 4, !tbaa !5
  %3995 = getelementptr inbounds i32, ptr %6, i64 %3965
  store i32 %3994, ptr %3995, align 4, !tbaa !5
  %3996 = add nuw nsw i64 %3965, 1
  %3997 = icmp eq i64 %3996, %3719
  br i1 %3997, label %4005, label %3964, !llvm.loop !332

3998:                                             ; preds = %3960, %3990
  %3999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4000:                                             ; preds = %3973, %3982
  %4001 = phi ptr [ %3989, %3982 ], [ %3966, %3973 ]
  %4002 = phi i32 [ %3988, %3982 ], [ 1, %3973 ]
  %4003 = load i32, ptr %4001, align 4, !tbaa !5
  %4004 = add nsw i32 %4003, %4002
  store i32 %4004, ptr %4001, align 4, !tbaa !5
  br label %4005

4005:                                             ; preds = %3992, %4000, %3962, %3945
  %4006 = icmp eq i32 %3954, %5
  br i1 %4006, label %5545, label %3867, !llvm.loop !333

4007:                                             ; preds = %3707
  %4008 = getelementptr inbounds i32, ptr %3, i64 %19
  %4009 = load i32, ptr %4008, align 4, !tbaa !5
  %4010 = icmp eq i32 %4009, 0
  %4011 = icmp sgt i32 %5, 0
  br i1 %4010, label %4021, label %4012

4012:                                             ; preds = %4007
  br i1 %4011, label %4013, label %5545

4013:                                             ; preds = %4012
  %4014 = icmp sgt i32 %13, 1
  %4015 = icmp sgt i32 %13, 0
  %4016 = add i32 %13, -2
  %4017 = zext i32 %4016 to i64
  %4018 = zext i32 %13 to i64
  %4019 = add nuw i32 %5, 1
  %4020 = icmp eq i32 %13, 1
  br label %4165

4021:                                             ; preds = %4007
  br i1 %4011, label %4022, label %5545

4022:                                             ; preds = %4021
  %4023 = icmp sgt i32 %13, 1
  %4024 = icmp sgt i32 %13, 0
  %4025 = add i32 %13, -2
  %4026 = zext i32 %4025 to i64
  %4027 = zext i32 %13 to i64
  %4028 = add nuw i32 %5, 1
  %4029 = icmp eq i32 %13, 1
  br label %4030

4030:                                             ; preds = %4022, %4163
  %4031 = phi double [ 0.000000e+00, %4022 ], [ %4113, %4163 ]
  %4032 = phi i32 [ 0, %4022 ], [ %4115, %4163 ]
  %4033 = phi double [ 0.000000e+00, %4022 ], [ %4114, %4163 ]
  %4034 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4035, label %4104

4035:                                             ; preds = %4030, %4094
  %4036 = phi i32 [ %4103, %4094 ], [ 0, %4030 ]
  %4037 = phi i64 [ %4045, %4094 ], [ %4027, %4030 ]
  %4038 = phi i64 [ %4102, %4094 ], [ %4026, %4030 ]
  %4039 = phi i32 [ %4100, %4094 ], [ %4034, %4030 ]
  %4040 = sub i32 %4025, %4036
  %4041 = tail call i32 @llvm.smin.i32(i32 %4040, i32 0)
  %4042 = sub i32 %4040, %4041
  %4043 = zext i32 %4042 to i64
  %4044 = add nuw nsw i64 %4043, 1
  %4045 = add nsw i64 %4037, -1
  %4046 = icmp ult i32 %4042, 31
  br i1 %4046, label %4082, label %4047

4047:                                             ; preds = %4035
  %4048 = and i64 %4044, 8589934560
  %4049 = sub i64 %4038, %4048
  br label %4050

4050:                                             ; preds = %4050, %4047
  %4051 = phi i64 [ 0, %4047 ], [ %4074, %4050 ]
  %4052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4070, %4050 ]
  %4053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4071, %4050 ]
  %4054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4072, %4050 ]
  %4055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4073, %4050 ]
  %4056 = sub i64 %4038, %4051
  %4057 = getelementptr inbounds i32, ptr %9, i64 %4056
  %4058 = getelementptr inbounds i32, ptr %4057, i64 -7
  %4059 = load <8 x i32>, ptr %4058, align 4, !tbaa !5
  %4060 = shufflevector <8 x i32> %4059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4061 = getelementptr inbounds i32, ptr %4057, i64 -15
  %4062 = load <8 x i32>, ptr %4061, align 4, !tbaa !5
  %4063 = shufflevector <8 x i32> %4062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4064 = getelementptr inbounds i32, ptr %4057, i64 -23
  %4065 = load <8 x i32>, ptr %4064, align 4, !tbaa !5
  %4066 = shufflevector <8 x i32> %4065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4067 = getelementptr inbounds i32, ptr %4057, i64 -31
  %4068 = load <8 x i32>, ptr %4067, align 4, !tbaa !5
  %4069 = shufflevector <8 x i32> %4068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4070 = mul <8 x i32> %4060, %4052
  %4071 = mul <8 x i32> %4063, %4053
  %4072 = mul <8 x i32> %4066, %4054
  %4073 = mul <8 x i32> %4069, %4055
  %4074 = add nuw i64 %4051, 32
  %4075 = icmp eq i64 %4074, %4048
  br i1 %4075, label %4076, label %4050, !llvm.loop !334

4076:                                             ; preds = %4050
  %4077 = mul <8 x i32> %4071, %4070
  %4078 = mul <8 x i32> %4072, %4077
  %4079 = mul <8 x i32> %4073, %4078
  %4080 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4079)
  %4081 = icmp eq i64 %4044, %4048
  br i1 %4081, label %4094, label %4082

4082:                                             ; preds = %4035, %4076
  %4083 = phi i64 [ %4038, %4035 ], [ %4049, %4076 ]
  %4084 = phi i32 [ 1, %4035 ], [ %4080, %4076 ]
  br label %4085

4085:                                             ; preds = %4082, %4085
  %4086 = phi i64 [ %4091, %4085 ], [ %4083, %4082 ]
  %4087 = phi i32 [ %4090, %4085 ], [ %4084, %4082 ]
  %4088 = getelementptr inbounds i32, ptr %9, i64 %4086
  %4089 = load i32, ptr %4088, align 4, !tbaa !5
  %4090 = mul nsw i32 %4089, %4087
  %4091 = add nsw i64 %4086, -1
  %4092 = trunc i64 %4086 to i32
  %4093 = icmp sgt i32 %4092, 0
  br i1 %4093, label %4085, label %4094, !llvm.loop !335

4094:                                             ; preds = %4085, %4076
  %4095 = phi i32 [ %4080, %4076 ], [ %4090, %4085 ]
  %4096 = and i64 %4045, 4294967295
  %4097 = getelementptr inbounds i32, ptr %6, i64 %4096
  %4098 = load i32, ptr %4097, align 4, !tbaa !5
  %4099 = mul nsw i32 %4098, %4095
  %4100 = add nsw i32 %4099, %4039
  %4101 = icmp sgt i64 %4037, 2
  %4102 = add nsw i64 %4038, -1
  %4103 = add i32 %4036, 1
  br i1 %4101, label %4035, label %4104, !llvm.loop !336

4104:                                             ; preds = %4094, %4030
  %4105 = phi i32 [ %4034, %4030 ], [ %4100, %4094 ]
  %4106 = sext i32 %4105 to i64
  %4107 = getelementptr inbounds i32, ptr %3697, i64 %4106
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = sitofp i32 %4108 to double
  %4110 = icmp slt i32 %4108, 0
  %4111 = fneg fast double %4109
  %4112 = select fast i1 %4110, double %4111, double %4109
  %4113 = fadd fast double %4112, %4031
  %4114 = fadd fast double %4033, 1.000000e+00
  %4115 = add nuw nsw i32 %4032, 1
  br i1 %4024, label %4116, label %4163

4116:                                             ; preds = %4104
  %4117 = load i32, ptr %4, align 4, !tbaa !5
  %4118 = load i32, ptr %12, align 4, !tbaa !5
  %4119 = add nsw i32 %4118, -1
  %4120 = icmp slt i32 %4117, %4119
  br i1 %4120, label %4140, label %4121

4121:                                             ; preds = %4116
  %4122 = icmp eq i32 %4117, %4119
  br i1 %4122, label %4123, label %4156

4123:                                             ; preds = %4121
  store i32 0, ptr %4, align 4, !tbaa !5
  %4124 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4124, ptr %6, align 4, !tbaa !5
  br i1 %4029, label %4163, label %4125

4125:                                             ; preds = %4123, %4150
  %4126 = phi i64 [ %4154, %4150 ], [ 1, %4123 ]
  %4127 = getelementptr inbounds i32, ptr %4, i64 %4126
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = getelementptr inbounds i32, ptr %12, i64 %4126
  %4130 = load i32, ptr %4129, align 4, !tbaa !5
  %4131 = add nsw i32 %4130, -1
  %4132 = icmp slt i32 %4128, %4131
  br i1 %4132, label %4133, label %4148

4133:                                             ; preds = %4125
  br i1 %4120, label %4140, label %4134

4134:                                             ; preds = %4133
  %4135 = getelementptr inbounds i32, ptr %7, i64 %4126
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %6, i64 %4126
  %4138 = load i32, ptr %4137, align 4, !tbaa !5
  %4139 = add nsw i32 %4138, %4136
  store i32 %4139, ptr %4137, align 4, !tbaa !5
  br label %4158

4140:                                             ; preds = %4116, %4133
  %4141 = phi i32 [ %4128, %4133 ], [ %4117, %4116 ]
  %4142 = phi ptr [ %4127, %4133 ], [ %4, %4116 ]
  %4143 = phi i64 [ %4126, %4133 ], [ 0, %4116 ]
  %4144 = add nsw i32 %4141, 1
  store i32 %4144, ptr %4142, align 4, !tbaa !5
  %4145 = getelementptr inbounds i32, ptr %7, i64 %4143
  %4146 = load i32, ptr %4145, align 4, !tbaa !5
  %4147 = getelementptr inbounds i32, ptr %6, i64 %4143
  br label %4158

4148:                                             ; preds = %4125
  %4149 = icmp eq i32 %4128, %4131
  br i1 %4149, label %4150, label %4156

4150:                                             ; preds = %4148
  store i32 0, ptr %4127, align 4, !tbaa !5
  %4151 = getelementptr inbounds i32, ptr %8, i64 %4126
  %4152 = load i32, ptr %4151, align 4, !tbaa !5
  %4153 = getelementptr inbounds i32, ptr %6, i64 %4126
  store i32 %4152, ptr %4153, align 4, !tbaa !5
  %4154 = add nuw nsw i64 %4126, 1
  %4155 = icmp eq i64 %4154, %4027
  br i1 %4155, label %4163, label %4125, !llvm.loop !337

4156:                                             ; preds = %4121, %4148
  store double %4113, ptr %3699, align 8, !tbaa !18
  %4157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4158:                                             ; preds = %4134, %4140
  %4159 = phi ptr [ %4147, %4140 ], [ %4127, %4134 ]
  %4160 = phi i32 [ %4146, %4140 ], [ 1, %4134 ]
  %4161 = load i32, ptr %4159, align 4, !tbaa !5
  %4162 = add nsw i32 %4161, %4160
  store i32 %4162, ptr %4159, align 4, !tbaa !5
  br label %4163

4163:                                             ; preds = %4150, %4158, %4123, %4104
  %4164 = icmp eq i32 %4115, %5
  br i1 %4164, label %5541, label %4030, !llvm.loop !338

4165:                                             ; preds = %4013, %4303
  %4166 = phi double [ 0.000000e+00, %4013 ], [ %4251, %4303 ]
  %4167 = phi i32 [ 0, %4013 ], [ %4252, %4303 ]
  %4168 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4014, label %4169, label %4238

4169:                                             ; preds = %4165, %4228
  %4170 = phi i32 [ %4237, %4228 ], [ 0, %4165 ]
  %4171 = phi i64 [ %4179, %4228 ], [ %4018, %4165 ]
  %4172 = phi i64 [ %4236, %4228 ], [ %4017, %4165 ]
  %4173 = phi i32 [ %4234, %4228 ], [ %4168, %4165 ]
  %4174 = sub i32 %4016, %4170
  %4175 = tail call i32 @llvm.smin.i32(i32 %4174, i32 0)
  %4176 = sub i32 %4174, %4175
  %4177 = zext i32 %4176 to i64
  %4178 = add nuw nsw i64 %4177, 1
  %4179 = add nsw i64 %4171, -1
  %4180 = icmp ult i32 %4176, 31
  br i1 %4180, label %4216, label %4181

4181:                                             ; preds = %4169
  %4182 = and i64 %4178, 8589934560
  %4183 = sub i64 %4172, %4182
  br label %4184

4184:                                             ; preds = %4184, %4181
  %4185 = phi i64 [ 0, %4181 ], [ %4208, %4184 ]
  %4186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4204, %4184 ]
  %4187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4205, %4184 ]
  %4188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4206, %4184 ]
  %4189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4207, %4184 ]
  %4190 = sub i64 %4172, %4185
  %4191 = getelementptr inbounds i32, ptr %11, i64 %4190
  %4192 = getelementptr inbounds i32, ptr %4191, i64 -7
  %4193 = load <8 x i32>, ptr %4192, align 4, !tbaa !5
  %4194 = shufflevector <8 x i32> %4193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4195 = getelementptr inbounds i32, ptr %4191, i64 -15
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !5
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = getelementptr inbounds i32, ptr %4191, i64 -23
  %4199 = load <8 x i32>, ptr %4198, align 4, !tbaa !5
  %4200 = shufflevector <8 x i32> %4199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4201 = getelementptr inbounds i32, ptr %4191, i64 -31
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !5
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = mul <8 x i32> %4194, %4186
  %4205 = mul <8 x i32> %4197, %4187
  %4206 = mul <8 x i32> %4200, %4188
  %4207 = mul <8 x i32> %4203, %4189
  %4208 = add nuw i64 %4185, 32
  %4209 = icmp eq i64 %4208, %4182
  br i1 %4209, label %4210, label %4184, !llvm.loop !339

4210:                                             ; preds = %4184
  %4211 = mul <8 x i32> %4205, %4204
  %4212 = mul <8 x i32> %4206, %4211
  %4213 = mul <8 x i32> %4207, %4212
  %4214 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4213)
  %4215 = icmp eq i64 %4178, %4182
  br i1 %4215, label %4228, label %4216

4216:                                             ; preds = %4169, %4210
  %4217 = phi i64 [ %4172, %4169 ], [ %4183, %4210 ]
  %4218 = phi i32 [ 1, %4169 ], [ %4214, %4210 ]
  br label %4219

4219:                                             ; preds = %4216, %4219
  %4220 = phi i64 [ %4225, %4219 ], [ %4217, %4216 ]
  %4221 = phi i32 [ %4224, %4219 ], [ %4218, %4216 ]
  %4222 = getelementptr inbounds i32, ptr %11, i64 %4220
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = mul nsw i32 %4223, %4221
  %4225 = add nsw i64 %4220, -1
  %4226 = trunc i64 %4220 to i32
  %4227 = icmp sgt i32 %4226, 0
  br i1 %4227, label %4219, label %4228, !llvm.loop !340

4228:                                             ; preds = %4219, %4210
  %4229 = phi i32 [ %4214, %4210 ], [ %4224, %4219 ]
  %4230 = and i64 %4179, 4294967295
  %4231 = getelementptr inbounds i32, ptr %6, i64 %4230
  %4232 = load i32, ptr %4231, align 4, !tbaa !5
  %4233 = mul nsw i32 %4232, %4229
  %4234 = add nsw i32 %4233, %4173
  %4235 = icmp sgt i64 %4171, 2
  %4236 = add nsw i64 %4172, -1
  %4237 = add i32 %4170, 1
  br i1 %4235, label %4169, label %4238, !llvm.loop !341

4238:                                             ; preds = %4228, %4165
  %4239 = phi i32 [ %4168, %4165 ], [ %4234, %4228 ]
  %4240 = icmp slt i32 %4239, %5
  br i1 %4240, label %4243, label %4241

4241:                                             ; preds = %4238
  %4242 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4243:                                             ; preds = %4238
  %4244 = sext i32 %4239 to i64
  %4245 = getelementptr inbounds i32, ptr %3697, i64 %4244
  %4246 = load i32, ptr %4245, align 4, !tbaa !5
  %4247 = sitofp i32 %4246 to double
  %4248 = icmp slt i32 %4246, 0
  %4249 = fneg fast double %4247
  %4250 = select fast i1 %4248, double %4249, double %4247
  %4251 = fadd fast double %4250, %4166
  store double %4251, ptr %3699, align 8, !tbaa !18
  %4252 = add nuw nsw i32 %4167, 1
  br i1 %4015, label %4253, label %4303

4253:                                             ; preds = %4243
  %4254 = load i32, ptr %4, align 4, !tbaa !5
  %4255 = load i32, ptr %12, align 4, !tbaa !5
  %4256 = add nsw i32 %4255, -1
  %4257 = icmp slt i32 %4254, %4256
  br i1 %4257, label %4280, label %4258

4258:                                             ; preds = %4253
  %4259 = icmp eq i32 %4254, %4256
  br i1 %4259, label %4260, label %4296

4260:                                             ; preds = %4258
  store i32 0, ptr %4, align 4, !tbaa !5
  %4261 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4261, ptr %6, align 4, !tbaa !5
  br i1 %4020, label %4303, label %4262

4262:                                             ; preds = %4260, %4290
  %4263 = phi i64 [ %4294, %4290 ], [ 1, %4260 ]
  %4264 = getelementptr inbounds i32, ptr %4, i64 %4263
  %4265 = load i32, ptr %4264, align 4, !tbaa !5
  %4266 = getelementptr inbounds i32, ptr %12, i64 %4263
  %4267 = load i32, ptr %4266, align 4, !tbaa !5
  %4268 = add nsw i32 %4267, -1
  %4269 = icmp slt i32 %4265, %4268
  br i1 %4269, label %4270, label %4288

4270:                                             ; preds = %4262
  br i1 %4257, label %4280, label %4271

4271:                                             ; preds = %4270
  %4272 = shl i64 %4263, 32
  %4273 = add i64 %4272, -4294967296
  %4274 = ashr exact i64 %4273, 32
  %4275 = getelementptr inbounds i32, ptr %7, i64 %4274
  %4276 = load i32, ptr %4275, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %6, i64 %4263
  %4278 = load i32, ptr %4277, align 4, !tbaa !5
  %4279 = add nsw i32 %4278, %4276
  store i32 %4279, ptr %4277, align 4, !tbaa !5
  br label %4298

4280:                                             ; preds = %4253, %4270
  %4281 = phi i32 [ %4265, %4270 ], [ %4254, %4253 ]
  %4282 = phi ptr [ %4264, %4270 ], [ %4, %4253 ]
  %4283 = phi i64 [ %4263, %4270 ], [ 0, %4253 ]
  %4284 = add nsw i32 %4281, 1
  store i32 %4284, ptr %4282, align 4, !tbaa !5
  %4285 = getelementptr inbounds i32, ptr %7, i64 %4283
  %4286 = load i32, ptr %4285, align 4, !tbaa !5
  %4287 = getelementptr inbounds i32, ptr %6, i64 %4283
  br label %4298

4288:                                             ; preds = %4262
  %4289 = icmp eq i32 %4265, %4268
  br i1 %4289, label %4290, label %4296

4290:                                             ; preds = %4288
  store i32 0, ptr %4264, align 4, !tbaa !5
  %4291 = getelementptr inbounds i32, ptr %8, i64 %4263
  %4292 = load i32, ptr %4291, align 4, !tbaa !5
  %4293 = getelementptr inbounds i32, ptr %6, i64 %4263
  store i32 %4292, ptr %4293, align 4, !tbaa !5
  %4294 = add nuw nsw i64 %4263, 1
  %4295 = icmp eq i64 %4294, %4018
  br i1 %4295, label %4303, label %4262, !llvm.loop !342

4296:                                             ; preds = %4258, %4288
  %4297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4298:                                             ; preds = %4271, %4280
  %4299 = phi ptr [ %4287, %4280 ], [ %4264, %4271 ]
  %4300 = phi i32 [ %4286, %4280 ], [ 1, %4271 ]
  %4301 = load i32, ptr %4299, align 4, !tbaa !5
  %4302 = add nsw i32 %4301, %4300
  store i32 %4302, ptr %4299, align 4, !tbaa !5
  br label %4303

4303:                                             ; preds = %4290, %4298, %4260, %4243
  %4304 = icmp eq i32 %4252, %5
  br i1 %4304, label %5545, label %4165, !llvm.loop !343

4305:                                             ; preds = %3707
  %4306 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4307:                                             ; preds = %18
  %4308 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4309 = load ptr, ptr %4308, align 8, !tbaa !9
  %4310 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4311 = load ptr, ptr %4310, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4311, align 4, !tbaa !162
  %4312 = icmp eq i32 %13, 0
  br i1 %4312, label %4313, label %4319

4313:                                             ; preds = %4307
  %4314 = load i32, ptr %4309, align 4, !tbaa !5
  %4315 = sitofp i32 %4314 to float
  %4316 = icmp slt i32 %4314, 0
  %4317 = fneg fast float %4315
  %4318 = select fast i1 %4316, float %4317, float %4315
  store float %4318, ptr %4311, align 4, !tbaa !162
  br label %5545

4319:                                             ; preds = %4307
  switch i32 %1, label %4923 [
    i32 1, label %4320
    i32 0, label %4625
  ]

4320:                                             ; preds = %4319
  %4321 = getelementptr inbounds i32, ptr %3, i64 %19
  %4322 = load i32, ptr %4321, align 4, !tbaa !5
  %4323 = icmp eq i32 %4322, 0
  %4324 = icmp sgt i32 %5, 0
  br i1 %4323, label %4334, label %4325

4325:                                             ; preds = %4320
  br i1 %4324, label %4326, label %5545

4326:                                             ; preds = %4325
  %4327 = icmp sgt i32 %13, 1
  %4328 = icmp sgt i32 %13, 0
  %4329 = add i32 %13, -2
  %4330 = zext i32 %4329 to i64
  %4331 = zext i32 %13 to i64
  %4332 = add nuw i32 %5, 1
  %4333 = icmp eq i32 %13, 1
  br label %4482

4334:                                             ; preds = %4320
  br i1 %4324, label %4335, label %5545

4335:                                             ; preds = %4334
  %4336 = icmp sgt i32 %13, 1
  %4337 = icmp sgt i32 %13, 0
  %4338 = add i32 %13, -2
  %4339 = zext i32 %4338 to i64
  %4340 = zext i32 %13 to i64
  %4341 = add nuw i32 %5, 1
  %4342 = icmp eq i32 %13, 1
  br label %4343

4343:                                             ; preds = %4335, %4480
  %4344 = phi float [ 0.000000e+00, %4335 ], [ %4430, %4480 ]
  %4345 = phi i32 [ 0, %4335 ], [ %4432, %4480 ]
  %4346 = phi double [ 0.000000e+00, %4335 ], [ %4431, %4480 ]
  %4347 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4336, label %4348, label %4417

4348:                                             ; preds = %4343, %4407
  %4349 = phi i32 [ %4416, %4407 ], [ 0, %4343 ]
  %4350 = phi i64 [ %4358, %4407 ], [ %4340, %4343 ]
  %4351 = phi i64 [ %4415, %4407 ], [ %4339, %4343 ]
  %4352 = phi i32 [ %4413, %4407 ], [ %4347, %4343 ]
  %4353 = sub i32 %4338, %4349
  %4354 = tail call i32 @llvm.smin.i32(i32 %4353, i32 0)
  %4355 = sub i32 %4353, %4354
  %4356 = zext i32 %4355 to i64
  %4357 = add nuw nsw i64 %4356, 1
  %4358 = add nsw i64 %4350, -1
  %4359 = icmp ult i32 %4355, 31
  br i1 %4359, label %4395, label %4360

4360:                                             ; preds = %4348
  %4361 = and i64 %4357, 8589934560
  %4362 = sub i64 %4351, %4361
  br label %4363

4363:                                             ; preds = %4363, %4360
  %4364 = phi i64 [ 0, %4360 ], [ %4387, %4363 ]
  %4365 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4383, %4363 ]
  %4366 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4384, %4363 ]
  %4367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4385, %4363 ]
  %4368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4386, %4363 ]
  %4369 = sub i64 %4351, %4364
  %4370 = getelementptr inbounds i32, ptr %9, i64 %4369
  %4371 = getelementptr inbounds i32, ptr %4370, i64 -7
  %4372 = load <8 x i32>, ptr %4371, align 4, !tbaa !5
  %4373 = shufflevector <8 x i32> %4372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4374 = getelementptr inbounds i32, ptr %4370, i64 -15
  %4375 = load <8 x i32>, ptr %4374, align 4, !tbaa !5
  %4376 = shufflevector <8 x i32> %4375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4377 = getelementptr inbounds i32, ptr %4370, i64 -23
  %4378 = load <8 x i32>, ptr %4377, align 4, !tbaa !5
  %4379 = shufflevector <8 x i32> %4378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4380 = getelementptr inbounds i32, ptr %4370, i64 -31
  %4381 = load <8 x i32>, ptr %4380, align 4, !tbaa !5
  %4382 = shufflevector <8 x i32> %4381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4383 = mul <8 x i32> %4373, %4365
  %4384 = mul <8 x i32> %4376, %4366
  %4385 = mul <8 x i32> %4379, %4367
  %4386 = mul <8 x i32> %4382, %4368
  %4387 = add nuw i64 %4364, 32
  %4388 = icmp eq i64 %4387, %4361
  br i1 %4388, label %4389, label %4363, !llvm.loop !344

4389:                                             ; preds = %4363
  %4390 = mul <8 x i32> %4384, %4383
  %4391 = mul <8 x i32> %4385, %4390
  %4392 = mul <8 x i32> %4386, %4391
  %4393 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4392)
  %4394 = icmp eq i64 %4357, %4361
  br i1 %4394, label %4407, label %4395

4395:                                             ; preds = %4348, %4389
  %4396 = phi i64 [ %4351, %4348 ], [ %4362, %4389 ]
  %4397 = phi i32 [ 1, %4348 ], [ %4393, %4389 ]
  br label %4398

4398:                                             ; preds = %4395, %4398
  %4399 = phi i64 [ %4404, %4398 ], [ %4396, %4395 ]
  %4400 = phi i32 [ %4403, %4398 ], [ %4397, %4395 ]
  %4401 = getelementptr inbounds i32, ptr %9, i64 %4399
  %4402 = load i32, ptr %4401, align 4, !tbaa !5
  %4403 = mul nsw i32 %4402, %4400
  %4404 = add nsw i64 %4399, -1
  %4405 = trunc i64 %4399 to i32
  %4406 = icmp sgt i32 %4405, 0
  br i1 %4406, label %4398, label %4407, !llvm.loop !345

4407:                                             ; preds = %4398, %4389
  %4408 = phi i32 [ %4393, %4389 ], [ %4403, %4398 ]
  %4409 = and i64 %4358, 4294967295
  %4410 = getelementptr inbounds i32, ptr %6, i64 %4409
  %4411 = load i32, ptr %4410, align 4, !tbaa !5
  %4412 = mul nsw i32 %4411, %4408
  %4413 = add nsw i32 %4412, %4352
  %4414 = icmp sgt i64 %4350, 2
  %4415 = add nsw i64 %4351, -1
  %4416 = add i32 %4349, 1
  br i1 %4414, label %4348, label %4417, !llvm.loop !346

4417:                                             ; preds = %4407, %4343
  %4418 = phi i32 [ %4347, %4343 ], [ %4413, %4407 ]
  %4419 = sext i32 %4418 to i64
  %4420 = getelementptr inbounds double, ptr %2, i64 %4419
  %4421 = load double, ptr %4420, align 8, !tbaa !18
  %4422 = getelementptr inbounds i32, ptr %4309, i64 %4419
  %4423 = load i32, ptr %4422, align 4, !tbaa !5
  %4424 = sitofp i32 %4423 to float
  %4425 = fpext float %4344 to double
  %4426 = fpext float %4424 to double
  %4427 = fmul fast double %4421, %4426
  %4428 = tail call fast double @llvm.fabs.f64(double %4427)
  %4429 = fadd fast double %4428, %4425
  %4430 = fptrunc double %4429 to float
  %4431 = fadd fast double %4421, %4346
  %4432 = add nuw nsw i32 %4345, 1
  br i1 %4337, label %4433, label %4480

4433:                                             ; preds = %4417
  %4434 = load i32, ptr %4, align 4, !tbaa !5
  %4435 = load i32, ptr %12, align 4, !tbaa !5
  %4436 = add nsw i32 %4435, -1
  %4437 = icmp slt i32 %4434, %4436
  br i1 %4437, label %4457, label %4438

4438:                                             ; preds = %4433
  %4439 = icmp eq i32 %4434, %4436
  br i1 %4439, label %4440, label %4473

4440:                                             ; preds = %4438
  store i32 0, ptr %4, align 4, !tbaa !5
  %4441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4441, ptr %6, align 4, !tbaa !5
  br i1 %4342, label %4480, label %4442

4442:                                             ; preds = %4440, %4467
  %4443 = phi i64 [ %4471, %4467 ], [ 1, %4440 ]
  %4444 = getelementptr inbounds i32, ptr %4, i64 %4443
  %4445 = load i32, ptr %4444, align 4, !tbaa !5
  %4446 = getelementptr inbounds i32, ptr %12, i64 %4443
  %4447 = load i32, ptr %4446, align 4, !tbaa !5
  %4448 = add nsw i32 %4447, -1
  %4449 = icmp slt i32 %4445, %4448
  br i1 %4449, label %4450, label %4465

4450:                                             ; preds = %4442
  br i1 %4437, label %4457, label %4451

4451:                                             ; preds = %4450
  %4452 = getelementptr inbounds i32, ptr %7, i64 %4443
  %4453 = load i32, ptr %4452, align 4, !tbaa !5
  %4454 = getelementptr inbounds i32, ptr %6, i64 %4443
  %4455 = load i32, ptr %4454, align 4, !tbaa !5
  %4456 = add nsw i32 %4455, %4453
  store i32 %4456, ptr %4454, align 4, !tbaa !5
  br label %4475

4457:                                             ; preds = %4433, %4450
  %4458 = phi i32 [ %4445, %4450 ], [ %4434, %4433 ]
  %4459 = phi ptr [ %4444, %4450 ], [ %4, %4433 ]
  %4460 = phi i64 [ %4443, %4450 ], [ 0, %4433 ]
  %4461 = add nsw i32 %4458, 1
  store i32 %4461, ptr %4459, align 4, !tbaa !5
  %4462 = getelementptr inbounds i32, ptr %7, i64 %4460
  %4463 = load i32, ptr %4462, align 4, !tbaa !5
  %4464 = getelementptr inbounds i32, ptr %6, i64 %4460
  br label %4475

4465:                                             ; preds = %4442
  %4466 = icmp eq i32 %4445, %4448
  br i1 %4466, label %4467, label %4473

4467:                                             ; preds = %4465
  store i32 0, ptr %4444, align 4, !tbaa !5
  %4468 = getelementptr inbounds i32, ptr %8, i64 %4443
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4443
  store i32 %4469, ptr %4470, align 4, !tbaa !5
  %4471 = add nuw nsw i64 %4443, 1
  %4472 = icmp eq i64 %4471, %4340
  br i1 %4472, label %4480, label %4442, !llvm.loop !347

4473:                                             ; preds = %4438, %4465
  store float %4430, ptr %4311, align 4, !tbaa !162
  %4474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4475:                                             ; preds = %4451, %4457
  %4476 = phi ptr [ %4464, %4457 ], [ %4444, %4451 ]
  %4477 = phi i32 [ %4463, %4457 ], [ 1, %4451 ]
  %4478 = load i32, ptr %4476, align 4, !tbaa !5
  %4479 = add nsw i32 %4478, %4477
  store i32 %4479, ptr %4476, align 4, !tbaa !5
  br label %4480

4480:                                             ; preds = %4467, %4475, %4440, %4417
  %4481 = icmp eq i32 %4432, %5
  br i1 %4481, label %5542, label %4343, !llvm.loop !348

4482:                                             ; preds = %4326, %4623
  %4483 = phi float [ 0.000000e+00, %4326 ], [ %4571, %4623 ]
  %4484 = phi i32 [ 0, %4326 ], [ %4572, %4623 ]
  %4485 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4327, label %4486, label %4555

4486:                                             ; preds = %4482, %4545
  %4487 = phi i32 [ %4554, %4545 ], [ 0, %4482 ]
  %4488 = phi i64 [ %4496, %4545 ], [ %4331, %4482 ]
  %4489 = phi i64 [ %4553, %4545 ], [ %4330, %4482 ]
  %4490 = phi i32 [ %4551, %4545 ], [ %4485, %4482 ]
  %4491 = sub i32 %4329, %4487
  %4492 = tail call i32 @llvm.smin.i32(i32 %4491, i32 0)
  %4493 = sub i32 %4491, %4492
  %4494 = zext i32 %4493 to i64
  %4495 = add nuw nsw i64 %4494, 1
  %4496 = add nsw i64 %4488, -1
  %4497 = icmp ult i32 %4493, 31
  br i1 %4497, label %4533, label %4498

4498:                                             ; preds = %4486
  %4499 = and i64 %4495, 8589934560
  %4500 = sub i64 %4489, %4499
  br label %4501

4501:                                             ; preds = %4501, %4498
  %4502 = phi i64 [ 0, %4498 ], [ %4525, %4501 ]
  %4503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4521, %4501 ]
  %4504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4522, %4501 ]
  %4505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4523, %4501 ]
  %4506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4524, %4501 ]
  %4507 = sub i64 %4489, %4502
  %4508 = getelementptr inbounds i32, ptr %11, i64 %4507
  %4509 = getelementptr inbounds i32, ptr %4508, i64 -7
  %4510 = load <8 x i32>, ptr %4509, align 4, !tbaa !5
  %4511 = shufflevector <8 x i32> %4510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4512 = getelementptr inbounds i32, ptr %4508, i64 -15
  %4513 = load <8 x i32>, ptr %4512, align 4, !tbaa !5
  %4514 = shufflevector <8 x i32> %4513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4515 = getelementptr inbounds i32, ptr %4508, i64 -23
  %4516 = load <8 x i32>, ptr %4515, align 4, !tbaa !5
  %4517 = shufflevector <8 x i32> %4516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4518 = getelementptr inbounds i32, ptr %4508, i64 -31
  %4519 = load <8 x i32>, ptr %4518, align 4, !tbaa !5
  %4520 = shufflevector <8 x i32> %4519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4521 = mul <8 x i32> %4511, %4503
  %4522 = mul <8 x i32> %4514, %4504
  %4523 = mul <8 x i32> %4517, %4505
  %4524 = mul <8 x i32> %4520, %4506
  %4525 = add nuw i64 %4502, 32
  %4526 = icmp eq i64 %4525, %4499
  br i1 %4526, label %4527, label %4501, !llvm.loop !349

4527:                                             ; preds = %4501
  %4528 = mul <8 x i32> %4522, %4521
  %4529 = mul <8 x i32> %4523, %4528
  %4530 = mul <8 x i32> %4524, %4529
  %4531 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4530)
  %4532 = icmp eq i64 %4495, %4499
  br i1 %4532, label %4545, label %4533

4533:                                             ; preds = %4486, %4527
  %4534 = phi i64 [ %4489, %4486 ], [ %4500, %4527 ]
  %4535 = phi i32 [ 1, %4486 ], [ %4531, %4527 ]
  br label %4536

4536:                                             ; preds = %4533, %4536
  %4537 = phi i64 [ %4542, %4536 ], [ %4534, %4533 ]
  %4538 = phi i32 [ %4541, %4536 ], [ %4535, %4533 ]
  %4539 = getelementptr inbounds i32, ptr %11, i64 %4537
  %4540 = load i32, ptr %4539, align 4, !tbaa !5
  %4541 = mul nsw i32 %4540, %4538
  %4542 = add nsw i64 %4537, -1
  %4543 = trunc i64 %4537 to i32
  %4544 = icmp sgt i32 %4543, 0
  br i1 %4544, label %4536, label %4545, !llvm.loop !350

4545:                                             ; preds = %4536, %4527
  %4546 = phi i32 [ %4531, %4527 ], [ %4541, %4536 ]
  %4547 = and i64 %4496, 4294967295
  %4548 = getelementptr inbounds i32, ptr %6, i64 %4547
  %4549 = load i32, ptr %4548, align 4, !tbaa !5
  %4550 = mul nsw i32 %4549, %4546
  %4551 = add nsw i32 %4550, %4490
  %4552 = icmp sgt i64 %4488, 2
  %4553 = add nsw i64 %4489, -1
  %4554 = add i32 %4487, 1
  br i1 %4552, label %4486, label %4555, !llvm.loop !351

4555:                                             ; preds = %4545, %4482
  %4556 = phi i32 [ %4485, %4482 ], [ %4551, %4545 ]
  %4557 = icmp slt i32 %4556, %5
  br i1 %4557, label %4560, label %4558

4558:                                             ; preds = %4555
  %4559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4560:                                             ; preds = %4555
  %4561 = sext i32 %4556 to i64
  %4562 = getelementptr inbounds i32, ptr %4309, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = sitofp i32 %4563 to float
  %4565 = fpext float %4483 to double
  %4566 = fpext float %4564 to double
  %4567 = icmp slt i32 %4563, 0
  %4568 = fneg fast double %4566
  %4569 = select fast i1 %4567, double %4568, double %4566
  %4570 = fadd fast double %4569, %4565
  %4571 = fptrunc double %4570 to float
  store float %4571, ptr %4311, align 4, !tbaa !162
  %4572 = add nuw nsw i32 %4484, 1
  br i1 %4328, label %4573, label %4623

4573:                                             ; preds = %4560
  %4574 = load i32, ptr %4, align 4, !tbaa !5
  %4575 = load i32, ptr %12, align 4, !tbaa !5
  %4576 = add nsw i32 %4575, -1
  %4577 = icmp slt i32 %4574, %4576
  br i1 %4577, label %4600, label %4578

4578:                                             ; preds = %4573
  %4579 = icmp eq i32 %4574, %4576
  br i1 %4579, label %4580, label %4616

4580:                                             ; preds = %4578
  store i32 0, ptr %4, align 4, !tbaa !5
  %4581 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4581, ptr %6, align 4, !tbaa !5
  br i1 %4333, label %4623, label %4582

4582:                                             ; preds = %4580, %4610
  %4583 = phi i64 [ %4614, %4610 ], [ 1, %4580 ]
  %4584 = getelementptr inbounds i32, ptr %4, i64 %4583
  %4585 = load i32, ptr %4584, align 4, !tbaa !5
  %4586 = getelementptr inbounds i32, ptr %12, i64 %4583
  %4587 = load i32, ptr %4586, align 4, !tbaa !5
  %4588 = add nsw i32 %4587, -1
  %4589 = icmp slt i32 %4585, %4588
  br i1 %4589, label %4590, label %4608

4590:                                             ; preds = %4582
  br i1 %4577, label %4600, label %4591

4591:                                             ; preds = %4590
  %4592 = shl i64 %4583, 32
  %4593 = add i64 %4592, -4294967296
  %4594 = ashr exact i64 %4593, 32
  %4595 = getelementptr inbounds i32, ptr %7, i64 %4594
  %4596 = load i32, ptr %4595, align 4, !tbaa !5
  %4597 = getelementptr inbounds i32, ptr %6, i64 %4583
  %4598 = load i32, ptr %4597, align 4, !tbaa !5
  %4599 = add nsw i32 %4598, %4596
  store i32 %4599, ptr %4597, align 4, !tbaa !5
  br label %4618

4600:                                             ; preds = %4573, %4590
  %4601 = phi i32 [ %4585, %4590 ], [ %4574, %4573 ]
  %4602 = phi ptr [ %4584, %4590 ], [ %4, %4573 ]
  %4603 = phi i64 [ %4583, %4590 ], [ 0, %4573 ]
  %4604 = add nsw i32 %4601, 1
  store i32 %4604, ptr %4602, align 4, !tbaa !5
  %4605 = getelementptr inbounds i32, ptr %7, i64 %4603
  %4606 = load i32, ptr %4605, align 4, !tbaa !5
  %4607 = getelementptr inbounds i32, ptr %6, i64 %4603
  br label %4618

4608:                                             ; preds = %4582
  %4609 = icmp eq i32 %4585, %4588
  br i1 %4609, label %4610, label %4616

4610:                                             ; preds = %4608
  store i32 0, ptr %4584, align 4, !tbaa !5
  %4611 = getelementptr inbounds i32, ptr %8, i64 %4583
  %4612 = load i32, ptr %4611, align 4, !tbaa !5
  %4613 = getelementptr inbounds i32, ptr %6, i64 %4583
  store i32 %4612, ptr %4613, align 4, !tbaa !5
  %4614 = add nuw nsw i64 %4583, 1
  %4615 = icmp eq i64 %4614, %4331
  br i1 %4615, label %4623, label %4582, !llvm.loop !352

4616:                                             ; preds = %4578, %4608
  %4617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4618:                                             ; preds = %4591, %4600
  %4619 = phi ptr [ %4607, %4600 ], [ %4584, %4591 ]
  %4620 = phi i32 [ %4606, %4600 ], [ 1, %4591 ]
  %4621 = load i32, ptr %4619, align 4, !tbaa !5
  %4622 = add nsw i32 %4621, %4620
  store i32 %4622, ptr %4619, align 4, !tbaa !5
  br label %4623

4623:                                             ; preds = %4610, %4618, %4580, %4560
  %4624 = icmp eq i32 %4572, %5
  br i1 %4624, label %5545, label %4482, !llvm.loop !353

4625:                                             ; preds = %4319
  %4626 = getelementptr inbounds i32, ptr %3, i64 %19
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = icmp eq i32 %4627, 0
  %4629 = icmp sgt i32 %5, 0
  br i1 %4628, label %4639, label %4630

4630:                                             ; preds = %4625
  br i1 %4629, label %4631, label %5545

4631:                                             ; preds = %4630
  %4632 = icmp sgt i32 %13, 1
  %4633 = icmp sgt i32 %13, 0
  %4634 = add i32 %13, -2
  %4635 = zext i32 %4634 to i64
  %4636 = zext i32 %13 to i64
  %4637 = add nuw i32 %5, 1
  %4638 = icmp eq i32 %13, 1
  br label %4783

4639:                                             ; preds = %4625
  br i1 %4629, label %4640, label %5545

4640:                                             ; preds = %4639
  %4641 = icmp sgt i32 %13, 1
  %4642 = icmp sgt i32 %13, 0
  %4643 = add i32 %13, -2
  %4644 = zext i32 %4643 to i64
  %4645 = zext i32 %13 to i64
  %4646 = add nuw i32 %5, 1
  %4647 = icmp eq i32 %13, 1
  br label %4648

4648:                                             ; preds = %4640, %4781
  %4649 = phi float [ 0.000000e+00, %4640 ], [ %4731, %4781 ]
  %4650 = phi i32 [ 0, %4640 ], [ %4733, %4781 ]
  %4651 = phi double [ 0.000000e+00, %4640 ], [ %4732, %4781 ]
  %4652 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4641, label %4653, label %4722

4653:                                             ; preds = %4648, %4712
  %4654 = phi i32 [ %4721, %4712 ], [ 0, %4648 ]
  %4655 = phi i64 [ %4663, %4712 ], [ %4645, %4648 ]
  %4656 = phi i64 [ %4720, %4712 ], [ %4644, %4648 ]
  %4657 = phi i32 [ %4718, %4712 ], [ %4652, %4648 ]
  %4658 = sub i32 %4643, %4654
  %4659 = tail call i32 @llvm.smin.i32(i32 %4658, i32 0)
  %4660 = sub i32 %4658, %4659
  %4661 = zext i32 %4660 to i64
  %4662 = add nuw nsw i64 %4661, 1
  %4663 = add nsw i64 %4655, -1
  %4664 = icmp ult i32 %4660, 31
  br i1 %4664, label %4700, label %4665

4665:                                             ; preds = %4653
  %4666 = and i64 %4662, 8589934560
  %4667 = sub i64 %4656, %4666
  br label %4668

4668:                                             ; preds = %4668, %4665
  %4669 = phi i64 [ 0, %4665 ], [ %4692, %4668 ]
  %4670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4688, %4668 ]
  %4671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4689, %4668 ]
  %4672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4690, %4668 ]
  %4673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4691, %4668 ]
  %4674 = sub i64 %4656, %4669
  %4675 = getelementptr inbounds i32, ptr %9, i64 %4674
  %4676 = getelementptr inbounds i32, ptr %4675, i64 -7
  %4677 = load <8 x i32>, ptr %4676, align 4, !tbaa !5
  %4678 = shufflevector <8 x i32> %4677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4679 = getelementptr inbounds i32, ptr %4675, i64 -15
  %4680 = load <8 x i32>, ptr %4679, align 4, !tbaa !5
  %4681 = shufflevector <8 x i32> %4680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4682 = getelementptr inbounds i32, ptr %4675, i64 -23
  %4683 = load <8 x i32>, ptr %4682, align 4, !tbaa !5
  %4684 = shufflevector <8 x i32> %4683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4685 = getelementptr inbounds i32, ptr %4675, i64 -31
  %4686 = load <8 x i32>, ptr %4685, align 4, !tbaa !5
  %4687 = shufflevector <8 x i32> %4686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4688 = mul <8 x i32> %4678, %4670
  %4689 = mul <8 x i32> %4681, %4671
  %4690 = mul <8 x i32> %4684, %4672
  %4691 = mul <8 x i32> %4687, %4673
  %4692 = add nuw i64 %4669, 32
  %4693 = icmp eq i64 %4692, %4666
  br i1 %4693, label %4694, label %4668, !llvm.loop !354

4694:                                             ; preds = %4668
  %4695 = mul <8 x i32> %4689, %4688
  %4696 = mul <8 x i32> %4690, %4695
  %4697 = mul <8 x i32> %4691, %4696
  %4698 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4697)
  %4699 = icmp eq i64 %4662, %4666
  br i1 %4699, label %4712, label %4700

4700:                                             ; preds = %4653, %4694
  %4701 = phi i64 [ %4656, %4653 ], [ %4667, %4694 ]
  %4702 = phi i32 [ 1, %4653 ], [ %4698, %4694 ]
  br label %4703

4703:                                             ; preds = %4700, %4703
  %4704 = phi i64 [ %4709, %4703 ], [ %4701, %4700 ]
  %4705 = phi i32 [ %4708, %4703 ], [ %4702, %4700 ]
  %4706 = getelementptr inbounds i32, ptr %9, i64 %4704
  %4707 = load i32, ptr %4706, align 4, !tbaa !5
  %4708 = mul nsw i32 %4707, %4705
  %4709 = add nsw i64 %4704, -1
  %4710 = trunc i64 %4704 to i32
  %4711 = icmp sgt i32 %4710, 0
  br i1 %4711, label %4703, label %4712, !llvm.loop !355

4712:                                             ; preds = %4703, %4694
  %4713 = phi i32 [ %4698, %4694 ], [ %4708, %4703 ]
  %4714 = and i64 %4663, 4294967295
  %4715 = getelementptr inbounds i32, ptr %6, i64 %4714
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = mul nsw i32 %4716, %4713
  %4718 = add nsw i32 %4717, %4657
  %4719 = icmp sgt i64 %4655, 2
  %4720 = add nsw i64 %4656, -1
  %4721 = add i32 %4654, 1
  br i1 %4719, label %4653, label %4722, !llvm.loop !356

4722:                                             ; preds = %4712, %4648
  %4723 = phi i32 [ %4652, %4648 ], [ %4718, %4712 ]
  %4724 = sext i32 %4723 to i64
  %4725 = getelementptr inbounds i32, ptr %4309, i64 %4724
  %4726 = load i32, ptr %4725, align 4, !tbaa !5
  %4727 = sitofp i32 %4726 to float
  %4728 = icmp slt i32 %4726, 0
  %4729 = fneg fast float %4727
  %4730 = select fast i1 %4728, float %4729, float %4727
  %4731 = fadd fast float %4730, %4649
  %4732 = fadd fast double %4651, 1.000000e+00
  %4733 = add nuw nsw i32 %4650, 1
  br i1 %4642, label %4734, label %4781

4734:                                             ; preds = %4722
  %4735 = load i32, ptr %4, align 4, !tbaa !5
  %4736 = load i32, ptr %12, align 4, !tbaa !5
  %4737 = add nsw i32 %4736, -1
  %4738 = icmp slt i32 %4735, %4737
  br i1 %4738, label %4758, label %4739

4739:                                             ; preds = %4734
  %4740 = icmp eq i32 %4735, %4737
  br i1 %4740, label %4741, label %4774

4741:                                             ; preds = %4739
  store i32 0, ptr %4, align 4, !tbaa !5
  %4742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4742, ptr %6, align 4, !tbaa !5
  br i1 %4647, label %4781, label %4743

4743:                                             ; preds = %4741, %4768
  %4744 = phi i64 [ %4772, %4768 ], [ 1, %4741 ]
  %4745 = getelementptr inbounds i32, ptr %4, i64 %4744
  %4746 = load i32, ptr %4745, align 4, !tbaa !5
  %4747 = getelementptr inbounds i32, ptr %12, i64 %4744
  %4748 = load i32, ptr %4747, align 4, !tbaa !5
  %4749 = add nsw i32 %4748, -1
  %4750 = icmp slt i32 %4746, %4749
  br i1 %4750, label %4751, label %4766

4751:                                             ; preds = %4743
  br i1 %4738, label %4758, label %4752

4752:                                             ; preds = %4751
  %4753 = getelementptr inbounds i32, ptr %7, i64 %4744
  %4754 = load i32, ptr %4753, align 4, !tbaa !5
  %4755 = getelementptr inbounds i32, ptr %6, i64 %4744
  %4756 = load i32, ptr %4755, align 4, !tbaa !5
  %4757 = add nsw i32 %4756, %4754
  store i32 %4757, ptr %4755, align 4, !tbaa !5
  br label %4776

4758:                                             ; preds = %4734, %4751
  %4759 = phi i32 [ %4746, %4751 ], [ %4735, %4734 ]
  %4760 = phi ptr [ %4745, %4751 ], [ %4, %4734 ]
  %4761 = phi i64 [ %4744, %4751 ], [ 0, %4734 ]
  %4762 = add nsw i32 %4759, 1
  store i32 %4762, ptr %4760, align 4, !tbaa !5
  %4763 = getelementptr inbounds i32, ptr %7, i64 %4761
  %4764 = load i32, ptr %4763, align 4, !tbaa !5
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4761
  br label %4776

4766:                                             ; preds = %4743
  %4767 = icmp eq i32 %4746, %4749
  br i1 %4767, label %4768, label %4774

4768:                                             ; preds = %4766
  store i32 0, ptr %4745, align 4, !tbaa !5
  %4769 = getelementptr inbounds i32, ptr %8, i64 %4744
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4744
  store i32 %4770, ptr %4771, align 4, !tbaa !5
  %4772 = add nuw nsw i64 %4744, 1
  %4773 = icmp eq i64 %4772, %4645
  br i1 %4773, label %4781, label %4743, !llvm.loop !357

4774:                                             ; preds = %4739, %4766
  store float %4731, ptr %4311, align 4, !tbaa !162
  %4775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4776:                                             ; preds = %4752, %4758
  %4777 = phi ptr [ %4765, %4758 ], [ %4745, %4752 ]
  %4778 = phi i32 [ %4764, %4758 ], [ 1, %4752 ]
  %4779 = load i32, ptr %4777, align 4, !tbaa !5
  %4780 = add nsw i32 %4779, %4778
  store i32 %4780, ptr %4777, align 4, !tbaa !5
  br label %4781

4781:                                             ; preds = %4768, %4776, %4741, %4722
  %4782 = icmp eq i32 %4733, %5
  br i1 %4782, label %5543, label %4648, !llvm.loop !358

4783:                                             ; preds = %4631, %4921
  %4784 = phi float [ 0.000000e+00, %4631 ], [ %4869, %4921 ]
  %4785 = phi i32 [ 0, %4631 ], [ %4870, %4921 ]
  %4786 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4632, label %4787, label %4856

4787:                                             ; preds = %4783, %4846
  %4788 = phi i32 [ %4855, %4846 ], [ 0, %4783 ]
  %4789 = phi i64 [ %4797, %4846 ], [ %4636, %4783 ]
  %4790 = phi i64 [ %4854, %4846 ], [ %4635, %4783 ]
  %4791 = phi i32 [ %4852, %4846 ], [ %4786, %4783 ]
  %4792 = sub i32 %4634, %4788
  %4793 = tail call i32 @llvm.smin.i32(i32 %4792, i32 0)
  %4794 = sub i32 %4792, %4793
  %4795 = zext i32 %4794 to i64
  %4796 = add nuw nsw i64 %4795, 1
  %4797 = add nsw i64 %4789, -1
  %4798 = icmp ult i32 %4794, 31
  br i1 %4798, label %4834, label %4799

4799:                                             ; preds = %4787
  %4800 = and i64 %4796, 8589934560
  %4801 = sub i64 %4790, %4800
  br label %4802

4802:                                             ; preds = %4802, %4799
  %4803 = phi i64 [ 0, %4799 ], [ %4826, %4802 ]
  %4804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4822, %4802 ]
  %4805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4823, %4802 ]
  %4806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4824, %4802 ]
  %4807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4825, %4802 ]
  %4808 = sub i64 %4790, %4803
  %4809 = getelementptr inbounds i32, ptr %11, i64 %4808
  %4810 = getelementptr inbounds i32, ptr %4809, i64 -7
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !5
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = getelementptr inbounds i32, ptr %4809, i64 -15
  %4814 = load <8 x i32>, ptr %4813, align 4, !tbaa !5
  %4815 = shufflevector <8 x i32> %4814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4816 = getelementptr inbounds i32, ptr %4809, i64 -23
  %4817 = load <8 x i32>, ptr %4816, align 4, !tbaa !5
  %4818 = shufflevector <8 x i32> %4817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4819 = getelementptr inbounds i32, ptr %4809, i64 -31
  %4820 = load <8 x i32>, ptr %4819, align 4, !tbaa !5
  %4821 = shufflevector <8 x i32> %4820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4822 = mul <8 x i32> %4812, %4804
  %4823 = mul <8 x i32> %4815, %4805
  %4824 = mul <8 x i32> %4818, %4806
  %4825 = mul <8 x i32> %4821, %4807
  %4826 = add nuw i64 %4803, 32
  %4827 = icmp eq i64 %4826, %4800
  br i1 %4827, label %4828, label %4802, !llvm.loop !359

4828:                                             ; preds = %4802
  %4829 = mul <8 x i32> %4823, %4822
  %4830 = mul <8 x i32> %4824, %4829
  %4831 = mul <8 x i32> %4825, %4830
  %4832 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4831)
  %4833 = icmp eq i64 %4796, %4800
  br i1 %4833, label %4846, label %4834

4834:                                             ; preds = %4787, %4828
  %4835 = phi i64 [ %4790, %4787 ], [ %4801, %4828 ]
  %4836 = phi i32 [ 1, %4787 ], [ %4832, %4828 ]
  br label %4837

4837:                                             ; preds = %4834, %4837
  %4838 = phi i64 [ %4843, %4837 ], [ %4835, %4834 ]
  %4839 = phi i32 [ %4842, %4837 ], [ %4836, %4834 ]
  %4840 = getelementptr inbounds i32, ptr %11, i64 %4838
  %4841 = load i32, ptr %4840, align 4, !tbaa !5
  %4842 = mul nsw i32 %4841, %4839
  %4843 = add nsw i64 %4838, -1
  %4844 = trunc i64 %4838 to i32
  %4845 = icmp sgt i32 %4844, 0
  br i1 %4845, label %4837, label %4846, !llvm.loop !360

4846:                                             ; preds = %4837, %4828
  %4847 = phi i32 [ %4832, %4828 ], [ %4842, %4837 ]
  %4848 = and i64 %4797, 4294967295
  %4849 = getelementptr inbounds i32, ptr %6, i64 %4848
  %4850 = load i32, ptr %4849, align 4, !tbaa !5
  %4851 = mul nsw i32 %4850, %4847
  %4852 = add nsw i32 %4851, %4791
  %4853 = icmp sgt i64 %4789, 2
  %4854 = add nsw i64 %4790, -1
  %4855 = add i32 %4788, 1
  br i1 %4853, label %4787, label %4856, !llvm.loop !361

4856:                                             ; preds = %4846, %4783
  %4857 = phi i32 [ %4786, %4783 ], [ %4852, %4846 ]
  %4858 = icmp slt i32 %4857, %5
  br i1 %4858, label %4861, label %4859

4859:                                             ; preds = %4856
  %4860 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4861:                                             ; preds = %4856
  %4862 = sext i32 %4857 to i64
  %4863 = getelementptr inbounds i32, ptr %4309, i64 %4862
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = sitofp i32 %4864 to float
  %4866 = icmp slt i32 %4864, 0
  %4867 = fneg fast float %4865
  %4868 = select fast i1 %4866, float %4867, float %4865
  %4869 = fadd fast float %4868, %4784
  store float %4869, ptr %4311, align 4, !tbaa !162
  %4870 = add nuw nsw i32 %4785, 1
  br i1 %4633, label %4871, label %4921

4871:                                             ; preds = %4861
  %4872 = load i32, ptr %4, align 4, !tbaa !5
  %4873 = load i32, ptr %12, align 4, !tbaa !5
  %4874 = add nsw i32 %4873, -1
  %4875 = icmp slt i32 %4872, %4874
  br i1 %4875, label %4898, label %4876

4876:                                             ; preds = %4871
  %4877 = icmp eq i32 %4872, %4874
  br i1 %4877, label %4878, label %4914

4878:                                             ; preds = %4876
  store i32 0, ptr %4, align 4, !tbaa !5
  %4879 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4879, ptr %6, align 4, !tbaa !5
  br i1 %4638, label %4921, label %4880

4880:                                             ; preds = %4878, %4908
  %4881 = phi i64 [ %4912, %4908 ], [ 1, %4878 ]
  %4882 = getelementptr inbounds i32, ptr %4, i64 %4881
  %4883 = load i32, ptr %4882, align 4, !tbaa !5
  %4884 = getelementptr inbounds i32, ptr %12, i64 %4881
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = add nsw i32 %4885, -1
  %4887 = icmp slt i32 %4883, %4886
  br i1 %4887, label %4888, label %4906

4888:                                             ; preds = %4880
  br i1 %4875, label %4898, label %4889

4889:                                             ; preds = %4888
  %4890 = shl i64 %4881, 32
  %4891 = add i64 %4890, -4294967296
  %4892 = ashr exact i64 %4891, 32
  %4893 = getelementptr inbounds i32, ptr %7, i64 %4892
  %4894 = load i32, ptr %4893, align 4, !tbaa !5
  %4895 = getelementptr inbounds i32, ptr %6, i64 %4881
  %4896 = load i32, ptr %4895, align 4, !tbaa !5
  %4897 = add nsw i32 %4896, %4894
  store i32 %4897, ptr %4895, align 4, !tbaa !5
  br label %4916

4898:                                             ; preds = %4871, %4888
  %4899 = phi i32 [ %4883, %4888 ], [ %4872, %4871 ]
  %4900 = phi ptr [ %4882, %4888 ], [ %4, %4871 ]
  %4901 = phi i64 [ %4881, %4888 ], [ 0, %4871 ]
  %4902 = add nsw i32 %4899, 1
  store i32 %4902, ptr %4900, align 4, !tbaa !5
  %4903 = getelementptr inbounds i32, ptr %7, i64 %4901
  %4904 = load i32, ptr %4903, align 4, !tbaa !5
  %4905 = getelementptr inbounds i32, ptr %6, i64 %4901
  br label %4916

4906:                                             ; preds = %4880
  %4907 = icmp eq i32 %4883, %4886
  br i1 %4907, label %4908, label %4914

4908:                                             ; preds = %4906
  store i32 0, ptr %4882, align 4, !tbaa !5
  %4909 = getelementptr inbounds i32, ptr %8, i64 %4881
  %4910 = load i32, ptr %4909, align 4, !tbaa !5
  %4911 = getelementptr inbounds i32, ptr %6, i64 %4881
  store i32 %4910, ptr %4911, align 4, !tbaa !5
  %4912 = add nuw nsw i64 %4881, 1
  %4913 = icmp eq i64 %4912, %4636
  br i1 %4913, label %4921, label %4880, !llvm.loop !362

4914:                                             ; preds = %4876, %4906
  %4915 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4916:                                             ; preds = %4889, %4898
  %4917 = phi ptr [ %4905, %4898 ], [ %4882, %4889 ]
  %4918 = phi i32 [ %4904, %4898 ], [ 1, %4889 ]
  %4919 = load i32, ptr %4917, align 4, !tbaa !5
  %4920 = add nsw i32 %4919, %4918
  store i32 %4920, ptr %4917, align 4, !tbaa !5
  br label %4921

4921:                                             ; preds = %4908, %4916, %4878, %4861
  %4922 = icmp eq i32 %4870, %5
  br i1 %4922, label %5545, label %4783, !llvm.loop !363

4923:                                             ; preds = %4319
  %4924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4925:                                             ; preds = %18
  %4926 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4927 = load ptr, ptr %4926, align 8, !tbaa !9
  %4928 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4929 = load ptr, ptr %4928, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4929, align 8, !tbaa !18
  %4930 = icmp eq i32 %13, 0
  br i1 %4930, label %4931, label %4937

4931:                                             ; preds = %4925
  %4932 = load i32, ptr %4927, align 4, !tbaa !5
  %4933 = sitofp i32 %4932 to double
  %4934 = icmp slt i32 %4932, 0
  %4935 = fneg fast double %4933
  %4936 = select fast i1 %4934, double %4935, double %4933
  store double %4936, ptr %4929, align 8, !tbaa !18
  br label %5545

4937:                                             ; preds = %4925
  switch i32 %1, label %5535 [
    i32 1, label %4938
    i32 0, label %5237
  ]

4938:                                             ; preds = %4937
  %4939 = getelementptr inbounds i32, ptr %3, i64 %19
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = icmp eq i32 %4940, 0
  %4942 = icmp sgt i32 %5, 0
  br i1 %4941, label %4952, label %4943

4943:                                             ; preds = %4938
  br i1 %4942, label %4944, label %5545

4944:                                             ; preds = %4943
  %4945 = icmp sgt i32 %13, 1
  %4946 = icmp sgt i32 %13, 0
  %4947 = add i32 %13, -2
  %4948 = zext i32 %4947 to i64
  %4949 = zext i32 %13 to i64
  %4950 = add nuw i32 %5, 1
  %4951 = icmp eq i32 %13, 1
  br label %5097

4952:                                             ; preds = %4938
  br i1 %4942, label %4953, label %5545

4953:                                             ; preds = %4952
  %4954 = icmp sgt i32 %13, 1
  %4955 = icmp sgt i32 %13, 0
  %4956 = add i32 %13, -2
  %4957 = zext i32 %4956 to i64
  %4958 = zext i32 %13 to i64
  %4959 = add nuw i32 %5, 1
  %4960 = icmp eq i32 %13, 1
  br label %4961

4961:                                             ; preds = %4953, %5095
  %4962 = phi double [ 0.000000e+00, %4953 ], [ %5045, %5095 ]
  %4963 = phi i32 [ 0, %4953 ], [ %5047, %5095 ]
  %4964 = phi double [ 0.000000e+00, %4953 ], [ %5046, %5095 ]
  %4965 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4954, label %4966, label %5035

4966:                                             ; preds = %4961, %5025
  %4967 = phi i32 [ %5034, %5025 ], [ 0, %4961 ]
  %4968 = phi i64 [ %4976, %5025 ], [ %4958, %4961 ]
  %4969 = phi i64 [ %5033, %5025 ], [ %4957, %4961 ]
  %4970 = phi i32 [ %5031, %5025 ], [ %4965, %4961 ]
  %4971 = sub i32 %4956, %4967
  %4972 = tail call i32 @llvm.smin.i32(i32 %4971, i32 0)
  %4973 = sub i32 %4971, %4972
  %4974 = zext i32 %4973 to i64
  %4975 = add nuw nsw i64 %4974, 1
  %4976 = add nsw i64 %4968, -1
  %4977 = icmp ult i32 %4973, 31
  br i1 %4977, label %5013, label %4978

4978:                                             ; preds = %4966
  %4979 = and i64 %4975, 8589934560
  %4980 = sub i64 %4969, %4979
  br label %4981

4981:                                             ; preds = %4981, %4978
  %4982 = phi i64 [ 0, %4978 ], [ %5005, %4981 ]
  %4983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5001, %4981 ]
  %4984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5002, %4981 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5003, %4981 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5004, %4981 ]
  %4987 = sub i64 %4969, %4982
  %4988 = getelementptr inbounds i32, ptr %9, i64 %4987
  %4989 = getelementptr inbounds i32, ptr %4988, i64 -7
  %4990 = load <8 x i32>, ptr %4989, align 4, !tbaa !5
  %4991 = shufflevector <8 x i32> %4990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4992 = getelementptr inbounds i32, ptr %4988, i64 -15
  %4993 = load <8 x i32>, ptr %4992, align 4, !tbaa !5
  %4994 = shufflevector <8 x i32> %4993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4995 = getelementptr inbounds i32, ptr %4988, i64 -23
  %4996 = load <8 x i32>, ptr %4995, align 4, !tbaa !5
  %4997 = shufflevector <8 x i32> %4996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4998 = getelementptr inbounds i32, ptr %4988, i64 -31
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !5
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = mul <8 x i32> %4991, %4983
  %5002 = mul <8 x i32> %4994, %4984
  %5003 = mul <8 x i32> %4997, %4985
  %5004 = mul <8 x i32> %5000, %4986
  %5005 = add nuw i64 %4982, 32
  %5006 = icmp eq i64 %5005, %4979
  br i1 %5006, label %5007, label %4981, !llvm.loop !364

5007:                                             ; preds = %4981
  %5008 = mul <8 x i32> %5002, %5001
  %5009 = mul <8 x i32> %5003, %5008
  %5010 = mul <8 x i32> %5004, %5009
  %5011 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5010)
  %5012 = icmp eq i64 %4975, %4979
  br i1 %5012, label %5025, label %5013

5013:                                             ; preds = %4966, %5007
  %5014 = phi i64 [ %4969, %4966 ], [ %4980, %5007 ]
  %5015 = phi i32 [ 1, %4966 ], [ %5011, %5007 ]
  br label %5016

5016:                                             ; preds = %5013, %5016
  %5017 = phi i64 [ %5022, %5016 ], [ %5014, %5013 ]
  %5018 = phi i32 [ %5021, %5016 ], [ %5015, %5013 ]
  %5019 = getelementptr inbounds i32, ptr %9, i64 %5017
  %5020 = load i32, ptr %5019, align 4, !tbaa !5
  %5021 = mul nsw i32 %5020, %5018
  %5022 = add nsw i64 %5017, -1
  %5023 = trunc i64 %5017 to i32
  %5024 = icmp sgt i32 %5023, 0
  br i1 %5024, label %5016, label %5025, !llvm.loop !365

5025:                                             ; preds = %5016, %5007
  %5026 = phi i32 [ %5011, %5007 ], [ %5021, %5016 ]
  %5027 = and i64 %4976, 4294967295
  %5028 = getelementptr inbounds i32, ptr %6, i64 %5027
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = mul nsw i32 %5029, %5026
  %5031 = add nsw i32 %5030, %4970
  %5032 = icmp sgt i64 %4968, 2
  %5033 = add nsw i64 %4969, -1
  %5034 = add i32 %4967, 1
  br i1 %5032, label %4966, label %5035, !llvm.loop !366

5035:                                             ; preds = %5025, %4961
  %5036 = phi i32 [ %4965, %4961 ], [ %5031, %5025 ]
  %5037 = sext i32 %5036 to i64
  %5038 = getelementptr inbounds double, ptr %2, i64 %5037
  %5039 = load double, ptr %5038, align 8, !tbaa !18
  %5040 = getelementptr inbounds i32, ptr %4927, i64 %5037
  %5041 = load i32, ptr %5040, align 4, !tbaa !5
  %5042 = sitofp i32 %5041 to double
  %5043 = fmul fast double %5039, %5042
  %5044 = tail call fast double @llvm.fabs.f64(double %5043)
  %5045 = fadd fast double %5044, %4962
  store double %5045, ptr %4929, align 8, !tbaa !18
  %5046 = fadd fast double %5039, %4964
  %5047 = add nuw nsw i32 %4963, 1
  br i1 %4955, label %5048, label %5095

5048:                                             ; preds = %5035
  %5049 = load i32, ptr %4, align 4, !tbaa !5
  %5050 = load i32, ptr %12, align 4, !tbaa !5
  %5051 = add nsw i32 %5050, -1
  %5052 = icmp slt i32 %5049, %5051
  br i1 %5052, label %5072, label %5053

5053:                                             ; preds = %5048
  %5054 = icmp eq i32 %5049, %5051
  br i1 %5054, label %5055, label %5088

5055:                                             ; preds = %5053
  store i32 0, ptr %4, align 4, !tbaa !5
  %5056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5056, ptr %6, align 4, !tbaa !5
  br i1 %4960, label %5095, label %5057

5057:                                             ; preds = %5055, %5082
  %5058 = phi i64 [ %5086, %5082 ], [ 1, %5055 ]
  %5059 = getelementptr inbounds i32, ptr %4, i64 %5058
  %5060 = load i32, ptr %5059, align 4, !tbaa !5
  %5061 = getelementptr inbounds i32, ptr %12, i64 %5058
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = add nsw i32 %5062, -1
  %5064 = icmp slt i32 %5060, %5063
  br i1 %5064, label %5065, label %5080

5065:                                             ; preds = %5057
  br i1 %5052, label %5072, label %5066

5066:                                             ; preds = %5065
  %5067 = getelementptr inbounds i32, ptr %7, i64 %5058
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = getelementptr inbounds i32, ptr %6, i64 %5058
  %5070 = load i32, ptr %5069, align 4, !tbaa !5
  %5071 = add nsw i32 %5070, %5068
  store i32 %5071, ptr %5069, align 4, !tbaa !5
  br label %5090

5072:                                             ; preds = %5048, %5065
  %5073 = phi i32 [ %5060, %5065 ], [ %5049, %5048 ]
  %5074 = phi ptr [ %5059, %5065 ], [ %4, %5048 ]
  %5075 = phi i64 [ %5058, %5065 ], [ 0, %5048 ]
  %5076 = add nsw i32 %5073, 1
  store i32 %5076, ptr %5074, align 4, !tbaa !5
  %5077 = getelementptr inbounds i32, ptr %7, i64 %5075
  %5078 = load i32, ptr %5077, align 4, !tbaa !5
  %5079 = getelementptr inbounds i32, ptr %6, i64 %5075
  br label %5090

5080:                                             ; preds = %5057
  %5081 = icmp eq i32 %5060, %5063
  br i1 %5081, label %5082, label %5088

5082:                                             ; preds = %5080
  store i32 0, ptr %5059, align 4, !tbaa !5
  %5083 = getelementptr inbounds i32, ptr %8, i64 %5058
  %5084 = load i32, ptr %5083, align 4, !tbaa !5
  %5085 = getelementptr inbounds i32, ptr %6, i64 %5058
  store i32 %5084, ptr %5085, align 4, !tbaa !5
  %5086 = add nuw nsw i64 %5058, 1
  %5087 = icmp eq i64 %5086, %4958
  br i1 %5087, label %5095, label %5057, !llvm.loop !367

5088:                                             ; preds = %5053, %5080
  %5089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5090:                                             ; preds = %5066, %5072
  %5091 = phi ptr [ %5079, %5072 ], [ %5059, %5066 ]
  %5092 = phi i32 [ %5078, %5072 ], [ 1, %5066 ]
  %5093 = load i32, ptr %5091, align 4, !tbaa !5
  %5094 = add nsw i32 %5093, %5092
  store i32 %5094, ptr %5091, align 4, !tbaa !5
  br label %5095

5095:                                             ; preds = %5082, %5090, %5055, %5035
  %5096 = icmp eq i32 %5047, %5
  br i1 %5096, label %5545, label %4961, !llvm.loop !368

5097:                                             ; preds = %4944, %5235
  %5098 = phi double [ 0.000000e+00, %4944 ], [ %5183, %5235 ]
  %5099 = phi i32 [ 0, %4944 ], [ %5184, %5235 ]
  %5100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4945, label %5101, label %5170

5101:                                             ; preds = %5097, %5160
  %5102 = phi i32 [ %5169, %5160 ], [ 0, %5097 ]
  %5103 = phi i64 [ %5111, %5160 ], [ %4949, %5097 ]
  %5104 = phi i64 [ %5168, %5160 ], [ %4948, %5097 ]
  %5105 = phi i32 [ %5166, %5160 ], [ %5100, %5097 ]
  %5106 = sub i32 %4947, %5102
  %5107 = tail call i32 @llvm.smin.i32(i32 %5106, i32 0)
  %5108 = sub i32 %5106, %5107
  %5109 = zext i32 %5108 to i64
  %5110 = add nuw nsw i64 %5109, 1
  %5111 = add nsw i64 %5103, -1
  %5112 = icmp ult i32 %5108, 31
  br i1 %5112, label %5148, label %5113

5113:                                             ; preds = %5101
  %5114 = and i64 %5110, 8589934560
  %5115 = sub i64 %5104, %5114
  br label %5116

5116:                                             ; preds = %5116, %5113
  %5117 = phi i64 [ 0, %5113 ], [ %5140, %5116 ]
  %5118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5136, %5116 ]
  %5119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5137, %5116 ]
  %5120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5138, %5116 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5139, %5116 ]
  %5122 = sub i64 %5104, %5117
  %5123 = getelementptr inbounds i32, ptr %11, i64 %5122
  %5124 = getelementptr inbounds i32, ptr %5123, i64 -7
  %5125 = load <8 x i32>, ptr %5124, align 4, !tbaa !5
  %5126 = shufflevector <8 x i32> %5125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5127 = getelementptr inbounds i32, ptr %5123, i64 -15
  %5128 = load <8 x i32>, ptr %5127, align 4, !tbaa !5
  %5129 = shufflevector <8 x i32> %5128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5130 = getelementptr inbounds i32, ptr %5123, i64 -23
  %5131 = load <8 x i32>, ptr %5130, align 4, !tbaa !5
  %5132 = shufflevector <8 x i32> %5131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5133 = getelementptr inbounds i32, ptr %5123, i64 -31
  %5134 = load <8 x i32>, ptr %5133, align 4, !tbaa !5
  %5135 = shufflevector <8 x i32> %5134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5136 = mul <8 x i32> %5126, %5118
  %5137 = mul <8 x i32> %5129, %5119
  %5138 = mul <8 x i32> %5132, %5120
  %5139 = mul <8 x i32> %5135, %5121
  %5140 = add nuw i64 %5117, 32
  %5141 = icmp eq i64 %5140, %5114
  br i1 %5141, label %5142, label %5116, !llvm.loop !369

5142:                                             ; preds = %5116
  %5143 = mul <8 x i32> %5137, %5136
  %5144 = mul <8 x i32> %5138, %5143
  %5145 = mul <8 x i32> %5139, %5144
  %5146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5145)
  %5147 = icmp eq i64 %5110, %5114
  br i1 %5147, label %5160, label %5148

5148:                                             ; preds = %5101, %5142
  %5149 = phi i64 [ %5104, %5101 ], [ %5115, %5142 ]
  %5150 = phi i32 [ 1, %5101 ], [ %5146, %5142 ]
  br label %5151

5151:                                             ; preds = %5148, %5151
  %5152 = phi i64 [ %5157, %5151 ], [ %5149, %5148 ]
  %5153 = phi i32 [ %5156, %5151 ], [ %5150, %5148 ]
  %5154 = getelementptr inbounds i32, ptr %11, i64 %5152
  %5155 = load i32, ptr %5154, align 4, !tbaa !5
  %5156 = mul nsw i32 %5155, %5153
  %5157 = add nsw i64 %5152, -1
  %5158 = trunc i64 %5152 to i32
  %5159 = icmp sgt i32 %5158, 0
  br i1 %5159, label %5151, label %5160, !llvm.loop !370

5160:                                             ; preds = %5151, %5142
  %5161 = phi i32 [ %5146, %5142 ], [ %5156, %5151 ]
  %5162 = and i64 %5111, 4294967295
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5162
  %5164 = load i32, ptr %5163, align 4, !tbaa !5
  %5165 = mul nsw i32 %5164, %5161
  %5166 = add nsw i32 %5165, %5105
  %5167 = icmp sgt i64 %5103, 2
  %5168 = add nsw i64 %5104, -1
  %5169 = add i32 %5102, 1
  br i1 %5167, label %5101, label %5170, !llvm.loop !371

5170:                                             ; preds = %5160, %5097
  %5171 = phi i32 [ %5100, %5097 ], [ %5166, %5160 ]
  %5172 = icmp slt i32 %5171, %5
  br i1 %5172, label %5175, label %5173

5173:                                             ; preds = %5170
  %5174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5175:                                             ; preds = %5170
  %5176 = sext i32 %5171 to i64
  %5177 = getelementptr inbounds i32, ptr %4927, i64 %5176
  %5178 = load i32, ptr %5177, align 4, !tbaa !5
  %5179 = sitofp i32 %5178 to double
  %5180 = icmp slt i32 %5178, 0
  %5181 = fneg fast double %5179
  %5182 = select fast i1 %5180, double %5181, double %5179
  %5183 = fadd fast double %5182, %5098
  store double %5183, ptr %4929, align 8, !tbaa !18
  %5184 = add nuw nsw i32 %5099, 1
  br i1 %4946, label %5185, label %5235

5185:                                             ; preds = %5175
  %5186 = load i32, ptr %4, align 4, !tbaa !5
  %5187 = load i32, ptr %12, align 4, !tbaa !5
  %5188 = add nsw i32 %5187, -1
  %5189 = icmp slt i32 %5186, %5188
  br i1 %5189, label %5212, label %5190

5190:                                             ; preds = %5185
  %5191 = icmp eq i32 %5186, %5188
  br i1 %5191, label %5192, label %5228

5192:                                             ; preds = %5190
  store i32 0, ptr %4, align 4, !tbaa !5
  %5193 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5193, ptr %6, align 4, !tbaa !5
  br i1 %4951, label %5235, label %5194

5194:                                             ; preds = %5192, %5222
  %5195 = phi i64 [ %5226, %5222 ], [ 1, %5192 ]
  %5196 = getelementptr inbounds i32, ptr %4, i64 %5195
  %5197 = load i32, ptr %5196, align 4, !tbaa !5
  %5198 = getelementptr inbounds i32, ptr %12, i64 %5195
  %5199 = load i32, ptr %5198, align 4, !tbaa !5
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5197, %5200
  br i1 %5201, label %5202, label %5220

5202:                                             ; preds = %5194
  br i1 %5189, label %5212, label %5203

5203:                                             ; preds = %5202
  %5204 = shl i64 %5195, 32
  %5205 = add i64 %5204, -4294967296
  %5206 = ashr exact i64 %5205, 32
  %5207 = getelementptr inbounds i32, ptr %7, i64 %5206
  %5208 = load i32, ptr %5207, align 4, !tbaa !5
  %5209 = getelementptr inbounds i32, ptr %6, i64 %5195
  %5210 = load i32, ptr %5209, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, %5208
  store i32 %5211, ptr %5209, align 4, !tbaa !5
  br label %5230

5212:                                             ; preds = %5185, %5202
  %5213 = phi i32 [ %5197, %5202 ], [ %5186, %5185 ]
  %5214 = phi ptr [ %5196, %5202 ], [ %4, %5185 ]
  %5215 = phi i64 [ %5195, %5202 ], [ 0, %5185 ]
  %5216 = add nsw i32 %5213, 1
  store i32 %5216, ptr %5214, align 4, !tbaa !5
  %5217 = getelementptr inbounds i32, ptr %7, i64 %5215
  %5218 = load i32, ptr %5217, align 4, !tbaa !5
  %5219 = getelementptr inbounds i32, ptr %6, i64 %5215
  br label %5230

5220:                                             ; preds = %5194
  %5221 = icmp eq i32 %5197, %5200
  br i1 %5221, label %5222, label %5228

5222:                                             ; preds = %5220
  store i32 0, ptr %5196, align 4, !tbaa !5
  %5223 = getelementptr inbounds i32, ptr %8, i64 %5195
  %5224 = load i32, ptr %5223, align 4, !tbaa !5
  %5225 = getelementptr inbounds i32, ptr %6, i64 %5195
  store i32 %5224, ptr %5225, align 4, !tbaa !5
  %5226 = add nuw nsw i64 %5195, 1
  %5227 = icmp eq i64 %5226, %4949
  br i1 %5227, label %5235, label %5194, !llvm.loop !372

5228:                                             ; preds = %5190, %5220
  %5229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5230:                                             ; preds = %5203, %5212
  %5231 = phi ptr [ %5219, %5212 ], [ %5196, %5203 ]
  %5232 = phi i32 [ %5218, %5212 ], [ 1, %5203 ]
  %5233 = load i32, ptr %5231, align 4, !tbaa !5
  %5234 = add nsw i32 %5233, %5232
  store i32 %5234, ptr %5231, align 4, !tbaa !5
  br label %5235

5235:                                             ; preds = %5222, %5230, %5192, %5175
  %5236 = icmp eq i32 %5184, %5
  br i1 %5236, label %5545, label %5097, !llvm.loop !373

5237:                                             ; preds = %4937
  %5238 = getelementptr inbounds i32, ptr %3, i64 %19
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = icmp eq i32 %5239, 0
  %5241 = icmp sgt i32 %5, 0
  br i1 %5240, label %5251, label %5242

5242:                                             ; preds = %5237
  br i1 %5241, label %5243, label %5545

5243:                                             ; preds = %5242
  %5244 = icmp sgt i32 %13, 1
  %5245 = icmp sgt i32 %13, 0
  %5246 = add i32 %13, -2
  %5247 = zext i32 %5246 to i64
  %5248 = zext i32 %13 to i64
  %5249 = add nuw i32 %5, 1
  %5250 = icmp eq i32 %13, 1
  br label %5395

5251:                                             ; preds = %5237
  br i1 %5241, label %5252, label %5545

5252:                                             ; preds = %5251
  %5253 = icmp sgt i32 %13, 1
  %5254 = icmp sgt i32 %13, 0
  %5255 = add i32 %13, -2
  %5256 = zext i32 %5255 to i64
  %5257 = zext i32 %13 to i64
  %5258 = add nuw i32 %5, 1
  %5259 = icmp eq i32 %13, 1
  br label %5260

5260:                                             ; preds = %5252, %5393
  %5261 = phi double [ 0.000000e+00, %5252 ], [ %5343, %5393 ]
  %5262 = phi i32 [ 0, %5252 ], [ %5345, %5393 ]
  %5263 = phi double [ 0.000000e+00, %5252 ], [ %5344, %5393 ]
  %5264 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5253, label %5265, label %5334

5265:                                             ; preds = %5260, %5324
  %5266 = phi i32 [ %5333, %5324 ], [ 0, %5260 ]
  %5267 = phi i64 [ %5275, %5324 ], [ %5257, %5260 ]
  %5268 = phi i64 [ %5332, %5324 ], [ %5256, %5260 ]
  %5269 = phi i32 [ %5330, %5324 ], [ %5264, %5260 ]
  %5270 = sub i32 %5255, %5266
  %5271 = tail call i32 @llvm.smin.i32(i32 %5270, i32 0)
  %5272 = sub i32 %5270, %5271
  %5273 = zext i32 %5272 to i64
  %5274 = add nuw nsw i64 %5273, 1
  %5275 = add nsw i64 %5267, -1
  %5276 = icmp ult i32 %5272, 31
  br i1 %5276, label %5312, label %5277

5277:                                             ; preds = %5265
  %5278 = and i64 %5274, 8589934560
  %5279 = sub i64 %5268, %5278
  br label %5280

5280:                                             ; preds = %5280, %5277
  %5281 = phi i64 [ 0, %5277 ], [ %5304, %5280 ]
  %5282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5300, %5280 ]
  %5283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5301, %5280 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5302, %5280 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5303, %5280 ]
  %5286 = sub i64 %5268, %5281
  %5287 = getelementptr inbounds i32, ptr %9, i64 %5286
  %5288 = getelementptr inbounds i32, ptr %5287, i64 -7
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !5
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5287, i64 -15
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !5
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5287, i64 -23
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !5
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5287, i64 -31
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !5
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = mul <8 x i32> %5290, %5282
  %5301 = mul <8 x i32> %5293, %5283
  %5302 = mul <8 x i32> %5296, %5284
  %5303 = mul <8 x i32> %5299, %5285
  %5304 = add nuw i64 %5281, 32
  %5305 = icmp eq i64 %5304, %5278
  br i1 %5305, label %5306, label %5280, !llvm.loop !374

5306:                                             ; preds = %5280
  %5307 = mul <8 x i32> %5301, %5300
  %5308 = mul <8 x i32> %5302, %5307
  %5309 = mul <8 x i32> %5303, %5308
  %5310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5309)
  %5311 = icmp eq i64 %5274, %5278
  br i1 %5311, label %5324, label %5312

5312:                                             ; preds = %5265, %5306
  %5313 = phi i64 [ %5268, %5265 ], [ %5279, %5306 ]
  %5314 = phi i32 [ 1, %5265 ], [ %5310, %5306 ]
  br label %5315

5315:                                             ; preds = %5312, %5315
  %5316 = phi i64 [ %5321, %5315 ], [ %5313, %5312 ]
  %5317 = phi i32 [ %5320, %5315 ], [ %5314, %5312 ]
  %5318 = getelementptr inbounds i32, ptr %9, i64 %5316
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = mul nsw i32 %5319, %5317
  %5321 = add nsw i64 %5316, -1
  %5322 = trunc i64 %5316 to i32
  %5323 = icmp sgt i32 %5322, 0
  br i1 %5323, label %5315, label %5324, !llvm.loop !375

5324:                                             ; preds = %5315, %5306
  %5325 = phi i32 [ %5310, %5306 ], [ %5320, %5315 ]
  %5326 = and i64 %5275, 4294967295
  %5327 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !5
  %5329 = mul nsw i32 %5328, %5325
  %5330 = add nsw i32 %5329, %5269
  %5331 = icmp sgt i64 %5267, 2
  %5332 = add nsw i64 %5268, -1
  %5333 = add i32 %5266, 1
  br i1 %5331, label %5265, label %5334, !llvm.loop !376

5334:                                             ; preds = %5324, %5260
  %5335 = phi i32 [ %5264, %5260 ], [ %5330, %5324 ]
  %5336 = sext i32 %5335 to i64
  %5337 = getelementptr inbounds i32, ptr %4927, i64 %5336
  %5338 = load i32, ptr %5337, align 4, !tbaa !5
  %5339 = sitofp i32 %5338 to double
  %5340 = icmp slt i32 %5338, 0
  %5341 = fneg fast double %5339
  %5342 = select fast i1 %5340, double %5341, double %5339
  %5343 = fadd fast double %5342, %5261
  %5344 = fadd fast double %5263, 1.000000e+00
  %5345 = add nuw nsw i32 %5262, 1
  br i1 %5254, label %5346, label %5393

5346:                                             ; preds = %5334
  %5347 = load i32, ptr %4, align 4, !tbaa !5
  %5348 = load i32, ptr %12, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, -1
  %5350 = icmp slt i32 %5347, %5349
  br i1 %5350, label %5370, label %5351

5351:                                             ; preds = %5346
  %5352 = icmp eq i32 %5347, %5349
  br i1 %5352, label %5353, label %5386

5353:                                             ; preds = %5351
  store i32 0, ptr %4, align 4, !tbaa !5
  %5354 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5354, ptr %6, align 4, !tbaa !5
  br i1 %5259, label %5393, label %5355

5355:                                             ; preds = %5353, %5380
  %5356 = phi i64 [ %5384, %5380 ], [ 1, %5353 ]
  %5357 = getelementptr inbounds i32, ptr %4, i64 %5356
  %5358 = load i32, ptr %5357, align 4, !tbaa !5
  %5359 = getelementptr inbounds i32, ptr %12, i64 %5356
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = add nsw i32 %5360, -1
  %5362 = icmp slt i32 %5358, %5361
  br i1 %5362, label %5363, label %5378

5363:                                             ; preds = %5355
  br i1 %5350, label %5370, label %5364

5364:                                             ; preds = %5363
  %5365 = getelementptr inbounds i32, ptr %7, i64 %5356
  %5366 = load i32, ptr %5365, align 4, !tbaa !5
  %5367 = getelementptr inbounds i32, ptr %6, i64 %5356
  %5368 = load i32, ptr %5367, align 4, !tbaa !5
  %5369 = add nsw i32 %5368, %5366
  store i32 %5369, ptr %5367, align 4, !tbaa !5
  br label %5388

5370:                                             ; preds = %5346, %5363
  %5371 = phi i32 [ %5358, %5363 ], [ %5347, %5346 ]
  %5372 = phi ptr [ %5357, %5363 ], [ %4, %5346 ]
  %5373 = phi i64 [ %5356, %5363 ], [ 0, %5346 ]
  %5374 = add nsw i32 %5371, 1
  store i32 %5374, ptr %5372, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %7, i64 %5373
  %5376 = load i32, ptr %5375, align 4, !tbaa !5
  %5377 = getelementptr inbounds i32, ptr %6, i64 %5373
  br label %5388

5378:                                             ; preds = %5355
  %5379 = icmp eq i32 %5358, %5361
  br i1 %5379, label %5380, label %5386

5380:                                             ; preds = %5378
  store i32 0, ptr %5357, align 4, !tbaa !5
  %5381 = getelementptr inbounds i32, ptr %8, i64 %5356
  %5382 = load i32, ptr %5381, align 4, !tbaa !5
  %5383 = getelementptr inbounds i32, ptr %6, i64 %5356
  store i32 %5382, ptr %5383, align 4, !tbaa !5
  %5384 = add nuw nsw i64 %5356, 1
  %5385 = icmp eq i64 %5384, %5257
  br i1 %5385, label %5393, label %5355, !llvm.loop !377

5386:                                             ; preds = %5351, %5378
  store double %5343, ptr %4929, align 8, !tbaa !18
  %5387 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5388:                                             ; preds = %5364, %5370
  %5389 = phi ptr [ %5377, %5370 ], [ %5357, %5364 ]
  %5390 = phi i32 [ %5376, %5370 ], [ 1, %5364 ]
  %5391 = load i32, ptr %5389, align 4, !tbaa !5
  %5392 = add nsw i32 %5391, %5390
  store i32 %5392, ptr %5389, align 4, !tbaa !5
  br label %5393

5393:                                             ; preds = %5380, %5388, %5353, %5334
  %5394 = icmp eq i32 %5345, %5
  br i1 %5394, label %5544, label %5260, !llvm.loop !378

5395:                                             ; preds = %5243, %5533
  %5396 = phi double [ 0.000000e+00, %5243 ], [ %5481, %5533 ]
  %5397 = phi i32 [ 0, %5243 ], [ %5482, %5533 ]
  %5398 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5244, label %5399, label %5468

5399:                                             ; preds = %5395, %5458
  %5400 = phi i32 [ %5467, %5458 ], [ 0, %5395 ]
  %5401 = phi i64 [ %5409, %5458 ], [ %5248, %5395 ]
  %5402 = phi i64 [ %5466, %5458 ], [ %5247, %5395 ]
  %5403 = phi i32 [ %5464, %5458 ], [ %5398, %5395 ]
  %5404 = sub i32 %5246, %5400
  %5405 = tail call i32 @llvm.smin.i32(i32 %5404, i32 0)
  %5406 = sub i32 %5404, %5405
  %5407 = zext i32 %5406 to i64
  %5408 = add nuw nsw i64 %5407, 1
  %5409 = add nsw i64 %5401, -1
  %5410 = icmp ult i32 %5406, 31
  br i1 %5410, label %5446, label %5411

5411:                                             ; preds = %5399
  %5412 = and i64 %5408, 8589934560
  %5413 = sub i64 %5402, %5412
  br label %5414

5414:                                             ; preds = %5414, %5411
  %5415 = phi i64 [ 0, %5411 ], [ %5438, %5414 ]
  %5416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5434, %5414 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5435, %5414 ]
  %5418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5436, %5414 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5437, %5414 ]
  %5420 = sub i64 %5402, %5415
  %5421 = getelementptr inbounds i32, ptr %11, i64 %5420
  %5422 = getelementptr inbounds i32, ptr %5421, i64 -7
  %5423 = load <8 x i32>, ptr %5422, align 4, !tbaa !5
  %5424 = shufflevector <8 x i32> %5423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5425 = getelementptr inbounds i32, ptr %5421, i64 -15
  %5426 = load <8 x i32>, ptr %5425, align 4, !tbaa !5
  %5427 = shufflevector <8 x i32> %5426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5428 = getelementptr inbounds i32, ptr %5421, i64 -23
  %5429 = load <8 x i32>, ptr %5428, align 4, !tbaa !5
  %5430 = shufflevector <8 x i32> %5429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5431 = getelementptr inbounds i32, ptr %5421, i64 -31
  %5432 = load <8 x i32>, ptr %5431, align 4, !tbaa !5
  %5433 = shufflevector <8 x i32> %5432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5434 = mul <8 x i32> %5424, %5416
  %5435 = mul <8 x i32> %5427, %5417
  %5436 = mul <8 x i32> %5430, %5418
  %5437 = mul <8 x i32> %5433, %5419
  %5438 = add nuw i64 %5415, 32
  %5439 = icmp eq i64 %5438, %5412
  br i1 %5439, label %5440, label %5414, !llvm.loop !379

5440:                                             ; preds = %5414
  %5441 = mul <8 x i32> %5435, %5434
  %5442 = mul <8 x i32> %5436, %5441
  %5443 = mul <8 x i32> %5437, %5442
  %5444 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5443)
  %5445 = icmp eq i64 %5408, %5412
  br i1 %5445, label %5458, label %5446

5446:                                             ; preds = %5399, %5440
  %5447 = phi i64 [ %5402, %5399 ], [ %5413, %5440 ]
  %5448 = phi i32 [ 1, %5399 ], [ %5444, %5440 ]
  br label %5449

5449:                                             ; preds = %5446, %5449
  %5450 = phi i64 [ %5455, %5449 ], [ %5447, %5446 ]
  %5451 = phi i32 [ %5454, %5449 ], [ %5448, %5446 ]
  %5452 = getelementptr inbounds i32, ptr %11, i64 %5450
  %5453 = load i32, ptr %5452, align 4, !tbaa !5
  %5454 = mul nsw i32 %5453, %5451
  %5455 = add nsw i64 %5450, -1
  %5456 = trunc i64 %5450 to i32
  %5457 = icmp sgt i32 %5456, 0
  br i1 %5457, label %5449, label %5458, !llvm.loop !380

5458:                                             ; preds = %5449, %5440
  %5459 = phi i32 [ %5444, %5440 ], [ %5454, %5449 ]
  %5460 = and i64 %5409, 4294967295
  %5461 = getelementptr inbounds i32, ptr %6, i64 %5460
  %5462 = load i32, ptr %5461, align 4, !tbaa !5
  %5463 = mul nsw i32 %5462, %5459
  %5464 = add nsw i32 %5463, %5403
  %5465 = icmp sgt i64 %5401, 2
  %5466 = add nsw i64 %5402, -1
  %5467 = add i32 %5400, 1
  br i1 %5465, label %5399, label %5468, !llvm.loop !381

5468:                                             ; preds = %5458, %5395
  %5469 = phi i32 [ %5398, %5395 ], [ %5464, %5458 ]
  %5470 = icmp slt i32 %5469, %5
  br i1 %5470, label %5473, label %5471

5471:                                             ; preds = %5468
  %5472 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5473:                                             ; preds = %5468
  %5474 = sext i32 %5469 to i64
  %5475 = getelementptr inbounds i32, ptr %4927, i64 %5474
  %5476 = load i32, ptr %5475, align 4, !tbaa !5
  %5477 = sitofp i32 %5476 to double
  %5478 = icmp slt i32 %5476, 0
  %5479 = fneg fast double %5477
  %5480 = select fast i1 %5478, double %5479, double %5477
  %5481 = fadd fast double %5480, %5396
  store double %5481, ptr %4929, align 8, !tbaa !18
  %5482 = add nuw nsw i32 %5397, 1
  br i1 %5245, label %5483, label %5533

5483:                                             ; preds = %5473
  %5484 = load i32, ptr %4, align 4, !tbaa !5
  %5485 = load i32, ptr %12, align 4, !tbaa !5
  %5486 = add nsw i32 %5485, -1
  %5487 = icmp slt i32 %5484, %5486
  br i1 %5487, label %5510, label %5488

5488:                                             ; preds = %5483
  %5489 = icmp eq i32 %5484, %5486
  br i1 %5489, label %5490, label %5526

5490:                                             ; preds = %5488
  store i32 0, ptr %4, align 4, !tbaa !5
  %5491 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5491, ptr %6, align 4, !tbaa !5
  br i1 %5250, label %5533, label %5492

5492:                                             ; preds = %5490, %5520
  %5493 = phi i64 [ %5524, %5520 ], [ 1, %5490 ]
  %5494 = getelementptr inbounds i32, ptr %4, i64 %5493
  %5495 = load i32, ptr %5494, align 4, !tbaa !5
  %5496 = getelementptr inbounds i32, ptr %12, i64 %5493
  %5497 = load i32, ptr %5496, align 4, !tbaa !5
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5495, %5498
  br i1 %5499, label %5500, label %5518

5500:                                             ; preds = %5492
  br i1 %5487, label %5510, label %5501

5501:                                             ; preds = %5500
  %5502 = shl i64 %5493, 32
  %5503 = add i64 %5502, -4294967296
  %5504 = ashr exact i64 %5503, 32
  %5505 = getelementptr inbounds i32, ptr %7, i64 %5504
  %5506 = load i32, ptr %5505, align 4, !tbaa !5
  %5507 = getelementptr inbounds i32, ptr %6, i64 %5493
  %5508 = load i32, ptr %5507, align 4, !tbaa !5
  %5509 = add nsw i32 %5508, %5506
  store i32 %5509, ptr %5507, align 4, !tbaa !5
  br label %5528

5510:                                             ; preds = %5483, %5500
  %5511 = phi i32 [ %5495, %5500 ], [ %5484, %5483 ]
  %5512 = phi ptr [ %5494, %5500 ], [ %4, %5483 ]
  %5513 = phi i64 [ %5493, %5500 ], [ 0, %5483 ]
  %5514 = add nsw i32 %5511, 1
  store i32 %5514, ptr %5512, align 4, !tbaa !5
  %5515 = getelementptr inbounds i32, ptr %7, i64 %5513
  %5516 = load i32, ptr %5515, align 4, !tbaa !5
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5513
  br label %5528

5518:                                             ; preds = %5492
  %5519 = icmp eq i32 %5495, %5498
  br i1 %5519, label %5520, label %5526

5520:                                             ; preds = %5518
  store i32 0, ptr %5494, align 4, !tbaa !5
  %5521 = getelementptr inbounds i32, ptr %8, i64 %5493
  %5522 = load i32, ptr %5521, align 4, !tbaa !5
  %5523 = getelementptr inbounds i32, ptr %6, i64 %5493
  store i32 %5522, ptr %5523, align 4, !tbaa !5
  %5524 = add nuw nsw i64 %5493, 1
  %5525 = icmp eq i64 %5524, %5248
  br i1 %5525, label %5533, label %5492, !llvm.loop !382

5526:                                             ; preds = %5488, %5518
  %5527 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5528:                                             ; preds = %5501, %5510
  %5529 = phi ptr [ %5517, %5510 ], [ %5494, %5501 ]
  %5530 = phi i32 [ %5516, %5510 ], [ 1, %5501 ]
  %5531 = load i32, ptr %5529, align 4, !tbaa !5
  %5532 = add nsw i32 %5531, %5530
  store i32 %5532, ptr %5529, align 4, !tbaa !5
  br label %5533

5533:                                             ; preds = %5520, %5528, %5490, %5473
  %5534 = icmp eq i32 %5482, %5
  br i1 %5534, label %5545, label %5395, !llvm.loop !383

5535:                                             ; preds = %4937
  %5536 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

5537:                                             ; preds = %2030
  store i16 %1980, ptr %1859, align 2, !tbaa !78
  br label %5545

5538:                                             ; preds = %2333
  store i16 %2283, ptr %1859, align 2, !tbaa !78
  br label %5545

5539:                                             ; preds = %3255
  store i64 %3205, ptr %3089, align 8, !tbaa !120
  br label %5545

5540:                                             ; preds = %3553
  store i64 %3503, ptr %3089, align 8, !tbaa !120
  br label %5545

5541:                                             ; preds = %4163
  store double %4113, ptr %3699, align 8, !tbaa !18
  br label %5545

5542:                                             ; preds = %4480
  store float %4430, ptr %4311, align 4, !tbaa !162
  br label %5545

5543:                                             ; preds = %4781
  store float %4731, ptr %4311, align 4, !tbaa !162
  br label %5545

5544:                                             ; preds = %5393
  store double %5343, ptr %4929, align 8, !tbaa !18
  br label %5545

5545:                                             ; preds = %5533, %5235, %5095, %4921, %4623, %4303, %4005, %3865, %3691, %3397, %3081, %2944, %2789, %2647, %2474, %2174, %1851, %1710, %1551, %1407, %1228, %1091, %936, %794, %621, %484, %329, %192, %5242, %5251, %5544, %4943, %4952, %4630, %4639, %5543, %4325, %4334, %5542, %4012, %4021, %5541, %3713, %3722, %3404, %3413, %5540, %3101, %3110, %5539, %2796, %2805, %2493, %2502, %2181, %2190, %5538, %1874, %1883, %5537, %1558, %1567, %1251, %1260, %943, %952, %640, %649, %336, %345, %37, %46, %4931, %5535, %4313, %4923, %3701, %4305, %3091, %3693, %2484, %3083, %1861, %2476, %1238, %1853, %631, %1230, %28, %623, %18
  %5546 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1230 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %1238 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %1861 ], [ 0.000000e+00, %3083 ], [ 0.000000e+00, %2484 ], [ 0.000000e+00, %3693 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %4305 ], [ 0.000000e+00, %3701 ], [ 0.000000e+00, %4923 ], [ 0.000000e+00, %4313 ], [ 0.000000e+00, %5535 ], [ 0.000000e+00, %4931 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %952 ], [ 0.000000e+00, %943 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1981, %5537 ], [ 0.000000e+00, %1883 ], [ 0.000000e+00, %1874 ], [ %2284, %5538 ], [ 0.000000e+00, %2190 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2502 ], [ 0.000000e+00, %2493 ], [ 0.000000e+00, %2805 ], [ 0.000000e+00, %2796 ], [ %3206, %5539 ], [ 0.000000e+00, %3110 ], [ 0.000000e+00, %3101 ], [ %3504, %5540 ], [ 0.000000e+00, %3413 ], [ 0.000000e+00, %3404 ], [ 0.000000e+00, %3722 ], [ 0.000000e+00, %3713 ], [ %4114, %5541 ], [ 0.000000e+00, %4021 ], [ 0.000000e+00, %4012 ], [ %4431, %5542 ], [ 0.000000e+00, %4334 ], [ 0.000000e+00, %4325 ], [ %4732, %5543 ], [ 0.000000e+00, %4639 ], [ 0.000000e+00, %4630 ], [ 0.000000e+00, %4952 ], [ 0.000000e+00, %4943 ], [ %5344, %5544 ], [ 0.000000e+00, %5251 ], [ 0.000000e+00, %5242 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %745, %794 ], [ 0.000000e+00, %936 ], [ %1042, %1091 ], [ 0.000000e+00, %1228 ], [ %1358, %1407 ], [ 0.000000e+00, %1551 ], [ %1661, %1710 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %2174 ], [ 0.000000e+00, %2474 ], [ %2598, %2647 ], [ 0.000000e+00, %2789 ], [ %2895, %2944 ], [ 0.000000e+00, %3081 ], [ 0.000000e+00, %3397 ], [ 0.000000e+00, %3691 ], [ %3816, %3865 ], [ 0.000000e+00, %4005 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %4623 ], [ 0.000000e+00, %4921 ], [ %5046, %5095 ], [ 0.000000e+00, %5235 ], [ 0.000000e+00, %5533 ]
  %5547 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1230 ], [ 1, %631 ], [ 1, %1853 ], [ 1, %1238 ], [ 1, %2476 ], [ 1, %1861 ], [ 1, %3083 ], [ 1, %2484 ], [ 1, %3693 ], [ 1, %3091 ], [ 1, %4305 ], [ 1, %3701 ], [ 1, %4923 ], [ 1, %4313 ], [ 1, %5535 ], [ 1, %4931 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %649 ], [ 1, %640 ], [ 1, %952 ], [ 1, %943 ], [ 1, %1260 ], [ 1, %1251 ], [ 1, %1567 ], [ 1, %1558 ], [ %1890, %5537 ], [ 1, %1883 ], [ 1, %1874 ], [ %2197, %5538 ], [ 1, %2190 ], [ 1, %2181 ], [ 1, %2502 ], [ 1, %2493 ], [ 1, %2805 ], [ 1, %2796 ], [ %3117, %5539 ], [ 1, %3110 ], [ 1, %3101 ], [ %3420, %5540 ], [ 1, %3413 ], [ 1, %3404 ], [ 1, %3722 ], [ 1, %3713 ], [ %4028, %5541 ], [ 1, %4021 ], [ 1, %4012 ], [ %4341, %5542 ], [ 1, %4334 ], [ 1, %4325 ], [ %4646, %5543 ], [ 1, %4639 ], [ 1, %4630 ], [ 1, %4952 ], [ 1, %4943 ], [ %5258, %5544 ], [ 1, %5251 ], [ 1, %5242 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %656, %794 ], [ %647, %936 ], [ %959, %1091 ], [ %950, %1228 ], [ %1267, %1407 ], [ %1258, %1551 ], [ %1574, %1710 ], [ %1565, %1851 ], [ %1881, %2174 ], [ %2188, %2474 ], [ %2509, %2647 ], [ %2500, %2789 ], [ %2812, %2944 ], [ %2803, %3081 ], [ %3108, %3397 ], [ %3411, %3691 ], [ %3729, %3865 ], [ %3720, %4005 ], [ %4019, %4303 ], [ %4332, %4623 ], [ %4637, %4921 ], [ %4959, %5095 ], [ %4950, %5235 ], [ %5249, %5533 ]
  %5548 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5547, ptr noundef nonnull @.str.5) #3
  %5549 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5546, ptr noundef nonnull @.str.6) #3
  br label %5550

5550:                                             ; preds = %5088, %5173, %5228, %5386, %5471, %5526, %4473, %4558, %4616, %4774, %4859, %4914, %3858, %3943, %3998, %4156, %4241, %4296, %3248, %3333, %3390, %3546, %3631, %3684, %2640, %2724, %2782, %2937, %3021, %3074, %2023, %2108, %2167, %2326, %2411, %2467, %1400, %1484, %1544, %1703, %1787, %1844, %787, %871, %929, %1084, %1168, %1221, %185, %269, %322, %477, %561, %614, %5545
  %5551 = phi i32 [ 0, %5545 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1221 ], [ -1, %1168 ], [ -1, %1084 ], [ -1, %929 ], [ -1, %871 ], [ -1, %787 ], [ -1, %1844 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1544 ], [ -1, %1484 ], [ -1, %1400 ], [ -1, %2467 ], [ -1, %2411 ], [ -1, %2326 ], [ -1, %2167 ], [ -1, %2108 ], [ -1, %2023 ], [ -1, %3074 ], [ -1, %3021 ], [ -1, %2937 ], [ -1, %2782 ], [ -1, %2724 ], [ -1, %2640 ], [ -1, %3684 ], [ -1, %3631 ], [ -1, %3546 ], [ -1, %3390 ], [ -1, %3333 ], [ -1, %3248 ], [ -1, %4296 ], [ -1, %4241 ], [ -1, %4156 ], [ -1, %3998 ], [ -1, %3943 ], [ -1, %3858 ], [ -1, %4914 ], [ -1, %4859 ], [ -1, %4774 ], [ -1, %4616 ], [ -1, %4558 ], [ -1, %4473 ], [ -1, %5526 ], [ -1, %5471 ], [ -1, %5386 ], [ -1, %5228 ], [ -1, %5173 ], [ -1, %5088 ]
  ret i32 %5551
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3070 [
    i32 101, label %22
    i32 102, label %620
    i32 107, label %1230
    i32 108, label %1842
    i32 109, label %2458
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %3070

30:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %31
    i32 0, label %328
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %3070

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %192

45:                                               ; preds = %31
  br i1 %35, label %46, label %3070

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %190
  %55 = phi i32 [ 0, %46 ], [ %142, %190 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %141, %190 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !384

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !385

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !386

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = tail call fast double @llvm.fabs.f64(double %137)
  %139 = fadd fast double %138, %135
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = fadd fast double %131, %56
  %142 = add nuw nsw i32 %55, 1
  br i1 %48, label %143, label %190

143:                                              ; preds = %127
  %144 = load i32, ptr %4, align 4, !tbaa !5
  %145 = load i32, ptr %12, align 4, !tbaa !5
  %146 = add nsw i32 %145, -1
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %167, label %148

148:                                              ; preds = %143
  %149 = icmp eq i32 %144, %146
  br i1 %149, label %150, label %183

150:                                              ; preds = %148
  store i32 0, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %151, ptr %6, align 4, !tbaa !5
  br i1 %53, label %190, label %152

152:                                              ; preds = %150, %177
  %153 = phi i64 [ %181, %177 ], [ 1, %150 ]
  %154 = getelementptr inbounds i32, ptr %4, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !5
  %156 = getelementptr inbounds i32, ptr %12, i64 %153
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = add nsw i32 %157, -1
  %159 = icmp slt i32 %155, %158
  br i1 %159, label %160, label %175

160:                                              ; preds = %152
  br i1 %147, label %167, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds i32, ptr %7, i64 %153
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = getelementptr inbounds i32, ptr %6, i64 %153
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = add nsw i32 %165, %163
  store i32 %166, ptr %164, align 4, !tbaa !5
  br label %185

167:                                              ; preds = %143, %160
  %168 = phi i32 [ %155, %160 ], [ %144, %143 ]
  %169 = phi ptr [ %154, %160 ], [ %4, %143 ]
  %170 = phi i64 [ %153, %160 ], [ 0, %143 ]
  %171 = add nsw i32 %168, 1
  store i32 %171, ptr %169, align 4, !tbaa !5
  %172 = getelementptr inbounds i32, ptr %7, i64 %170
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %170
  br label %185

175:                                              ; preds = %152
  %176 = icmp eq i32 %155, %158
  br i1 %176, label %177, label %183

177:                                              ; preds = %175
  store i32 0, ptr %154, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %8, i64 %153
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %153
  store i32 %179, ptr %180, align 4, !tbaa !5
  %181 = add nuw nsw i64 %153, 1
  %182 = icmp eq i64 %181, %51
  br i1 %182, label %190, label %152, !llvm.loop !387

183:                                              ; preds = %148, %175
  %184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

185:                                              ; preds = %161, %167
  %186 = phi ptr [ %174, %167 ], [ %154, %161 ]
  %187 = phi i32 [ %173, %167 ], [ 1, %161 ]
  %188 = load i32, ptr %186, align 4, !tbaa !5
  %189 = add nsw i32 %188, %187
  store i32 %189, ptr %186, align 4, !tbaa !5
  br label %190

190:                                              ; preds = %177, %185, %150, %127
  %191 = icmp eq i32 %142, %5
  br i1 %191, label %3070, label %54, !llvm.loop !388

192:                                              ; preds = %37, %326
  %193 = phi i32 [ 0, %37 ], [ %275, %326 ]
  %194 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %195, label %264

195:                                              ; preds = %192, %254
  %196 = phi i32 [ %263, %254 ], [ 0, %192 ]
  %197 = phi i64 [ %205, %254 ], [ %42, %192 ]
  %198 = phi i64 [ %262, %254 ], [ %41, %192 ]
  %199 = phi i32 [ %260, %254 ], [ %194, %192 ]
  %200 = sub i32 %40, %196
  %201 = tail call i32 @llvm.smin.i32(i32 %200, i32 0)
  %202 = sub i32 %200, %201
  %203 = zext i32 %202 to i64
  %204 = add nuw nsw i64 %203, 1
  %205 = add nsw i64 %197, -1
  %206 = icmp ult i32 %202, 31
  br i1 %206, label %242, label %207

207:                                              ; preds = %195
  %208 = and i64 %204, 8589934560
  %209 = sub i64 %198, %208
  br label %210

210:                                              ; preds = %210, %207
  %211 = phi i64 [ 0, %207 ], [ %234, %210 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %230, %210 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %231, %210 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %232, %210 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %233, %210 ]
  %216 = sub i64 %198, %211
  %217 = getelementptr inbounds i32, ptr %11, i64 %216
  %218 = getelementptr inbounds i32, ptr %217, i64 -7
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %217, i64 -15
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %217, i64 -23
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %217, i64 -31
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = mul <8 x i32> %220, %212
  %231 = mul <8 x i32> %223, %213
  %232 = mul <8 x i32> %226, %214
  %233 = mul <8 x i32> %229, %215
  %234 = add nuw i64 %211, 32
  %235 = icmp eq i64 %234, %208
  br i1 %235, label %236, label %210, !llvm.loop !389

236:                                              ; preds = %210
  %237 = mul <8 x i32> %231, %230
  %238 = mul <8 x i32> %232, %237
  %239 = mul <8 x i32> %233, %238
  %240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %239)
  %241 = icmp eq i64 %204, %208
  br i1 %241, label %254, label %242

242:                                              ; preds = %195, %236
  %243 = phi i64 [ %198, %195 ], [ %209, %236 ]
  %244 = phi i32 [ 1, %195 ], [ %240, %236 ]
  br label %245

245:                                              ; preds = %242, %245
  %246 = phi i64 [ %251, %245 ], [ %243, %242 ]
  %247 = phi i32 [ %250, %245 ], [ %244, %242 ]
  %248 = getelementptr inbounds i32, ptr %11, i64 %246
  %249 = load i32, ptr %248, align 4, !tbaa !5
  %250 = mul nsw i32 %249, %247
  %251 = add nsw i64 %246, -1
  %252 = trunc i64 %246 to i32
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %245, label %254, !llvm.loop !390

254:                                              ; preds = %245, %236
  %255 = phi i32 [ %240, %236 ], [ %250, %245 ]
  %256 = and i64 %205, 4294967295
  %257 = getelementptr inbounds i32, ptr %6, i64 %256
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %255
  %260 = add nsw i32 %259, %199
  %261 = icmp sgt i64 %197, 2
  %262 = add nsw i64 %198, -1
  %263 = add i32 %196, 1
  br i1 %261, label %195, label %264, !llvm.loop !391

264:                                              ; preds = %254, %192
  %265 = phi i32 [ %194, %192 ], [ %260, %254 ]
  %266 = icmp slt i32 %265, %5
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

269:                                              ; preds = %264
  %270 = load i8, ptr %26, align 1, !tbaa !11
  %271 = sext i32 %265 to i64
  %272 = getelementptr inbounds i8, ptr %24, i64 %271
  %273 = load i8, ptr %272, align 1, !tbaa !11
  %274 = add i8 %273, %270
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %193, 1
  br i1 %39, label %276, label %326

276:                                              ; preds = %269
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %44, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %42
  br i1 %318, label %326, label %285, !llvm.loop !392

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %269
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %3070, label %192, !llvm.loop !393

328:                                              ; preds = %30
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %3070

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %482

342:                                              ; preds = %328
  br i1 %332, label %343, label %3070

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %480
  %352 = phi i32 [ 0, %343 ], [ %432, %480 ]
  %353 = phi double [ 0.000000e+00, %343 ], [ %431, %480 ]
  %354 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %355, label %424

355:                                              ; preds = %351, %414
  %356 = phi i32 [ %423, %414 ], [ 0, %351 ]
  %357 = phi i64 [ %365, %414 ], [ %348, %351 ]
  %358 = phi i64 [ %422, %414 ], [ %347, %351 ]
  %359 = phi i32 [ %420, %414 ], [ %354, %351 ]
  %360 = sub i32 %346, %356
  %361 = tail call i32 @llvm.smin.i32(i32 %360, i32 0)
  %362 = sub i32 %360, %361
  %363 = zext i32 %362 to i64
  %364 = add nuw nsw i64 %363, 1
  %365 = add nsw i64 %357, -1
  %366 = icmp ult i32 %362, 31
  br i1 %366, label %402, label %367

367:                                              ; preds = %355
  %368 = and i64 %364, 8589934560
  %369 = sub i64 %358, %368
  br label %370

370:                                              ; preds = %370, %367
  %371 = phi i64 [ 0, %367 ], [ %394, %370 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %390, %370 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %391, %370 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %392, %370 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %393, %370 ]
  %376 = sub i64 %358, %371
  %377 = getelementptr inbounds i32, ptr %9, i64 %376
  %378 = getelementptr inbounds i32, ptr %377, i64 -7
  %379 = load <8 x i32>, ptr %378, align 4, !tbaa !5
  %380 = shufflevector <8 x i32> %379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %381 = getelementptr inbounds i32, ptr %377, i64 -15
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %377, i64 -23
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %377, i64 -31
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = mul <8 x i32> %380, %372
  %391 = mul <8 x i32> %383, %373
  %392 = mul <8 x i32> %386, %374
  %393 = mul <8 x i32> %389, %375
  %394 = add nuw i64 %371, 32
  %395 = icmp eq i64 %394, %368
  br i1 %395, label %396, label %370, !llvm.loop !394

396:                                              ; preds = %370
  %397 = mul <8 x i32> %391, %390
  %398 = mul <8 x i32> %392, %397
  %399 = mul <8 x i32> %393, %398
  %400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %399)
  %401 = icmp eq i64 %364, %368
  br i1 %401, label %414, label %402

402:                                              ; preds = %355, %396
  %403 = phi i64 [ %358, %355 ], [ %369, %396 ]
  %404 = phi i32 [ 1, %355 ], [ %400, %396 ]
  br label %405

405:                                              ; preds = %402, %405
  %406 = phi i64 [ %411, %405 ], [ %403, %402 ]
  %407 = phi i32 [ %410, %405 ], [ %404, %402 ]
  %408 = getelementptr inbounds i32, ptr %9, i64 %406
  %409 = load i32, ptr %408, align 4, !tbaa !5
  %410 = mul nsw i32 %409, %407
  %411 = add nsw i64 %406, -1
  %412 = trunc i64 %406 to i32
  %413 = icmp sgt i32 %412, 0
  br i1 %413, label %405, label %414, !llvm.loop !395

414:                                              ; preds = %405, %396
  %415 = phi i32 [ %400, %396 ], [ %410, %405 ]
  %416 = and i64 %365, 4294967295
  %417 = getelementptr inbounds i32, ptr %6, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !5
  %419 = mul nsw i32 %418, %415
  %420 = add nsw i32 %419, %359
  %421 = icmp sgt i64 %357, 2
  %422 = add nsw i64 %358, -1
  %423 = add i32 %356, 1
  br i1 %421, label %355, label %424, !llvm.loop !396

424:                                              ; preds = %414, %351
  %425 = phi i32 [ %354, %351 ], [ %420, %414 ]
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i8, ptr %24, i64 %426
  %428 = load i8, ptr %427, align 1, !tbaa !11
  %429 = load i8, ptr %26, align 1, !tbaa !11
  %430 = add i8 %429, %428
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = fadd fast double %353, 1.000000e+00
  %432 = add nuw nsw i32 %352, 1
  br i1 %345, label %433, label %480

433:                                              ; preds = %424
  %434 = load i32, ptr %4, align 4, !tbaa !5
  %435 = load i32, ptr %12, align 4, !tbaa !5
  %436 = add nsw i32 %435, -1
  %437 = icmp slt i32 %434, %436
  br i1 %437, label %457, label %438

438:                                              ; preds = %433
  %439 = icmp eq i32 %434, %436
  br i1 %439, label %440, label %473

440:                                              ; preds = %438
  store i32 0, ptr %4, align 4, !tbaa !5
  %441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %441, ptr %6, align 4, !tbaa !5
  br i1 %350, label %480, label %442

442:                                              ; preds = %440, %467
  %443 = phi i64 [ %471, %467 ], [ 1, %440 ]
  %444 = getelementptr inbounds i32, ptr %4, i64 %443
  %445 = load i32, ptr %444, align 4, !tbaa !5
  %446 = getelementptr inbounds i32, ptr %12, i64 %443
  %447 = load i32, ptr %446, align 4, !tbaa !5
  %448 = add nsw i32 %447, -1
  %449 = icmp slt i32 %445, %448
  br i1 %449, label %450, label %465

450:                                              ; preds = %442
  br i1 %437, label %457, label %451

451:                                              ; preds = %450
  %452 = getelementptr inbounds i32, ptr %7, i64 %443
  %453 = load i32, ptr %452, align 4, !tbaa !5
  %454 = getelementptr inbounds i32, ptr %6, i64 %443
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = add nsw i32 %455, %453
  store i32 %456, ptr %454, align 4, !tbaa !5
  br label %475

457:                                              ; preds = %433, %450
  %458 = phi i32 [ %445, %450 ], [ %434, %433 ]
  %459 = phi ptr [ %444, %450 ], [ %4, %433 ]
  %460 = phi i64 [ %443, %450 ], [ 0, %433 ]
  %461 = add nsw i32 %458, 1
  store i32 %461, ptr %459, align 4, !tbaa !5
  %462 = getelementptr inbounds i32, ptr %7, i64 %460
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %6, i64 %460
  br label %475

465:                                              ; preds = %442
  %466 = icmp eq i32 %445, %448
  br i1 %466, label %467, label %473

467:                                              ; preds = %465
  store i32 0, ptr %444, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %8, i64 %443
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %443
  store i32 %469, ptr %470, align 4, !tbaa !5
  %471 = add nuw nsw i64 %443, 1
  %472 = icmp eq i64 %471, %348
  br i1 %472, label %480, label %442, !llvm.loop !397

473:                                              ; preds = %438, %465
  %474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

475:                                              ; preds = %451, %457
  %476 = phi ptr [ %464, %457 ], [ %444, %451 ]
  %477 = phi i32 [ %463, %457 ], [ 1, %451 ]
  %478 = load i32, ptr %476, align 4, !tbaa !5
  %479 = add nsw i32 %478, %477
  store i32 %479, ptr %476, align 4, !tbaa !5
  br label %480

480:                                              ; preds = %467, %475, %440, %424
  %481 = icmp eq i32 %432, %5
  br i1 %481, label %3070, label %351, !llvm.loop !398

482:                                              ; preds = %334, %616
  %483 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %484 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %485, label %554

485:                                              ; preds = %482, %544
  %486 = phi i32 [ %553, %544 ], [ 0, %482 ]
  %487 = phi i64 [ %495, %544 ], [ %339, %482 ]
  %488 = phi i64 [ %552, %544 ], [ %338, %482 ]
  %489 = phi i32 [ %550, %544 ], [ %484, %482 ]
  %490 = sub i32 %337, %486
  %491 = tail call i32 @llvm.smin.i32(i32 %490, i32 0)
  %492 = sub i32 %490, %491
  %493 = zext i32 %492 to i64
  %494 = add nuw nsw i64 %493, 1
  %495 = add nsw i64 %487, -1
  %496 = icmp ult i32 %492, 31
  br i1 %496, label %532, label %497

497:                                              ; preds = %485
  %498 = and i64 %494, 8589934560
  %499 = sub i64 %488, %498
  br label %500

500:                                              ; preds = %500, %497
  %501 = phi i64 [ 0, %497 ], [ %524, %500 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %520, %500 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %521, %500 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %522, %500 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %523, %500 ]
  %506 = sub i64 %488, %501
  %507 = getelementptr inbounds i32, ptr %11, i64 %506
  %508 = getelementptr inbounds i32, ptr %507, i64 -7
  %509 = load <8 x i32>, ptr %508, align 4, !tbaa !5
  %510 = shufflevector <8 x i32> %509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %511 = getelementptr inbounds i32, ptr %507, i64 -15
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %507, i64 -23
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %507, i64 -31
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = mul <8 x i32> %510, %502
  %521 = mul <8 x i32> %513, %503
  %522 = mul <8 x i32> %516, %504
  %523 = mul <8 x i32> %519, %505
  %524 = add nuw i64 %501, 32
  %525 = icmp eq i64 %524, %498
  br i1 %525, label %526, label %500, !llvm.loop !399

526:                                              ; preds = %500
  %527 = mul <8 x i32> %521, %520
  %528 = mul <8 x i32> %522, %527
  %529 = mul <8 x i32> %523, %528
  %530 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %529)
  %531 = icmp eq i64 %494, %498
  br i1 %531, label %544, label %532

532:                                              ; preds = %485, %526
  %533 = phi i64 [ %488, %485 ], [ %499, %526 ]
  %534 = phi i32 [ 1, %485 ], [ %530, %526 ]
  br label %535

535:                                              ; preds = %532, %535
  %536 = phi i64 [ %541, %535 ], [ %533, %532 ]
  %537 = phi i32 [ %540, %535 ], [ %534, %532 ]
  %538 = getelementptr inbounds i32, ptr %11, i64 %536
  %539 = load i32, ptr %538, align 4, !tbaa !5
  %540 = mul nsw i32 %539, %537
  %541 = add nsw i64 %536, -1
  %542 = trunc i64 %536 to i32
  %543 = icmp sgt i32 %542, 0
  br i1 %543, label %535, label %544, !llvm.loop !400

544:                                              ; preds = %535, %526
  %545 = phi i32 [ %530, %526 ], [ %540, %535 ]
  %546 = and i64 %495, 4294967295
  %547 = getelementptr inbounds i32, ptr %6, i64 %546
  %548 = load i32, ptr %547, align 4, !tbaa !5
  %549 = mul nsw i32 %548, %545
  %550 = add nsw i32 %549, %489
  %551 = icmp sgt i64 %487, 2
  %552 = add nsw i64 %488, -1
  %553 = add i32 %486, 1
  br i1 %551, label %485, label %554, !llvm.loop !401

554:                                              ; preds = %544, %482
  %555 = phi i32 [ %484, %482 ], [ %550, %544 ]
  %556 = icmp slt i32 %555, %5
  br i1 %556, label %559, label %557

557:                                              ; preds = %554
  %558 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

559:                                              ; preds = %554
  %560 = sext i32 %555 to i64
  %561 = getelementptr inbounds i8, ptr %24, i64 %560
  %562 = load i8, ptr %561, align 1, !tbaa !11
  %563 = load i8, ptr %26, align 1, !tbaa !11
  %564 = add i8 %563, %562
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %483, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %559
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !402

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %559
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %3070, label %482, !llvm.loop !403

618:                                              ; preds = %30
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3070

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %630

626:                                              ; preds = %620
  %627 = load i8, ptr %622, align 1, !tbaa !11
  %628 = tail call i8 @llvm.abs.i8(i8 %627, i1 false)
  %629 = zext i8 %628 to i32
  store i32 %629, ptr %624, align 4, !tbaa !5
  br label %3070

630:                                              ; preds = %620
  switch i32 %1, label %1228 [
    i32 1, label %631
    i32 0, label %934
  ]

631:                                              ; preds = %630
  %632 = getelementptr inbounds i32, ptr %3, i64 %19
  %633 = load i32, ptr %632, align 4, !tbaa !5
  %634 = icmp eq i32 %633, 0
  %635 = icmp sgt i32 %5, 0
  br i1 %634, label %645, label %636

636:                                              ; preds = %631
  br i1 %635, label %637, label %3070

637:                                              ; preds = %636
  %638 = icmp sgt i32 %13, 1
  %639 = icmp sgt i32 %13, 0
  %640 = add i32 %13, -2
  %641 = zext i32 %640 to i64
  %642 = zext i32 %13 to i64
  %643 = add nuw i32 %5, 1
  %644 = icmp eq i32 %13, 1
  br label %792

645:                                              ; preds = %631
  br i1 %635, label %646, label %3070

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %654

654:                                              ; preds = %646, %790
  %655 = phi i32 [ 0, %646 ], [ %742, %790 ]
  %656 = phi double [ 0.000000e+00, %646 ], [ %741, %790 ]
  %657 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %658, label %727

658:                                              ; preds = %654, %717
  %659 = phi i32 [ %726, %717 ], [ 0, %654 ]
  %660 = phi i64 [ %668, %717 ], [ %651, %654 ]
  %661 = phi i64 [ %725, %717 ], [ %650, %654 ]
  %662 = phi i32 [ %723, %717 ], [ %657, %654 ]
  %663 = sub i32 %649, %659
  %664 = tail call i32 @llvm.smin.i32(i32 %663, i32 0)
  %665 = sub i32 %663, %664
  %666 = zext i32 %665 to i64
  %667 = add nuw nsw i64 %666, 1
  %668 = add nsw i64 %660, -1
  %669 = icmp ult i32 %665, 31
  br i1 %669, label %705, label %670

670:                                              ; preds = %658
  %671 = and i64 %667, 8589934560
  %672 = sub i64 %661, %671
  br label %673

673:                                              ; preds = %673, %670
  %674 = phi i64 [ 0, %670 ], [ %697, %673 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %670 ], [ %693, %673 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %670 ], [ %694, %673 ]
  %677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %670 ], [ %695, %673 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %670 ], [ %696, %673 ]
  %679 = sub i64 %661, %674
  %680 = getelementptr inbounds i32, ptr %9, i64 %679
  %681 = getelementptr inbounds i32, ptr %680, i64 -7
  %682 = load <8 x i32>, ptr %681, align 4, !tbaa !5
  %683 = shufflevector <8 x i32> %682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %684 = getelementptr inbounds i32, ptr %680, i64 -15
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %680, i64 -23
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %680, i64 -31
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = mul <8 x i32> %683, %675
  %694 = mul <8 x i32> %686, %676
  %695 = mul <8 x i32> %689, %677
  %696 = mul <8 x i32> %692, %678
  %697 = add nuw i64 %674, 32
  %698 = icmp eq i64 %697, %671
  br i1 %698, label %699, label %673, !llvm.loop !404

699:                                              ; preds = %673
  %700 = mul <8 x i32> %694, %693
  %701 = mul <8 x i32> %695, %700
  %702 = mul <8 x i32> %696, %701
  %703 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %702)
  %704 = icmp eq i64 %667, %671
  br i1 %704, label %717, label %705

705:                                              ; preds = %658, %699
  %706 = phi i64 [ %661, %658 ], [ %672, %699 ]
  %707 = phi i32 [ 1, %658 ], [ %703, %699 ]
  br label %708

708:                                              ; preds = %705, %708
  %709 = phi i64 [ %714, %708 ], [ %706, %705 ]
  %710 = phi i32 [ %713, %708 ], [ %707, %705 ]
  %711 = getelementptr inbounds i32, ptr %9, i64 %709
  %712 = load i32, ptr %711, align 4, !tbaa !5
  %713 = mul nsw i32 %712, %710
  %714 = add nsw i64 %709, -1
  %715 = trunc i64 %709 to i32
  %716 = icmp sgt i32 %715, 0
  br i1 %716, label %708, label %717, !llvm.loop !405

717:                                              ; preds = %708, %699
  %718 = phi i32 [ %703, %699 ], [ %713, %708 ]
  %719 = and i64 %668, 4294967295
  %720 = getelementptr inbounds i32, ptr %6, i64 %719
  %721 = load i32, ptr %720, align 4, !tbaa !5
  %722 = mul nsw i32 %721, %718
  %723 = add nsw i32 %722, %662
  %724 = icmp sgt i64 %660, 2
  %725 = add nsw i64 %661, -1
  %726 = add i32 %659, 1
  br i1 %724, label %658, label %727, !llvm.loop !406

727:                                              ; preds = %717, %654
  %728 = phi i32 [ %657, %654 ], [ %723, %717 ]
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds double, ptr %2, i64 %729
  %731 = load double, ptr %730, align 8, !tbaa !18
  %732 = getelementptr inbounds i8, ptr %622, i64 %729
  %733 = load i8, ptr %732, align 1, !tbaa !11
  %734 = load i32, ptr %624, align 4, !tbaa !5
  %735 = sitofp i32 %734 to double
  %736 = sitofp i8 %733 to double
  %737 = fmul fast double %731, %736
  %738 = tail call fast double @llvm.fabs.f64(double %737)
  %739 = fadd fast double %738, %735
  %740 = fptosi double %739 to i32
  store i32 %740, ptr %624, align 4, !tbaa !5
  %741 = fadd fast double %731, %656
  %742 = add nuw nsw i32 %655, 1
  br i1 %648, label %743, label %790

743:                                              ; preds = %727
  %744 = load i32, ptr %4, align 4, !tbaa !5
  %745 = load i32, ptr %12, align 4, !tbaa !5
  %746 = add nsw i32 %745, -1
  %747 = icmp slt i32 %744, %746
  br i1 %747, label %767, label %748

748:                                              ; preds = %743
  %749 = icmp eq i32 %744, %746
  br i1 %749, label %750, label %783

750:                                              ; preds = %748
  store i32 0, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %751, ptr %6, align 4, !tbaa !5
  br i1 %653, label %790, label %752

752:                                              ; preds = %750, %777
  %753 = phi i64 [ %781, %777 ], [ 1, %750 ]
  %754 = getelementptr inbounds i32, ptr %4, i64 %753
  %755 = load i32, ptr %754, align 4, !tbaa !5
  %756 = getelementptr inbounds i32, ptr %12, i64 %753
  %757 = load i32, ptr %756, align 4, !tbaa !5
  %758 = add nsw i32 %757, -1
  %759 = icmp slt i32 %755, %758
  br i1 %759, label %760, label %775

760:                                              ; preds = %752
  br i1 %747, label %767, label %761

761:                                              ; preds = %760
  %762 = getelementptr inbounds i32, ptr %7, i64 %753
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = getelementptr inbounds i32, ptr %6, i64 %753
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = add nsw i32 %765, %763
  store i32 %766, ptr %764, align 4, !tbaa !5
  br label %785

767:                                              ; preds = %743, %760
  %768 = phi i32 [ %755, %760 ], [ %744, %743 ]
  %769 = phi ptr [ %754, %760 ], [ %4, %743 ]
  %770 = phi i64 [ %753, %760 ], [ 0, %743 ]
  %771 = add nsw i32 %768, 1
  store i32 %771, ptr %769, align 4, !tbaa !5
  %772 = getelementptr inbounds i32, ptr %7, i64 %770
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %6, i64 %770
  br label %785

775:                                              ; preds = %752
  %776 = icmp eq i32 %755, %758
  br i1 %776, label %777, label %783

777:                                              ; preds = %775
  store i32 0, ptr %754, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %8, i64 %753
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %753
  store i32 %779, ptr %780, align 4, !tbaa !5
  %781 = add nuw nsw i64 %753, 1
  %782 = icmp eq i64 %781, %651
  br i1 %782, label %790, label %752, !llvm.loop !407

783:                                              ; preds = %748, %775
  %784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

785:                                              ; preds = %761, %767
  %786 = phi ptr [ %774, %767 ], [ %754, %761 ]
  %787 = phi i32 [ %773, %767 ], [ 1, %761 ]
  %788 = load i32, ptr %786, align 4, !tbaa !5
  %789 = add nsw i32 %788, %787
  store i32 %789, ptr %786, align 4, !tbaa !5
  br label %790

790:                                              ; preds = %777, %785, %750, %727
  %791 = icmp eq i32 %742, %5
  br i1 %791, label %3070, label %654, !llvm.loop !408

792:                                              ; preds = %637, %932
  %793 = phi i32 [ 0, %637 ], [ %881, %932 ]
  %794 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %638, label %795, label %864

795:                                              ; preds = %792, %854
  %796 = phi i32 [ %863, %854 ], [ 0, %792 ]
  %797 = phi i64 [ %805, %854 ], [ %642, %792 ]
  %798 = phi i64 [ %862, %854 ], [ %641, %792 ]
  %799 = phi i32 [ %860, %854 ], [ %794, %792 ]
  %800 = sub i32 %640, %796
  %801 = tail call i32 @llvm.smin.i32(i32 %800, i32 0)
  %802 = sub i32 %800, %801
  %803 = zext i32 %802 to i64
  %804 = add nuw nsw i64 %803, 1
  %805 = add nsw i64 %797, -1
  %806 = icmp ult i32 %802, 31
  br i1 %806, label %842, label %807

807:                                              ; preds = %795
  %808 = and i64 %804, 8589934560
  %809 = sub i64 %798, %808
  br label %810

810:                                              ; preds = %810, %807
  %811 = phi i64 [ 0, %807 ], [ %834, %810 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %807 ], [ %830, %810 ]
  %813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %807 ], [ %831, %810 ]
  %814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %807 ], [ %832, %810 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %807 ], [ %833, %810 ]
  %816 = sub i64 %798, %811
  %817 = getelementptr inbounds i32, ptr %11, i64 %816
  %818 = getelementptr inbounds i32, ptr %817, i64 -7
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %817, i64 -15
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %817, i64 -23
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %817, i64 -31
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = mul <8 x i32> %820, %812
  %831 = mul <8 x i32> %823, %813
  %832 = mul <8 x i32> %826, %814
  %833 = mul <8 x i32> %829, %815
  %834 = add nuw i64 %811, 32
  %835 = icmp eq i64 %834, %808
  br i1 %835, label %836, label %810, !llvm.loop !409

836:                                              ; preds = %810
  %837 = mul <8 x i32> %831, %830
  %838 = mul <8 x i32> %832, %837
  %839 = mul <8 x i32> %833, %838
  %840 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %839)
  %841 = icmp eq i64 %804, %808
  br i1 %841, label %854, label %842

842:                                              ; preds = %795, %836
  %843 = phi i64 [ %798, %795 ], [ %809, %836 ]
  %844 = phi i32 [ 1, %795 ], [ %840, %836 ]
  br label %845

845:                                              ; preds = %842, %845
  %846 = phi i64 [ %851, %845 ], [ %843, %842 ]
  %847 = phi i32 [ %850, %845 ], [ %844, %842 ]
  %848 = getelementptr inbounds i32, ptr %11, i64 %846
  %849 = load i32, ptr %848, align 4, !tbaa !5
  %850 = mul nsw i32 %849, %847
  %851 = add nsw i64 %846, -1
  %852 = trunc i64 %846 to i32
  %853 = icmp sgt i32 %852, 0
  br i1 %853, label %845, label %854, !llvm.loop !410

854:                                              ; preds = %845, %836
  %855 = phi i32 [ %840, %836 ], [ %850, %845 ]
  %856 = and i64 %805, 4294967295
  %857 = getelementptr inbounds i32, ptr %6, i64 %856
  %858 = load i32, ptr %857, align 4, !tbaa !5
  %859 = mul nsw i32 %858, %855
  %860 = add nsw i32 %859, %799
  %861 = icmp sgt i64 %797, 2
  %862 = add nsw i64 %798, -1
  %863 = add i32 %796, 1
  br i1 %861, label %795, label %864, !llvm.loop !411

864:                                              ; preds = %854, %792
  %865 = phi i32 [ %794, %792 ], [ %860, %854 ]
  %866 = icmp slt i32 %865, %5
  br i1 %866, label %869, label %867

867:                                              ; preds = %864
  %868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

869:                                              ; preds = %864
  %870 = sext i32 %865 to i64
  %871 = getelementptr inbounds i8, ptr %622, i64 %870
  %872 = load i8, ptr %871, align 1, !tbaa !11
  %873 = load i32, ptr %624, align 4, !tbaa !5
  %874 = sitofp i32 %873 to double
  %875 = sitofp i8 %872 to double
  %876 = icmp slt i8 %872, 0
  %877 = fneg fast double %875
  %878 = select fast i1 %876, double %877, double %875
  %879 = fadd fast double %878, %874
  %880 = fptosi double %879 to i32
  store i32 %880, ptr %624, align 4, !tbaa !5
  %881 = add nuw nsw i32 %793, 1
  br i1 %639, label %882, label %932

882:                                              ; preds = %869
  %883 = load i32, ptr %4, align 4, !tbaa !5
  %884 = load i32, ptr %12, align 4, !tbaa !5
  %885 = add nsw i32 %884, -1
  %886 = icmp slt i32 %883, %885
  br i1 %886, label %909, label %887

887:                                              ; preds = %882
  %888 = icmp eq i32 %883, %885
  br i1 %888, label %889, label %925

889:                                              ; preds = %887
  store i32 0, ptr %4, align 4, !tbaa !5
  %890 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %890, ptr %6, align 4, !tbaa !5
  br i1 %644, label %932, label %891

891:                                              ; preds = %889, %919
  %892 = phi i64 [ %923, %919 ], [ 1, %889 ]
  %893 = getelementptr inbounds i32, ptr %4, i64 %892
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = getelementptr inbounds i32, ptr %12, i64 %892
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = add nsw i32 %896, -1
  %898 = icmp slt i32 %894, %897
  br i1 %898, label %899, label %917

899:                                              ; preds = %891
  br i1 %886, label %909, label %900

900:                                              ; preds = %899
  %901 = shl i64 %892, 32
  %902 = add i64 %901, -4294967296
  %903 = ashr exact i64 %902, 32
  %904 = getelementptr inbounds i32, ptr %7, i64 %903
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %6, i64 %892
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = add nsw i32 %907, %905
  store i32 %908, ptr %906, align 4, !tbaa !5
  br label %927

909:                                              ; preds = %882, %899
  %910 = phi i32 [ %894, %899 ], [ %883, %882 ]
  %911 = phi ptr [ %893, %899 ], [ %4, %882 ]
  %912 = phi i64 [ %892, %899 ], [ 0, %882 ]
  %913 = add nsw i32 %910, 1
  store i32 %913, ptr %911, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %7, i64 %912
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %6, i64 %912
  br label %927

917:                                              ; preds = %891
  %918 = icmp eq i32 %894, %897
  br i1 %918, label %919, label %925

919:                                              ; preds = %917
  store i32 0, ptr %893, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %8, i64 %892
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %6, i64 %892
  store i32 %921, ptr %922, align 4, !tbaa !5
  %923 = add nuw nsw i64 %892, 1
  %924 = icmp eq i64 %923, %642
  br i1 %924, label %932, label %891, !llvm.loop !412

925:                                              ; preds = %887, %917
  %926 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

927:                                              ; preds = %900, %909
  %928 = phi ptr [ %916, %909 ], [ %893, %900 ]
  %929 = phi i32 [ %915, %909 ], [ 1, %900 ]
  %930 = load i32, ptr %928, align 4, !tbaa !5
  %931 = add nsw i32 %930, %929
  store i32 %931, ptr %928, align 4, !tbaa !5
  br label %932

932:                                              ; preds = %919, %927, %889, %869
  %933 = icmp eq i32 %881, %5
  br i1 %933, label %3070, label %792, !llvm.loop !413

934:                                              ; preds = %630
  %935 = getelementptr inbounds i32, ptr %3, i64 %19
  %936 = load i32, ptr %935, align 4, !tbaa !5
  %937 = icmp eq i32 %936, 0
  %938 = icmp sgt i32 %5, 0
  br i1 %937, label %948, label %939

939:                                              ; preds = %934
  br i1 %938, label %940, label %3070

940:                                              ; preds = %939
  %941 = icmp sgt i32 %13, 1
  %942 = icmp sgt i32 %13, 0
  %943 = add i32 %13, -2
  %944 = zext i32 %943 to i64
  %945 = zext i32 %13 to i64
  %946 = add nuw i32 %5, 1
  %947 = icmp eq i32 %13, 1
  br label %1090

948:                                              ; preds = %934
  br i1 %938, label %949, label %3070

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %957

957:                                              ; preds = %949, %1088
  %958 = phi i32 [ 0, %949 ], [ %1040, %1088 ]
  %959 = phi double [ 0.000000e+00, %949 ], [ %1039, %1088 ]
  %960 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %961, label %1030

961:                                              ; preds = %957, %1020
  %962 = phi i32 [ %1029, %1020 ], [ 0, %957 ]
  %963 = phi i64 [ %971, %1020 ], [ %954, %957 ]
  %964 = phi i64 [ %1028, %1020 ], [ %953, %957 ]
  %965 = phi i32 [ %1026, %1020 ], [ %960, %957 ]
  %966 = sub i32 %952, %962
  %967 = tail call i32 @llvm.smin.i32(i32 %966, i32 0)
  %968 = sub i32 %966, %967
  %969 = zext i32 %968 to i64
  %970 = add nuw nsw i64 %969, 1
  %971 = add nsw i64 %963, -1
  %972 = icmp ult i32 %968, 31
  br i1 %972, label %1008, label %973

973:                                              ; preds = %961
  %974 = and i64 %970, 8589934560
  %975 = sub i64 %964, %974
  br label %976

976:                                              ; preds = %976, %973
  %977 = phi i64 [ 0, %973 ], [ %1000, %976 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %973 ], [ %996, %976 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %973 ], [ %997, %976 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %973 ], [ %998, %976 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %973 ], [ %999, %976 ]
  %982 = sub i64 %964, %977
  %983 = getelementptr inbounds i32, ptr %9, i64 %982
  %984 = getelementptr inbounds i32, ptr %983, i64 -7
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = getelementptr inbounds i32, ptr %983, i64 -15
  %988 = load <8 x i32>, ptr %987, align 4, !tbaa !5
  %989 = shufflevector <8 x i32> %988, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %990 = getelementptr inbounds i32, ptr %983, i64 -23
  %991 = load <8 x i32>, ptr %990, align 4, !tbaa !5
  %992 = shufflevector <8 x i32> %991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %993 = getelementptr inbounds i32, ptr %983, i64 -31
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = mul <8 x i32> %986, %978
  %997 = mul <8 x i32> %989, %979
  %998 = mul <8 x i32> %992, %980
  %999 = mul <8 x i32> %995, %981
  %1000 = add nuw i64 %977, 32
  %1001 = icmp eq i64 %1000, %974
  br i1 %1001, label %1002, label %976, !llvm.loop !414

1002:                                             ; preds = %976
  %1003 = mul <8 x i32> %997, %996
  %1004 = mul <8 x i32> %998, %1003
  %1005 = mul <8 x i32> %999, %1004
  %1006 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1005)
  %1007 = icmp eq i64 %970, %974
  br i1 %1007, label %1020, label %1008

1008:                                             ; preds = %961, %1002
  %1009 = phi i64 [ %964, %961 ], [ %975, %1002 ]
  %1010 = phi i32 [ 1, %961 ], [ %1006, %1002 ]
  br label %1011

1011:                                             ; preds = %1008, %1011
  %1012 = phi i64 [ %1017, %1011 ], [ %1009, %1008 ]
  %1013 = phi i32 [ %1016, %1011 ], [ %1010, %1008 ]
  %1014 = getelementptr inbounds i32, ptr %9, i64 %1012
  %1015 = load i32, ptr %1014, align 4, !tbaa !5
  %1016 = mul nsw i32 %1015, %1013
  %1017 = add nsw i64 %1012, -1
  %1018 = trunc i64 %1012 to i32
  %1019 = icmp sgt i32 %1018, 0
  br i1 %1019, label %1011, label %1020, !llvm.loop !415

1020:                                             ; preds = %1011, %1002
  %1021 = phi i32 [ %1006, %1002 ], [ %1016, %1011 ]
  %1022 = and i64 %971, 4294967295
  %1023 = getelementptr inbounds i32, ptr %6, i64 %1022
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1021
  %1026 = add nsw i32 %1025, %965
  %1027 = icmp sgt i64 %963, 2
  %1028 = add nsw i64 %964, -1
  %1029 = add i32 %962, 1
  br i1 %1027, label %961, label %1030, !llvm.loop !416

1030:                                             ; preds = %1020, %957
  %1031 = phi i32 [ %960, %957 ], [ %1026, %1020 ]
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds i8, ptr %622, i64 %1032
  %1034 = load i8, ptr %1033, align 1, !tbaa !11
  %1035 = load i32, ptr %624, align 4, !tbaa !5
  %1036 = tail call i8 @llvm.abs.i8(i8 %1034, i1 false)
  %1037 = zext i8 %1036 to i32
  %1038 = add nsw i32 %1035, %1037
  store i32 %1038, ptr %624, align 4, !tbaa !5
  %1039 = fadd fast double %959, 1.000000e+00
  %1040 = add nuw nsw i32 %958, 1
  br i1 %951, label %1041, label %1088

1041:                                             ; preds = %1030
  %1042 = load i32, ptr %4, align 4, !tbaa !5
  %1043 = load i32, ptr %12, align 4, !tbaa !5
  %1044 = add nsw i32 %1043, -1
  %1045 = icmp slt i32 %1042, %1044
  br i1 %1045, label %1065, label %1046

1046:                                             ; preds = %1041
  %1047 = icmp eq i32 %1042, %1044
  br i1 %1047, label %1048, label %1081

1048:                                             ; preds = %1046
  store i32 0, ptr %4, align 4, !tbaa !5
  %1049 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1049, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1088, label %1050

1050:                                             ; preds = %1048, %1075
  %1051 = phi i64 [ %1079, %1075 ], [ 1, %1048 ]
  %1052 = getelementptr inbounds i32, ptr %4, i64 %1051
  %1053 = load i32, ptr %1052, align 4, !tbaa !5
  %1054 = getelementptr inbounds i32, ptr %12, i64 %1051
  %1055 = load i32, ptr %1054, align 4, !tbaa !5
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1053, %1056
  br i1 %1057, label %1058, label %1073

1058:                                             ; preds = %1050
  br i1 %1045, label %1065, label %1059

1059:                                             ; preds = %1058
  %1060 = getelementptr inbounds i32, ptr %7, i64 %1051
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = getelementptr inbounds i32, ptr %6, i64 %1051
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = add nsw i32 %1063, %1061
  store i32 %1064, ptr %1062, align 4, !tbaa !5
  br label %1083

1065:                                             ; preds = %1041, %1058
  %1066 = phi i32 [ %1053, %1058 ], [ %1042, %1041 ]
  %1067 = phi ptr [ %1052, %1058 ], [ %4, %1041 ]
  %1068 = phi i64 [ %1051, %1058 ], [ 0, %1041 ]
  %1069 = add nsw i32 %1066, 1
  store i32 %1069, ptr %1067, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %7, i64 %1068
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %6, i64 %1068
  br label %1083

1073:                                             ; preds = %1050
  %1074 = icmp eq i32 %1053, %1056
  br i1 %1074, label %1075, label %1081

1075:                                             ; preds = %1073
  store i32 0, ptr %1052, align 4, !tbaa !5
  %1076 = getelementptr inbounds i32, ptr %8, i64 %1051
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %6, i64 %1051
  store i32 %1077, ptr %1078, align 4, !tbaa !5
  %1079 = add nuw nsw i64 %1051, 1
  %1080 = icmp eq i64 %1079, %954
  br i1 %1080, label %1088, label %1050, !llvm.loop !417

1081:                                             ; preds = %1046, %1073
  %1082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1083:                                             ; preds = %1059, %1065
  %1084 = phi ptr [ %1072, %1065 ], [ %1052, %1059 ]
  %1085 = phi i32 [ %1071, %1065 ], [ 1, %1059 ]
  %1086 = load i32, ptr %1084, align 4, !tbaa !5
  %1087 = add nsw i32 %1086, %1085
  store i32 %1087, ptr %1084, align 4, !tbaa !5
  br label %1088

1088:                                             ; preds = %1075, %1083, %1048, %1030
  %1089 = icmp eq i32 %1040, %5
  br i1 %1089, label %3070, label %957, !llvm.loop !418

1090:                                             ; preds = %940, %1226
  %1091 = phi i32 [ 0, %940 ], [ %1175, %1226 ]
  %1092 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %941, label %1093, label %1162

1093:                                             ; preds = %1090, %1152
  %1094 = phi i32 [ %1161, %1152 ], [ 0, %1090 ]
  %1095 = phi i64 [ %1103, %1152 ], [ %945, %1090 ]
  %1096 = phi i64 [ %1160, %1152 ], [ %944, %1090 ]
  %1097 = phi i32 [ %1158, %1152 ], [ %1092, %1090 ]
  %1098 = sub i32 %943, %1094
  %1099 = tail call i32 @llvm.smin.i32(i32 %1098, i32 0)
  %1100 = sub i32 %1098, %1099
  %1101 = zext i32 %1100 to i64
  %1102 = add nuw nsw i64 %1101, 1
  %1103 = add nsw i64 %1095, -1
  %1104 = icmp ult i32 %1100, 31
  br i1 %1104, label %1140, label %1105

1105:                                             ; preds = %1093
  %1106 = and i64 %1102, 8589934560
  %1107 = sub i64 %1096, %1106
  br label %1108

1108:                                             ; preds = %1108, %1105
  %1109 = phi i64 [ 0, %1105 ], [ %1132, %1108 ]
  %1110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1105 ], [ %1128, %1108 ]
  %1111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1105 ], [ %1129, %1108 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1105 ], [ %1130, %1108 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1105 ], [ %1131, %1108 ]
  %1114 = sub i64 %1096, %1109
  %1115 = getelementptr inbounds i32, ptr %11, i64 %1114
  %1116 = getelementptr inbounds i32, ptr %1115, i64 -7
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = getelementptr inbounds i32, ptr %1115, i64 -15
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1115, i64 -23
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = getelementptr inbounds i32, ptr %1115, i64 -31
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = mul <8 x i32> %1118, %1110
  %1129 = mul <8 x i32> %1121, %1111
  %1130 = mul <8 x i32> %1124, %1112
  %1131 = mul <8 x i32> %1127, %1113
  %1132 = add nuw i64 %1109, 32
  %1133 = icmp eq i64 %1132, %1106
  br i1 %1133, label %1134, label %1108, !llvm.loop !419

1134:                                             ; preds = %1108
  %1135 = mul <8 x i32> %1129, %1128
  %1136 = mul <8 x i32> %1130, %1135
  %1137 = mul <8 x i32> %1131, %1136
  %1138 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1137)
  %1139 = icmp eq i64 %1102, %1106
  br i1 %1139, label %1152, label %1140

1140:                                             ; preds = %1093, %1134
  %1141 = phi i64 [ %1096, %1093 ], [ %1107, %1134 ]
  %1142 = phi i32 [ 1, %1093 ], [ %1138, %1134 ]
  br label %1143

1143:                                             ; preds = %1140, %1143
  %1144 = phi i64 [ %1149, %1143 ], [ %1141, %1140 ]
  %1145 = phi i32 [ %1148, %1143 ], [ %1142, %1140 ]
  %1146 = getelementptr inbounds i32, ptr %11, i64 %1144
  %1147 = load i32, ptr %1146, align 4, !tbaa !5
  %1148 = mul nsw i32 %1147, %1145
  %1149 = add nsw i64 %1144, -1
  %1150 = trunc i64 %1144 to i32
  %1151 = icmp sgt i32 %1150, 0
  br i1 %1151, label %1143, label %1152, !llvm.loop !420

1152:                                             ; preds = %1143, %1134
  %1153 = phi i32 [ %1138, %1134 ], [ %1148, %1143 ]
  %1154 = and i64 %1103, 4294967295
  %1155 = getelementptr inbounds i32, ptr %6, i64 %1154
  %1156 = load i32, ptr %1155, align 4, !tbaa !5
  %1157 = mul nsw i32 %1156, %1153
  %1158 = add nsw i32 %1157, %1097
  %1159 = icmp sgt i64 %1095, 2
  %1160 = add nsw i64 %1096, -1
  %1161 = add i32 %1094, 1
  br i1 %1159, label %1093, label %1162, !llvm.loop !421

1162:                                             ; preds = %1152, %1090
  %1163 = phi i32 [ %1092, %1090 ], [ %1158, %1152 ]
  %1164 = icmp slt i32 %1163, %5
  br i1 %1164, label %1167, label %1165

1165:                                             ; preds = %1162
  %1166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

1167:                                             ; preds = %1162
  %1168 = sext i32 %1163 to i64
  %1169 = getelementptr inbounds i8, ptr %622, i64 %1168
  %1170 = load i8, ptr %1169, align 1, !tbaa !11
  %1171 = load i32, ptr %624, align 4, !tbaa !5
  %1172 = tail call i8 @llvm.abs.i8(i8 %1170, i1 false)
  %1173 = zext i8 %1172 to i32
  %1174 = add nsw i32 %1171, %1173
  store i32 %1174, ptr %624, align 4, !tbaa !5
  %1175 = add nuw nsw i32 %1091, 1
  br i1 %942, label %1176, label %1226

1176:                                             ; preds = %1167
  %1177 = load i32, ptr %4, align 4, !tbaa !5
  %1178 = load i32, ptr %12, align 4, !tbaa !5
  %1179 = add nsw i32 %1178, -1
  %1180 = icmp slt i32 %1177, %1179
  br i1 %1180, label %1203, label %1181

1181:                                             ; preds = %1176
  %1182 = icmp eq i32 %1177, %1179
  br i1 %1182, label %1183, label %1219

1183:                                             ; preds = %1181
  store i32 0, ptr %4, align 4, !tbaa !5
  %1184 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1184, ptr %6, align 4, !tbaa !5
  br i1 %947, label %1226, label %1185

1185:                                             ; preds = %1183, %1213
  %1186 = phi i64 [ %1217, %1213 ], [ 1, %1183 ]
  %1187 = getelementptr inbounds i32, ptr %4, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !5
  %1189 = getelementptr inbounds i32, ptr %12, i64 %1186
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = add nsw i32 %1190, -1
  %1192 = icmp slt i32 %1188, %1191
  br i1 %1192, label %1193, label %1211

1193:                                             ; preds = %1185
  br i1 %1180, label %1203, label %1194

1194:                                             ; preds = %1193
  %1195 = shl i64 %1186, 32
  %1196 = add i64 %1195, -4294967296
  %1197 = ashr exact i64 %1196, 32
  %1198 = getelementptr inbounds i32, ptr %7, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = getelementptr inbounds i32, ptr %6, i64 %1186
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = add nsw i32 %1201, %1199
  store i32 %1202, ptr %1200, align 4, !tbaa !5
  br label %1221

1203:                                             ; preds = %1176, %1193
  %1204 = phi i32 [ %1188, %1193 ], [ %1177, %1176 ]
  %1205 = phi ptr [ %1187, %1193 ], [ %4, %1176 ]
  %1206 = phi i64 [ %1186, %1193 ], [ 0, %1176 ]
  %1207 = add nsw i32 %1204, 1
  store i32 %1207, ptr %1205, align 4, !tbaa !5
  %1208 = getelementptr inbounds i32, ptr %7, i64 %1206
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %6, i64 %1206
  br label %1221

1211:                                             ; preds = %1185
  %1212 = icmp eq i32 %1188, %1191
  br i1 %1212, label %1213, label %1219

1213:                                             ; preds = %1211
  store i32 0, ptr %1187, align 4, !tbaa !5
  %1214 = getelementptr inbounds i32, ptr %8, i64 %1186
  %1215 = load i32, ptr %1214, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %6, i64 %1186
  store i32 %1215, ptr %1216, align 4, !tbaa !5
  %1217 = add nuw nsw i64 %1186, 1
  %1218 = icmp eq i64 %1217, %945
  br i1 %1218, label %1226, label %1185, !llvm.loop !422

1219:                                             ; preds = %1181, %1211
  %1220 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1221:                                             ; preds = %1194, %1203
  %1222 = phi ptr [ %1210, %1203 ], [ %1187, %1194 ]
  %1223 = phi i32 [ %1209, %1203 ], [ 1, %1194 ]
  %1224 = load i32, ptr %1222, align 4, !tbaa !5
  %1225 = add nsw i32 %1224, %1223
  store i32 %1225, ptr %1222, align 4, !tbaa !5
  br label %1226

1226:                                             ; preds = %1213, %1221, %1183, %1167
  %1227 = icmp eq i32 %1175, %5
  br i1 %1227, label %3070, label %1090, !llvm.loop !423

1228:                                             ; preds = %630
  %1229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3070

1230:                                             ; preds = %18
  %1231 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1232 = load ptr, ptr %1231, align 8, !tbaa !9
  %1233 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1234 = load ptr, ptr %1233, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1234, align 8, !tbaa !18
  %1235 = icmp eq i32 %13, 0
  br i1 %1235, label %1236, label %1242

1236:                                             ; preds = %1230
  %1237 = load i8, ptr %1232, align 1, !tbaa !11
  %1238 = sitofp i8 %1237 to double
  %1239 = icmp slt i8 %1237, 0
  %1240 = fneg fast double %1238
  %1241 = select fast i1 %1239, double %1240, double %1238
  store double %1241, ptr %1234, align 8, !tbaa !18
  br label %3070

1242:                                             ; preds = %1230
  switch i32 %1, label %1840 [
    i32 1, label %1243
    i32 0, label %1542
  ]

1243:                                             ; preds = %1242
  %1244 = getelementptr inbounds i32, ptr %3, i64 %19
  %1245 = load i32, ptr %1244, align 4, !tbaa !5
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp sgt i32 %5, 0
  br i1 %1246, label %1257, label %1248

1248:                                             ; preds = %1243
  br i1 %1247, label %1249, label %3070

1249:                                             ; preds = %1248
  %1250 = icmp sgt i32 %13, 1
  %1251 = icmp sgt i32 %13, 0
  %1252 = add i32 %13, -2
  %1253 = zext i32 %1252 to i64
  %1254 = zext i32 %13 to i64
  %1255 = add nuw i32 %5, 1
  %1256 = icmp eq i32 %13, 1
  br label %1402

1257:                                             ; preds = %1243
  br i1 %1247, label %1258, label %3070

1258:                                             ; preds = %1257
  %1259 = icmp sgt i32 %13, 1
  %1260 = icmp sgt i32 %13, 0
  %1261 = add i32 %13, -2
  %1262 = zext i32 %1261 to i64
  %1263 = zext i32 %13 to i64
  %1264 = add nuw i32 %5, 1
  %1265 = icmp eq i32 %13, 1
  br label %1266

1266:                                             ; preds = %1258, %1400
  %1267 = phi double [ 0.000000e+00, %1258 ], [ %1350, %1400 ]
  %1268 = phi i32 [ 0, %1258 ], [ %1352, %1400 ]
  %1269 = phi double [ 0.000000e+00, %1258 ], [ %1351, %1400 ]
  %1270 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1271, label %1340

1271:                                             ; preds = %1266, %1330
  %1272 = phi i32 [ %1339, %1330 ], [ 0, %1266 ]
  %1273 = phi i64 [ %1281, %1330 ], [ %1263, %1266 ]
  %1274 = phi i64 [ %1338, %1330 ], [ %1262, %1266 ]
  %1275 = phi i32 [ %1336, %1330 ], [ %1270, %1266 ]
  %1276 = sub i32 %1261, %1272
  %1277 = tail call i32 @llvm.smin.i32(i32 %1276, i32 0)
  %1278 = sub i32 %1276, %1277
  %1279 = zext i32 %1278 to i64
  %1280 = add nuw nsw i64 %1279, 1
  %1281 = add nsw i64 %1273, -1
  %1282 = icmp ult i32 %1278, 31
  br i1 %1282, label %1318, label %1283

1283:                                             ; preds = %1271
  %1284 = and i64 %1280, 8589934560
  %1285 = sub i64 %1274, %1284
  br label %1286

1286:                                             ; preds = %1286, %1283
  %1287 = phi i64 [ 0, %1283 ], [ %1310, %1286 ]
  %1288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1283 ], [ %1306, %1286 ]
  %1289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1283 ], [ %1307, %1286 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1283 ], [ %1308, %1286 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1283 ], [ %1309, %1286 ]
  %1292 = sub i64 %1274, %1287
  %1293 = getelementptr inbounds i32, ptr %9, i64 %1292
  %1294 = getelementptr inbounds i32, ptr %1293, i64 -7
  %1295 = load <8 x i32>, ptr %1294, align 4, !tbaa !5
  %1296 = shufflevector <8 x i32> %1295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1297 = getelementptr inbounds i32, ptr %1293, i64 -15
  %1298 = load <8 x i32>, ptr %1297, align 4, !tbaa !5
  %1299 = shufflevector <8 x i32> %1298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1300 = getelementptr inbounds i32, ptr %1293, i64 -23
  %1301 = load <8 x i32>, ptr %1300, align 4, !tbaa !5
  %1302 = shufflevector <8 x i32> %1301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1303 = getelementptr inbounds i32, ptr %1293, i64 -31
  %1304 = load <8 x i32>, ptr %1303, align 4, !tbaa !5
  %1305 = shufflevector <8 x i32> %1304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1306 = mul <8 x i32> %1296, %1288
  %1307 = mul <8 x i32> %1299, %1289
  %1308 = mul <8 x i32> %1302, %1290
  %1309 = mul <8 x i32> %1305, %1291
  %1310 = add nuw i64 %1287, 32
  %1311 = icmp eq i64 %1310, %1284
  br i1 %1311, label %1312, label %1286, !llvm.loop !424

1312:                                             ; preds = %1286
  %1313 = mul <8 x i32> %1307, %1306
  %1314 = mul <8 x i32> %1308, %1313
  %1315 = mul <8 x i32> %1309, %1314
  %1316 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1315)
  %1317 = icmp eq i64 %1280, %1284
  br i1 %1317, label %1330, label %1318

1318:                                             ; preds = %1271, %1312
  %1319 = phi i64 [ %1274, %1271 ], [ %1285, %1312 ]
  %1320 = phi i32 [ 1, %1271 ], [ %1316, %1312 ]
  br label %1321

1321:                                             ; preds = %1318, %1321
  %1322 = phi i64 [ %1327, %1321 ], [ %1319, %1318 ]
  %1323 = phi i32 [ %1326, %1321 ], [ %1320, %1318 ]
  %1324 = getelementptr inbounds i32, ptr %9, i64 %1322
  %1325 = load i32, ptr %1324, align 4, !tbaa !5
  %1326 = mul nsw i32 %1325, %1323
  %1327 = add nsw i64 %1322, -1
  %1328 = trunc i64 %1322 to i32
  %1329 = icmp sgt i32 %1328, 0
  br i1 %1329, label %1321, label %1330, !llvm.loop !425

1330:                                             ; preds = %1321, %1312
  %1331 = phi i32 [ %1316, %1312 ], [ %1326, %1321 ]
  %1332 = and i64 %1281, 4294967295
  %1333 = getelementptr inbounds i32, ptr %6, i64 %1332
  %1334 = load i32, ptr %1333, align 4, !tbaa !5
  %1335 = mul nsw i32 %1334, %1331
  %1336 = add nsw i32 %1335, %1275
  %1337 = icmp sgt i64 %1273, 2
  %1338 = add nsw i64 %1274, -1
  %1339 = add i32 %1272, 1
  br i1 %1337, label %1271, label %1340, !llvm.loop !426

1340:                                             ; preds = %1330, %1266
  %1341 = phi i32 [ %1270, %1266 ], [ %1336, %1330 ]
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds double, ptr %2, i64 %1342
  %1344 = load double, ptr %1343, align 8, !tbaa !18
  %1345 = getelementptr inbounds i8, ptr %1232, i64 %1342
  %1346 = load i8, ptr %1345, align 1, !tbaa !11
  %1347 = sitofp i8 %1346 to double
  %1348 = fmul fast double %1344, %1347
  %1349 = tail call fast double @llvm.fabs.f64(double %1348)
  %1350 = fadd fast double %1349, %1267
  store double %1350, ptr %1234, align 8, !tbaa !18
  %1351 = fadd fast double %1344, %1269
  %1352 = add nuw nsw i32 %1268, 1
  br i1 %1260, label %1353, label %1400

1353:                                             ; preds = %1340
  %1354 = load i32, ptr %4, align 4, !tbaa !5
  %1355 = load i32, ptr %12, align 4, !tbaa !5
  %1356 = add nsw i32 %1355, -1
  %1357 = icmp slt i32 %1354, %1356
  br i1 %1357, label %1377, label %1358

1358:                                             ; preds = %1353
  %1359 = icmp eq i32 %1354, %1356
  br i1 %1359, label %1360, label %1393

1360:                                             ; preds = %1358
  store i32 0, ptr %4, align 4, !tbaa !5
  %1361 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1361, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1400, label %1362

1362:                                             ; preds = %1360, %1387
  %1363 = phi i64 [ %1391, %1387 ], [ 1, %1360 ]
  %1364 = getelementptr inbounds i32, ptr %4, i64 %1363
  %1365 = load i32, ptr %1364, align 4, !tbaa !5
  %1366 = getelementptr inbounds i32, ptr %12, i64 %1363
  %1367 = load i32, ptr %1366, align 4, !tbaa !5
  %1368 = add nsw i32 %1367, -1
  %1369 = icmp slt i32 %1365, %1368
  br i1 %1369, label %1370, label %1385

1370:                                             ; preds = %1362
  br i1 %1357, label %1377, label %1371

1371:                                             ; preds = %1370
  %1372 = getelementptr inbounds i32, ptr %7, i64 %1363
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %6, i64 %1363
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, %1373
  store i32 %1376, ptr %1374, align 4, !tbaa !5
  br label %1395

1377:                                             ; preds = %1353, %1370
  %1378 = phi i32 [ %1365, %1370 ], [ %1354, %1353 ]
  %1379 = phi ptr [ %1364, %1370 ], [ %4, %1353 ]
  %1380 = phi i64 [ %1363, %1370 ], [ 0, %1353 ]
  %1381 = add nsw i32 %1378, 1
  store i32 %1381, ptr %1379, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1380
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1380
  br label %1395

1385:                                             ; preds = %1362
  %1386 = icmp eq i32 %1365, %1368
  br i1 %1386, label %1387, label %1393

1387:                                             ; preds = %1385
  store i32 0, ptr %1364, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %8, i64 %1363
  %1389 = load i32, ptr %1388, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %6, i64 %1363
  store i32 %1389, ptr %1390, align 4, !tbaa !5
  %1391 = add nuw nsw i64 %1363, 1
  %1392 = icmp eq i64 %1391, %1263
  br i1 %1392, label %1400, label %1362, !llvm.loop !427

1393:                                             ; preds = %1358, %1385
  %1394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1395:                                             ; preds = %1371, %1377
  %1396 = phi ptr [ %1384, %1377 ], [ %1364, %1371 ]
  %1397 = phi i32 [ %1383, %1377 ], [ 1, %1371 ]
  %1398 = load i32, ptr %1396, align 4, !tbaa !5
  %1399 = add nsw i32 %1398, %1397
  store i32 %1399, ptr %1396, align 4, !tbaa !5
  br label %1400

1400:                                             ; preds = %1387, %1395, %1360, %1340
  %1401 = icmp eq i32 %1352, %5
  br i1 %1401, label %3070, label %1266, !llvm.loop !428

1402:                                             ; preds = %1249, %1540
  %1403 = phi double [ 0.000000e+00, %1249 ], [ %1488, %1540 ]
  %1404 = phi i32 [ 0, %1249 ], [ %1489, %1540 ]
  %1405 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1250, label %1406, label %1475

1406:                                             ; preds = %1402, %1465
  %1407 = phi i32 [ %1474, %1465 ], [ 0, %1402 ]
  %1408 = phi i64 [ %1416, %1465 ], [ %1254, %1402 ]
  %1409 = phi i64 [ %1473, %1465 ], [ %1253, %1402 ]
  %1410 = phi i32 [ %1471, %1465 ], [ %1405, %1402 ]
  %1411 = sub i32 %1252, %1407
  %1412 = tail call i32 @llvm.smin.i32(i32 %1411, i32 0)
  %1413 = sub i32 %1411, %1412
  %1414 = zext i32 %1413 to i64
  %1415 = add nuw nsw i64 %1414, 1
  %1416 = add nsw i64 %1408, -1
  %1417 = icmp ult i32 %1413, 31
  br i1 %1417, label %1453, label %1418

1418:                                             ; preds = %1406
  %1419 = and i64 %1415, 8589934560
  %1420 = sub i64 %1409, %1419
  br label %1421

1421:                                             ; preds = %1421, %1418
  %1422 = phi i64 [ 0, %1418 ], [ %1445, %1421 ]
  %1423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1418 ], [ %1441, %1421 ]
  %1424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1418 ], [ %1442, %1421 ]
  %1425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1418 ], [ %1443, %1421 ]
  %1426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1418 ], [ %1444, %1421 ]
  %1427 = sub i64 %1409, %1422
  %1428 = getelementptr inbounds i32, ptr %11, i64 %1427
  %1429 = getelementptr inbounds i32, ptr %1428, i64 -7
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = getelementptr inbounds i32, ptr %1428, i64 -15
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = getelementptr inbounds i32, ptr %1428, i64 -23
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1428, i64 -31
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = mul <8 x i32> %1431, %1423
  %1442 = mul <8 x i32> %1434, %1424
  %1443 = mul <8 x i32> %1437, %1425
  %1444 = mul <8 x i32> %1440, %1426
  %1445 = add nuw i64 %1422, 32
  %1446 = icmp eq i64 %1445, %1419
  br i1 %1446, label %1447, label %1421, !llvm.loop !429

1447:                                             ; preds = %1421
  %1448 = mul <8 x i32> %1442, %1441
  %1449 = mul <8 x i32> %1443, %1448
  %1450 = mul <8 x i32> %1444, %1449
  %1451 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1450)
  %1452 = icmp eq i64 %1415, %1419
  br i1 %1452, label %1465, label %1453

1453:                                             ; preds = %1406, %1447
  %1454 = phi i64 [ %1409, %1406 ], [ %1420, %1447 ]
  %1455 = phi i32 [ 1, %1406 ], [ %1451, %1447 ]
  br label %1456

1456:                                             ; preds = %1453, %1456
  %1457 = phi i64 [ %1462, %1456 ], [ %1454, %1453 ]
  %1458 = phi i32 [ %1461, %1456 ], [ %1455, %1453 ]
  %1459 = getelementptr inbounds i32, ptr %11, i64 %1457
  %1460 = load i32, ptr %1459, align 4, !tbaa !5
  %1461 = mul nsw i32 %1460, %1458
  %1462 = add nsw i64 %1457, -1
  %1463 = trunc i64 %1457 to i32
  %1464 = icmp sgt i32 %1463, 0
  br i1 %1464, label %1456, label %1465, !llvm.loop !430

1465:                                             ; preds = %1456, %1447
  %1466 = phi i32 [ %1451, %1447 ], [ %1461, %1456 ]
  %1467 = and i64 %1416, 4294967295
  %1468 = getelementptr inbounds i32, ptr %6, i64 %1467
  %1469 = load i32, ptr %1468, align 4, !tbaa !5
  %1470 = mul nsw i32 %1469, %1466
  %1471 = add nsw i32 %1470, %1410
  %1472 = icmp sgt i64 %1408, 2
  %1473 = add nsw i64 %1409, -1
  %1474 = add i32 %1407, 1
  br i1 %1472, label %1406, label %1475, !llvm.loop !431

1475:                                             ; preds = %1465, %1402
  %1476 = phi i32 [ %1405, %1402 ], [ %1471, %1465 ]
  %1477 = icmp slt i32 %1476, %5
  br i1 %1477, label %1480, label %1478

1478:                                             ; preds = %1475
  %1479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

1480:                                             ; preds = %1475
  %1481 = sext i32 %1476 to i64
  %1482 = getelementptr inbounds i8, ptr %1232, i64 %1481
  %1483 = load i8, ptr %1482, align 1, !tbaa !11
  %1484 = sitofp i8 %1483 to double
  %1485 = icmp slt i8 %1483, 0
  %1486 = fneg fast double %1484
  %1487 = select fast i1 %1485, double %1486, double %1484
  %1488 = fadd fast double %1487, %1403
  store double %1488, ptr %1234, align 8, !tbaa !18
  %1489 = add nuw nsw i32 %1404, 1
  br i1 %1251, label %1490, label %1540

1490:                                             ; preds = %1480
  %1491 = load i32, ptr %4, align 4, !tbaa !5
  %1492 = load i32, ptr %12, align 4, !tbaa !5
  %1493 = add nsw i32 %1492, -1
  %1494 = icmp slt i32 %1491, %1493
  br i1 %1494, label %1517, label %1495

1495:                                             ; preds = %1490
  %1496 = icmp eq i32 %1491, %1493
  br i1 %1496, label %1497, label %1533

1497:                                             ; preds = %1495
  store i32 0, ptr %4, align 4, !tbaa !5
  %1498 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1498, ptr %6, align 4, !tbaa !5
  br i1 %1256, label %1540, label %1499

1499:                                             ; preds = %1497, %1527
  %1500 = phi i64 [ %1531, %1527 ], [ 1, %1497 ]
  %1501 = getelementptr inbounds i32, ptr %4, i64 %1500
  %1502 = load i32, ptr %1501, align 4, !tbaa !5
  %1503 = getelementptr inbounds i32, ptr %12, i64 %1500
  %1504 = load i32, ptr %1503, align 4, !tbaa !5
  %1505 = add nsw i32 %1504, -1
  %1506 = icmp slt i32 %1502, %1505
  br i1 %1506, label %1507, label %1525

1507:                                             ; preds = %1499
  br i1 %1494, label %1517, label %1508

1508:                                             ; preds = %1507
  %1509 = shl i64 %1500, 32
  %1510 = add i64 %1509, -4294967296
  %1511 = ashr exact i64 %1510, 32
  %1512 = getelementptr inbounds i32, ptr %7, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %6, i64 %1500
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, %1513
  store i32 %1516, ptr %1514, align 4, !tbaa !5
  br label %1535

1517:                                             ; preds = %1490, %1507
  %1518 = phi i32 [ %1502, %1507 ], [ %1491, %1490 ]
  %1519 = phi ptr [ %1501, %1507 ], [ %4, %1490 ]
  %1520 = phi i64 [ %1500, %1507 ], [ 0, %1490 ]
  %1521 = add nsw i32 %1518, 1
  store i32 %1521, ptr %1519, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %7, i64 %1520
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = getelementptr inbounds i32, ptr %6, i64 %1520
  br label %1535

1525:                                             ; preds = %1499
  %1526 = icmp eq i32 %1502, %1505
  br i1 %1526, label %1527, label %1533

1527:                                             ; preds = %1525
  store i32 0, ptr %1501, align 4, !tbaa !5
  %1528 = getelementptr inbounds i32, ptr %8, i64 %1500
  %1529 = load i32, ptr %1528, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %6, i64 %1500
  store i32 %1529, ptr %1530, align 4, !tbaa !5
  %1531 = add nuw nsw i64 %1500, 1
  %1532 = icmp eq i64 %1531, %1254
  br i1 %1532, label %1540, label %1499, !llvm.loop !432

1533:                                             ; preds = %1495, %1525
  %1534 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1535:                                             ; preds = %1508, %1517
  %1536 = phi ptr [ %1524, %1517 ], [ %1501, %1508 ]
  %1537 = phi i32 [ %1523, %1517 ], [ 1, %1508 ]
  %1538 = load i32, ptr %1536, align 4, !tbaa !5
  %1539 = add nsw i32 %1538, %1537
  store i32 %1539, ptr %1536, align 4, !tbaa !5
  br label %1540

1540:                                             ; preds = %1527, %1535, %1497, %1480
  %1541 = icmp eq i32 %1489, %5
  br i1 %1541, label %3070, label %1402, !llvm.loop !433

1542:                                             ; preds = %1242
  %1543 = getelementptr inbounds i32, ptr %3, i64 %19
  %1544 = load i32, ptr %1543, align 4, !tbaa !5
  %1545 = icmp eq i32 %1544, 0
  %1546 = icmp sgt i32 %5, 0
  br i1 %1545, label %1556, label %1547

1547:                                             ; preds = %1542
  br i1 %1546, label %1548, label %3070

1548:                                             ; preds = %1547
  %1549 = icmp sgt i32 %13, 1
  %1550 = icmp sgt i32 %13, 0
  %1551 = add i32 %13, -2
  %1552 = zext i32 %1551 to i64
  %1553 = zext i32 %13 to i64
  %1554 = add nuw i32 %5, 1
  %1555 = icmp eq i32 %13, 1
  br label %1700

1556:                                             ; preds = %1542
  br i1 %1546, label %1557, label %3070

1557:                                             ; preds = %1556
  %1558 = icmp sgt i32 %13, 1
  %1559 = icmp sgt i32 %13, 0
  %1560 = add i32 %13, -2
  %1561 = zext i32 %1560 to i64
  %1562 = zext i32 %13 to i64
  %1563 = add nuw i32 %5, 1
  %1564 = icmp eq i32 %13, 1
  br label %1565

1565:                                             ; preds = %1557, %1698
  %1566 = phi double [ 0.000000e+00, %1557 ], [ %1648, %1698 ]
  %1567 = phi i32 [ 0, %1557 ], [ %1650, %1698 ]
  %1568 = phi double [ 0.000000e+00, %1557 ], [ %1649, %1698 ]
  %1569 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1558, label %1570, label %1639

1570:                                             ; preds = %1565, %1629
  %1571 = phi i32 [ %1638, %1629 ], [ 0, %1565 ]
  %1572 = phi i64 [ %1580, %1629 ], [ %1562, %1565 ]
  %1573 = phi i64 [ %1637, %1629 ], [ %1561, %1565 ]
  %1574 = phi i32 [ %1635, %1629 ], [ %1569, %1565 ]
  %1575 = sub i32 %1560, %1571
  %1576 = tail call i32 @llvm.smin.i32(i32 %1575, i32 0)
  %1577 = sub i32 %1575, %1576
  %1578 = zext i32 %1577 to i64
  %1579 = add nuw nsw i64 %1578, 1
  %1580 = add nsw i64 %1572, -1
  %1581 = icmp ult i32 %1577, 31
  br i1 %1581, label %1617, label %1582

1582:                                             ; preds = %1570
  %1583 = and i64 %1579, 8589934560
  %1584 = sub i64 %1573, %1583
  br label %1585

1585:                                             ; preds = %1585, %1582
  %1586 = phi i64 [ 0, %1582 ], [ %1609, %1585 ]
  %1587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1582 ], [ %1605, %1585 ]
  %1588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1582 ], [ %1606, %1585 ]
  %1589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1582 ], [ %1607, %1585 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1582 ], [ %1608, %1585 ]
  %1591 = sub i64 %1573, %1586
  %1592 = getelementptr inbounds i32, ptr %9, i64 %1591
  %1593 = getelementptr inbounds i32, ptr %1592, i64 -7
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = getelementptr inbounds i32, ptr %1592, i64 -15
  %1597 = load <8 x i32>, ptr %1596, align 4, !tbaa !5
  %1598 = shufflevector <8 x i32> %1597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1599 = getelementptr inbounds i32, ptr %1592, i64 -23
  %1600 = load <8 x i32>, ptr %1599, align 4, !tbaa !5
  %1601 = shufflevector <8 x i32> %1600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1602 = getelementptr inbounds i32, ptr %1592, i64 -31
  %1603 = load <8 x i32>, ptr %1602, align 4, !tbaa !5
  %1604 = shufflevector <8 x i32> %1603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1605 = mul <8 x i32> %1595, %1587
  %1606 = mul <8 x i32> %1598, %1588
  %1607 = mul <8 x i32> %1601, %1589
  %1608 = mul <8 x i32> %1604, %1590
  %1609 = add nuw i64 %1586, 32
  %1610 = icmp eq i64 %1609, %1583
  br i1 %1610, label %1611, label %1585, !llvm.loop !434

1611:                                             ; preds = %1585
  %1612 = mul <8 x i32> %1606, %1605
  %1613 = mul <8 x i32> %1607, %1612
  %1614 = mul <8 x i32> %1608, %1613
  %1615 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1614)
  %1616 = icmp eq i64 %1579, %1583
  br i1 %1616, label %1629, label %1617

1617:                                             ; preds = %1570, %1611
  %1618 = phi i64 [ %1573, %1570 ], [ %1584, %1611 ]
  %1619 = phi i32 [ 1, %1570 ], [ %1615, %1611 ]
  br label %1620

1620:                                             ; preds = %1617, %1620
  %1621 = phi i64 [ %1626, %1620 ], [ %1618, %1617 ]
  %1622 = phi i32 [ %1625, %1620 ], [ %1619, %1617 ]
  %1623 = getelementptr inbounds i32, ptr %9, i64 %1621
  %1624 = load i32, ptr %1623, align 4, !tbaa !5
  %1625 = mul nsw i32 %1624, %1622
  %1626 = add nsw i64 %1621, -1
  %1627 = trunc i64 %1621 to i32
  %1628 = icmp sgt i32 %1627, 0
  br i1 %1628, label %1620, label %1629, !llvm.loop !435

1629:                                             ; preds = %1620, %1611
  %1630 = phi i32 [ %1615, %1611 ], [ %1625, %1620 ]
  %1631 = and i64 %1580, 4294967295
  %1632 = getelementptr inbounds i32, ptr %6, i64 %1631
  %1633 = load i32, ptr %1632, align 4, !tbaa !5
  %1634 = mul nsw i32 %1633, %1630
  %1635 = add nsw i32 %1634, %1574
  %1636 = icmp sgt i64 %1572, 2
  %1637 = add nsw i64 %1573, -1
  %1638 = add i32 %1571, 1
  br i1 %1636, label %1570, label %1639, !llvm.loop !436

1639:                                             ; preds = %1629, %1565
  %1640 = phi i32 [ %1569, %1565 ], [ %1635, %1629 ]
  %1641 = sext i32 %1640 to i64
  %1642 = getelementptr inbounds i8, ptr %1232, i64 %1641
  %1643 = load i8, ptr %1642, align 1, !tbaa !11
  %1644 = sitofp i8 %1643 to double
  %1645 = icmp slt i8 %1643, 0
  %1646 = fneg fast double %1644
  %1647 = select fast i1 %1645, double %1646, double %1644
  %1648 = fadd fast double %1647, %1566
  store double %1648, ptr %1234, align 8, !tbaa !18
  %1649 = fadd fast double %1568, 1.000000e+00
  %1650 = add nuw nsw i32 %1567, 1
  br i1 %1559, label %1651, label %1698

1651:                                             ; preds = %1639
  %1652 = load i32, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %12, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, -1
  %1655 = icmp slt i32 %1652, %1654
  br i1 %1655, label %1675, label %1656

1656:                                             ; preds = %1651
  %1657 = icmp eq i32 %1652, %1654
  br i1 %1657, label %1658, label %1691

1658:                                             ; preds = %1656
  store i32 0, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1659, ptr %6, align 4, !tbaa !5
  br i1 %1564, label %1698, label %1660

1660:                                             ; preds = %1658, %1685
  %1661 = phi i64 [ %1689, %1685 ], [ 1, %1658 ]
  %1662 = getelementptr inbounds i32, ptr %4, i64 %1661
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %12, i64 %1661
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1663, %1666
  br i1 %1667, label %1668, label %1683

1668:                                             ; preds = %1660
  br i1 %1655, label %1675, label %1669

1669:                                             ; preds = %1668
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1661
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1661
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1671
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  br label %1693

1675:                                             ; preds = %1651, %1668
  %1676 = phi i32 [ %1663, %1668 ], [ %1652, %1651 ]
  %1677 = phi ptr [ %1662, %1668 ], [ %4, %1651 ]
  %1678 = phi i64 [ %1661, %1668 ], [ 0, %1651 ]
  %1679 = add nsw i32 %1676, 1
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %7, i64 %1678
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1678
  br label %1693

1683:                                             ; preds = %1660
  %1684 = icmp eq i32 %1663, %1666
  br i1 %1684, label %1685, label %1691

1685:                                             ; preds = %1683
  store i32 0, ptr %1662, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %8, i64 %1661
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1661
  store i32 %1687, ptr %1688, align 4, !tbaa !5
  %1689 = add nuw nsw i64 %1661, 1
  %1690 = icmp eq i64 %1689, %1562
  br i1 %1690, label %1698, label %1660, !llvm.loop !437

1691:                                             ; preds = %1656, %1683
  %1692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1693:                                             ; preds = %1669, %1675
  %1694 = phi ptr [ %1682, %1675 ], [ %1662, %1669 ]
  %1695 = phi i32 [ %1681, %1675 ], [ 1, %1669 ]
  %1696 = load i32, ptr %1694, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, %1695
  store i32 %1697, ptr %1694, align 4, !tbaa !5
  br label %1698

1698:                                             ; preds = %1685, %1693, %1658, %1639
  %1699 = icmp eq i32 %1650, %5
  br i1 %1699, label %3070, label %1565, !llvm.loop !438

1700:                                             ; preds = %1548, %1838
  %1701 = phi double [ 0.000000e+00, %1548 ], [ %1786, %1838 ]
  %1702 = phi i32 [ 0, %1548 ], [ %1787, %1838 ]
  %1703 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1549, label %1704, label %1773

1704:                                             ; preds = %1700, %1763
  %1705 = phi i32 [ %1772, %1763 ], [ 0, %1700 ]
  %1706 = phi i64 [ %1714, %1763 ], [ %1553, %1700 ]
  %1707 = phi i64 [ %1771, %1763 ], [ %1552, %1700 ]
  %1708 = phi i32 [ %1769, %1763 ], [ %1703, %1700 ]
  %1709 = sub i32 %1551, %1705
  %1710 = tail call i32 @llvm.smin.i32(i32 %1709, i32 0)
  %1711 = sub i32 %1709, %1710
  %1712 = zext i32 %1711 to i64
  %1713 = add nuw nsw i64 %1712, 1
  %1714 = add nsw i64 %1706, -1
  %1715 = icmp ult i32 %1711, 31
  br i1 %1715, label %1751, label %1716

1716:                                             ; preds = %1704
  %1717 = and i64 %1713, 8589934560
  %1718 = sub i64 %1707, %1717
  br label %1719

1719:                                             ; preds = %1719, %1716
  %1720 = phi i64 [ 0, %1716 ], [ %1743, %1719 ]
  %1721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1739, %1719 ]
  %1722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1740, %1719 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1741, %1719 ]
  %1724 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1742, %1719 ]
  %1725 = sub i64 %1707, %1720
  %1726 = getelementptr inbounds i32, ptr %11, i64 %1725
  %1727 = getelementptr inbounds i32, ptr %1726, i64 -7
  %1728 = load <8 x i32>, ptr %1727, align 4, !tbaa !5
  %1729 = shufflevector <8 x i32> %1728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1730 = getelementptr inbounds i32, ptr %1726, i64 -15
  %1731 = load <8 x i32>, ptr %1730, align 4, !tbaa !5
  %1732 = shufflevector <8 x i32> %1731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1733 = getelementptr inbounds i32, ptr %1726, i64 -23
  %1734 = load <8 x i32>, ptr %1733, align 4, !tbaa !5
  %1735 = shufflevector <8 x i32> %1734, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1736 = getelementptr inbounds i32, ptr %1726, i64 -31
  %1737 = load <8 x i32>, ptr %1736, align 4, !tbaa !5
  %1738 = shufflevector <8 x i32> %1737, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1739 = mul <8 x i32> %1729, %1721
  %1740 = mul <8 x i32> %1732, %1722
  %1741 = mul <8 x i32> %1735, %1723
  %1742 = mul <8 x i32> %1738, %1724
  %1743 = add nuw i64 %1720, 32
  %1744 = icmp eq i64 %1743, %1717
  br i1 %1744, label %1745, label %1719, !llvm.loop !439

1745:                                             ; preds = %1719
  %1746 = mul <8 x i32> %1740, %1739
  %1747 = mul <8 x i32> %1741, %1746
  %1748 = mul <8 x i32> %1742, %1747
  %1749 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1748)
  %1750 = icmp eq i64 %1713, %1717
  br i1 %1750, label %1763, label %1751

1751:                                             ; preds = %1704, %1745
  %1752 = phi i64 [ %1707, %1704 ], [ %1718, %1745 ]
  %1753 = phi i32 [ 1, %1704 ], [ %1749, %1745 ]
  br label %1754

1754:                                             ; preds = %1751, %1754
  %1755 = phi i64 [ %1760, %1754 ], [ %1752, %1751 ]
  %1756 = phi i32 [ %1759, %1754 ], [ %1753, %1751 ]
  %1757 = getelementptr inbounds i32, ptr %11, i64 %1755
  %1758 = load i32, ptr %1757, align 4, !tbaa !5
  %1759 = mul nsw i32 %1758, %1756
  %1760 = add nsw i64 %1755, -1
  %1761 = trunc i64 %1755 to i32
  %1762 = icmp sgt i32 %1761, 0
  br i1 %1762, label %1754, label %1763, !llvm.loop !440

1763:                                             ; preds = %1754, %1745
  %1764 = phi i32 [ %1749, %1745 ], [ %1759, %1754 ]
  %1765 = and i64 %1714, 4294967295
  %1766 = getelementptr inbounds i32, ptr %6, i64 %1765
  %1767 = load i32, ptr %1766, align 4, !tbaa !5
  %1768 = mul nsw i32 %1767, %1764
  %1769 = add nsw i32 %1768, %1708
  %1770 = icmp sgt i64 %1706, 2
  %1771 = add nsw i64 %1707, -1
  %1772 = add i32 %1705, 1
  br i1 %1770, label %1704, label %1773, !llvm.loop !441

1773:                                             ; preds = %1763, %1700
  %1774 = phi i32 [ %1703, %1700 ], [ %1769, %1763 ]
  %1775 = icmp slt i32 %1774, %5
  br i1 %1775, label %1778, label %1776

1776:                                             ; preds = %1773
  %1777 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

1778:                                             ; preds = %1773
  %1779 = sext i32 %1774 to i64
  %1780 = getelementptr inbounds i8, ptr %1232, i64 %1779
  %1781 = load i8, ptr %1780, align 1, !tbaa !11
  %1782 = sitofp i8 %1781 to double
  %1783 = icmp slt i8 %1781, 0
  %1784 = fneg fast double %1782
  %1785 = select fast i1 %1783, double %1784, double %1782
  %1786 = fadd fast double %1785, %1701
  store double %1786, ptr %1234, align 8, !tbaa !18
  %1787 = add nuw nsw i32 %1702, 1
  br i1 %1550, label %1788, label %1838

1788:                                             ; preds = %1778
  %1789 = load i32, ptr %4, align 4, !tbaa !5
  %1790 = load i32, ptr %12, align 4, !tbaa !5
  %1791 = add nsw i32 %1790, -1
  %1792 = icmp slt i32 %1789, %1791
  br i1 %1792, label %1815, label %1793

1793:                                             ; preds = %1788
  %1794 = icmp eq i32 %1789, %1791
  br i1 %1794, label %1795, label %1831

1795:                                             ; preds = %1793
  store i32 0, ptr %4, align 4, !tbaa !5
  %1796 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1796, ptr %6, align 4, !tbaa !5
  br i1 %1555, label %1838, label %1797

1797:                                             ; preds = %1795, %1825
  %1798 = phi i64 [ %1829, %1825 ], [ 1, %1795 ]
  %1799 = getelementptr inbounds i32, ptr %4, i64 %1798
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = getelementptr inbounds i32, ptr %12, i64 %1798
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = add nsw i32 %1802, -1
  %1804 = icmp slt i32 %1800, %1803
  br i1 %1804, label %1805, label %1823

1805:                                             ; preds = %1797
  br i1 %1792, label %1815, label %1806

1806:                                             ; preds = %1805
  %1807 = shl i64 %1798, 32
  %1808 = add i64 %1807, -4294967296
  %1809 = ashr exact i64 %1808, 32
  %1810 = getelementptr inbounds i32, ptr %7, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !5
  %1812 = getelementptr inbounds i32, ptr %6, i64 %1798
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = add nsw i32 %1813, %1811
  store i32 %1814, ptr %1812, align 4, !tbaa !5
  br label %1833

1815:                                             ; preds = %1788, %1805
  %1816 = phi i32 [ %1800, %1805 ], [ %1789, %1788 ]
  %1817 = phi ptr [ %1799, %1805 ], [ %4, %1788 ]
  %1818 = phi i64 [ %1798, %1805 ], [ 0, %1788 ]
  %1819 = add nsw i32 %1816, 1
  store i32 %1819, ptr %1817, align 4, !tbaa !5
  %1820 = getelementptr inbounds i32, ptr %7, i64 %1818
  %1821 = load i32, ptr %1820, align 4, !tbaa !5
  %1822 = getelementptr inbounds i32, ptr %6, i64 %1818
  br label %1833

1823:                                             ; preds = %1797
  %1824 = icmp eq i32 %1800, %1803
  br i1 %1824, label %1825, label %1831

1825:                                             ; preds = %1823
  store i32 0, ptr %1799, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %8, i64 %1798
  %1827 = load i32, ptr %1826, align 4, !tbaa !5
  %1828 = getelementptr inbounds i32, ptr %6, i64 %1798
  store i32 %1827, ptr %1828, align 4, !tbaa !5
  %1829 = add nuw nsw i64 %1798, 1
  %1830 = icmp eq i64 %1829, %1553
  br i1 %1830, label %1838, label %1797, !llvm.loop !442

1831:                                             ; preds = %1793, %1823
  %1832 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

1833:                                             ; preds = %1806, %1815
  %1834 = phi ptr [ %1822, %1815 ], [ %1799, %1806 ]
  %1835 = phi i32 [ %1821, %1815 ], [ 1, %1806 ]
  %1836 = load i32, ptr %1834, align 4, !tbaa !5
  %1837 = add nsw i32 %1836, %1835
  store i32 %1837, ptr %1834, align 4, !tbaa !5
  br label %1838

1838:                                             ; preds = %1825, %1833, %1795, %1778
  %1839 = icmp eq i32 %1787, %5
  br i1 %1839, label %3070, label %1700, !llvm.loop !443

1840:                                             ; preds = %1242
  %1841 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3070

1842:                                             ; preds = %18
  %1843 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1844 = load ptr, ptr %1843, align 8, !tbaa !9
  %1845 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1846 = load ptr, ptr %1845, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1846, align 4, !tbaa !162
  %1847 = icmp eq i32 %13, 0
  br i1 %1847, label %1848, label %1854

1848:                                             ; preds = %1842
  %1849 = load i8, ptr %1844, align 1, !tbaa !11
  %1850 = sitofp i8 %1849 to float
  %1851 = icmp slt i8 %1849, 0
  %1852 = fneg fast float %1850
  %1853 = select fast i1 %1851, float %1852, float %1850
  store float %1853, ptr %1846, align 4, !tbaa !162
  br label %3070

1854:                                             ; preds = %1842
  switch i32 %1, label %2456 [
    i32 1, label %1855
    i32 0, label %2158
  ]

1855:                                             ; preds = %1854
  %1856 = getelementptr inbounds i32, ptr %3, i64 %19
  %1857 = load i32, ptr %1856, align 4, !tbaa !5
  %1858 = icmp eq i32 %1857, 0
  %1859 = icmp sgt i32 %5, 0
  br i1 %1858, label %1869, label %1860

1860:                                             ; preds = %1855
  br i1 %1859, label %1861, label %3070

1861:                                             ; preds = %1860
  %1862 = icmp sgt i32 %13, 1
  %1863 = icmp sgt i32 %13, 0
  %1864 = add i32 %13, -2
  %1865 = zext i32 %1864 to i64
  %1866 = zext i32 %13 to i64
  %1867 = add nuw i32 %5, 1
  %1868 = icmp eq i32 %13, 1
  br label %2016

1869:                                             ; preds = %1855
  br i1 %1859, label %1870, label %3070

1870:                                             ; preds = %1869
  %1871 = icmp sgt i32 %13, 1
  %1872 = icmp sgt i32 %13, 0
  %1873 = add i32 %13, -2
  %1874 = zext i32 %1873 to i64
  %1875 = zext i32 %13 to i64
  %1876 = add nuw i32 %5, 1
  %1877 = icmp eq i32 %13, 1
  br label %1878

1878:                                             ; preds = %1870, %2014
  %1879 = phi float [ 0.000000e+00, %1870 ], [ %1964, %2014 ]
  %1880 = phi i32 [ 0, %1870 ], [ %1966, %2014 ]
  %1881 = phi double [ 0.000000e+00, %1870 ], [ %1965, %2014 ]
  %1882 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1871, label %1883, label %1952

1883:                                             ; preds = %1878, %1942
  %1884 = phi i32 [ %1951, %1942 ], [ 0, %1878 ]
  %1885 = phi i64 [ %1893, %1942 ], [ %1875, %1878 ]
  %1886 = phi i64 [ %1950, %1942 ], [ %1874, %1878 ]
  %1887 = phi i32 [ %1948, %1942 ], [ %1882, %1878 ]
  %1888 = sub i32 %1873, %1884
  %1889 = tail call i32 @llvm.smin.i32(i32 %1888, i32 0)
  %1890 = sub i32 %1888, %1889
  %1891 = zext i32 %1890 to i64
  %1892 = add nuw nsw i64 %1891, 1
  %1893 = add nsw i64 %1885, -1
  %1894 = icmp ult i32 %1890, 31
  br i1 %1894, label %1930, label %1895

1895:                                             ; preds = %1883
  %1896 = and i64 %1892, 8589934560
  %1897 = sub i64 %1886, %1896
  br label %1898

1898:                                             ; preds = %1898, %1895
  %1899 = phi i64 [ 0, %1895 ], [ %1922, %1898 ]
  %1900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1895 ], [ %1918, %1898 ]
  %1901 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1895 ], [ %1919, %1898 ]
  %1902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1895 ], [ %1920, %1898 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1895 ], [ %1921, %1898 ]
  %1904 = sub i64 %1886, %1899
  %1905 = getelementptr inbounds i32, ptr %9, i64 %1904
  %1906 = getelementptr inbounds i32, ptr %1905, i64 -7
  %1907 = load <8 x i32>, ptr %1906, align 4, !tbaa !5
  %1908 = shufflevector <8 x i32> %1907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1909 = getelementptr inbounds i32, ptr %1905, i64 -15
  %1910 = load <8 x i32>, ptr %1909, align 4, !tbaa !5
  %1911 = shufflevector <8 x i32> %1910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1912 = getelementptr inbounds i32, ptr %1905, i64 -23
  %1913 = load <8 x i32>, ptr %1912, align 4, !tbaa !5
  %1914 = shufflevector <8 x i32> %1913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1915 = getelementptr inbounds i32, ptr %1905, i64 -31
  %1916 = load <8 x i32>, ptr %1915, align 4, !tbaa !5
  %1917 = shufflevector <8 x i32> %1916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1918 = mul <8 x i32> %1908, %1900
  %1919 = mul <8 x i32> %1911, %1901
  %1920 = mul <8 x i32> %1914, %1902
  %1921 = mul <8 x i32> %1917, %1903
  %1922 = add nuw i64 %1899, 32
  %1923 = icmp eq i64 %1922, %1896
  br i1 %1923, label %1924, label %1898, !llvm.loop !444

1924:                                             ; preds = %1898
  %1925 = mul <8 x i32> %1919, %1918
  %1926 = mul <8 x i32> %1920, %1925
  %1927 = mul <8 x i32> %1921, %1926
  %1928 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1927)
  %1929 = icmp eq i64 %1892, %1896
  br i1 %1929, label %1942, label %1930

1930:                                             ; preds = %1883, %1924
  %1931 = phi i64 [ %1886, %1883 ], [ %1897, %1924 ]
  %1932 = phi i32 [ 1, %1883 ], [ %1928, %1924 ]
  br label %1933

1933:                                             ; preds = %1930, %1933
  %1934 = phi i64 [ %1939, %1933 ], [ %1931, %1930 ]
  %1935 = phi i32 [ %1938, %1933 ], [ %1932, %1930 ]
  %1936 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1937 = load i32, ptr %1936, align 4, !tbaa !5
  %1938 = mul nsw i32 %1937, %1935
  %1939 = add nsw i64 %1934, -1
  %1940 = trunc i64 %1934 to i32
  %1941 = icmp sgt i32 %1940, 0
  br i1 %1941, label %1933, label %1942, !llvm.loop !445

1942:                                             ; preds = %1933, %1924
  %1943 = phi i32 [ %1928, %1924 ], [ %1938, %1933 ]
  %1944 = and i64 %1893, 4294967295
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1944
  %1946 = load i32, ptr %1945, align 4, !tbaa !5
  %1947 = mul nsw i32 %1946, %1943
  %1948 = add nsw i32 %1947, %1887
  %1949 = icmp sgt i64 %1885, 2
  %1950 = add nsw i64 %1886, -1
  %1951 = add i32 %1884, 1
  br i1 %1949, label %1883, label %1952, !llvm.loop !446

1952:                                             ; preds = %1942, %1878
  %1953 = phi i32 [ %1882, %1878 ], [ %1948, %1942 ]
  %1954 = sext i32 %1953 to i64
  %1955 = getelementptr inbounds double, ptr %2, i64 %1954
  %1956 = load double, ptr %1955, align 8, !tbaa !18
  %1957 = getelementptr inbounds i8, ptr %1844, i64 %1954
  %1958 = load i8, ptr %1957, align 1, !tbaa !11
  %1959 = fpext float %1879 to double
  %1960 = sitofp i8 %1958 to double
  %1961 = fmul fast double %1956, %1960
  %1962 = tail call fast double @llvm.fabs.f64(double %1961)
  %1963 = fadd fast double %1962, %1959
  %1964 = fptrunc double %1963 to float
  store float %1964, ptr %1846, align 4, !tbaa !162
  %1965 = fadd fast double %1956, %1881
  %1966 = add nuw nsw i32 %1880, 1
  br i1 %1872, label %1967, label %2014

1967:                                             ; preds = %1952
  %1968 = load i32, ptr %4, align 4, !tbaa !5
  %1969 = load i32, ptr %12, align 4, !tbaa !5
  %1970 = add nsw i32 %1969, -1
  %1971 = icmp slt i32 %1968, %1970
  br i1 %1971, label %1991, label %1972

1972:                                             ; preds = %1967
  %1973 = icmp eq i32 %1968, %1970
  br i1 %1973, label %1974, label %2007

1974:                                             ; preds = %1972
  store i32 0, ptr %4, align 4, !tbaa !5
  %1975 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1975, ptr %6, align 4, !tbaa !5
  br i1 %1877, label %2014, label %1976

1976:                                             ; preds = %1974, %2001
  %1977 = phi i64 [ %2005, %2001 ], [ 1, %1974 ]
  %1978 = getelementptr inbounds i32, ptr %4, i64 %1977
  %1979 = load i32, ptr %1978, align 4, !tbaa !5
  %1980 = getelementptr inbounds i32, ptr %12, i64 %1977
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = add nsw i32 %1981, -1
  %1983 = icmp slt i32 %1979, %1982
  br i1 %1983, label %1984, label %1999

1984:                                             ; preds = %1976
  br i1 %1971, label %1991, label %1985

1985:                                             ; preds = %1984
  %1986 = getelementptr inbounds i32, ptr %7, i64 %1977
  %1987 = load i32, ptr %1986, align 4, !tbaa !5
  %1988 = getelementptr inbounds i32, ptr %6, i64 %1977
  %1989 = load i32, ptr %1988, align 4, !tbaa !5
  %1990 = add nsw i32 %1989, %1987
  store i32 %1990, ptr %1988, align 4, !tbaa !5
  br label %2009

1991:                                             ; preds = %1967, %1984
  %1992 = phi i32 [ %1979, %1984 ], [ %1968, %1967 ]
  %1993 = phi ptr [ %1978, %1984 ], [ %4, %1967 ]
  %1994 = phi i64 [ %1977, %1984 ], [ 0, %1967 ]
  %1995 = add nsw i32 %1992, 1
  store i32 %1995, ptr %1993, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %7, i64 %1994
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1994
  br label %2009

1999:                                             ; preds = %1976
  %2000 = icmp eq i32 %1979, %1982
  br i1 %2000, label %2001, label %2007

2001:                                             ; preds = %1999
  store i32 0, ptr %1978, align 4, !tbaa !5
  %2002 = getelementptr inbounds i32, ptr %8, i64 %1977
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %1977
  store i32 %2003, ptr %2004, align 4, !tbaa !5
  %2005 = add nuw nsw i64 %1977, 1
  %2006 = icmp eq i64 %2005, %1875
  br i1 %2006, label %2014, label %1976, !llvm.loop !447

2007:                                             ; preds = %1972, %1999
  %2008 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2009:                                             ; preds = %1985, %1991
  %2010 = phi ptr [ %1998, %1991 ], [ %1978, %1985 ]
  %2011 = phi i32 [ %1997, %1991 ], [ 1, %1985 ]
  %2012 = load i32, ptr %2010, align 4, !tbaa !5
  %2013 = add nsw i32 %2012, %2011
  store i32 %2013, ptr %2010, align 4, !tbaa !5
  br label %2014

2014:                                             ; preds = %2001, %2009, %1974, %1952
  %2015 = icmp eq i32 %1966, %5
  br i1 %2015, label %3070, label %1878, !llvm.loop !448

2016:                                             ; preds = %1861, %2156
  %2017 = phi float [ 0.000000e+00, %1861 ], [ %2104, %2156 ]
  %2018 = phi i32 [ 0, %1861 ], [ %2105, %2156 ]
  %2019 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1862, label %2020, label %2089

2020:                                             ; preds = %2016, %2079
  %2021 = phi i32 [ %2088, %2079 ], [ 0, %2016 ]
  %2022 = phi i64 [ %2030, %2079 ], [ %1866, %2016 ]
  %2023 = phi i64 [ %2087, %2079 ], [ %1865, %2016 ]
  %2024 = phi i32 [ %2085, %2079 ], [ %2019, %2016 ]
  %2025 = sub i32 %1864, %2021
  %2026 = tail call i32 @llvm.smin.i32(i32 %2025, i32 0)
  %2027 = sub i32 %2025, %2026
  %2028 = zext i32 %2027 to i64
  %2029 = add nuw nsw i64 %2028, 1
  %2030 = add nsw i64 %2022, -1
  %2031 = icmp ult i32 %2027, 31
  br i1 %2031, label %2067, label %2032

2032:                                             ; preds = %2020
  %2033 = and i64 %2029, 8589934560
  %2034 = sub i64 %2023, %2033
  br label %2035

2035:                                             ; preds = %2035, %2032
  %2036 = phi i64 [ 0, %2032 ], [ %2059, %2035 ]
  %2037 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2032 ], [ %2055, %2035 ]
  %2038 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2032 ], [ %2056, %2035 ]
  %2039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2032 ], [ %2057, %2035 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2032 ], [ %2058, %2035 ]
  %2041 = sub i64 %2023, %2036
  %2042 = getelementptr inbounds i32, ptr %11, i64 %2041
  %2043 = getelementptr inbounds i32, ptr %2042, i64 -7
  %2044 = load <8 x i32>, ptr %2043, align 4, !tbaa !5
  %2045 = shufflevector <8 x i32> %2044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2046 = getelementptr inbounds i32, ptr %2042, i64 -15
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = getelementptr inbounds i32, ptr %2042, i64 -23
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2042, i64 -31
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = mul <8 x i32> %2045, %2037
  %2056 = mul <8 x i32> %2048, %2038
  %2057 = mul <8 x i32> %2051, %2039
  %2058 = mul <8 x i32> %2054, %2040
  %2059 = add nuw i64 %2036, 32
  %2060 = icmp eq i64 %2059, %2033
  br i1 %2060, label %2061, label %2035, !llvm.loop !449

2061:                                             ; preds = %2035
  %2062 = mul <8 x i32> %2056, %2055
  %2063 = mul <8 x i32> %2057, %2062
  %2064 = mul <8 x i32> %2058, %2063
  %2065 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2064)
  %2066 = icmp eq i64 %2029, %2033
  br i1 %2066, label %2079, label %2067

2067:                                             ; preds = %2020, %2061
  %2068 = phi i64 [ %2023, %2020 ], [ %2034, %2061 ]
  %2069 = phi i32 [ 1, %2020 ], [ %2065, %2061 ]
  br label %2070

2070:                                             ; preds = %2067, %2070
  %2071 = phi i64 [ %2076, %2070 ], [ %2068, %2067 ]
  %2072 = phi i32 [ %2075, %2070 ], [ %2069, %2067 ]
  %2073 = getelementptr inbounds i32, ptr %11, i64 %2071
  %2074 = load i32, ptr %2073, align 4, !tbaa !5
  %2075 = mul nsw i32 %2074, %2072
  %2076 = add nsw i64 %2071, -1
  %2077 = trunc i64 %2071 to i32
  %2078 = icmp sgt i32 %2077, 0
  br i1 %2078, label %2070, label %2079, !llvm.loop !450

2079:                                             ; preds = %2070, %2061
  %2080 = phi i32 [ %2065, %2061 ], [ %2075, %2070 ]
  %2081 = and i64 %2030, 4294967295
  %2082 = getelementptr inbounds i32, ptr %6, i64 %2081
  %2083 = load i32, ptr %2082, align 4, !tbaa !5
  %2084 = mul nsw i32 %2083, %2080
  %2085 = add nsw i32 %2084, %2024
  %2086 = icmp sgt i64 %2022, 2
  %2087 = add nsw i64 %2023, -1
  %2088 = add i32 %2021, 1
  br i1 %2086, label %2020, label %2089, !llvm.loop !451

2089:                                             ; preds = %2079, %2016
  %2090 = phi i32 [ %2019, %2016 ], [ %2085, %2079 ]
  %2091 = icmp slt i32 %2090, %5
  br i1 %2091, label %2094, label %2092

2092:                                             ; preds = %2089
  %2093 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

2094:                                             ; preds = %2089
  %2095 = sext i32 %2090 to i64
  %2096 = getelementptr inbounds i8, ptr %1844, i64 %2095
  %2097 = load i8, ptr %2096, align 1, !tbaa !11
  %2098 = fpext float %2017 to double
  %2099 = sitofp i8 %2097 to double
  %2100 = icmp slt i8 %2097, 0
  %2101 = fneg fast double %2099
  %2102 = select fast i1 %2100, double %2101, double %2099
  %2103 = fadd fast double %2102, %2098
  %2104 = fptrunc double %2103 to float
  store float %2104, ptr %1846, align 4, !tbaa !162
  %2105 = add nuw nsw i32 %2018, 1
  br i1 %1863, label %2106, label %2156

2106:                                             ; preds = %2094
  %2107 = load i32, ptr %4, align 4, !tbaa !5
  %2108 = load i32, ptr %12, align 4, !tbaa !5
  %2109 = add nsw i32 %2108, -1
  %2110 = icmp slt i32 %2107, %2109
  br i1 %2110, label %2133, label %2111

2111:                                             ; preds = %2106
  %2112 = icmp eq i32 %2107, %2109
  br i1 %2112, label %2113, label %2149

2113:                                             ; preds = %2111
  store i32 0, ptr %4, align 4, !tbaa !5
  %2114 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2114, ptr %6, align 4, !tbaa !5
  br i1 %1868, label %2156, label %2115

2115:                                             ; preds = %2113, %2143
  %2116 = phi i64 [ %2147, %2143 ], [ 1, %2113 ]
  %2117 = getelementptr inbounds i32, ptr %4, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = getelementptr inbounds i32, ptr %12, i64 %2116
  %2120 = load i32, ptr %2119, align 4, !tbaa !5
  %2121 = add nsw i32 %2120, -1
  %2122 = icmp slt i32 %2118, %2121
  br i1 %2122, label %2123, label %2141

2123:                                             ; preds = %2115
  br i1 %2110, label %2133, label %2124

2124:                                             ; preds = %2123
  %2125 = shl i64 %2116, 32
  %2126 = add i64 %2125, -4294967296
  %2127 = ashr exact i64 %2126, 32
  %2128 = getelementptr inbounds i32, ptr %7, i64 %2127
  %2129 = load i32, ptr %2128, align 4, !tbaa !5
  %2130 = getelementptr inbounds i32, ptr %6, i64 %2116
  %2131 = load i32, ptr %2130, align 4, !tbaa !5
  %2132 = add nsw i32 %2131, %2129
  store i32 %2132, ptr %2130, align 4, !tbaa !5
  br label %2151

2133:                                             ; preds = %2106, %2123
  %2134 = phi i32 [ %2118, %2123 ], [ %2107, %2106 ]
  %2135 = phi ptr [ %2117, %2123 ], [ %4, %2106 ]
  %2136 = phi i64 [ %2116, %2123 ], [ 0, %2106 ]
  %2137 = add nsw i32 %2134, 1
  store i32 %2137, ptr %2135, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %7, i64 %2136
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = getelementptr inbounds i32, ptr %6, i64 %2136
  br label %2151

2141:                                             ; preds = %2115
  %2142 = icmp eq i32 %2118, %2121
  br i1 %2142, label %2143, label %2149

2143:                                             ; preds = %2141
  store i32 0, ptr %2117, align 4, !tbaa !5
  %2144 = getelementptr inbounds i32, ptr %8, i64 %2116
  %2145 = load i32, ptr %2144, align 4, !tbaa !5
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2116
  store i32 %2145, ptr %2146, align 4, !tbaa !5
  %2147 = add nuw nsw i64 %2116, 1
  %2148 = icmp eq i64 %2147, %1866
  br i1 %2148, label %2156, label %2115, !llvm.loop !452

2149:                                             ; preds = %2111, %2141
  %2150 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2151:                                             ; preds = %2124, %2133
  %2152 = phi ptr [ %2140, %2133 ], [ %2117, %2124 ]
  %2153 = phi i32 [ %2139, %2133 ], [ 1, %2124 ]
  %2154 = load i32, ptr %2152, align 4, !tbaa !5
  %2155 = add nsw i32 %2154, %2153
  store i32 %2155, ptr %2152, align 4, !tbaa !5
  br label %2156

2156:                                             ; preds = %2143, %2151, %2113, %2094
  %2157 = icmp eq i32 %2105, %5
  br i1 %2157, label %3070, label %2016, !llvm.loop !453

2158:                                             ; preds = %1854
  %2159 = getelementptr inbounds i32, ptr %3, i64 %19
  %2160 = load i32, ptr %2159, align 4, !tbaa !5
  %2161 = icmp eq i32 %2160, 0
  %2162 = icmp sgt i32 %5, 0
  br i1 %2161, label %2172, label %2163

2163:                                             ; preds = %2158
  br i1 %2162, label %2164, label %3070

2164:                                             ; preds = %2163
  %2165 = icmp sgt i32 %13, 1
  %2166 = icmp sgt i32 %13, 0
  %2167 = add i32 %13, -2
  %2168 = zext i32 %2167 to i64
  %2169 = zext i32 %13 to i64
  %2170 = add nuw i32 %5, 1
  %2171 = icmp eq i32 %13, 1
  br label %2316

2172:                                             ; preds = %2158
  br i1 %2162, label %2173, label %3070

2173:                                             ; preds = %2172
  %2174 = icmp sgt i32 %13, 1
  %2175 = icmp sgt i32 %13, 0
  %2176 = add i32 %13, -2
  %2177 = zext i32 %2176 to i64
  %2178 = zext i32 %13 to i64
  %2179 = add nuw i32 %5, 1
  %2180 = icmp eq i32 %13, 1
  br label %2181

2181:                                             ; preds = %2173, %2314
  %2182 = phi float [ 0.000000e+00, %2173 ], [ %2264, %2314 ]
  %2183 = phi i32 [ 0, %2173 ], [ %2266, %2314 ]
  %2184 = phi double [ 0.000000e+00, %2173 ], [ %2265, %2314 ]
  %2185 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2186, label %2255

2186:                                             ; preds = %2181, %2245
  %2187 = phi i32 [ %2254, %2245 ], [ 0, %2181 ]
  %2188 = phi i64 [ %2196, %2245 ], [ %2178, %2181 ]
  %2189 = phi i64 [ %2253, %2245 ], [ %2177, %2181 ]
  %2190 = phi i32 [ %2251, %2245 ], [ %2185, %2181 ]
  %2191 = sub i32 %2176, %2187
  %2192 = tail call i32 @llvm.smin.i32(i32 %2191, i32 0)
  %2193 = sub i32 %2191, %2192
  %2194 = zext i32 %2193 to i64
  %2195 = add nuw nsw i64 %2194, 1
  %2196 = add nsw i64 %2188, -1
  %2197 = icmp ult i32 %2193, 31
  br i1 %2197, label %2233, label %2198

2198:                                             ; preds = %2186
  %2199 = and i64 %2195, 8589934560
  %2200 = sub i64 %2189, %2199
  br label %2201

2201:                                             ; preds = %2201, %2198
  %2202 = phi i64 [ 0, %2198 ], [ %2225, %2201 ]
  %2203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2221, %2201 ]
  %2204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2222, %2201 ]
  %2205 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2223, %2201 ]
  %2206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2224, %2201 ]
  %2207 = sub i64 %2189, %2202
  %2208 = getelementptr inbounds i32, ptr %9, i64 %2207
  %2209 = getelementptr inbounds i32, ptr %2208, i64 -7
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = getelementptr inbounds i32, ptr %2208, i64 -15
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = getelementptr inbounds i32, ptr %2208, i64 -23
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2208, i64 -31
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = mul <8 x i32> %2211, %2203
  %2222 = mul <8 x i32> %2214, %2204
  %2223 = mul <8 x i32> %2217, %2205
  %2224 = mul <8 x i32> %2220, %2206
  %2225 = add nuw i64 %2202, 32
  %2226 = icmp eq i64 %2225, %2199
  br i1 %2226, label %2227, label %2201, !llvm.loop !454

2227:                                             ; preds = %2201
  %2228 = mul <8 x i32> %2222, %2221
  %2229 = mul <8 x i32> %2223, %2228
  %2230 = mul <8 x i32> %2224, %2229
  %2231 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2230)
  %2232 = icmp eq i64 %2195, %2199
  br i1 %2232, label %2245, label %2233

2233:                                             ; preds = %2186, %2227
  %2234 = phi i64 [ %2189, %2186 ], [ %2200, %2227 ]
  %2235 = phi i32 [ 1, %2186 ], [ %2231, %2227 ]
  br label %2236

2236:                                             ; preds = %2233, %2236
  %2237 = phi i64 [ %2242, %2236 ], [ %2234, %2233 ]
  %2238 = phi i32 [ %2241, %2236 ], [ %2235, %2233 ]
  %2239 = getelementptr inbounds i32, ptr %9, i64 %2237
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = mul nsw i32 %2240, %2238
  %2242 = add nsw i64 %2237, -1
  %2243 = trunc i64 %2237 to i32
  %2244 = icmp sgt i32 %2243, 0
  br i1 %2244, label %2236, label %2245, !llvm.loop !455

2245:                                             ; preds = %2236, %2227
  %2246 = phi i32 [ %2231, %2227 ], [ %2241, %2236 ]
  %2247 = and i64 %2196, 4294967295
  %2248 = getelementptr inbounds i32, ptr %6, i64 %2247
  %2249 = load i32, ptr %2248, align 4, !tbaa !5
  %2250 = mul nsw i32 %2249, %2246
  %2251 = add nsw i32 %2250, %2190
  %2252 = icmp sgt i64 %2188, 2
  %2253 = add nsw i64 %2189, -1
  %2254 = add i32 %2187, 1
  br i1 %2252, label %2186, label %2255, !llvm.loop !456

2255:                                             ; preds = %2245, %2181
  %2256 = phi i32 [ %2185, %2181 ], [ %2251, %2245 ]
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds i8, ptr %1844, i64 %2257
  %2259 = load i8, ptr %2258, align 1, !tbaa !11
  %2260 = sitofp i8 %2259 to float
  %2261 = icmp slt i8 %2259, 0
  %2262 = fneg fast float %2260
  %2263 = select fast i1 %2261, float %2262, float %2260
  %2264 = fadd fast float %2263, %2182
  store float %2264, ptr %1846, align 4, !tbaa !162
  %2265 = fadd fast double %2184, 1.000000e+00
  %2266 = add nuw nsw i32 %2183, 1
  br i1 %2175, label %2267, label %2314

2267:                                             ; preds = %2255
  %2268 = load i32, ptr %4, align 4, !tbaa !5
  %2269 = load i32, ptr %12, align 4, !tbaa !5
  %2270 = add nsw i32 %2269, -1
  %2271 = icmp slt i32 %2268, %2270
  br i1 %2271, label %2291, label %2272

2272:                                             ; preds = %2267
  %2273 = icmp eq i32 %2268, %2270
  br i1 %2273, label %2274, label %2307

2274:                                             ; preds = %2272
  store i32 0, ptr %4, align 4, !tbaa !5
  %2275 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2275, ptr %6, align 4, !tbaa !5
  br i1 %2180, label %2314, label %2276

2276:                                             ; preds = %2274, %2301
  %2277 = phi i64 [ %2305, %2301 ], [ 1, %2274 ]
  %2278 = getelementptr inbounds i32, ptr %4, i64 %2277
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = getelementptr inbounds i32, ptr %12, i64 %2277
  %2281 = load i32, ptr %2280, align 4, !tbaa !5
  %2282 = add nsw i32 %2281, -1
  %2283 = icmp slt i32 %2279, %2282
  br i1 %2283, label %2284, label %2299

2284:                                             ; preds = %2276
  br i1 %2271, label %2291, label %2285

2285:                                             ; preds = %2284
  %2286 = getelementptr inbounds i32, ptr %7, i64 %2277
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %6, i64 %2277
  %2289 = load i32, ptr %2288, align 4, !tbaa !5
  %2290 = add nsw i32 %2289, %2287
  store i32 %2290, ptr %2288, align 4, !tbaa !5
  br label %2309

2291:                                             ; preds = %2267, %2284
  %2292 = phi i32 [ %2279, %2284 ], [ %2268, %2267 ]
  %2293 = phi ptr [ %2278, %2284 ], [ %4, %2267 ]
  %2294 = phi i64 [ %2277, %2284 ], [ 0, %2267 ]
  %2295 = add nsw i32 %2292, 1
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  %2296 = getelementptr inbounds i32, ptr %7, i64 %2294
  %2297 = load i32, ptr %2296, align 4, !tbaa !5
  %2298 = getelementptr inbounds i32, ptr %6, i64 %2294
  br label %2309

2299:                                             ; preds = %2276
  %2300 = icmp eq i32 %2279, %2282
  br i1 %2300, label %2301, label %2307

2301:                                             ; preds = %2299
  store i32 0, ptr %2278, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %8, i64 %2277
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2277
  store i32 %2303, ptr %2304, align 4, !tbaa !5
  %2305 = add nuw nsw i64 %2277, 1
  %2306 = icmp eq i64 %2305, %2178
  br i1 %2306, label %2314, label %2276, !llvm.loop !457

2307:                                             ; preds = %2272, %2299
  %2308 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2309:                                             ; preds = %2285, %2291
  %2310 = phi ptr [ %2298, %2291 ], [ %2278, %2285 ]
  %2311 = phi i32 [ %2297, %2291 ], [ 1, %2285 ]
  %2312 = load i32, ptr %2310, align 4, !tbaa !5
  %2313 = add nsw i32 %2312, %2311
  store i32 %2313, ptr %2310, align 4, !tbaa !5
  br label %2314

2314:                                             ; preds = %2301, %2309, %2274, %2255
  %2315 = icmp eq i32 %2266, %5
  br i1 %2315, label %3070, label %2181, !llvm.loop !458

2316:                                             ; preds = %2164, %2454
  %2317 = phi float [ 0.000000e+00, %2164 ], [ %2402, %2454 ]
  %2318 = phi i32 [ 0, %2164 ], [ %2403, %2454 ]
  %2319 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2165, label %2320, label %2389

2320:                                             ; preds = %2316, %2379
  %2321 = phi i32 [ %2388, %2379 ], [ 0, %2316 ]
  %2322 = phi i64 [ %2330, %2379 ], [ %2169, %2316 ]
  %2323 = phi i64 [ %2387, %2379 ], [ %2168, %2316 ]
  %2324 = phi i32 [ %2385, %2379 ], [ %2319, %2316 ]
  %2325 = sub i32 %2167, %2321
  %2326 = tail call i32 @llvm.smin.i32(i32 %2325, i32 0)
  %2327 = sub i32 %2325, %2326
  %2328 = zext i32 %2327 to i64
  %2329 = add nuw nsw i64 %2328, 1
  %2330 = add nsw i64 %2322, -1
  %2331 = icmp ult i32 %2327, 31
  br i1 %2331, label %2367, label %2332

2332:                                             ; preds = %2320
  %2333 = and i64 %2329, 8589934560
  %2334 = sub i64 %2323, %2333
  br label %2335

2335:                                             ; preds = %2335, %2332
  %2336 = phi i64 [ 0, %2332 ], [ %2359, %2335 ]
  %2337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2332 ], [ %2355, %2335 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2332 ], [ %2356, %2335 ]
  %2339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2332 ], [ %2357, %2335 ]
  %2340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2332 ], [ %2358, %2335 ]
  %2341 = sub i64 %2323, %2336
  %2342 = getelementptr inbounds i32, ptr %11, i64 %2341
  %2343 = getelementptr inbounds i32, ptr %2342, i64 -7
  %2344 = load <8 x i32>, ptr %2343, align 4, !tbaa !5
  %2345 = shufflevector <8 x i32> %2344, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2346 = getelementptr inbounds i32, ptr %2342, i64 -15
  %2347 = load <8 x i32>, ptr %2346, align 4, !tbaa !5
  %2348 = shufflevector <8 x i32> %2347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2349 = getelementptr inbounds i32, ptr %2342, i64 -23
  %2350 = load <8 x i32>, ptr %2349, align 4, !tbaa !5
  %2351 = shufflevector <8 x i32> %2350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2352 = getelementptr inbounds i32, ptr %2342, i64 -31
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !5
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = mul <8 x i32> %2345, %2337
  %2356 = mul <8 x i32> %2348, %2338
  %2357 = mul <8 x i32> %2351, %2339
  %2358 = mul <8 x i32> %2354, %2340
  %2359 = add nuw i64 %2336, 32
  %2360 = icmp eq i64 %2359, %2333
  br i1 %2360, label %2361, label %2335, !llvm.loop !459

2361:                                             ; preds = %2335
  %2362 = mul <8 x i32> %2356, %2355
  %2363 = mul <8 x i32> %2357, %2362
  %2364 = mul <8 x i32> %2358, %2363
  %2365 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2364)
  %2366 = icmp eq i64 %2329, %2333
  br i1 %2366, label %2379, label %2367

2367:                                             ; preds = %2320, %2361
  %2368 = phi i64 [ %2323, %2320 ], [ %2334, %2361 ]
  %2369 = phi i32 [ 1, %2320 ], [ %2365, %2361 ]
  br label %2370

2370:                                             ; preds = %2367, %2370
  %2371 = phi i64 [ %2376, %2370 ], [ %2368, %2367 ]
  %2372 = phi i32 [ %2375, %2370 ], [ %2369, %2367 ]
  %2373 = getelementptr inbounds i32, ptr %11, i64 %2371
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = mul nsw i32 %2374, %2372
  %2376 = add nsw i64 %2371, -1
  %2377 = trunc i64 %2371 to i32
  %2378 = icmp sgt i32 %2377, 0
  br i1 %2378, label %2370, label %2379, !llvm.loop !460

2379:                                             ; preds = %2370, %2361
  %2380 = phi i32 [ %2365, %2361 ], [ %2375, %2370 ]
  %2381 = and i64 %2330, 4294967295
  %2382 = getelementptr inbounds i32, ptr %6, i64 %2381
  %2383 = load i32, ptr %2382, align 4, !tbaa !5
  %2384 = mul nsw i32 %2383, %2380
  %2385 = add nsw i32 %2384, %2324
  %2386 = icmp sgt i64 %2322, 2
  %2387 = add nsw i64 %2323, -1
  %2388 = add i32 %2321, 1
  br i1 %2386, label %2320, label %2389, !llvm.loop !461

2389:                                             ; preds = %2379, %2316
  %2390 = phi i32 [ %2319, %2316 ], [ %2385, %2379 ]
  %2391 = icmp slt i32 %2390, %5
  br i1 %2391, label %2394, label %2392

2392:                                             ; preds = %2389
  %2393 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

2394:                                             ; preds = %2389
  %2395 = sext i32 %2390 to i64
  %2396 = getelementptr inbounds i8, ptr %1844, i64 %2395
  %2397 = load i8, ptr %2396, align 1, !tbaa !11
  %2398 = sitofp i8 %2397 to float
  %2399 = icmp slt i8 %2397, 0
  %2400 = fneg fast float %2398
  %2401 = select fast i1 %2399, float %2400, float %2398
  %2402 = fadd fast float %2401, %2317
  store float %2402, ptr %1846, align 4, !tbaa !162
  %2403 = add nuw nsw i32 %2318, 1
  br i1 %2166, label %2404, label %2454

2404:                                             ; preds = %2394
  %2405 = load i32, ptr %4, align 4, !tbaa !5
  %2406 = load i32, ptr %12, align 4, !tbaa !5
  %2407 = add nsw i32 %2406, -1
  %2408 = icmp slt i32 %2405, %2407
  br i1 %2408, label %2431, label %2409

2409:                                             ; preds = %2404
  %2410 = icmp eq i32 %2405, %2407
  br i1 %2410, label %2411, label %2447

2411:                                             ; preds = %2409
  store i32 0, ptr %4, align 4, !tbaa !5
  %2412 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2412, ptr %6, align 4, !tbaa !5
  br i1 %2171, label %2454, label %2413

2413:                                             ; preds = %2411, %2441
  %2414 = phi i64 [ %2445, %2441 ], [ 1, %2411 ]
  %2415 = getelementptr inbounds i32, ptr %4, i64 %2414
  %2416 = load i32, ptr %2415, align 4, !tbaa !5
  %2417 = getelementptr inbounds i32, ptr %12, i64 %2414
  %2418 = load i32, ptr %2417, align 4, !tbaa !5
  %2419 = add nsw i32 %2418, -1
  %2420 = icmp slt i32 %2416, %2419
  br i1 %2420, label %2421, label %2439

2421:                                             ; preds = %2413
  br i1 %2408, label %2431, label %2422

2422:                                             ; preds = %2421
  %2423 = shl i64 %2414, 32
  %2424 = add i64 %2423, -4294967296
  %2425 = ashr exact i64 %2424, 32
  %2426 = getelementptr inbounds i32, ptr %7, i64 %2425
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2414
  %2429 = load i32, ptr %2428, align 4, !tbaa !5
  %2430 = add nsw i32 %2429, %2427
  store i32 %2430, ptr %2428, align 4, !tbaa !5
  br label %2449

2431:                                             ; preds = %2404, %2421
  %2432 = phi i32 [ %2416, %2421 ], [ %2405, %2404 ]
  %2433 = phi ptr [ %2415, %2421 ], [ %4, %2404 ]
  %2434 = phi i64 [ %2414, %2421 ], [ 0, %2404 ]
  %2435 = add nsw i32 %2432, 1
  store i32 %2435, ptr %2433, align 4, !tbaa !5
  %2436 = getelementptr inbounds i32, ptr %7, i64 %2434
  %2437 = load i32, ptr %2436, align 4, !tbaa !5
  %2438 = getelementptr inbounds i32, ptr %6, i64 %2434
  br label %2449

2439:                                             ; preds = %2413
  %2440 = icmp eq i32 %2416, %2419
  br i1 %2440, label %2441, label %2447

2441:                                             ; preds = %2439
  store i32 0, ptr %2415, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %8, i64 %2414
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = getelementptr inbounds i32, ptr %6, i64 %2414
  store i32 %2443, ptr %2444, align 4, !tbaa !5
  %2445 = add nuw nsw i64 %2414, 1
  %2446 = icmp eq i64 %2445, %2169
  br i1 %2446, label %2454, label %2413, !llvm.loop !462

2447:                                             ; preds = %2409, %2439
  %2448 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2449:                                             ; preds = %2422, %2431
  %2450 = phi ptr [ %2438, %2431 ], [ %2415, %2422 ]
  %2451 = phi i32 [ %2437, %2431 ], [ 1, %2422 ]
  %2452 = load i32, ptr %2450, align 4, !tbaa !5
  %2453 = add nsw i32 %2452, %2451
  store i32 %2453, ptr %2450, align 4, !tbaa !5
  br label %2454

2454:                                             ; preds = %2441, %2449, %2411, %2394
  %2455 = icmp eq i32 %2403, %5
  br i1 %2455, label %3070, label %2316, !llvm.loop !463

2456:                                             ; preds = %1854
  %2457 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3070

2458:                                             ; preds = %18
  %2459 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2460 = load ptr, ptr %2459, align 8, !tbaa !9
  %2461 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2462 = load ptr, ptr %2461, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2462, align 8, !tbaa !18
  %2463 = icmp eq i32 %13, 0
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2458
  %2465 = load i8, ptr %2460, align 1, !tbaa !11
  %2466 = sitofp i8 %2465 to double
  %2467 = icmp slt i8 %2465, 0
  %2468 = fneg fast double %2466
  %2469 = select fast i1 %2467, double %2468, double %2466
  store double %2469, ptr %2462, align 8, !tbaa !18
  br label %3070

2470:                                             ; preds = %2458
  switch i32 %1, label %3068 [
    i32 1, label %2471
    i32 0, label %2770
  ]

2471:                                             ; preds = %2470
  %2472 = getelementptr inbounds i32, ptr %3, i64 %19
  %2473 = load i32, ptr %2472, align 4, !tbaa !5
  %2474 = icmp eq i32 %2473, 0
  %2475 = icmp sgt i32 %5, 0
  br i1 %2474, label %2485, label %2476

2476:                                             ; preds = %2471
  br i1 %2475, label %2477, label %3070

2477:                                             ; preds = %2476
  %2478 = icmp sgt i32 %13, 1
  %2479 = icmp sgt i32 %13, 0
  %2480 = add i32 %13, -2
  %2481 = zext i32 %2480 to i64
  %2482 = zext i32 %13 to i64
  %2483 = add nuw i32 %5, 1
  %2484 = icmp eq i32 %13, 1
  br label %2630

2485:                                             ; preds = %2471
  br i1 %2475, label %2486, label %3070

2486:                                             ; preds = %2485
  %2487 = icmp sgt i32 %13, 1
  %2488 = icmp sgt i32 %13, 0
  %2489 = add i32 %13, -2
  %2490 = zext i32 %2489 to i64
  %2491 = zext i32 %13 to i64
  %2492 = add nuw i32 %5, 1
  %2493 = icmp eq i32 %13, 1
  br label %2494

2494:                                             ; preds = %2486, %2628
  %2495 = phi double [ 0.000000e+00, %2486 ], [ %2578, %2628 ]
  %2496 = phi i32 [ 0, %2486 ], [ %2580, %2628 ]
  %2497 = phi double [ 0.000000e+00, %2486 ], [ %2579, %2628 ]
  %2498 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2487, label %2499, label %2568

2499:                                             ; preds = %2494, %2558
  %2500 = phi i32 [ %2567, %2558 ], [ 0, %2494 ]
  %2501 = phi i64 [ %2509, %2558 ], [ %2491, %2494 ]
  %2502 = phi i64 [ %2566, %2558 ], [ %2490, %2494 ]
  %2503 = phi i32 [ %2564, %2558 ], [ %2498, %2494 ]
  %2504 = sub i32 %2489, %2500
  %2505 = tail call i32 @llvm.smin.i32(i32 %2504, i32 0)
  %2506 = sub i32 %2504, %2505
  %2507 = zext i32 %2506 to i64
  %2508 = add nuw nsw i64 %2507, 1
  %2509 = add nsw i64 %2501, -1
  %2510 = icmp ult i32 %2506, 31
  br i1 %2510, label %2546, label %2511

2511:                                             ; preds = %2499
  %2512 = and i64 %2508, 8589934560
  %2513 = sub i64 %2502, %2512
  br label %2514

2514:                                             ; preds = %2514, %2511
  %2515 = phi i64 [ 0, %2511 ], [ %2538, %2514 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2534, %2514 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2535, %2514 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2536, %2514 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2537, %2514 ]
  %2520 = sub i64 %2502, %2515
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2520
  %2522 = getelementptr inbounds i32, ptr %2521, i64 -7
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2521, i64 -15
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2521, i64 -23
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2521, i64 -31
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = mul <8 x i32> %2524, %2516
  %2535 = mul <8 x i32> %2527, %2517
  %2536 = mul <8 x i32> %2530, %2518
  %2537 = mul <8 x i32> %2533, %2519
  %2538 = add nuw i64 %2515, 32
  %2539 = icmp eq i64 %2538, %2512
  br i1 %2539, label %2540, label %2514, !llvm.loop !464

2540:                                             ; preds = %2514
  %2541 = mul <8 x i32> %2535, %2534
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2543)
  %2545 = icmp eq i64 %2508, %2512
  br i1 %2545, label %2558, label %2546

2546:                                             ; preds = %2499, %2540
  %2547 = phi i64 [ %2502, %2499 ], [ %2513, %2540 ]
  %2548 = phi i32 [ 1, %2499 ], [ %2544, %2540 ]
  br label %2549

2549:                                             ; preds = %2546, %2549
  %2550 = phi i64 [ %2555, %2549 ], [ %2547, %2546 ]
  %2551 = phi i32 [ %2554, %2549 ], [ %2548, %2546 ]
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = mul nsw i32 %2553, %2551
  %2555 = add nsw i64 %2550, -1
  %2556 = trunc i64 %2550 to i32
  %2557 = icmp sgt i32 %2556, 0
  br i1 %2557, label %2549, label %2558, !llvm.loop !465

2558:                                             ; preds = %2549, %2540
  %2559 = phi i32 [ %2544, %2540 ], [ %2554, %2549 ]
  %2560 = and i64 %2509, 4294967295
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2560
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2559
  %2564 = add nsw i32 %2563, %2503
  %2565 = icmp sgt i64 %2501, 2
  %2566 = add nsw i64 %2502, -1
  %2567 = add i32 %2500, 1
  br i1 %2565, label %2499, label %2568, !llvm.loop !466

2568:                                             ; preds = %2558, %2494
  %2569 = phi i32 [ %2498, %2494 ], [ %2564, %2558 ]
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds double, ptr %2, i64 %2570
  %2572 = load double, ptr %2571, align 8, !tbaa !18
  %2573 = getelementptr inbounds i8, ptr %2460, i64 %2570
  %2574 = load i8, ptr %2573, align 1, !tbaa !11
  %2575 = sitofp i8 %2574 to double
  %2576 = fmul fast double %2572, %2575
  %2577 = tail call fast double @llvm.fabs.f64(double %2576)
  %2578 = fadd fast double %2577, %2495
  store double %2578, ptr %2462, align 8, !tbaa !18
  %2579 = fadd fast double %2572, %2497
  %2580 = add nuw nsw i32 %2496, 1
  br i1 %2488, label %2581, label %2628

2581:                                             ; preds = %2568
  %2582 = load i32, ptr %4, align 4, !tbaa !5
  %2583 = load i32, ptr %12, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2582, %2584
  br i1 %2585, label %2605, label %2586

2586:                                             ; preds = %2581
  %2587 = icmp eq i32 %2582, %2584
  br i1 %2587, label %2588, label %2621

2588:                                             ; preds = %2586
  store i32 0, ptr %4, align 4, !tbaa !5
  %2589 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2589, ptr %6, align 4, !tbaa !5
  br i1 %2493, label %2628, label %2590

2590:                                             ; preds = %2588, %2615
  %2591 = phi i64 [ %2619, %2615 ], [ 1, %2588 ]
  %2592 = getelementptr inbounds i32, ptr %4, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %12, i64 %2591
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = add nsw i32 %2595, -1
  %2597 = icmp slt i32 %2593, %2596
  br i1 %2597, label %2598, label %2613

2598:                                             ; preds = %2590
  br i1 %2585, label %2605, label %2599

2599:                                             ; preds = %2598
  %2600 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = add nsw i32 %2603, %2601
  store i32 %2604, ptr %2602, align 4, !tbaa !5
  br label %2623

2605:                                             ; preds = %2581, %2598
  %2606 = phi i32 [ %2593, %2598 ], [ %2582, %2581 ]
  %2607 = phi ptr [ %2592, %2598 ], [ %4, %2581 ]
  %2608 = phi i64 [ %2591, %2598 ], [ 0, %2581 ]
  %2609 = add nsw i32 %2606, 1
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2608
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2608
  br label %2623

2613:                                             ; preds = %2590
  %2614 = icmp eq i32 %2593, %2596
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2613
  store i32 0, ptr %2592, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %8, i64 %2591
  %2617 = load i32, ptr %2616, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2591
  store i32 %2617, ptr %2618, align 4, !tbaa !5
  %2619 = add nuw nsw i64 %2591, 1
  %2620 = icmp eq i64 %2619, %2491
  br i1 %2620, label %2628, label %2590, !llvm.loop !467

2621:                                             ; preds = %2586, %2613
  %2622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2623:                                             ; preds = %2599, %2605
  %2624 = phi ptr [ %2612, %2605 ], [ %2592, %2599 ]
  %2625 = phi i32 [ %2611, %2605 ], [ 1, %2599 ]
  %2626 = load i32, ptr %2624, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2625
  store i32 %2627, ptr %2624, align 4, !tbaa !5
  br label %2628

2628:                                             ; preds = %2615, %2623, %2588, %2568
  %2629 = icmp eq i32 %2580, %5
  br i1 %2629, label %3070, label %2494, !llvm.loop !468

2630:                                             ; preds = %2477, %2768
  %2631 = phi double [ 0.000000e+00, %2477 ], [ %2716, %2768 ]
  %2632 = phi i32 [ 0, %2477 ], [ %2717, %2768 ]
  %2633 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2478, label %2634, label %2703

2634:                                             ; preds = %2630, %2693
  %2635 = phi i32 [ %2702, %2693 ], [ 0, %2630 ]
  %2636 = phi i64 [ %2644, %2693 ], [ %2482, %2630 ]
  %2637 = phi i64 [ %2701, %2693 ], [ %2481, %2630 ]
  %2638 = phi i32 [ %2699, %2693 ], [ %2633, %2630 ]
  %2639 = sub i32 %2480, %2635
  %2640 = tail call i32 @llvm.smin.i32(i32 %2639, i32 0)
  %2641 = sub i32 %2639, %2640
  %2642 = zext i32 %2641 to i64
  %2643 = add nuw nsw i64 %2642, 1
  %2644 = add nsw i64 %2636, -1
  %2645 = icmp ult i32 %2641, 31
  br i1 %2645, label %2681, label %2646

2646:                                             ; preds = %2634
  %2647 = and i64 %2643, 8589934560
  %2648 = sub i64 %2637, %2647
  br label %2649

2649:                                             ; preds = %2649, %2646
  %2650 = phi i64 [ 0, %2646 ], [ %2673, %2649 ]
  %2651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2669, %2649 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2670, %2649 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2671, %2649 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2672, %2649 ]
  %2655 = sub i64 %2637, %2650
  %2656 = getelementptr inbounds i32, ptr %11, i64 %2655
  %2657 = getelementptr inbounds i32, ptr %2656, i64 -7
  %2658 = load <8 x i32>, ptr %2657, align 4, !tbaa !5
  %2659 = shufflevector <8 x i32> %2658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2660 = getelementptr inbounds i32, ptr %2656, i64 -15
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !5
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2656, i64 -23
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !5
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2656, i64 -31
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = mul <8 x i32> %2659, %2651
  %2670 = mul <8 x i32> %2662, %2652
  %2671 = mul <8 x i32> %2665, %2653
  %2672 = mul <8 x i32> %2668, %2654
  %2673 = add nuw i64 %2650, 32
  %2674 = icmp eq i64 %2673, %2647
  br i1 %2674, label %2675, label %2649, !llvm.loop !469

2675:                                             ; preds = %2649
  %2676 = mul <8 x i32> %2670, %2669
  %2677 = mul <8 x i32> %2671, %2676
  %2678 = mul <8 x i32> %2672, %2677
  %2679 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2678)
  %2680 = icmp eq i64 %2643, %2647
  br i1 %2680, label %2693, label %2681

2681:                                             ; preds = %2634, %2675
  %2682 = phi i64 [ %2637, %2634 ], [ %2648, %2675 ]
  %2683 = phi i32 [ 1, %2634 ], [ %2679, %2675 ]
  br label %2684

2684:                                             ; preds = %2681, %2684
  %2685 = phi i64 [ %2690, %2684 ], [ %2682, %2681 ]
  %2686 = phi i32 [ %2689, %2684 ], [ %2683, %2681 ]
  %2687 = getelementptr inbounds i32, ptr %11, i64 %2685
  %2688 = load i32, ptr %2687, align 4, !tbaa !5
  %2689 = mul nsw i32 %2688, %2686
  %2690 = add nsw i64 %2685, -1
  %2691 = trunc i64 %2685 to i32
  %2692 = icmp sgt i32 %2691, 0
  br i1 %2692, label %2684, label %2693, !llvm.loop !470

2693:                                             ; preds = %2684, %2675
  %2694 = phi i32 [ %2679, %2675 ], [ %2689, %2684 ]
  %2695 = and i64 %2644, 4294967295
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2695
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = mul nsw i32 %2697, %2694
  %2699 = add nsw i32 %2698, %2638
  %2700 = icmp sgt i64 %2636, 2
  %2701 = add nsw i64 %2637, -1
  %2702 = add i32 %2635, 1
  br i1 %2700, label %2634, label %2703, !llvm.loop !471

2703:                                             ; preds = %2693, %2630
  %2704 = phi i32 [ %2633, %2630 ], [ %2699, %2693 ]
  %2705 = icmp slt i32 %2704, %5
  br i1 %2705, label %2708, label %2706

2706:                                             ; preds = %2703
  %2707 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

2708:                                             ; preds = %2703
  %2709 = sext i32 %2704 to i64
  %2710 = getelementptr inbounds i8, ptr %2460, i64 %2709
  %2711 = load i8, ptr %2710, align 1, !tbaa !11
  %2712 = sitofp i8 %2711 to double
  %2713 = icmp slt i8 %2711, 0
  %2714 = fneg fast double %2712
  %2715 = select fast i1 %2713, double %2714, double %2712
  %2716 = fadd fast double %2715, %2631
  store double %2716, ptr %2462, align 8, !tbaa !18
  %2717 = add nuw nsw i32 %2632, 1
  br i1 %2479, label %2718, label %2768

2718:                                             ; preds = %2708
  %2719 = load i32, ptr %4, align 4, !tbaa !5
  %2720 = load i32, ptr %12, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, -1
  %2722 = icmp slt i32 %2719, %2721
  br i1 %2722, label %2745, label %2723

2723:                                             ; preds = %2718
  %2724 = icmp eq i32 %2719, %2721
  br i1 %2724, label %2725, label %2761

2725:                                             ; preds = %2723
  store i32 0, ptr %4, align 4, !tbaa !5
  %2726 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2726, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2768, label %2727

2727:                                             ; preds = %2725, %2755
  %2728 = phi i64 [ %2759, %2755 ], [ 1, %2725 ]
  %2729 = getelementptr inbounds i32, ptr %4, i64 %2728
  %2730 = load i32, ptr %2729, align 4, !tbaa !5
  %2731 = getelementptr inbounds i32, ptr %12, i64 %2728
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = add nsw i32 %2732, -1
  %2734 = icmp slt i32 %2730, %2733
  br i1 %2734, label %2735, label %2753

2735:                                             ; preds = %2727
  br i1 %2722, label %2745, label %2736

2736:                                             ; preds = %2735
  %2737 = shl i64 %2728, 32
  %2738 = add i64 %2737, -4294967296
  %2739 = ashr exact i64 %2738, 32
  %2740 = getelementptr inbounds i32, ptr %7, i64 %2739
  %2741 = load i32, ptr %2740, align 4, !tbaa !5
  %2742 = getelementptr inbounds i32, ptr %6, i64 %2728
  %2743 = load i32, ptr %2742, align 4, !tbaa !5
  %2744 = add nsw i32 %2743, %2741
  store i32 %2744, ptr %2742, align 4, !tbaa !5
  br label %2763

2745:                                             ; preds = %2718, %2735
  %2746 = phi i32 [ %2730, %2735 ], [ %2719, %2718 ]
  %2747 = phi ptr [ %2729, %2735 ], [ %4, %2718 ]
  %2748 = phi i64 [ %2728, %2735 ], [ 0, %2718 ]
  %2749 = add nsw i32 %2746, 1
  store i32 %2749, ptr %2747, align 4, !tbaa !5
  %2750 = getelementptr inbounds i32, ptr %7, i64 %2748
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %6, i64 %2748
  br label %2763

2753:                                             ; preds = %2727
  %2754 = icmp eq i32 %2730, %2733
  br i1 %2754, label %2755, label %2761

2755:                                             ; preds = %2753
  store i32 0, ptr %2729, align 4, !tbaa !5
  %2756 = getelementptr inbounds i32, ptr %8, i64 %2728
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %6, i64 %2728
  store i32 %2757, ptr %2758, align 4, !tbaa !5
  %2759 = add nuw nsw i64 %2728, 1
  %2760 = icmp eq i64 %2759, %2482
  br i1 %2760, label %2768, label %2727, !llvm.loop !472

2761:                                             ; preds = %2723, %2753
  %2762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2763:                                             ; preds = %2736, %2745
  %2764 = phi ptr [ %2752, %2745 ], [ %2729, %2736 ]
  %2765 = phi i32 [ %2751, %2745 ], [ 1, %2736 ]
  %2766 = load i32, ptr %2764, align 4, !tbaa !5
  %2767 = add nsw i32 %2766, %2765
  store i32 %2767, ptr %2764, align 4, !tbaa !5
  br label %2768

2768:                                             ; preds = %2755, %2763, %2725, %2708
  %2769 = icmp eq i32 %2717, %5
  br i1 %2769, label %3070, label %2630, !llvm.loop !473

2770:                                             ; preds = %2470
  %2771 = getelementptr inbounds i32, ptr %3, i64 %19
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = icmp eq i32 %2772, 0
  %2774 = icmp sgt i32 %5, 0
  br i1 %2773, label %2784, label %2775

2775:                                             ; preds = %2770
  br i1 %2774, label %2776, label %3070

2776:                                             ; preds = %2775
  %2777 = icmp sgt i32 %13, 1
  %2778 = icmp sgt i32 %13, 0
  %2779 = add i32 %13, -2
  %2780 = zext i32 %2779 to i64
  %2781 = zext i32 %13 to i64
  %2782 = add nuw i32 %5, 1
  %2783 = icmp eq i32 %13, 1
  br label %2928

2784:                                             ; preds = %2770
  br i1 %2774, label %2785, label %3070

2785:                                             ; preds = %2784
  %2786 = icmp sgt i32 %13, 1
  %2787 = icmp sgt i32 %13, 0
  %2788 = add i32 %13, -2
  %2789 = zext i32 %2788 to i64
  %2790 = zext i32 %13 to i64
  %2791 = add nuw i32 %5, 1
  %2792 = icmp eq i32 %13, 1
  br label %2793

2793:                                             ; preds = %2785, %2926
  %2794 = phi double [ 0.000000e+00, %2785 ], [ %2876, %2926 ]
  %2795 = phi i32 [ 0, %2785 ], [ %2878, %2926 ]
  %2796 = phi double [ 0.000000e+00, %2785 ], [ %2877, %2926 ]
  %2797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2786, label %2798, label %2867

2798:                                             ; preds = %2793, %2857
  %2799 = phi i32 [ %2866, %2857 ], [ 0, %2793 ]
  %2800 = phi i64 [ %2808, %2857 ], [ %2790, %2793 ]
  %2801 = phi i64 [ %2865, %2857 ], [ %2789, %2793 ]
  %2802 = phi i32 [ %2863, %2857 ], [ %2797, %2793 ]
  %2803 = sub i32 %2788, %2799
  %2804 = tail call i32 @llvm.smin.i32(i32 %2803, i32 0)
  %2805 = sub i32 %2803, %2804
  %2806 = zext i32 %2805 to i64
  %2807 = add nuw nsw i64 %2806, 1
  %2808 = add nsw i64 %2800, -1
  %2809 = icmp ult i32 %2805, 31
  br i1 %2809, label %2845, label %2810

2810:                                             ; preds = %2798
  %2811 = and i64 %2807, 8589934560
  %2812 = sub i64 %2801, %2811
  br label %2813

2813:                                             ; preds = %2813, %2810
  %2814 = phi i64 [ 0, %2810 ], [ %2837, %2813 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2833, %2813 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2834, %2813 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2835, %2813 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2836, %2813 ]
  %2819 = sub i64 %2801, %2814
  %2820 = getelementptr inbounds i32, ptr %9, i64 %2819
  %2821 = getelementptr inbounds i32, ptr %2820, i64 -7
  %2822 = load <8 x i32>, ptr %2821, align 4, !tbaa !5
  %2823 = shufflevector <8 x i32> %2822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2824 = getelementptr inbounds i32, ptr %2820, i64 -15
  %2825 = load <8 x i32>, ptr %2824, align 4, !tbaa !5
  %2826 = shufflevector <8 x i32> %2825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2827 = getelementptr inbounds i32, ptr %2820, i64 -23
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2820, i64 -31
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = mul <8 x i32> %2823, %2815
  %2834 = mul <8 x i32> %2826, %2816
  %2835 = mul <8 x i32> %2829, %2817
  %2836 = mul <8 x i32> %2832, %2818
  %2837 = add nuw i64 %2814, 32
  %2838 = icmp eq i64 %2837, %2811
  br i1 %2838, label %2839, label %2813, !llvm.loop !474

2839:                                             ; preds = %2813
  %2840 = mul <8 x i32> %2834, %2833
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2842)
  %2844 = icmp eq i64 %2807, %2811
  br i1 %2844, label %2857, label %2845

2845:                                             ; preds = %2798, %2839
  %2846 = phi i64 [ %2801, %2798 ], [ %2812, %2839 ]
  %2847 = phi i32 [ 1, %2798 ], [ %2843, %2839 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, ptr %9, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nsw i64 %2849, -1
  %2855 = trunc i64 %2849 to i32
  %2856 = icmp sgt i32 %2855, 0
  br i1 %2856, label %2848, label %2857, !llvm.loop !475

2857:                                             ; preds = %2848, %2839
  %2858 = phi i32 [ %2843, %2839 ], [ %2853, %2848 ]
  %2859 = and i64 %2808, 4294967295
  %2860 = getelementptr inbounds i32, ptr %6, i64 %2859
  %2861 = load i32, ptr %2860, align 4, !tbaa !5
  %2862 = mul nsw i32 %2861, %2858
  %2863 = add nsw i32 %2862, %2802
  %2864 = icmp sgt i64 %2800, 2
  %2865 = add nsw i64 %2801, -1
  %2866 = add i32 %2799, 1
  br i1 %2864, label %2798, label %2867, !llvm.loop !476

2867:                                             ; preds = %2857, %2793
  %2868 = phi i32 [ %2797, %2793 ], [ %2863, %2857 ]
  %2869 = sext i32 %2868 to i64
  %2870 = getelementptr inbounds i8, ptr %2460, i64 %2869
  %2871 = load i8, ptr %2870, align 1, !tbaa !11
  %2872 = sitofp i8 %2871 to double
  %2873 = icmp slt i8 %2871, 0
  %2874 = fneg fast double %2872
  %2875 = select fast i1 %2873, double %2874, double %2872
  %2876 = fadd fast double %2875, %2794
  store double %2876, ptr %2462, align 8, !tbaa !18
  %2877 = fadd fast double %2796, 1.000000e+00
  %2878 = add nuw nsw i32 %2795, 1
  br i1 %2787, label %2879, label %2926

2879:                                             ; preds = %2867
  %2880 = load i32, ptr %4, align 4, !tbaa !5
  %2881 = load i32, ptr %12, align 4, !tbaa !5
  %2882 = add nsw i32 %2881, -1
  %2883 = icmp slt i32 %2880, %2882
  br i1 %2883, label %2903, label %2884

2884:                                             ; preds = %2879
  %2885 = icmp eq i32 %2880, %2882
  br i1 %2885, label %2886, label %2919

2886:                                             ; preds = %2884
  store i32 0, ptr %4, align 4, !tbaa !5
  %2887 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2887, ptr %6, align 4, !tbaa !5
  br i1 %2792, label %2926, label %2888

2888:                                             ; preds = %2886, %2913
  %2889 = phi i64 [ %2917, %2913 ], [ 1, %2886 ]
  %2890 = getelementptr inbounds i32, ptr %4, i64 %2889
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = getelementptr inbounds i32, ptr %12, i64 %2889
  %2893 = load i32, ptr %2892, align 4, !tbaa !5
  %2894 = add nsw i32 %2893, -1
  %2895 = icmp slt i32 %2891, %2894
  br i1 %2895, label %2896, label %2911

2896:                                             ; preds = %2888
  br i1 %2883, label %2903, label %2897

2897:                                             ; preds = %2896
  %2898 = getelementptr inbounds i32, ptr %7, i64 %2889
  %2899 = load i32, ptr %2898, align 4, !tbaa !5
  %2900 = getelementptr inbounds i32, ptr %6, i64 %2889
  %2901 = load i32, ptr %2900, align 4, !tbaa !5
  %2902 = add nsw i32 %2901, %2899
  store i32 %2902, ptr %2900, align 4, !tbaa !5
  br label %2921

2903:                                             ; preds = %2879, %2896
  %2904 = phi i32 [ %2891, %2896 ], [ %2880, %2879 ]
  %2905 = phi ptr [ %2890, %2896 ], [ %4, %2879 ]
  %2906 = phi i64 [ %2889, %2896 ], [ 0, %2879 ]
  %2907 = add nsw i32 %2904, 1
  store i32 %2907, ptr %2905, align 4, !tbaa !5
  %2908 = getelementptr inbounds i32, ptr %7, i64 %2906
  %2909 = load i32, ptr %2908, align 4, !tbaa !5
  %2910 = getelementptr inbounds i32, ptr %6, i64 %2906
  br label %2921

2911:                                             ; preds = %2888
  %2912 = icmp eq i32 %2891, %2894
  br i1 %2912, label %2913, label %2919

2913:                                             ; preds = %2911
  store i32 0, ptr %2890, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %8, i64 %2889
  %2915 = load i32, ptr %2914, align 4, !tbaa !5
  %2916 = getelementptr inbounds i32, ptr %6, i64 %2889
  store i32 %2915, ptr %2916, align 4, !tbaa !5
  %2917 = add nuw nsw i64 %2889, 1
  %2918 = icmp eq i64 %2917, %2790
  br i1 %2918, label %2926, label %2888, !llvm.loop !477

2919:                                             ; preds = %2884, %2911
  %2920 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

2921:                                             ; preds = %2897, %2903
  %2922 = phi ptr [ %2910, %2903 ], [ %2890, %2897 ]
  %2923 = phi i32 [ %2909, %2903 ], [ 1, %2897 ]
  %2924 = load i32, ptr %2922, align 4, !tbaa !5
  %2925 = add nsw i32 %2924, %2923
  store i32 %2925, ptr %2922, align 4, !tbaa !5
  br label %2926

2926:                                             ; preds = %2913, %2921, %2886, %2867
  %2927 = icmp eq i32 %2878, %5
  br i1 %2927, label %3070, label %2793, !llvm.loop !478

2928:                                             ; preds = %2776, %3066
  %2929 = phi double [ 0.000000e+00, %2776 ], [ %3014, %3066 ]
  %2930 = phi i32 [ 0, %2776 ], [ %3015, %3066 ]
  %2931 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2777, label %2932, label %3001

2932:                                             ; preds = %2928, %2991
  %2933 = phi i32 [ %3000, %2991 ], [ 0, %2928 ]
  %2934 = phi i64 [ %2942, %2991 ], [ %2781, %2928 ]
  %2935 = phi i64 [ %2999, %2991 ], [ %2780, %2928 ]
  %2936 = phi i32 [ %2997, %2991 ], [ %2931, %2928 ]
  %2937 = sub i32 %2779, %2933
  %2938 = tail call i32 @llvm.smin.i32(i32 %2937, i32 0)
  %2939 = sub i32 %2937, %2938
  %2940 = zext i32 %2939 to i64
  %2941 = add nuw nsw i64 %2940, 1
  %2942 = add nsw i64 %2934, -1
  %2943 = icmp ult i32 %2939, 31
  br i1 %2943, label %2979, label %2944

2944:                                             ; preds = %2932
  %2945 = and i64 %2941, 8589934560
  %2946 = sub i64 %2935, %2945
  br label %2947

2947:                                             ; preds = %2947, %2944
  %2948 = phi i64 [ 0, %2944 ], [ %2971, %2947 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2944 ], [ %2967, %2947 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2944 ], [ %2968, %2947 ]
  %2951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2944 ], [ %2969, %2947 ]
  %2952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2944 ], [ %2970, %2947 ]
  %2953 = sub i64 %2935, %2948
  %2954 = getelementptr inbounds i32, ptr %11, i64 %2953
  %2955 = getelementptr inbounds i32, ptr %2954, i64 -7
  %2956 = load <8 x i32>, ptr %2955, align 4, !tbaa !5
  %2957 = shufflevector <8 x i32> %2956, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2958 = getelementptr inbounds i32, ptr %2954, i64 -15
  %2959 = load <8 x i32>, ptr %2958, align 4, !tbaa !5
  %2960 = shufflevector <8 x i32> %2959, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2961 = getelementptr inbounds i32, ptr %2954, i64 -23
  %2962 = load <8 x i32>, ptr %2961, align 4, !tbaa !5
  %2963 = shufflevector <8 x i32> %2962, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2964 = getelementptr inbounds i32, ptr %2954, i64 -31
  %2965 = load <8 x i32>, ptr %2964, align 4, !tbaa !5
  %2966 = shufflevector <8 x i32> %2965, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2967 = mul <8 x i32> %2957, %2949
  %2968 = mul <8 x i32> %2960, %2950
  %2969 = mul <8 x i32> %2963, %2951
  %2970 = mul <8 x i32> %2966, %2952
  %2971 = add nuw i64 %2948, 32
  %2972 = icmp eq i64 %2971, %2945
  br i1 %2972, label %2973, label %2947, !llvm.loop !479

2973:                                             ; preds = %2947
  %2974 = mul <8 x i32> %2968, %2967
  %2975 = mul <8 x i32> %2969, %2974
  %2976 = mul <8 x i32> %2970, %2975
  %2977 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2976)
  %2978 = icmp eq i64 %2941, %2945
  br i1 %2978, label %2991, label %2979

2979:                                             ; preds = %2932, %2973
  %2980 = phi i64 [ %2935, %2932 ], [ %2946, %2973 ]
  %2981 = phi i32 [ 1, %2932 ], [ %2977, %2973 ]
  br label %2982

2982:                                             ; preds = %2979, %2982
  %2983 = phi i64 [ %2988, %2982 ], [ %2980, %2979 ]
  %2984 = phi i32 [ %2987, %2982 ], [ %2981, %2979 ]
  %2985 = getelementptr inbounds i32, ptr %11, i64 %2983
  %2986 = load i32, ptr %2985, align 4, !tbaa !5
  %2987 = mul nsw i32 %2986, %2984
  %2988 = add nsw i64 %2983, -1
  %2989 = trunc i64 %2983 to i32
  %2990 = icmp sgt i32 %2989, 0
  br i1 %2990, label %2982, label %2991, !llvm.loop !480

2991:                                             ; preds = %2982, %2973
  %2992 = phi i32 [ %2977, %2973 ], [ %2987, %2982 ]
  %2993 = and i64 %2942, 4294967295
  %2994 = getelementptr inbounds i32, ptr %6, i64 %2993
  %2995 = load i32, ptr %2994, align 4, !tbaa !5
  %2996 = mul nsw i32 %2995, %2992
  %2997 = add nsw i32 %2996, %2936
  %2998 = icmp sgt i64 %2934, 2
  %2999 = add nsw i64 %2935, -1
  %3000 = add i32 %2933, 1
  br i1 %2998, label %2932, label %3001, !llvm.loop !481

3001:                                             ; preds = %2991, %2928
  %3002 = phi i32 [ %2931, %2928 ], [ %2997, %2991 ]
  %3003 = icmp slt i32 %3002, %5
  br i1 %3003, label %3006, label %3004

3004:                                             ; preds = %3001
  %3005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3075

3006:                                             ; preds = %3001
  %3007 = sext i32 %3002 to i64
  %3008 = getelementptr inbounds i8, ptr %2460, i64 %3007
  %3009 = load i8, ptr %3008, align 1, !tbaa !11
  %3010 = sitofp i8 %3009 to double
  %3011 = icmp slt i8 %3009, 0
  %3012 = fneg fast double %3010
  %3013 = select fast i1 %3011, double %3012, double %3010
  %3014 = fadd fast double %3013, %2929
  store double %3014, ptr %2462, align 8, !tbaa !18
  %3015 = add nuw nsw i32 %2930, 1
  br i1 %2778, label %3016, label %3066

3016:                                             ; preds = %3006
  %3017 = load i32, ptr %4, align 4, !tbaa !5
  %3018 = load i32, ptr %12, align 4, !tbaa !5
  %3019 = add nsw i32 %3018, -1
  %3020 = icmp slt i32 %3017, %3019
  br i1 %3020, label %3043, label %3021

3021:                                             ; preds = %3016
  %3022 = icmp eq i32 %3017, %3019
  br i1 %3022, label %3023, label %3059

3023:                                             ; preds = %3021
  store i32 0, ptr %4, align 4, !tbaa !5
  %3024 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3024, ptr %6, align 4, !tbaa !5
  br i1 %2783, label %3066, label %3025

3025:                                             ; preds = %3023, %3053
  %3026 = phi i64 [ %3057, %3053 ], [ 1, %3023 ]
  %3027 = getelementptr inbounds i32, ptr %4, i64 %3026
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = getelementptr inbounds i32, ptr %12, i64 %3026
  %3030 = load i32, ptr %3029, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, -1
  %3032 = icmp slt i32 %3028, %3031
  br i1 %3032, label %3033, label %3051

3033:                                             ; preds = %3025
  br i1 %3020, label %3043, label %3034

3034:                                             ; preds = %3033
  %3035 = shl i64 %3026, 32
  %3036 = add i64 %3035, -4294967296
  %3037 = ashr exact i64 %3036, 32
  %3038 = getelementptr inbounds i32, ptr %7, i64 %3037
  %3039 = load i32, ptr %3038, align 4, !tbaa !5
  %3040 = getelementptr inbounds i32, ptr %6, i64 %3026
  %3041 = load i32, ptr %3040, align 4, !tbaa !5
  %3042 = add nsw i32 %3041, %3039
  store i32 %3042, ptr %3040, align 4, !tbaa !5
  br label %3061

3043:                                             ; preds = %3016, %3033
  %3044 = phi i32 [ %3028, %3033 ], [ %3017, %3016 ]
  %3045 = phi ptr [ %3027, %3033 ], [ %4, %3016 ]
  %3046 = phi i64 [ %3026, %3033 ], [ 0, %3016 ]
  %3047 = add nsw i32 %3044, 1
  store i32 %3047, ptr %3045, align 4, !tbaa !5
  %3048 = getelementptr inbounds i32, ptr %7, i64 %3046
  %3049 = load i32, ptr %3048, align 4, !tbaa !5
  %3050 = getelementptr inbounds i32, ptr %6, i64 %3046
  br label %3061

3051:                                             ; preds = %3025
  %3052 = icmp eq i32 %3028, %3031
  br i1 %3052, label %3053, label %3059

3053:                                             ; preds = %3051
  store i32 0, ptr %3027, align 4, !tbaa !5
  %3054 = getelementptr inbounds i32, ptr %8, i64 %3026
  %3055 = load i32, ptr %3054, align 4, !tbaa !5
  %3056 = getelementptr inbounds i32, ptr %6, i64 %3026
  store i32 %3055, ptr %3056, align 4, !tbaa !5
  %3057 = add nuw nsw i64 %3026, 1
  %3058 = icmp eq i64 %3057, %2781
  br i1 %3058, label %3066, label %3025, !llvm.loop !482

3059:                                             ; preds = %3021, %3051
  %3060 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3075

3061:                                             ; preds = %3034, %3043
  %3062 = phi ptr [ %3050, %3043 ], [ %3027, %3034 ]
  %3063 = phi i32 [ %3049, %3043 ], [ 1, %3034 ]
  %3064 = load i32, ptr %3062, align 4, !tbaa !5
  %3065 = add nsw i32 %3064, %3063
  store i32 %3065, ptr %3062, align 4, !tbaa !5
  br label %3066

3066:                                             ; preds = %3053, %3061, %3023, %3006
  %3067 = icmp eq i32 %3015, %5
  br i1 %3067, label %3070, label %2928, !llvm.loop !483

3068:                                             ; preds = %2470
  %3069 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3070

3070:                                             ; preds = %3066, %2926, %2768, %2628, %2454, %2314, %2156, %2014, %1838, %1698, %1540, %1400, %1226, %1088, %932, %790, %616, %480, %326, %190, %2775, %2784, %2476, %2485, %2163, %2172, %1860, %1869, %1547, %1556, %1248, %1257, %939, %948, %636, %645, %333, %342, %36, %45, %2464, %3068, %1848, %2456, %1236, %1840, %626, %1228, %28, %618, %18
  %3071 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %618 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1228 ], [ 0.000000e+00, %626 ], [ 0.000000e+00, %1840 ], [ 0.000000e+00, %1236 ], [ 0.000000e+00, %2456 ], [ 0.000000e+00, %1848 ], [ 0.000000e+00, %3068 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %342 ], [ 0.000000e+00, %333 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %636 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %939 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %1248 ], [ 0.000000e+00, %1556 ], [ 0.000000e+00, %1547 ], [ 0.000000e+00, %1869 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %2172 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %2784 ], [ 0.000000e+00, %2775 ], [ %141, %190 ], [ 0.000000e+00, %326 ], [ %431, %480 ], [ 0.000000e+00, %616 ], [ %741, %790 ], [ 0.000000e+00, %932 ], [ %1039, %1088 ], [ 0.000000e+00, %1226 ], [ %1351, %1400 ], [ 0.000000e+00, %1540 ], [ %1649, %1698 ], [ 0.000000e+00, %1838 ], [ %1965, %2014 ], [ 0.000000e+00, %2156 ], [ %2265, %2314 ], [ 0.000000e+00, %2454 ], [ %2579, %2628 ], [ 0.000000e+00, %2768 ], [ %2877, %2926 ], [ 0.000000e+00, %3066 ]
  %3072 = phi i32 [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1228 ], [ 1, %626 ], [ 1, %1840 ], [ 1, %1236 ], [ 1, %2456 ], [ 1, %1848 ], [ 1, %3068 ], [ 1, %2464 ], [ 1, %45 ], [ 1, %36 ], [ 1, %342 ], [ 1, %333 ], [ 1, %645 ], [ 1, %636 ], [ 1, %948 ], [ 1, %939 ], [ 1, %1257 ], [ 1, %1248 ], [ 1, %1556 ], [ 1, %1547 ], [ 1, %1869 ], [ 1, %1860 ], [ 1, %2172 ], [ 1, %2163 ], [ 1, %2485 ], [ 1, %2476 ], [ 1, %2784 ], [ 1, %2775 ], [ %52, %190 ], [ %43, %326 ], [ %349, %480 ], [ %340, %616 ], [ %652, %790 ], [ %643, %932 ], [ %955, %1088 ], [ %946, %1226 ], [ %1264, %1400 ], [ %1255, %1540 ], [ %1563, %1698 ], [ %1554, %1838 ], [ %1876, %2014 ], [ %1867, %2156 ], [ %2179, %2314 ], [ %2170, %2454 ], [ %2492, %2628 ], [ %2483, %2768 ], [ %2791, %2926 ], [ %2782, %3066 ]
  %3073 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3072, ptr noundef nonnull @.str.5) #3
  %3074 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3071, ptr noundef nonnull @.str.6) #3
  br label %3075

3075:                                             ; preds = %2621, %2706, %2761, %2919, %3004, %3059, %2007, %2092, %2149, %2307, %2392, %2447, %1393, %1478, %1533, %1691, %1776, %1831, %783, %867, %925, %1081, %1165, %1219, %183, %267, %319, %473, %557, %609, %3070
  %3076 = phi i32 [ 0, %3070 ], [ -1, %609 ], [ -1, %557 ], [ -1, %473 ], [ -1, %319 ], [ -1, %267 ], [ -1, %183 ], [ -1, %1219 ], [ -1, %1165 ], [ -1, %1081 ], [ -1, %925 ], [ -1, %867 ], [ -1, %783 ], [ -1, %1831 ], [ -1, %1776 ], [ -1, %1691 ], [ -1, %1533 ], [ -1, %1478 ], [ -1, %1393 ], [ -1, %2447 ], [ -1, %2392 ], [ -1, %2307 ], [ -1, %2149 ], [ -1, %2092 ], [ -1, %2007 ], [ -1, %3059 ], [ -1, %3004 ], [ -1, %2919 ], [ -1, %2761 ], [ -1, %2706 ], [ -1, %2621 ]
  ret i32 %3076
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3079 [
    i32 101, label %22
    i32 102, label %625
    i32 107, label %1235
    i32 108, label %1847
    i32 109, label %2463
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !78
  %30 = trunc i16 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %3079

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %3079

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %3079

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !484

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !485

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !486

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i16, ptr %24, i64 %130
  %134 = load i16, ptr %133, align 2, !tbaa !78
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i16 %134, 255
  %138 = uitofp i16 %137 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %136
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !487

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %3079, label %55, !llvm.loop !488

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !489

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !490

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !491

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds i16, ptr %24, i64 %273
  %275 = load i16, ptr %274, align 2, !tbaa !78
  %276 = trunc i16 %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !492

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %3079, label %194, !llvm.loop !493

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %3079

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %3079

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !494

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !495

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !496

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i16, ptr %24, i64 %429
  %431 = load i16, ptr %430, align 2, !tbaa !78
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = trunc i16 %431 to i8
  %434 = add i8 %432, %433
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !497

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %3079, label %354, !llvm.loop !498

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !499

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !500

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !501

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds i16, ptr %24, i64 %564
  %566 = load i16, ptr %565, align 2, !tbaa !78
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = trunc i16 %566 to i8
  %569 = add i8 %567, %568
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !502

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %3079, label %486, !llvm.loop !503

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3079

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %635

631:                                              ; preds = %625
  %632 = load i16, ptr %627, align 2, !tbaa !78
  %633 = tail call i16 @llvm.abs.i16(i16 %632, i1 false)
  %634 = zext i16 %633 to i32
  store i32 %634, ptr %629, align 4, !tbaa !5
  br label %3079

635:                                              ; preds = %625
  switch i32 %1, label %1233 [
    i32 1, label %636
    i32 0, label %939
  ]

636:                                              ; preds = %635
  %637 = getelementptr inbounds i32, ptr %3, i64 %19
  %638 = load i32, ptr %637, align 4, !tbaa !5
  %639 = icmp eq i32 %638, 0
  %640 = icmp sgt i32 %5, 0
  br i1 %639, label %650, label %641

641:                                              ; preds = %636
  br i1 %640, label %642, label %3079

642:                                              ; preds = %641
  %643 = icmp sgt i32 %13, 1
  %644 = icmp sgt i32 %13, 0
  %645 = add i32 %13, -2
  %646 = zext i32 %645 to i64
  %647 = zext i32 %13 to i64
  %648 = add nuw i32 %5, 1
  %649 = icmp eq i32 %13, 1
  br label %797

650:                                              ; preds = %636
  br i1 %640, label %651, label %3079

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %659

659:                                              ; preds = %651, %795
  %660 = phi i32 [ 0, %651 ], [ %747, %795 ]
  %661 = phi double [ 0.000000e+00, %651 ], [ %746, %795 ]
  %662 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %663, label %732

663:                                              ; preds = %659, %722
  %664 = phi i32 [ %731, %722 ], [ 0, %659 ]
  %665 = phi i64 [ %673, %722 ], [ %656, %659 ]
  %666 = phi i64 [ %730, %722 ], [ %655, %659 ]
  %667 = phi i32 [ %728, %722 ], [ %662, %659 ]
  %668 = sub i32 %654, %664
  %669 = tail call i32 @llvm.smin.i32(i32 %668, i32 0)
  %670 = sub i32 %668, %669
  %671 = zext i32 %670 to i64
  %672 = add nuw nsw i64 %671, 1
  %673 = add nsw i64 %665, -1
  %674 = icmp ult i32 %670, 31
  br i1 %674, label %710, label %675

675:                                              ; preds = %663
  %676 = and i64 %672, 8589934560
  %677 = sub i64 %666, %676
  br label %678

678:                                              ; preds = %678, %675
  %679 = phi i64 [ 0, %675 ], [ %702, %678 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %698, %678 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %699, %678 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %700, %678 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %701, %678 ]
  %684 = sub i64 %666, %679
  %685 = getelementptr inbounds i32, ptr %9, i64 %684
  %686 = getelementptr inbounds i32, ptr %685, i64 -7
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %685, i64 -15
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %685, i64 -23
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %685, i64 -31
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = mul <8 x i32> %688, %680
  %699 = mul <8 x i32> %691, %681
  %700 = mul <8 x i32> %694, %682
  %701 = mul <8 x i32> %697, %683
  %702 = add nuw i64 %679, 32
  %703 = icmp eq i64 %702, %676
  br i1 %703, label %704, label %678, !llvm.loop !504

704:                                              ; preds = %678
  %705 = mul <8 x i32> %699, %698
  %706 = mul <8 x i32> %700, %705
  %707 = mul <8 x i32> %701, %706
  %708 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %707)
  %709 = icmp eq i64 %672, %676
  br i1 %709, label %722, label %710

710:                                              ; preds = %663, %704
  %711 = phi i64 [ %666, %663 ], [ %677, %704 ]
  %712 = phi i32 [ 1, %663 ], [ %708, %704 ]
  br label %713

713:                                              ; preds = %710, %713
  %714 = phi i64 [ %719, %713 ], [ %711, %710 ]
  %715 = phi i32 [ %718, %713 ], [ %712, %710 ]
  %716 = getelementptr inbounds i32, ptr %9, i64 %714
  %717 = load i32, ptr %716, align 4, !tbaa !5
  %718 = mul nsw i32 %717, %715
  %719 = add nsw i64 %714, -1
  %720 = trunc i64 %714 to i32
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %713, label %722, !llvm.loop !505

722:                                              ; preds = %713, %704
  %723 = phi i32 [ %708, %704 ], [ %718, %713 ]
  %724 = and i64 %673, 4294967295
  %725 = getelementptr inbounds i32, ptr %6, i64 %724
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %723
  %728 = add nsw i32 %727, %667
  %729 = icmp sgt i64 %665, 2
  %730 = add nsw i64 %666, -1
  %731 = add i32 %664, 1
  br i1 %729, label %663, label %732, !llvm.loop !506

732:                                              ; preds = %722, %659
  %733 = phi i32 [ %662, %659 ], [ %728, %722 ]
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds double, ptr %2, i64 %734
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = getelementptr inbounds i16, ptr %627, i64 %734
  %738 = load i16, ptr %737, align 2, !tbaa !78
  %739 = load i32, ptr %629, align 4, !tbaa !5
  %740 = sitofp i32 %739 to double
  %741 = sitofp i16 %738 to double
  %742 = fmul fast double %736, %741
  %743 = tail call fast double @llvm.fabs.f64(double %742)
  %744 = fadd fast double %743, %740
  %745 = fptosi double %744 to i32
  store i32 %745, ptr %629, align 4, !tbaa !5
  %746 = fadd fast double %736, %661
  %747 = add nuw nsw i32 %660, 1
  br i1 %653, label %748, label %795

748:                                              ; preds = %732
  %749 = load i32, ptr %4, align 4, !tbaa !5
  %750 = load i32, ptr %12, align 4, !tbaa !5
  %751 = add nsw i32 %750, -1
  %752 = icmp slt i32 %749, %751
  br i1 %752, label %772, label %753

753:                                              ; preds = %748
  %754 = icmp eq i32 %749, %751
  br i1 %754, label %755, label %788

755:                                              ; preds = %753
  store i32 0, ptr %4, align 4, !tbaa !5
  %756 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %756, ptr %6, align 4, !tbaa !5
  br i1 %658, label %795, label %757

757:                                              ; preds = %755, %782
  %758 = phi i64 [ %786, %782 ], [ 1, %755 ]
  %759 = getelementptr inbounds i32, ptr %4, i64 %758
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %12, i64 %758
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, -1
  %764 = icmp slt i32 %760, %763
  br i1 %764, label %765, label %780

765:                                              ; preds = %757
  br i1 %752, label %772, label %766

766:                                              ; preds = %765
  %767 = getelementptr inbounds i32, ptr %7, i64 %758
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %6, i64 %758
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = add nsw i32 %770, %768
  store i32 %771, ptr %769, align 4, !tbaa !5
  br label %790

772:                                              ; preds = %748, %765
  %773 = phi i32 [ %760, %765 ], [ %749, %748 ]
  %774 = phi ptr [ %759, %765 ], [ %4, %748 ]
  %775 = phi i64 [ %758, %765 ], [ 0, %748 ]
  %776 = add nsw i32 %773, 1
  store i32 %776, ptr %774, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %7, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %6, i64 %775
  br label %790

780:                                              ; preds = %757
  %781 = icmp eq i32 %760, %763
  br i1 %781, label %782, label %788

782:                                              ; preds = %780
  store i32 0, ptr %759, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %8, i64 %758
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %6, i64 %758
  store i32 %784, ptr %785, align 4, !tbaa !5
  %786 = add nuw nsw i64 %758, 1
  %787 = icmp eq i64 %786, %656
  br i1 %787, label %795, label %757, !llvm.loop !507

788:                                              ; preds = %753, %780
  %789 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

790:                                              ; preds = %766, %772
  %791 = phi ptr [ %779, %772 ], [ %759, %766 ]
  %792 = phi i32 [ %778, %772 ], [ 1, %766 ]
  %793 = load i32, ptr %791, align 4, !tbaa !5
  %794 = add nsw i32 %793, %792
  store i32 %794, ptr %791, align 4, !tbaa !5
  br label %795

795:                                              ; preds = %782, %790, %755, %732
  %796 = icmp eq i32 %747, %5
  br i1 %796, label %3079, label %659, !llvm.loop !508

797:                                              ; preds = %642, %937
  %798 = phi i32 [ 0, %642 ], [ %886, %937 ]
  %799 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %643, label %800, label %869

800:                                              ; preds = %797, %859
  %801 = phi i32 [ %868, %859 ], [ 0, %797 ]
  %802 = phi i64 [ %810, %859 ], [ %647, %797 ]
  %803 = phi i64 [ %867, %859 ], [ %646, %797 ]
  %804 = phi i32 [ %865, %859 ], [ %799, %797 ]
  %805 = sub i32 %645, %801
  %806 = tail call i32 @llvm.smin.i32(i32 %805, i32 0)
  %807 = sub i32 %805, %806
  %808 = zext i32 %807 to i64
  %809 = add nuw nsw i64 %808, 1
  %810 = add nsw i64 %802, -1
  %811 = icmp ult i32 %807, 31
  br i1 %811, label %847, label %812

812:                                              ; preds = %800
  %813 = and i64 %809, 8589934560
  %814 = sub i64 %803, %813
  br label %815

815:                                              ; preds = %815, %812
  %816 = phi i64 [ 0, %812 ], [ %839, %815 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %835, %815 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %836, %815 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %837, %815 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %838, %815 ]
  %821 = sub i64 %803, %816
  %822 = getelementptr inbounds i32, ptr %11, i64 %821
  %823 = getelementptr inbounds i32, ptr %822, i64 -7
  %824 = load <8 x i32>, ptr %823, align 4, !tbaa !5
  %825 = shufflevector <8 x i32> %824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %826 = getelementptr inbounds i32, ptr %822, i64 -15
  %827 = load <8 x i32>, ptr %826, align 4, !tbaa !5
  %828 = shufflevector <8 x i32> %827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %829 = getelementptr inbounds i32, ptr %822, i64 -23
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %822, i64 -31
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !5
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = mul <8 x i32> %825, %817
  %836 = mul <8 x i32> %828, %818
  %837 = mul <8 x i32> %831, %819
  %838 = mul <8 x i32> %834, %820
  %839 = add nuw i64 %816, 32
  %840 = icmp eq i64 %839, %813
  br i1 %840, label %841, label %815, !llvm.loop !509

841:                                              ; preds = %815
  %842 = mul <8 x i32> %836, %835
  %843 = mul <8 x i32> %837, %842
  %844 = mul <8 x i32> %838, %843
  %845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %844)
  %846 = icmp eq i64 %809, %813
  br i1 %846, label %859, label %847

847:                                              ; preds = %800, %841
  %848 = phi i64 [ %803, %800 ], [ %814, %841 ]
  %849 = phi i32 [ 1, %800 ], [ %845, %841 ]
  br label %850

850:                                              ; preds = %847, %850
  %851 = phi i64 [ %856, %850 ], [ %848, %847 ]
  %852 = phi i32 [ %855, %850 ], [ %849, %847 ]
  %853 = getelementptr inbounds i32, ptr %11, i64 %851
  %854 = load i32, ptr %853, align 4, !tbaa !5
  %855 = mul nsw i32 %854, %852
  %856 = add nsw i64 %851, -1
  %857 = trunc i64 %851 to i32
  %858 = icmp sgt i32 %857, 0
  br i1 %858, label %850, label %859, !llvm.loop !510

859:                                              ; preds = %850, %841
  %860 = phi i32 [ %845, %841 ], [ %855, %850 ]
  %861 = and i64 %810, 4294967295
  %862 = getelementptr inbounds i32, ptr %6, i64 %861
  %863 = load i32, ptr %862, align 4, !tbaa !5
  %864 = mul nsw i32 %863, %860
  %865 = add nsw i32 %864, %804
  %866 = icmp sgt i64 %802, 2
  %867 = add nsw i64 %803, -1
  %868 = add i32 %801, 1
  br i1 %866, label %800, label %869, !llvm.loop !511

869:                                              ; preds = %859, %797
  %870 = phi i32 [ %799, %797 ], [ %865, %859 ]
  %871 = icmp slt i32 %870, %5
  br i1 %871, label %874, label %872

872:                                              ; preds = %869
  %873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

874:                                              ; preds = %869
  %875 = sext i32 %870 to i64
  %876 = getelementptr inbounds i16, ptr %627, i64 %875
  %877 = load i16, ptr %876, align 2, !tbaa !78
  %878 = load i32, ptr %629, align 4, !tbaa !5
  %879 = sitofp i32 %878 to double
  %880 = sitofp i16 %877 to double
  %881 = icmp slt i16 %877, 0
  %882 = fneg fast double %880
  %883 = select fast i1 %881, double %882, double %880
  %884 = fadd fast double %883, %879
  %885 = fptosi double %884 to i32
  store i32 %885, ptr %629, align 4, !tbaa !5
  %886 = add nuw nsw i32 %798, 1
  br i1 %644, label %887, label %937

887:                                              ; preds = %874
  %888 = load i32, ptr %4, align 4, !tbaa !5
  %889 = load i32, ptr %12, align 4, !tbaa !5
  %890 = add nsw i32 %889, -1
  %891 = icmp slt i32 %888, %890
  br i1 %891, label %914, label %892

892:                                              ; preds = %887
  %893 = icmp eq i32 %888, %890
  br i1 %893, label %894, label %930

894:                                              ; preds = %892
  store i32 0, ptr %4, align 4, !tbaa !5
  %895 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %895, ptr %6, align 4, !tbaa !5
  br i1 %649, label %937, label %896

896:                                              ; preds = %894, %924
  %897 = phi i64 [ %928, %924 ], [ 1, %894 ]
  %898 = getelementptr inbounds i32, ptr %4, i64 %897
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = getelementptr inbounds i32, ptr %12, i64 %897
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = add nsw i32 %901, -1
  %903 = icmp slt i32 %899, %902
  br i1 %903, label %904, label %922

904:                                              ; preds = %896
  br i1 %891, label %914, label %905

905:                                              ; preds = %904
  %906 = shl i64 %897, 32
  %907 = add i64 %906, -4294967296
  %908 = ashr exact i64 %907, 32
  %909 = getelementptr inbounds i32, ptr %7, i64 %908
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %6, i64 %897
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = add nsw i32 %912, %910
  store i32 %913, ptr %911, align 4, !tbaa !5
  br label %932

914:                                              ; preds = %887, %904
  %915 = phi i32 [ %899, %904 ], [ %888, %887 ]
  %916 = phi ptr [ %898, %904 ], [ %4, %887 ]
  %917 = phi i64 [ %897, %904 ], [ 0, %887 ]
  %918 = add nsw i32 %915, 1
  store i32 %918, ptr %916, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %7, i64 %917
  %920 = load i32, ptr %919, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %6, i64 %917
  br label %932

922:                                              ; preds = %896
  %923 = icmp eq i32 %899, %902
  br i1 %923, label %924, label %930

924:                                              ; preds = %922
  store i32 0, ptr %898, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %8, i64 %897
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %6, i64 %897
  store i32 %926, ptr %927, align 4, !tbaa !5
  %928 = add nuw nsw i64 %897, 1
  %929 = icmp eq i64 %928, %647
  br i1 %929, label %937, label %896, !llvm.loop !512

930:                                              ; preds = %892, %922
  %931 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

932:                                              ; preds = %905, %914
  %933 = phi ptr [ %921, %914 ], [ %898, %905 ]
  %934 = phi i32 [ %920, %914 ], [ 1, %905 ]
  %935 = load i32, ptr %933, align 4, !tbaa !5
  %936 = add nsw i32 %935, %934
  store i32 %936, ptr %933, align 4, !tbaa !5
  br label %937

937:                                              ; preds = %924, %932, %894, %874
  %938 = icmp eq i32 %886, %5
  br i1 %938, label %3079, label %797, !llvm.loop !513

939:                                              ; preds = %635
  %940 = getelementptr inbounds i32, ptr %3, i64 %19
  %941 = load i32, ptr %940, align 4, !tbaa !5
  %942 = icmp eq i32 %941, 0
  %943 = icmp sgt i32 %5, 0
  br i1 %942, label %953, label %944

944:                                              ; preds = %939
  br i1 %943, label %945, label %3079

945:                                              ; preds = %944
  %946 = icmp sgt i32 %13, 1
  %947 = icmp sgt i32 %13, 0
  %948 = add i32 %13, -2
  %949 = zext i32 %948 to i64
  %950 = zext i32 %13 to i64
  %951 = add nuw i32 %5, 1
  %952 = icmp eq i32 %13, 1
  br label %1095

953:                                              ; preds = %939
  br i1 %943, label %954, label %3079

954:                                              ; preds = %953
  %955 = icmp sgt i32 %13, 1
  %956 = icmp sgt i32 %13, 0
  %957 = add i32 %13, -2
  %958 = zext i32 %957 to i64
  %959 = zext i32 %13 to i64
  %960 = add nuw i32 %5, 1
  %961 = icmp eq i32 %13, 1
  br label %962

962:                                              ; preds = %954, %1093
  %963 = phi i32 [ 0, %954 ], [ %1045, %1093 ]
  %964 = phi double [ 0.000000e+00, %954 ], [ %1044, %1093 ]
  %965 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %955, label %966, label %1035

966:                                              ; preds = %962, %1025
  %967 = phi i32 [ %1034, %1025 ], [ 0, %962 ]
  %968 = phi i64 [ %976, %1025 ], [ %959, %962 ]
  %969 = phi i64 [ %1033, %1025 ], [ %958, %962 ]
  %970 = phi i32 [ %1031, %1025 ], [ %965, %962 ]
  %971 = sub i32 %957, %967
  %972 = tail call i32 @llvm.smin.i32(i32 %971, i32 0)
  %973 = sub i32 %971, %972
  %974 = zext i32 %973 to i64
  %975 = add nuw nsw i64 %974, 1
  %976 = add nsw i64 %968, -1
  %977 = icmp ult i32 %973, 31
  br i1 %977, label %1013, label %978

978:                                              ; preds = %966
  %979 = and i64 %975, 8589934560
  %980 = sub i64 %969, %979
  br label %981

981:                                              ; preds = %981, %978
  %982 = phi i64 [ 0, %978 ], [ %1005, %981 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %978 ], [ %1001, %981 ]
  %984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %978 ], [ %1002, %981 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %978 ], [ %1003, %981 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %978 ], [ %1004, %981 ]
  %987 = sub i64 %969, %982
  %988 = getelementptr inbounds i32, ptr %9, i64 %987
  %989 = getelementptr inbounds i32, ptr %988, i64 -7
  %990 = load <8 x i32>, ptr %989, align 4, !tbaa !5
  %991 = shufflevector <8 x i32> %990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %992 = getelementptr inbounds i32, ptr %988, i64 -15
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %988, i64 -23
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %988, i64 -31
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !5
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = mul <8 x i32> %991, %983
  %1002 = mul <8 x i32> %994, %984
  %1003 = mul <8 x i32> %997, %985
  %1004 = mul <8 x i32> %1000, %986
  %1005 = add nuw i64 %982, 32
  %1006 = icmp eq i64 %1005, %979
  br i1 %1006, label %1007, label %981, !llvm.loop !514

1007:                                             ; preds = %981
  %1008 = mul <8 x i32> %1002, %1001
  %1009 = mul <8 x i32> %1003, %1008
  %1010 = mul <8 x i32> %1004, %1009
  %1011 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1010)
  %1012 = icmp eq i64 %975, %979
  br i1 %1012, label %1025, label %1013

1013:                                             ; preds = %966, %1007
  %1014 = phi i64 [ %969, %966 ], [ %980, %1007 ]
  %1015 = phi i32 [ 1, %966 ], [ %1011, %1007 ]
  br label %1016

1016:                                             ; preds = %1013, %1016
  %1017 = phi i64 [ %1022, %1016 ], [ %1014, %1013 ]
  %1018 = phi i32 [ %1021, %1016 ], [ %1015, %1013 ]
  %1019 = getelementptr inbounds i32, ptr %9, i64 %1017
  %1020 = load i32, ptr %1019, align 4, !tbaa !5
  %1021 = mul nsw i32 %1020, %1018
  %1022 = add nsw i64 %1017, -1
  %1023 = trunc i64 %1017 to i32
  %1024 = icmp sgt i32 %1023, 0
  br i1 %1024, label %1016, label %1025, !llvm.loop !515

1025:                                             ; preds = %1016, %1007
  %1026 = phi i32 [ %1011, %1007 ], [ %1021, %1016 ]
  %1027 = and i64 %976, 4294967295
  %1028 = getelementptr inbounds i32, ptr %6, i64 %1027
  %1029 = load i32, ptr %1028, align 4, !tbaa !5
  %1030 = mul nsw i32 %1029, %1026
  %1031 = add nsw i32 %1030, %970
  %1032 = icmp sgt i64 %968, 2
  %1033 = add nsw i64 %969, -1
  %1034 = add i32 %967, 1
  br i1 %1032, label %966, label %1035, !llvm.loop !516

1035:                                             ; preds = %1025, %962
  %1036 = phi i32 [ %965, %962 ], [ %1031, %1025 ]
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds i16, ptr %627, i64 %1037
  %1039 = load i16, ptr %1038, align 2, !tbaa !78
  %1040 = load i32, ptr %629, align 4, !tbaa !5
  %1041 = tail call i16 @llvm.abs.i16(i16 %1039, i1 false)
  %1042 = zext i16 %1041 to i32
  %1043 = add nsw i32 %1040, %1042
  store i32 %1043, ptr %629, align 4, !tbaa !5
  %1044 = fadd fast double %964, 1.000000e+00
  %1045 = add nuw nsw i32 %963, 1
  br i1 %956, label %1046, label %1093

1046:                                             ; preds = %1035
  %1047 = load i32, ptr %4, align 4, !tbaa !5
  %1048 = load i32, ptr %12, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, -1
  %1050 = icmp slt i32 %1047, %1049
  br i1 %1050, label %1070, label %1051

1051:                                             ; preds = %1046
  %1052 = icmp eq i32 %1047, %1049
  br i1 %1052, label %1053, label %1086

1053:                                             ; preds = %1051
  store i32 0, ptr %4, align 4, !tbaa !5
  %1054 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1054, ptr %6, align 4, !tbaa !5
  br i1 %961, label %1093, label %1055

1055:                                             ; preds = %1053, %1080
  %1056 = phi i64 [ %1084, %1080 ], [ 1, %1053 ]
  %1057 = getelementptr inbounds i32, ptr %4, i64 %1056
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %12, i64 %1056
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = add nsw i32 %1060, -1
  %1062 = icmp slt i32 %1058, %1061
  br i1 %1062, label %1063, label %1078

1063:                                             ; preds = %1055
  br i1 %1050, label %1070, label %1064

1064:                                             ; preds = %1063
  %1065 = getelementptr inbounds i32, ptr %7, i64 %1056
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %6, i64 %1056
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = add nsw i32 %1068, %1066
  store i32 %1069, ptr %1067, align 4, !tbaa !5
  br label %1088

1070:                                             ; preds = %1046, %1063
  %1071 = phi i32 [ %1058, %1063 ], [ %1047, %1046 ]
  %1072 = phi ptr [ %1057, %1063 ], [ %4, %1046 ]
  %1073 = phi i64 [ %1056, %1063 ], [ 0, %1046 ]
  %1074 = add nsw i32 %1071, 1
  store i32 %1074, ptr %1072, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %7, i64 %1073
  %1076 = load i32, ptr %1075, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %6, i64 %1073
  br label %1088

1078:                                             ; preds = %1055
  %1079 = icmp eq i32 %1058, %1061
  br i1 %1079, label %1080, label %1086

1080:                                             ; preds = %1078
  store i32 0, ptr %1057, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %8, i64 %1056
  %1082 = load i32, ptr %1081, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %6, i64 %1056
  store i32 %1082, ptr %1083, align 4, !tbaa !5
  %1084 = add nuw nsw i64 %1056, 1
  %1085 = icmp eq i64 %1084, %959
  br i1 %1085, label %1093, label %1055, !llvm.loop !517

1086:                                             ; preds = %1051, %1078
  %1087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1088:                                             ; preds = %1064, %1070
  %1089 = phi ptr [ %1077, %1070 ], [ %1057, %1064 ]
  %1090 = phi i32 [ %1076, %1070 ], [ 1, %1064 ]
  %1091 = load i32, ptr %1089, align 4, !tbaa !5
  %1092 = add nsw i32 %1091, %1090
  store i32 %1092, ptr %1089, align 4, !tbaa !5
  br label %1093

1093:                                             ; preds = %1080, %1088, %1053, %1035
  %1094 = icmp eq i32 %1045, %5
  br i1 %1094, label %3079, label %962, !llvm.loop !518

1095:                                             ; preds = %945, %1231
  %1096 = phi i32 [ 0, %945 ], [ %1180, %1231 ]
  %1097 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %946, label %1098, label %1167

1098:                                             ; preds = %1095, %1157
  %1099 = phi i32 [ %1166, %1157 ], [ 0, %1095 ]
  %1100 = phi i64 [ %1108, %1157 ], [ %950, %1095 ]
  %1101 = phi i64 [ %1165, %1157 ], [ %949, %1095 ]
  %1102 = phi i32 [ %1163, %1157 ], [ %1097, %1095 ]
  %1103 = sub i32 %948, %1099
  %1104 = tail call i32 @llvm.smin.i32(i32 %1103, i32 0)
  %1105 = sub i32 %1103, %1104
  %1106 = zext i32 %1105 to i64
  %1107 = add nuw nsw i64 %1106, 1
  %1108 = add nsw i64 %1100, -1
  %1109 = icmp ult i32 %1105, 31
  br i1 %1109, label %1145, label %1110

1110:                                             ; preds = %1098
  %1111 = and i64 %1107, 8589934560
  %1112 = sub i64 %1101, %1111
  br label %1113

1113:                                             ; preds = %1113, %1110
  %1114 = phi i64 [ 0, %1110 ], [ %1137, %1113 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1133, %1113 ]
  %1116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1134, %1113 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1135, %1113 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1136, %1113 ]
  %1119 = sub i64 %1101, %1114
  %1120 = getelementptr inbounds i32, ptr %11, i64 %1119
  %1121 = getelementptr inbounds i32, ptr %1120, i64 -7
  %1122 = load <8 x i32>, ptr %1121, align 4, !tbaa !5
  %1123 = shufflevector <8 x i32> %1122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1124 = getelementptr inbounds i32, ptr %1120, i64 -15
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1120, i64 -23
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = getelementptr inbounds i32, ptr %1120, i64 -31
  %1131 = load <8 x i32>, ptr %1130, align 4, !tbaa !5
  %1132 = shufflevector <8 x i32> %1131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1133 = mul <8 x i32> %1123, %1115
  %1134 = mul <8 x i32> %1126, %1116
  %1135 = mul <8 x i32> %1129, %1117
  %1136 = mul <8 x i32> %1132, %1118
  %1137 = add nuw i64 %1114, 32
  %1138 = icmp eq i64 %1137, %1111
  br i1 %1138, label %1139, label %1113, !llvm.loop !519

1139:                                             ; preds = %1113
  %1140 = mul <8 x i32> %1134, %1133
  %1141 = mul <8 x i32> %1135, %1140
  %1142 = mul <8 x i32> %1136, %1141
  %1143 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1142)
  %1144 = icmp eq i64 %1107, %1111
  br i1 %1144, label %1157, label %1145

1145:                                             ; preds = %1098, %1139
  %1146 = phi i64 [ %1101, %1098 ], [ %1112, %1139 ]
  %1147 = phi i32 [ 1, %1098 ], [ %1143, %1139 ]
  br label %1148

1148:                                             ; preds = %1145, %1148
  %1149 = phi i64 [ %1154, %1148 ], [ %1146, %1145 ]
  %1150 = phi i32 [ %1153, %1148 ], [ %1147, %1145 ]
  %1151 = getelementptr inbounds i32, ptr %11, i64 %1149
  %1152 = load i32, ptr %1151, align 4, !tbaa !5
  %1153 = mul nsw i32 %1152, %1150
  %1154 = add nsw i64 %1149, -1
  %1155 = trunc i64 %1149 to i32
  %1156 = icmp sgt i32 %1155, 0
  br i1 %1156, label %1148, label %1157, !llvm.loop !520

1157:                                             ; preds = %1148, %1139
  %1158 = phi i32 [ %1143, %1139 ], [ %1153, %1148 ]
  %1159 = and i64 %1108, 4294967295
  %1160 = getelementptr inbounds i32, ptr %6, i64 %1159
  %1161 = load i32, ptr %1160, align 4, !tbaa !5
  %1162 = mul nsw i32 %1161, %1158
  %1163 = add nsw i32 %1162, %1102
  %1164 = icmp sgt i64 %1100, 2
  %1165 = add nsw i64 %1101, -1
  %1166 = add i32 %1099, 1
  br i1 %1164, label %1098, label %1167, !llvm.loop !521

1167:                                             ; preds = %1157, %1095
  %1168 = phi i32 [ %1097, %1095 ], [ %1163, %1157 ]
  %1169 = icmp slt i32 %1168, %5
  br i1 %1169, label %1172, label %1170

1170:                                             ; preds = %1167
  %1171 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

1172:                                             ; preds = %1167
  %1173 = sext i32 %1168 to i64
  %1174 = getelementptr inbounds i16, ptr %627, i64 %1173
  %1175 = load i16, ptr %1174, align 2, !tbaa !78
  %1176 = load i32, ptr %629, align 4, !tbaa !5
  %1177 = tail call i16 @llvm.abs.i16(i16 %1175, i1 false)
  %1178 = zext i16 %1177 to i32
  %1179 = add nsw i32 %1176, %1178
  store i32 %1179, ptr %629, align 4, !tbaa !5
  %1180 = add nuw nsw i32 %1096, 1
  br i1 %947, label %1181, label %1231

1181:                                             ; preds = %1172
  %1182 = load i32, ptr %4, align 4, !tbaa !5
  %1183 = load i32, ptr %12, align 4, !tbaa !5
  %1184 = add nsw i32 %1183, -1
  %1185 = icmp slt i32 %1182, %1184
  br i1 %1185, label %1208, label %1186

1186:                                             ; preds = %1181
  %1187 = icmp eq i32 %1182, %1184
  br i1 %1187, label %1188, label %1224

1188:                                             ; preds = %1186
  store i32 0, ptr %4, align 4, !tbaa !5
  %1189 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1189, ptr %6, align 4, !tbaa !5
  br i1 %952, label %1231, label %1190

1190:                                             ; preds = %1188, %1218
  %1191 = phi i64 [ %1222, %1218 ], [ 1, %1188 ]
  %1192 = getelementptr inbounds i32, ptr %4, i64 %1191
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = getelementptr inbounds i32, ptr %12, i64 %1191
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = add nsw i32 %1195, -1
  %1197 = icmp slt i32 %1193, %1196
  br i1 %1197, label %1198, label %1216

1198:                                             ; preds = %1190
  br i1 %1185, label %1208, label %1199

1199:                                             ; preds = %1198
  %1200 = shl i64 %1191, 32
  %1201 = add i64 %1200, -4294967296
  %1202 = ashr exact i64 %1201, 32
  %1203 = getelementptr inbounds i32, ptr %7, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %6, i64 %1191
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = add nsw i32 %1206, %1204
  store i32 %1207, ptr %1205, align 4, !tbaa !5
  br label %1226

1208:                                             ; preds = %1181, %1198
  %1209 = phi i32 [ %1193, %1198 ], [ %1182, %1181 ]
  %1210 = phi ptr [ %1192, %1198 ], [ %4, %1181 ]
  %1211 = phi i64 [ %1191, %1198 ], [ 0, %1181 ]
  %1212 = add nsw i32 %1209, 1
  store i32 %1212, ptr %1210, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %7, i64 %1211
  %1214 = load i32, ptr %1213, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %6, i64 %1211
  br label %1226

1216:                                             ; preds = %1190
  %1217 = icmp eq i32 %1193, %1196
  br i1 %1217, label %1218, label %1224

1218:                                             ; preds = %1216
  store i32 0, ptr %1192, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %8, i64 %1191
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1191
  store i32 %1220, ptr %1221, align 4, !tbaa !5
  %1222 = add nuw nsw i64 %1191, 1
  %1223 = icmp eq i64 %1222, %950
  br i1 %1223, label %1231, label %1190, !llvm.loop !522

1224:                                             ; preds = %1186, %1216
  %1225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1226:                                             ; preds = %1199, %1208
  %1227 = phi ptr [ %1215, %1208 ], [ %1192, %1199 ]
  %1228 = phi i32 [ %1214, %1208 ], [ 1, %1199 ]
  %1229 = load i32, ptr %1227, align 4, !tbaa !5
  %1230 = add nsw i32 %1229, %1228
  store i32 %1230, ptr %1227, align 4, !tbaa !5
  br label %1231

1231:                                             ; preds = %1218, %1226, %1188, %1172
  %1232 = icmp eq i32 %1180, %5
  br i1 %1232, label %3079, label %1095, !llvm.loop !523

1233:                                             ; preds = %635
  %1234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3079

1235:                                             ; preds = %18
  %1236 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1237 = load ptr, ptr %1236, align 8, !tbaa !9
  %1238 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1239, align 8, !tbaa !18
  %1240 = icmp eq i32 %13, 0
  br i1 %1240, label %1241, label %1247

1241:                                             ; preds = %1235
  %1242 = load i16, ptr %1237, align 2, !tbaa !78
  %1243 = sitofp i16 %1242 to double
  %1244 = icmp slt i16 %1242, 0
  %1245 = fneg fast double %1243
  %1246 = select fast i1 %1244, double %1245, double %1243
  store double %1246, ptr %1239, align 8, !tbaa !18
  br label %3079

1247:                                             ; preds = %1235
  switch i32 %1, label %1845 [
    i32 1, label %1248
    i32 0, label %1547
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %3079

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1407

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %3079

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1405
  %1272 = phi double [ 0.000000e+00, %1263 ], [ %1355, %1405 ]
  %1273 = phi i32 [ 0, %1263 ], [ %1357, %1405 ]
  %1274 = phi double [ 0.000000e+00, %1263 ], [ %1356, %1405 ]
  %1275 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1276, label %1345

1276:                                             ; preds = %1271, %1335
  %1277 = phi i32 [ %1344, %1335 ], [ 0, %1271 ]
  %1278 = phi i64 [ %1286, %1335 ], [ %1268, %1271 ]
  %1279 = phi i64 [ %1343, %1335 ], [ %1267, %1271 ]
  %1280 = phi i32 [ %1341, %1335 ], [ %1275, %1271 ]
  %1281 = sub i32 %1266, %1277
  %1282 = tail call i32 @llvm.smin.i32(i32 %1281, i32 0)
  %1283 = sub i32 %1281, %1282
  %1284 = zext i32 %1283 to i64
  %1285 = add nuw nsw i64 %1284, 1
  %1286 = add nsw i64 %1278, -1
  %1287 = icmp ult i32 %1283, 31
  br i1 %1287, label %1323, label %1288

1288:                                             ; preds = %1276
  %1289 = and i64 %1285, 8589934560
  %1290 = sub i64 %1279, %1289
  br label %1291

1291:                                             ; preds = %1291, %1288
  %1292 = phi i64 [ 0, %1288 ], [ %1315, %1291 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1311, %1291 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1312, %1291 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1313, %1291 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1314, %1291 ]
  %1297 = sub i64 %1279, %1292
  %1298 = getelementptr inbounds i32, ptr %9, i64 %1297
  %1299 = getelementptr inbounds i32, ptr %1298, i64 -7
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1298, i64 -15
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1298, i64 -23
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1298, i64 -31
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !5
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = mul <8 x i32> %1301, %1293
  %1312 = mul <8 x i32> %1304, %1294
  %1313 = mul <8 x i32> %1307, %1295
  %1314 = mul <8 x i32> %1310, %1296
  %1315 = add nuw i64 %1292, 32
  %1316 = icmp eq i64 %1315, %1289
  br i1 %1316, label %1317, label %1291, !llvm.loop !524

1317:                                             ; preds = %1291
  %1318 = mul <8 x i32> %1312, %1311
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = mul <8 x i32> %1314, %1319
  %1321 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1320)
  %1322 = icmp eq i64 %1285, %1289
  br i1 %1322, label %1335, label %1323

1323:                                             ; preds = %1276, %1317
  %1324 = phi i64 [ %1279, %1276 ], [ %1290, %1317 ]
  %1325 = phi i32 [ 1, %1276 ], [ %1321, %1317 ]
  br label %1326

1326:                                             ; preds = %1323, %1326
  %1327 = phi i64 [ %1332, %1326 ], [ %1324, %1323 ]
  %1328 = phi i32 [ %1331, %1326 ], [ %1325, %1323 ]
  %1329 = getelementptr inbounds i32, ptr %9, i64 %1327
  %1330 = load i32, ptr %1329, align 4, !tbaa !5
  %1331 = mul nsw i32 %1330, %1328
  %1332 = add nsw i64 %1327, -1
  %1333 = trunc i64 %1327 to i32
  %1334 = icmp sgt i32 %1333, 0
  br i1 %1334, label %1326, label %1335, !llvm.loop !525

1335:                                             ; preds = %1326, %1317
  %1336 = phi i32 [ %1321, %1317 ], [ %1331, %1326 ]
  %1337 = and i64 %1286, 4294967295
  %1338 = getelementptr inbounds i32, ptr %6, i64 %1337
  %1339 = load i32, ptr %1338, align 4, !tbaa !5
  %1340 = mul nsw i32 %1339, %1336
  %1341 = add nsw i32 %1340, %1280
  %1342 = icmp sgt i64 %1278, 2
  %1343 = add nsw i64 %1279, -1
  %1344 = add i32 %1277, 1
  br i1 %1342, label %1276, label %1345, !llvm.loop !526

1345:                                             ; preds = %1335, %1271
  %1346 = phi i32 [ %1275, %1271 ], [ %1341, %1335 ]
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds double, ptr %2, i64 %1347
  %1349 = load double, ptr %1348, align 8, !tbaa !18
  %1350 = getelementptr inbounds i16, ptr %1237, i64 %1347
  %1351 = load i16, ptr %1350, align 2, !tbaa !78
  %1352 = sitofp i16 %1351 to double
  %1353 = fmul fast double %1349, %1352
  %1354 = tail call fast double @llvm.fabs.f64(double %1353)
  %1355 = fadd fast double %1354, %1272
  store double %1355, ptr %1239, align 8, !tbaa !18
  %1356 = fadd fast double %1349, %1274
  %1357 = add nuw nsw i32 %1273, 1
  br i1 %1265, label %1358, label %1405

1358:                                             ; preds = %1345
  %1359 = load i32, ptr %4, align 4, !tbaa !5
  %1360 = load i32, ptr %12, align 4, !tbaa !5
  %1361 = add nsw i32 %1360, -1
  %1362 = icmp slt i32 %1359, %1361
  br i1 %1362, label %1382, label %1363

1363:                                             ; preds = %1358
  %1364 = icmp eq i32 %1359, %1361
  br i1 %1364, label %1365, label %1398

1365:                                             ; preds = %1363
  store i32 0, ptr %4, align 4, !tbaa !5
  %1366 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1366, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1405, label %1367

1367:                                             ; preds = %1365, %1392
  %1368 = phi i64 [ %1396, %1392 ], [ 1, %1365 ]
  %1369 = getelementptr inbounds i32, ptr %4, i64 %1368
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = getelementptr inbounds i32, ptr %12, i64 %1368
  %1372 = load i32, ptr %1371, align 4, !tbaa !5
  %1373 = add nsw i32 %1372, -1
  %1374 = icmp slt i32 %1370, %1373
  br i1 %1374, label %1375, label %1390

1375:                                             ; preds = %1367
  br i1 %1362, label %1382, label %1376

1376:                                             ; preds = %1375
  %1377 = getelementptr inbounds i32, ptr %7, i64 %1368
  %1378 = load i32, ptr %1377, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %6, i64 %1368
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = add nsw i32 %1380, %1378
  store i32 %1381, ptr %1379, align 4, !tbaa !5
  br label %1400

1382:                                             ; preds = %1358, %1375
  %1383 = phi i32 [ %1370, %1375 ], [ %1359, %1358 ]
  %1384 = phi ptr [ %1369, %1375 ], [ %4, %1358 ]
  %1385 = phi i64 [ %1368, %1375 ], [ 0, %1358 ]
  %1386 = add nsw i32 %1383, 1
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  %1387 = getelementptr inbounds i32, ptr %7, i64 %1385
  %1388 = load i32, ptr %1387, align 4, !tbaa !5
  %1389 = getelementptr inbounds i32, ptr %6, i64 %1385
  br label %1400

1390:                                             ; preds = %1367
  %1391 = icmp eq i32 %1370, %1373
  br i1 %1391, label %1392, label %1398

1392:                                             ; preds = %1390
  store i32 0, ptr %1369, align 4, !tbaa !5
  %1393 = getelementptr inbounds i32, ptr %8, i64 %1368
  %1394 = load i32, ptr %1393, align 4, !tbaa !5
  %1395 = getelementptr inbounds i32, ptr %6, i64 %1368
  store i32 %1394, ptr %1395, align 4, !tbaa !5
  %1396 = add nuw nsw i64 %1368, 1
  %1397 = icmp eq i64 %1396, %1268
  br i1 %1397, label %1405, label %1367, !llvm.loop !527

1398:                                             ; preds = %1363, %1390
  %1399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1400:                                             ; preds = %1376, %1382
  %1401 = phi ptr [ %1389, %1382 ], [ %1369, %1376 ]
  %1402 = phi i32 [ %1388, %1382 ], [ 1, %1376 ]
  %1403 = load i32, ptr %1401, align 4, !tbaa !5
  %1404 = add nsw i32 %1403, %1402
  store i32 %1404, ptr %1401, align 4, !tbaa !5
  br label %1405

1405:                                             ; preds = %1392, %1400, %1365, %1345
  %1406 = icmp eq i32 %1357, %5
  br i1 %1406, label %3079, label %1271, !llvm.loop !528

1407:                                             ; preds = %1254, %1545
  %1408 = phi double [ 0.000000e+00, %1254 ], [ %1493, %1545 ]
  %1409 = phi i32 [ 0, %1254 ], [ %1494, %1545 ]
  %1410 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1411, label %1480

1411:                                             ; preds = %1407, %1470
  %1412 = phi i32 [ %1479, %1470 ], [ 0, %1407 ]
  %1413 = phi i64 [ %1421, %1470 ], [ %1259, %1407 ]
  %1414 = phi i64 [ %1478, %1470 ], [ %1258, %1407 ]
  %1415 = phi i32 [ %1476, %1470 ], [ %1410, %1407 ]
  %1416 = sub i32 %1257, %1412
  %1417 = tail call i32 @llvm.smin.i32(i32 %1416, i32 0)
  %1418 = sub i32 %1416, %1417
  %1419 = zext i32 %1418 to i64
  %1420 = add nuw nsw i64 %1419, 1
  %1421 = add nsw i64 %1413, -1
  %1422 = icmp ult i32 %1418, 31
  br i1 %1422, label %1458, label %1423

1423:                                             ; preds = %1411
  %1424 = and i64 %1420, 8589934560
  %1425 = sub i64 %1414, %1424
  br label %1426

1426:                                             ; preds = %1426, %1423
  %1427 = phi i64 [ 0, %1423 ], [ %1450, %1426 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1423 ], [ %1446, %1426 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1423 ], [ %1447, %1426 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1423 ], [ %1448, %1426 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1423 ], [ %1449, %1426 ]
  %1432 = sub i64 %1414, %1427
  %1433 = getelementptr inbounds i32, ptr %11, i64 %1432
  %1434 = getelementptr inbounds i32, ptr %1433, i64 -7
  %1435 = load <8 x i32>, ptr %1434, align 4, !tbaa !5
  %1436 = shufflevector <8 x i32> %1435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1437 = getelementptr inbounds i32, ptr %1433, i64 -15
  %1438 = load <8 x i32>, ptr %1437, align 4, !tbaa !5
  %1439 = shufflevector <8 x i32> %1438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1440 = getelementptr inbounds i32, ptr %1433, i64 -23
  %1441 = load <8 x i32>, ptr %1440, align 4, !tbaa !5
  %1442 = shufflevector <8 x i32> %1441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1443 = getelementptr inbounds i32, ptr %1433, i64 -31
  %1444 = load <8 x i32>, ptr %1443, align 4, !tbaa !5
  %1445 = shufflevector <8 x i32> %1444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1446 = mul <8 x i32> %1436, %1428
  %1447 = mul <8 x i32> %1439, %1429
  %1448 = mul <8 x i32> %1442, %1430
  %1449 = mul <8 x i32> %1445, %1431
  %1450 = add nuw i64 %1427, 32
  %1451 = icmp eq i64 %1450, %1424
  br i1 %1451, label %1452, label %1426, !llvm.loop !529

1452:                                             ; preds = %1426
  %1453 = mul <8 x i32> %1447, %1446
  %1454 = mul <8 x i32> %1448, %1453
  %1455 = mul <8 x i32> %1449, %1454
  %1456 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1455)
  %1457 = icmp eq i64 %1420, %1424
  br i1 %1457, label %1470, label %1458

1458:                                             ; preds = %1411, %1452
  %1459 = phi i64 [ %1414, %1411 ], [ %1425, %1452 ]
  %1460 = phi i32 [ 1, %1411 ], [ %1456, %1452 ]
  br label %1461

1461:                                             ; preds = %1458, %1461
  %1462 = phi i64 [ %1467, %1461 ], [ %1459, %1458 ]
  %1463 = phi i32 [ %1466, %1461 ], [ %1460, %1458 ]
  %1464 = getelementptr inbounds i32, ptr %11, i64 %1462
  %1465 = load i32, ptr %1464, align 4, !tbaa !5
  %1466 = mul nsw i32 %1465, %1463
  %1467 = add nsw i64 %1462, -1
  %1468 = trunc i64 %1462 to i32
  %1469 = icmp sgt i32 %1468, 0
  br i1 %1469, label %1461, label %1470, !llvm.loop !530

1470:                                             ; preds = %1461, %1452
  %1471 = phi i32 [ %1456, %1452 ], [ %1466, %1461 ]
  %1472 = and i64 %1421, 4294967295
  %1473 = getelementptr inbounds i32, ptr %6, i64 %1472
  %1474 = load i32, ptr %1473, align 4, !tbaa !5
  %1475 = mul nsw i32 %1474, %1471
  %1476 = add nsw i32 %1475, %1415
  %1477 = icmp sgt i64 %1413, 2
  %1478 = add nsw i64 %1414, -1
  %1479 = add i32 %1412, 1
  br i1 %1477, label %1411, label %1480, !llvm.loop !531

1480:                                             ; preds = %1470, %1407
  %1481 = phi i32 [ %1410, %1407 ], [ %1476, %1470 ]
  %1482 = icmp slt i32 %1481, %5
  br i1 %1482, label %1485, label %1483

1483:                                             ; preds = %1480
  %1484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

1485:                                             ; preds = %1480
  %1486 = sext i32 %1481 to i64
  %1487 = getelementptr inbounds i16, ptr %1237, i64 %1486
  %1488 = load i16, ptr %1487, align 2, !tbaa !78
  %1489 = sitofp i16 %1488 to double
  %1490 = icmp slt i16 %1488, 0
  %1491 = fneg fast double %1489
  %1492 = select fast i1 %1490, double %1491, double %1489
  %1493 = fadd fast double %1492, %1408
  store double %1493, ptr %1239, align 8, !tbaa !18
  %1494 = add nuw nsw i32 %1409, 1
  br i1 %1256, label %1495, label %1545

1495:                                             ; preds = %1485
  %1496 = load i32, ptr %4, align 4, !tbaa !5
  %1497 = load i32, ptr %12, align 4, !tbaa !5
  %1498 = add nsw i32 %1497, -1
  %1499 = icmp slt i32 %1496, %1498
  br i1 %1499, label %1522, label %1500

1500:                                             ; preds = %1495
  %1501 = icmp eq i32 %1496, %1498
  br i1 %1501, label %1502, label %1538

1502:                                             ; preds = %1500
  store i32 0, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1503, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1545, label %1504

1504:                                             ; preds = %1502, %1532
  %1505 = phi i64 [ %1536, %1532 ], [ 1, %1502 ]
  %1506 = getelementptr inbounds i32, ptr %4, i64 %1505
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = getelementptr inbounds i32, ptr %12, i64 %1505
  %1509 = load i32, ptr %1508, align 4, !tbaa !5
  %1510 = add nsw i32 %1509, -1
  %1511 = icmp slt i32 %1507, %1510
  br i1 %1511, label %1512, label %1530

1512:                                             ; preds = %1504
  br i1 %1499, label %1522, label %1513

1513:                                             ; preds = %1512
  %1514 = shl i64 %1505, 32
  %1515 = add i64 %1514, -4294967296
  %1516 = ashr exact i64 %1515, 32
  %1517 = getelementptr inbounds i32, ptr %7, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = getelementptr inbounds i32, ptr %6, i64 %1505
  %1520 = load i32, ptr %1519, align 4, !tbaa !5
  %1521 = add nsw i32 %1520, %1518
  store i32 %1521, ptr %1519, align 4, !tbaa !5
  br label %1540

1522:                                             ; preds = %1495, %1512
  %1523 = phi i32 [ %1507, %1512 ], [ %1496, %1495 ]
  %1524 = phi ptr [ %1506, %1512 ], [ %4, %1495 ]
  %1525 = phi i64 [ %1505, %1512 ], [ 0, %1495 ]
  %1526 = add nsw i32 %1523, 1
  store i32 %1526, ptr %1524, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %7, i64 %1525
  %1528 = load i32, ptr %1527, align 4, !tbaa !5
  %1529 = getelementptr inbounds i32, ptr %6, i64 %1525
  br label %1540

1530:                                             ; preds = %1504
  %1531 = icmp eq i32 %1507, %1510
  br i1 %1531, label %1532, label %1538

1532:                                             ; preds = %1530
  store i32 0, ptr %1506, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %8, i64 %1505
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1505
  store i32 %1534, ptr %1535, align 4, !tbaa !5
  %1536 = add nuw nsw i64 %1505, 1
  %1537 = icmp eq i64 %1536, %1259
  br i1 %1537, label %1545, label %1504, !llvm.loop !532

1538:                                             ; preds = %1500, %1530
  %1539 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1540:                                             ; preds = %1513, %1522
  %1541 = phi ptr [ %1529, %1522 ], [ %1506, %1513 ]
  %1542 = phi i32 [ %1528, %1522 ], [ 1, %1513 ]
  %1543 = load i32, ptr %1541, align 4, !tbaa !5
  %1544 = add nsw i32 %1543, %1542
  store i32 %1544, ptr %1541, align 4, !tbaa !5
  br label %1545

1545:                                             ; preds = %1532, %1540, %1502, %1485
  %1546 = icmp eq i32 %1494, %5
  br i1 %1546, label %3079, label %1407, !llvm.loop !533

1547:                                             ; preds = %1247
  %1548 = getelementptr inbounds i32, ptr %3, i64 %19
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = icmp eq i32 %1549, 0
  %1551 = icmp sgt i32 %5, 0
  br i1 %1550, label %1561, label %1552

1552:                                             ; preds = %1547
  br i1 %1551, label %1553, label %3079

1553:                                             ; preds = %1552
  %1554 = icmp sgt i32 %13, 1
  %1555 = icmp sgt i32 %13, 0
  %1556 = add i32 %13, -2
  %1557 = zext i32 %1556 to i64
  %1558 = zext i32 %13 to i64
  %1559 = add nuw i32 %5, 1
  %1560 = icmp eq i32 %13, 1
  br label %1705

1561:                                             ; preds = %1547
  br i1 %1551, label %1562, label %3079

1562:                                             ; preds = %1561
  %1563 = icmp sgt i32 %13, 1
  %1564 = icmp sgt i32 %13, 0
  %1565 = add i32 %13, -2
  %1566 = zext i32 %1565 to i64
  %1567 = zext i32 %13 to i64
  %1568 = add nuw i32 %5, 1
  %1569 = icmp eq i32 %13, 1
  br label %1570

1570:                                             ; preds = %1562, %1703
  %1571 = phi double [ 0.000000e+00, %1562 ], [ %1653, %1703 ]
  %1572 = phi i32 [ 0, %1562 ], [ %1655, %1703 ]
  %1573 = phi double [ 0.000000e+00, %1562 ], [ %1654, %1703 ]
  %1574 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1563, label %1575, label %1644

1575:                                             ; preds = %1570, %1634
  %1576 = phi i32 [ %1643, %1634 ], [ 0, %1570 ]
  %1577 = phi i64 [ %1585, %1634 ], [ %1567, %1570 ]
  %1578 = phi i64 [ %1642, %1634 ], [ %1566, %1570 ]
  %1579 = phi i32 [ %1640, %1634 ], [ %1574, %1570 ]
  %1580 = sub i32 %1565, %1576
  %1581 = tail call i32 @llvm.smin.i32(i32 %1580, i32 0)
  %1582 = sub i32 %1580, %1581
  %1583 = zext i32 %1582 to i64
  %1584 = add nuw nsw i64 %1583, 1
  %1585 = add nsw i64 %1577, -1
  %1586 = icmp ult i32 %1582, 31
  br i1 %1586, label %1622, label %1587

1587:                                             ; preds = %1575
  %1588 = and i64 %1584, 8589934560
  %1589 = sub i64 %1578, %1588
  br label %1590

1590:                                             ; preds = %1590, %1587
  %1591 = phi i64 [ 0, %1587 ], [ %1614, %1590 ]
  %1592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1587 ], [ %1610, %1590 ]
  %1593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1587 ], [ %1611, %1590 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1587 ], [ %1612, %1590 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1587 ], [ %1613, %1590 ]
  %1596 = sub i64 %1578, %1591
  %1597 = getelementptr inbounds i32, ptr %9, i64 %1596
  %1598 = getelementptr inbounds i32, ptr %1597, i64 -7
  %1599 = load <8 x i32>, ptr %1598, align 4, !tbaa !5
  %1600 = shufflevector <8 x i32> %1599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1601 = getelementptr inbounds i32, ptr %1597, i64 -15
  %1602 = load <8 x i32>, ptr %1601, align 4, !tbaa !5
  %1603 = shufflevector <8 x i32> %1602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1604 = getelementptr inbounds i32, ptr %1597, i64 -23
  %1605 = load <8 x i32>, ptr %1604, align 4, !tbaa !5
  %1606 = shufflevector <8 x i32> %1605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1607 = getelementptr inbounds i32, ptr %1597, i64 -31
  %1608 = load <8 x i32>, ptr %1607, align 4, !tbaa !5
  %1609 = shufflevector <8 x i32> %1608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1610 = mul <8 x i32> %1600, %1592
  %1611 = mul <8 x i32> %1603, %1593
  %1612 = mul <8 x i32> %1606, %1594
  %1613 = mul <8 x i32> %1609, %1595
  %1614 = add nuw i64 %1591, 32
  %1615 = icmp eq i64 %1614, %1588
  br i1 %1615, label %1616, label %1590, !llvm.loop !534

1616:                                             ; preds = %1590
  %1617 = mul <8 x i32> %1611, %1610
  %1618 = mul <8 x i32> %1612, %1617
  %1619 = mul <8 x i32> %1613, %1618
  %1620 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1619)
  %1621 = icmp eq i64 %1584, %1588
  br i1 %1621, label %1634, label %1622

1622:                                             ; preds = %1575, %1616
  %1623 = phi i64 [ %1578, %1575 ], [ %1589, %1616 ]
  %1624 = phi i32 [ 1, %1575 ], [ %1620, %1616 ]
  br label %1625

1625:                                             ; preds = %1622, %1625
  %1626 = phi i64 [ %1631, %1625 ], [ %1623, %1622 ]
  %1627 = phi i32 [ %1630, %1625 ], [ %1624, %1622 ]
  %1628 = getelementptr inbounds i32, ptr %9, i64 %1626
  %1629 = load i32, ptr %1628, align 4, !tbaa !5
  %1630 = mul nsw i32 %1629, %1627
  %1631 = add nsw i64 %1626, -1
  %1632 = trunc i64 %1626 to i32
  %1633 = icmp sgt i32 %1632, 0
  br i1 %1633, label %1625, label %1634, !llvm.loop !535

1634:                                             ; preds = %1625, %1616
  %1635 = phi i32 [ %1620, %1616 ], [ %1630, %1625 ]
  %1636 = and i64 %1585, 4294967295
  %1637 = getelementptr inbounds i32, ptr %6, i64 %1636
  %1638 = load i32, ptr %1637, align 4, !tbaa !5
  %1639 = mul nsw i32 %1638, %1635
  %1640 = add nsw i32 %1639, %1579
  %1641 = icmp sgt i64 %1577, 2
  %1642 = add nsw i64 %1578, -1
  %1643 = add i32 %1576, 1
  br i1 %1641, label %1575, label %1644, !llvm.loop !536

1644:                                             ; preds = %1634, %1570
  %1645 = phi i32 [ %1574, %1570 ], [ %1640, %1634 ]
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds i16, ptr %1237, i64 %1646
  %1648 = load i16, ptr %1647, align 2, !tbaa !78
  %1649 = sitofp i16 %1648 to double
  %1650 = icmp slt i16 %1648, 0
  %1651 = fneg fast double %1649
  %1652 = select fast i1 %1650, double %1651, double %1649
  %1653 = fadd fast double %1652, %1571
  %1654 = fadd fast double %1573, 1.000000e+00
  %1655 = add nuw nsw i32 %1572, 1
  br i1 %1564, label %1656, label %1703

1656:                                             ; preds = %1644
  %1657 = load i32, ptr %4, align 4, !tbaa !5
  %1658 = load i32, ptr %12, align 4, !tbaa !5
  %1659 = add nsw i32 %1658, -1
  %1660 = icmp slt i32 %1657, %1659
  br i1 %1660, label %1680, label %1661

1661:                                             ; preds = %1656
  %1662 = icmp eq i32 %1657, %1659
  br i1 %1662, label %1663, label %1696

1663:                                             ; preds = %1661
  store i32 0, ptr %4, align 4, !tbaa !5
  %1664 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1664, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1703, label %1665

1665:                                             ; preds = %1663, %1690
  %1666 = phi i64 [ %1694, %1690 ], [ 1, %1663 ]
  %1667 = getelementptr inbounds i32, ptr %4, i64 %1666
  %1668 = load i32, ptr %1667, align 4, !tbaa !5
  %1669 = getelementptr inbounds i32, ptr %12, i64 %1666
  %1670 = load i32, ptr %1669, align 4, !tbaa !5
  %1671 = add nsw i32 %1670, -1
  %1672 = icmp slt i32 %1668, %1671
  br i1 %1672, label %1673, label %1688

1673:                                             ; preds = %1665
  br i1 %1660, label %1680, label %1674

1674:                                             ; preds = %1673
  %1675 = getelementptr inbounds i32, ptr %7, i64 %1666
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = getelementptr inbounds i32, ptr %6, i64 %1666
  %1678 = load i32, ptr %1677, align 4, !tbaa !5
  %1679 = add nsw i32 %1678, %1676
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  br label %1698

1680:                                             ; preds = %1656, %1673
  %1681 = phi i32 [ %1668, %1673 ], [ %1657, %1656 ]
  %1682 = phi ptr [ %1667, %1673 ], [ %4, %1656 ]
  %1683 = phi i64 [ %1666, %1673 ], [ 0, %1656 ]
  %1684 = add nsw i32 %1681, 1
  store i32 %1684, ptr %1682, align 4, !tbaa !5
  %1685 = getelementptr inbounds i32, ptr %7, i64 %1683
  %1686 = load i32, ptr %1685, align 4, !tbaa !5
  %1687 = getelementptr inbounds i32, ptr %6, i64 %1683
  br label %1698

1688:                                             ; preds = %1665
  %1689 = icmp eq i32 %1668, %1671
  br i1 %1689, label %1690, label %1696

1690:                                             ; preds = %1688
  store i32 0, ptr %1667, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %8, i64 %1666
  %1692 = load i32, ptr %1691, align 4, !tbaa !5
  %1693 = getelementptr inbounds i32, ptr %6, i64 %1666
  store i32 %1692, ptr %1693, align 4, !tbaa !5
  %1694 = add nuw nsw i64 %1666, 1
  %1695 = icmp eq i64 %1694, %1567
  br i1 %1695, label %1703, label %1665, !llvm.loop !537

1696:                                             ; preds = %1661, %1688
  store double %1653, ptr %1239, align 8, !tbaa !18
  %1697 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1698:                                             ; preds = %1674, %1680
  %1699 = phi ptr [ %1687, %1680 ], [ %1667, %1674 ]
  %1700 = phi i32 [ %1686, %1680 ], [ 1, %1674 ]
  %1701 = load i32, ptr %1699, align 4, !tbaa !5
  %1702 = add nsw i32 %1701, %1700
  store i32 %1702, ptr %1699, align 4, !tbaa !5
  br label %1703

1703:                                             ; preds = %1690, %1698, %1663, %1644
  %1704 = icmp eq i32 %1655, %5
  br i1 %1704, label %3075, label %1570, !llvm.loop !538

1705:                                             ; preds = %1553, %1843
  %1706 = phi double [ 0.000000e+00, %1553 ], [ %1791, %1843 ]
  %1707 = phi i32 [ 0, %1553 ], [ %1792, %1843 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1554, label %1709, label %1778

1709:                                             ; preds = %1705, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1705 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1558, %1705 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1557, %1705 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1705 ]
  %1714 = sub i32 %1556, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !539

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !540

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !541

1778:                                             ; preds = %1768, %1705
  %1779 = phi i32 [ %1708, %1705 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds i16, ptr %1237, i64 %1784
  %1786 = load i16, ptr %1785, align 2, !tbaa !78
  %1787 = sitofp i16 %1786 to double
  %1788 = icmp slt i16 %1786, 0
  %1789 = fneg fast double %1787
  %1790 = select fast i1 %1788, double %1789, double %1787
  %1791 = fadd fast double %1790, %1706
  store double %1791, ptr %1239, align 8, !tbaa !18
  %1792 = add nuw nsw i32 %1707, 1
  br i1 %1555, label %1793, label %1843

1793:                                             ; preds = %1783
  %1794 = load i32, ptr %4, align 4, !tbaa !5
  %1795 = load i32, ptr %12, align 4, !tbaa !5
  %1796 = add nsw i32 %1795, -1
  %1797 = icmp slt i32 %1794, %1796
  br i1 %1797, label %1820, label %1798

1798:                                             ; preds = %1793
  %1799 = icmp eq i32 %1794, %1796
  br i1 %1799, label %1800, label %1836

1800:                                             ; preds = %1798
  store i32 0, ptr %4, align 4, !tbaa !5
  %1801 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1801, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1843, label %1802

1802:                                             ; preds = %1800, %1830
  %1803 = phi i64 [ %1834, %1830 ], [ 1, %1800 ]
  %1804 = getelementptr inbounds i32, ptr %4, i64 %1803
  %1805 = load i32, ptr %1804, align 4, !tbaa !5
  %1806 = getelementptr inbounds i32, ptr %12, i64 %1803
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = add nsw i32 %1807, -1
  %1809 = icmp slt i32 %1805, %1808
  br i1 %1809, label %1810, label %1828

1810:                                             ; preds = %1802
  br i1 %1797, label %1820, label %1811

1811:                                             ; preds = %1810
  %1812 = shl i64 %1803, 32
  %1813 = add i64 %1812, -4294967296
  %1814 = ashr exact i64 %1813, 32
  %1815 = getelementptr inbounds i32, ptr %7, i64 %1814
  %1816 = load i32, ptr %1815, align 4, !tbaa !5
  %1817 = getelementptr inbounds i32, ptr %6, i64 %1803
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = add nsw i32 %1818, %1816
  store i32 %1819, ptr %1817, align 4, !tbaa !5
  br label %1838

1820:                                             ; preds = %1793, %1810
  %1821 = phi i32 [ %1805, %1810 ], [ %1794, %1793 ]
  %1822 = phi ptr [ %1804, %1810 ], [ %4, %1793 ]
  %1823 = phi i64 [ %1803, %1810 ], [ 0, %1793 ]
  %1824 = add nsw i32 %1821, 1
  store i32 %1824, ptr %1822, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %7, i64 %1823
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1823
  br label %1838

1828:                                             ; preds = %1802
  %1829 = icmp eq i32 %1805, %1808
  br i1 %1829, label %1830, label %1836

1830:                                             ; preds = %1828
  store i32 0, ptr %1804, align 4, !tbaa !5
  %1831 = getelementptr inbounds i32, ptr %8, i64 %1803
  %1832 = load i32, ptr %1831, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %6, i64 %1803
  store i32 %1832, ptr %1833, align 4, !tbaa !5
  %1834 = add nuw nsw i64 %1803, 1
  %1835 = icmp eq i64 %1834, %1558
  br i1 %1835, label %1843, label %1802, !llvm.loop !542

1836:                                             ; preds = %1798, %1828
  %1837 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

1838:                                             ; preds = %1811, %1820
  %1839 = phi ptr [ %1827, %1820 ], [ %1804, %1811 ]
  %1840 = phi i32 [ %1826, %1820 ], [ 1, %1811 ]
  %1841 = load i32, ptr %1839, align 4, !tbaa !5
  %1842 = add nsw i32 %1841, %1840
  store i32 %1842, ptr %1839, align 4, !tbaa !5
  br label %1843

1843:                                             ; preds = %1830, %1838, %1800, %1783
  %1844 = icmp eq i32 %1792, %5
  br i1 %1844, label %3079, label %1705, !llvm.loop !543

1845:                                             ; preds = %1247
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3079

1847:                                             ; preds = %18
  %1848 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1849 = load ptr, ptr %1848, align 8, !tbaa !9
  %1850 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1851, align 4, !tbaa !162
  %1852 = icmp eq i32 %13, 0
  br i1 %1852, label %1853, label %1859

1853:                                             ; preds = %1847
  %1854 = load i16, ptr %1849, align 2, !tbaa !78
  %1855 = sitofp i16 %1854 to float
  %1856 = icmp slt i16 %1854, 0
  %1857 = fneg fast float %1855
  %1858 = select fast i1 %1856, float %1857, float %1855
  store float %1858, ptr %1851, align 4, !tbaa !162
  br label %3079

1859:                                             ; preds = %1847
  switch i32 %1, label %2461 [
    i32 1, label %1860
    i32 0, label %2163
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %3079

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2021

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %3079

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2019
  %1884 = phi float [ 0.000000e+00, %1875 ], [ %1969, %2019 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1971, %2019 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1970, %2019 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !544

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !545

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !546

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds i16, ptr %1849, i64 %1959
  %1963 = load i16, ptr %1962, align 2, !tbaa !78
  %1964 = fpext float %1884 to double
  %1965 = sitofp i16 %1963 to double
  %1966 = fmul fast double %1961, %1965
  %1967 = tail call fast double @llvm.fabs.f64(double %1966)
  %1968 = fadd fast double %1967, %1964
  %1969 = fptrunc double %1968 to float
  %1970 = fadd fast double %1961, %1886
  %1971 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1972, label %2019

1972:                                             ; preds = %1957
  %1973 = load i32, ptr %4, align 4, !tbaa !5
  %1974 = load i32, ptr %12, align 4, !tbaa !5
  %1975 = add nsw i32 %1974, -1
  %1976 = icmp slt i32 %1973, %1975
  br i1 %1976, label %1996, label %1977

1977:                                             ; preds = %1972
  %1978 = icmp eq i32 %1973, %1975
  br i1 %1978, label %1979, label %2012

1979:                                             ; preds = %1977
  store i32 0, ptr %4, align 4, !tbaa !5
  %1980 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1980, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2019, label %1981

1981:                                             ; preds = %1979, %2006
  %1982 = phi i64 [ %2010, %2006 ], [ 1, %1979 ]
  %1983 = getelementptr inbounds i32, ptr %4, i64 %1982
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = getelementptr inbounds i32, ptr %12, i64 %1982
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = add nsw i32 %1986, -1
  %1988 = icmp slt i32 %1984, %1987
  br i1 %1988, label %1989, label %2004

1989:                                             ; preds = %1981
  br i1 %1976, label %1996, label %1990

1990:                                             ; preds = %1989
  %1991 = getelementptr inbounds i32, ptr %7, i64 %1982
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = getelementptr inbounds i32, ptr %6, i64 %1982
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = add nsw i32 %1994, %1992
  store i32 %1995, ptr %1993, align 4, !tbaa !5
  br label %2014

1996:                                             ; preds = %1972, %1989
  %1997 = phi i32 [ %1984, %1989 ], [ %1973, %1972 ]
  %1998 = phi ptr [ %1983, %1989 ], [ %4, %1972 ]
  %1999 = phi i64 [ %1982, %1989 ], [ 0, %1972 ]
  %2000 = add nsw i32 %1997, 1
  store i32 %2000, ptr %1998, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %7, i64 %1999
  %2002 = load i32, ptr %2001, align 4, !tbaa !5
  %2003 = getelementptr inbounds i32, ptr %6, i64 %1999
  br label %2014

2004:                                             ; preds = %1981
  %2005 = icmp eq i32 %1984, %1987
  br i1 %2005, label %2006, label %2012

2006:                                             ; preds = %2004
  store i32 0, ptr %1983, align 4, !tbaa !5
  %2007 = getelementptr inbounds i32, ptr %8, i64 %1982
  %2008 = load i32, ptr %2007, align 4, !tbaa !5
  %2009 = getelementptr inbounds i32, ptr %6, i64 %1982
  store i32 %2008, ptr %2009, align 4, !tbaa !5
  %2010 = add nuw nsw i64 %1982, 1
  %2011 = icmp eq i64 %2010, %1880
  br i1 %2011, label %2019, label %1981, !llvm.loop !547

2012:                                             ; preds = %1977, %2004
  store float %1969, ptr %1851, align 4, !tbaa !162
  %2013 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2014:                                             ; preds = %1990, %1996
  %2015 = phi ptr [ %2003, %1996 ], [ %1983, %1990 ]
  %2016 = phi i32 [ %2002, %1996 ], [ 1, %1990 ]
  %2017 = load i32, ptr %2015, align 4, !tbaa !5
  %2018 = add nsw i32 %2017, %2016
  store i32 %2018, ptr %2015, align 4, !tbaa !5
  br label %2019

2019:                                             ; preds = %2006, %2014, %1979, %1957
  %2020 = icmp eq i32 %1971, %5
  br i1 %2020, label %3076, label %1883, !llvm.loop !548

2021:                                             ; preds = %1866, %2161
  %2022 = phi float [ 0.000000e+00, %1866 ], [ %2109, %2161 ]
  %2023 = phi i32 [ 0, %1866 ], [ %2110, %2161 ]
  %2024 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2025, label %2094

2025:                                             ; preds = %2021, %2084
  %2026 = phi i32 [ %2093, %2084 ], [ 0, %2021 ]
  %2027 = phi i64 [ %2035, %2084 ], [ %1871, %2021 ]
  %2028 = phi i64 [ %2092, %2084 ], [ %1870, %2021 ]
  %2029 = phi i32 [ %2090, %2084 ], [ %2024, %2021 ]
  %2030 = sub i32 %1869, %2026
  %2031 = tail call i32 @llvm.smin.i32(i32 %2030, i32 0)
  %2032 = sub i32 %2030, %2031
  %2033 = zext i32 %2032 to i64
  %2034 = add nuw nsw i64 %2033, 1
  %2035 = add nsw i64 %2027, -1
  %2036 = icmp ult i32 %2032, 31
  br i1 %2036, label %2072, label %2037

2037:                                             ; preds = %2025
  %2038 = and i64 %2034, 8589934560
  %2039 = sub i64 %2028, %2038
  br label %2040

2040:                                             ; preds = %2040, %2037
  %2041 = phi i64 [ 0, %2037 ], [ %2064, %2040 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2037 ], [ %2060, %2040 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2037 ], [ %2061, %2040 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2037 ], [ %2062, %2040 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2037 ], [ %2063, %2040 ]
  %2046 = sub i64 %2028, %2041
  %2047 = getelementptr inbounds i32, ptr %11, i64 %2046
  %2048 = getelementptr inbounds i32, ptr %2047, i64 -7
  %2049 = load <8 x i32>, ptr %2048, align 4, !tbaa !5
  %2050 = shufflevector <8 x i32> %2049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2051 = getelementptr inbounds i32, ptr %2047, i64 -15
  %2052 = load <8 x i32>, ptr %2051, align 4, !tbaa !5
  %2053 = shufflevector <8 x i32> %2052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2054 = getelementptr inbounds i32, ptr %2047, i64 -23
  %2055 = load <8 x i32>, ptr %2054, align 4, !tbaa !5
  %2056 = shufflevector <8 x i32> %2055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2057 = getelementptr inbounds i32, ptr %2047, i64 -31
  %2058 = load <8 x i32>, ptr %2057, align 4, !tbaa !5
  %2059 = shufflevector <8 x i32> %2058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2060 = mul <8 x i32> %2050, %2042
  %2061 = mul <8 x i32> %2053, %2043
  %2062 = mul <8 x i32> %2056, %2044
  %2063 = mul <8 x i32> %2059, %2045
  %2064 = add nuw i64 %2041, 32
  %2065 = icmp eq i64 %2064, %2038
  br i1 %2065, label %2066, label %2040, !llvm.loop !549

2066:                                             ; preds = %2040
  %2067 = mul <8 x i32> %2061, %2060
  %2068 = mul <8 x i32> %2062, %2067
  %2069 = mul <8 x i32> %2063, %2068
  %2070 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2069)
  %2071 = icmp eq i64 %2034, %2038
  br i1 %2071, label %2084, label %2072

2072:                                             ; preds = %2025, %2066
  %2073 = phi i64 [ %2028, %2025 ], [ %2039, %2066 ]
  %2074 = phi i32 [ 1, %2025 ], [ %2070, %2066 ]
  br label %2075

2075:                                             ; preds = %2072, %2075
  %2076 = phi i64 [ %2081, %2075 ], [ %2073, %2072 ]
  %2077 = phi i32 [ %2080, %2075 ], [ %2074, %2072 ]
  %2078 = getelementptr inbounds i32, ptr %11, i64 %2076
  %2079 = load i32, ptr %2078, align 4, !tbaa !5
  %2080 = mul nsw i32 %2079, %2077
  %2081 = add nsw i64 %2076, -1
  %2082 = trunc i64 %2076 to i32
  %2083 = icmp sgt i32 %2082, 0
  br i1 %2083, label %2075, label %2084, !llvm.loop !550

2084:                                             ; preds = %2075, %2066
  %2085 = phi i32 [ %2070, %2066 ], [ %2080, %2075 ]
  %2086 = and i64 %2035, 4294967295
  %2087 = getelementptr inbounds i32, ptr %6, i64 %2086
  %2088 = load i32, ptr %2087, align 4, !tbaa !5
  %2089 = mul nsw i32 %2088, %2085
  %2090 = add nsw i32 %2089, %2029
  %2091 = icmp sgt i64 %2027, 2
  %2092 = add nsw i64 %2028, -1
  %2093 = add i32 %2026, 1
  br i1 %2091, label %2025, label %2094, !llvm.loop !551

2094:                                             ; preds = %2084, %2021
  %2095 = phi i32 [ %2024, %2021 ], [ %2090, %2084 ]
  %2096 = icmp slt i32 %2095, %5
  br i1 %2096, label %2099, label %2097

2097:                                             ; preds = %2094
  %2098 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

2099:                                             ; preds = %2094
  %2100 = sext i32 %2095 to i64
  %2101 = getelementptr inbounds i16, ptr %1849, i64 %2100
  %2102 = load i16, ptr %2101, align 2, !tbaa !78
  %2103 = fpext float %2022 to double
  %2104 = sitofp i16 %2102 to double
  %2105 = icmp slt i16 %2102, 0
  %2106 = fneg fast double %2104
  %2107 = select fast i1 %2105, double %2106, double %2104
  %2108 = fadd fast double %2107, %2103
  %2109 = fptrunc double %2108 to float
  store float %2109, ptr %1851, align 4, !tbaa !162
  %2110 = add nuw nsw i32 %2023, 1
  br i1 %1868, label %2111, label %2161

2111:                                             ; preds = %2099
  %2112 = load i32, ptr %4, align 4, !tbaa !5
  %2113 = load i32, ptr %12, align 4, !tbaa !5
  %2114 = add nsw i32 %2113, -1
  %2115 = icmp slt i32 %2112, %2114
  br i1 %2115, label %2138, label %2116

2116:                                             ; preds = %2111
  %2117 = icmp eq i32 %2112, %2114
  br i1 %2117, label %2118, label %2154

2118:                                             ; preds = %2116
  store i32 0, ptr %4, align 4, !tbaa !5
  %2119 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2119, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2161, label %2120

2120:                                             ; preds = %2118, %2148
  %2121 = phi i64 [ %2152, %2148 ], [ 1, %2118 ]
  %2122 = getelementptr inbounds i32, ptr %4, i64 %2121
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = getelementptr inbounds i32, ptr %12, i64 %2121
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = add nsw i32 %2125, -1
  %2127 = icmp slt i32 %2123, %2126
  br i1 %2127, label %2128, label %2146

2128:                                             ; preds = %2120
  br i1 %2115, label %2138, label %2129

2129:                                             ; preds = %2128
  %2130 = shl i64 %2121, 32
  %2131 = add i64 %2130, -4294967296
  %2132 = ashr exact i64 %2131, 32
  %2133 = getelementptr inbounds i32, ptr %7, i64 %2132
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = getelementptr inbounds i32, ptr %6, i64 %2121
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, %2134
  store i32 %2137, ptr %2135, align 4, !tbaa !5
  br label %2156

2138:                                             ; preds = %2111, %2128
  %2139 = phi i32 [ %2123, %2128 ], [ %2112, %2111 ]
  %2140 = phi ptr [ %2122, %2128 ], [ %4, %2111 ]
  %2141 = phi i64 [ %2121, %2128 ], [ 0, %2111 ]
  %2142 = add nsw i32 %2139, 1
  store i32 %2142, ptr %2140, align 4, !tbaa !5
  %2143 = getelementptr inbounds i32, ptr %7, i64 %2141
  %2144 = load i32, ptr %2143, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %6, i64 %2141
  br label %2156

2146:                                             ; preds = %2120
  %2147 = icmp eq i32 %2123, %2126
  br i1 %2147, label %2148, label %2154

2148:                                             ; preds = %2146
  store i32 0, ptr %2122, align 4, !tbaa !5
  %2149 = getelementptr inbounds i32, ptr %8, i64 %2121
  %2150 = load i32, ptr %2149, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %6, i64 %2121
  store i32 %2150, ptr %2151, align 4, !tbaa !5
  %2152 = add nuw nsw i64 %2121, 1
  %2153 = icmp eq i64 %2152, %1871
  br i1 %2153, label %2161, label %2120, !llvm.loop !552

2154:                                             ; preds = %2116, %2146
  %2155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2156:                                             ; preds = %2129, %2138
  %2157 = phi ptr [ %2145, %2138 ], [ %2122, %2129 ]
  %2158 = phi i32 [ %2144, %2138 ], [ 1, %2129 ]
  %2159 = load i32, ptr %2157, align 4, !tbaa !5
  %2160 = add nsw i32 %2159, %2158
  store i32 %2160, ptr %2157, align 4, !tbaa !5
  br label %2161

2161:                                             ; preds = %2148, %2156, %2118, %2099
  %2162 = icmp eq i32 %2110, %5
  br i1 %2162, label %3079, label %2021, !llvm.loop !553

2163:                                             ; preds = %1859
  %2164 = getelementptr inbounds i32, ptr %3, i64 %19
  %2165 = load i32, ptr %2164, align 4, !tbaa !5
  %2166 = icmp eq i32 %2165, 0
  %2167 = icmp sgt i32 %5, 0
  br i1 %2166, label %2177, label %2168

2168:                                             ; preds = %2163
  br i1 %2167, label %2169, label %3079

2169:                                             ; preds = %2168
  %2170 = icmp sgt i32 %13, 1
  %2171 = icmp sgt i32 %13, 0
  %2172 = add i32 %13, -2
  %2173 = zext i32 %2172 to i64
  %2174 = zext i32 %13 to i64
  %2175 = add nuw i32 %5, 1
  %2176 = icmp eq i32 %13, 1
  br label %2321

2177:                                             ; preds = %2163
  br i1 %2167, label %2178, label %3079

2178:                                             ; preds = %2177
  %2179 = icmp sgt i32 %13, 1
  %2180 = icmp sgt i32 %13, 0
  %2181 = add i32 %13, -2
  %2182 = zext i32 %2181 to i64
  %2183 = zext i32 %13 to i64
  %2184 = add nuw i32 %5, 1
  %2185 = icmp eq i32 %13, 1
  br label %2186

2186:                                             ; preds = %2178, %2319
  %2187 = phi float [ 0.000000e+00, %2178 ], [ %2269, %2319 ]
  %2188 = phi i32 [ 0, %2178 ], [ %2271, %2319 ]
  %2189 = phi double [ 0.000000e+00, %2178 ], [ %2270, %2319 ]
  %2190 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2179, label %2191, label %2260

2191:                                             ; preds = %2186, %2250
  %2192 = phi i32 [ %2259, %2250 ], [ 0, %2186 ]
  %2193 = phi i64 [ %2201, %2250 ], [ %2183, %2186 ]
  %2194 = phi i64 [ %2258, %2250 ], [ %2182, %2186 ]
  %2195 = phi i32 [ %2256, %2250 ], [ %2190, %2186 ]
  %2196 = sub i32 %2181, %2192
  %2197 = tail call i32 @llvm.smin.i32(i32 %2196, i32 0)
  %2198 = sub i32 %2196, %2197
  %2199 = zext i32 %2198 to i64
  %2200 = add nuw nsw i64 %2199, 1
  %2201 = add nsw i64 %2193, -1
  %2202 = icmp ult i32 %2198, 31
  br i1 %2202, label %2238, label %2203

2203:                                             ; preds = %2191
  %2204 = and i64 %2200, 8589934560
  %2205 = sub i64 %2194, %2204
  br label %2206

2206:                                             ; preds = %2206, %2203
  %2207 = phi i64 [ 0, %2203 ], [ %2230, %2206 ]
  %2208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2203 ], [ %2226, %2206 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2203 ], [ %2227, %2206 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2203 ], [ %2228, %2206 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2203 ], [ %2229, %2206 ]
  %2212 = sub i64 %2194, %2207
  %2213 = getelementptr inbounds i32, ptr %9, i64 %2212
  %2214 = getelementptr inbounds i32, ptr %2213, i64 -7
  %2215 = load <8 x i32>, ptr %2214, align 4, !tbaa !5
  %2216 = shufflevector <8 x i32> %2215, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2217 = getelementptr inbounds i32, ptr %2213, i64 -15
  %2218 = load <8 x i32>, ptr %2217, align 4, !tbaa !5
  %2219 = shufflevector <8 x i32> %2218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2220 = getelementptr inbounds i32, ptr %2213, i64 -23
  %2221 = load <8 x i32>, ptr %2220, align 4, !tbaa !5
  %2222 = shufflevector <8 x i32> %2221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2223 = getelementptr inbounds i32, ptr %2213, i64 -31
  %2224 = load <8 x i32>, ptr %2223, align 4, !tbaa !5
  %2225 = shufflevector <8 x i32> %2224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2226 = mul <8 x i32> %2216, %2208
  %2227 = mul <8 x i32> %2219, %2209
  %2228 = mul <8 x i32> %2222, %2210
  %2229 = mul <8 x i32> %2225, %2211
  %2230 = add nuw i64 %2207, 32
  %2231 = icmp eq i64 %2230, %2204
  br i1 %2231, label %2232, label %2206, !llvm.loop !554

2232:                                             ; preds = %2206
  %2233 = mul <8 x i32> %2227, %2226
  %2234 = mul <8 x i32> %2228, %2233
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2235)
  %2237 = icmp eq i64 %2200, %2204
  br i1 %2237, label %2250, label %2238

2238:                                             ; preds = %2191, %2232
  %2239 = phi i64 [ %2194, %2191 ], [ %2205, %2232 ]
  %2240 = phi i32 [ 1, %2191 ], [ %2236, %2232 ]
  br label %2241

2241:                                             ; preds = %2238, %2241
  %2242 = phi i64 [ %2247, %2241 ], [ %2239, %2238 ]
  %2243 = phi i32 [ %2246, %2241 ], [ %2240, %2238 ]
  %2244 = getelementptr inbounds i32, ptr %9, i64 %2242
  %2245 = load i32, ptr %2244, align 4, !tbaa !5
  %2246 = mul nsw i32 %2245, %2243
  %2247 = add nsw i64 %2242, -1
  %2248 = trunc i64 %2242 to i32
  %2249 = icmp sgt i32 %2248, 0
  br i1 %2249, label %2241, label %2250, !llvm.loop !555

2250:                                             ; preds = %2241, %2232
  %2251 = phi i32 [ %2236, %2232 ], [ %2246, %2241 ]
  %2252 = and i64 %2201, 4294967295
  %2253 = getelementptr inbounds i32, ptr %6, i64 %2252
  %2254 = load i32, ptr %2253, align 4, !tbaa !5
  %2255 = mul nsw i32 %2254, %2251
  %2256 = add nsw i32 %2255, %2195
  %2257 = icmp sgt i64 %2193, 2
  %2258 = add nsw i64 %2194, -1
  %2259 = add i32 %2192, 1
  br i1 %2257, label %2191, label %2260, !llvm.loop !556

2260:                                             ; preds = %2250, %2186
  %2261 = phi i32 [ %2190, %2186 ], [ %2256, %2250 ]
  %2262 = sext i32 %2261 to i64
  %2263 = getelementptr inbounds i16, ptr %1849, i64 %2262
  %2264 = load i16, ptr %2263, align 2, !tbaa !78
  %2265 = sitofp i16 %2264 to float
  %2266 = icmp slt i16 %2264, 0
  %2267 = fneg fast float %2265
  %2268 = select fast i1 %2266, float %2267, float %2265
  %2269 = fadd fast float %2268, %2187
  %2270 = fadd fast double %2189, 1.000000e+00
  %2271 = add nuw nsw i32 %2188, 1
  br i1 %2180, label %2272, label %2319

2272:                                             ; preds = %2260
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2185, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2183
  br i1 %2311, label %2319, label %2281, !llvm.loop !557

2312:                                             ; preds = %2277, %2304
  store float %2269, ptr %1851, align 4, !tbaa !162
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2260
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %3077, label %2186, !llvm.loop !558

2321:                                             ; preds = %2169, %2459
  %2322 = phi float [ 0.000000e+00, %2169 ], [ %2407, %2459 ]
  %2323 = phi i32 [ 0, %2169 ], [ %2408, %2459 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2170, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2174, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2173, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2172, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !559

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !560

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !561

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds i16, ptr %1849, i64 %2400
  %2402 = load i16, ptr %2401, align 2, !tbaa !78
  %2403 = sitofp i16 %2402 to float
  %2404 = icmp slt i16 %2402, 0
  %2405 = fneg fast float %2403
  %2406 = select fast i1 %2404, float %2405, float %2403
  %2407 = fadd fast float %2406, %2322
  store float %2407, ptr %1851, align 4, !tbaa !162
  %2408 = add nuw nsw i32 %2323, 1
  br i1 %2171, label %2409, label %2459

2409:                                             ; preds = %2399
  %2410 = load i32, ptr %4, align 4, !tbaa !5
  %2411 = load i32, ptr %12, align 4, !tbaa !5
  %2412 = add nsw i32 %2411, -1
  %2413 = icmp slt i32 %2410, %2412
  br i1 %2413, label %2436, label %2414

2414:                                             ; preds = %2409
  %2415 = icmp eq i32 %2410, %2412
  br i1 %2415, label %2416, label %2452

2416:                                             ; preds = %2414
  store i32 0, ptr %4, align 4, !tbaa !5
  %2417 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2417, ptr %6, align 4, !tbaa !5
  br i1 %2176, label %2459, label %2418

2418:                                             ; preds = %2416, %2446
  %2419 = phi i64 [ %2450, %2446 ], [ 1, %2416 ]
  %2420 = getelementptr inbounds i32, ptr %4, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = getelementptr inbounds i32, ptr %12, i64 %2419
  %2423 = load i32, ptr %2422, align 4, !tbaa !5
  %2424 = add nsw i32 %2423, -1
  %2425 = icmp slt i32 %2421, %2424
  br i1 %2425, label %2426, label %2444

2426:                                             ; preds = %2418
  br i1 %2413, label %2436, label %2427

2427:                                             ; preds = %2426
  %2428 = shl i64 %2419, 32
  %2429 = add i64 %2428, -4294967296
  %2430 = ashr exact i64 %2429, 32
  %2431 = getelementptr inbounds i32, ptr %7, i64 %2430
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2434 = load i32, ptr %2433, align 4, !tbaa !5
  %2435 = add nsw i32 %2434, %2432
  store i32 %2435, ptr %2433, align 4, !tbaa !5
  br label %2454

2436:                                             ; preds = %2409, %2426
  %2437 = phi i32 [ %2421, %2426 ], [ %2410, %2409 ]
  %2438 = phi ptr [ %2420, %2426 ], [ %4, %2409 ]
  %2439 = phi i64 [ %2419, %2426 ], [ 0, %2409 ]
  %2440 = add nsw i32 %2437, 1
  store i32 %2440, ptr %2438, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %7, i64 %2439
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2439
  br label %2454

2444:                                             ; preds = %2418
  %2445 = icmp eq i32 %2421, %2424
  br i1 %2445, label %2446, label %2452

2446:                                             ; preds = %2444
  store i32 0, ptr %2420, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %8, i64 %2419
  %2448 = load i32, ptr %2447, align 4, !tbaa !5
  %2449 = getelementptr inbounds i32, ptr %6, i64 %2419
  store i32 %2448, ptr %2449, align 4, !tbaa !5
  %2450 = add nuw nsw i64 %2419, 1
  %2451 = icmp eq i64 %2450, %2174
  br i1 %2451, label %2459, label %2418, !llvm.loop !562

2452:                                             ; preds = %2414, %2444
  %2453 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2454:                                             ; preds = %2427, %2436
  %2455 = phi ptr [ %2443, %2436 ], [ %2420, %2427 ]
  %2456 = phi i32 [ %2442, %2436 ], [ 1, %2427 ]
  %2457 = load i32, ptr %2455, align 4, !tbaa !5
  %2458 = add nsw i32 %2457, %2456
  store i32 %2458, ptr %2455, align 4, !tbaa !5
  br label %2459

2459:                                             ; preds = %2446, %2454, %2416, %2399
  %2460 = icmp eq i32 %2408, %5
  br i1 %2460, label %3079, label %2321, !llvm.loop !563

2461:                                             ; preds = %1859
  %2462 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3079

2463:                                             ; preds = %18
  %2464 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  %2466 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2467 = load ptr, ptr %2466, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2467, align 8, !tbaa !18
  %2468 = icmp eq i32 %13, 0
  br i1 %2468, label %2469, label %2475

2469:                                             ; preds = %2463
  %2470 = load i16, ptr %2465, align 2, !tbaa !78
  %2471 = sitofp i16 %2470 to double
  %2472 = icmp slt i16 %2470, 0
  %2473 = fneg fast double %2471
  %2474 = select fast i1 %2472, double %2473, double %2471
  store double %2474, ptr %2467, align 8, !tbaa !18
  br label %3079

2475:                                             ; preds = %2463
  switch i32 %1, label %3073 [
    i32 1, label %2476
    i32 0, label %2775
  ]

2476:                                             ; preds = %2475
  %2477 = getelementptr inbounds i32, ptr %3, i64 %19
  %2478 = load i32, ptr %2477, align 4, !tbaa !5
  %2479 = icmp eq i32 %2478, 0
  %2480 = icmp sgt i32 %5, 0
  br i1 %2479, label %2490, label %2481

2481:                                             ; preds = %2476
  br i1 %2480, label %2482, label %3079

2482:                                             ; preds = %2481
  %2483 = icmp sgt i32 %13, 1
  %2484 = icmp sgt i32 %13, 0
  %2485 = add i32 %13, -2
  %2486 = zext i32 %2485 to i64
  %2487 = zext i32 %13 to i64
  %2488 = add nuw i32 %5, 1
  %2489 = icmp eq i32 %13, 1
  br label %2635

2490:                                             ; preds = %2476
  br i1 %2480, label %2491, label %3079

2491:                                             ; preds = %2490
  %2492 = icmp sgt i32 %13, 1
  %2493 = icmp sgt i32 %13, 0
  %2494 = add i32 %13, -2
  %2495 = zext i32 %2494 to i64
  %2496 = zext i32 %13 to i64
  %2497 = add nuw i32 %5, 1
  %2498 = icmp eq i32 %13, 1
  br label %2499

2499:                                             ; preds = %2491, %2633
  %2500 = phi double [ 0.000000e+00, %2491 ], [ %2583, %2633 ]
  %2501 = phi i32 [ 0, %2491 ], [ %2585, %2633 ]
  %2502 = phi double [ 0.000000e+00, %2491 ], [ %2584, %2633 ]
  %2503 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2492, label %2504, label %2573

2504:                                             ; preds = %2499, %2563
  %2505 = phi i32 [ %2572, %2563 ], [ 0, %2499 ]
  %2506 = phi i64 [ %2514, %2563 ], [ %2496, %2499 ]
  %2507 = phi i64 [ %2571, %2563 ], [ %2495, %2499 ]
  %2508 = phi i32 [ %2569, %2563 ], [ %2503, %2499 ]
  %2509 = sub i32 %2494, %2505
  %2510 = tail call i32 @llvm.smin.i32(i32 %2509, i32 0)
  %2511 = sub i32 %2509, %2510
  %2512 = zext i32 %2511 to i64
  %2513 = add nuw nsw i64 %2512, 1
  %2514 = add nsw i64 %2506, -1
  %2515 = icmp ult i32 %2511, 31
  br i1 %2515, label %2551, label %2516

2516:                                             ; preds = %2504
  %2517 = and i64 %2513, 8589934560
  %2518 = sub i64 %2507, %2517
  br label %2519

2519:                                             ; preds = %2519, %2516
  %2520 = phi i64 [ 0, %2516 ], [ %2543, %2519 ]
  %2521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2516 ], [ %2539, %2519 ]
  %2522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2516 ], [ %2540, %2519 ]
  %2523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2516 ], [ %2541, %2519 ]
  %2524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2516 ], [ %2542, %2519 ]
  %2525 = sub i64 %2507, %2520
  %2526 = getelementptr inbounds i32, ptr %9, i64 %2525
  %2527 = getelementptr inbounds i32, ptr %2526, i64 -7
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = getelementptr inbounds i32, ptr %2526, i64 -15
  %2531 = load <8 x i32>, ptr %2530, align 4, !tbaa !5
  %2532 = shufflevector <8 x i32> %2531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2533 = getelementptr inbounds i32, ptr %2526, i64 -23
  %2534 = load <8 x i32>, ptr %2533, align 4, !tbaa !5
  %2535 = shufflevector <8 x i32> %2534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2536 = getelementptr inbounds i32, ptr %2526, i64 -31
  %2537 = load <8 x i32>, ptr %2536, align 4, !tbaa !5
  %2538 = shufflevector <8 x i32> %2537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2539 = mul <8 x i32> %2529, %2521
  %2540 = mul <8 x i32> %2532, %2522
  %2541 = mul <8 x i32> %2535, %2523
  %2542 = mul <8 x i32> %2538, %2524
  %2543 = add nuw i64 %2520, 32
  %2544 = icmp eq i64 %2543, %2517
  br i1 %2544, label %2545, label %2519, !llvm.loop !564

2545:                                             ; preds = %2519
  %2546 = mul <8 x i32> %2540, %2539
  %2547 = mul <8 x i32> %2541, %2546
  %2548 = mul <8 x i32> %2542, %2547
  %2549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2548)
  %2550 = icmp eq i64 %2513, %2517
  br i1 %2550, label %2563, label %2551

2551:                                             ; preds = %2504, %2545
  %2552 = phi i64 [ %2507, %2504 ], [ %2518, %2545 ]
  %2553 = phi i32 [ 1, %2504 ], [ %2549, %2545 ]
  br label %2554

2554:                                             ; preds = %2551, %2554
  %2555 = phi i64 [ %2560, %2554 ], [ %2552, %2551 ]
  %2556 = phi i32 [ %2559, %2554 ], [ %2553, %2551 ]
  %2557 = getelementptr inbounds i32, ptr %9, i64 %2555
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = mul nsw i32 %2558, %2556
  %2560 = add nsw i64 %2555, -1
  %2561 = trunc i64 %2555 to i32
  %2562 = icmp sgt i32 %2561, 0
  br i1 %2562, label %2554, label %2563, !llvm.loop !565

2563:                                             ; preds = %2554, %2545
  %2564 = phi i32 [ %2549, %2545 ], [ %2559, %2554 ]
  %2565 = and i64 %2514, 4294967295
  %2566 = getelementptr inbounds i32, ptr %6, i64 %2565
  %2567 = load i32, ptr %2566, align 4, !tbaa !5
  %2568 = mul nsw i32 %2567, %2564
  %2569 = add nsw i32 %2568, %2508
  %2570 = icmp sgt i64 %2506, 2
  %2571 = add nsw i64 %2507, -1
  %2572 = add i32 %2505, 1
  br i1 %2570, label %2504, label %2573, !llvm.loop !566

2573:                                             ; preds = %2563, %2499
  %2574 = phi i32 [ %2503, %2499 ], [ %2569, %2563 ]
  %2575 = sext i32 %2574 to i64
  %2576 = getelementptr inbounds double, ptr %2, i64 %2575
  %2577 = load double, ptr %2576, align 8, !tbaa !18
  %2578 = getelementptr inbounds i16, ptr %2465, i64 %2575
  %2579 = load i16, ptr %2578, align 2, !tbaa !78
  %2580 = sitofp i16 %2579 to double
  %2581 = fmul fast double %2577, %2580
  %2582 = tail call fast double @llvm.fabs.f64(double %2581)
  %2583 = fadd fast double %2582, %2500
  store double %2583, ptr %2467, align 8, !tbaa !18
  %2584 = fadd fast double %2577, %2502
  %2585 = add nuw nsw i32 %2501, 1
  br i1 %2493, label %2586, label %2633

2586:                                             ; preds = %2573
  %2587 = load i32, ptr %4, align 4, !tbaa !5
  %2588 = load i32, ptr %12, align 4, !tbaa !5
  %2589 = add nsw i32 %2588, -1
  %2590 = icmp slt i32 %2587, %2589
  br i1 %2590, label %2610, label %2591

2591:                                             ; preds = %2586
  %2592 = icmp eq i32 %2587, %2589
  br i1 %2592, label %2593, label %2626

2593:                                             ; preds = %2591
  store i32 0, ptr %4, align 4, !tbaa !5
  %2594 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2594, ptr %6, align 4, !tbaa !5
  br i1 %2498, label %2633, label %2595

2595:                                             ; preds = %2593, %2620
  %2596 = phi i64 [ %2624, %2620 ], [ 1, %2593 ]
  %2597 = getelementptr inbounds i32, ptr %4, i64 %2596
  %2598 = load i32, ptr %2597, align 4, !tbaa !5
  %2599 = getelementptr inbounds i32, ptr %12, i64 %2596
  %2600 = load i32, ptr %2599, align 4, !tbaa !5
  %2601 = add nsw i32 %2600, -1
  %2602 = icmp slt i32 %2598, %2601
  br i1 %2602, label %2603, label %2618

2603:                                             ; preds = %2595
  br i1 %2590, label %2610, label %2604

2604:                                             ; preds = %2603
  %2605 = getelementptr inbounds i32, ptr %7, i64 %2596
  %2606 = load i32, ptr %2605, align 4, !tbaa !5
  %2607 = getelementptr inbounds i32, ptr %6, i64 %2596
  %2608 = load i32, ptr %2607, align 4, !tbaa !5
  %2609 = add nsw i32 %2608, %2606
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  br label %2628

2610:                                             ; preds = %2586, %2603
  %2611 = phi i32 [ %2598, %2603 ], [ %2587, %2586 ]
  %2612 = phi ptr [ %2597, %2603 ], [ %4, %2586 ]
  %2613 = phi i64 [ %2596, %2603 ], [ 0, %2586 ]
  %2614 = add nsw i32 %2611, 1
  store i32 %2614, ptr %2612, align 4, !tbaa !5
  %2615 = getelementptr inbounds i32, ptr %7, i64 %2613
  %2616 = load i32, ptr %2615, align 4, !tbaa !5
  %2617 = getelementptr inbounds i32, ptr %6, i64 %2613
  br label %2628

2618:                                             ; preds = %2595
  %2619 = icmp eq i32 %2598, %2601
  br i1 %2619, label %2620, label %2626

2620:                                             ; preds = %2618
  store i32 0, ptr %2597, align 4, !tbaa !5
  %2621 = getelementptr inbounds i32, ptr %8, i64 %2596
  %2622 = load i32, ptr %2621, align 4, !tbaa !5
  %2623 = getelementptr inbounds i32, ptr %6, i64 %2596
  store i32 %2622, ptr %2623, align 4, !tbaa !5
  %2624 = add nuw nsw i64 %2596, 1
  %2625 = icmp eq i64 %2624, %2496
  br i1 %2625, label %2633, label %2595, !llvm.loop !567

2626:                                             ; preds = %2591, %2618
  %2627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2628:                                             ; preds = %2604, %2610
  %2629 = phi ptr [ %2617, %2610 ], [ %2597, %2604 ]
  %2630 = phi i32 [ %2616, %2610 ], [ 1, %2604 ]
  %2631 = load i32, ptr %2629, align 4, !tbaa !5
  %2632 = add nsw i32 %2631, %2630
  store i32 %2632, ptr %2629, align 4, !tbaa !5
  br label %2633

2633:                                             ; preds = %2620, %2628, %2593, %2573
  %2634 = icmp eq i32 %2585, %5
  br i1 %2634, label %3079, label %2499, !llvm.loop !568

2635:                                             ; preds = %2482, %2773
  %2636 = phi double [ 0.000000e+00, %2482 ], [ %2721, %2773 ]
  %2637 = phi i32 [ 0, %2482 ], [ %2722, %2773 ]
  %2638 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2483, label %2639, label %2708

2639:                                             ; preds = %2635, %2698
  %2640 = phi i32 [ %2707, %2698 ], [ 0, %2635 ]
  %2641 = phi i64 [ %2649, %2698 ], [ %2487, %2635 ]
  %2642 = phi i64 [ %2706, %2698 ], [ %2486, %2635 ]
  %2643 = phi i32 [ %2704, %2698 ], [ %2638, %2635 ]
  %2644 = sub i32 %2485, %2640
  %2645 = tail call i32 @llvm.smin.i32(i32 %2644, i32 0)
  %2646 = sub i32 %2644, %2645
  %2647 = zext i32 %2646 to i64
  %2648 = add nuw nsw i64 %2647, 1
  %2649 = add nsw i64 %2641, -1
  %2650 = icmp ult i32 %2646, 31
  br i1 %2650, label %2686, label %2651

2651:                                             ; preds = %2639
  %2652 = and i64 %2648, 8589934560
  %2653 = sub i64 %2642, %2652
  br label %2654

2654:                                             ; preds = %2654, %2651
  %2655 = phi i64 [ 0, %2651 ], [ %2678, %2654 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2651 ], [ %2674, %2654 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2651 ], [ %2675, %2654 ]
  %2658 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2651 ], [ %2676, %2654 ]
  %2659 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2651 ], [ %2677, %2654 ]
  %2660 = sub i64 %2642, %2655
  %2661 = getelementptr inbounds i32, ptr %11, i64 %2660
  %2662 = getelementptr inbounds i32, ptr %2661, i64 -7
  %2663 = load <8 x i32>, ptr %2662, align 4, !tbaa !5
  %2664 = shufflevector <8 x i32> %2663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2665 = getelementptr inbounds i32, ptr %2661, i64 -15
  %2666 = load <8 x i32>, ptr %2665, align 4, !tbaa !5
  %2667 = shufflevector <8 x i32> %2666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2668 = getelementptr inbounds i32, ptr %2661, i64 -23
  %2669 = load <8 x i32>, ptr %2668, align 4, !tbaa !5
  %2670 = shufflevector <8 x i32> %2669, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2671 = getelementptr inbounds i32, ptr %2661, i64 -31
  %2672 = load <8 x i32>, ptr %2671, align 4, !tbaa !5
  %2673 = shufflevector <8 x i32> %2672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2674 = mul <8 x i32> %2664, %2656
  %2675 = mul <8 x i32> %2667, %2657
  %2676 = mul <8 x i32> %2670, %2658
  %2677 = mul <8 x i32> %2673, %2659
  %2678 = add nuw i64 %2655, 32
  %2679 = icmp eq i64 %2678, %2652
  br i1 %2679, label %2680, label %2654, !llvm.loop !569

2680:                                             ; preds = %2654
  %2681 = mul <8 x i32> %2675, %2674
  %2682 = mul <8 x i32> %2676, %2681
  %2683 = mul <8 x i32> %2677, %2682
  %2684 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2683)
  %2685 = icmp eq i64 %2648, %2652
  br i1 %2685, label %2698, label %2686

2686:                                             ; preds = %2639, %2680
  %2687 = phi i64 [ %2642, %2639 ], [ %2653, %2680 ]
  %2688 = phi i32 [ 1, %2639 ], [ %2684, %2680 ]
  br label %2689

2689:                                             ; preds = %2686, %2689
  %2690 = phi i64 [ %2695, %2689 ], [ %2687, %2686 ]
  %2691 = phi i32 [ %2694, %2689 ], [ %2688, %2686 ]
  %2692 = getelementptr inbounds i32, ptr %11, i64 %2690
  %2693 = load i32, ptr %2692, align 4, !tbaa !5
  %2694 = mul nsw i32 %2693, %2691
  %2695 = add nsw i64 %2690, -1
  %2696 = trunc i64 %2690 to i32
  %2697 = icmp sgt i32 %2696, 0
  br i1 %2697, label %2689, label %2698, !llvm.loop !570

2698:                                             ; preds = %2689, %2680
  %2699 = phi i32 [ %2684, %2680 ], [ %2694, %2689 ]
  %2700 = and i64 %2649, 4294967295
  %2701 = getelementptr inbounds i32, ptr %6, i64 %2700
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = mul nsw i32 %2702, %2699
  %2704 = add nsw i32 %2703, %2643
  %2705 = icmp sgt i64 %2641, 2
  %2706 = add nsw i64 %2642, -1
  %2707 = add i32 %2640, 1
  br i1 %2705, label %2639, label %2708, !llvm.loop !571

2708:                                             ; preds = %2698, %2635
  %2709 = phi i32 [ %2638, %2635 ], [ %2704, %2698 ]
  %2710 = icmp slt i32 %2709, %5
  br i1 %2710, label %2713, label %2711

2711:                                             ; preds = %2708
  %2712 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

2713:                                             ; preds = %2708
  %2714 = sext i32 %2709 to i64
  %2715 = getelementptr inbounds i16, ptr %2465, i64 %2714
  %2716 = load i16, ptr %2715, align 2, !tbaa !78
  %2717 = sitofp i16 %2716 to double
  %2718 = icmp slt i16 %2716, 0
  %2719 = fneg fast double %2717
  %2720 = select fast i1 %2718, double %2719, double %2717
  %2721 = fadd fast double %2720, %2636
  store double %2721, ptr %2467, align 8, !tbaa !18
  %2722 = add nuw nsw i32 %2637, 1
  br i1 %2484, label %2723, label %2773

2723:                                             ; preds = %2713
  %2724 = load i32, ptr %4, align 4, !tbaa !5
  %2725 = load i32, ptr %12, align 4, !tbaa !5
  %2726 = add nsw i32 %2725, -1
  %2727 = icmp slt i32 %2724, %2726
  br i1 %2727, label %2750, label %2728

2728:                                             ; preds = %2723
  %2729 = icmp eq i32 %2724, %2726
  br i1 %2729, label %2730, label %2766

2730:                                             ; preds = %2728
  store i32 0, ptr %4, align 4, !tbaa !5
  %2731 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2731, ptr %6, align 4, !tbaa !5
  br i1 %2489, label %2773, label %2732

2732:                                             ; preds = %2730, %2760
  %2733 = phi i64 [ %2764, %2760 ], [ 1, %2730 ]
  %2734 = getelementptr inbounds i32, ptr %4, i64 %2733
  %2735 = load i32, ptr %2734, align 4, !tbaa !5
  %2736 = getelementptr inbounds i32, ptr %12, i64 %2733
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = add nsw i32 %2737, -1
  %2739 = icmp slt i32 %2735, %2738
  br i1 %2739, label %2740, label %2758

2740:                                             ; preds = %2732
  br i1 %2727, label %2750, label %2741

2741:                                             ; preds = %2740
  %2742 = shl i64 %2733, 32
  %2743 = add i64 %2742, -4294967296
  %2744 = ashr exact i64 %2743, 32
  %2745 = getelementptr inbounds i32, ptr %7, i64 %2744
  %2746 = load i32, ptr %2745, align 4, !tbaa !5
  %2747 = getelementptr inbounds i32, ptr %6, i64 %2733
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = add nsw i32 %2748, %2746
  store i32 %2749, ptr %2747, align 4, !tbaa !5
  br label %2768

2750:                                             ; preds = %2723, %2740
  %2751 = phi i32 [ %2735, %2740 ], [ %2724, %2723 ]
  %2752 = phi ptr [ %2734, %2740 ], [ %4, %2723 ]
  %2753 = phi i64 [ %2733, %2740 ], [ 0, %2723 ]
  %2754 = add nsw i32 %2751, 1
  store i32 %2754, ptr %2752, align 4, !tbaa !5
  %2755 = getelementptr inbounds i32, ptr %7, i64 %2753
  %2756 = load i32, ptr %2755, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %6, i64 %2753
  br label %2768

2758:                                             ; preds = %2732
  %2759 = icmp eq i32 %2735, %2738
  br i1 %2759, label %2760, label %2766

2760:                                             ; preds = %2758
  store i32 0, ptr %2734, align 4, !tbaa !5
  %2761 = getelementptr inbounds i32, ptr %8, i64 %2733
  %2762 = load i32, ptr %2761, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %6, i64 %2733
  store i32 %2762, ptr %2763, align 4, !tbaa !5
  %2764 = add nuw nsw i64 %2733, 1
  %2765 = icmp eq i64 %2764, %2487
  br i1 %2765, label %2773, label %2732, !llvm.loop !572

2766:                                             ; preds = %2728, %2758
  %2767 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2768:                                             ; preds = %2741, %2750
  %2769 = phi ptr [ %2757, %2750 ], [ %2734, %2741 ]
  %2770 = phi i32 [ %2756, %2750 ], [ 1, %2741 ]
  %2771 = load i32, ptr %2769, align 4, !tbaa !5
  %2772 = add nsw i32 %2771, %2770
  store i32 %2772, ptr %2769, align 4, !tbaa !5
  br label %2773

2773:                                             ; preds = %2760, %2768, %2730, %2713
  %2774 = icmp eq i32 %2722, %5
  br i1 %2774, label %3079, label %2635, !llvm.loop !573

2775:                                             ; preds = %2475
  %2776 = getelementptr inbounds i32, ptr %3, i64 %19
  %2777 = load i32, ptr %2776, align 4, !tbaa !5
  %2778 = icmp eq i32 %2777, 0
  %2779 = icmp sgt i32 %5, 0
  br i1 %2778, label %2789, label %2780

2780:                                             ; preds = %2775
  br i1 %2779, label %2781, label %3079

2781:                                             ; preds = %2780
  %2782 = icmp sgt i32 %13, 1
  %2783 = icmp sgt i32 %13, 0
  %2784 = add i32 %13, -2
  %2785 = zext i32 %2784 to i64
  %2786 = zext i32 %13 to i64
  %2787 = add nuw i32 %5, 1
  %2788 = icmp eq i32 %13, 1
  br label %2933

2789:                                             ; preds = %2775
  br i1 %2779, label %2790, label %3079

2790:                                             ; preds = %2789
  %2791 = icmp sgt i32 %13, 1
  %2792 = icmp sgt i32 %13, 0
  %2793 = add i32 %13, -2
  %2794 = zext i32 %2793 to i64
  %2795 = zext i32 %13 to i64
  %2796 = add nuw i32 %5, 1
  %2797 = icmp eq i32 %13, 1
  br label %2798

2798:                                             ; preds = %2790, %2931
  %2799 = phi double [ 0.000000e+00, %2790 ], [ %2881, %2931 ]
  %2800 = phi i32 [ 0, %2790 ], [ %2883, %2931 ]
  %2801 = phi double [ 0.000000e+00, %2790 ], [ %2882, %2931 ]
  %2802 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2791, label %2803, label %2872

2803:                                             ; preds = %2798, %2862
  %2804 = phi i32 [ %2871, %2862 ], [ 0, %2798 ]
  %2805 = phi i64 [ %2813, %2862 ], [ %2795, %2798 ]
  %2806 = phi i64 [ %2870, %2862 ], [ %2794, %2798 ]
  %2807 = phi i32 [ %2868, %2862 ], [ %2802, %2798 ]
  %2808 = sub i32 %2793, %2804
  %2809 = tail call i32 @llvm.smin.i32(i32 %2808, i32 0)
  %2810 = sub i32 %2808, %2809
  %2811 = zext i32 %2810 to i64
  %2812 = add nuw nsw i64 %2811, 1
  %2813 = add nsw i64 %2805, -1
  %2814 = icmp ult i32 %2810, 31
  br i1 %2814, label %2850, label %2815

2815:                                             ; preds = %2803
  %2816 = and i64 %2812, 8589934560
  %2817 = sub i64 %2806, %2816
  br label %2818

2818:                                             ; preds = %2818, %2815
  %2819 = phi i64 [ 0, %2815 ], [ %2842, %2818 ]
  %2820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2815 ], [ %2838, %2818 ]
  %2821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2815 ], [ %2839, %2818 ]
  %2822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2815 ], [ %2840, %2818 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2815 ], [ %2841, %2818 ]
  %2824 = sub i64 %2806, %2819
  %2825 = getelementptr inbounds i32, ptr %9, i64 %2824
  %2826 = getelementptr inbounds i32, ptr %2825, i64 -7
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !5
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2825, i64 -15
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !5
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = getelementptr inbounds i32, ptr %2825, i64 -23
  %2833 = load <8 x i32>, ptr %2832, align 4, !tbaa !5
  %2834 = shufflevector <8 x i32> %2833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2835 = getelementptr inbounds i32, ptr %2825, i64 -31
  %2836 = load <8 x i32>, ptr %2835, align 4, !tbaa !5
  %2837 = shufflevector <8 x i32> %2836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2838 = mul <8 x i32> %2828, %2820
  %2839 = mul <8 x i32> %2831, %2821
  %2840 = mul <8 x i32> %2834, %2822
  %2841 = mul <8 x i32> %2837, %2823
  %2842 = add nuw i64 %2819, 32
  %2843 = icmp eq i64 %2842, %2816
  br i1 %2843, label %2844, label %2818, !llvm.loop !574

2844:                                             ; preds = %2818
  %2845 = mul <8 x i32> %2839, %2838
  %2846 = mul <8 x i32> %2840, %2845
  %2847 = mul <8 x i32> %2841, %2846
  %2848 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2847)
  %2849 = icmp eq i64 %2812, %2816
  br i1 %2849, label %2862, label %2850

2850:                                             ; preds = %2803, %2844
  %2851 = phi i64 [ %2806, %2803 ], [ %2817, %2844 ]
  %2852 = phi i32 [ 1, %2803 ], [ %2848, %2844 ]
  br label %2853

2853:                                             ; preds = %2850, %2853
  %2854 = phi i64 [ %2859, %2853 ], [ %2851, %2850 ]
  %2855 = phi i32 [ %2858, %2853 ], [ %2852, %2850 ]
  %2856 = getelementptr inbounds i32, ptr %9, i64 %2854
  %2857 = load i32, ptr %2856, align 4, !tbaa !5
  %2858 = mul nsw i32 %2857, %2855
  %2859 = add nsw i64 %2854, -1
  %2860 = trunc i64 %2854 to i32
  %2861 = icmp sgt i32 %2860, 0
  br i1 %2861, label %2853, label %2862, !llvm.loop !575

2862:                                             ; preds = %2853, %2844
  %2863 = phi i32 [ %2848, %2844 ], [ %2858, %2853 ]
  %2864 = and i64 %2813, 4294967295
  %2865 = getelementptr inbounds i32, ptr %6, i64 %2864
  %2866 = load i32, ptr %2865, align 4, !tbaa !5
  %2867 = mul nsw i32 %2866, %2863
  %2868 = add nsw i32 %2867, %2807
  %2869 = icmp sgt i64 %2805, 2
  %2870 = add nsw i64 %2806, -1
  %2871 = add i32 %2804, 1
  br i1 %2869, label %2803, label %2872, !llvm.loop !576

2872:                                             ; preds = %2862, %2798
  %2873 = phi i32 [ %2802, %2798 ], [ %2868, %2862 ]
  %2874 = sext i32 %2873 to i64
  %2875 = getelementptr inbounds i16, ptr %2465, i64 %2874
  %2876 = load i16, ptr %2875, align 2, !tbaa !78
  %2877 = sitofp i16 %2876 to double
  %2878 = icmp slt i16 %2876, 0
  %2879 = fneg fast double %2877
  %2880 = select fast i1 %2878, double %2879, double %2877
  %2881 = fadd fast double %2880, %2799
  %2882 = fadd fast double %2801, 1.000000e+00
  %2883 = add nuw nsw i32 %2800, 1
  br i1 %2792, label %2884, label %2931

2884:                                             ; preds = %2872
  %2885 = load i32, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %12, align 4, !tbaa !5
  %2887 = add nsw i32 %2886, -1
  %2888 = icmp slt i32 %2885, %2887
  br i1 %2888, label %2908, label %2889

2889:                                             ; preds = %2884
  %2890 = icmp eq i32 %2885, %2887
  br i1 %2890, label %2891, label %2924

2891:                                             ; preds = %2889
  store i32 0, ptr %4, align 4, !tbaa !5
  %2892 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2892, ptr %6, align 4, !tbaa !5
  br i1 %2797, label %2931, label %2893

2893:                                             ; preds = %2891, %2918
  %2894 = phi i64 [ %2922, %2918 ], [ 1, %2891 ]
  %2895 = getelementptr inbounds i32, ptr %4, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = getelementptr inbounds i32, ptr %12, i64 %2894
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2896, %2899
  br i1 %2900, label %2901, label %2916

2901:                                             ; preds = %2893
  br i1 %2888, label %2908, label %2902

2902:                                             ; preds = %2901
  %2903 = getelementptr inbounds i32, ptr %7, i64 %2894
  %2904 = load i32, ptr %2903, align 4, !tbaa !5
  %2905 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2906 = load i32, ptr %2905, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2904
  store i32 %2907, ptr %2905, align 4, !tbaa !5
  br label %2926

2908:                                             ; preds = %2884, %2901
  %2909 = phi i32 [ %2896, %2901 ], [ %2885, %2884 ]
  %2910 = phi ptr [ %2895, %2901 ], [ %4, %2884 ]
  %2911 = phi i64 [ %2894, %2901 ], [ 0, %2884 ]
  %2912 = add nsw i32 %2909, 1
  store i32 %2912, ptr %2910, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %7, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2911
  br label %2926

2916:                                             ; preds = %2893
  %2917 = icmp eq i32 %2896, %2899
  br i1 %2917, label %2918, label %2924

2918:                                             ; preds = %2916
  store i32 0, ptr %2895, align 4, !tbaa !5
  %2919 = getelementptr inbounds i32, ptr %8, i64 %2894
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = getelementptr inbounds i32, ptr %6, i64 %2894
  store i32 %2920, ptr %2921, align 4, !tbaa !5
  %2922 = add nuw nsw i64 %2894, 1
  %2923 = icmp eq i64 %2922, %2795
  br i1 %2923, label %2931, label %2893, !llvm.loop !577

2924:                                             ; preds = %2889, %2916
  store double %2881, ptr %2467, align 8, !tbaa !18
  %2925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

2926:                                             ; preds = %2902, %2908
  %2927 = phi ptr [ %2915, %2908 ], [ %2895, %2902 ]
  %2928 = phi i32 [ %2914, %2908 ], [ 1, %2902 ]
  %2929 = load i32, ptr %2927, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, %2928
  store i32 %2930, ptr %2927, align 4, !tbaa !5
  br label %2931

2931:                                             ; preds = %2918, %2926, %2891, %2872
  %2932 = icmp eq i32 %2883, %5
  br i1 %2932, label %3078, label %2798, !llvm.loop !578

2933:                                             ; preds = %2781, %3071
  %2934 = phi double [ 0.000000e+00, %2781 ], [ %3019, %3071 ]
  %2935 = phi i32 [ 0, %2781 ], [ %3020, %3071 ]
  %2936 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2782, label %2937, label %3006

2937:                                             ; preds = %2933, %2996
  %2938 = phi i32 [ %3005, %2996 ], [ 0, %2933 ]
  %2939 = phi i64 [ %2947, %2996 ], [ %2786, %2933 ]
  %2940 = phi i64 [ %3004, %2996 ], [ %2785, %2933 ]
  %2941 = phi i32 [ %3002, %2996 ], [ %2936, %2933 ]
  %2942 = sub i32 %2784, %2938
  %2943 = tail call i32 @llvm.smin.i32(i32 %2942, i32 0)
  %2944 = sub i32 %2942, %2943
  %2945 = zext i32 %2944 to i64
  %2946 = add nuw nsw i64 %2945, 1
  %2947 = add nsw i64 %2939, -1
  %2948 = icmp ult i32 %2944, 31
  br i1 %2948, label %2984, label %2949

2949:                                             ; preds = %2937
  %2950 = and i64 %2946, 8589934560
  %2951 = sub i64 %2940, %2950
  br label %2952

2952:                                             ; preds = %2952, %2949
  %2953 = phi i64 [ 0, %2949 ], [ %2976, %2952 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2972, %2952 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2973, %2952 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2974, %2952 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2975, %2952 ]
  %2958 = sub i64 %2940, %2953
  %2959 = getelementptr inbounds i32, ptr %11, i64 %2958
  %2960 = getelementptr inbounds i32, ptr %2959, i64 -7
  %2961 = load <8 x i32>, ptr %2960, align 4, !tbaa !5
  %2962 = shufflevector <8 x i32> %2961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2963 = getelementptr inbounds i32, ptr %2959, i64 -15
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !5
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2959, i64 -23
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !5
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2959, i64 -31
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !5
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = mul <8 x i32> %2962, %2954
  %2973 = mul <8 x i32> %2965, %2955
  %2974 = mul <8 x i32> %2968, %2956
  %2975 = mul <8 x i32> %2971, %2957
  %2976 = add nuw i64 %2953, 32
  %2977 = icmp eq i64 %2976, %2950
  br i1 %2977, label %2978, label %2952, !llvm.loop !579

2978:                                             ; preds = %2952
  %2979 = mul <8 x i32> %2973, %2972
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = mul <8 x i32> %2975, %2980
  %2982 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2981)
  %2983 = icmp eq i64 %2946, %2950
  br i1 %2983, label %2996, label %2984

2984:                                             ; preds = %2937, %2978
  %2985 = phi i64 [ %2940, %2937 ], [ %2951, %2978 ]
  %2986 = phi i32 [ 1, %2937 ], [ %2982, %2978 ]
  br label %2987

2987:                                             ; preds = %2984, %2987
  %2988 = phi i64 [ %2993, %2987 ], [ %2985, %2984 ]
  %2989 = phi i32 [ %2992, %2987 ], [ %2986, %2984 ]
  %2990 = getelementptr inbounds i32, ptr %11, i64 %2988
  %2991 = load i32, ptr %2990, align 4, !tbaa !5
  %2992 = mul nsw i32 %2991, %2989
  %2993 = add nsw i64 %2988, -1
  %2994 = trunc i64 %2988 to i32
  %2995 = icmp sgt i32 %2994, 0
  br i1 %2995, label %2987, label %2996, !llvm.loop !580

2996:                                             ; preds = %2987, %2978
  %2997 = phi i32 [ %2982, %2978 ], [ %2992, %2987 ]
  %2998 = and i64 %2947, 4294967295
  %2999 = getelementptr inbounds i32, ptr %6, i64 %2998
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = mul nsw i32 %3000, %2997
  %3002 = add nsw i32 %3001, %2941
  %3003 = icmp sgt i64 %2939, 2
  %3004 = add nsw i64 %2940, -1
  %3005 = add i32 %2938, 1
  br i1 %3003, label %2937, label %3006, !llvm.loop !581

3006:                                             ; preds = %2996, %2933
  %3007 = phi i32 [ %2936, %2933 ], [ %3002, %2996 ]
  %3008 = icmp slt i32 %3007, %5
  br i1 %3008, label %3011, label %3009

3009:                                             ; preds = %3006
  %3010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3084

3011:                                             ; preds = %3006
  %3012 = sext i32 %3007 to i64
  %3013 = getelementptr inbounds i16, ptr %2465, i64 %3012
  %3014 = load i16, ptr %3013, align 2, !tbaa !78
  %3015 = sitofp i16 %3014 to double
  %3016 = icmp slt i16 %3014, 0
  %3017 = fneg fast double %3015
  %3018 = select fast i1 %3016, double %3017, double %3015
  %3019 = fadd fast double %3018, %2934
  store double %3019, ptr %2467, align 8, !tbaa !18
  %3020 = add nuw nsw i32 %2935, 1
  br i1 %2783, label %3021, label %3071

3021:                                             ; preds = %3011
  %3022 = load i32, ptr %4, align 4, !tbaa !5
  %3023 = load i32, ptr %12, align 4, !tbaa !5
  %3024 = add nsw i32 %3023, -1
  %3025 = icmp slt i32 %3022, %3024
  br i1 %3025, label %3048, label %3026

3026:                                             ; preds = %3021
  %3027 = icmp eq i32 %3022, %3024
  br i1 %3027, label %3028, label %3064

3028:                                             ; preds = %3026
  store i32 0, ptr %4, align 4, !tbaa !5
  %3029 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3029, ptr %6, align 4, !tbaa !5
  br i1 %2788, label %3071, label %3030

3030:                                             ; preds = %3028, %3058
  %3031 = phi i64 [ %3062, %3058 ], [ 1, %3028 ]
  %3032 = getelementptr inbounds i32, ptr %4, i64 %3031
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = getelementptr inbounds i32, ptr %12, i64 %3031
  %3035 = load i32, ptr %3034, align 4, !tbaa !5
  %3036 = add nsw i32 %3035, -1
  %3037 = icmp slt i32 %3033, %3036
  br i1 %3037, label %3038, label %3056

3038:                                             ; preds = %3030
  br i1 %3025, label %3048, label %3039

3039:                                             ; preds = %3038
  %3040 = shl i64 %3031, 32
  %3041 = add i64 %3040, -4294967296
  %3042 = ashr exact i64 %3041, 32
  %3043 = getelementptr inbounds i32, ptr %7, i64 %3042
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = getelementptr inbounds i32, ptr %6, i64 %3031
  %3046 = load i32, ptr %3045, align 4, !tbaa !5
  %3047 = add nsw i32 %3046, %3044
  store i32 %3047, ptr %3045, align 4, !tbaa !5
  br label %3066

3048:                                             ; preds = %3021, %3038
  %3049 = phi i32 [ %3033, %3038 ], [ %3022, %3021 ]
  %3050 = phi ptr [ %3032, %3038 ], [ %4, %3021 ]
  %3051 = phi i64 [ %3031, %3038 ], [ 0, %3021 ]
  %3052 = add nsw i32 %3049, 1
  store i32 %3052, ptr %3050, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %7, i64 %3051
  %3054 = load i32, ptr %3053, align 4, !tbaa !5
  %3055 = getelementptr inbounds i32, ptr %6, i64 %3051
  br label %3066

3056:                                             ; preds = %3030
  %3057 = icmp eq i32 %3033, %3036
  br i1 %3057, label %3058, label %3064

3058:                                             ; preds = %3056
  store i32 0, ptr %3032, align 4, !tbaa !5
  %3059 = getelementptr inbounds i32, ptr %8, i64 %3031
  %3060 = load i32, ptr %3059, align 4, !tbaa !5
  %3061 = getelementptr inbounds i32, ptr %6, i64 %3031
  store i32 %3060, ptr %3061, align 4, !tbaa !5
  %3062 = add nuw nsw i64 %3031, 1
  %3063 = icmp eq i64 %3062, %2786
  br i1 %3063, label %3071, label %3030, !llvm.loop !582

3064:                                             ; preds = %3026, %3056
  %3065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3084

3066:                                             ; preds = %3039, %3048
  %3067 = phi ptr [ %3055, %3048 ], [ %3032, %3039 ]
  %3068 = phi i32 [ %3054, %3048 ], [ 1, %3039 ]
  %3069 = load i32, ptr %3067, align 4, !tbaa !5
  %3070 = add nsw i32 %3069, %3068
  store i32 %3070, ptr %3067, align 4, !tbaa !5
  br label %3071

3071:                                             ; preds = %3058, %3066, %3028, %3011
  %3072 = icmp eq i32 %3020, %5
  br i1 %3072, label %3079, label %2933, !llvm.loop !583

3073:                                             ; preds = %2475
  %3074 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3079

3075:                                             ; preds = %1703
  store double %1653, ptr %1239, align 8, !tbaa !18
  br label %3079

3076:                                             ; preds = %2019
  store float %1969, ptr %1851, align 4, !tbaa !162
  br label %3079

3077:                                             ; preds = %2319
  store float %2269, ptr %1851, align 4, !tbaa !162
  br label %3079

3078:                                             ; preds = %2931
  store double %2881, ptr %2467, align 8, !tbaa !18
  br label %3079

3079:                                             ; preds = %3071, %2773, %2633, %2459, %2161, %1843, %1545, %1405, %1231, %1093, %937, %795, %621, %484, %329, %192, %2780, %2789, %3078, %2481, %2490, %2168, %2177, %3077, %1865, %1874, %3076, %1552, %1561, %3075, %1253, %1262, %944, %953, %641, %650, %336, %345, %37, %46, %2469, %3073, %1853, %2461, %1241, %1845, %631, %1233, %28, %623, %18
  %3080 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1233 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %2461 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %3073 ], [ 0.000000e+00, %2469 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %641 ], [ 0.000000e+00, %953 ], [ 0.000000e+00, %944 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ %1654, %3075 ], [ 0.000000e+00, %1561 ], [ 0.000000e+00, %1552 ], [ %1970, %3076 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %3077 ], [ 0.000000e+00, %2177 ], [ 0.000000e+00, %2168 ], [ 0.000000e+00, %2490 ], [ 0.000000e+00, %2481 ], [ %2882, %3078 ], [ 0.000000e+00, %2789 ], [ 0.000000e+00, %2780 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %746, %795 ], [ 0.000000e+00, %937 ], [ %1044, %1093 ], [ 0.000000e+00, %1231 ], [ %1356, %1405 ], [ 0.000000e+00, %1545 ], [ 0.000000e+00, %1843 ], [ 0.000000e+00, %2161 ], [ 0.000000e+00, %2459 ], [ %2584, %2633 ], [ 0.000000e+00, %2773 ], [ 0.000000e+00, %3071 ]
  %3081 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1233 ], [ 1, %631 ], [ 1, %1845 ], [ 1, %1241 ], [ 1, %2461 ], [ 1, %1853 ], [ 1, %3073 ], [ 1, %2469 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %650 ], [ 1, %641 ], [ 1, %953 ], [ 1, %944 ], [ 1, %1262 ], [ 1, %1253 ], [ %1568, %3075 ], [ 1, %1561 ], [ 1, %1552 ], [ %1881, %3076 ], [ 1, %1874 ], [ 1, %1865 ], [ %2184, %3077 ], [ 1, %2177 ], [ 1, %2168 ], [ 1, %2490 ], [ 1, %2481 ], [ %2796, %3078 ], [ 1, %2789 ], [ 1, %2780 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %657, %795 ], [ %648, %937 ], [ %960, %1093 ], [ %951, %1231 ], [ %1269, %1405 ], [ %1260, %1545 ], [ %1559, %1843 ], [ %1872, %2161 ], [ %2175, %2459 ], [ %2497, %2633 ], [ %2488, %2773 ], [ %2787, %3071 ]
  %3082 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3081, ptr noundef nonnull @.str.5) #3
  %3083 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3080, ptr noundef nonnull @.str.6) #3
  br label %3084

3084:                                             ; preds = %2626, %2711, %2766, %2924, %3009, %3064, %2012, %2097, %2154, %2312, %2397, %2452, %1398, %1483, %1538, %1696, %1781, %1836, %788, %872, %930, %1086, %1170, %1224, %185, %269, %322, %477, %561, %614, %3079
  %3085 = phi i32 [ 0, %3079 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1224 ], [ -1, %1170 ], [ -1, %1086 ], [ -1, %930 ], [ -1, %872 ], [ -1, %788 ], [ -1, %1836 ], [ -1, %1781 ], [ -1, %1696 ], [ -1, %1538 ], [ -1, %1483 ], [ -1, %1398 ], [ -1, %2452 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2154 ], [ -1, %2097 ], [ -1, %2012 ], [ -1, %3064 ], [ -1, %3009 ], [ -1, %2924 ], [ -1, %2766 ], [ -1, %2711 ], [ -1, %2626 ]
  ret i32 %3085
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5545 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1232
    i32 104, label %1855
    i32 105, label %2478
    i32 106, label %3085
    i32 107, label %3695
    i32 108, label %4307
    i32 109, label %4925
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5545

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5545

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5545

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !584

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !585

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !586

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i32, ptr %24, i64 %130
  %134 = load i32, ptr %133, align 4, !tbaa !5
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i32 %134, 255
  %138 = sitofp i32 %137 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %136
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !587

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5545, label %55, !llvm.loop !588

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !589

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !590

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !591

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds i32, ptr %24, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !5
  %276 = trunc i32 %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !592

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5545, label %194, !llvm.loop !593

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5545

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5545

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !594

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !595

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !596

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i32, ptr %24, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !5
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = trunc i32 %431 to i8
  %434 = add i8 %432, %433
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !597

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5545, label %354, !llvm.loop !598

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !599

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !600

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !601

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds i32, ptr %24, i64 %564
  %566 = load i32, ptr %565, align 4, !tbaa !5
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = trunc i32 %566 to i8
  %569 = add i8 %567, %568
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !602

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5545, label %486, !llvm.loop !603

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %625
  %632 = load i32, ptr %627, align 4, !tbaa !5
  %633 = tail call i32 @llvm.abs.i32(i32 %632, i1 true)
  store i32 %633, ptr %629, align 4, !tbaa !5
  br label %5545

634:                                              ; preds = %625
  switch i32 %1, label %1230 [
    i32 1, label %635
    i32 0, label %938
  ]

635:                                              ; preds = %634
  %636 = getelementptr inbounds i32, ptr %3, i64 %19
  %637 = load i32, ptr %636, align 4, !tbaa !5
  %638 = icmp eq i32 %637, 0
  %639 = icmp sgt i32 %5, 0
  br i1 %638, label %649, label %640

640:                                              ; preds = %635
  br i1 %639, label %641, label %5545

641:                                              ; preds = %640
  %642 = icmp sgt i32 %13, 1
  %643 = icmp sgt i32 %13, 0
  %644 = add i32 %13, -2
  %645 = zext i32 %644 to i64
  %646 = zext i32 %13 to i64
  %647 = add nuw i32 %5, 1
  %648 = icmp eq i32 %13, 1
  br label %796

649:                                              ; preds = %635
  br i1 %639, label %650, label %5545

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %658

658:                                              ; preds = %650, %794
  %659 = phi i32 [ 0, %650 ], [ %746, %794 ]
  %660 = phi double [ 0.000000e+00, %650 ], [ %745, %794 ]
  %661 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %651, label %662, label %731

662:                                              ; preds = %658, %721
  %663 = phi i32 [ %730, %721 ], [ 0, %658 ]
  %664 = phi i64 [ %672, %721 ], [ %655, %658 ]
  %665 = phi i64 [ %729, %721 ], [ %654, %658 ]
  %666 = phi i32 [ %727, %721 ], [ %661, %658 ]
  %667 = sub i32 %653, %663
  %668 = tail call i32 @llvm.smin.i32(i32 %667, i32 0)
  %669 = sub i32 %667, %668
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 1
  %672 = add nsw i64 %664, -1
  %673 = icmp ult i32 %669, 31
  br i1 %673, label %709, label %674

674:                                              ; preds = %662
  %675 = and i64 %671, 8589934560
  %676 = sub i64 %665, %675
  br label %677

677:                                              ; preds = %677, %674
  %678 = phi i64 [ 0, %674 ], [ %701, %677 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %697, %677 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %698, %677 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %699, %677 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %700, %677 ]
  %683 = sub i64 %665, %678
  %684 = getelementptr inbounds i32, ptr %9, i64 %683
  %685 = getelementptr inbounds i32, ptr %684, i64 -7
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %684, i64 -15
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %684, i64 -23
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %684, i64 -31
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = mul <8 x i32> %687, %679
  %698 = mul <8 x i32> %690, %680
  %699 = mul <8 x i32> %693, %681
  %700 = mul <8 x i32> %696, %682
  %701 = add nuw i64 %678, 32
  %702 = icmp eq i64 %701, %675
  br i1 %702, label %703, label %677, !llvm.loop !604

703:                                              ; preds = %677
  %704 = mul <8 x i32> %698, %697
  %705 = mul <8 x i32> %699, %704
  %706 = mul <8 x i32> %700, %705
  %707 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %706)
  %708 = icmp eq i64 %671, %675
  br i1 %708, label %721, label %709

709:                                              ; preds = %662, %703
  %710 = phi i64 [ %665, %662 ], [ %676, %703 ]
  %711 = phi i32 [ 1, %662 ], [ %707, %703 ]
  br label %712

712:                                              ; preds = %709, %712
  %713 = phi i64 [ %718, %712 ], [ %710, %709 ]
  %714 = phi i32 [ %717, %712 ], [ %711, %709 ]
  %715 = getelementptr inbounds i32, ptr %9, i64 %713
  %716 = load i32, ptr %715, align 4, !tbaa !5
  %717 = mul nsw i32 %716, %714
  %718 = add nsw i64 %713, -1
  %719 = trunc i64 %713 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %712, label %721, !llvm.loop !605

721:                                              ; preds = %712, %703
  %722 = phi i32 [ %707, %703 ], [ %717, %712 ]
  %723 = and i64 %672, 4294967295
  %724 = getelementptr inbounds i32, ptr %6, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !5
  %726 = mul nsw i32 %725, %722
  %727 = add nsw i32 %726, %666
  %728 = icmp sgt i64 %664, 2
  %729 = add nsw i64 %665, -1
  %730 = add i32 %663, 1
  br i1 %728, label %662, label %731, !llvm.loop !606

731:                                              ; preds = %721, %658
  %732 = phi i32 [ %661, %658 ], [ %727, %721 ]
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %2, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !18
  %736 = getelementptr inbounds i32, ptr %627, i64 %733
  %737 = load i32, ptr %736, align 4, !tbaa !5
  %738 = load i32, ptr %629, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i32 %737 to double
  %741 = fmul fast double %735, %740
  %742 = tail call fast double @llvm.fabs.f64(double %741)
  %743 = fadd fast double %742, %739
  %744 = fptosi double %743 to i32
  store i32 %744, ptr %629, align 4, !tbaa !5
  %745 = fadd fast double %735, %660
  %746 = add nuw nsw i32 %659, 1
  br i1 %652, label %747, label %794

747:                                              ; preds = %731
  %748 = load i32, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %12, align 4, !tbaa !5
  %750 = add nsw i32 %749, -1
  %751 = icmp slt i32 %748, %750
  br i1 %751, label %771, label %752

752:                                              ; preds = %747
  %753 = icmp eq i32 %748, %750
  br i1 %753, label %754, label %787

754:                                              ; preds = %752
  store i32 0, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %755, ptr %6, align 4, !tbaa !5
  br i1 %657, label %794, label %756

756:                                              ; preds = %754, %781
  %757 = phi i64 [ %785, %781 ], [ 1, %754 ]
  %758 = getelementptr inbounds i32, ptr %4, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %12, i64 %757
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %759, %762
  br i1 %763, label %764, label %779

764:                                              ; preds = %756
  br i1 %751, label %771, label %765

765:                                              ; preds = %764
  %766 = getelementptr inbounds i32, ptr %7, i64 %757
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %6, i64 %757
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = add nsw i32 %769, %767
  store i32 %770, ptr %768, align 4, !tbaa !5
  br label %789

771:                                              ; preds = %747, %764
  %772 = phi i32 [ %759, %764 ], [ %748, %747 ]
  %773 = phi ptr [ %758, %764 ], [ %4, %747 ]
  %774 = phi i64 [ %757, %764 ], [ 0, %747 ]
  %775 = add nsw i32 %772, 1
  store i32 %775, ptr %773, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %7, i64 %774
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %774
  br label %789

779:                                              ; preds = %756
  %780 = icmp eq i32 %759, %762
  br i1 %780, label %781, label %787

781:                                              ; preds = %779
  store i32 0, ptr %758, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %8, i64 %757
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %757
  store i32 %783, ptr %784, align 4, !tbaa !5
  %785 = add nuw nsw i64 %757, 1
  %786 = icmp eq i64 %785, %655
  br i1 %786, label %794, label %756, !llvm.loop !607

787:                                              ; preds = %752, %779
  %788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

789:                                              ; preds = %765, %771
  %790 = phi ptr [ %778, %771 ], [ %758, %765 ]
  %791 = phi i32 [ %777, %771 ], [ 1, %765 ]
  %792 = load i32, ptr %790, align 4, !tbaa !5
  %793 = add nsw i32 %792, %791
  store i32 %793, ptr %790, align 4, !tbaa !5
  br label %794

794:                                              ; preds = %781, %789, %754, %731
  %795 = icmp eq i32 %746, %5
  br i1 %795, label %5545, label %658, !llvm.loop !608

796:                                              ; preds = %641, %936
  %797 = phi i32 [ 0, %641 ], [ %885, %936 ]
  %798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %642, label %799, label %868

799:                                              ; preds = %796, %858
  %800 = phi i32 [ %867, %858 ], [ 0, %796 ]
  %801 = phi i64 [ %809, %858 ], [ %646, %796 ]
  %802 = phi i64 [ %866, %858 ], [ %645, %796 ]
  %803 = phi i32 [ %864, %858 ], [ %798, %796 ]
  %804 = sub i32 %644, %800
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 0)
  %806 = sub i32 %804, %805
  %807 = zext i32 %806 to i64
  %808 = add nuw nsw i64 %807, 1
  %809 = add nsw i64 %801, -1
  %810 = icmp ult i32 %806, 31
  br i1 %810, label %846, label %811

811:                                              ; preds = %799
  %812 = and i64 %808, 8589934560
  %813 = sub i64 %802, %812
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %838, %814 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %834, %814 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %835, %814 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %836, %814 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %837, %814 ]
  %820 = sub i64 %802, %815
  %821 = getelementptr inbounds i32, ptr %11, i64 %820
  %822 = getelementptr inbounds i32, ptr %821, i64 -7
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %821, i64 -15
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %821, i64 -23
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %821, i64 -31
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = mul <8 x i32> %824, %816
  %835 = mul <8 x i32> %827, %817
  %836 = mul <8 x i32> %830, %818
  %837 = mul <8 x i32> %833, %819
  %838 = add nuw i64 %815, 32
  %839 = icmp eq i64 %838, %812
  br i1 %839, label %840, label %814, !llvm.loop !609

840:                                              ; preds = %814
  %841 = mul <8 x i32> %835, %834
  %842 = mul <8 x i32> %836, %841
  %843 = mul <8 x i32> %837, %842
  %844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %843)
  %845 = icmp eq i64 %808, %812
  br i1 %845, label %858, label %846

846:                                              ; preds = %799, %840
  %847 = phi i64 [ %802, %799 ], [ %813, %840 ]
  %848 = phi i32 [ 1, %799 ], [ %844, %840 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %855, %849 ], [ %847, %846 ]
  %851 = phi i32 [ %854, %849 ], [ %848, %846 ]
  %852 = getelementptr inbounds i32, ptr %11, i64 %850
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %851
  %855 = add nsw i64 %850, -1
  %856 = trunc i64 %850 to i32
  %857 = icmp sgt i32 %856, 0
  br i1 %857, label %849, label %858, !llvm.loop !610

858:                                              ; preds = %849, %840
  %859 = phi i32 [ %844, %840 ], [ %854, %849 ]
  %860 = and i64 %809, 4294967295
  %861 = getelementptr inbounds i32, ptr %6, i64 %860
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = mul nsw i32 %862, %859
  %864 = add nsw i32 %863, %803
  %865 = icmp sgt i64 %801, 2
  %866 = add nsw i64 %802, -1
  %867 = add i32 %800, 1
  br i1 %865, label %799, label %868, !llvm.loop !611

868:                                              ; preds = %858, %796
  %869 = phi i32 [ %798, %796 ], [ %864, %858 ]
  %870 = icmp slt i32 %869, %5
  br i1 %870, label %873, label %871

871:                                              ; preds = %868
  %872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

873:                                              ; preds = %868
  %874 = sext i32 %869 to i64
  %875 = getelementptr inbounds i32, ptr %627, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !5
  %877 = load i32, ptr %629, align 4, !tbaa !5
  %878 = sitofp i32 %877 to double
  %879 = sitofp i32 %876 to double
  %880 = icmp slt i32 %876, 0
  %881 = fneg fast double %879
  %882 = select fast i1 %880, double %881, double %879
  %883 = fadd fast double %882, %878
  %884 = fptosi double %883 to i32
  store i32 %884, ptr %629, align 4, !tbaa !5
  %885 = add nuw nsw i32 %797, 1
  br i1 %643, label %886, label %936

886:                                              ; preds = %873
  %887 = load i32, ptr %4, align 4, !tbaa !5
  %888 = load i32, ptr %12, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %887, %889
  br i1 %890, label %913, label %891

891:                                              ; preds = %886
  %892 = icmp eq i32 %887, %889
  br i1 %892, label %893, label %929

893:                                              ; preds = %891
  store i32 0, ptr %4, align 4, !tbaa !5
  %894 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %894, ptr %6, align 4, !tbaa !5
  br i1 %648, label %936, label %895

895:                                              ; preds = %893, %923
  %896 = phi i64 [ %927, %923 ], [ 1, %893 ]
  %897 = getelementptr inbounds i32, ptr %4, i64 %896
  %898 = load i32, ptr %897, align 4, !tbaa !5
  %899 = getelementptr inbounds i32, ptr %12, i64 %896
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = add nsw i32 %900, -1
  %902 = icmp slt i32 %898, %901
  br i1 %902, label %903, label %921

903:                                              ; preds = %895
  br i1 %890, label %913, label %904

904:                                              ; preds = %903
  %905 = shl i64 %896, 32
  %906 = add i64 %905, -4294967296
  %907 = ashr exact i64 %906, 32
  %908 = getelementptr inbounds i32, ptr %7, i64 %907
  %909 = load i32, ptr %908, align 4, !tbaa !5
  %910 = getelementptr inbounds i32, ptr %6, i64 %896
  %911 = load i32, ptr %910, align 4, !tbaa !5
  %912 = add nsw i32 %911, %909
  store i32 %912, ptr %910, align 4, !tbaa !5
  br label %931

913:                                              ; preds = %886, %903
  %914 = phi i32 [ %898, %903 ], [ %887, %886 ]
  %915 = phi ptr [ %897, %903 ], [ %4, %886 ]
  %916 = phi i64 [ %896, %903 ], [ 0, %886 ]
  %917 = add nsw i32 %914, 1
  store i32 %917, ptr %915, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %7, i64 %916
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %916
  br label %931

921:                                              ; preds = %895
  %922 = icmp eq i32 %898, %901
  br i1 %922, label %923, label %929

923:                                              ; preds = %921
  store i32 0, ptr %897, align 4, !tbaa !5
  %924 = getelementptr inbounds i32, ptr %8, i64 %896
  %925 = load i32, ptr %924, align 4, !tbaa !5
  %926 = getelementptr inbounds i32, ptr %6, i64 %896
  store i32 %925, ptr %926, align 4, !tbaa !5
  %927 = add nuw nsw i64 %896, 1
  %928 = icmp eq i64 %927, %646
  br i1 %928, label %936, label %895, !llvm.loop !612

929:                                              ; preds = %891, %921
  %930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

931:                                              ; preds = %904, %913
  %932 = phi ptr [ %920, %913 ], [ %897, %904 ]
  %933 = phi i32 [ %919, %913 ], [ 1, %904 ]
  %934 = load i32, ptr %932, align 4, !tbaa !5
  %935 = add nsw i32 %934, %933
  store i32 %935, ptr %932, align 4, !tbaa !5
  br label %936

936:                                              ; preds = %923, %931, %893, %873
  %937 = icmp eq i32 %885, %5
  br i1 %937, label %5545, label %796, !llvm.loop !613

938:                                              ; preds = %634
  %939 = getelementptr inbounds i32, ptr %3, i64 %19
  %940 = load i32, ptr %939, align 4, !tbaa !5
  %941 = icmp eq i32 %940, 0
  %942 = icmp sgt i32 %5, 0
  br i1 %941, label %952, label %943

943:                                              ; preds = %938
  br i1 %942, label %944, label %5545

944:                                              ; preds = %943
  %945 = icmp sgt i32 %13, 1
  %946 = icmp sgt i32 %13, 0
  %947 = add i32 %13, -2
  %948 = zext i32 %947 to i64
  %949 = zext i32 %13 to i64
  %950 = add nuw i32 %5, 1
  %951 = icmp eq i32 %13, 1
  br label %1093

952:                                              ; preds = %938
  br i1 %942, label %953, label %5545

953:                                              ; preds = %952
  %954 = icmp sgt i32 %13, 1
  %955 = icmp sgt i32 %13, 0
  %956 = add i32 %13, -2
  %957 = zext i32 %956 to i64
  %958 = zext i32 %13 to i64
  %959 = add nuw i32 %5, 1
  %960 = icmp eq i32 %13, 1
  br label %961

961:                                              ; preds = %953, %1091
  %962 = phi i32 [ 0, %953 ], [ %1043, %1091 ]
  %963 = phi double [ 0.000000e+00, %953 ], [ %1042, %1091 ]
  %964 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %954, label %965, label %1034

965:                                              ; preds = %961, %1024
  %966 = phi i32 [ %1033, %1024 ], [ 0, %961 ]
  %967 = phi i64 [ %975, %1024 ], [ %958, %961 ]
  %968 = phi i64 [ %1032, %1024 ], [ %957, %961 ]
  %969 = phi i32 [ %1030, %1024 ], [ %964, %961 ]
  %970 = sub i32 %956, %966
  %971 = tail call i32 @llvm.smin.i32(i32 %970, i32 0)
  %972 = sub i32 %970, %971
  %973 = zext i32 %972 to i64
  %974 = add nuw nsw i64 %973, 1
  %975 = add nsw i64 %967, -1
  %976 = icmp ult i32 %972, 31
  br i1 %976, label %1012, label %977

977:                                              ; preds = %965
  %978 = and i64 %974, 8589934560
  %979 = sub i64 %968, %978
  br label %980

980:                                              ; preds = %980, %977
  %981 = phi i64 [ 0, %977 ], [ %1004, %980 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1000, %980 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1001, %980 ]
  %984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1002, %980 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %977 ], [ %1003, %980 ]
  %986 = sub i64 %968, %981
  %987 = getelementptr inbounds i32, ptr %9, i64 %986
  %988 = getelementptr inbounds i32, ptr %987, i64 -7
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %987, i64 -15
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %987, i64 -23
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %987, i64 -31
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = mul <8 x i32> %990, %982
  %1001 = mul <8 x i32> %993, %983
  %1002 = mul <8 x i32> %996, %984
  %1003 = mul <8 x i32> %999, %985
  %1004 = add nuw i64 %981, 32
  %1005 = icmp eq i64 %1004, %978
  br i1 %1005, label %1006, label %980, !llvm.loop !614

1006:                                             ; preds = %980
  %1007 = mul <8 x i32> %1001, %1000
  %1008 = mul <8 x i32> %1002, %1007
  %1009 = mul <8 x i32> %1003, %1008
  %1010 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1009)
  %1011 = icmp eq i64 %974, %978
  br i1 %1011, label %1024, label %1012

1012:                                             ; preds = %965, %1006
  %1013 = phi i64 [ %968, %965 ], [ %979, %1006 ]
  %1014 = phi i32 [ 1, %965 ], [ %1010, %1006 ]
  br label %1015

1015:                                             ; preds = %1012, %1015
  %1016 = phi i64 [ %1021, %1015 ], [ %1013, %1012 ]
  %1017 = phi i32 [ %1020, %1015 ], [ %1014, %1012 ]
  %1018 = getelementptr inbounds i32, ptr %9, i64 %1016
  %1019 = load i32, ptr %1018, align 4, !tbaa !5
  %1020 = mul nsw i32 %1019, %1017
  %1021 = add nsw i64 %1016, -1
  %1022 = trunc i64 %1016 to i32
  %1023 = icmp sgt i32 %1022, 0
  br i1 %1023, label %1015, label %1024, !llvm.loop !615

1024:                                             ; preds = %1015, %1006
  %1025 = phi i32 [ %1010, %1006 ], [ %1020, %1015 ]
  %1026 = and i64 %975, 4294967295
  %1027 = getelementptr inbounds i32, ptr %6, i64 %1026
  %1028 = load i32, ptr %1027, align 4, !tbaa !5
  %1029 = mul nsw i32 %1028, %1025
  %1030 = add nsw i32 %1029, %969
  %1031 = icmp sgt i64 %967, 2
  %1032 = add nsw i64 %968, -1
  %1033 = add i32 %966, 1
  br i1 %1031, label %965, label %1034, !llvm.loop !616

1034:                                             ; preds = %1024, %961
  %1035 = phi i32 [ %964, %961 ], [ %1030, %1024 ]
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds i32, ptr %627, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = load i32, ptr %629, align 4, !tbaa !5
  %1040 = tail call i32 @llvm.abs.i32(i32 %1038, i1 true)
  %1041 = add nsw i32 %1039, %1040
  store i32 %1041, ptr %629, align 4, !tbaa !5
  %1042 = fadd fast double %963, 1.000000e+00
  %1043 = add nuw nsw i32 %962, 1
  br i1 %955, label %1044, label %1091

1044:                                             ; preds = %1034
  %1045 = load i32, ptr %4, align 4, !tbaa !5
  %1046 = load i32, ptr %12, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, -1
  %1048 = icmp slt i32 %1045, %1047
  br i1 %1048, label %1068, label %1049

1049:                                             ; preds = %1044
  %1050 = icmp eq i32 %1045, %1047
  br i1 %1050, label %1051, label %1084

1051:                                             ; preds = %1049
  store i32 0, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1052, ptr %6, align 4, !tbaa !5
  br i1 %960, label %1091, label %1053

1053:                                             ; preds = %1051, %1078
  %1054 = phi i64 [ %1082, %1078 ], [ 1, %1051 ]
  %1055 = getelementptr inbounds i32, ptr %4, i64 %1054
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = getelementptr inbounds i32, ptr %12, i64 %1054
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = add nsw i32 %1058, -1
  %1060 = icmp slt i32 %1056, %1059
  br i1 %1060, label %1061, label %1076

1061:                                             ; preds = %1053
  br i1 %1048, label %1068, label %1062

1062:                                             ; preds = %1061
  %1063 = getelementptr inbounds i32, ptr %7, i64 %1054
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %6, i64 %1054
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = add nsw i32 %1066, %1064
  store i32 %1067, ptr %1065, align 4, !tbaa !5
  br label %1086

1068:                                             ; preds = %1044, %1061
  %1069 = phi i32 [ %1056, %1061 ], [ %1045, %1044 ]
  %1070 = phi ptr [ %1055, %1061 ], [ %4, %1044 ]
  %1071 = phi i64 [ %1054, %1061 ], [ 0, %1044 ]
  %1072 = add nsw i32 %1069, 1
  store i32 %1072, ptr %1070, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %6, i64 %1071
  br label %1086

1076:                                             ; preds = %1053
  %1077 = icmp eq i32 %1056, %1059
  br i1 %1077, label %1078, label %1084

1078:                                             ; preds = %1076
  store i32 0, ptr %1055, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %8, i64 %1054
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1054
  store i32 %1080, ptr %1081, align 4, !tbaa !5
  %1082 = add nuw nsw i64 %1054, 1
  %1083 = icmp eq i64 %1082, %958
  br i1 %1083, label %1091, label %1053, !llvm.loop !617

1084:                                             ; preds = %1049, %1076
  %1085 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1086:                                             ; preds = %1062, %1068
  %1087 = phi ptr [ %1075, %1068 ], [ %1055, %1062 ]
  %1088 = phi i32 [ %1074, %1068 ], [ 1, %1062 ]
  %1089 = load i32, ptr %1087, align 4, !tbaa !5
  %1090 = add nsw i32 %1089, %1088
  store i32 %1090, ptr %1087, align 4, !tbaa !5
  br label %1091

1091:                                             ; preds = %1078, %1086, %1051, %1034
  %1092 = icmp eq i32 %1043, %5
  br i1 %1092, label %5545, label %961, !llvm.loop !618

1093:                                             ; preds = %944, %1228
  %1094 = phi i32 [ 0, %944 ], [ %1177, %1228 ]
  %1095 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1096, label %1165

1096:                                             ; preds = %1093, %1155
  %1097 = phi i32 [ %1164, %1155 ], [ 0, %1093 ]
  %1098 = phi i64 [ %1106, %1155 ], [ %949, %1093 ]
  %1099 = phi i64 [ %1163, %1155 ], [ %948, %1093 ]
  %1100 = phi i32 [ %1161, %1155 ], [ %1095, %1093 ]
  %1101 = sub i32 %947, %1097
  %1102 = tail call i32 @llvm.smin.i32(i32 %1101, i32 0)
  %1103 = sub i32 %1101, %1102
  %1104 = zext i32 %1103 to i64
  %1105 = add nuw nsw i64 %1104, 1
  %1106 = add nsw i64 %1098, -1
  %1107 = icmp ult i32 %1103, 31
  br i1 %1107, label %1143, label %1108

1108:                                             ; preds = %1096
  %1109 = and i64 %1105, 8589934560
  %1110 = sub i64 %1099, %1109
  br label %1111

1111:                                             ; preds = %1111, %1108
  %1112 = phi i64 [ 0, %1108 ], [ %1135, %1111 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1131, %1111 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1132, %1111 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1133, %1111 ]
  %1116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1108 ], [ %1134, %1111 ]
  %1117 = sub i64 %1099, %1112
  %1118 = getelementptr inbounds i32, ptr %11, i64 %1117
  %1119 = getelementptr inbounds i32, ptr %1118, i64 -7
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1118, i64 -15
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = getelementptr inbounds i32, ptr %1118, i64 -23
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1118, i64 -31
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = mul <8 x i32> %1121, %1113
  %1132 = mul <8 x i32> %1124, %1114
  %1133 = mul <8 x i32> %1127, %1115
  %1134 = mul <8 x i32> %1130, %1116
  %1135 = add nuw i64 %1112, 32
  %1136 = icmp eq i64 %1135, %1109
  br i1 %1136, label %1137, label %1111, !llvm.loop !619

1137:                                             ; preds = %1111
  %1138 = mul <8 x i32> %1132, %1131
  %1139 = mul <8 x i32> %1133, %1138
  %1140 = mul <8 x i32> %1134, %1139
  %1141 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1140)
  %1142 = icmp eq i64 %1105, %1109
  br i1 %1142, label %1155, label %1143

1143:                                             ; preds = %1096, %1137
  %1144 = phi i64 [ %1099, %1096 ], [ %1110, %1137 ]
  %1145 = phi i32 [ 1, %1096 ], [ %1141, %1137 ]
  br label %1146

1146:                                             ; preds = %1143, %1146
  %1147 = phi i64 [ %1152, %1146 ], [ %1144, %1143 ]
  %1148 = phi i32 [ %1151, %1146 ], [ %1145, %1143 ]
  %1149 = getelementptr inbounds i32, ptr %11, i64 %1147
  %1150 = load i32, ptr %1149, align 4, !tbaa !5
  %1151 = mul nsw i32 %1150, %1148
  %1152 = add nsw i64 %1147, -1
  %1153 = trunc i64 %1147 to i32
  %1154 = icmp sgt i32 %1153, 0
  br i1 %1154, label %1146, label %1155, !llvm.loop !620

1155:                                             ; preds = %1146, %1137
  %1156 = phi i32 [ %1141, %1137 ], [ %1151, %1146 ]
  %1157 = and i64 %1106, 4294967295
  %1158 = getelementptr inbounds i32, ptr %6, i64 %1157
  %1159 = load i32, ptr %1158, align 4, !tbaa !5
  %1160 = mul nsw i32 %1159, %1156
  %1161 = add nsw i32 %1160, %1100
  %1162 = icmp sgt i64 %1098, 2
  %1163 = add nsw i64 %1099, -1
  %1164 = add i32 %1097, 1
  br i1 %1162, label %1096, label %1165, !llvm.loop !621

1165:                                             ; preds = %1155, %1093
  %1166 = phi i32 [ %1095, %1093 ], [ %1161, %1155 ]
  %1167 = icmp slt i32 %1166, %5
  br i1 %1167, label %1170, label %1168

1168:                                             ; preds = %1165
  %1169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1170:                                             ; preds = %1165
  %1171 = sext i32 %1166 to i64
  %1172 = getelementptr inbounds i32, ptr %627, i64 %1171
  %1173 = load i32, ptr %1172, align 4, !tbaa !5
  %1174 = load i32, ptr %629, align 4, !tbaa !5
  %1175 = tail call i32 @llvm.abs.i32(i32 %1173, i1 true)
  %1176 = add nsw i32 %1174, %1175
  store i32 %1176, ptr %629, align 4, !tbaa !5
  %1177 = add nuw nsw i32 %1094, 1
  br i1 %946, label %1178, label %1228

1178:                                             ; preds = %1170
  %1179 = load i32, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %12, align 4, !tbaa !5
  %1181 = add nsw i32 %1180, -1
  %1182 = icmp slt i32 %1179, %1181
  br i1 %1182, label %1205, label %1183

1183:                                             ; preds = %1178
  %1184 = icmp eq i32 %1179, %1181
  br i1 %1184, label %1185, label %1221

1185:                                             ; preds = %1183
  store i32 0, ptr %4, align 4, !tbaa !5
  %1186 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1186, ptr %6, align 4, !tbaa !5
  br i1 %951, label %1228, label %1187

1187:                                             ; preds = %1185, %1215
  %1188 = phi i64 [ %1219, %1215 ], [ 1, %1185 ]
  %1189 = getelementptr inbounds i32, ptr %4, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %12, i64 %1188
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, -1
  %1194 = icmp slt i32 %1190, %1193
  br i1 %1194, label %1195, label %1213

1195:                                             ; preds = %1187
  br i1 %1182, label %1205, label %1196

1196:                                             ; preds = %1195
  %1197 = shl i64 %1188, 32
  %1198 = add i64 %1197, -4294967296
  %1199 = ashr exact i64 %1198, 32
  %1200 = getelementptr inbounds i32, ptr %7, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %6, i64 %1188
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = add nsw i32 %1203, %1201
  store i32 %1204, ptr %1202, align 4, !tbaa !5
  br label %1223

1205:                                             ; preds = %1178, %1195
  %1206 = phi i32 [ %1190, %1195 ], [ %1179, %1178 ]
  %1207 = phi ptr [ %1189, %1195 ], [ %4, %1178 ]
  %1208 = phi i64 [ %1188, %1195 ], [ 0, %1178 ]
  %1209 = add nsw i32 %1206, 1
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1208
  br label %1223

1213:                                             ; preds = %1187
  %1214 = icmp eq i32 %1190, %1193
  br i1 %1214, label %1215, label %1221

1215:                                             ; preds = %1213
  store i32 0, ptr %1189, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %8, i64 %1188
  %1217 = load i32, ptr %1216, align 4, !tbaa !5
  %1218 = getelementptr inbounds i32, ptr %6, i64 %1188
  store i32 %1217, ptr %1218, align 4, !tbaa !5
  %1219 = add nuw nsw i64 %1188, 1
  %1220 = icmp eq i64 %1219, %949
  br i1 %1220, label %1228, label %1187, !llvm.loop !622

1221:                                             ; preds = %1183, %1213
  %1222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1223:                                             ; preds = %1196, %1205
  %1224 = phi ptr [ %1212, %1205 ], [ %1189, %1196 ]
  %1225 = phi i32 [ %1211, %1205 ], [ 1, %1196 ]
  %1226 = load i32, ptr %1224, align 4, !tbaa !5
  %1227 = add nsw i32 %1226, %1225
  store i32 %1227, ptr %1224, align 4, !tbaa !5
  br label %1228

1228:                                             ; preds = %1215, %1223, %1185, %1170
  %1229 = icmp eq i32 %1177, %5
  br i1 %1229, label %5545, label %1093, !llvm.loop !623

1230:                                             ; preds = %634
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1232:                                             ; preds = %18
  %1233 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1234 = load ptr, ptr %1233, align 8, !tbaa !9
  %1235 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1236 = load ptr, ptr %1235, align 8, !tbaa !9
  store i8 0, ptr %1236, align 1, !tbaa !11
  %1237 = icmp eq i32 %13, 0
  br i1 %1237, label %1238, label %1245

1238:                                             ; preds = %1232
  %1239 = load i32, ptr %1234, align 4, !tbaa !5
  %1240 = and i32 %1239, 128
  %1241 = icmp eq i32 %1240, 0
  %1242 = sub i32 0, %1239
  %1243 = select i1 %1241, i32 %1239, i32 %1242
  %1244 = trunc i32 %1243 to i8
  store i8 %1244, ptr %1236, align 1, !tbaa !11
  br label %5545

1245:                                             ; preds = %1232
  switch i32 %1, label %1853 [
    i32 1, label %1246
    i32 0, label %1553
  ]

1246:                                             ; preds = %1245
  %1247 = getelementptr inbounds i32, ptr %3, i64 %19
  %1248 = load i32, ptr %1247, align 4, !tbaa !5
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp sgt i32 %5, 0
  br i1 %1249, label %1260, label %1251

1251:                                             ; preds = %1246
  br i1 %1250, label %1252, label %5545

1252:                                             ; preds = %1251
  %1253 = icmp sgt i32 %13, 1
  %1254 = icmp sgt i32 %13, 0
  %1255 = add i32 %13, -2
  %1256 = zext i32 %1255 to i64
  %1257 = zext i32 %13 to i64
  %1258 = add nuw i32 %5, 1
  %1259 = icmp eq i32 %13, 1
  br label %1409

1260:                                             ; preds = %1246
  br i1 %1250, label %1261, label %5545

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1269

1269:                                             ; preds = %1261, %1407
  %1270 = phi i32 [ 0, %1261 ], [ %1359, %1407 ]
  %1271 = phi double [ 0.000000e+00, %1261 ], [ %1358, %1407 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1262, label %1273, label %1342

1273:                                             ; preds = %1269, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1269 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1266, %1269 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1265, %1269 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1269 ]
  %1278 = sub i32 %1264, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !624

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !625

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !626

1342:                                             ; preds = %1332, %1269
  %1343 = phi i32 [ %1272, %1269 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds i32, ptr %1234, i64 %1344
  %1348 = load i32, ptr %1347, align 4, !tbaa !5
  %1349 = load i8, ptr %1236, align 1, !tbaa !11
  %1350 = sitofp i8 %1349 to double
  %1351 = shl i32 %1348, 24
  %1352 = ashr exact i32 %1351, 24
  %1353 = sitofp i32 %1352 to double
  %1354 = fmul fast double %1346, %1353
  %1355 = tail call fast double @llvm.fabs.f64(double %1354)
  %1356 = fadd fast double %1355, %1350
  %1357 = fptosi double %1356 to i8
  store i8 %1357, ptr %1236, align 1, !tbaa !11
  %1358 = fadd fast double %1346, %1271
  %1359 = add nuw nsw i32 %1270, 1
  br i1 %1263, label %1360, label %1407

1360:                                             ; preds = %1342
  %1361 = load i32, ptr %4, align 4, !tbaa !5
  %1362 = load i32, ptr %12, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, -1
  %1364 = icmp slt i32 %1361, %1363
  br i1 %1364, label %1384, label %1365

1365:                                             ; preds = %1360
  %1366 = icmp eq i32 %1361, %1363
  br i1 %1366, label %1367, label %1400

1367:                                             ; preds = %1365
  store i32 0, ptr %4, align 4, !tbaa !5
  %1368 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1368, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1407, label %1369

1369:                                             ; preds = %1367, %1394
  %1370 = phi i64 [ %1398, %1394 ], [ 1, %1367 ]
  %1371 = getelementptr inbounds i32, ptr %4, i64 %1370
  %1372 = load i32, ptr %1371, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %12, i64 %1370
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = add nsw i32 %1374, -1
  %1376 = icmp slt i32 %1372, %1375
  br i1 %1376, label %1377, label %1392

1377:                                             ; preds = %1369
  br i1 %1364, label %1384, label %1378

1378:                                             ; preds = %1377
  %1379 = getelementptr inbounds i32, ptr %7, i64 %1370
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1370
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = add nsw i32 %1382, %1380
  store i32 %1383, ptr %1381, align 4, !tbaa !5
  br label %1402

1384:                                             ; preds = %1360, %1377
  %1385 = phi i32 [ %1372, %1377 ], [ %1361, %1360 ]
  %1386 = phi ptr [ %1371, %1377 ], [ %4, %1360 ]
  %1387 = phi i64 [ %1370, %1377 ], [ 0, %1360 ]
  %1388 = add nsw i32 %1385, 1
  store i32 %1388, ptr %1386, align 4, !tbaa !5
  %1389 = getelementptr inbounds i32, ptr %7, i64 %1387
  %1390 = load i32, ptr %1389, align 4, !tbaa !5
  %1391 = getelementptr inbounds i32, ptr %6, i64 %1387
  br label %1402

1392:                                             ; preds = %1369
  %1393 = icmp eq i32 %1372, %1375
  br i1 %1393, label %1394, label %1400

1394:                                             ; preds = %1392
  store i32 0, ptr %1371, align 4, !tbaa !5
  %1395 = getelementptr inbounds i32, ptr %8, i64 %1370
  %1396 = load i32, ptr %1395, align 4, !tbaa !5
  %1397 = getelementptr inbounds i32, ptr %6, i64 %1370
  store i32 %1396, ptr %1397, align 4, !tbaa !5
  %1398 = add nuw nsw i64 %1370, 1
  %1399 = icmp eq i64 %1398, %1266
  br i1 %1399, label %1407, label %1369, !llvm.loop !627

1400:                                             ; preds = %1365, %1392
  %1401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1402:                                             ; preds = %1378, %1384
  %1403 = phi ptr [ %1391, %1384 ], [ %1371, %1378 ]
  %1404 = phi i32 [ %1390, %1384 ], [ 1, %1378 ]
  %1405 = load i32, ptr %1403, align 4, !tbaa !5
  %1406 = add nsw i32 %1405, %1404
  store i32 %1406, ptr %1403, align 4, !tbaa !5
  br label %1407

1407:                                             ; preds = %1394, %1402, %1367, %1342
  %1408 = icmp eq i32 %1359, %5
  br i1 %1408, label %5545, label %1269, !llvm.loop !628

1409:                                             ; preds = %1252, %1551
  %1410 = phi i32 [ 0, %1252 ], [ %1500, %1551 ]
  %1411 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1412, label %1481

1412:                                             ; preds = %1409, %1471
  %1413 = phi i32 [ %1480, %1471 ], [ 0, %1409 ]
  %1414 = phi i64 [ %1422, %1471 ], [ %1257, %1409 ]
  %1415 = phi i64 [ %1479, %1471 ], [ %1256, %1409 ]
  %1416 = phi i32 [ %1477, %1471 ], [ %1411, %1409 ]
  %1417 = sub i32 %1255, %1413
  %1418 = tail call i32 @llvm.smin.i32(i32 %1417, i32 0)
  %1419 = sub i32 %1417, %1418
  %1420 = zext i32 %1419 to i64
  %1421 = add nuw nsw i64 %1420, 1
  %1422 = add nsw i64 %1414, -1
  %1423 = icmp ult i32 %1419, 31
  br i1 %1423, label %1459, label %1424

1424:                                             ; preds = %1412
  %1425 = and i64 %1421, 8589934560
  %1426 = sub i64 %1415, %1425
  br label %1427

1427:                                             ; preds = %1427, %1424
  %1428 = phi i64 [ 0, %1424 ], [ %1451, %1427 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1447, %1427 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1448, %1427 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1449, %1427 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1424 ], [ %1450, %1427 ]
  %1433 = sub i64 %1415, %1428
  %1434 = getelementptr inbounds i32, ptr %11, i64 %1433
  %1435 = getelementptr inbounds i32, ptr %1434, i64 -7
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1434, i64 -15
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1434, i64 -23
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1434, i64 -31
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = mul <8 x i32> %1437, %1429
  %1448 = mul <8 x i32> %1440, %1430
  %1449 = mul <8 x i32> %1443, %1431
  %1450 = mul <8 x i32> %1446, %1432
  %1451 = add nuw i64 %1428, 32
  %1452 = icmp eq i64 %1451, %1425
  br i1 %1452, label %1453, label %1427, !llvm.loop !629

1453:                                             ; preds = %1427
  %1454 = mul <8 x i32> %1448, %1447
  %1455 = mul <8 x i32> %1449, %1454
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1456)
  %1458 = icmp eq i64 %1421, %1425
  br i1 %1458, label %1471, label %1459

1459:                                             ; preds = %1412, %1453
  %1460 = phi i64 [ %1415, %1412 ], [ %1426, %1453 ]
  %1461 = phi i32 [ 1, %1412 ], [ %1457, %1453 ]
  br label %1462

1462:                                             ; preds = %1459, %1462
  %1463 = phi i64 [ %1468, %1462 ], [ %1460, %1459 ]
  %1464 = phi i32 [ %1467, %1462 ], [ %1461, %1459 ]
  %1465 = getelementptr inbounds i32, ptr %11, i64 %1463
  %1466 = load i32, ptr %1465, align 4, !tbaa !5
  %1467 = mul nsw i32 %1466, %1464
  %1468 = add nsw i64 %1463, -1
  %1469 = trunc i64 %1463 to i32
  %1470 = icmp sgt i32 %1469, 0
  br i1 %1470, label %1462, label %1471, !llvm.loop !630

1471:                                             ; preds = %1462, %1453
  %1472 = phi i32 [ %1457, %1453 ], [ %1467, %1462 ]
  %1473 = and i64 %1422, 4294967295
  %1474 = getelementptr inbounds i32, ptr %6, i64 %1473
  %1475 = load i32, ptr %1474, align 4, !tbaa !5
  %1476 = mul nsw i32 %1475, %1472
  %1477 = add nsw i32 %1476, %1416
  %1478 = icmp sgt i64 %1414, 2
  %1479 = add nsw i64 %1415, -1
  %1480 = add i32 %1413, 1
  br i1 %1478, label %1412, label %1481, !llvm.loop !631

1481:                                             ; preds = %1471, %1409
  %1482 = phi i32 [ %1411, %1409 ], [ %1477, %1471 ]
  %1483 = icmp slt i32 %1482, %5
  br i1 %1483, label %1486, label %1484

1484:                                             ; preds = %1481
  %1485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1486:                                             ; preds = %1481
  %1487 = sext i32 %1482 to i64
  %1488 = getelementptr inbounds i32, ptr %1234, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !5
  %1490 = load i8, ptr %1236, align 1, !tbaa !11
  %1491 = sitofp i8 %1490 to double
  %1492 = shl i32 %1489, 24
  %1493 = ashr exact i32 %1492, 24
  %1494 = sitofp i32 %1493 to double
  %1495 = icmp slt i32 %1492, 0
  %1496 = fneg fast double %1494
  %1497 = select fast i1 %1495, double %1496, double %1494
  %1498 = fadd fast double %1497, %1491
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1236, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1410, 1
  br i1 %1254, label %1501, label %1551

1501:                                             ; preds = %1486
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1257
  br i1 %1543, label %1551, label %1510, !llvm.loop !632

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1486
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5545, label %1409, !llvm.loop !633

1553:                                             ; preds = %1245
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5545

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1712

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5545

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1710
  %1577 = phi i32 [ 0, %1568 ], [ %1662, %1710 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1661, %1710 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !634

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !635

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !636

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i32, ptr %1234, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = load i8, ptr %1236, align 1, !tbaa !11
  %1655 = and i32 %1653, 128
  %1656 = icmp eq i32 %1655, 0
  %1657 = sub i32 0, %1653
  %1658 = select i1 %1656, i32 %1653, i32 %1657
  %1659 = trunc i32 %1658 to i8
  %1660 = add i8 %1654, %1659
  store i8 %1660, ptr %1236, align 1, !tbaa !11
  %1661 = fadd fast double %1578, 1.000000e+00
  %1662 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1663, label %1710

1663:                                             ; preds = %1649
  %1664 = load i32, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %12, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !5
  %1671 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1671, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !5
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !5
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !5
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !5
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1573
  br i1 %1702, label %1710, label %1672, !llvm.loop !637

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !5
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !5
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1649
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5545, label %1576, !llvm.loop !638

1712:                                             ; preds = %1559, %1851
  %1713 = phi i32 [ 0, %1559 ], [ %1800, %1851 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1564, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1563, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1562, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !5
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !639

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !5
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !640

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !5
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !641

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds i32, ptr %1234, i64 %1790
  %1792 = load i32, ptr %1791, align 4, !tbaa !5
  %1793 = load i8, ptr %1236, align 1, !tbaa !11
  %1794 = and i32 %1792, 128
  %1795 = icmp eq i32 %1794, 0
  %1796 = sub i32 0, %1792
  %1797 = select i1 %1795, i32 %1792, i32 %1796
  %1798 = trunc i32 %1797 to i8
  %1799 = add i8 %1793, %1798
  store i8 %1799, ptr %1236, align 1, !tbaa !11
  %1800 = add nuw nsw i32 %1713, 1
  br i1 %1561, label %1801, label %1851

1801:                                             ; preds = %1789
  %1802 = load i32, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %12, align 4, !tbaa !5
  %1804 = add nsw i32 %1803, -1
  %1805 = icmp slt i32 %1802, %1804
  br i1 %1805, label %1828, label %1806

1806:                                             ; preds = %1801
  %1807 = icmp eq i32 %1802, %1804
  br i1 %1807, label %1808, label %1844

1808:                                             ; preds = %1806
  store i32 0, ptr %4, align 4, !tbaa !5
  %1809 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1809, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1851, label %1810

1810:                                             ; preds = %1808, %1838
  %1811 = phi i64 [ %1842, %1838 ], [ 1, %1808 ]
  %1812 = getelementptr inbounds i32, ptr %4, i64 %1811
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %12, i64 %1811
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = add nsw i32 %1815, -1
  %1817 = icmp slt i32 %1813, %1816
  br i1 %1817, label %1818, label %1836

1818:                                             ; preds = %1810
  br i1 %1805, label %1828, label %1819

1819:                                             ; preds = %1818
  %1820 = shl i64 %1811, 32
  %1821 = add i64 %1820, -4294967296
  %1822 = ashr exact i64 %1821, 32
  %1823 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %6, i64 %1811
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = add nsw i32 %1826, %1824
  store i32 %1827, ptr %1825, align 4, !tbaa !5
  br label %1846

1828:                                             ; preds = %1801, %1818
  %1829 = phi i32 [ %1813, %1818 ], [ %1802, %1801 ]
  %1830 = phi ptr [ %1812, %1818 ], [ %4, %1801 ]
  %1831 = phi i64 [ %1811, %1818 ], [ 0, %1801 ]
  %1832 = add nsw i32 %1829, 1
  store i32 %1832, ptr %1830, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1831
  br label %1846

1836:                                             ; preds = %1810
  %1837 = icmp eq i32 %1813, %1816
  br i1 %1837, label %1838, label %1844

1838:                                             ; preds = %1836
  store i32 0, ptr %1812, align 4, !tbaa !5
  %1839 = getelementptr inbounds i32, ptr %8, i64 %1811
  %1840 = load i32, ptr %1839, align 4, !tbaa !5
  %1841 = getelementptr inbounds i32, ptr %6, i64 %1811
  store i32 %1840, ptr %1841, align 4, !tbaa !5
  %1842 = add nuw nsw i64 %1811, 1
  %1843 = icmp eq i64 %1842, %1564
  br i1 %1843, label %1851, label %1810, !llvm.loop !642

1844:                                             ; preds = %1806, %1836
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

1846:                                             ; preds = %1819, %1828
  %1847 = phi ptr [ %1835, %1828 ], [ %1812, %1819 ]
  %1848 = phi i32 [ %1834, %1828 ], [ 1, %1819 ]
  %1849 = load i32, ptr %1847, align 4, !tbaa !5
  %1850 = add nsw i32 %1849, %1848
  store i32 %1850, ptr %1847, align 4, !tbaa !5
  br label %1851

1851:                                             ; preds = %1838, %1846, %1808, %1789
  %1852 = icmp eq i32 %1800, %5
  br i1 %1852, label %5545, label %1712, !llvm.loop !643

1853:                                             ; preds = %1245
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

1855:                                             ; preds = %18
  %1856 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !9
  %1858 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1859 = load ptr, ptr %1858, align 8, !tbaa !9
  store i16 0, ptr %1859, align 2, !tbaa !78
  %1860 = icmp eq i32 %13, 0
  br i1 %1860, label %1861, label %1868

1861:                                             ; preds = %1855
  %1862 = load i32, ptr %1857, align 4, !tbaa !5
  %1863 = and i32 %1862, 32768
  %1864 = icmp eq i32 %1863, 0
  %1865 = sub i32 0, %1862
  %1866 = select i1 %1864, i32 %1862, i32 %1865
  %1867 = trunc i32 %1866 to i16
  store i16 %1867, ptr %1859, align 2, !tbaa !78
  br label %5545

1868:                                             ; preds = %1855
  switch i32 %1, label %2476 [
    i32 1, label %1869
    i32 0, label %2176
  ]

1869:                                             ; preds = %1868
  %1870 = getelementptr inbounds i32, ptr %3, i64 %19
  %1871 = load i32, ptr %1870, align 4, !tbaa !5
  %1872 = icmp eq i32 %1871, 0
  %1873 = icmp sgt i32 %5, 0
  br i1 %1872, label %1883, label %1874

1874:                                             ; preds = %1869
  br i1 %1873, label %1875, label %5545

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %2032

1883:                                             ; preds = %1869
  br i1 %1873, label %1884, label %5545

1884:                                             ; preds = %1883
  %1885 = icmp sgt i32 %13, 1
  %1886 = icmp sgt i32 %13, 0
  %1887 = add i32 %13, -2
  %1888 = zext i32 %1887 to i64
  %1889 = zext i32 %13 to i64
  %1890 = add nuw i32 %5, 1
  %1891 = icmp eq i32 %13, 1
  br label %1892

1892:                                             ; preds = %1884, %2030
  %1893 = phi i16 [ 0, %1884 ], [ %1980, %2030 ]
  %1894 = phi i32 [ 0, %1884 ], [ %1982, %2030 ]
  %1895 = phi double [ 0.000000e+00, %1884 ], [ %1981, %2030 ]
  %1896 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1885, label %1897, label %1966

1897:                                             ; preds = %1892, %1956
  %1898 = phi i32 [ %1965, %1956 ], [ 0, %1892 ]
  %1899 = phi i64 [ %1907, %1956 ], [ %1889, %1892 ]
  %1900 = phi i64 [ %1964, %1956 ], [ %1888, %1892 ]
  %1901 = phi i32 [ %1962, %1956 ], [ %1896, %1892 ]
  %1902 = sub i32 %1887, %1898
  %1903 = tail call i32 @llvm.smin.i32(i32 %1902, i32 0)
  %1904 = sub i32 %1902, %1903
  %1905 = zext i32 %1904 to i64
  %1906 = add nuw nsw i64 %1905, 1
  %1907 = add nsw i64 %1899, -1
  %1908 = icmp ult i32 %1904, 31
  br i1 %1908, label %1944, label %1909

1909:                                             ; preds = %1897
  %1910 = and i64 %1906, 8589934560
  %1911 = sub i64 %1900, %1910
  br label %1912

1912:                                             ; preds = %1912, %1909
  %1913 = phi i64 [ 0, %1909 ], [ %1936, %1912 ]
  %1914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1932, %1912 ]
  %1915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1933, %1912 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1934, %1912 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1935, %1912 ]
  %1918 = sub i64 %1900, %1913
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1918
  %1920 = getelementptr inbounds i32, ptr %1919, i64 -7
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = getelementptr inbounds i32, ptr %1919, i64 -15
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = getelementptr inbounds i32, ptr %1919, i64 -23
  %1927 = load <8 x i32>, ptr %1926, align 4, !tbaa !5
  %1928 = shufflevector <8 x i32> %1927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1929 = getelementptr inbounds i32, ptr %1919, i64 -31
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !5
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = mul <8 x i32> %1922, %1914
  %1933 = mul <8 x i32> %1925, %1915
  %1934 = mul <8 x i32> %1928, %1916
  %1935 = mul <8 x i32> %1931, %1917
  %1936 = add nuw i64 %1913, 32
  %1937 = icmp eq i64 %1936, %1910
  br i1 %1937, label %1938, label %1912, !llvm.loop !644

1938:                                             ; preds = %1912
  %1939 = mul <8 x i32> %1933, %1932
  %1940 = mul <8 x i32> %1934, %1939
  %1941 = mul <8 x i32> %1935, %1940
  %1942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1941)
  %1943 = icmp eq i64 %1906, %1910
  br i1 %1943, label %1956, label %1944

1944:                                             ; preds = %1897, %1938
  %1945 = phi i64 [ %1900, %1897 ], [ %1911, %1938 ]
  %1946 = phi i32 [ 1, %1897 ], [ %1942, %1938 ]
  br label %1947

1947:                                             ; preds = %1944, %1947
  %1948 = phi i64 [ %1953, %1947 ], [ %1945, %1944 ]
  %1949 = phi i32 [ %1952, %1947 ], [ %1946, %1944 ]
  %1950 = getelementptr inbounds i32, ptr %9, i64 %1948
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1949
  %1953 = add nsw i64 %1948, -1
  %1954 = trunc i64 %1948 to i32
  %1955 = icmp sgt i32 %1954, 0
  br i1 %1955, label %1947, label %1956, !llvm.loop !645

1956:                                             ; preds = %1947, %1938
  %1957 = phi i32 [ %1942, %1938 ], [ %1952, %1947 ]
  %1958 = and i64 %1907, 4294967295
  %1959 = getelementptr inbounds i32, ptr %6, i64 %1958
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = mul nsw i32 %1960, %1957
  %1962 = add nsw i32 %1961, %1901
  %1963 = icmp sgt i64 %1899, 2
  %1964 = add nsw i64 %1900, -1
  %1965 = add i32 %1898, 1
  br i1 %1963, label %1897, label %1966, !llvm.loop !646

1966:                                             ; preds = %1956, %1892
  %1967 = phi i32 [ %1896, %1892 ], [ %1962, %1956 ]
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds double, ptr %2, i64 %1968
  %1970 = load double, ptr %1969, align 8, !tbaa !18
  %1971 = getelementptr inbounds i32, ptr %1857, i64 %1968
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = sitofp i16 %1893 to double
  %1974 = shl i32 %1972, 16
  %1975 = ashr exact i32 %1974, 16
  %1976 = sitofp i32 %1975 to double
  %1977 = fmul fast double %1970, %1976
  %1978 = tail call fast double @llvm.fabs.f64(double %1977)
  %1979 = fadd fast double %1978, %1973
  %1980 = fptosi double %1979 to i16
  %1981 = fadd fast double %1970, %1895
  %1982 = add nuw nsw i32 %1894, 1
  br i1 %1886, label %1983, label %2030

1983:                                             ; preds = %1966
  %1984 = load i32, ptr %4, align 4, !tbaa !5
  %1985 = load i32, ptr %12, align 4, !tbaa !5
  %1986 = add nsw i32 %1985, -1
  %1987 = icmp slt i32 %1984, %1986
  br i1 %1987, label %2007, label %1988

1988:                                             ; preds = %1983
  %1989 = icmp eq i32 %1984, %1986
  br i1 %1989, label %1990, label %2023

1990:                                             ; preds = %1988
  store i32 0, ptr %4, align 4, !tbaa !5
  %1991 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1991, ptr %6, align 4, !tbaa !5
  br i1 %1891, label %2030, label %1992

1992:                                             ; preds = %1990, %2017
  %1993 = phi i64 [ %2021, %2017 ], [ 1, %1990 ]
  %1994 = getelementptr inbounds i32, ptr %4, i64 %1993
  %1995 = load i32, ptr %1994, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %12, i64 %1993
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = add nsw i32 %1997, -1
  %1999 = icmp slt i32 %1995, %1998
  br i1 %1999, label %2000, label %2015

2000:                                             ; preds = %1992
  br i1 %1987, label %2007, label %2001

2001:                                             ; preds = %2000
  %2002 = getelementptr inbounds i32, ptr %7, i64 %1993
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %1993
  %2005 = load i32, ptr %2004, align 4, !tbaa !5
  %2006 = add nsw i32 %2005, %2003
  store i32 %2006, ptr %2004, align 4, !tbaa !5
  br label %2025

2007:                                             ; preds = %1983, %2000
  %2008 = phi i32 [ %1995, %2000 ], [ %1984, %1983 ]
  %2009 = phi ptr [ %1994, %2000 ], [ %4, %1983 ]
  %2010 = phi i64 [ %1993, %2000 ], [ 0, %1983 ]
  %2011 = add nsw i32 %2008, 1
  store i32 %2011, ptr %2009, align 4, !tbaa !5
  %2012 = getelementptr inbounds i32, ptr %7, i64 %2010
  %2013 = load i32, ptr %2012, align 4, !tbaa !5
  %2014 = getelementptr inbounds i32, ptr %6, i64 %2010
  br label %2025

2015:                                             ; preds = %1992
  %2016 = icmp eq i32 %1995, %1998
  br i1 %2016, label %2017, label %2023

2017:                                             ; preds = %2015
  store i32 0, ptr %1994, align 4, !tbaa !5
  %2018 = getelementptr inbounds i32, ptr %8, i64 %1993
  %2019 = load i32, ptr %2018, align 4, !tbaa !5
  %2020 = getelementptr inbounds i32, ptr %6, i64 %1993
  store i32 %2019, ptr %2020, align 4, !tbaa !5
  %2021 = add nuw nsw i64 %1993, 1
  %2022 = icmp eq i64 %2021, %1889
  br i1 %2022, label %2030, label %1992, !llvm.loop !647

2023:                                             ; preds = %1988, %2015
  store i16 %1980, ptr %1859, align 2, !tbaa !78
  %2024 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2025:                                             ; preds = %2001, %2007
  %2026 = phi ptr [ %2014, %2007 ], [ %1994, %2001 ]
  %2027 = phi i32 [ %2013, %2007 ], [ 1, %2001 ]
  %2028 = load i32, ptr %2026, align 4, !tbaa !5
  %2029 = add nsw i32 %2028, %2027
  store i32 %2029, ptr %2026, align 4, !tbaa !5
  br label %2030

2030:                                             ; preds = %2017, %2025, %1990, %1966
  %2031 = icmp eq i32 %1982, %5
  br i1 %2031, label %5537, label %1892, !llvm.loop !648

2032:                                             ; preds = %1875, %2174
  %2033 = phi i16 [ 0, %1875 ], [ %2122, %2174 ]
  %2034 = phi i32 [ 0, %1875 ], [ %2123, %2174 ]
  %2035 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %2036, label %2105

2036:                                             ; preds = %2032, %2095
  %2037 = phi i32 [ %2104, %2095 ], [ 0, %2032 ]
  %2038 = phi i64 [ %2046, %2095 ], [ %1880, %2032 ]
  %2039 = phi i64 [ %2103, %2095 ], [ %1879, %2032 ]
  %2040 = phi i32 [ %2101, %2095 ], [ %2035, %2032 ]
  %2041 = sub i32 %1878, %2037
  %2042 = tail call i32 @llvm.smin.i32(i32 %2041, i32 0)
  %2043 = sub i32 %2041, %2042
  %2044 = zext i32 %2043 to i64
  %2045 = add nuw nsw i64 %2044, 1
  %2046 = add nsw i64 %2038, -1
  %2047 = icmp ult i32 %2043, 31
  br i1 %2047, label %2083, label %2048

2048:                                             ; preds = %2036
  %2049 = and i64 %2045, 8589934560
  %2050 = sub i64 %2039, %2049
  br label %2051

2051:                                             ; preds = %2051, %2048
  %2052 = phi i64 [ 0, %2048 ], [ %2075, %2051 ]
  %2053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2071, %2051 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2072, %2051 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2073, %2051 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2074, %2051 ]
  %2057 = sub i64 %2039, %2052
  %2058 = getelementptr inbounds i32, ptr %11, i64 %2057
  %2059 = getelementptr inbounds i32, ptr %2058, i64 -7
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2058, i64 -15
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !5
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = getelementptr inbounds i32, ptr %2058, i64 -23
  %2066 = load <8 x i32>, ptr %2065, align 4, !tbaa !5
  %2067 = shufflevector <8 x i32> %2066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2068 = getelementptr inbounds i32, ptr %2058, i64 -31
  %2069 = load <8 x i32>, ptr %2068, align 4, !tbaa !5
  %2070 = shufflevector <8 x i32> %2069, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2071 = mul <8 x i32> %2061, %2053
  %2072 = mul <8 x i32> %2064, %2054
  %2073 = mul <8 x i32> %2067, %2055
  %2074 = mul <8 x i32> %2070, %2056
  %2075 = add nuw i64 %2052, 32
  %2076 = icmp eq i64 %2075, %2049
  br i1 %2076, label %2077, label %2051, !llvm.loop !649

2077:                                             ; preds = %2051
  %2078 = mul <8 x i32> %2072, %2071
  %2079 = mul <8 x i32> %2073, %2078
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2080)
  %2082 = icmp eq i64 %2045, %2049
  br i1 %2082, label %2095, label %2083

2083:                                             ; preds = %2036, %2077
  %2084 = phi i64 [ %2039, %2036 ], [ %2050, %2077 ]
  %2085 = phi i32 [ 1, %2036 ], [ %2081, %2077 ]
  br label %2086

2086:                                             ; preds = %2083, %2086
  %2087 = phi i64 [ %2092, %2086 ], [ %2084, %2083 ]
  %2088 = phi i32 [ %2091, %2086 ], [ %2085, %2083 ]
  %2089 = getelementptr inbounds i32, ptr %11, i64 %2087
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = mul nsw i32 %2090, %2088
  %2092 = add nsw i64 %2087, -1
  %2093 = trunc i64 %2087 to i32
  %2094 = icmp sgt i32 %2093, 0
  br i1 %2094, label %2086, label %2095, !llvm.loop !650

2095:                                             ; preds = %2086, %2077
  %2096 = phi i32 [ %2081, %2077 ], [ %2091, %2086 ]
  %2097 = and i64 %2046, 4294967295
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2097
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = mul nsw i32 %2099, %2096
  %2101 = add nsw i32 %2100, %2040
  %2102 = icmp sgt i64 %2038, 2
  %2103 = add nsw i64 %2039, -1
  %2104 = add i32 %2037, 1
  br i1 %2102, label %2036, label %2105, !llvm.loop !651

2105:                                             ; preds = %2095, %2032
  %2106 = phi i32 [ %2035, %2032 ], [ %2101, %2095 ]
  %2107 = icmp slt i32 %2106, %5
  br i1 %2107, label %2110, label %2108

2108:                                             ; preds = %2105
  %2109 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2110:                                             ; preds = %2105
  %2111 = sext i32 %2106 to i64
  %2112 = getelementptr inbounds i32, ptr %1857, i64 %2111
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = sitofp i16 %2033 to double
  %2115 = shl i32 %2113, 16
  %2116 = ashr exact i32 %2115, 16
  %2117 = sitofp i32 %2116 to double
  %2118 = icmp slt i32 %2115, 0
  %2119 = fneg fast double %2117
  %2120 = select fast i1 %2118, double %2119, double %2117
  %2121 = fadd fast double %2120, %2114
  %2122 = fptosi double %2121 to i16
  store i16 %2122, ptr %1859, align 2, !tbaa !78
  %2123 = add nuw nsw i32 %2034, 1
  br i1 %1877, label %2124, label %2174

2124:                                             ; preds = %2110
  %2125 = load i32, ptr %4, align 4, !tbaa !5
  %2126 = load i32, ptr %12, align 4, !tbaa !5
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2125, %2127
  br i1 %2128, label %2151, label %2129

2129:                                             ; preds = %2124
  %2130 = icmp eq i32 %2125, %2127
  br i1 %2130, label %2131, label %2167

2131:                                             ; preds = %2129
  store i32 0, ptr %4, align 4, !tbaa !5
  %2132 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2132, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2174, label %2133

2133:                                             ; preds = %2131, %2161
  %2134 = phi i64 [ %2165, %2161 ], [ 1, %2131 ]
  %2135 = getelementptr inbounds i32, ptr %4, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %12, i64 %2134
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, -1
  %2140 = icmp slt i32 %2136, %2139
  br i1 %2140, label %2141, label %2159

2141:                                             ; preds = %2133
  br i1 %2128, label %2151, label %2142

2142:                                             ; preds = %2141
  %2143 = shl i64 %2134, 32
  %2144 = add i64 %2143, -4294967296
  %2145 = ashr exact i64 %2144, 32
  %2146 = getelementptr inbounds i32, ptr %7, i64 %2145
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = getelementptr inbounds i32, ptr %6, i64 %2134
  %2149 = load i32, ptr %2148, align 4, !tbaa !5
  %2150 = add nsw i32 %2149, %2147
  store i32 %2150, ptr %2148, align 4, !tbaa !5
  br label %2169

2151:                                             ; preds = %2124, %2141
  %2152 = phi i32 [ %2136, %2141 ], [ %2125, %2124 ]
  %2153 = phi ptr [ %2135, %2141 ], [ %4, %2124 ]
  %2154 = phi i64 [ %2134, %2141 ], [ 0, %2124 ]
  %2155 = add nsw i32 %2152, 1
  store i32 %2155, ptr %2153, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %7, i64 %2154
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = getelementptr inbounds i32, ptr %6, i64 %2154
  br label %2169

2159:                                             ; preds = %2133
  %2160 = icmp eq i32 %2136, %2139
  br i1 %2160, label %2161, label %2167

2161:                                             ; preds = %2159
  store i32 0, ptr %2135, align 4, !tbaa !5
  %2162 = getelementptr inbounds i32, ptr %8, i64 %2134
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2134
  store i32 %2163, ptr %2164, align 4, !tbaa !5
  %2165 = add nuw nsw i64 %2134, 1
  %2166 = icmp eq i64 %2165, %1880
  br i1 %2166, label %2174, label %2133, !llvm.loop !652

2167:                                             ; preds = %2129, %2159
  %2168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2169:                                             ; preds = %2142, %2151
  %2170 = phi ptr [ %2158, %2151 ], [ %2135, %2142 ]
  %2171 = phi i32 [ %2157, %2151 ], [ 1, %2142 ]
  %2172 = load i32, ptr %2170, align 4, !tbaa !5
  %2173 = add nsw i32 %2172, %2171
  store i32 %2173, ptr %2170, align 4, !tbaa !5
  br label %2174

2174:                                             ; preds = %2161, %2169, %2131, %2110
  %2175 = icmp eq i32 %2123, %5
  br i1 %2175, label %5545, label %2032, !llvm.loop !653

2176:                                             ; preds = %1868
  %2177 = getelementptr inbounds i32, ptr %3, i64 %19
  %2178 = load i32, ptr %2177, align 4, !tbaa !5
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp sgt i32 %5, 0
  br i1 %2179, label %2190, label %2181

2181:                                             ; preds = %2176
  br i1 %2180, label %2182, label %5545

2182:                                             ; preds = %2181
  %2183 = icmp sgt i32 %13, 1
  %2184 = icmp sgt i32 %13, 0
  %2185 = add i32 %13, -2
  %2186 = zext i32 %2185 to i64
  %2187 = zext i32 %13 to i64
  %2188 = add nuw i32 %5, 1
  %2189 = icmp eq i32 %13, 1
  br label %2335

2190:                                             ; preds = %2176
  br i1 %2180, label %2191, label %5545

2191:                                             ; preds = %2190
  %2192 = icmp sgt i32 %13, 1
  %2193 = icmp sgt i32 %13, 0
  %2194 = add i32 %13, -2
  %2195 = zext i32 %2194 to i64
  %2196 = zext i32 %13 to i64
  %2197 = add nuw i32 %5, 1
  %2198 = icmp eq i32 %13, 1
  br label %2199

2199:                                             ; preds = %2191, %2333
  %2200 = phi i16 [ 0, %2191 ], [ %2283, %2333 ]
  %2201 = phi i32 [ 0, %2191 ], [ %2285, %2333 ]
  %2202 = phi double [ 0.000000e+00, %2191 ], [ %2284, %2333 ]
  %2203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2192, label %2204, label %2273

2204:                                             ; preds = %2199, %2263
  %2205 = phi i32 [ %2272, %2263 ], [ 0, %2199 ]
  %2206 = phi i64 [ %2214, %2263 ], [ %2196, %2199 ]
  %2207 = phi i64 [ %2271, %2263 ], [ %2195, %2199 ]
  %2208 = phi i32 [ %2269, %2263 ], [ %2203, %2199 ]
  %2209 = sub i32 %2194, %2205
  %2210 = tail call i32 @llvm.smin.i32(i32 %2209, i32 0)
  %2211 = sub i32 %2209, %2210
  %2212 = zext i32 %2211 to i64
  %2213 = add nuw nsw i64 %2212, 1
  %2214 = add nsw i64 %2206, -1
  %2215 = icmp ult i32 %2211, 31
  br i1 %2215, label %2251, label %2216

2216:                                             ; preds = %2204
  %2217 = and i64 %2213, 8589934560
  %2218 = sub i64 %2207, %2217
  br label %2219

2219:                                             ; preds = %2219, %2216
  %2220 = phi i64 [ 0, %2216 ], [ %2243, %2219 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2239, %2219 ]
  %2222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2240, %2219 ]
  %2223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2241, %2219 ]
  %2224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2242, %2219 ]
  %2225 = sub i64 %2207, %2220
  %2226 = getelementptr inbounds i32, ptr %9, i64 %2225
  %2227 = getelementptr inbounds i32, ptr %2226, i64 -7
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !5
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = getelementptr inbounds i32, ptr %2226, i64 -15
  %2231 = load <8 x i32>, ptr %2230, align 4, !tbaa !5
  %2232 = shufflevector <8 x i32> %2231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2233 = getelementptr inbounds i32, ptr %2226, i64 -23
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !5
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2226, i64 -31
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !5
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = mul <8 x i32> %2229, %2221
  %2240 = mul <8 x i32> %2232, %2222
  %2241 = mul <8 x i32> %2235, %2223
  %2242 = mul <8 x i32> %2238, %2224
  %2243 = add nuw i64 %2220, 32
  %2244 = icmp eq i64 %2243, %2217
  br i1 %2244, label %2245, label %2219, !llvm.loop !654

2245:                                             ; preds = %2219
  %2246 = mul <8 x i32> %2240, %2239
  %2247 = mul <8 x i32> %2241, %2246
  %2248 = mul <8 x i32> %2242, %2247
  %2249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2248)
  %2250 = icmp eq i64 %2213, %2217
  br i1 %2250, label %2263, label %2251

2251:                                             ; preds = %2204, %2245
  %2252 = phi i64 [ %2207, %2204 ], [ %2218, %2245 ]
  %2253 = phi i32 [ 1, %2204 ], [ %2249, %2245 ]
  br label %2254

2254:                                             ; preds = %2251, %2254
  %2255 = phi i64 [ %2260, %2254 ], [ %2252, %2251 ]
  %2256 = phi i32 [ %2259, %2254 ], [ %2253, %2251 ]
  %2257 = getelementptr inbounds i32, ptr %9, i64 %2255
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = mul nsw i32 %2258, %2256
  %2260 = add nsw i64 %2255, -1
  %2261 = trunc i64 %2255 to i32
  %2262 = icmp sgt i32 %2261, 0
  br i1 %2262, label %2254, label %2263, !llvm.loop !655

2263:                                             ; preds = %2254, %2245
  %2264 = phi i32 [ %2249, %2245 ], [ %2259, %2254 ]
  %2265 = and i64 %2214, 4294967295
  %2266 = getelementptr inbounds i32, ptr %6, i64 %2265
  %2267 = load i32, ptr %2266, align 4, !tbaa !5
  %2268 = mul nsw i32 %2267, %2264
  %2269 = add nsw i32 %2268, %2208
  %2270 = icmp sgt i64 %2206, 2
  %2271 = add nsw i64 %2207, -1
  %2272 = add i32 %2205, 1
  br i1 %2270, label %2204, label %2273, !llvm.loop !656

2273:                                             ; preds = %2263, %2199
  %2274 = phi i32 [ %2203, %2199 ], [ %2269, %2263 ]
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds i32, ptr %1857, i64 %2275
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = and i32 %2277, 32768
  %2279 = icmp eq i32 %2278, 0
  %2280 = sub i32 0, %2277
  %2281 = select i1 %2279, i32 %2277, i32 %2280
  %2282 = trunc i32 %2281 to i16
  %2283 = add i16 %2200, %2282
  %2284 = fadd fast double %2202, 1.000000e+00
  %2285 = add nuw nsw i32 %2201, 1
  br i1 %2193, label %2286, label %2333

2286:                                             ; preds = %2273
  %2287 = load i32, ptr %4, align 4, !tbaa !5
  %2288 = load i32, ptr %12, align 4, !tbaa !5
  %2289 = add nsw i32 %2288, -1
  %2290 = icmp slt i32 %2287, %2289
  br i1 %2290, label %2310, label %2291

2291:                                             ; preds = %2286
  %2292 = icmp eq i32 %2287, %2289
  br i1 %2292, label %2293, label %2326

2293:                                             ; preds = %2291
  store i32 0, ptr %4, align 4, !tbaa !5
  %2294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2294, ptr %6, align 4, !tbaa !5
  br i1 %2198, label %2333, label %2295

2295:                                             ; preds = %2293, %2320
  %2296 = phi i64 [ %2324, %2320 ], [ 1, %2293 ]
  %2297 = getelementptr inbounds i32, ptr %4, i64 %2296
  %2298 = load i32, ptr %2297, align 4, !tbaa !5
  %2299 = getelementptr inbounds i32, ptr %12, i64 %2296
  %2300 = load i32, ptr %2299, align 4, !tbaa !5
  %2301 = add nsw i32 %2300, -1
  %2302 = icmp slt i32 %2298, %2301
  br i1 %2302, label %2303, label %2318

2303:                                             ; preds = %2295
  br i1 %2290, label %2310, label %2304

2304:                                             ; preds = %2303
  %2305 = getelementptr inbounds i32, ptr %7, i64 %2296
  %2306 = load i32, ptr %2305, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %6, i64 %2296
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = add nsw i32 %2308, %2306
  store i32 %2309, ptr %2307, align 4, !tbaa !5
  br label %2328

2310:                                             ; preds = %2286, %2303
  %2311 = phi i32 [ %2298, %2303 ], [ %2287, %2286 ]
  %2312 = phi ptr [ %2297, %2303 ], [ %4, %2286 ]
  %2313 = phi i64 [ %2296, %2303 ], [ 0, %2286 ]
  %2314 = add nsw i32 %2311, 1
  store i32 %2314, ptr %2312, align 4, !tbaa !5
  %2315 = getelementptr inbounds i32, ptr %7, i64 %2313
  %2316 = load i32, ptr %2315, align 4, !tbaa !5
  %2317 = getelementptr inbounds i32, ptr %6, i64 %2313
  br label %2328

2318:                                             ; preds = %2295
  %2319 = icmp eq i32 %2298, %2301
  br i1 %2319, label %2320, label %2326

2320:                                             ; preds = %2318
  store i32 0, ptr %2297, align 4, !tbaa !5
  %2321 = getelementptr inbounds i32, ptr %8, i64 %2296
  %2322 = load i32, ptr %2321, align 4, !tbaa !5
  %2323 = getelementptr inbounds i32, ptr %6, i64 %2296
  store i32 %2322, ptr %2323, align 4, !tbaa !5
  %2324 = add nuw nsw i64 %2296, 1
  %2325 = icmp eq i64 %2324, %2196
  br i1 %2325, label %2333, label %2295, !llvm.loop !657

2326:                                             ; preds = %2291, %2318
  store i16 %2283, ptr %1859, align 2, !tbaa !78
  %2327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2328:                                             ; preds = %2304, %2310
  %2329 = phi ptr [ %2317, %2310 ], [ %2297, %2304 ]
  %2330 = phi i32 [ %2316, %2310 ], [ 1, %2304 ]
  %2331 = load i32, ptr %2329, align 4, !tbaa !5
  %2332 = add nsw i32 %2331, %2330
  store i32 %2332, ptr %2329, align 4, !tbaa !5
  br label %2333

2333:                                             ; preds = %2320, %2328, %2293, %2273
  %2334 = icmp eq i32 %2285, %5
  br i1 %2334, label %5538, label %2199, !llvm.loop !658

2335:                                             ; preds = %2182, %2474
  %2336 = phi i16 [ 0, %2182 ], [ %2422, %2474 ]
  %2337 = phi i32 [ 0, %2182 ], [ %2423, %2474 ]
  %2338 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2339, label %2408

2339:                                             ; preds = %2335, %2398
  %2340 = phi i32 [ %2407, %2398 ], [ 0, %2335 ]
  %2341 = phi i64 [ %2349, %2398 ], [ %2187, %2335 ]
  %2342 = phi i64 [ %2406, %2398 ], [ %2186, %2335 ]
  %2343 = phi i32 [ %2404, %2398 ], [ %2338, %2335 ]
  %2344 = sub i32 %2185, %2340
  %2345 = tail call i32 @llvm.smin.i32(i32 %2344, i32 0)
  %2346 = sub i32 %2344, %2345
  %2347 = zext i32 %2346 to i64
  %2348 = add nuw nsw i64 %2347, 1
  %2349 = add nsw i64 %2341, -1
  %2350 = icmp ult i32 %2346, 31
  br i1 %2350, label %2386, label %2351

2351:                                             ; preds = %2339
  %2352 = and i64 %2348, 8589934560
  %2353 = sub i64 %2342, %2352
  br label %2354

2354:                                             ; preds = %2354, %2351
  %2355 = phi i64 [ 0, %2351 ], [ %2378, %2354 ]
  %2356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2374, %2354 ]
  %2357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2375, %2354 ]
  %2358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2376, %2354 ]
  %2359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2351 ], [ %2377, %2354 ]
  %2360 = sub i64 %2342, %2355
  %2361 = getelementptr inbounds i32, ptr %11, i64 %2360
  %2362 = getelementptr inbounds i32, ptr %2361, i64 -7
  %2363 = load <8 x i32>, ptr %2362, align 4, !tbaa !5
  %2364 = shufflevector <8 x i32> %2363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2365 = getelementptr inbounds i32, ptr %2361, i64 -15
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !5
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2361, i64 -23
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !5
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = getelementptr inbounds i32, ptr %2361, i64 -31
  %2372 = load <8 x i32>, ptr %2371, align 4, !tbaa !5
  %2373 = shufflevector <8 x i32> %2372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2374 = mul <8 x i32> %2364, %2356
  %2375 = mul <8 x i32> %2367, %2357
  %2376 = mul <8 x i32> %2370, %2358
  %2377 = mul <8 x i32> %2373, %2359
  %2378 = add nuw i64 %2355, 32
  %2379 = icmp eq i64 %2378, %2352
  br i1 %2379, label %2380, label %2354, !llvm.loop !659

2380:                                             ; preds = %2354
  %2381 = mul <8 x i32> %2375, %2374
  %2382 = mul <8 x i32> %2376, %2381
  %2383 = mul <8 x i32> %2377, %2382
  %2384 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2383)
  %2385 = icmp eq i64 %2348, %2352
  br i1 %2385, label %2398, label %2386

2386:                                             ; preds = %2339, %2380
  %2387 = phi i64 [ %2342, %2339 ], [ %2353, %2380 ]
  %2388 = phi i32 [ 1, %2339 ], [ %2384, %2380 ]
  br label %2389

2389:                                             ; preds = %2386, %2389
  %2390 = phi i64 [ %2395, %2389 ], [ %2387, %2386 ]
  %2391 = phi i32 [ %2394, %2389 ], [ %2388, %2386 ]
  %2392 = getelementptr inbounds i32, ptr %11, i64 %2390
  %2393 = load i32, ptr %2392, align 4, !tbaa !5
  %2394 = mul nsw i32 %2393, %2391
  %2395 = add nsw i64 %2390, -1
  %2396 = trunc i64 %2390 to i32
  %2397 = icmp sgt i32 %2396, 0
  br i1 %2397, label %2389, label %2398, !llvm.loop !660

2398:                                             ; preds = %2389, %2380
  %2399 = phi i32 [ %2384, %2380 ], [ %2394, %2389 ]
  %2400 = and i64 %2349, 4294967295
  %2401 = getelementptr inbounds i32, ptr %6, i64 %2400
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = mul nsw i32 %2402, %2399
  %2404 = add nsw i32 %2403, %2343
  %2405 = icmp sgt i64 %2341, 2
  %2406 = add nsw i64 %2342, -1
  %2407 = add i32 %2340, 1
  br i1 %2405, label %2339, label %2408, !llvm.loop !661

2408:                                             ; preds = %2398, %2335
  %2409 = phi i32 [ %2338, %2335 ], [ %2404, %2398 ]
  %2410 = icmp slt i32 %2409, %5
  br i1 %2410, label %2413, label %2411

2411:                                             ; preds = %2408
  %2412 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2413:                                             ; preds = %2408
  %2414 = sext i32 %2409 to i64
  %2415 = getelementptr inbounds i32, ptr %1857, i64 %2414
  %2416 = load i32, ptr %2415, align 4, !tbaa !5
  %2417 = and i32 %2416, 32768
  %2418 = icmp eq i32 %2417, 0
  %2419 = sub i32 0, %2416
  %2420 = select i1 %2418, i32 %2416, i32 %2419
  %2421 = trunc i32 %2420 to i16
  %2422 = add i16 %2336, %2421
  store i16 %2422, ptr %1859, align 2, !tbaa !78
  %2423 = add nuw nsw i32 %2337, 1
  br i1 %2184, label %2424, label %2474

2424:                                             ; preds = %2413
  %2425 = load i32, ptr %4, align 4, !tbaa !5
  %2426 = load i32, ptr %12, align 4, !tbaa !5
  %2427 = add nsw i32 %2426, -1
  %2428 = icmp slt i32 %2425, %2427
  br i1 %2428, label %2451, label %2429

2429:                                             ; preds = %2424
  %2430 = icmp eq i32 %2425, %2427
  br i1 %2430, label %2431, label %2467

2431:                                             ; preds = %2429
  store i32 0, ptr %4, align 4, !tbaa !5
  %2432 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2432, ptr %6, align 4, !tbaa !5
  br i1 %2189, label %2474, label %2433

2433:                                             ; preds = %2431, %2461
  %2434 = phi i64 [ %2465, %2461 ], [ 1, %2431 ]
  %2435 = getelementptr inbounds i32, ptr %4, i64 %2434
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %12, i64 %2434
  %2438 = load i32, ptr %2437, align 4, !tbaa !5
  %2439 = add nsw i32 %2438, -1
  %2440 = icmp slt i32 %2436, %2439
  br i1 %2440, label %2441, label %2459

2441:                                             ; preds = %2433
  br i1 %2428, label %2451, label %2442

2442:                                             ; preds = %2441
  %2443 = shl i64 %2434, 32
  %2444 = add i64 %2443, -4294967296
  %2445 = ashr exact i64 %2444, 32
  %2446 = getelementptr inbounds i32, ptr %7, i64 %2445
  %2447 = load i32, ptr %2446, align 4, !tbaa !5
  %2448 = getelementptr inbounds i32, ptr %6, i64 %2434
  %2449 = load i32, ptr %2448, align 4, !tbaa !5
  %2450 = add nsw i32 %2449, %2447
  store i32 %2450, ptr %2448, align 4, !tbaa !5
  br label %2469

2451:                                             ; preds = %2424, %2441
  %2452 = phi i32 [ %2436, %2441 ], [ %2425, %2424 ]
  %2453 = phi ptr [ %2435, %2441 ], [ %4, %2424 ]
  %2454 = phi i64 [ %2434, %2441 ], [ 0, %2424 ]
  %2455 = add nsw i32 %2452, 1
  store i32 %2455, ptr %2453, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %7, i64 %2454
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = getelementptr inbounds i32, ptr %6, i64 %2454
  br label %2469

2459:                                             ; preds = %2433
  %2460 = icmp eq i32 %2436, %2439
  br i1 %2460, label %2461, label %2467

2461:                                             ; preds = %2459
  store i32 0, ptr %2435, align 4, !tbaa !5
  %2462 = getelementptr inbounds i32, ptr %8, i64 %2434
  %2463 = load i32, ptr %2462, align 4, !tbaa !5
  %2464 = getelementptr inbounds i32, ptr %6, i64 %2434
  store i32 %2463, ptr %2464, align 4, !tbaa !5
  %2465 = add nuw nsw i64 %2434, 1
  %2466 = icmp eq i64 %2465, %2187
  br i1 %2466, label %2474, label %2433, !llvm.loop !662

2467:                                             ; preds = %2429, %2459
  %2468 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2469:                                             ; preds = %2442, %2451
  %2470 = phi ptr [ %2458, %2451 ], [ %2435, %2442 ]
  %2471 = phi i32 [ %2457, %2451 ], [ 1, %2442 ]
  %2472 = load i32, ptr %2470, align 4, !tbaa !5
  %2473 = add nsw i32 %2472, %2471
  store i32 %2473, ptr %2470, align 4, !tbaa !5
  br label %2474

2474:                                             ; preds = %2461, %2469, %2431, %2413
  %2475 = icmp eq i32 %2423, %5
  br i1 %2475, label %5545, label %2335, !llvm.loop !663

2476:                                             ; preds = %1868
  %2477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

2478:                                             ; preds = %18
  %2479 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2480 = load ptr, ptr %2479, align 8, !tbaa !9
  %2481 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !9
  store i32 0, ptr %2482, align 4, !tbaa !5
  %2483 = icmp eq i32 %13, 0
  br i1 %2483, label %2484, label %2487

2484:                                             ; preds = %2478
  %2485 = load i32, ptr %2480, align 4, !tbaa !5
  %2486 = tail call i32 @llvm.abs.i32(i32 %2485, i1 true)
  store i32 %2486, ptr %2482, align 4, !tbaa !5
  br label %5545

2487:                                             ; preds = %2478
  switch i32 %1, label %3083 [
    i32 1, label %2488
    i32 0, label %2791
  ]

2488:                                             ; preds = %2487
  %2489 = getelementptr inbounds i32, ptr %3, i64 %19
  %2490 = load i32, ptr %2489, align 4, !tbaa !5
  %2491 = icmp eq i32 %2490, 0
  %2492 = icmp sgt i32 %5, 0
  br i1 %2491, label %2502, label %2493

2493:                                             ; preds = %2488
  br i1 %2492, label %2494, label %5545

2494:                                             ; preds = %2493
  %2495 = icmp sgt i32 %13, 1
  %2496 = icmp sgt i32 %13, 0
  %2497 = add i32 %13, -2
  %2498 = zext i32 %2497 to i64
  %2499 = zext i32 %13 to i64
  %2500 = add nuw i32 %5, 1
  %2501 = icmp eq i32 %13, 1
  br label %2649

2502:                                             ; preds = %2488
  br i1 %2492, label %2503, label %5545

2503:                                             ; preds = %2502
  %2504 = icmp sgt i32 %13, 1
  %2505 = icmp sgt i32 %13, 0
  %2506 = add i32 %13, -2
  %2507 = zext i32 %2506 to i64
  %2508 = zext i32 %13 to i64
  %2509 = add nuw i32 %5, 1
  %2510 = icmp eq i32 %13, 1
  br label %2511

2511:                                             ; preds = %2503, %2647
  %2512 = phi i32 [ 0, %2503 ], [ %2599, %2647 ]
  %2513 = phi double [ 0.000000e+00, %2503 ], [ %2598, %2647 ]
  %2514 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2504, label %2515, label %2584

2515:                                             ; preds = %2511, %2574
  %2516 = phi i32 [ %2583, %2574 ], [ 0, %2511 ]
  %2517 = phi i64 [ %2525, %2574 ], [ %2508, %2511 ]
  %2518 = phi i64 [ %2582, %2574 ], [ %2507, %2511 ]
  %2519 = phi i32 [ %2580, %2574 ], [ %2514, %2511 ]
  %2520 = sub i32 %2506, %2516
  %2521 = tail call i32 @llvm.smin.i32(i32 %2520, i32 0)
  %2522 = sub i32 %2520, %2521
  %2523 = zext i32 %2522 to i64
  %2524 = add nuw nsw i64 %2523, 1
  %2525 = add nsw i64 %2517, -1
  %2526 = icmp ult i32 %2522, 31
  br i1 %2526, label %2562, label %2527

2527:                                             ; preds = %2515
  %2528 = and i64 %2524, 8589934560
  %2529 = sub i64 %2518, %2528
  br label %2530

2530:                                             ; preds = %2530, %2527
  %2531 = phi i64 [ 0, %2527 ], [ %2554, %2530 ]
  %2532 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2550, %2530 ]
  %2533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2551, %2530 ]
  %2534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2552, %2530 ]
  %2535 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2527 ], [ %2553, %2530 ]
  %2536 = sub i64 %2518, %2531
  %2537 = getelementptr inbounds i32, ptr %9, i64 %2536
  %2538 = getelementptr inbounds i32, ptr %2537, i64 -7
  %2539 = load <8 x i32>, ptr %2538, align 4, !tbaa !5
  %2540 = shufflevector <8 x i32> %2539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2541 = getelementptr inbounds i32, ptr %2537, i64 -15
  %2542 = load <8 x i32>, ptr %2541, align 4, !tbaa !5
  %2543 = shufflevector <8 x i32> %2542, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2544 = getelementptr inbounds i32, ptr %2537, i64 -23
  %2545 = load <8 x i32>, ptr %2544, align 4, !tbaa !5
  %2546 = shufflevector <8 x i32> %2545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2547 = getelementptr inbounds i32, ptr %2537, i64 -31
  %2548 = load <8 x i32>, ptr %2547, align 4, !tbaa !5
  %2549 = shufflevector <8 x i32> %2548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2550 = mul <8 x i32> %2540, %2532
  %2551 = mul <8 x i32> %2543, %2533
  %2552 = mul <8 x i32> %2546, %2534
  %2553 = mul <8 x i32> %2549, %2535
  %2554 = add nuw i64 %2531, 32
  %2555 = icmp eq i64 %2554, %2528
  br i1 %2555, label %2556, label %2530, !llvm.loop !664

2556:                                             ; preds = %2530
  %2557 = mul <8 x i32> %2551, %2550
  %2558 = mul <8 x i32> %2552, %2557
  %2559 = mul <8 x i32> %2553, %2558
  %2560 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2559)
  %2561 = icmp eq i64 %2524, %2528
  br i1 %2561, label %2574, label %2562

2562:                                             ; preds = %2515, %2556
  %2563 = phi i64 [ %2518, %2515 ], [ %2529, %2556 ]
  %2564 = phi i32 [ 1, %2515 ], [ %2560, %2556 ]
  br label %2565

2565:                                             ; preds = %2562, %2565
  %2566 = phi i64 [ %2571, %2565 ], [ %2563, %2562 ]
  %2567 = phi i32 [ %2570, %2565 ], [ %2564, %2562 ]
  %2568 = getelementptr inbounds i32, ptr %9, i64 %2566
  %2569 = load i32, ptr %2568, align 4, !tbaa !5
  %2570 = mul nsw i32 %2569, %2567
  %2571 = add nsw i64 %2566, -1
  %2572 = trunc i64 %2566 to i32
  %2573 = icmp sgt i32 %2572, 0
  br i1 %2573, label %2565, label %2574, !llvm.loop !665

2574:                                             ; preds = %2565, %2556
  %2575 = phi i32 [ %2560, %2556 ], [ %2570, %2565 ]
  %2576 = and i64 %2525, 4294967295
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2576
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = mul nsw i32 %2578, %2575
  %2580 = add nsw i32 %2579, %2519
  %2581 = icmp sgt i64 %2517, 2
  %2582 = add nsw i64 %2518, -1
  %2583 = add i32 %2516, 1
  br i1 %2581, label %2515, label %2584, !llvm.loop !666

2584:                                             ; preds = %2574, %2511
  %2585 = phi i32 [ %2514, %2511 ], [ %2580, %2574 ]
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds double, ptr %2, i64 %2586
  %2588 = load double, ptr %2587, align 8, !tbaa !18
  %2589 = getelementptr inbounds i32, ptr %2480, i64 %2586
  %2590 = load i32, ptr %2589, align 4, !tbaa !5
  %2591 = load i32, ptr %2482, align 4, !tbaa !5
  %2592 = sitofp i32 %2591 to double
  %2593 = sitofp i32 %2590 to double
  %2594 = fmul fast double %2588, %2593
  %2595 = tail call fast double @llvm.fabs.f64(double %2594)
  %2596 = fadd fast double %2595, %2592
  %2597 = fptosi double %2596 to i32
  store i32 %2597, ptr %2482, align 4, !tbaa !5
  %2598 = fadd fast double %2588, %2513
  %2599 = add nuw nsw i32 %2512, 1
  br i1 %2505, label %2600, label %2647

2600:                                             ; preds = %2584
  %2601 = load i32, ptr %4, align 4, !tbaa !5
  %2602 = load i32, ptr %12, align 4, !tbaa !5
  %2603 = add nsw i32 %2602, -1
  %2604 = icmp slt i32 %2601, %2603
  br i1 %2604, label %2624, label %2605

2605:                                             ; preds = %2600
  %2606 = icmp eq i32 %2601, %2603
  br i1 %2606, label %2607, label %2640

2607:                                             ; preds = %2605
  store i32 0, ptr %4, align 4, !tbaa !5
  %2608 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2608, ptr %6, align 4, !tbaa !5
  br i1 %2510, label %2647, label %2609

2609:                                             ; preds = %2607, %2634
  %2610 = phi i64 [ %2638, %2634 ], [ 1, %2607 ]
  %2611 = getelementptr inbounds i32, ptr %4, i64 %2610
  %2612 = load i32, ptr %2611, align 4, !tbaa !5
  %2613 = getelementptr inbounds i32, ptr %12, i64 %2610
  %2614 = load i32, ptr %2613, align 4, !tbaa !5
  %2615 = add nsw i32 %2614, -1
  %2616 = icmp slt i32 %2612, %2615
  br i1 %2616, label %2617, label %2632

2617:                                             ; preds = %2609
  br i1 %2604, label %2624, label %2618

2618:                                             ; preds = %2617
  %2619 = getelementptr inbounds i32, ptr %7, i64 %2610
  %2620 = load i32, ptr %2619, align 4, !tbaa !5
  %2621 = getelementptr inbounds i32, ptr %6, i64 %2610
  %2622 = load i32, ptr %2621, align 4, !tbaa !5
  %2623 = add nsw i32 %2622, %2620
  store i32 %2623, ptr %2621, align 4, !tbaa !5
  br label %2642

2624:                                             ; preds = %2600, %2617
  %2625 = phi i32 [ %2612, %2617 ], [ %2601, %2600 ]
  %2626 = phi ptr [ %2611, %2617 ], [ %4, %2600 ]
  %2627 = phi i64 [ %2610, %2617 ], [ 0, %2600 ]
  %2628 = add nsw i32 %2625, 1
  store i32 %2628, ptr %2626, align 4, !tbaa !5
  %2629 = getelementptr inbounds i32, ptr %7, i64 %2627
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2627
  br label %2642

2632:                                             ; preds = %2609
  %2633 = icmp eq i32 %2612, %2615
  br i1 %2633, label %2634, label %2640

2634:                                             ; preds = %2632
  store i32 0, ptr %2611, align 4, !tbaa !5
  %2635 = getelementptr inbounds i32, ptr %8, i64 %2610
  %2636 = load i32, ptr %2635, align 4, !tbaa !5
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2610
  store i32 %2636, ptr %2637, align 4, !tbaa !5
  %2638 = add nuw nsw i64 %2610, 1
  %2639 = icmp eq i64 %2638, %2508
  br i1 %2639, label %2647, label %2609, !llvm.loop !667

2640:                                             ; preds = %2605, %2632
  %2641 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2642:                                             ; preds = %2618, %2624
  %2643 = phi ptr [ %2631, %2624 ], [ %2611, %2618 ]
  %2644 = phi i32 [ %2630, %2624 ], [ 1, %2618 ]
  %2645 = load i32, ptr %2643, align 4, !tbaa !5
  %2646 = add nsw i32 %2645, %2644
  store i32 %2646, ptr %2643, align 4, !tbaa !5
  br label %2647

2647:                                             ; preds = %2634, %2642, %2607, %2584
  %2648 = icmp eq i32 %2599, %5
  br i1 %2648, label %5545, label %2511, !llvm.loop !668

2649:                                             ; preds = %2494, %2789
  %2650 = phi i32 [ 0, %2494 ], [ %2738, %2789 ]
  %2651 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2495, label %2652, label %2721

2652:                                             ; preds = %2649, %2711
  %2653 = phi i32 [ %2720, %2711 ], [ 0, %2649 ]
  %2654 = phi i64 [ %2662, %2711 ], [ %2499, %2649 ]
  %2655 = phi i64 [ %2719, %2711 ], [ %2498, %2649 ]
  %2656 = phi i32 [ %2717, %2711 ], [ %2651, %2649 ]
  %2657 = sub i32 %2497, %2653
  %2658 = tail call i32 @llvm.smin.i32(i32 %2657, i32 0)
  %2659 = sub i32 %2657, %2658
  %2660 = zext i32 %2659 to i64
  %2661 = add nuw nsw i64 %2660, 1
  %2662 = add nsw i64 %2654, -1
  %2663 = icmp ult i32 %2659, 31
  br i1 %2663, label %2699, label %2664

2664:                                             ; preds = %2652
  %2665 = and i64 %2661, 8589934560
  %2666 = sub i64 %2655, %2665
  br label %2667

2667:                                             ; preds = %2667, %2664
  %2668 = phi i64 [ 0, %2664 ], [ %2691, %2667 ]
  %2669 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2687, %2667 ]
  %2670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2688, %2667 ]
  %2671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2689, %2667 ]
  %2672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2690, %2667 ]
  %2673 = sub i64 %2655, %2668
  %2674 = getelementptr inbounds i32, ptr %11, i64 %2673
  %2675 = getelementptr inbounds i32, ptr %2674, i64 -7
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !5
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = getelementptr inbounds i32, ptr %2674, i64 -15
  %2679 = load <8 x i32>, ptr %2678, align 4, !tbaa !5
  %2680 = shufflevector <8 x i32> %2679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2681 = getelementptr inbounds i32, ptr %2674, i64 -23
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !5
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2674, i64 -31
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !5
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = mul <8 x i32> %2677, %2669
  %2688 = mul <8 x i32> %2680, %2670
  %2689 = mul <8 x i32> %2683, %2671
  %2690 = mul <8 x i32> %2686, %2672
  %2691 = add nuw i64 %2668, 32
  %2692 = icmp eq i64 %2691, %2665
  br i1 %2692, label %2693, label %2667, !llvm.loop !669

2693:                                             ; preds = %2667
  %2694 = mul <8 x i32> %2688, %2687
  %2695 = mul <8 x i32> %2689, %2694
  %2696 = mul <8 x i32> %2690, %2695
  %2697 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2696)
  %2698 = icmp eq i64 %2661, %2665
  br i1 %2698, label %2711, label %2699

2699:                                             ; preds = %2652, %2693
  %2700 = phi i64 [ %2655, %2652 ], [ %2666, %2693 ]
  %2701 = phi i32 [ 1, %2652 ], [ %2697, %2693 ]
  br label %2702

2702:                                             ; preds = %2699, %2702
  %2703 = phi i64 [ %2708, %2702 ], [ %2700, %2699 ]
  %2704 = phi i32 [ %2707, %2702 ], [ %2701, %2699 ]
  %2705 = getelementptr inbounds i32, ptr %11, i64 %2703
  %2706 = load i32, ptr %2705, align 4, !tbaa !5
  %2707 = mul nsw i32 %2706, %2704
  %2708 = add nsw i64 %2703, -1
  %2709 = trunc i64 %2703 to i32
  %2710 = icmp sgt i32 %2709, 0
  br i1 %2710, label %2702, label %2711, !llvm.loop !670

2711:                                             ; preds = %2702, %2693
  %2712 = phi i32 [ %2697, %2693 ], [ %2707, %2702 ]
  %2713 = and i64 %2662, 4294967295
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = mul nsw i32 %2715, %2712
  %2717 = add nsw i32 %2716, %2656
  %2718 = icmp sgt i64 %2654, 2
  %2719 = add nsw i64 %2655, -1
  %2720 = add i32 %2653, 1
  br i1 %2718, label %2652, label %2721, !llvm.loop !671

2721:                                             ; preds = %2711, %2649
  %2722 = phi i32 [ %2651, %2649 ], [ %2717, %2711 ]
  %2723 = icmp slt i32 %2722, %5
  br i1 %2723, label %2726, label %2724

2724:                                             ; preds = %2721
  %2725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

2726:                                             ; preds = %2721
  %2727 = sext i32 %2722 to i64
  %2728 = getelementptr inbounds i32, ptr %2480, i64 %2727
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = load i32, ptr %2482, align 4, !tbaa !5
  %2731 = sitofp i32 %2730 to double
  %2732 = sitofp i32 %2729 to double
  %2733 = icmp slt i32 %2729, 0
  %2734 = fneg fast double %2732
  %2735 = select fast i1 %2733, double %2734, double %2732
  %2736 = fadd fast double %2735, %2731
  %2737 = fptosi double %2736 to i32
  store i32 %2737, ptr %2482, align 4, !tbaa !5
  %2738 = add nuw nsw i32 %2650, 1
  br i1 %2496, label %2739, label %2789

2739:                                             ; preds = %2726
  %2740 = load i32, ptr %4, align 4, !tbaa !5
  %2741 = load i32, ptr %12, align 4, !tbaa !5
  %2742 = add nsw i32 %2741, -1
  %2743 = icmp slt i32 %2740, %2742
  br i1 %2743, label %2766, label %2744

2744:                                             ; preds = %2739
  %2745 = icmp eq i32 %2740, %2742
  br i1 %2745, label %2746, label %2782

2746:                                             ; preds = %2744
  store i32 0, ptr %4, align 4, !tbaa !5
  %2747 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2747, ptr %6, align 4, !tbaa !5
  br i1 %2501, label %2789, label %2748

2748:                                             ; preds = %2746, %2776
  %2749 = phi i64 [ %2780, %2776 ], [ 1, %2746 ]
  %2750 = getelementptr inbounds i32, ptr %4, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %12, i64 %2749
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = add nsw i32 %2753, -1
  %2755 = icmp slt i32 %2751, %2754
  br i1 %2755, label %2756, label %2774

2756:                                             ; preds = %2748
  br i1 %2743, label %2766, label %2757

2757:                                             ; preds = %2756
  %2758 = shl i64 %2749, 32
  %2759 = add i64 %2758, -4294967296
  %2760 = ashr exact i64 %2759, 32
  %2761 = getelementptr inbounds i32, ptr %7, i64 %2760
  %2762 = load i32, ptr %2761, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %6, i64 %2749
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = add nsw i32 %2764, %2762
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  br label %2784

2766:                                             ; preds = %2739, %2756
  %2767 = phi i32 [ %2751, %2756 ], [ %2740, %2739 ]
  %2768 = phi ptr [ %2750, %2756 ], [ %4, %2739 ]
  %2769 = phi i64 [ %2749, %2756 ], [ 0, %2739 ]
  %2770 = add nsw i32 %2767, 1
  store i32 %2770, ptr %2768, align 4, !tbaa !5
  %2771 = getelementptr inbounds i32, ptr %7, i64 %2769
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2769
  br label %2784

2774:                                             ; preds = %2748
  %2775 = icmp eq i32 %2751, %2754
  br i1 %2775, label %2776, label %2782

2776:                                             ; preds = %2774
  store i32 0, ptr %2750, align 4, !tbaa !5
  %2777 = getelementptr inbounds i32, ptr %8, i64 %2749
  %2778 = load i32, ptr %2777, align 4, !tbaa !5
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2749
  store i32 %2778, ptr %2779, align 4, !tbaa !5
  %2780 = add nuw nsw i64 %2749, 1
  %2781 = icmp eq i64 %2780, %2499
  br i1 %2781, label %2789, label %2748, !llvm.loop !672

2782:                                             ; preds = %2744, %2774
  %2783 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2784:                                             ; preds = %2757, %2766
  %2785 = phi ptr [ %2773, %2766 ], [ %2750, %2757 ]
  %2786 = phi i32 [ %2772, %2766 ], [ 1, %2757 ]
  %2787 = load i32, ptr %2785, align 4, !tbaa !5
  %2788 = add nsw i32 %2787, %2786
  store i32 %2788, ptr %2785, align 4, !tbaa !5
  br label %2789

2789:                                             ; preds = %2776, %2784, %2746, %2726
  %2790 = icmp eq i32 %2738, %5
  br i1 %2790, label %5545, label %2649, !llvm.loop !673

2791:                                             ; preds = %2487
  %2792 = getelementptr inbounds i32, ptr %3, i64 %19
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = icmp eq i32 %2793, 0
  %2795 = icmp sgt i32 %5, 0
  br i1 %2794, label %2805, label %2796

2796:                                             ; preds = %2791
  br i1 %2795, label %2797, label %5545

2797:                                             ; preds = %2796
  %2798 = icmp sgt i32 %13, 1
  %2799 = icmp sgt i32 %13, 0
  %2800 = add i32 %13, -2
  %2801 = zext i32 %2800 to i64
  %2802 = zext i32 %13 to i64
  %2803 = add nuw i32 %5, 1
  %2804 = icmp eq i32 %13, 1
  br label %2946

2805:                                             ; preds = %2791
  br i1 %2795, label %2806, label %5545

2806:                                             ; preds = %2805
  %2807 = icmp sgt i32 %13, 1
  %2808 = icmp sgt i32 %13, 0
  %2809 = add i32 %13, -2
  %2810 = zext i32 %2809 to i64
  %2811 = zext i32 %13 to i64
  %2812 = add nuw i32 %5, 1
  %2813 = icmp eq i32 %13, 1
  br label %2814

2814:                                             ; preds = %2806, %2944
  %2815 = phi i32 [ 0, %2806 ], [ %2896, %2944 ]
  %2816 = phi double [ 0.000000e+00, %2806 ], [ %2895, %2944 ]
  %2817 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2807, label %2818, label %2887

2818:                                             ; preds = %2814, %2877
  %2819 = phi i32 [ %2886, %2877 ], [ 0, %2814 ]
  %2820 = phi i64 [ %2828, %2877 ], [ %2811, %2814 ]
  %2821 = phi i64 [ %2885, %2877 ], [ %2810, %2814 ]
  %2822 = phi i32 [ %2883, %2877 ], [ %2817, %2814 ]
  %2823 = sub i32 %2809, %2819
  %2824 = tail call i32 @llvm.smin.i32(i32 %2823, i32 0)
  %2825 = sub i32 %2823, %2824
  %2826 = zext i32 %2825 to i64
  %2827 = add nuw nsw i64 %2826, 1
  %2828 = add nsw i64 %2820, -1
  %2829 = icmp ult i32 %2825, 31
  br i1 %2829, label %2865, label %2830

2830:                                             ; preds = %2818
  %2831 = and i64 %2827, 8589934560
  %2832 = sub i64 %2821, %2831
  br label %2833

2833:                                             ; preds = %2833, %2830
  %2834 = phi i64 [ 0, %2830 ], [ %2857, %2833 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2853, %2833 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2854, %2833 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2855, %2833 ]
  %2838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2830 ], [ %2856, %2833 ]
  %2839 = sub i64 %2821, %2834
  %2840 = getelementptr inbounds i32, ptr %9, i64 %2839
  %2841 = getelementptr inbounds i32, ptr %2840, i64 -7
  %2842 = load <8 x i32>, ptr %2841, align 4, !tbaa !5
  %2843 = shufflevector <8 x i32> %2842, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2844 = getelementptr inbounds i32, ptr %2840, i64 -15
  %2845 = load <8 x i32>, ptr %2844, align 4, !tbaa !5
  %2846 = shufflevector <8 x i32> %2845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2847 = getelementptr inbounds i32, ptr %2840, i64 -23
  %2848 = load <8 x i32>, ptr %2847, align 4, !tbaa !5
  %2849 = shufflevector <8 x i32> %2848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2850 = getelementptr inbounds i32, ptr %2840, i64 -31
  %2851 = load <8 x i32>, ptr %2850, align 4, !tbaa !5
  %2852 = shufflevector <8 x i32> %2851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2853 = mul <8 x i32> %2843, %2835
  %2854 = mul <8 x i32> %2846, %2836
  %2855 = mul <8 x i32> %2849, %2837
  %2856 = mul <8 x i32> %2852, %2838
  %2857 = add nuw i64 %2834, 32
  %2858 = icmp eq i64 %2857, %2831
  br i1 %2858, label %2859, label %2833, !llvm.loop !674

2859:                                             ; preds = %2833
  %2860 = mul <8 x i32> %2854, %2853
  %2861 = mul <8 x i32> %2855, %2860
  %2862 = mul <8 x i32> %2856, %2861
  %2863 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2862)
  %2864 = icmp eq i64 %2827, %2831
  br i1 %2864, label %2877, label %2865

2865:                                             ; preds = %2818, %2859
  %2866 = phi i64 [ %2821, %2818 ], [ %2832, %2859 ]
  %2867 = phi i32 [ 1, %2818 ], [ %2863, %2859 ]
  br label %2868

2868:                                             ; preds = %2865, %2868
  %2869 = phi i64 [ %2874, %2868 ], [ %2866, %2865 ]
  %2870 = phi i32 [ %2873, %2868 ], [ %2867, %2865 ]
  %2871 = getelementptr inbounds i32, ptr %9, i64 %2869
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = mul nsw i32 %2872, %2870
  %2874 = add nsw i64 %2869, -1
  %2875 = trunc i64 %2869 to i32
  %2876 = icmp sgt i32 %2875, 0
  br i1 %2876, label %2868, label %2877, !llvm.loop !675

2877:                                             ; preds = %2868, %2859
  %2878 = phi i32 [ %2863, %2859 ], [ %2873, %2868 ]
  %2879 = and i64 %2828, 4294967295
  %2880 = getelementptr inbounds i32, ptr %6, i64 %2879
  %2881 = load i32, ptr %2880, align 4, !tbaa !5
  %2882 = mul nsw i32 %2881, %2878
  %2883 = add nsw i32 %2882, %2822
  %2884 = icmp sgt i64 %2820, 2
  %2885 = add nsw i64 %2821, -1
  %2886 = add i32 %2819, 1
  br i1 %2884, label %2818, label %2887, !llvm.loop !676

2887:                                             ; preds = %2877, %2814
  %2888 = phi i32 [ %2817, %2814 ], [ %2883, %2877 ]
  %2889 = sext i32 %2888 to i64
  %2890 = getelementptr inbounds i32, ptr %2480, i64 %2889
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = load i32, ptr %2482, align 4, !tbaa !5
  %2893 = tail call i32 @llvm.abs.i32(i32 %2891, i1 true)
  %2894 = add nsw i32 %2892, %2893
  store i32 %2894, ptr %2482, align 4, !tbaa !5
  %2895 = fadd fast double %2816, 1.000000e+00
  %2896 = add nuw nsw i32 %2815, 1
  br i1 %2808, label %2897, label %2944

2897:                                             ; preds = %2887
  %2898 = load i32, ptr %4, align 4, !tbaa !5
  %2899 = load i32, ptr %12, align 4, !tbaa !5
  %2900 = add nsw i32 %2899, -1
  %2901 = icmp slt i32 %2898, %2900
  br i1 %2901, label %2921, label %2902

2902:                                             ; preds = %2897
  %2903 = icmp eq i32 %2898, %2900
  br i1 %2903, label %2904, label %2937

2904:                                             ; preds = %2902
  store i32 0, ptr %4, align 4, !tbaa !5
  %2905 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2905, ptr %6, align 4, !tbaa !5
  br i1 %2813, label %2944, label %2906

2906:                                             ; preds = %2904, %2931
  %2907 = phi i64 [ %2935, %2931 ], [ 1, %2904 ]
  %2908 = getelementptr inbounds i32, ptr %4, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !5
  %2910 = getelementptr inbounds i32, ptr %12, i64 %2907
  %2911 = load i32, ptr %2910, align 4, !tbaa !5
  %2912 = add nsw i32 %2911, -1
  %2913 = icmp slt i32 %2909, %2912
  br i1 %2913, label %2914, label %2929

2914:                                             ; preds = %2906
  br i1 %2901, label %2921, label %2915

2915:                                             ; preds = %2914
  %2916 = getelementptr inbounds i32, ptr %7, i64 %2907
  %2917 = load i32, ptr %2916, align 4, !tbaa !5
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2907
  %2919 = load i32, ptr %2918, align 4, !tbaa !5
  %2920 = add nsw i32 %2919, %2917
  store i32 %2920, ptr %2918, align 4, !tbaa !5
  br label %2939

2921:                                             ; preds = %2897, %2914
  %2922 = phi i32 [ %2909, %2914 ], [ %2898, %2897 ]
  %2923 = phi ptr [ %2908, %2914 ], [ %4, %2897 ]
  %2924 = phi i64 [ %2907, %2914 ], [ 0, %2897 ]
  %2925 = add nsw i32 %2922, 1
  store i32 %2925, ptr %2923, align 4, !tbaa !5
  %2926 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2927 = load i32, ptr %2926, align 4, !tbaa !5
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2924
  br label %2939

2929:                                             ; preds = %2906
  %2930 = icmp eq i32 %2909, %2912
  br i1 %2930, label %2931, label %2937

2931:                                             ; preds = %2929
  store i32 0, ptr %2908, align 4, !tbaa !5
  %2932 = getelementptr inbounds i32, ptr %8, i64 %2907
  %2933 = load i32, ptr %2932, align 4, !tbaa !5
  %2934 = getelementptr inbounds i32, ptr %6, i64 %2907
  store i32 %2933, ptr %2934, align 4, !tbaa !5
  %2935 = add nuw nsw i64 %2907, 1
  %2936 = icmp eq i64 %2935, %2811
  br i1 %2936, label %2944, label %2906, !llvm.loop !677

2937:                                             ; preds = %2902, %2929
  %2938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

2939:                                             ; preds = %2915, %2921
  %2940 = phi ptr [ %2928, %2921 ], [ %2908, %2915 ]
  %2941 = phi i32 [ %2927, %2921 ], [ 1, %2915 ]
  %2942 = load i32, ptr %2940, align 4, !tbaa !5
  %2943 = add nsw i32 %2942, %2941
  store i32 %2943, ptr %2940, align 4, !tbaa !5
  br label %2944

2944:                                             ; preds = %2931, %2939, %2904, %2887
  %2945 = icmp eq i32 %2896, %5
  br i1 %2945, label %5545, label %2814, !llvm.loop !678

2946:                                             ; preds = %2797, %3081
  %2947 = phi i32 [ 0, %2797 ], [ %3030, %3081 ]
  %2948 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2798, label %2949, label %3018

2949:                                             ; preds = %2946, %3008
  %2950 = phi i32 [ %3017, %3008 ], [ 0, %2946 ]
  %2951 = phi i64 [ %2959, %3008 ], [ %2802, %2946 ]
  %2952 = phi i64 [ %3016, %3008 ], [ %2801, %2946 ]
  %2953 = phi i32 [ %3014, %3008 ], [ %2948, %2946 ]
  %2954 = sub i32 %2800, %2950
  %2955 = tail call i32 @llvm.smin.i32(i32 %2954, i32 0)
  %2956 = sub i32 %2954, %2955
  %2957 = zext i32 %2956 to i64
  %2958 = add nuw nsw i64 %2957, 1
  %2959 = add nsw i64 %2951, -1
  %2960 = icmp ult i32 %2956, 31
  br i1 %2960, label %2996, label %2961

2961:                                             ; preds = %2949
  %2962 = and i64 %2958, 8589934560
  %2963 = sub i64 %2952, %2962
  br label %2964

2964:                                             ; preds = %2964, %2961
  %2965 = phi i64 [ 0, %2961 ], [ %2988, %2964 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2984, %2964 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2985, %2964 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2986, %2964 ]
  %2969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2987, %2964 ]
  %2970 = sub i64 %2952, %2965
  %2971 = getelementptr inbounds i32, ptr %11, i64 %2970
  %2972 = getelementptr inbounds i32, ptr %2971, i64 -7
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !5
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = getelementptr inbounds i32, ptr %2971, i64 -15
  %2976 = load <8 x i32>, ptr %2975, align 4, !tbaa !5
  %2977 = shufflevector <8 x i32> %2976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2978 = getelementptr inbounds i32, ptr %2971, i64 -23
  %2979 = load <8 x i32>, ptr %2978, align 4, !tbaa !5
  %2980 = shufflevector <8 x i32> %2979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2981 = getelementptr inbounds i32, ptr %2971, i64 -31
  %2982 = load <8 x i32>, ptr %2981, align 4, !tbaa !5
  %2983 = shufflevector <8 x i32> %2982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2984 = mul <8 x i32> %2974, %2966
  %2985 = mul <8 x i32> %2977, %2967
  %2986 = mul <8 x i32> %2980, %2968
  %2987 = mul <8 x i32> %2983, %2969
  %2988 = add nuw i64 %2965, 32
  %2989 = icmp eq i64 %2988, %2962
  br i1 %2989, label %2990, label %2964, !llvm.loop !679

2990:                                             ; preds = %2964
  %2991 = mul <8 x i32> %2985, %2984
  %2992 = mul <8 x i32> %2986, %2991
  %2993 = mul <8 x i32> %2987, %2992
  %2994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2993)
  %2995 = icmp eq i64 %2958, %2962
  br i1 %2995, label %3008, label %2996

2996:                                             ; preds = %2949, %2990
  %2997 = phi i64 [ %2952, %2949 ], [ %2963, %2990 ]
  %2998 = phi i32 [ 1, %2949 ], [ %2994, %2990 ]
  br label %2999

2999:                                             ; preds = %2996, %2999
  %3000 = phi i64 [ %3005, %2999 ], [ %2997, %2996 ]
  %3001 = phi i32 [ %3004, %2999 ], [ %2998, %2996 ]
  %3002 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3003 = load i32, ptr %3002, align 4, !tbaa !5
  %3004 = mul nsw i32 %3003, %3001
  %3005 = add nsw i64 %3000, -1
  %3006 = trunc i64 %3000 to i32
  %3007 = icmp sgt i32 %3006, 0
  br i1 %3007, label %2999, label %3008, !llvm.loop !680

3008:                                             ; preds = %2999, %2990
  %3009 = phi i32 [ %2994, %2990 ], [ %3004, %2999 ]
  %3010 = and i64 %2959, 4294967295
  %3011 = getelementptr inbounds i32, ptr %6, i64 %3010
  %3012 = load i32, ptr %3011, align 4, !tbaa !5
  %3013 = mul nsw i32 %3012, %3009
  %3014 = add nsw i32 %3013, %2953
  %3015 = icmp sgt i64 %2951, 2
  %3016 = add nsw i64 %2952, -1
  %3017 = add i32 %2950, 1
  br i1 %3015, label %2949, label %3018, !llvm.loop !681

3018:                                             ; preds = %3008, %2946
  %3019 = phi i32 [ %2948, %2946 ], [ %3014, %3008 ]
  %3020 = icmp slt i32 %3019, %5
  br i1 %3020, label %3023, label %3021

3021:                                             ; preds = %3018
  %3022 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3023:                                             ; preds = %3018
  %3024 = sext i32 %3019 to i64
  %3025 = getelementptr inbounds i32, ptr %2480, i64 %3024
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = load i32, ptr %2482, align 4, !tbaa !5
  %3028 = tail call i32 @llvm.abs.i32(i32 %3026, i1 true)
  %3029 = add nsw i32 %3027, %3028
  store i32 %3029, ptr %2482, align 4, !tbaa !5
  %3030 = add nuw nsw i32 %2947, 1
  br i1 %2799, label %3031, label %3081

3031:                                             ; preds = %3023
  %3032 = load i32, ptr %4, align 4, !tbaa !5
  %3033 = load i32, ptr %12, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3032, %3034
  br i1 %3035, label %3058, label %3036

3036:                                             ; preds = %3031
  %3037 = icmp eq i32 %3032, %3034
  br i1 %3037, label %3038, label %3074

3038:                                             ; preds = %3036
  store i32 0, ptr %4, align 4, !tbaa !5
  %3039 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3039, ptr %6, align 4, !tbaa !5
  br i1 %2804, label %3081, label %3040

3040:                                             ; preds = %3038, %3068
  %3041 = phi i64 [ %3072, %3068 ], [ 1, %3038 ]
  %3042 = getelementptr inbounds i32, ptr %4, i64 %3041
  %3043 = load i32, ptr %3042, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %12, i64 %3041
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, -1
  %3047 = icmp slt i32 %3043, %3046
  br i1 %3047, label %3048, label %3066

3048:                                             ; preds = %3040
  br i1 %3035, label %3058, label %3049

3049:                                             ; preds = %3048
  %3050 = shl i64 %3041, 32
  %3051 = add i64 %3050, -4294967296
  %3052 = ashr exact i64 %3051, 32
  %3053 = getelementptr inbounds i32, ptr %7, i64 %3052
  %3054 = load i32, ptr %3053, align 4, !tbaa !5
  %3055 = getelementptr inbounds i32, ptr %6, i64 %3041
  %3056 = load i32, ptr %3055, align 4, !tbaa !5
  %3057 = add nsw i32 %3056, %3054
  store i32 %3057, ptr %3055, align 4, !tbaa !5
  br label %3076

3058:                                             ; preds = %3031, %3048
  %3059 = phi i32 [ %3043, %3048 ], [ %3032, %3031 ]
  %3060 = phi ptr [ %3042, %3048 ], [ %4, %3031 ]
  %3061 = phi i64 [ %3041, %3048 ], [ 0, %3031 ]
  %3062 = add nsw i32 %3059, 1
  store i32 %3062, ptr %3060, align 4, !tbaa !5
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3061
  %3064 = load i32, ptr %3063, align 4, !tbaa !5
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3061
  br label %3076

3066:                                             ; preds = %3040
  %3067 = icmp eq i32 %3043, %3046
  br i1 %3067, label %3068, label %3074

3068:                                             ; preds = %3066
  store i32 0, ptr %3042, align 4, !tbaa !5
  %3069 = getelementptr inbounds i32, ptr %8, i64 %3041
  %3070 = load i32, ptr %3069, align 4, !tbaa !5
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3041
  store i32 %3070, ptr %3071, align 4, !tbaa !5
  %3072 = add nuw nsw i64 %3041, 1
  %3073 = icmp eq i64 %3072, %2802
  br i1 %3073, label %3081, label %3040, !llvm.loop !682

3074:                                             ; preds = %3036, %3066
  %3075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3076:                                             ; preds = %3049, %3058
  %3077 = phi ptr [ %3065, %3058 ], [ %3042, %3049 ]
  %3078 = phi i32 [ %3064, %3058 ], [ 1, %3049 ]
  %3079 = load i32, ptr %3077, align 4, !tbaa !5
  %3080 = add nsw i32 %3079, %3078
  store i32 %3080, ptr %3077, align 4, !tbaa !5
  br label %3081

3081:                                             ; preds = %3068, %3076, %3038, %3023
  %3082 = icmp eq i32 %3030, %5
  br i1 %3082, label %5545, label %2946, !llvm.loop !683

3083:                                             ; preds = %2487
  %3084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3085:                                             ; preds = %18
  %3086 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3087 = load ptr, ptr %3086, align 8, !tbaa !9
  %3088 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3089 = load ptr, ptr %3088, align 8, !tbaa !9
  store i64 0, ptr %3089, align 8, !tbaa !120
  %3090 = icmp eq i32 %13, 0
  br i1 %3090, label %3091, label %3095

3091:                                             ; preds = %3085
  %3092 = load i32, ptr %3087, align 4, !tbaa !5
  %3093 = tail call i32 @llvm.abs.i32(i32 %3092, i1 false)
  %3094 = zext i32 %3093 to i64
  store i64 %3094, ptr %3089, align 8, !tbaa !120
  br label %5545

3095:                                             ; preds = %3085
  switch i32 %1, label %3693 [
    i32 1, label %3096
    i32 0, label %3399
  ]

3096:                                             ; preds = %3095
  %3097 = getelementptr inbounds i32, ptr %3, i64 %19
  %3098 = load i32, ptr %3097, align 4, !tbaa !5
  %3099 = icmp eq i32 %3098, 0
  %3100 = icmp sgt i32 %5, 0
  br i1 %3099, label %3110, label %3101

3101:                                             ; preds = %3096
  br i1 %3100, label %3102, label %5545

3102:                                             ; preds = %3101
  %3103 = icmp sgt i32 %13, 1
  %3104 = icmp sgt i32 %13, 0
  %3105 = add i32 %13, -2
  %3106 = zext i32 %3105 to i64
  %3107 = zext i32 %13 to i64
  %3108 = add nuw i32 %5, 1
  %3109 = icmp eq i32 %13, 1
  br label %3257

3110:                                             ; preds = %3096
  br i1 %3100, label %3111, label %5545

3111:                                             ; preds = %3110
  %3112 = icmp sgt i32 %13, 1
  %3113 = icmp sgt i32 %13, 0
  %3114 = add i32 %13, -2
  %3115 = zext i32 %3114 to i64
  %3116 = zext i32 %13 to i64
  %3117 = add nuw i32 %5, 1
  %3118 = icmp eq i32 %13, 1
  br label %3119

3119:                                             ; preds = %3111, %3255
  %3120 = phi i64 [ 0, %3111 ], [ %3205, %3255 ]
  %3121 = phi i32 [ 0, %3111 ], [ %3207, %3255 ]
  %3122 = phi double [ 0.000000e+00, %3111 ], [ %3206, %3255 ]
  %3123 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3112, label %3124, label %3193

3124:                                             ; preds = %3119, %3183
  %3125 = phi i32 [ %3192, %3183 ], [ 0, %3119 ]
  %3126 = phi i64 [ %3134, %3183 ], [ %3116, %3119 ]
  %3127 = phi i64 [ %3191, %3183 ], [ %3115, %3119 ]
  %3128 = phi i32 [ %3189, %3183 ], [ %3123, %3119 ]
  %3129 = sub i32 %3114, %3125
  %3130 = tail call i32 @llvm.smin.i32(i32 %3129, i32 0)
  %3131 = sub i32 %3129, %3130
  %3132 = zext i32 %3131 to i64
  %3133 = add nuw nsw i64 %3132, 1
  %3134 = add nsw i64 %3126, -1
  %3135 = icmp ult i32 %3131, 31
  br i1 %3135, label %3171, label %3136

3136:                                             ; preds = %3124
  %3137 = and i64 %3133, 8589934560
  %3138 = sub i64 %3127, %3137
  br label %3139

3139:                                             ; preds = %3139, %3136
  %3140 = phi i64 [ 0, %3136 ], [ %3163, %3139 ]
  %3141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3159, %3139 ]
  %3142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3160, %3139 ]
  %3143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3161, %3139 ]
  %3144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3136 ], [ %3162, %3139 ]
  %3145 = sub i64 %3127, %3140
  %3146 = getelementptr inbounds i32, ptr %9, i64 %3145
  %3147 = getelementptr inbounds i32, ptr %3146, i64 -7
  %3148 = load <8 x i32>, ptr %3147, align 4, !tbaa !5
  %3149 = shufflevector <8 x i32> %3148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3150 = getelementptr inbounds i32, ptr %3146, i64 -15
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !5
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = getelementptr inbounds i32, ptr %3146, i64 -23
  %3154 = load <8 x i32>, ptr %3153, align 4, !tbaa !5
  %3155 = shufflevector <8 x i32> %3154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3156 = getelementptr inbounds i32, ptr %3146, i64 -31
  %3157 = load <8 x i32>, ptr %3156, align 4, !tbaa !5
  %3158 = shufflevector <8 x i32> %3157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3159 = mul <8 x i32> %3149, %3141
  %3160 = mul <8 x i32> %3152, %3142
  %3161 = mul <8 x i32> %3155, %3143
  %3162 = mul <8 x i32> %3158, %3144
  %3163 = add nuw i64 %3140, 32
  %3164 = icmp eq i64 %3163, %3137
  br i1 %3164, label %3165, label %3139, !llvm.loop !684

3165:                                             ; preds = %3139
  %3166 = mul <8 x i32> %3160, %3159
  %3167 = mul <8 x i32> %3161, %3166
  %3168 = mul <8 x i32> %3162, %3167
  %3169 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3168)
  %3170 = icmp eq i64 %3133, %3137
  br i1 %3170, label %3183, label %3171

3171:                                             ; preds = %3124, %3165
  %3172 = phi i64 [ %3127, %3124 ], [ %3138, %3165 ]
  %3173 = phi i32 [ 1, %3124 ], [ %3169, %3165 ]
  br label %3174

3174:                                             ; preds = %3171, %3174
  %3175 = phi i64 [ %3180, %3174 ], [ %3172, %3171 ]
  %3176 = phi i32 [ %3179, %3174 ], [ %3173, %3171 ]
  %3177 = getelementptr inbounds i32, ptr %9, i64 %3175
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = mul nsw i32 %3178, %3176
  %3180 = add nsw i64 %3175, -1
  %3181 = trunc i64 %3175 to i32
  %3182 = icmp sgt i32 %3181, 0
  br i1 %3182, label %3174, label %3183, !llvm.loop !685

3183:                                             ; preds = %3174, %3165
  %3184 = phi i32 [ %3169, %3165 ], [ %3179, %3174 ]
  %3185 = and i64 %3134, 4294967295
  %3186 = getelementptr inbounds i32, ptr %6, i64 %3185
  %3187 = load i32, ptr %3186, align 4, !tbaa !5
  %3188 = mul nsw i32 %3187, %3184
  %3189 = add nsw i32 %3188, %3128
  %3190 = icmp sgt i64 %3126, 2
  %3191 = add nsw i64 %3127, -1
  %3192 = add i32 %3125, 1
  br i1 %3190, label %3124, label %3193, !llvm.loop !686

3193:                                             ; preds = %3183, %3119
  %3194 = phi i32 [ %3123, %3119 ], [ %3189, %3183 ]
  %3195 = sext i32 %3194 to i64
  %3196 = getelementptr inbounds double, ptr %2, i64 %3195
  %3197 = load double, ptr %3196, align 8, !tbaa !18
  %3198 = getelementptr inbounds i32, ptr %3087, i64 %3195
  %3199 = load i32, ptr %3198, align 4, !tbaa !5
  %3200 = sitofp i64 %3120 to double
  %3201 = sitofp i32 %3199 to double
  %3202 = fmul fast double %3197, %3201
  %3203 = tail call fast double @llvm.fabs.f64(double %3202)
  %3204 = fadd fast double %3203, %3200
  %3205 = fptosi double %3204 to i64
  %3206 = fadd fast double %3197, %3122
  %3207 = add nuw nsw i32 %3121, 1
  br i1 %3113, label %3208, label %3255

3208:                                             ; preds = %3193
  %3209 = load i32, ptr %4, align 4, !tbaa !5
  %3210 = load i32, ptr %12, align 4, !tbaa !5
  %3211 = add nsw i32 %3210, -1
  %3212 = icmp slt i32 %3209, %3211
  br i1 %3212, label %3232, label %3213

3213:                                             ; preds = %3208
  %3214 = icmp eq i32 %3209, %3211
  br i1 %3214, label %3215, label %3248

3215:                                             ; preds = %3213
  store i32 0, ptr %4, align 4, !tbaa !5
  %3216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3216, ptr %6, align 4, !tbaa !5
  br i1 %3118, label %3255, label %3217

3217:                                             ; preds = %3215, %3242
  %3218 = phi i64 [ %3246, %3242 ], [ 1, %3215 ]
  %3219 = getelementptr inbounds i32, ptr %4, i64 %3218
  %3220 = load i32, ptr %3219, align 4, !tbaa !5
  %3221 = getelementptr inbounds i32, ptr %12, i64 %3218
  %3222 = load i32, ptr %3221, align 4, !tbaa !5
  %3223 = add nsw i32 %3222, -1
  %3224 = icmp slt i32 %3220, %3223
  br i1 %3224, label %3225, label %3240

3225:                                             ; preds = %3217
  br i1 %3212, label %3232, label %3226

3226:                                             ; preds = %3225
  %3227 = getelementptr inbounds i32, ptr %7, i64 %3218
  %3228 = load i32, ptr %3227, align 4, !tbaa !5
  %3229 = getelementptr inbounds i32, ptr %6, i64 %3218
  %3230 = load i32, ptr %3229, align 4, !tbaa !5
  %3231 = add nsw i32 %3230, %3228
  store i32 %3231, ptr %3229, align 4, !tbaa !5
  br label %3250

3232:                                             ; preds = %3208, %3225
  %3233 = phi i32 [ %3220, %3225 ], [ %3209, %3208 ]
  %3234 = phi ptr [ %3219, %3225 ], [ %4, %3208 ]
  %3235 = phi i64 [ %3218, %3225 ], [ 0, %3208 ]
  %3236 = add nsw i32 %3233, 1
  store i32 %3236, ptr %3234, align 4, !tbaa !5
  %3237 = getelementptr inbounds i32, ptr %7, i64 %3235
  %3238 = load i32, ptr %3237, align 4, !tbaa !5
  %3239 = getelementptr inbounds i32, ptr %6, i64 %3235
  br label %3250

3240:                                             ; preds = %3217
  %3241 = icmp eq i32 %3220, %3223
  br i1 %3241, label %3242, label %3248

3242:                                             ; preds = %3240
  store i32 0, ptr %3219, align 4, !tbaa !5
  %3243 = getelementptr inbounds i32, ptr %8, i64 %3218
  %3244 = load i32, ptr %3243, align 4, !tbaa !5
  %3245 = getelementptr inbounds i32, ptr %6, i64 %3218
  store i32 %3244, ptr %3245, align 4, !tbaa !5
  %3246 = add nuw nsw i64 %3218, 1
  %3247 = icmp eq i64 %3246, %3116
  br i1 %3247, label %3255, label %3217, !llvm.loop !687

3248:                                             ; preds = %3213, %3240
  store i64 %3205, ptr %3089, align 8, !tbaa !120
  %3249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3250:                                             ; preds = %3226, %3232
  %3251 = phi ptr [ %3239, %3232 ], [ %3219, %3226 ]
  %3252 = phi i32 [ %3238, %3232 ], [ 1, %3226 ]
  %3253 = load i32, ptr %3251, align 4, !tbaa !5
  %3254 = add nsw i32 %3253, %3252
  store i32 %3254, ptr %3251, align 4, !tbaa !5
  br label %3255

3255:                                             ; preds = %3242, %3250, %3215, %3193
  %3256 = icmp eq i32 %3207, %5
  br i1 %3256, label %5539, label %3119, !llvm.loop !688

3257:                                             ; preds = %3102, %3397
  %3258 = phi i64 [ 0, %3102 ], [ %3345, %3397 ]
  %3259 = phi i32 [ 0, %3102 ], [ %3346, %3397 ]
  %3260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3103, label %3261, label %3330

3261:                                             ; preds = %3257, %3320
  %3262 = phi i32 [ %3329, %3320 ], [ 0, %3257 ]
  %3263 = phi i64 [ %3271, %3320 ], [ %3107, %3257 ]
  %3264 = phi i64 [ %3328, %3320 ], [ %3106, %3257 ]
  %3265 = phi i32 [ %3326, %3320 ], [ %3260, %3257 ]
  %3266 = sub i32 %3105, %3262
  %3267 = tail call i32 @llvm.smin.i32(i32 %3266, i32 0)
  %3268 = sub i32 %3266, %3267
  %3269 = zext i32 %3268 to i64
  %3270 = add nuw nsw i64 %3269, 1
  %3271 = add nsw i64 %3263, -1
  %3272 = icmp ult i32 %3268, 31
  br i1 %3272, label %3308, label %3273

3273:                                             ; preds = %3261
  %3274 = and i64 %3270, 8589934560
  %3275 = sub i64 %3264, %3274
  br label %3276

3276:                                             ; preds = %3276, %3273
  %3277 = phi i64 [ 0, %3273 ], [ %3300, %3276 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3296, %3276 ]
  %3279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3297, %3276 ]
  %3280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3298, %3276 ]
  %3281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3273 ], [ %3299, %3276 ]
  %3282 = sub i64 %3264, %3277
  %3283 = getelementptr inbounds i32, ptr %11, i64 %3282
  %3284 = getelementptr inbounds i32, ptr %3283, i64 -7
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3283, i64 -15
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !5
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3283, i64 -23
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !5
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = getelementptr inbounds i32, ptr %3283, i64 -31
  %3294 = load <8 x i32>, ptr %3293, align 4, !tbaa !5
  %3295 = shufflevector <8 x i32> %3294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3296 = mul <8 x i32> %3286, %3278
  %3297 = mul <8 x i32> %3289, %3279
  %3298 = mul <8 x i32> %3292, %3280
  %3299 = mul <8 x i32> %3295, %3281
  %3300 = add nuw i64 %3277, 32
  %3301 = icmp eq i64 %3300, %3274
  br i1 %3301, label %3302, label %3276, !llvm.loop !689

3302:                                             ; preds = %3276
  %3303 = mul <8 x i32> %3297, %3296
  %3304 = mul <8 x i32> %3298, %3303
  %3305 = mul <8 x i32> %3299, %3304
  %3306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3305)
  %3307 = icmp eq i64 %3270, %3274
  br i1 %3307, label %3320, label %3308

3308:                                             ; preds = %3261, %3302
  %3309 = phi i64 [ %3264, %3261 ], [ %3275, %3302 ]
  %3310 = phi i32 [ 1, %3261 ], [ %3306, %3302 ]
  br label %3311

3311:                                             ; preds = %3308, %3311
  %3312 = phi i64 [ %3317, %3311 ], [ %3309, %3308 ]
  %3313 = phi i32 [ %3316, %3311 ], [ %3310, %3308 ]
  %3314 = getelementptr inbounds i32, ptr %11, i64 %3312
  %3315 = load i32, ptr %3314, align 4, !tbaa !5
  %3316 = mul nsw i32 %3315, %3313
  %3317 = add nsw i64 %3312, -1
  %3318 = trunc i64 %3312 to i32
  %3319 = icmp sgt i32 %3318, 0
  br i1 %3319, label %3311, label %3320, !llvm.loop !690

3320:                                             ; preds = %3311, %3302
  %3321 = phi i32 [ %3306, %3302 ], [ %3316, %3311 ]
  %3322 = and i64 %3271, 4294967295
  %3323 = getelementptr inbounds i32, ptr %6, i64 %3322
  %3324 = load i32, ptr %3323, align 4, !tbaa !5
  %3325 = mul nsw i32 %3324, %3321
  %3326 = add nsw i32 %3325, %3265
  %3327 = icmp sgt i64 %3263, 2
  %3328 = add nsw i64 %3264, -1
  %3329 = add i32 %3262, 1
  br i1 %3327, label %3261, label %3330, !llvm.loop !691

3330:                                             ; preds = %3320, %3257
  %3331 = phi i32 [ %3260, %3257 ], [ %3326, %3320 ]
  %3332 = icmp slt i32 %3331, %5
  br i1 %3332, label %3335, label %3333

3333:                                             ; preds = %3330
  %3334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3335:                                             ; preds = %3330
  %3336 = sext i32 %3331 to i64
  %3337 = getelementptr inbounds i32, ptr %3087, i64 %3336
  %3338 = load i32, ptr %3337, align 4, !tbaa !5
  %3339 = sitofp i64 %3258 to double
  %3340 = sitofp i32 %3338 to double
  %3341 = icmp slt i32 %3338, 0
  %3342 = fneg fast double %3340
  %3343 = select fast i1 %3341, double %3342, double %3340
  %3344 = fadd fast double %3343, %3339
  %3345 = fptosi double %3344 to i64
  store i64 %3345, ptr %3089, align 8, !tbaa !120
  %3346 = add nuw nsw i32 %3259, 1
  br i1 %3104, label %3347, label %3397

3347:                                             ; preds = %3335
  %3348 = load i32, ptr %4, align 4, !tbaa !5
  %3349 = load i32, ptr %12, align 4, !tbaa !5
  %3350 = add nsw i32 %3349, -1
  %3351 = icmp slt i32 %3348, %3350
  br i1 %3351, label %3374, label %3352

3352:                                             ; preds = %3347
  %3353 = icmp eq i32 %3348, %3350
  br i1 %3353, label %3354, label %3390

3354:                                             ; preds = %3352
  store i32 0, ptr %4, align 4, !tbaa !5
  %3355 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3355, ptr %6, align 4, !tbaa !5
  br i1 %3109, label %3397, label %3356

3356:                                             ; preds = %3354, %3384
  %3357 = phi i64 [ %3388, %3384 ], [ 1, %3354 ]
  %3358 = getelementptr inbounds i32, ptr %4, i64 %3357
  %3359 = load i32, ptr %3358, align 4, !tbaa !5
  %3360 = getelementptr inbounds i32, ptr %12, i64 %3357
  %3361 = load i32, ptr %3360, align 4, !tbaa !5
  %3362 = add nsw i32 %3361, -1
  %3363 = icmp slt i32 %3359, %3362
  br i1 %3363, label %3364, label %3382

3364:                                             ; preds = %3356
  br i1 %3351, label %3374, label %3365

3365:                                             ; preds = %3364
  %3366 = shl i64 %3357, 32
  %3367 = add i64 %3366, -4294967296
  %3368 = ashr exact i64 %3367, 32
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3368
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3357
  %3372 = load i32, ptr %3371, align 4, !tbaa !5
  %3373 = add nsw i32 %3372, %3370
  store i32 %3373, ptr %3371, align 4, !tbaa !5
  br label %3392

3374:                                             ; preds = %3347, %3364
  %3375 = phi i32 [ %3359, %3364 ], [ %3348, %3347 ]
  %3376 = phi ptr [ %3358, %3364 ], [ %4, %3347 ]
  %3377 = phi i64 [ %3357, %3364 ], [ 0, %3347 ]
  %3378 = add nsw i32 %3375, 1
  store i32 %3378, ptr %3376, align 4, !tbaa !5
  %3379 = getelementptr inbounds i32, ptr %7, i64 %3377
  %3380 = load i32, ptr %3379, align 4, !tbaa !5
  %3381 = getelementptr inbounds i32, ptr %6, i64 %3377
  br label %3392

3382:                                             ; preds = %3356
  %3383 = icmp eq i32 %3359, %3362
  br i1 %3383, label %3384, label %3390

3384:                                             ; preds = %3382
  store i32 0, ptr %3358, align 4, !tbaa !5
  %3385 = getelementptr inbounds i32, ptr %8, i64 %3357
  %3386 = load i32, ptr %3385, align 4, !tbaa !5
  %3387 = getelementptr inbounds i32, ptr %6, i64 %3357
  store i32 %3386, ptr %3387, align 4, !tbaa !5
  %3388 = add nuw nsw i64 %3357, 1
  %3389 = icmp eq i64 %3388, %3107
  br i1 %3389, label %3397, label %3356, !llvm.loop !692

3390:                                             ; preds = %3352, %3382
  %3391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3392:                                             ; preds = %3365, %3374
  %3393 = phi ptr [ %3381, %3374 ], [ %3358, %3365 ]
  %3394 = phi i32 [ %3380, %3374 ], [ 1, %3365 ]
  %3395 = load i32, ptr %3393, align 4, !tbaa !5
  %3396 = add nsw i32 %3395, %3394
  store i32 %3396, ptr %3393, align 4, !tbaa !5
  br label %3397

3397:                                             ; preds = %3384, %3392, %3354, %3335
  %3398 = icmp eq i32 %3346, %5
  br i1 %3398, label %5545, label %3257, !llvm.loop !693

3399:                                             ; preds = %3095
  %3400 = getelementptr inbounds i32, ptr %3, i64 %19
  %3401 = load i32, ptr %3400, align 4, !tbaa !5
  %3402 = icmp eq i32 %3401, 0
  %3403 = icmp sgt i32 %5, 0
  br i1 %3402, label %3413, label %3404

3404:                                             ; preds = %3399
  br i1 %3403, label %3405, label %5545

3405:                                             ; preds = %3404
  %3406 = icmp sgt i32 %13, 1
  %3407 = icmp sgt i32 %13, 0
  %3408 = add i32 %13, -2
  %3409 = zext i32 %3408 to i64
  %3410 = zext i32 %13 to i64
  %3411 = add nuw i32 %5, 1
  %3412 = icmp eq i32 %13, 1
  br label %3555

3413:                                             ; preds = %3399
  br i1 %3403, label %3414, label %5545

3414:                                             ; preds = %3413
  %3415 = icmp sgt i32 %13, 1
  %3416 = icmp sgt i32 %13, 0
  %3417 = add i32 %13, -2
  %3418 = zext i32 %3417 to i64
  %3419 = zext i32 %13 to i64
  %3420 = add nuw i32 %5, 1
  %3421 = icmp eq i32 %13, 1
  br label %3422

3422:                                             ; preds = %3414, %3553
  %3423 = phi i64 [ 0, %3414 ], [ %3503, %3553 ]
  %3424 = phi i32 [ 0, %3414 ], [ %3505, %3553 ]
  %3425 = phi double [ 0.000000e+00, %3414 ], [ %3504, %3553 ]
  %3426 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3415, label %3427, label %3496

3427:                                             ; preds = %3422, %3486
  %3428 = phi i32 [ %3495, %3486 ], [ 0, %3422 ]
  %3429 = phi i64 [ %3437, %3486 ], [ %3419, %3422 ]
  %3430 = phi i64 [ %3494, %3486 ], [ %3418, %3422 ]
  %3431 = phi i32 [ %3492, %3486 ], [ %3426, %3422 ]
  %3432 = sub i32 %3417, %3428
  %3433 = tail call i32 @llvm.smin.i32(i32 %3432, i32 0)
  %3434 = sub i32 %3432, %3433
  %3435 = zext i32 %3434 to i64
  %3436 = add nuw nsw i64 %3435, 1
  %3437 = add nsw i64 %3429, -1
  %3438 = icmp ult i32 %3434, 31
  br i1 %3438, label %3474, label %3439

3439:                                             ; preds = %3427
  %3440 = and i64 %3436, 8589934560
  %3441 = sub i64 %3430, %3440
  br label %3442

3442:                                             ; preds = %3442, %3439
  %3443 = phi i64 [ 0, %3439 ], [ %3466, %3442 ]
  %3444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3462, %3442 ]
  %3445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3463, %3442 ]
  %3446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3464, %3442 ]
  %3447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3465, %3442 ]
  %3448 = sub i64 %3430, %3443
  %3449 = getelementptr inbounds i32, ptr %9, i64 %3448
  %3450 = getelementptr inbounds i32, ptr %3449, i64 -7
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !5
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3449, i64 -15
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !5
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = getelementptr inbounds i32, ptr %3449, i64 -23
  %3457 = load <8 x i32>, ptr %3456, align 4, !tbaa !5
  %3458 = shufflevector <8 x i32> %3457, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3459 = getelementptr inbounds i32, ptr %3449, i64 -31
  %3460 = load <8 x i32>, ptr %3459, align 4, !tbaa !5
  %3461 = shufflevector <8 x i32> %3460, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3462 = mul <8 x i32> %3452, %3444
  %3463 = mul <8 x i32> %3455, %3445
  %3464 = mul <8 x i32> %3458, %3446
  %3465 = mul <8 x i32> %3461, %3447
  %3466 = add nuw i64 %3443, 32
  %3467 = icmp eq i64 %3466, %3440
  br i1 %3467, label %3468, label %3442, !llvm.loop !694

3468:                                             ; preds = %3442
  %3469 = mul <8 x i32> %3463, %3462
  %3470 = mul <8 x i32> %3464, %3469
  %3471 = mul <8 x i32> %3465, %3470
  %3472 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3471)
  %3473 = icmp eq i64 %3436, %3440
  br i1 %3473, label %3486, label %3474

3474:                                             ; preds = %3427, %3468
  %3475 = phi i64 [ %3430, %3427 ], [ %3441, %3468 ]
  %3476 = phi i32 [ 1, %3427 ], [ %3472, %3468 ]
  br label %3477

3477:                                             ; preds = %3474, %3477
  %3478 = phi i64 [ %3483, %3477 ], [ %3475, %3474 ]
  %3479 = phi i32 [ %3482, %3477 ], [ %3476, %3474 ]
  %3480 = getelementptr inbounds i32, ptr %9, i64 %3478
  %3481 = load i32, ptr %3480, align 4, !tbaa !5
  %3482 = mul nsw i32 %3481, %3479
  %3483 = add nsw i64 %3478, -1
  %3484 = trunc i64 %3478 to i32
  %3485 = icmp sgt i32 %3484, 0
  br i1 %3485, label %3477, label %3486, !llvm.loop !695

3486:                                             ; preds = %3477, %3468
  %3487 = phi i32 [ %3472, %3468 ], [ %3482, %3477 ]
  %3488 = and i64 %3437, 4294967295
  %3489 = getelementptr inbounds i32, ptr %6, i64 %3488
  %3490 = load i32, ptr %3489, align 4, !tbaa !5
  %3491 = mul nsw i32 %3490, %3487
  %3492 = add nsw i32 %3491, %3431
  %3493 = icmp sgt i64 %3429, 2
  %3494 = add nsw i64 %3430, -1
  %3495 = add i32 %3428, 1
  br i1 %3493, label %3427, label %3496, !llvm.loop !696

3496:                                             ; preds = %3486, %3422
  %3497 = phi i32 [ %3426, %3422 ], [ %3492, %3486 ]
  %3498 = sext i32 %3497 to i64
  %3499 = getelementptr inbounds i32, ptr %3087, i64 %3498
  %3500 = load i32, ptr %3499, align 4, !tbaa !5
  %3501 = tail call i32 @llvm.abs.i32(i32 %3500, i1 false)
  %3502 = zext i32 %3501 to i64
  %3503 = add nuw nsw i64 %3423, %3502
  %3504 = fadd fast double %3425, 1.000000e+00
  %3505 = add nuw nsw i32 %3424, 1
  br i1 %3416, label %3506, label %3553

3506:                                             ; preds = %3496
  %3507 = load i32, ptr %4, align 4, !tbaa !5
  %3508 = load i32, ptr %12, align 4, !tbaa !5
  %3509 = add nsw i32 %3508, -1
  %3510 = icmp slt i32 %3507, %3509
  br i1 %3510, label %3530, label %3511

3511:                                             ; preds = %3506
  %3512 = icmp eq i32 %3507, %3509
  br i1 %3512, label %3513, label %3546

3513:                                             ; preds = %3511
  store i32 0, ptr %4, align 4, !tbaa !5
  %3514 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3514, ptr %6, align 4, !tbaa !5
  br i1 %3421, label %3553, label %3515

3515:                                             ; preds = %3513, %3540
  %3516 = phi i64 [ %3544, %3540 ], [ 1, %3513 ]
  %3517 = getelementptr inbounds i32, ptr %4, i64 %3516
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = getelementptr inbounds i32, ptr %12, i64 %3516
  %3520 = load i32, ptr %3519, align 4, !tbaa !5
  %3521 = add nsw i32 %3520, -1
  %3522 = icmp slt i32 %3518, %3521
  br i1 %3522, label %3523, label %3538

3523:                                             ; preds = %3515
  br i1 %3510, label %3530, label %3524

3524:                                             ; preds = %3523
  %3525 = getelementptr inbounds i32, ptr %7, i64 %3516
  %3526 = load i32, ptr %3525, align 4, !tbaa !5
  %3527 = getelementptr inbounds i32, ptr %6, i64 %3516
  %3528 = load i32, ptr %3527, align 4, !tbaa !5
  %3529 = add nsw i32 %3528, %3526
  store i32 %3529, ptr %3527, align 4, !tbaa !5
  br label %3548

3530:                                             ; preds = %3506, %3523
  %3531 = phi i32 [ %3518, %3523 ], [ %3507, %3506 ]
  %3532 = phi ptr [ %3517, %3523 ], [ %4, %3506 ]
  %3533 = phi i64 [ %3516, %3523 ], [ 0, %3506 ]
  %3534 = add nsw i32 %3531, 1
  store i32 %3534, ptr %3532, align 4, !tbaa !5
  %3535 = getelementptr inbounds i32, ptr %7, i64 %3533
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = getelementptr inbounds i32, ptr %6, i64 %3533
  br label %3548

3538:                                             ; preds = %3515
  %3539 = icmp eq i32 %3518, %3521
  br i1 %3539, label %3540, label %3546

3540:                                             ; preds = %3538
  store i32 0, ptr %3517, align 4, !tbaa !5
  %3541 = getelementptr inbounds i32, ptr %8, i64 %3516
  %3542 = load i32, ptr %3541, align 4, !tbaa !5
  %3543 = getelementptr inbounds i32, ptr %6, i64 %3516
  store i32 %3542, ptr %3543, align 4, !tbaa !5
  %3544 = add nuw nsw i64 %3516, 1
  %3545 = icmp eq i64 %3544, %3419
  br i1 %3545, label %3553, label %3515, !llvm.loop !697

3546:                                             ; preds = %3511, %3538
  store i64 %3503, ptr %3089, align 8, !tbaa !120
  %3547 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3548:                                             ; preds = %3524, %3530
  %3549 = phi ptr [ %3537, %3530 ], [ %3517, %3524 ]
  %3550 = phi i32 [ %3536, %3530 ], [ 1, %3524 ]
  %3551 = load i32, ptr %3549, align 4, !tbaa !5
  %3552 = add nsw i32 %3551, %3550
  store i32 %3552, ptr %3549, align 4, !tbaa !5
  br label %3553

3553:                                             ; preds = %3540, %3548, %3513, %3496
  %3554 = icmp eq i32 %3505, %5
  br i1 %3554, label %5540, label %3422, !llvm.loop !698

3555:                                             ; preds = %3405, %3691
  %3556 = phi i64 [ 0, %3405 ], [ %3639, %3691 ]
  %3557 = phi i32 [ 0, %3405 ], [ %3640, %3691 ]
  %3558 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3406, label %3559, label %3628

3559:                                             ; preds = %3555, %3618
  %3560 = phi i32 [ %3627, %3618 ], [ 0, %3555 ]
  %3561 = phi i64 [ %3569, %3618 ], [ %3410, %3555 ]
  %3562 = phi i64 [ %3626, %3618 ], [ %3409, %3555 ]
  %3563 = phi i32 [ %3624, %3618 ], [ %3558, %3555 ]
  %3564 = sub i32 %3408, %3560
  %3565 = tail call i32 @llvm.smin.i32(i32 %3564, i32 0)
  %3566 = sub i32 %3564, %3565
  %3567 = zext i32 %3566 to i64
  %3568 = add nuw nsw i64 %3567, 1
  %3569 = add nsw i64 %3561, -1
  %3570 = icmp ult i32 %3566, 31
  br i1 %3570, label %3606, label %3571

3571:                                             ; preds = %3559
  %3572 = and i64 %3568, 8589934560
  %3573 = sub i64 %3562, %3572
  br label %3574

3574:                                             ; preds = %3574, %3571
  %3575 = phi i64 [ 0, %3571 ], [ %3598, %3574 ]
  %3576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3594, %3574 ]
  %3577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3595, %3574 ]
  %3578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3596, %3574 ]
  %3579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3571 ], [ %3597, %3574 ]
  %3580 = sub i64 %3562, %3575
  %3581 = getelementptr inbounds i32, ptr %11, i64 %3580
  %3582 = getelementptr inbounds i32, ptr %3581, i64 -7
  %3583 = load <8 x i32>, ptr %3582, align 4, !tbaa !5
  %3584 = shufflevector <8 x i32> %3583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3585 = getelementptr inbounds i32, ptr %3581, i64 -15
  %3586 = load <8 x i32>, ptr %3585, align 4, !tbaa !5
  %3587 = shufflevector <8 x i32> %3586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3588 = getelementptr inbounds i32, ptr %3581, i64 -23
  %3589 = load <8 x i32>, ptr %3588, align 4, !tbaa !5
  %3590 = shufflevector <8 x i32> %3589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3591 = getelementptr inbounds i32, ptr %3581, i64 -31
  %3592 = load <8 x i32>, ptr %3591, align 4, !tbaa !5
  %3593 = shufflevector <8 x i32> %3592, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3594 = mul <8 x i32> %3584, %3576
  %3595 = mul <8 x i32> %3587, %3577
  %3596 = mul <8 x i32> %3590, %3578
  %3597 = mul <8 x i32> %3593, %3579
  %3598 = add nuw i64 %3575, 32
  %3599 = icmp eq i64 %3598, %3572
  br i1 %3599, label %3600, label %3574, !llvm.loop !699

3600:                                             ; preds = %3574
  %3601 = mul <8 x i32> %3595, %3594
  %3602 = mul <8 x i32> %3596, %3601
  %3603 = mul <8 x i32> %3597, %3602
  %3604 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3603)
  %3605 = icmp eq i64 %3568, %3572
  br i1 %3605, label %3618, label %3606

3606:                                             ; preds = %3559, %3600
  %3607 = phi i64 [ %3562, %3559 ], [ %3573, %3600 ]
  %3608 = phi i32 [ 1, %3559 ], [ %3604, %3600 ]
  br label %3609

3609:                                             ; preds = %3606, %3609
  %3610 = phi i64 [ %3615, %3609 ], [ %3607, %3606 ]
  %3611 = phi i32 [ %3614, %3609 ], [ %3608, %3606 ]
  %3612 = getelementptr inbounds i32, ptr %11, i64 %3610
  %3613 = load i32, ptr %3612, align 4, !tbaa !5
  %3614 = mul nsw i32 %3613, %3611
  %3615 = add nsw i64 %3610, -1
  %3616 = trunc i64 %3610 to i32
  %3617 = icmp sgt i32 %3616, 0
  br i1 %3617, label %3609, label %3618, !llvm.loop !700

3618:                                             ; preds = %3609, %3600
  %3619 = phi i32 [ %3604, %3600 ], [ %3614, %3609 ]
  %3620 = and i64 %3569, 4294967295
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3620
  %3622 = load i32, ptr %3621, align 4, !tbaa !5
  %3623 = mul nsw i32 %3622, %3619
  %3624 = add nsw i32 %3623, %3563
  %3625 = icmp sgt i64 %3561, 2
  %3626 = add nsw i64 %3562, -1
  %3627 = add i32 %3560, 1
  br i1 %3625, label %3559, label %3628, !llvm.loop !701

3628:                                             ; preds = %3618, %3555
  %3629 = phi i32 [ %3558, %3555 ], [ %3624, %3618 ]
  %3630 = icmp slt i32 %3629, %5
  br i1 %3630, label %3633, label %3631

3631:                                             ; preds = %3628
  %3632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3633:                                             ; preds = %3628
  %3634 = sext i32 %3629 to i64
  %3635 = getelementptr inbounds i32, ptr %3087, i64 %3634
  %3636 = load i32, ptr %3635, align 4, !tbaa !5
  %3637 = tail call i32 @llvm.abs.i32(i32 %3636, i1 false)
  %3638 = zext i32 %3637 to i64
  %3639 = add nuw nsw i64 %3556, %3638
  store i64 %3639, ptr %3089, align 8, !tbaa !120
  %3640 = add nuw nsw i32 %3557, 1
  br i1 %3407, label %3641, label %3691

3641:                                             ; preds = %3633
  %3642 = load i32, ptr %4, align 4, !tbaa !5
  %3643 = load i32, ptr %12, align 4, !tbaa !5
  %3644 = add nsw i32 %3643, -1
  %3645 = icmp slt i32 %3642, %3644
  br i1 %3645, label %3668, label %3646

3646:                                             ; preds = %3641
  %3647 = icmp eq i32 %3642, %3644
  br i1 %3647, label %3648, label %3684

3648:                                             ; preds = %3646
  store i32 0, ptr %4, align 4, !tbaa !5
  %3649 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3649, ptr %6, align 4, !tbaa !5
  br i1 %3412, label %3691, label %3650

3650:                                             ; preds = %3648, %3678
  %3651 = phi i64 [ %3682, %3678 ], [ 1, %3648 ]
  %3652 = getelementptr inbounds i32, ptr %4, i64 %3651
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = getelementptr inbounds i32, ptr %12, i64 %3651
  %3655 = load i32, ptr %3654, align 4, !tbaa !5
  %3656 = add nsw i32 %3655, -1
  %3657 = icmp slt i32 %3653, %3656
  br i1 %3657, label %3658, label %3676

3658:                                             ; preds = %3650
  br i1 %3645, label %3668, label %3659

3659:                                             ; preds = %3658
  %3660 = shl i64 %3651, 32
  %3661 = add i64 %3660, -4294967296
  %3662 = ashr exact i64 %3661, 32
  %3663 = getelementptr inbounds i32, ptr %7, i64 %3662
  %3664 = load i32, ptr %3663, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %6, i64 %3651
  %3666 = load i32, ptr %3665, align 4, !tbaa !5
  %3667 = add nsw i32 %3666, %3664
  store i32 %3667, ptr %3665, align 4, !tbaa !5
  br label %3686

3668:                                             ; preds = %3641, %3658
  %3669 = phi i32 [ %3653, %3658 ], [ %3642, %3641 ]
  %3670 = phi ptr [ %3652, %3658 ], [ %4, %3641 ]
  %3671 = phi i64 [ %3651, %3658 ], [ 0, %3641 ]
  %3672 = add nsw i32 %3669, 1
  store i32 %3672, ptr %3670, align 4, !tbaa !5
  %3673 = getelementptr inbounds i32, ptr %7, i64 %3671
  %3674 = load i32, ptr %3673, align 4, !tbaa !5
  %3675 = getelementptr inbounds i32, ptr %6, i64 %3671
  br label %3686

3676:                                             ; preds = %3650
  %3677 = icmp eq i32 %3653, %3656
  br i1 %3677, label %3678, label %3684

3678:                                             ; preds = %3676
  store i32 0, ptr %3652, align 4, !tbaa !5
  %3679 = getelementptr inbounds i32, ptr %8, i64 %3651
  %3680 = load i32, ptr %3679, align 4, !tbaa !5
  %3681 = getelementptr inbounds i32, ptr %6, i64 %3651
  store i32 %3680, ptr %3681, align 4, !tbaa !5
  %3682 = add nuw nsw i64 %3651, 1
  %3683 = icmp eq i64 %3682, %3410
  br i1 %3683, label %3691, label %3650, !llvm.loop !702

3684:                                             ; preds = %3646, %3676
  %3685 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3686:                                             ; preds = %3659, %3668
  %3687 = phi ptr [ %3675, %3668 ], [ %3652, %3659 ]
  %3688 = phi i32 [ %3674, %3668 ], [ 1, %3659 ]
  %3689 = load i32, ptr %3687, align 4, !tbaa !5
  %3690 = add nsw i32 %3689, %3688
  store i32 %3690, ptr %3687, align 4, !tbaa !5
  br label %3691

3691:                                             ; preds = %3678, %3686, %3648, %3633
  %3692 = icmp eq i32 %3640, %5
  br i1 %3692, label %5545, label %3555, !llvm.loop !703

3693:                                             ; preds = %3095
  %3694 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

3695:                                             ; preds = %18
  %3696 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3697 = load ptr, ptr %3696, align 8, !tbaa !9
  %3698 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3699 = load ptr, ptr %3698, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3699, align 8, !tbaa !18
  %3700 = icmp eq i32 %13, 0
  br i1 %3700, label %3701, label %3707

3701:                                             ; preds = %3695
  %3702 = load i32, ptr %3697, align 4, !tbaa !5
  %3703 = sitofp i32 %3702 to double
  %3704 = icmp slt i32 %3702, 0
  %3705 = fneg fast double %3703
  %3706 = select fast i1 %3704, double %3705, double %3703
  store double %3706, ptr %3699, align 8, !tbaa !18
  br label %5545

3707:                                             ; preds = %3695
  switch i32 %1, label %4305 [
    i32 1, label %3708
    i32 0, label %4007
  ]

3708:                                             ; preds = %3707
  %3709 = getelementptr inbounds i32, ptr %3, i64 %19
  %3710 = load i32, ptr %3709, align 4, !tbaa !5
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp sgt i32 %5, 0
  br i1 %3711, label %3722, label %3713

3713:                                             ; preds = %3708
  br i1 %3712, label %3714, label %5545

3714:                                             ; preds = %3713
  %3715 = icmp sgt i32 %13, 1
  %3716 = icmp sgt i32 %13, 0
  %3717 = add i32 %13, -2
  %3718 = zext i32 %3717 to i64
  %3719 = zext i32 %13 to i64
  %3720 = add nuw i32 %5, 1
  %3721 = icmp eq i32 %13, 1
  br label %3867

3722:                                             ; preds = %3708
  br i1 %3712, label %3723, label %5545

3723:                                             ; preds = %3722
  %3724 = icmp sgt i32 %13, 1
  %3725 = icmp sgt i32 %13, 0
  %3726 = add i32 %13, -2
  %3727 = zext i32 %3726 to i64
  %3728 = zext i32 %13 to i64
  %3729 = add nuw i32 %5, 1
  %3730 = icmp eq i32 %13, 1
  br label %3731

3731:                                             ; preds = %3723, %3865
  %3732 = phi double [ 0.000000e+00, %3723 ], [ %3815, %3865 ]
  %3733 = phi i32 [ 0, %3723 ], [ %3817, %3865 ]
  %3734 = phi double [ 0.000000e+00, %3723 ], [ %3816, %3865 ]
  %3735 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3724, label %3736, label %3805

3736:                                             ; preds = %3731, %3795
  %3737 = phi i32 [ %3804, %3795 ], [ 0, %3731 ]
  %3738 = phi i64 [ %3746, %3795 ], [ %3728, %3731 ]
  %3739 = phi i64 [ %3803, %3795 ], [ %3727, %3731 ]
  %3740 = phi i32 [ %3801, %3795 ], [ %3735, %3731 ]
  %3741 = sub i32 %3726, %3737
  %3742 = tail call i32 @llvm.smin.i32(i32 %3741, i32 0)
  %3743 = sub i32 %3741, %3742
  %3744 = zext i32 %3743 to i64
  %3745 = add nuw nsw i64 %3744, 1
  %3746 = add nsw i64 %3738, -1
  %3747 = icmp ult i32 %3743, 31
  br i1 %3747, label %3783, label %3748

3748:                                             ; preds = %3736
  %3749 = and i64 %3745, 8589934560
  %3750 = sub i64 %3739, %3749
  br label %3751

3751:                                             ; preds = %3751, %3748
  %3752 = phi i64 [ 0, %3748 ], [ %3775, %3751 ]
  %3753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3771, %3751 ]
  %3754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3772, %3751 ]
  %3755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3773, %3751 ]
  %3756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3774, %3751 ]
  %3757 = sub i64 %3739, %3752
  %3758 = getelementptr inbounds i32, ptr %9, i64 %3757
  %3759 = getelementptr inbounds i32, ptr %3758, i64 -7
  %3760 = load <8 x i32>, ptr %3759, align 4, !tbaa !5
  %3761 = shufflevector <8 x i32> %3760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3762 = getelementptr inbounds i32, ptr %3758, i64 -15
  %3763 = load <8 x i32>, ptr %3762, align 4, !tbaa !5
  %3764 = shufflevector <8 x i32> %3763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3765 = getelementptr inbounds i32, ptr %3758, i64 -23
  %3766 = load <8 x i32>, ptr %3765, align 4, !tbaa !5
  %3767 = shufflevector <8 x i32> %3766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3768 = getelementptr inbounds i32, ptr %3758, i64 -31
  %3769 = load <8 x i32>, ptr %3768, align 4, !tbaa !5
  %3770 = shufflevector <8 x i32> %3769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3771 = mul <8 x i32> %3761, %3753
  %3772 = mul <8 x i32> %3764, %3754
  %3773 = mul <8 x i32> %3767, %3755
  %3774 = mul <8 x i32> %3770, %3756
  %3775 = add nuw i64 %3752, 32
  %3776 = icmp eq i64 %3775, %3749
  br i1 %3776, label %3777, label %3751, !llvm.loop !704

3777:                                             ; preds = %3751
  %3778 = mul <8 x i32> %3772, %3771
  %3779 = mul <8 x i32> %3773, %3778
  %3780 = mul <8 x i32> %3774, %3779
  %3781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3780)
  %3782 = icmp eq i64 %3745, %3749
  br i1 %3782, label %3795, label %3783

3783:                                             ; preds = %3736, %3777
  %3784 = phi i64 [ %3739, %3736 ], [ %3750, %3777 ]
  %3785 = phi i32 [ 1, %3736 ], [ %3781, %3777 ]
  br label %3786

3786:                                             ; preds = %3783, %3786
  %3787 = phi i64 [ %3792, %3786 ], [ %3784, %3783 ]
  %3788 = phi i32 [ %3791, %3786 ], [ %3785, %3783 ]
  %3789 = getelementptr inbounds i32, ptr %9, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = mul nsw i32 %3790, %3788
  %3792 = add nsw i64 %3787, -1
  %3793 = trunc i64 %3787 to i32
  %3794 = icmp sgt i32 %3793, 0
  br i1 %3794, label %3786, label %3795, !llvm.loop !705

3795:                                             ; preds = %3786, %3777
  %3796 = phi i32 [ %3781, %3777 ], [ %3791, %3786 ]
  %3797 = and i64 %3746, 4294967295
  %3798 = getelementptr inbounds i32, ptr %6, i64 %3797
  %3799 = load i32, ptr %3798, align 4, !tbaa !5
  %3800 = mul nsw i32 %3799, %3796
  %3801 = add nsw i32 %3800, %3740
  %3802 = icmp sgt i64 %3738, 2
  %3803 = add nsw i64 %3739, -1
  %3804 = add i32 %3737, 1
  br i1 %3802, label %3736, label %3805, !llvm.loop !706

3805:                                             ; preds = %3795, %3731
  %3806 = phi i32 [ %3735, %3731 ], [ %3801, %3795 ]
  %3807 = sext i32 %3806 to i64
  %3808 = getelementptr inbounds double, ptr %2, i64 %3807
  %3809 = load double, ptr %3808, align 8, !tbaa !18
  %3810 = getelementptr inbounds i32, ptr %3697, i64 %3807
  %3811 = load i32, ptr %3810, align 4, !tbaa !5
  %3812 = sitofp i32 %3811 to double
  %3813 = fmul fast double %3809, %3812
  %3814 = tail call fast double @llvm.fabs.f64(double %3813)
  %3815 = fadd fast double %3814, %3732
  store double %3815, ptr %3699, align 8, !tbaa !18
  %3816 = fadd fast double %3809, %3734
  %3817 = add nuw nsw i32 %3733, 1
  br i1 %3725, label %3818, label %3865

3818:                                             ; preds = %3805
  %3819 = load i32, ptr %4, align 4, !tbaa !5
  %3820 = load i32, ptr %12, align 4, !tbaa !5
  %3821 = add nsw i32 %3820, -1
  %3822 = icmp slt i32 %3819, %3821
  br i1 %3822, label %3842, label %3823

3823:                                             ; preds = %3818
  %3824 = icmp eq i32 %3819, %3821
  br i1 %3824, label %3825, label %3858

3825:                                             ; preds = %3823
  store i32 0, ptr %4, align 4, !tbaa !5
  %3826 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3826, ptr %6, align 4, !tbaa !5
  br i1 %3730, label %3865, label %3827

3827:                                             ; preds = %3825, %3852
  %3828 = phi i64 [ %3856, %3852 ], [ 1, %3825 ]
  %3829 = getelementptr inbounds i32, ptr %4, i64 %3828
  %3830 = load i32, ptr %3829, align 4, !tbaa !5
  %3831 = getelementptr inbounds i32, ptr %12, i64 %3828
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = add nsw i32 %3832, -1
  %3834 = icmp slt i32 %3830, %3833
  br i1 %3834, label %3835, label %3850

3835:                                             ; preds = %3827
  br i1 %3822, label %3842, label %3836

3836:                                             ; preds = %3835
  %3837 = getelementptr inbounds i32, ptr %7, i64 %3828
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %6, i64 %3828
  %3840 = load i32, ptr %3839, align 4, !tbaa !5
  %3841 = add nsw i32 %3840, %3838
  store i32 %3841, ptr %3839, align 4, !tbaa !5
  br label %3860

3842:                                             ; preds = %3818, %3835
  %3843 = phi i32 [ %3830, %3835 ], [ %3819, %3818 ]
  %3844 = phi ptr [ %3829, %3835 ], [ %4, %3818 ]
  %3845 = phi i64 [ %3828, %3835 ], [ 0, %3818 ]
  %3846 = add nsw i32 %3843, 1
  store i32 %3846, ptr %3844, align 4, !tbaa !5
  %3847 = getelementptr inbounds i32, ptr %7, i64 %3845
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3845
  br label %3860

3850:                                             ; preds = %3827
  %3851 = icmp eq i32 %3830, %3833
  br i1 %3851, label %3852, label %3858

3852:                                             ; preds = %3850
  store i32 0, ptr %3829, align 4, !tbaa !5
  %3853 = getelementptr inbounds i32, ptr %8, i64 %3828
  %3854 = load i32, ptr %3853, align 4, !tbaa !5
  %3855 = getelementptr inbounds i32, ptr %6, i64 %3828
  store i32 %3854, ptr %3855, align 4, !tbaa !5
  %3856 = add nuw nsw i64 %3828, 1
  %3857 = icmp eq i64 %3856, %3728
  br i1 %3857, label %3865, label %3827, !llvm.loop !707

3858:                                             ; preds = %3823, %3850
  %3859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

3860:                                             ; preds = %3836, %3842
  %3861 = phi ptr [ %3849, %3842 ], [ %3829, %3836 ]
  %3862 = phi i32 [ %3848, %3842 ], [ 1, %3836 ]
  %3863 = load i32, ptr %3861, align 4, !tbaa !5
  %3864 = add nsw i32 %3863, %3862
  store i32 %3864, ptr %3861, align 4, !tbaa !5
  br label %3865

3865:                                             ; preds = %3852, %3860, %3825, %3805
  %3866 = icmp eq i32 %3817, %5
  br i1 %3866, label %5545, label %3731, !llvm.loop !708

3867:                                             ; preds = %3714, %4005
  %3868 = phi double [ 0.000000e+00, %3714 ], [ %3953, %4005 ]
  %3869 = phi i32 [ 0, %3714 ], [ %3954, %4005 ]
  %3870 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3715, label %3871, label %3940

3871:                                             ; preds = %3867, %3930
  %3872 = phi i32 [ %3939, %3930 ], [ 0, %3867 ]
  %3873 = phi i64 [ %3881, %3930 ], [ %3719, %3867 ]
  %3874 = phi i64 [ %3938, %3930 ], [ %3718, %3867 ]
  %3875 = phi i32 [ %3936, %3930 ], [ %3870, %3867 ]
  %3876 = sub i32 %3717, %3872
  %3877 = tail call i32 @llvm.smin.i32(i32 %3876, i32 0)
  %3878 = sub i32 %3876, %3877
  %3879 = zext i32 %3878 to i64
  %3880 = add nuw nsw i64 %3879, 1
  %3881 = add nsw i64 %3873, -1
  %3882 = icmp ult i32 %3878, 31
  br i1 %3882, label %3918, label %3883

3883:                                             ; preds = %3871
  %3884 = and i64 %3880, 8589934560
  %3885 = sub i64 %3874, %3884
  br label %3886

3886:                                             ; preds = %3886, %3883
  %3887 = phi i64 [ 0, %3883 ], [ %3910, %3886 ]
  %3888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3906, %3886 ]
  %3889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3907, %3886 ]
  %3890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3908, %3886 ]
  %3891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3883 ], [ %3909, %3886 ]
  %3892 = sub i64 %3874, %3887
  %3893 = getelementptr inbounds i32, ptr %11, i64 %3892
  %3894 = getelementptr inbounds i32, ptr %3893, i64 -7
  %3895 = load <8 x i32>, ptr %3894, align 4, !tbaa !5
  %3896 = shufflevector <8 x i32> %3895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3897 = getelementptr inbounds i32, ptr %3893, i64 -15
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = getelementptr inbounds i32, ptr %3893, i64 -23
  %3901 = load <8 x i32>, ptr %3900, align 4, !tbaa !5
  %3902 = shufflevector <8 x i32> %3901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3903 = getelementptr inbounds i32, ptr %3893, i64 -31
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !5
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = mul <8 x i32> %3896, %3888
  %3907 = mul <8 x i32> %3899, %3889
  %3908 = mul <8 x i32> %3902, %3890
  %3909 = mul <8 x i32> %3905, %3891
  %3910 = add nuw i64 %3887, 32
  %3911 = icmp eq i64 %3910, %3884
  br i1 %3911, label %3912, label %3886, !llvm.loop !709

3912:                                             ; preds = %3886
  %3913 = mul <8 x i32> %3907, %3906
  %3914 = mul <8 x i32> %3908, %3913
  %3915 = mul <8 x i32> %3909, %3914
  %3916 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3915)
  %3917 = icmp eq i64 %3880, %3884
  br i1 %3917, label %3930, label %3918

3918:                                             ; preds = %3871, %3912
  %3919 = phi i64 [ %3874, %3871 ], [ %3885, %3912 ]
  %3920 = phi i32 [ 1, %3871 ], [ %3916, %3912 ]
  br label %3921

3921:                                             ; preds = %3918, %3921
  %3922 = phi i64 [ %3927, %3921 ], [ %3919, %3918 ]
  %3923 = phi i32 [ %3926, %3921 ], [ %3920, %3918 ]
  %3924 = getelementptr inbounds i32, ptr %11, i64 %3922
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = mul nsw i32 %3925, %3923
  %3927 = add nsw i64 %3922, -1
  %3928 = trunc i64 %3922 to i32
  %3929 = icmp sgt i32 %3928, 0
  br i1 %3929, label %3921, label %3930, !llvm.loop !710

3930:                                             ; preds = %3921, %3912
  %3931 = phi i32 [ %3916, %3912 ], [ %3926, %3921 ]
  %3932 = and i64 %3881, 4294967295
  %3933 = getelementptr inbounds i32, ptr %6, i64 %3932
  %3934 = load i32, ptr %3933, align 4, !tbaa !5
  %3935 = mul nsw i32 %3934, %3931
  %3936 = add nsw i32 %3935, %3875
  %3937 = icmp sgt i64 %3873, 2
  %3938 = add nsw i64 %3874, -1
  %3939 = add i32 %3872, 1
  br i1 %3937, label %3871, label %3940, !llvm.loop !711

3940:                                             ; preds = %3930, %3867
  %3941 = phi i32 [ %3870, %3867 ], [ %3936, %3930 ]
  %3942 = icmp slt i32 %3941, %5
  br i1 %3942, label %3945, label %3943

3943:                                             ; preds = %3940
  %3944 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

3945:                                             ; preds = %3940
  %3946 = sext i32 %3941 to i64
  %3947 = getelementptr inbounds i32, ptr %3697, i64 %3946
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = sitofp i32 %3948 to double
  %3950 = icmp slt i32 %3948, 0
  %3951 = fneg fast double %3949
  %3952 = select fast i1 %3950, double %3951, double %3949
  %3953 = fadd fast double %3952, %3868
  store double %3953, ptr %3699, align 8, !tbaa !18
  %3954 = add nuw nsw i32 %3869, 1
  br i1 %3716, label %3955, label %4005

3955:                                             ; preds = %3945
  %3956 = load i32, ptr %4, align 4, !tbaa !5
  %3957 = load i32, ptr %12, align 4, !tbaa !5
  %3958 = add nsw i32 %3957, -1
  %3959 = icmp slt i32 %3956, %3958
  br i1 %3959, label %3982, label %3960

3960:                                             ; preds = %3955
  %3961 = icmp eq i32 %3956, %3958
  br i1 %3961, label %3962, label %3998

3962:                                             ; preds = %3960
  store i32 0, ptr %4, align 4, !tbaa !5
  %3963 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3963, ptr %6, align 4, !tbaa !5
  br i1 %3721, label %4005, label %3964

3964:                                             ; preds = %3962, %3992
  %3965 = phi i64 [ %3996, %3992 ], [ 1, %3962 ]
  %3966 = getelementptr inbounds i32, ptr %4, i64 %3965
  %3967 = load i32, ptr %3966, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %12, i64 %3965
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = add nsw i32 %3969, -1
  %3971 = icmp slt i32 %3967, %3970
  br i1 %3971, label %3972, label %3990

3972:                                             ; preds = %3964
  br i1 %3959, label %3982, label %3973

3973:                                             ; preds = %3972
  %3974 = shl i64 %3965, 32
  %3975 = add i64 %3974, -4294967296
  %3976 = ashr exact i64 %3975, 32
  %3977 = getelementptr inbounds i32, ptr %7, i64 %3976
  %3978 = load i32, ptr %3977, align 4, !tbaa !5
  %3979 = getelementptr inbounds i32, ptr %6, i64 %3965
  %3980 = load i32, ptr %3979, align 4, !tbaa !5
  %3981 = add nsw i32 %3980, %3978
  store i32 %3981, ptr %3979, align 4, !tbaa !5
  br label %4000

3982:                                             ; preds = %3955, %3972
  %3983 = phi i32 [ %3967, %3972 ], [ %3956, %3955 ]
  %3984 = phi ptr [ %3966, %3972 ], [ %4, %3955 ]
  %3985 = phi i64 [ %3965, %3972 ], [ 0, %3955 ]
  %3986 = add nsw i32 %3983, 1
  store i32 %3986, ptr %3984, align 4, !tbaa !5
  %3987 = getelementptr inbounds i32, ptr %7, i64 %3985
  %3988 = load i32, ptr %3987, align 4, !tbaa !5
  %3989 = getelementptr inbounds i32, ptr %6, i64 %3985
  br label %4000

3990:                                             ; preds = %3964
  %3991 = icmp eq i32 %3967, %3970
  br i1 %3991, label %3992, label %3998

3992:                                             ; preds = %3990
  store i32 0, ptr %3966, align 4, !tbaa !5
  %3993 = getelementptr inbounds i32, ptr %8, i64 %3965
  %3994 = load i32, ptr %3993, align 4, !tbaa !5
  %3995 = getelementptr inbounds i32, ptr %6, i64 %3965
  store i32 %3994, ptr %3995, align 4, !tbaa !5
  %3996 = add nuw nsw i64 %3965, 1
  %3997 = icmp eq i64 %3996, %3719
  br i1 %3997, label %4005, label %3964, !llvm.loop !712

3998:                                             ; preds = %3960, %3990
  %3999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4000:                                             ; preds = %3973, %3982
  %4001 = phi ptr [ %3989, %3982 ], [ %3966, %3973 ]
  %4002 = phi i32 [ %3988, %3982 ], [ 1, %3973 ]
  %4003 = load i32, ptr %4001, align 4, !tbaa !5
  %4004 = add nsw i32 %4003, %4002
  store i32 %4004, ptr %4001, align 4, !tbaa !5
  br label %4005

4005:                                             ; preds = %3992, %4000, %3962, %3945
  %4006 = icmp eq i32 %3954, %5
  br i1 %4006, label %5545, label %3867, !llvm.loop !713

4007:                                             ; preds = %3707
  %4008 = getelementptr inbounds i32, ptr %3, i64 %19
  %4009 = load i32, ptr %4008, align 4, !tbaa !5
  %4010 = icmp eq i32 %4009, 0
  %4011 = icmp sgt i32 %5, 0
  br i1 %4010, label %4021, label %4012

4012:                                             ; preds = %4007
  br i1 %4011, label %4013, label %5545

4013:                                             ; preds = %4012
  %4014 = icmp sgt i32 %13, 1
  %4015 = icmp sgt i32 %13, 0
  %4016 = add i32 %13, -2
  %4017 = zext i32 %4016 to i64
  %4018 = zext i32 %13 to i64
  %4019 = add nuw i32 %5, 1
  %4020 = icmp eq i32 %13, 1
  br label %4165

4021:                                             ; preds = %4007
  br i1 %4011, label %4022, label %5545

4022:                                             ; preds = %4021
  %4023 = icmp sgt i32 %13, 1
  %4024 = icmp sgt i32 %13, 0
  %4025 = add i32 %13, -2
  %4026 = zext i32 %4025 to i64
  %4027 = zext i32 %13 to i64
  %4028 = add nuw i32 %5, 1
  %4029 = icmp eq i32 %13, 1
  br label %4030

4030:                                             ; preds = %4022, %4163
  %4031 = phi double [ 0.000000e+00, %4022 ], [ %4113, %4163 ]
  %4032 = phi i32 [ 0, %4022 ], [ %4115, %4163 ]
  %4033 = phi double [ 0.000000e+00, %4022 ], [ %4114, %4163 ]
  %4034 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4035, label %4104

4035:                                             ; preds = %4030, %4094
  %4036 = phi i32 [ %4103, %4094 ], [ 0, %4030 ]
  %4037 = phi i64 [ %4045, %4094 ], [ %4027, %4030 ]
  %4038 = phi i64 [ %4102, %4094 ], [ %4026, %4030 ]
  %4039 = phi i32 [ %4100, %4094 ], [ %4034, %4030 ]
  %4040 = sub i32 %4025, %4036
  %4041 = tail call i32 @llvm.smin.i32(i32 %4040, i32 0)
  %4042 = sub i32 %4040, %4041
  %4043 = zext i32 %4042 to i64
  %4044 = add nuw nsw i64 %4043, 1
  %4045 = add nsw i64 %4037, -1
  %4046 = icmp ult i32 %4042, 31
  br i1 %4046, label %4082, label %4047

4047:                                             ; preds = %4035
  %4048 = and i64 %4044, 8589934560
  %4049 = sub i64 %4038, %4048
  br label %4050

4050:                                             ; preds = %4050, %4047
  %4051 = phi i64 [ 0, %4047 ], [ %4074, %4050 ]
  %4052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4070, %4050 ]
  %4053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4071, %4050 ]
  %4054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4072, %4050 ]
  %4055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4047 ], [ %4073, %4050 ]
  %4056 = sub i64 %4038, %4051
  %4057 = getelementptr inbounds i32, ptr %9, i64 %4056
  %4058 = getelementptr inbounds i32, ptr %4057, i64 -7
  %4059 = load <8 x i32>, ptr %4058, align 4, !tbaa !5
  %4060 = shufflevector <8 x i32> %4059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4061 = getelementptr inbounds i32, ptr %4057, i64 -15
  %4062 = load <8 x i32>, ptr %4061, align 4, !tbaa !5
  %4063 = shufflevector <8 x i32> %4062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4064 = getelementptr inbounds i32, ptr %4057, i64 -23
  %4065 = load <8 x i32>, ptr %4064, align 4, !tbaa !5
  %4066 = shufflevector <8 x i32> %4065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4067 = getelementptr inbounds i32, ptr %4057, i64 -31
  %4068 = load <8 x i32>, ptr %4067, align 4, !tbaa !5
  %4069 = shufflevector <8 x i32> %4068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4070 = mul <8 x i32> %4060, %4052
  %4071 = mul <8 x i32> %4063, %4053
  %4072 = mul <8 x i32> %4066, %4054
  %4073 = mul <8 x i32> %4069, %4055
  %4074 = add nuw i64 %4051, 32
  %4075 = icmp eq i64 %4074, %4048
  br i1 %4075, label %4076, label %4050, !llvm.loop !714

4076:                                             ; preds = %4050
  %4077 = mul <8 x i32> %4071, %4070
  %4078 = mul <8 x i32> %4072, %4077
  %4079 = mul <8 x i32> %4073, %4078
  %4080 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4079)
  %4081 = icmp eq i64 %4044, %4048
  br i1 %4081, label %4094, label %4082

4082:                                             ; preds = %4035, %4076
  %4083 = phi i64 [ %4038, %4035 ], [ %4049, %4076 ]
  %4084 = phi i32 [ 1, %4035 ], [ %4080, %4076 ]
  br label %4085

4085:                                             ; preds = %4082, %4085
  %4086 = phi i64 [ %4091, %4085 ], [ %4083, %4082 ]
  %4087 = phi i32 [ %4090, %4085 ], [ %4084, %4082 ]
  %4088 = getelementptr inbounds i32, ptr %9, i64 %4086
  %4089 = load i32, ptr %4088, align 4, !tbaa !5
  %4090 = mul nsw i32 %4089, %4087
  %4091 = add nsw i64 %4086, -1
  %4092 = trunc i64 %4086 to i32
  %4093 = icmp sgt i32 %4092, 0
  br i1 %4093, label %4085, label %4094, !llvm.loop !715

4094:                                             ; preds = %4085, %4076
  %4095 = phi i32 [ %4080, %4076 ], [ %4090, %4085 ]
  %4096 = and i64 %4045, 4294967295
  %4097 = getelementptr inbounds i32, ptr %6, i64 %4096
  %4098 = load i32, ptr %4097, align 4, !tbaa !5
  %4099 = mul nsw i32 %4098, %4095
  %4100 = add nsw i32 %4099, %4039
  %4101 = icmp sgt i64 %4037, 2
  %4102 = add nsw i64 %4038, -1
  %4103 = add i32 %4036, 1
  br i1 %4101, label %4035, label %4104, !llvm.loop !716

4104:                                             ; preds = %4094, %4030
  %4105 = phi i32 [ %4034, %4030 ], [ %4100, %4094 ]
  %4106 = sext i32 %4105 to i64
  %4107 = getelementptr inbounds i32, ptr %3697, i64 %4106
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = sitofp i32 %4108 to double
  %4110 = icmp slt i32 %4108, 0
  %4111 = fneg fast double %4109
  %4112 = select fast i1 %4110, double %4111, double %4109
  %4113 = fadd fast double %4112, %4031
  %4114 = fadd fast double %4033, 1.000000e+00
  %4115 = add nuw nsw i32 %4032, 1
  br i1 %4024, label %4116, label %4163

4116:                                             ; preds = %4104
  %4117 = load i32, ptr %4, align 4, !tbaa !5
  %4118 = load i32, ptr %12, align 4, !tbaa !5
  %4119 = add nsw i32 %4118, -1
  %4120 = icmp slt i32 %4117, %4119
  br i1 %4120, label %4140, label %4121

4121:                                             ; preds = %4116
  %4122 = icmp eq i32 %4117, %4119
  br i1 %4122, label %4123, label %4156

4123:                                             ; preds = %4121
  store i32 0, ptr %4, align 4, !tbaa !5
  %4124 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4124, ptr %6, align 4, !tbaa !5
  br i1 %4029, label %4163, label %4125

4125:                                             ; preds = %4123, %4150
  %4126 = phi i64 [ %4154, %4150 ], [ 1, %4123 ]
  %4127 = getelementptr inbounds i32, ptr %4, i64 %4126
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = getelementptr inbounds i32, ptr %12, i64 %4126
  %4130 = load i32, ptr %4129, align 4, !tbaa !5
  %4131 = add nsw i32 %4130, -1
  %4132 = icmp slt i32 %4128, %4131
  br i1 %4132, label %4133, label %4148

4133:                                             ; preds = %4125
  br i1 %4120, label %4140, label %4134

4134:                                             ; preds = %4133
  %4135 = getelementptr inbounds i32, ptr %7, i64 %4126
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %6, i64 %4126
  %4138 = load i32, ptr %4137, align 4, !tbaa !5
  %4139 = add nsw i32 %4138, %4136
  store i32 %4139, ptr %4137, align 4, !tbaa !5
  br label %4158

4140:                                             ; preds = %4116, %4133
  %4141 = phi i32 [ %4128, %4133 ], [ %4117, %4116 ]
  %4142 = phi ptr [ %4127, %4133 ], [ %4, %4116 ]
  %4143 = phi i64 [ %4126, %4133 ], [ 0, %4116 ]
  %4144 = add nsw i32 %4141, 1
  store i32 %4144, ptr %4142, align 4, !tbaa !5
  %4145 = getelementptr inbounds i32, ptr %7, i64 %4143
  %4146 = load i32, ptr %4145, align 4, !tbaa !5
  %4147 = getelementptr inbounds i32, ptr %6, i64 %4143
  br label %4158

4148:                                             ; preds = %4125
  %4149 = icmp eq i32 %4128, %4131
  br i1 %4149, label %4150, label %4156

4150:                                             ; preds = %4148
  store i32 0, ptr %4127, align 4, !tbaa !5
  %4151 = getelementptr inbounds i32, ptr %8, i64 %4126
  %4152 = load i32, ptr %4151, align 4, !tbaa !5
  %4153 = getelementptr inbounds i32, ptr %6, i64 %4126
  store i32 %4152, ptr %4153, align 4, !tbaa !5
  %4154 = add nuw nsw i64 %4126, 1
  %4155 = icmp eq i64 %4154, %4027
  br i1 %4155, label %4163, label %4125, !llvm.loop !717

4156:                                             ; preds = %4121, %4148
  store double %4113, ptr %3699, align 8, !tbaa !18
  %4157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4158:                                             ; preds = %4134, %4140
  %4159 = phi ptr [ %4147, %4140 ], [ %4127, %4134 ]
  %4160 = phi i32 [ %4146, %4140 ], [ 1, %4134 ]
  %4161 = load i32, ptr %4159, align 4, !tbaa !5
  %4162 = add nsw i32 %4161, %4160
  store i32 %4162, ptr %4159, align 4, !tbaa !5
  br label %4163

4163:                                             ; preds = %4150, %4158, %4123, %4104
  %4164 = icmp eq i32 %4115, %5
  br i1 %4164, label %5541, label %4030, !llvm.loop !718

4165:                                             ; preds = %4013, %4303
  %4166 = phi double [ 0.000000e+00, %4013 ], [ %4251, %4303 ]
  %4167 = phi i32 [ 0, %4013 ], [ %4252, %4303 ]
  %4168 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4014, label %4169, label %4238

4169:                                             ; preds = %4165, %4228
  %4170 = phi i32 [ %4237, %4228 ], [ 0, %4165 ]
  %4171 = phi i64 [ %4179, %4228 ], [ %4018, %4165 ]
  %4172 = phi i64 [ %4236, %4228 ], [ %4017, %4165 ]
  %4173 = phi i32 [ %4234, %4228 ], [ %4168, %4165 ]
  %4174 = sub i32 %4016, %4170
  %4175 = tail call i32 @llvm.smin.i32(i32 %4174, i32 0)
  %4176 = sub i32 %4174, %4175
  %4177 = zext i32 %4176 to i64
  %4178 = add nuw nsw i64 %4177, 1
  %4179 = add nsw i64 %4171, -1
  %4180 = icmp ult i32 %4176, 31
  br i1 %4180, label %4216, label %4181

4181:                                             ; preds = %4169
  %4182 = and i64 %4178, 8589934560
  %4183 = sub i64 %4172, %4182
  br label %4184

4184:                                             ; preds = %4184, %4181
  %4185 = phi i64 [ 0, %4181 ], [ %4208, %4184 ]
  %4186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4204, %4184 ]
  %4187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4205, %4184 ]
  %4188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4206, %4184 ]
  %4189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4181 ], [ %4207, %4184 ]
  %4190 = sub i64 %4172, %4185
  %4191 = getelementptr inbounds i32, ptr %11, i64 %4190
  %4192 = getelementptr inbounds i32, ptr %4191, i64 -7
  %4193 = load <8 x i32>, ptr %4192, align 4, !tbaa !5
  %4194 = shufflevector <8 x i32> %4193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4195 = getelementptr inbounds i32, ptr %4191, i64 -15
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !5
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = getelementptr inbounds i32, ptr %4191, i64 -23
  %4199 = load <8 x i32>, ptr %4198, align 4, !tbaa !5
  %4200 = shufflevector <8 x i32> %4199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4201 = getelementptr inbounds i32, ptr %4191, i64 -31
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !5
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = mul <8 x i32> %4194, %4186
  %4205 = mul <8 x i32> %4197, %4187
  %4206 = mul <8 x i32> %4200, %4188
  %4207 = mul <8 x i32> %4203, %4189
  %4208 = add nuw i64 %4185, 32
  %4209 = icmp eq i64 %4208, %4182
  br i1 %4209, label %4210, label %4184, !llvm.loop !719

4210:                                             ; preds = %4184
  %4211 = mul <8 x i32> %4205, %4204
  %4212 = mul <8 x i32> %4206, %4211
  %4213 = mul <8 x i32> %4207, %4212
  %4214 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4213)
  %4215 = icmp eq i64 %4178, %4182
  br i1 %4215, label %4228, label %4216

4216:                                             ; preds = %4169, %4210
  %4217 = phi i64 [ %4172, %4169 ], [ %4183, %4210 ]
  %4218 = phi i32 [ 1, %4169 ], [ %4214, %4210 ]
  br label %4219

4219:                                             ; preds = %4216, %4219
  %4220 = phi i64 [ %4225, %4219 ], [ %4217, %4216 ]
  %4221 = phi i32 [ %4224, %4219 ], [ %4218, %4216 ]
  %4222 = getelementptr inbounds i32, ptr %11, i64 %4220
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = mul nsw i32 %4223, %4221
  %4225 = add nsw i64 %4220, -1
  %4226 = trunc i64 %4220 to i32
  %4227 = icmp sgt i32 %4226, 0
  br i1 %4227, label %4219, label %4228, !llvm.loop !720

4228:                                             ; preds = %4219, %4210
  %4229 = phi i32 [ %4214, %4210 ], [ %4224, %4219 ]
  %4230 = and i64 %4179, 4294967295
  %4231 = getelementptr inbounds i32, ptr %6, i64 %4230
  %4232 = load i32, ptr %4231, align 4, !tbaa !5
  %4233 = mul nsw i32 %4232, %4229
  %4234 = add nsw i32 %4233, %4173
  %4235 = icmp sgt i64 %4171, 2
  %4236 = add nsw i64 %4172, -1
  %4237 = add i32 %4170, 1
  br i1 %4235, label %4169, label %4238, !llvm.loop !721

4238:                                             ; preds = %4228, %4165
  %4239 = phi i32 [ %4168, %4165 ], [ %4234, %4228 ]
  %4240 = icmp slt i32 %4239, %5
  br i1 %4240, label %4243, label %4241

4241:                                             ; preds = %4238
  %4242 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4243:                                             ; preds = %4238
  %4244 = sext i32 %4239 to i64
  %4245 = getelementptr inbounds i32, ptr %3697, i64 %4244
  %4246 = load i32, ptr %4245, align 4, !tbaa !5
  %4247 = sitofp i32 %4246 to double
  %4248 = icmp slt i32 %4246, 0
  %4249 = fneg fast double %4247
  %4250 = select fast i1 %4248, double %4249, double %4247
  %4251 = fadd fast double %4250, %4166
  store double %4251, ptr %3699, align 8, !tbaa !18
  %4252 = add nuw nsw i32 %4167, 1
  br i1 %4015, label %4253, label %4303

4253:                                             ; preds = %4243
  %4254 = load i32, ptr %4, align 4, !tbaa !5
  %4255 = load i32, ptr %12, align 4, !tbaa !5
  %4256 = add nsw i32 %4255, -1
  %4257 = icmp slt i32 %4254, %4256
  br i1 %4257, label %4280, label %4258

4258:                                             ; preds = %4253
  %4259 = icmp eq i32 %4254, %4256
  br i1 %4259, label %4260, label %4296

4260:                                             ; preds = %4258
  store i32 0, ptr %4, align 4, !tbaa !5
  %4261 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4261, ptr %6, align 4, !tbaa !5
  br i1 %4020, label %4303, label %4262

4262:                                             ; preds = %4260, %4290
  %4263 = phi i64 [ %4294, %4290 ], [ 1, %4260 ]
  %4264 = getelementptr inbounds i32, ptr %4, i64 %4263
  %4265 = load i32, ptr %4264, align 4, !tbaa !5
  %4266 = getelementptr inbounds i32, ptr %12, i64 %4263
  %4267 = load i32, ptr %4266, align 4, !tbaa !5
  %4268 = add nsw i32 %4267, -1
  %4269 = icmp slt i32 %4265, %4268
  br i1 %4269, label %4270, label %4288

4270:                                             ; preds = %4262
  br i1 %4257, label %4280, label %4271

4271:                                             ; preds = %4270
  %4272 = shl i64 %4263, 32
  %4273 = add i64 %4272, -4294967296
  %4274 = ashr exact i64 %4273, 32
  %4275 = getelementptr inbounds i32, ptr %7, i64 %4274
  %4276 = load i32, ptr %4275, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %6, i64 %4263
  %4278 = load i32, ptr %4277, align 4, !tbaa !5
  %4279 = add nsw i32 %4278, %4276
  store i32 %4279, ptr %4277, align 4, !tbaa !5
  br label %4298

4280:                                             ; preds = %4253, %4270
  %4281 = phi i32 [ %4265, %4270 ], [ %4254, %4253 ]
  %4282 = phi ptr [ %4264, %4270 ], [ %4, %4253 ]
  %4283 = phi i64 [ %4263, %4270 ], [ 0, %4253 ]
  %4284 = add nsw i32 %4281, 1
  store i32 %4284, ptr %4282, align 4, !tbaa !5
  %4285 = getelementptr inbounds i32, ptr %7, i64 %4283
  %4286 = load i32, ptr %4285, align 4, !tbaa !5
  %4287 = getelementptr inbounds i32, ptr %6, i64 %4283
  br label %4298

4288:                                             ; preds = %4262
  %4289 = icmp eq i32 %4265, %4268
  br i1 %4289, label %4290, label %4296

4290:                                             ; preds = %4288
  store i32 0, ptr %4264, align 4, !tbaa !5
  %4291 = getelementptr inbounds i32, ptr %8, i64 %4263
  %4292 = load i32, ptr %4291, align 4, !tbaa !5
  %4293 = getelementptr inbounds i32, ptr %6, i64 %4263
  store i32 %4292, ptr %4293, align 4, !tbaa !5
  %4294 = add nuw nsw i64 %4263, 1
  %4295 = icmp eq i64 %4294, %4018
  br i1 %4295, label %4303, label %4262, !llvm.loop !722

4296:                                             ; preds = %4258, %4288
  %4297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4298:                                             ; preds = %4271, %4280
  %4299 = phi ptr [ %4287, %4280 ], [ %4264, %4271 ]
  %4300 = phi i32 [ %4286, %4280 ], [ 1, %4271 ]
  %4301 = load i32, ptr %4299, align 4, !tbaa !5
  %4302 = add nsw i32 %4301, %4300
  store i32 %4302, ptr %4299, align 4, !tbaa !5
  br label %4303

4303:                                             ; preds = %4290, %4298, %4260, %4243
  %4304 = icmp eq i32 %4252, %5
  br i1 %4304, label %5545, label %4165, !llvm.loop !723

4305:                                             ; preds = %3707
  %4306 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4307:                                             ; preds = %18
  %4308 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4309 = load ptr, ptr %4308, align 8, !tbaa !9
  %4310 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4311 = load ptr, ptr %4310, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4311, align 4, !tbaa !162
  %4312 = icmp eq i32 %13, 0
  br i1 %4312, label %4313, label %4319

4313:                                             ; preds = %4307
  %4314 = load i32, ptr %4309, align 4, !tbaa !5
  %4315 = sitofp i32 %4314 to float
  %4316 = icmp slt i32 %4314, 0
  %4317 = fneg fast float %4315
  %4318 = select fast i1 %4316, float %4317, float %4315
  store float %4318, ptr %4311, align 4, !tbaa !162
  br label %5545

4319:                                             ; preds = %4307
  switch i32 %1, label %4923 [
    i32 1, label %4320
    i32 0, label %4625
  ]

4320:                                             ; preds = %4319
  %4321 = getelementptr inbounds i32, ptr %3, i64 %19
  %4322 = load i32, ptr %4321, align 4, !tbaa !5
  %4323 = icmp eq i32 %4322, 0
  %4324 = icmp sgt i32 %5, 0
  br i1 %4323, label %4334, label %4325

4325:                                             ; preds = %4320
  br i1 %4324, label %4326, label %5545

4326:                                             ; preds = %4325
  %4327 = icmp sgt i32 %13, 1
  %4328 = icmp sgt i32 %13, 0
  %4329 = add i32 %13, -2
  %4330 = zext i32 %4329 to i64
  %4331 = zext i32 %13 to i64
  %4332 = add nuw i32 %5, 1
  %4333 = icmp eq i32 %13, 1
  br label %4482

4334:                                             ; preds = %4320
  br i1 %4324, label %4335, label %5545

4335:                                             ; preds = %4334
  %4336 = icmp sgt i32 %13, 1
  %4337 = icmp sgt i32 %13, 0
  %4338 = add i32 %13, -2
  %4339 = zext i32 %4338 to i64
  %4340 = zext i32 %13 to i64
  %4341 = add nuw i32 %5, 1
  %4342 = icmp eq i32 %13, 1
  br label %4343

4343:                                             ; preds = %4335, %4480
  %4344 = phi float [ 0.000000e+00, %4335 ], [ %4430, %4480 ]
  %4345 = phi i32 [ 0, %4335 ], [ %4432, %4480 ]
  %4346 = phi double [ 0.000000e+00, %4335 ], [ %4431, %4480 ]
  %4347 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4336, label %4348, label %4417

4348:                                             ; preds = %4343, %4407
  %4349 = phi i32 [ %4416, %4407 ], [ 0, %4343 ]
  %4350 = phi i64 [ %4358, %4407 ], [ %4340, %4343 ]
  %4351 = phi i64 [ %4415, %4407 ], [ %4339, %4343 ]
  %4352 = phi i32 [ %4413, %4407 ], [ %4347, %4343 ]
  %4353 = sub i32 %4338, %4349
  %4354 = tail call i32 @llvm.smin.i32(i32 %4353, i32 0)
  %4355 = sub i32 %4353, %4354
  %4356 = zext i32 %4355 to i64
  %4357 = add nuw nsw i64 %4356, 1
  %4358 = add nsw i64 %4350, -1
  %4359 = icmp ult i32 %4355, 31
  br i1 %4359, label %4395, label %4360

4360:                                             ; preds = %4348
  %4361 = and i64 %4357, 8589934560
  %4362 = sub i64 %4351, %4361
  br label %4363

4363:                                             ; preds = %4363, %4360
  %4364 = phi i64 [ 0, %4360 ], [ %4387, %4363 ]
  %4365 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4383, %4363 ]
  %4366 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4384, %4363 ]
  %4367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4385, %4363 ]
  %4368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4360 ], [ %4386, %4363 ]
  %4369 = sub i64 %4351, %4364
  %4370 = getelementptr inbounds i32, ptr %9, i64 %4369
  %4371 = getelementptr inbounds i32, ptr %4370, i64 -7
  %4372 = load <8 x i32>, ptr %4371, align 4, !tbaa !5
  %4373 = shufflevector <8 x i32> %4372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4374 = getelementptr inbounds i32, ptr %4370, i64 -15
  %4375 = load <8 x i32>, ptr %4374, align 4, !tbaa !5
  %4376 = shufflevector <8 x i32> %4375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4377 = getelementptr inbounds i32, ptr %4370, i64 -23
  %4378 = load <8 x i32>, ptr %4377, align 4, !tbaa !5
  %4379 = shufflevector <8 x i32> %4378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4380 = getelementptr inbounds i32, ptr %4370, i64 -31
  %4381 = load <8 x i32>, ptr %4380, align 4, !tbaa !5
  %4382 = shufflevector <8 x i32> %4381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4383 = mul <8 x i32> %4373, %4365
  %4384 = mul <8 x i32> %4376, %4366
  %4385 = mul <8 x i32> %4379, %4367
  %4386 = mul <8 x i32> %4382, %4368
  %4387 = add nuw i64 %4364, 32
  %4388 = icmp eq i64 %4387, %4361
  br i1 %4388, label %4389, label %4363, !llvm.loop !724

4389:                                             ; preds = %4363
  %4390 = mul <8 x i32> %4384, %4383
  %4391 = mul <8 x i32> %4385, %4390
  %4392 = mul <8 x i32> %4386, %4391
  %4393 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4392)
  %4394 = icmp eq i64 %4357, %4361
  br i1 %4394, label %4407, label %4395

4395:                                             ; preds = %4348, %4389
  %4396 = phi i64 [ %4351, %4348 ], [ %4362, %4389 ]
  %4397 = phi i32 [ 1, %4348 ], [ %4393, %4389 ]
  br label %4398

4398:                                             ; preds = %4395, %4398
  %4399 = phi i64 [ %4404, %4398 ], [ %4396, %4395 ]
  %4400 = phi i32 [ %4403, %4398 ], [ %4397, %4395 ]
  %4401 = getelementptr inbounds i32, ptr %9, i64 %4399
  %4402 = load i32, ptr %4401, align 4, !tbaa !5
  %4403 = mul nsw i32 %4402, %4400
  %4404 = add nsw i64 %4399, -1
  %4405 = trunc i64 %4399 to i32
  %4406 = icmp sgt i32 %4405, 0
  br i1 %4406, label %4398, label %4407, !llvm.loop !725

4407:                                             ; preds = %4398, %4389
  %4408 = phi i32 [ %4393, %4389 ], [ %4403, %4398 ]
  %4409 = and i64 %4358, 4294967295
  %4410 = getelementptr inbounds i32, ptr %6, i64 %4409
  %4411 = load i32, ptr %4410, align 4, !tbaa !5
  %4412 = mul nsw i32 %4411, %4408
  %4413 = add nsw i32 %4412, %4352
  %4414 = icmp sgt i64 %4350, 2
  %4415 = add nsw i64 %4351, -1
  %4416 = add i32 %4349, 1
  br i1 %4414, label %4348, label %4417, !llvm.loop !726

4417:                                             ; preds = %4407, %4343
  %4418 = phi i32 [ %4347, %4343 ], [ %4413, %4407 ]
  %4419 = sext i32 %4418 to i64
  %4420 = getelementptr inbounds double, ptr %2, i64 %4419
  %4421 = load double, ptr %4420, align 8, !tbaa !18
  %4422 = getelementptr inbounds i32, ptr %4309, i64 %4419
  %4423 = load i32, ptr %4422, align 4, !tbaa !5
  %4424 = sitofp i32 %4423 to float
  %4425 = fpext float %4344 to double
  %4426 = fpext float %4424 to double
  %4427 = fmul fast double %4421, %4426
  %4428 = tail call fast double @llvm.fabs.f64(double %4427)
  %4429 = fadd fast double %4428, %4425
  %4430 = fptrunc double %4429 to float
  %4431 = fadd fast double %4421, %4346
  %4432 = add nuw nsw i32 %4345, 1
  br i1 %4337, label %4433, label %4480

4433:                                             ; preds = %4417
  %4434 = load i32, ptr %4, align 4, !tbaa !5
  %4435 = load i32, ptr %12, align 4, !tbaa !5
  %4436 = add nsw i32 %4435, -1
  %4437 = icmp slt i32 %4434, %4436
  br i1 %4437, label %4457, label %4438

4438:                                             ; preds = %4433
  %4439 = icmp eq i32 %4434, %4436
  br i1 %4439, label %4440, label %4473

4440:                                             ; preds = %4438
  store i32 0, ptr %4, align 4, !tbaa !5
  %4441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4441, ptr %6, align 4, !tbaa !5
  br i1 %4342, label %4480, label %4442

4442:                                             ; preds = %4440, %4467
  %4443 = phi i64 [ %4471, %4467 ], [ 1, %4440 ]
  %4444 = getelementptr inbounds i32, ptr %4, i64 %4443
  %4445 = load i32, ptr %4444, align 4, !tbaa !5
  %4446 = getelementptr inbounds i32, ptr %12, i64 %4443
  %4447 = load i32, ptr %4446, align 4, !tbaa !5
  %4448 = add nsw i32 %4447, -1
  %4449 = icmp slt i32 %4445, %4448
  br i1 %4449, label %4450, label %4465

4450:                                             ; preds = %4442
  br i1 %4437, label %4457, label %4451

4451:                                             ; preds = %4450
  %4452 = getelementptr inbounds i32, ptr %7, i64 %4443
  %4453 = load i32, ptr %4452, align 4, !tbaa !5
  %4454 = getelementptr inbounds i32, ptr %6, i64 %4443
  %4455 = load i32, ptr %4454, align 4, !tbaa !5
  %4456 = add nsw i32 %4455, %4453
  store i32 %4456, ptr %4454, align 4, !tbaa !5
  br label %4475

4457:                                             ; preds = %4433, %4450
  %4458 = phi i32 [ %4445, %4450 ], [ %4434, %4433 ]
  %4459 = phi ptr [ %4444, %4450 ], [ %4, %4433 ]
  %4460 = phi i64 [ %4443, %4450 ], [ 0, %4433 ]
  %4461 = add nsw i32 %4458, 1
  store i32 %4461, ptr %4459, align 4, !tbaa !5
  %4462 = getelementptr inbounds i32, ptr %7, i64 %4460
  %4463 = load i32, ptr %4462, align 4, !tbaa !5
  %4464 = getelementptr inbounds i32, ptr %6, i64 %4460
  br label %4475

4465:                                             ; preds = %4442
  %4466 = icmp eq i32 %4445, %4448
  br i1 %4466, label %4467, label %4473

4467:                                             ; preds = %4465
  store i32 0, ptr %4444, align 4, !tbaa !5
  %4468 = getelementptr inbounds i32, ptr %8, i64 %4443
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4443
  store i32 %4469, ptr %4470, align 4, !tbaa !5
  %4471 = add nuw nsw i64 %4443, 1
  %4472 = icmp eq i64 %4471, %4340
  br i1 %4472, label %4480, label %4442, !llvm.loop !727

4473:                                             ; preds = %4438, %4465
  store float %4430, ptr %4311, align 4, !tbaa !162
  %4474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4475:                                             ; preds = %4451, %4457
  %4476 = phi ptr [ %4464, %4457 ], [ %4444, %4451 ]
  %4477 = phi i32 [ %4463, %4457 ], [ 1, %4451 ]
  %4478 = load i32, ptr %4476, align 4, !tbaa !5
  %4479 = add nsw i32 %4478, %4477
  store i32 %4479, ptr %4476, align 4, !tbaa !5
  br label %4480

4480:                                             ; preds = %4467, %4475, %4440, %4417
  %4481 = icmp eq i32 %4432, %5
  br i1 %4481, label %5542, label %4343, !llvm.loop !728

4482:                                             ; preds = %4326, %4623
  %4483 = phi float [ 0.000000e+00, %4326 ], [ %4571, %4623 ]
  %4484 = phi i32 [ 0, %4326 ], [ %4572, %4623 ]
  %4485 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4327, label %4486, label %4555

4486:                                             ; preds = %4482, %4545
  %4487 = phi i32 [ %4554, %4545 ], [ 0, %4482 ]
  %4488 = phi i64 [ %4496, %4545 ], [ %4331, %4482 ]
  %4489 = phi i64 [ %4553, %4545 ], [ %4330, %4482 ]
  %4490 = phi i32 [ %4551, %4545 ], [ %4485, %4482 ]
  %4491 = sub i32 %4329, %4487
  %4492 = tail call i32 @llvm.smin.i32(i32 %4491, i32 0)
  %4493 = sub i32 %4491, %4492
  %4494 = zext i32 %4493 to i64
  %4495 = add nuw nsw i64 %4494, 1
  %4496 = add nsw i64 %4488, -1
  %4497 = icmp ult i32 %4493, 31
  br i1 %4497, label %4533, label %4498

4498:                                             ; preds = %4486
  %4499 = and i64 %4495, 8589934560
  %4500 = sub i64 %4489, %4499
  br label %4501

4501:                                             ; preds = %4501, %4498
  %4502 = phi i64 [ 0, %4498 ], [ %4525, %4501 ]
  %4503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4521, %4501 ]
  %4504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4522, %4501 ]
  %4505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4523, %4501 ]
  %4506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4498 ], [ %4524, %4501 ]
  %4507 = sub i64 %4489, %4502
  %4508 = getelementptr inbounds i32, ptr %11, i64 %4507
  %4509 = getelementptr inbounds i32, ptr %4508, i64 -7
  %4510 = load <8 x i32>, ptr %4509, align 4, !tbaa !5
  %4511 = shufflevector <8 x i32> %4510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4512 = getelementptr inbounds i32, ptr %4508, i64 -15
  %4513 = load <8 x i32>, ptr %4512, align 4, !tbaa !5
  %4514 = shufflevector <8 x i32> %4513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4515 = getelementptr inbounds i32, ptr %4508, i64 -23
  %4516 = load <8 x i32>, ptr %4515, align 4, !tbaa !5
  %4517 = shufflevector <8 x i32> %4516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4518 = getelementptr inbounds i32, ptr %4508, i64 -31
  %4519 = load <8 x i32>, ptr %4518, align 4, !tbaa !5
  %4520 = shufflevector <8 x i32> %4519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4521 = mul <8 x i32> %4511, %4503
  %4522 = mul <8 x i32> %4514, %4504
  %4523 = mul <8 x i32> %4517, %4505
  %4524 = mul <8 x i32> %4520, %4506
  %4525 = add nuw i64 %4502, 32
  %4526 = icmp eq i64 %4525, %4499
  br i1 %4526, label %4527, label %4501, !llvm.loop !729

4527:                                             ; preds = %4501
  %4528 = mul <8 x i32> %4522, %4521
  %4529 = mul <8 x i32> %4523, %4528
  %4530 = mul <8 x i32> %4524, %4529
  %4531 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4530)
  %4532 = icmp eq i64 %4495, %4499
  br i1 %4532, label %4545, label %4533

4533:                                             ; preds = %4486, %4527
  %4534 = phi i64 [ %4489, %4486 ], [ %4500, %4527 ]
  %4535 = phi i32 [ 1, %4486 ], [ %4531, %4527 ]
  br label %4536

4536:                                             ; preds = %4533, %4536
  %4537 = phi i64 [ %4542, %4536 ], [ %4534, %4533 ]
  %4538 = phi i32 [ %4541, %4536 ], [ %4535, %4533 ]
  %4539 = getelementptr inbounds i32, ptr %11, i64 %4537
  %4540 = load i32, ptr %4539, align 4, !tbaa !5
  %4541 = mul nsw i32 %4540, %4538
  %4542 = add nsw i64 %4537, -1
  %4543 = trunc i64 %4537 to i32
  %4544 = icmp sgt i32 %4543, 0
  br i1 %4544, label %4536, label %4545, !llvm.loop !730

4545:                                             ; preds = %4536, %4527
  %4546 = phi i32 [ %4531, %4527 ], [ %4541, %4536 ]
  %4547 = and i64 %4496, 4294967295
  %4548 = getelementptr inbounds i32, ptr %6, i64 %4547
  %4549 = load i32, ptr %4548, align 4, !tbaa !5
  %4550 = mul nsw i32 %4549, %4546
  %4551 = add nsw i32 %4550, %4490
  %4552 = icmp sgt i64 %4488, 2
  %4553 = add nsw i64 %4489, -1
  %4554 = add i32 %4487, 1
  br i1 %4552, label %4486, label %4555, !llvm.loop !731

4555:                                             ; preds = %4545, %4482
  %4556 = phi i32 [ %4485, %4482 ], [ %4551, %4545 ]
  %4557 = icmp slt i32 %4556, %5
  br i1 %4557, label %4560, label %4558

4558:                                             ; preds = %4555
  %4559 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4560:                                             ; preds = %4555
  %4561 = sext i32 %4556 to i64
  %4562 = getelementptr inbounds i32, ptr %4309, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = sitofp i32 %4563 to float
  %4565 = fpext float %4483 to double
  %4566 = fpext float %4564 to double
  %4567 = icmp slt i32 %4563, 0
  %4568 = fneg fast double %4566
  %4569 = select fast i1 %4567, double %4568, double %4566
  %4570 = fadd fast double %4569, %4565
  %4571 = fptrunc double %4570 to float
  store float %4571, ptr %4311, align 4, !tbaa !162
  %4572 = add nuw nsw i32 %4484, 1
  br i1 %4328, label %4573, label %4623

4573:                                             ; preds = %4560
  %4574 = load i32, ptr %4, align 4, !tbaa !5
  %4575 = load i32, ptr %12, align 4, !tbaa !5
  %4576 = add nsw i32 %4575, -1
  %4577 = icmp slt i32 %4574, %4576
  br i1 %4577, label %4600, label %4578

4578:                                             ; preds = %4573
  %4579 = icmp eq i32 %4574, %4576
  br i1 %4579, label %4580, label %4616

4580:                                             ; preds = %4578
  store i32 0, ptr %4, align 4, !tbaa !5
  %4581 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4581, ptr %6, align 4, !tbaa !5
  br i1 %4333, label %4623, label %4582

4582:                                             ; preds = %4580, %4610
  %4583 = phi i64 [ %4614, %4610 ], [ 1, %4580 ]
  %4584 = getelementptr inbounds i32, ptr %4, i64 %4583
  %4585 = load i32, ptr %4584, align 4, !tbaa !5
  %4586 = getelementptr inbounds i32, ptr %12, i64 %4583
  %4587 = load i32, ptr %4586, align 4, !tbaa !5
  %4588 = add nsw i32 %4587, -1
  %4589 = icmp slt i32 %4585, %4588
  br i1 %4589, label %4590, label %4608

4590:                                             ; preds = %4582
  br i1 %4577, label %4600, label %4591

4591:                                             ; preds = %4590
  %4592 = shl i64 %4583, 32
  %4593 = add i64 %4592, -4294967296
  %4594 = ashr exact i64 %4593, 32
  %4595 = getelementptr inbounds i32, ptr %7, i64 %4594
  %4596 = load i32, ptr %4595, align 4, !tbaa !5
  %4597 = getelementptr inbounds i32, ptr %6, i64 %4583
  %4598 = load i32, ptr %4597, align 4, !tbaa !5
  %4599 = add nsw i32 %4598, %4596
  store i32 %4599, ptr %4597, align 4, !tbaa !5
  br label %4618

4600:                                             ; preds = %4573, %4590
  %4601 = phi i32 [ %4585, %4590 ], [ %4574, %4573 ]
  %4602 = phi ptr [ %4584, %4590 ], [ %4, %4573 ]
  %4603 = phi i64 [ %4583, %4590 ], [ 0, %4573 ]
  %4604 = add nsw i32 %4601, 1
  store i32 %4604, ptr %4602, align 4, !tbaa !5
  %4605 = getelementptr inbounds i32, ptr %7, i64 %4603
  %4606 = load i32, ptr %4605, align 4, !tbaa !5
  %4607 = getelementptr inbounds i32, ptr %6, i64 %4603
  br label %4618

4608:                                             ; preds = %4582
  %4609 = icmp eq i32 %4585, %4588
  br i1 %4609, label %4610, label %4616

4610:                                             ; preds = %4608
  store i32 0, ptr %4584, align 4, !tbaa !5
  %4611 = getelementptr inbounds i32, ptr %8, i64 %4583
  %4612 = load i32, ptr %4611, align 4, !tbaa !5
  %4613 = getelementptr inbounds i32, ptr %6, i64 %4583
  store i32 %4612, ptr %4613, align 4, !tbaa !5
  %4614 = add nuw nsw i64 %4583, 1
  %4615 = icmp eq i64 %4614, %4331
  br i1 %4615, label %4623, label %4582, !llvm.loop !732

4616:                                             ; preds = %4578, %4608
  %4617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4618:                                             ; preds = %4591, %4600
  %4619 = phi ptr [ %4607, %4600 ], [ %4584, %4591 ]
  %4620 = phi i32 [ %4606, %4600 ], [ 1, %4591 ]
  %4621 = load i32, ptr %4619, align 4, !tbaa !5
  %4622 = add nsw i32 %4621, %4620
  store i32 %4622, ptr %4619, align 4, !tbaa !5
  br label %4623

4623:                                             ; preds = %4610, %4618, %4580, %4560
  %4624 = icmp eq i32 %4572, %5
  br i1 %4624, label %5545, label %4482, !llvm.loop !733

4625:                                             ; preds = %4319
  %4626 = getelementptr inbounds i32, ptr %3, i64 %19
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = icmp eq i32 %4627, 0
  %4629 = icmp sgt i32 %5, 0
  br i1 %4628, label %4639, label %4630

4630:                                             ; preds = %4625
  br i1 %4629, label %4631, label %5545

4631:                                             ; preds = %4630
  %4632 = icmp sgt i32 %13, 1
  %4633 = icmp sgt i32 %13, 0
  %4634 = add i32 %13, -2
  %4635 = zext i32 %4634 to i64
  %4636 = zext i32 %13 to i64
  %4637 = add nuw i32 %5, 1
  %4638 = icmp eq i32 %13, 1
  br label %4783

4639:                                             ; preds = %4625
  br i1 %4629, label %4640, label %5545

4640:                                             ; preds = %4639
  %4641 = icmp sgt i32 %13, 1
  %4642 = icmp sgt i32 %13, 0
  %4643 = add i32 %13, -2
  %4644 = zext i32 %4643 to i64
  %4645 = zext i32 %13 to i64
  %4646 = add nuw i32 %5, 1
  %4647 = icmp eq i32 %13, 1
  br label %4648

4648:                                             ; preds = %4640, %4781
  %4649 = phi float [ 0.000000e+00, %4640 ], [ %4731, %4781 ]
  %4650 = phi i32 [ 0, %4640 ], [ %4733, %4781 ]
  %4651 = phi double [ 0.000000e+00, %4640 ], [ %4732, %4781 ]
  %4652 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4641, label %4653, label %4722

4653:                                             ; preds = %4648, %4712
  %4654 = phi i32 [ %4721, %4712 ], [ 0, %4648 ]
  %4655 = phi i64 [ %4663, %4712 ], [ %4645, %4648 ]
  %4656 = phi i64 [ %4720, %4712 ], [ %4644, %4648 ]
  %4657 = phi i32 [ %4718, %4712 ], [ %4652, %4648 ]
  %4658 = sub i32 %4643, %4654
  %4659 = tail call i32 @llvm.smin.i32(i32 %4658, i32 0)
  %4660 = sub i32 %4658, %4659
  %4661 = zext i32 %4660 to i64
  %4662 = add nuw nsw i64 %4661, 1
  %4663 = add nsw i64 %4655, -1
  %4664 = icmp ult i32 %4660, 31
  br i1 %4664, label %4700, label %4665

4665:                                             ; preds = %4653
  %4666 = and i64 %4662, 8589934560
  %4667 = sub i64 %4656, %4666
  br label %4668

4668:                                             ; preds = %4668, %4665
  %4669 = phi i64 [ 0, %4665 ], [ %4692, %4668 ]
  %4670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4688, %4668 ]
  %4671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4689, %4668 ]
  %4672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4690, %4668 ]
  %4673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4665 ], [ %4691, %4668 ]
  %4674 = sub i64 %4656, %4669
  %4675 = getelementptr inbounds i32, ptr %9, i64 %4674
  %4676 = getelementptr inbounds i32, ptr %4675, i64 -7
  %4677 = load <8 x i32>, ptr %4676, align 4, !tbaa !5
  %4678 = shufflevector <8 x i32> %4677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4679 = getelementptr inbounds i32, ptr %4675, i64 -15
  %4680 = load <8 x i32>, ptr %4679, align 4, !tbaa !5
  %4681 = shufflevector <8 x i32> %4680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4682 = getelementptr inbounds i32, ptr %4675, i64 -23
  %4683 = load <8 x i32>, ptr %4682, align 4, !tbaa !5
  %4684 = shufflevector <8 x i32> %4683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4685 = getelementptr inbounds i32, ptr %4675, i64 -31
  %4686 = load <8 x i32>, ptr %4685, align 4, !tbaa !5
  %4687 = shufflevector <8 x i32> %4686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4688 = mul <8 x i32> %4678, %4670
  %4689 = mul <8 x i32> %4681, %4671
  %4690 = mul <8 x i32> %4684, %4672
  %4691 = mul <8 x i32> %4687, %4673
  %4692 = add nuw i64 %4669, 32
  %4693 = icmp eq i64 %4692, %4666
  br i1 %4693, label %4694, label %4668, !llvm.loop !734

4694:                                             ; preds = %4668
  %4695 = mul <8 x i32> %4689, %4688
  %4696 = mul <8 x i32> %4690, %4695
  %4697 = mul <8 x i32> %4691, %4696
  %4698 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4697)
  %4699 = icmp eq i64 %4662, %4666
  br i1 %4699, label %4712, label %4700

4700:                                             ; preds = %4653, %4694
  %4701 = phi i64 [ %4656, %4653 ], [ %4667, %4694 ]
  %4702 = phi i32 [ 1, %4653 ], [ %4698, %4694 ]
  br label %4703

4703:                                             ; preds = %4700, %4703
  %4704 = phi i64 [ %4709, %4703 ], [ %4701, %4700 ]
  %4705 = phi i32 [ %4708, %4703 ], [ %4702, %4700 ]
  %4706 = getelementptr inbounds i32, ptr %9, i64 %4704
  %4707 = load i32, ptr %4706, align 4, !tbaa !5
  %4708 = mul nsw i32 %4707, %4705
  %4709 = add nsw i64 %4704, -1
  %4710 = trunc i64 %4704 to i32
  %4711 = icmp sgt i32 %4710, 0
  br i1 %4711, label %4703, label %4712, !llvm.loop !735

4712:                                             ; preds = %4703, %4694
  %4713 = phi i32 [ %4698, %4694 ], [ %4708, %4703 ]
  %4714 = and i64 %4663, 4294967295
  %4715 = getelementptr inbounds i32, ptr %6, i64 %4714
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = mul nsw i32 %4716, %4713
  %4718 = add nsw i32 %4717, %4657
  %4719 = icmp sgt i64 %4655, 2
  %4720 = add nsw i64 %4656, -1
  %4721 = add i32 %4654, 1
  br i1 %4719, label %4653, label %4722, !llvm.loop !736

4722:                                             ; preds = %4712, %4648
  %4723 = phi i32 [ %4652, %4648 ], [ %4718, %4712 ]
  %4724 = sext i32 %4723 to i64
  %4725 = getelementptr inbounds i32, ptr %4309, i64 %4724
  %4726 = load i32, ptr %4725, align 4, !tbaa !5
  %4727 = sitofp i32 %4726 to float
  %4728 = icmp slt i32 %4726, 0
  %4729 = fneg fast float %4727
  %4730 = select fast i1 %4728, float %4729, float %4727
  %4731 = fadd fast float %4730, %4649
  %4732 = fadd fast double %4651, 1.000000e+00
  %4733 = add nuw nsw i32 %4650, 1
  br i1 %4642, label %4734, label %4781

4734:                                             ; preds = %4722
  %4735 = load i32, ptr %4, align 4, !tbaa !5
  %4736 = load i32, ptr %12, align 4, !tbaa !5
  %4737 = add nsw i32 %4736, -1
  %4738 = icmp slt i32 %4735, %4737
  br i1 %4738, label %4758, label %4739

4739:                                             ; preds = %4734
  %4740 = icmp eq i32 %4735, %4737
  br i1 %4740, label %4741, label %4774

4741:                                             ; preds = %4739
  store i32 0, ptr %4, align 4, !tbaa !5
  %4742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4742, ptr %6, align 4, !tbaa !5
  br i1 %4647, label %4781, label %4743

4743:                                             ; preds = %4741, %4768
  %4744 = phi i64 [ %4772, %4768 ], [ 1, %4741 ]
  %4745 = getelementptr inbounds i32, ptr %4, i64 %4744
  %4746 = load i32, ptr %4745, align 4, !tbaa !5
  %4747 = getelementptr inbounds i32, ptr %12, i64 %4744
  %4748 = load i32, ptr %4747, align 4, !tbaa !5
  %4749 = add nsw i32 %4748, -1
  %4750 = icmp slt i32 %4746, %4749
  br i1 %4750, label %4751, label %4766

4751:                                             ; preds = %4743
  br i1 %4738, label %4758, label %4752

4752:                                             ; preds = %4751
  %4753 = getelementptr inbounds i32, ptr %7, i64 %4744
  %4754 = load i32, ptr %4753, align 4, !tbaa !5
  %4755 = getelementptr inbounds i32, ptr %6, i64 %4744
  %4756 = load i32, ptr %4755, align 4, !tbaa !5
  %4757 = add nsw i32 %4756, %4754
  store i32 %4757, ptr %4755, align 4, !tbaa !5
  br label %4776

4758:                                             ; preds = %4734, %4751
  %4759 = phi i32 [ %4746, %4751 ], [ %4735, %4734 ]
  %4760 = phi ptr [ %4745, %4751 ], [ %4, %4734 ]
  %4761 = phi i64 [ %4744, %4751 ], [ 0, %4734 ]
  %4762 = add nsw i32 %4759, 1
  store i32 %4762, ptr %4760, align 4, !tbaa !5
  %4763 = getelementptr inbounds i32, ptr %7, i64 %4761
  %4764 = load i32, ptr %4763, align 4, !tbaa !5
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4761
  br label %4776

4766:                                             ; preds = %4743
  %4767 = icmp eq i32 %4746, %4749
  br i1 %4767, label %4768, label %4774

4768:                                             ; preds = %4766
  store i32 0, ptr %4745, align 4, !tbaa !5
  %4769 = getelementptr inbounds i32, ptr %8, i64 %4744
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4744
  store i32 %4770, ptr %4771, align 4, !tbaa !5
  %4772 = add nuw nsw i64 %4744, 1
  %4773 = icmp eq i64 %4772, %4645
  br i1 %4773, label %4781, label %4743, !llvm.loop !737

4774:                                             ; preds = %4739, %4766
  store float %4731, ptr %4311, align 4, !tbaa !162
  %4775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4776:                                             ; preds = %4752, %4758
  %4777 = phi ptr [ %4765, %4758 ], [ %4745, %4752 ]
  %4778 = phi i32 [ %4764, %4758 ], [ 1, %4752 ]
  %4779 = load i32, ptr %4777, align 4, !tbaa !5
  %4780 = add nsw i32 %4779, %4778
  store i32 %4780, ptr %4777, align 4, !tbaa !5
  br label %4781

4781:                                             ; preds = %4768, %4776, %4741, %4722
  %4782 = icmp eq i32 %4733, %5
  br i1 %4782, label %5543, label %4648, !llvm.loop !738

4783:                                             ; preds = %4631, %4921
  %4784 = phi float [ 0.000000e+00, %4631 ], [ %4869, %4921 ]
  %4785 = phi i32 [ 0, %4631 ], [ %4870, %4921 ]
  %4786 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4632, label %4787, label %4856

4787:                                             ; preds = %4783, %4846
  %4788 = phi i32 [ %4855, %4846 ], [ 0, %4783 ]
  %4789 = phi i64 [ %4797, %4846 ], [ %4636, %4783 ]
  %4790 = phi i64 [ %4854, %4846 ], [ %4635, %4783 ]
  %4791 = phi i32 [ %4852, %4846 ], [ %4786, %4783 ]
  %4792 = sub i32 %4634, %4788
  %4793 = tail call i32 @llvm.smin.i32(i32 %4792, i32 0)
  %4794 = sub i32 %4792, %4793
  %4795 = zext i32 %4794 to i64
  %4796 = add nuw nsw i64 %4795, 1
  %4797 = add nsw i64 %4789, -1
  %4798 = icmp ult i32 %4794, 31
  br i1 %4798, label %4834, label %4799

4799:                                             ; preds = %4787
  %4800 = and i64 %4796, 8589934560
  %4801 = sub i64 %4790, %4800
  br label %4802

4802:                                             ; preds = %4802, %4799
  %4803 = phi i64 [ 0, %4799 ], [ %4826, %4802 ]
  %4804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4822, %4802 ]
  %4805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4823, %4802 ]
  %4806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4824, %4802 ]
  %4807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4799 ], [ %4825, %4802 ]
  %4808 = sub i64 %4790, %4803
  %4809 = getelementptr inbounds i32, ptr %11, i64 %4808
  %4810 = getelementptr inbounds i32, ptr %4809, i64 -7
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !5
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = getelementptr inbounds i32, ptr %4809, i64 -15
  %4814 = load <8 x i32>, ptr %4813, align 4, !tbaa !5
  %4815 = shufflevector <8 x i32> %4814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4816 = getelementptr inbounds i32, ptr %4809, i64 -23
  %4817 = load <8 x i32>, ptr %4816, align 4, !tbaa !5
  %4818 = shufflevector <8 x i32> %4817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4819 = getelementptr inbounds i32, ptr %4809, i64 -31
  %4820 = load <8 x i32>, ptr %4819, align 4, !tbaa !5
  %4821 = shufflevector <8 x i32> %4820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4822 = mul <8 x i32> %4812, %4804
  %4823 = mul <8 x i32> %4815, %4805
  %4824 = mul <8 x i32> %4818, %4806
  %4825 = mul <8 x i32> %4821, %4807
  %4826 = add nuw i64 %4803, 32
  %4827 = icmp eq i64 %4826, %4800
  br i1 %4827, label %4828, label %4802, !llvm.loop !739

4828:                                             ; preds = %4802
  %4829 = mul <8 x i32> %4823, %4822
  %4830 = mul <8 x i32> %4824, %4829
  %4831 = mul <8 x i32> %4825, %4830
  %4832 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4831)
  %4833 = icmp eq i64 %4796, %4800
  br i1 %4833, label %4846, label %4834

4834:                                             ; preds = %4787, %4828
  %4835 = phi i64 [ %4790, %4787 ], [ %4801, %4828 ]
  %4836 = phi i32 [ 1, %4787 ], [ %4832, %4828 ]
  br label %4837

4837:                                             ; preds = %4834, %4837
  %4838 = phi i64 [ %4843, %4837 ], [ %4835, %4834 ]
  %4839 = phi i32 [ %4842, %4837 ], [ %4836, %4834 ]
  %4840 = getelementptr inbounds i32, ptr %11, i64 %4838
  %4841 = load i32, ptr %4840, align 4, !tbaa !5
  %4842 = mul nsw i32 %4841, %4839
  %4843 = add nsw i64 %4838, -1
  %4844 = trunc i64 %4838 to i32
  %4845 = icmp sgt i32 %4844, 0
  br i1 %4845, label %4837, label %4846, !llvm.loop !740

4846:                                             ; preds = %4837, %4828
  %4847 = phi i32 [ %4832, %4828 ], [ %4842, %4837 ]
  %4848 = and i64 %4797, 4294967295
  %4849 = getelementptr inbounds i32, ptr %6, i64 %4848
  %4850 = load i32, ptr %4849, align 4, !tbaa !5
  %4851 = mul nsw i32 %4850, %4847
  %4852 = add nsw i32 %4851, %4791
  %4853 = icmp sgt i64 %4789, 2
  %4854 = add nsw i64 %4790, -1
  %4855 = add i32 %4788, 1
  br i1 %4853, label %4787, label %4856, !llvm.loop !741

4856:                                             ; preds = %4846, %4783
  %4857 = phi i32 [ %4786, %4783 ], [ %4852, %4846 ]
  %4858 = icmp slt i32 %4857, %5
  br i1 %4858, label %4861, label %4859

4859:                                             ; preds = %4856
  %4860 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

4861:                                             ; preds = %4856
  %4862 = sext i32 %4857 to i64
  %4863 = getelementptr inbounds i32, ptr %4309, i64 %4862
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = sitofp i32 %4864 to float
  %4866 = icmp slt i32 %4864, 0
  %4867 = fneg fast float %4865
  %4868 = select fast i1 %4866, float %4867, float %4865
  %4869 = fadd fast float %4868, %4784
  store float %4869, ptr %4311, align 4, !tbaa !162
  %4870 = add nuw nsw i32 %4785, 1
  br i1 %4633, label %4871, label %4921

4871:                                             ; preds = %4861
  %4872 = load i32, ptr %4, align 4, !tbaa !5
  %4873 = load i32, ptr %12, align 4, !tbaa !5
  %4874 = add nsw i32 %4873, -1
  %4875 = icmp slt i32 %4872, %4874
  br i1 %4875, label %4898, label %4876

4876:                                             ; preds = %4871
  %4877 = icmp eq i32 %4872, %4874
  br i1 %4877, label %4878, label %4914

4878:                                             ; preds = %4876
  store i32 0, ptr %4, align 4, !tbaa !5
  %4879 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4879, ptr %6, align 4, !tbaa !5
  br i1 %4638, label %4921, label %4880

4880:                                             ; preds = %4878, %4908
  %4881 = phi i64 [ %4912, %4908 ], [ 1, %4878 ]
  %4882 = getelementptr inbounds i32, ptr %4, i64 %4881
  %4883 = load i32, ptr %4882, align 4, !tbaa !5
  %4884 = getelementptr inbounds i32, ptr %12, i64 %4881
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = add nsw i32 %4885, -1
  %4887 = icmp slt i32 %4883, %4886
  br i1 %4887, label %4888, label %4906

4888:                                             ; preds = %4880
  br i1 %4875, label %4898, label %4889

4889:                                             ; preds = %4888
  %4890 = shl i64 %4881, 32
  %4891 = add i64 %4890, -4294967296
  %4892 = ashr exact i64 %4891, 32
  %4893 = getelementptr inbounds i32, ptr %7, i64 %4892
  %4894 = load i32, ptr %4893, align 4, !tbaa !5
  %4895 = getelementptr inbounds i32, ptr %6, i64 %4881
  %4896 = load i32, ptr %4895, align 4, !tbaa !5
  %4897 = add nsw i32 %4896, %4894
  store i32 %4897, ptr %4895, align 4, !tbaa !5
  br label %4916

4898:                                             ; preds = %4871, %4888
  %4899 = phi i32 [ %4883, %4888 ], [ %4872, %4871 ]
  %4900 = phi ptr [ %4882, %4888 ], [ %4, %4871 ]
  %4901 = phi i64 [ %4881, %4888 ], [ 0, %4871 ]
  %4902 = add nsw i32 %4899, 1
  store i32 %4902, ptr %4900, align 4, !tbaa !5
  %4903 = getelementptr inbounds i32, ptr %7, i64 %4901
  %4904 = load i32, ptr %4903, align 4, !tbaa !5
  %4905 = getelementptr inbounds i32, ptr %6, i64 %4901
  br label %4916

4906:                                             ; preds = %4880
  %4907 = icmp eq i32 %4883, %4886
  br i1 %4907, label %4908, label %4914

4908:                                             ; preds = %4906
  store i32 0, ptr %4882, align 4, !tbaa !5
  %4909 = getelementptr inbounds i32, ptr %8, i64 %4881
  %4910 = load i32, ptr %4909, align 4, !tbaa !5
  %4911 = getelementptr inbounds i32, ptr %6, i64 %4881
  store i32 %4910, ptr %4911, align 4, !tbaa !5
  %4912 = add nuw nsw i64 %4881, 1
  %4913 = icmp eq i64 %4912, %4636
  br i1 %4913, label %4921, label %4880, !llvm.loop !742

4914:                                             ; preds = %4876, %4906
  %4915 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

4916:                                             ; preds = %4889, %4898
  %4917 = phi ptr [ %4905, %4898 ], [ %4882, %4889 ]
  %4918 = phi i32 [ %4904, %4898 ], [ 1, %4889 ]
  %4919 = load i32, ptr %4917, align 4, !tbaa !5
  %4920 = add nsw i32 %4919, %4918
  store i32 %4920, ptr %4917, align 4, !tbaa !5
  br label %4921

4921:                                             ; preds = %4908, %4916, %4878, %4861
  %4922 = icmp eq i32 %4870, %5
  br i1 %4922, label %5545, label %4783, !llvm.loop !743

4923:                                             ; preds = %4319
  %4924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

4925:                                             ; preds = %18
  %4926 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4927 = load ptr, ptr %4926, align 8, !tbaa !9
  %4928 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4929 = load ptr, ptr %4928, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4929, align 8, !tbaa !18
  %4930 = icmp eq i32 %13, 0
  br i1 %4930, label %4931, label %4937

4931:                                             ; preds = %4925
  %4932 = load i32, ptr %4927, align 4, !tbaa !5
  %4933 = sitofp i32 %4932 to double
  %4934 = icmp slt i32 %4932, 0
  %4935 = fneg fast double %4933
  %4936 = select fast i1 %4934, double %4935, double %4933
  store double %4936, ptr %4929, align 8, !tbaa !18
  br label %5545

4937:                                             ; preds = %4925
  switch i32 %1, label %5535 [
    i32 1, label %4938
    i32 0, label %5237
  ]

4938:                                             ; preds = %4937
  %4939 = getelementptr inbounds i32, ptr %3, i64 %19
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = icmp eq i32 %4940, 0
  %4942 = icmp sgt i32 %5, 0
  br i1 %4941, label %4952, label %4943

4943:                                             ; preds = %4938
  br i1 %4942, label %4944, label %5545

4944:                                             ; preds = %4943
  %4945 = icmp sgt i32 %13, 1
  %4946 = icmp sgt i32 %13, 0
  %4947 = add i32 %13, -2
  %4948 = zext i32 %4947 to i64
  %4949 = zext i32 %13 to i64
  %4950 = add nuw i32 %5, 1
  %4951 = icmp eq i32 %13, 1
  br label %5097

4952:                                             ; preds = %4938
  br i1 %4942, label %4953, label %5545

4953:                                             ; preds = %4952
  %4954 = icmp sgt i32 %13, 1
  %4955 = icmp sgt i32 %13, 0
  %4956 = add i32 %13, -2
  %4957 = zext i32 %4956 to i64
  %4958 = zext i32 %13 to i64
  %4959 = add nuw i32 %5, 1
  %4960 = icmp eq i32 %13, 1
  br label %4961

4961:                                             ; preds = %4953, %5095
  %4962 = phi double [ 0.000000e+00, %4953 ], [ %5045, %5095 ]
  %4963 = phi i32 [ 0, %4953 ], [ %5047, %5095 ]
  %4964 = phi double [ 0.000000e+00, %4953 ], [ %5046, %5095 ]
  %4965 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4954, label %4966, label %5035

4966:                                             ; preds = %4961, %5025
  %4967 = phi i32 [ %5034, %5025 ], [ 0, %4961 ]
  %4968 = phi i64 [ %4976, %5025 ], [ %4958, %4961 ]
  %4969 = phi i64 [ %5033, %5025 ], [ %4957, %4961 ]
  %4970 = phi i32 [ %5031, %5025 ], [ %4965, %4961 ]
  %4971 = sub i32 %4956, %4967
  %4972 = tail call i32 @llvm.smin.i32(i32 %4971, i32 0)
  %4973 = sub i32 %4971, %4972
  %4974 = zext i32 %4973 to i64
  %4975 = add nuw nsw i64 %4974, 1
  %4976 = add nsw i64 %4968, -1
  %4977 = icmp ult i32 %4973, 31
  br i1 %4977, label %5013, label %4978

4978:                                             ; preds = %4966
  %4979 = and i64 %4975, 8589934560
  %4980 = sub i64 %4969, %4979
  br label %4981

4981:                                             ; preds = %4981, %4978
  %4982 = phi i64 [ 0, %4978 ], [ %5005, %4981 ]
  %4983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5001, %4981 ]
  %4984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5002, %4981 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5003, %4981 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4978 ], [ %5004, %4981 ]
  %4987 = sub i64 %4969, %4982
  %4988 = getelementptr inbounds i32, ptr %9, i64 %4987
  %4989 = getelementptr inbounds i32, ptr %4988, i64 -7
  %4990 = load <8 x i32>, ptr %4989, align 4, !tbaa !5
  %4991 = shufflevector <8 x i32> %4990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4992 = getelementptr inbounds i32, ptr %4988, i64 -15
  %4993 = load <8 x i32>, ptr %4992, align 4, !tbaa !5
  %4994 = shufflevector <8 x i32> %4993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4995 = getelementptr inbounds i32, ptr %4988, i64 -23
  %4996 = load <8 x i32>, ptr %4995, align 4, !tbaa !5
  %4997 = shufflevector <8 x i32> %4996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4998 = getelementptr inbounds i32, ptr %4988, i64 -31
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !5
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = mul <8 x i32> %4991, %4983
  %5002 = mul <8 x i32> %4994, %4984
  %5003 = mul <8 x i32> %4997, %4985
  %5004 = mul <8 x i32> %5000, %4986
  %5005 = add nuw i64 %4982, 32
  %5006 = icmp eq i64 %5005, %4979
  br i1 %5006, label %5007, label %4981, !llvm.loop !744

5007:                                             ; preds = %4981
  %5008 = mul <8 x i32> %5002, %5001
  %5009 = mul <8 x i32> %5003, %5008
  %5010 = mul <8 x i32> %5004, %5009
  %5011 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5010)
  %5012 = icmp eq i64 %4975, %4979
  br i1 %5012, label %5025, label %5013

5013:                                             ; preds = %4966, %5007
  %5014 = phi i64 [ %4969, %4966 ], [ %4980, %5007 ]
  %5015 = phi i32 [ 1, %4966 ], [ %5011, %5007 ]
  br label %5016

5016:                                             ; preds = %5013, %5016
  %5017 = phi i64 [ %5022, %5016 ], [ %5014, %5013 ]
  %5018 = phi i32 [ %5021, %5016 ], [ %5015, %5013 ]
  %5019 = getelementptr inbounds i32, ptr %9, i64 %5017
  %5020 = load i32, ptr %5019, align 4, !tbaa !5
  %5021 = mul nsw i32 %5020, %5018
  %5022 = add nsw i64 %5017, -1
  %5023 = trunc i64 %5017 to i32
  %5024 = icmp sgt i32 %5023, 0
  br i1 %5024, label %5016, label %5025, !llvm.loop !745

5025:                                             ; preds = %5016, %5007
  %5026 = phi i32 [ %5011, %5007 ], [ %5021, %5016 ]
  %5027 = and i64 %4976, 4294967295
  %5028 = getelementptr inbounds i32, ptr %6, i64 %5027
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = mul nsw i32 %5029, %5026
  %5031 = add nsw i32 %5030, %4970
  %5032 = icmp sgt i64 %4968, 2
  %5033 = add nsw i64 %4969, -1
  %5034 = add i32 %4967, 1
  br i1 %5032, label %4966, label %5035, !llvm.loop !746

5035:                                             ; preds = %5025, %4961
  %5036 = phi i32 [ %4965, %4961 ], [ %5031, %5025 ]
  %5037 = sext i32 %5036 to i64
  %5038 = getelementptr inbounds double, ptr %2, i64 %5037
  %5039 = load double, ptr %5038, align 8, !tbaa !18
  %5040 = getelementptr inbounds i32, ptr %4927, i64 %5037
  %5041 = load i32, ptr %5040, align 4, !tbaa !5
  %5042 = sitofp i32 %5041 to double
  %5043 = fmul fast double %5039, %5042
  %5044 = tail call fast double @llvm.fabs.f64(double %5043)
  %5045 = fadd fast double %5044, %4962
  store double %5045, ptr %4929, align 8, !tbaa !18
  %5046 = fadd fast double %5039, %4964
  %5047 = add nuw nsw i32 %4963, 1
  br i1 %4955, label %5048, label %5095

5048:                                             ; preds = %5035
  %5049 = load i32, ptr %4, align 4, !tbaa !5
  %5050 = load i32, ptr %12, align 4, !tbaa !5
  %5051 = add nsw i32 %5050, -1
  %5052 = icmp slt i32 %5049, %5051
  br i1 %5052, label %5072, label %5053

5053:                                             ; preds = %5048
  %5054 = icmp eq i32 %5049, %5051
  br i1 %5054, label %5055, label %5088

5055:                                             ; preds = %5053
  store i32 0, ptr %4, align 4, !tbaa !5
  %5056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5056, ptr %6, align 4, !tbaa !5
  br i1 %4960, label %5095, label %5057

5057:                                             ; preds = %5055, %5082
  %5058 = phi i64 [ %5086, %5082 ], [ 1, %5055 ]
  %5059 = getelementptr inbounds i32, ptr %4, i64 %5058
  %5060 = load i32, ptr %5059, align 4, !tbaa !5
  %5061 = getelementptr inbounds i32, ptr %12, i64 %5058
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = add nsw i32 %5062, -1
  %5064 = icmp slt i32 %5060, %5063
  br i1 %5064, label %5065, label %5080

5065:                                             ; preds = %5057
  br i1 %5052, label %5072, label %5066

5066:                                             ; preds = %5065
  %5067 = getelementptr inbounds i32, ptr %7, i64 %5058
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = getelementptr inbounds i32, ptr %6, i64 %5058
  %5070 = load i32, ptr %5069, align 4, !tbaa !5
  %5071 = add nsw i32 %5070, %5068
  store i32 %5071, ptr %5069, align 4, !tbaa !5
  br label %5090

5072:                                             ; preds = %5048, %5065
  %5073 = phi i32 [ %5060, %5065 ], [ %5049, %5048 ]
  %5074 = phi ptr [ %5059, %5065 ], [ %4, %5048 ]
  %5075 = phi i64 [ %5058, %5065 ], [ 0, %5048 ]
  %5076 = add nsw i32 %5073, 1
  store i32 %5076, ptr %5074, align 4, !tbaa !5
  %5077 = getelementptr inbounds i32, ptr %7, i64 %5075
  %5078 = load i32, ptr %5077, align 4, !tbaa !5
  %5079 = getelementptr inbounds i32, ptr %6, i64 %5075
  br label %5090

5080:                                             ; preds = %5057
  %5081 = icmp eq i32 %5060, %5063
  br i1 %5081, label %5082, label %5088

5082:                                             ; preds = %5080
  store i32 0, ptr %5059, align 4, !tbaa !5
  %5083 = getelementptr inbounds i32, ptr %8, i64 %5058
  %5084 = load i32, ptr %5083, align 4, !tbaa !5
  %5085 = getelementptr inbounds i32, ptr %6, i64 %5058
  store i32 %5084, ptr %5085, align 4, !tbaa !5
  %5086 = add nuw nsw i64 %5058, 1
  %5087 = icmp eq i64 %5086, %4958
  br i1 %5087, label %5095, label %5057, !llvm.loop !747

5088:                                             ; preds = %5053, %5080
  %5089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5090:                                             ; preds = %5066, %5072
  %5091 = phi ptr [ %5079, %5072 ], [ %5059, %5066 ]
  %5092 = phi i32 [ %5078, %5072 ], [ 1, %5066 ]
  %5093 = load i32, ptr %5091, align 4, !tbaa !5
  %5094 = add nsw i32 %5093, %5092
  store i32 %5094, ptr %5091, align 4, !tbaa !5
  br label %5095

5095:                                             ; preds = %5082, %5090, %5055, %5035
  %5096 = icmp eq i32 %5047, %5
  br i1 %5096, label %5545, label %4961, !llvm.loop !748

5097:                                             ; preds = %4944, %5235
  %5098 = phi double [ 0.000000e+00, %4944 ], [ %5183, %5235 ]
  %5099 = phi i32 [ 0, %4944 ], [ %5184, %5235 ]
  %5100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4945, label %5101, label %5170

5101:                                             ; preds = %5097, %5160
  %5102 = phi i32 [ %5169, %5160 ], [ 0, %5097 ]
  %5103 = phi i64 [ %5111, %5160 ], [ %4949, %5097 ]
  %5104 = phi i64 [ %5168, %5160 ], [ %4948, %5097 ]
  %5105 = phi i32 [ %5166, %5160 ], [ %5100, %5097 ]
  %5106 = sub i32 %4947, %5102
  %5107 = tail call i32 @llvm.smin.i32(i32 %5106, i32 0)
  %5108 = sub i32 %5106, %5107
  %5109 = zext i32 %5108 to i64
  %5110 = add nuw nsw i64 %5109, 1
  %5111 = add nsw i64 %5103, -1
  %5112 = icmp ult i32 %5108, 31
  br i1 %5112, label %5148, label %5113

5113:                                             ; preds = %5101
  %5114 = and i64 %5110, 8589934560
  %5115 = sub i64 %5104, %5114
  br label %5116

5116:                                             ; preds = %5116, %5113
  %5117 = phi i64 [ 0, %5113 ], [ %5140, %5116 ]
  %5118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5136, %5116 ]
  %5119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5137, %5116 ]
  %5120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5138, %5116 ]
  %5121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5113 ], [ %5139, %5116 ]
  %5122 = sub i64 %5104, %5117
  %5123 = getelementptr inbounds i32, ptr %11, i64 %5122
  %5124 = getelementptr inbounds i32, ptr %5123, i64 -7
  %5125 = load <8 x i32>, ptr %5124, align 4, !tbaa !5
  %5126 = shufflevector <8 x i32> %5125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5127 = getelementptr inbounds i32, ptr %5123, i64 -15
  %5128 = load <8 x i32>, ptr %5127, align 4, !tbaa !5
  %5129 = shufflevector <8 x i32> %5128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5130 = getelementptr inbounds i32, ptr %5123, i64 -23
  %5131 = load <8 x i32>, ptr %5130, align 4, !tbaa !5
  %5132 = shufflevector <8 x i32> %5131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5133 = getelementptr inbounds i32, ptr %5123, i64 -31
  %5134 = load <8 x i32>, ptr %5133, align 4, !tbaa !5
  %5135 = shufflevector <8 x i32> %5134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5136 = mul <8 x i32> %5126, %5118
  %5137 = mul <8 x i32> %5129, %5119
  %5138 = mul <8 x i32> %5132, %5120
  %5139 = mul <8 x i32> %5135, %5121
  %5140 = add nuw i64 %5117, 32
  %5141 = icmp eq i64 %5140, %5114
  br i1 %5141, label %5142, label %5116, !llvm.loop !749

5142:                                             ; preds = %5116
  %5143 = mul <8 x i32> %5137, %5136
  %5144 = mul <8 x i32> %5138, %5143
  %5145 = mul <8 x i32> %5139, %5144
  %5146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5145)
  %5147 = icmp eq i64 %5110, %5114
  br i1 %5147, label %5160, label %5148

5148:                                             ; preds = %5101, %5142
  %5149 = phi i64 [ %5104, %5101 ], [ %5115, %5142 ]
  %5150 = phi i32 [ 1, %5101 ], [ %5146, %5142 ]
  br label %5151

5151:                                             ; preds = %5148, %5151
  %5152 = phi i64 [ %5157, %5151 ], [ %5149, %5148 ]
  %5153 = phi i32 [ %5156, %5151 ], [ %5150, %5148 ]
  %5154 = getelementptr inbounds i32, ptr %11, i64 %5152
  %5155 = load i32, ptr %5154, align 4, !tbaa !5
  %5156 = mul nsw i32 %5155, %5153
  %5157 = add nsw i64 %5152, -1
  %5158 = trunc i64 %5152 to i32
  %5159 = icmp sgt i32 %5158, 0
  br i1 %5159, label %5151, label %5160, !llvm.loop !750

5160:                                             ; preds = %5151, %5142
  %5161 = phi i32 [ %5146, %5142 ], [ %5156, %5151 ]
  %5162 = and i64 %5111, 4294967295
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5162
  %5164 = load i32, ptr %5163, align 4, !tbaa !5
  %5165 = mul nsw i32 %5164, %5161
  %5166 = add nsw i32 %5165, %5105
  %5167 = icmp sgt i64 %5103, 2
  %5168 = add nsw i64 %5104, -1
  %5169 = add i32 %5102, 1
  br i1 %5167, label %5101, label %5170, !llvm.loop !751

5170:                                             ; preds = %5160, %5097
  %5171 = phi i32 [ %5100, %5097 ], [ %5166, %5160 ]
  %5172 = icmp slt i32 %5171, %5
  br i1 %5172, label %5175, label %5173

5173:                                             ; preds = %5170
  %5174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5175:                                             ; preds = %5170
  %5176 = sext i32 %5171 to i64
  %5177 = getelementptr inbounds i32, ptr %4927, i64 %5176
  %5178 = load i32, ptr %5177, align 4, !tbaa !5
  %5179 = sitofp i32 %5178 to double
  %5180 = icmp slt i32 %5178, 0
  %5181 = fneg fast double %5179
  %5182 = select fast i1 %5180, double %5181, double %5179
  %5183 = fadd fast double %5182, %5098
  store double %5183, ptr %4929, align 8, !tbaa !18
  %5184 = add nuw nsw i32 %5099, 1
  br i1 %4946, label %5185, label %5235

5185:                                             ; preds = %5175
  %5186 = load i32, ptr %4, align 4, !tbaa !5
  %5187 = load i32, ptr %12, align 4, !tbaa !5
  %5188 = add nsw i32 %5187, -1
  %5189 = icmp slt i32 %5186, %5188
  br i1 %5189, label %5212, label %5190

5190:                                             ; preds = %5185
  %5191 = icmp eq i32 %5186, %5188
  br i1 %5191, label %5192, label %5228

5192:                                             ; preds = %5190
  store i32 0, ptr %4, align 4, !tbaa !5
  %5193 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5193, ptr %6, align 4, !tbaa !5
  br i1 %4951, label %5235, label %5194

5194:                                             ; preds = %5192, %5222
  %5195 = phi i64 [ %5226, %5222 ], [ 1, %5192 ]
  %5196 = getelementptr inbounds i32, ptr %4, i64 %5195
  %5197 = load i32, ptr %5196, align 4, !tbaa !5
  %5198 = getelementptr inbounds i32, ptr %12, i64 %5195
  %5199 = load i32, ptr %5198, align 4, !tbaa !5
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5197, %5200
  br i1 %5201, label %5202, label %5220

5202:                                             ; preds = %5194
  br i1 %5189, label %5212, label %5203

5203:                                             ; preds = %5202
  %5204 = shl i64 %5195, 32
  %5205 = add i64 %5204, -4294967296
  %5206 = ashr exact i64 %5205, 32
  %5207 = getelementptr inbounds i32, ptr %7, i64 %5206
  %5208 = load i32, ptr %5207, align 4, !tbaa !5
  %5209 = getelementptr inbounds i32, ptr %6, i64 %5195
  %5210 = load i32, ptr %5209, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, %5208
  store i32 %5211, ptr %5209, align 4, !tbaa !5
  br label %5230

5212:                                             ; preds = %5185, %5202
  %5213 = phi i32 [ %5197, %5202 ], [ %5186, %5185 ]
  %5214 = phi ptr [ %5196, %5202 ], [ %4, %5185 ]
  %5215 = phi i64 [ %5195, %5202 ], [ 0, %5185 ]
  %5216 = add nsw i32 %5213, 1
  store i32 %5216, ptr %5214, align 4, !tbaa !5
  %5217 = getelementptr inbounds i32, ptr %7, i64 %5215
  %5218 = load i32, ptr %5217, align 4, !tbaa !5
  %5219 = getelementptr inbounds i32, ptr %6, i64 %5215
  br label %5230

5220:                                             ; preds = %5194
  %5221 = icmp eq i32 %5197, %5200
  br i1 %5221, label %5222, label %5228

5222:                                             ; preds = %5220
  store i32 0, ptr %5196, align 4, !tbaa !5
  %5223 = getelementptr inbounds i32, ptr %8, i64 %5195
  %5224 = load i32, ptr %5223, align 4, !tbaa !5
  %5225 = getelementptr inbounds i32, ptr %6, i64 %5195
  store i32 %5224, ptr %5225, align 4, !tbaa !5
  %5226 = add nuw nsw i64 %5195, 1
  %5227 = icmp eq i64 %5226, %4949
  br i1 %5227, label %5235, label %5194, !llvm.loop !752

5228:                                             ; preds = %5190, %5220
  %5229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5230:                                             ; preds = %5203, %5212
  %5231 = phi ptr [ %5219, %5212 ], [ %5196, %5203 ]
  %5232 = phi i32 [ %5218, %5212 ], [ 1, %5203 ]
  %5233 = load i32, ptr %5231, align 4, !tbaa !5
  %5234 = add nsw i32 %5233, %5232
  store i32 %5234, ptr %5231, align 4, !tbaa !5
  br label %5235

5235:                                             ; preds = %5222, %5230, %5192, %5175
  %5236 = icmp eq i32 %5184, %5
  br i1 %5236, label %5545, label %5097, !llvm.loop !753

5237:                                             ; preds = %4937
  %5238 = getelementptr inbounds i32, ptr %3, i64 %19
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = icmp eq i32 %5239, 0
  %5241 = icmp sgt i32 %5, 0
  br i1 %5240, label %5251, label %5242

5242:                                             ; preds = %5237
  br i1 %5241, label %5243, label %5545

5243:                                             ; preds = %5242
  %5244 = icmp sgt i32 %13, 1
  %5245 = icmp sgt i32 %13, 0
  %5246 = add i32 %13, -2
  %5247 = zext i32 %5246 to i64
  %5248 = zext i32 %13 to i64
  %5249 = add nuw i32 %5, 1
  %5250 = icmp eq i32 %13, 1
  br label %5395

5251:                                             ; preds = %5237
  br i1 %5241, label %5252, label %5545

5252:                                             ; preds = %5251
  %5253 = icmp sgt i32 %13, 1
  %5254 = icmp sgt i32 %13, 0
  %5255 = add i32 %13, -2
  %5256 = zext i32 %5255 to i64
  %5257 = zext i32 %13 to i64
  %5258 = add nuw i32 %5, 1
  %5259 = icmp eq i32 %13, 1
  br label %5260

5260:                                             ; preds = %5252, %5393
  %5261 = phi double [ 0.000000e+00, %5252 ], [ %5343, %5393 ]
  %5262 = phi i32 [ 0, %5252 ], [ %5345, %5393 ]
  %5263 = phi double [ 0.000000e+00, %5252 ], [ %5344, %5393 ]
  %5264 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5253, label %5265, label %5334

5265:                                             ; preds = %5260, %5324
  %5266 = phi i32 [ %5333, %5324 ], [ 0, %5260 ]
  %5267 = phi i64 [ %5275, %5324 ], [ %5257, %5260 ]
  %5268 = phi i64 [ %5332, %5324 ], [ %5256, %5260 ]
  %5269 = phi i32 [ %5330, %5324 ], [ %5264, %5260 ]
  %5270 = sub i32 %5255, %5266
  %5271 = tail call i32 @llvm.smin.i32(i32 %5270, i32 0)
  %5272 = sub i32 %5270, %5271
  %5273 = zext i32 %5272 to i64
  %5274 = add nuw nsw i64 %5273, 1
  %5275 = add nsw i64 %5267, -1
  %5276 = icmp ult i32 %5272, 31
  br i1 %5276, label %5312, label %5277

5277:                                             ; preds = %5265
  %5278 = and i64 %5274, 8589934560
  %5279 = sub i64 %5268, %5278
  br label %5280

5280:                                             ; preds = %5280, %5277
  %5281 = phi i64 [ 0, %5277 ], [ %5304, %5280 ]
  %5282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5300, %5280 ]
  %5283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5301, %5280 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5302, %5280 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5303, %5280 ]
  %5286 = sub i64 %5268, %5281
  %5287 = getelementptr inbounds i32, ptr %9, i64 %5286
  %5288 = getelementptr inbounds i32, ptr %5287, i64 -7
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !5
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5287, i64 -15
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !5
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5287, i64 -23
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !5
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5287, i64 -31
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !5
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = mul <8 x i32> %5290, %5282
  %5301 = mul <8 x i32> %5293, %5283
  %5302 = mul <8 x i32> %5296, %5284
  %5303 = mul <8 x i32> %5299, %5285
  %5304 = add nuw i64 %5281, 32
  %5305 = icmp eq i64 %5304, %5278
  br i1 %5305, label %5306, label %5280, !llvm.loop !754

5306:                                             ; preds = %5280
  %5307 = mul <8 x i32> %5301, %5300
  %5308 = mul <8 x i32> %5302, %5307
  %5309 = mul <8 x i32> %5303, %5308
  %5310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5309)
  %5311 = icmp eq i64 %5274, %5278
  br i1 %5311, label %5324, label %5312

5312:                                             ; preds = %5265, %5306
  %5313 = phi i64 [ %5268, %5265 ], [ %5279, %5306 ]
  %5314 = phi i32 [ 1, %5265 ], [ %5310, %5306 ]
  br label %5315

5315:                                             ; preds = %5312, %5315
  %5316 = phi i64 [ %5321, %5315 ], [ %5313, %5312 ]
  %5317 = phi i32 [ %5320, %5315 ], [ %5314, %5312 ]
  %5318 = getelementptr inbounds i32, ptr %9, i64 %5316
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = mul nsw i32 %5319, %5317
  %5321 = add nsw i64 %5316, -1
  %5322 = trunc i64 %5316 to i32
  %5323 = icmp sgt i32 %5322, 0
  br i1 %5323, label %5315, label %5324, !llvm.loop !755

5324:                                             ; preds = %5315, %5306
  %5325 = phi i32 [ %5310, %5306 ], [ %5320, %5315 ]
  %5326 = and i64 %5275, 4294967295
  %5327 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !5
  %5329 = mul nsw i32 %5328, %5325
  %5330 = add nsw i32 %5329, %5269
  %5331 = icmp sgt i64 %5267, 2
  %5332 = add nsw i64 %5268, -1
  %5333 = add i32 %5266, 1
  br i1 %5331, label %5265, label %5334, !llvm.loop !756

5334:                                             ; preds = %5324, %5260
  %5335 = phi i32 [ %5264, %5260 ], [ %5330, %5324 ]
  %5336 = sext i32 %5335 to i64
  %5337 = getelementptr inbounds i32, ptr %4927, i64 %5336
  %5338 = load i32, ptr %5337, align 4, !tbaa !5
  %5339 = sitofp i32 %5338 to double
  %5340 = icmp slt i32 %5338, 0
  %5341 = fneg fast double %5339
  %5342 = select fast i1 %5340, double %5341, double %5339
  %5343 = fadd fast double %5342, %5261
  %5344 = fadd fast double %5263, 1.000000e+00
  %5345 = add nuw nsw i32 %5262, 1
  br i1 %5254, label %5346, label %5393

5346:                                             ; preds = %5334
  %5347 = load i32, ptr %4, align 4, !tbaa !5
  %5348 = load i32, ptr %12, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, -1
  %5350 = icmp slt i32 %5347, %5349
  br i1 %5350, label %5370, label %5351

5351:                                             ; preds = %5346
  %5352 = icmp eq i32 %5347, %5349
  br i1 %5352, label %5353, label %5386

5353:                                             ; preds = %5351
  store i32 0, ptr %4, align 4, !tbaa !5
  %5354 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5354, ptr %6, align 4, !tbaa !5
  br i1 %5259, label %5393, label %5355

5355:                                             ; preds = %5353, %5380
  %5356 = phi i64 [ %5384, %5380 ], [ 1, %5353 ]
  %5357 = getelementptr inbounds i32, ptr %4, i64 %5356
  %5358 = load i32, ptr %5357, align 4, !tbaa !5
  %5359 = getelementptr inbounds i32, ptr %12, i64 %5356
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = add nsw i32 %5360, -1
  %5362 = icmp slt i32 %5358, %5361
  br i1 %5362, label %5363, label %5378

5363:                                             ; preds = %5355
  br i1 %5350, label %5370, label %5364

5364:                                             ; preds = %5363
  %5365 = getelementptr inbounds i32, ptr %7, i64 %5356
  %5366 = load i32, ptr %5365, align 4, !tbaa !5
  %5367 = getelementptr inbounds i32, ptr %6, i64 %5356
  %5368 = load i32, ptr %5367, align 4, !tbaa !5
  %5369 = add nsw i32 %5368, %5366
  store i32 %5369, ptr %5367, align 4, !tbaa !5
  br label %5388

5370:                                             ; preds = %5346, %5363
  %5371 = phi i32 [ %5358, %5363 ], [ %5347, %5346 ]
  %5372 = phi ptr [ %5357, %5363 ], [ %4, %5346 ]
  %5373 = phi i64 [ %5356, %5363 ], [ 0, %5346 ]
  %5374 = add nsw i32 %5371, 1
  store i32 %5374, ptr %5372, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %7, i64 %5373
  %5376 = load i32, ptr %5375, align 4, !tbaa !5
  %5377 = getelementptr inbounds i32, ptr %6, i64 %5373
  br label %5388

5378:                                             ; preds = %5355
  %5379 = icmp eq i32 %5358, %5361
  br i1 %5379, label %5380, label %5386

5380:                                             ; preds = %5378
  store i32 0, ptr %5357, align 4, !tbaa !5
  %5381 = getelementptr inbounds i32, ptr %8, i64 %5356
  %5382 = load i32, ptr %5381, align 4, !tbaa !5
  %5383 = getelementptr inbounds i32, ptr %6, i64 %5356
  store i32 %5382, ptr %5383, align 4, !tbaa !5
  %5384 = add nuw nsw i64 %5356, 1
  %5385 = icmp eq i64 %5384, %5257
  br i1 %5385, label %5393, label %5355, !llvm.loop !757

5386:                                             ; preds = %5351, %5378
  store double %5343, ptr %4929, align 8, !tbaa !18
  %5387 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5388:                                             ; preds = %5364, %5370
  %5389 = phi ptr [ %5377, %5370 ], [ %5357, %5364 ]
  %5390 = phi i32 [ %5376, %5370 ], [ 1, %5364 ]
  %5391 = load i32, ptr %5389, align 4, !tbaa !5
  %5392 = add nsw i32 %5391, %5390
  store i32 %5392, ptr %5389, align 4, !tbaa !5
  br label %5393

5393:                                             ; preds = %5380, %5388, %5353, %5334
  %5394 = icmp eq i32 %5345, %5
  br i1 %5394, label %5544, label %5260, !llvm.loop !758

5395:                                             ; preds = %5243, %5533
  %5396 = phi double [ 0.000000e+00, %5243 ], [ %5481, %5533 ]
  %5397 = phi i32 [ 0, %5243 ], [ %5482, %5533 ]
  %5398 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5244, label %5399, label %5468

5399:                                             ; preds = %5395, %5458
  %5400 = phi i32 [ %5467, %5458 ], [ 0, %5395 ]
  %5401 = phi i64 [ %5409, %5458 ], [ %5248, %5395 ]
  %5402 = phi i64 [ %5466, %5458 ], [ %5247, %5395 ]
  %5403 = phi i32 [ %5464, %5458 ], [ %5398, %5395 ]
  %5404 = sub i32 %5246, %5400
  %5405 = tail call i32 @llvm.smin.i32(i32 %5404, i32 0)
  %5406 = sub i32 %5404, %5405
  %5407 = zext i32 %5406 to i64
  %5408 = add nuw nsw i64 %5407, 1
  %5409 = add nsw i64 %5401, -1
  %5410 = icmp ult i32 %5406, 31
  br i1 %5410, label %5446, label %5411

5411:                                             ; preds = %5399
  %5412 = and i64 %5408, 8589934560
  %5413 = sub i64 %5402, %5412
  br label %5414

5414:                                             ; preds = %5414, %5411
  %5415 = phi i64 [ 0, %5411 ], [ %5438, %5414 ]
  %5416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5434, %5414 ]
  %5417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5435, %5414 ]
  %5418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5436, %5414 ]
  %5419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5411 ], [ %5437, %5414 ]
  %5420 = sub i64 %5402, %5415
  %5421 = getelementptr inbounds i32, ptr %11, i64 %5420
  %5422 = getelementptr inbounds i32, ptr %5421, i64 -7
  %5423 = load <8 x i32>, ptr %5422, align 4, !tbaa !5
  %5424 = shufflevector <8 x i32> %5423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5425 = getelementptr inbounds i32, ptr %5421, i64 -15
  %5426 = load <8 x i32>, ptr %5425, align 4, !tbaa !5
  %5427 = shufflevector <8 x i32> %5426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5428 = getelementptr inbounds i32, ptr %5421, i64 -23
  %5429 = load <8 x i32>, ptr %5428, align 4, !tbaa !5
  %5430 = shufflevector <8 x i32> %5429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5431 = getelementptr inbounds i32, ptr %5421, i64 -31
  %5432 = load <8 x i32>, ptr %5431, align 4, !tbaa !5
  %5433 = shufflevector <8 x i32> %5432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5434 = mul <8 x i32> %5424, %5416
  %5435 = mul <8 x i32> %5427, %5417
  %5436 = mul <8 x i32> %5430, %5418
  %5437 = mul <8 x i32> %5433, %5419
  %5438 = add nuw i64 %5415, 32
  %5439 = icmp eq i64 %5438, %5412
  br i1 %5439, label %5440, label %5414, !llvm.loop !759

5440:                                             ; preds = %5414
  %5441 = mul <8 x i32> %5435, %5434
  %5442 = mul <8 x i32> %5436, %5441
  %5443 = mul <8 x i32> %5437, %5442
  %5444 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5443)
  %5445 = icmp eq i64 %5408, %5412
  br i1 %5445, label %5458, label %5446

5446:                                             ; preds = %5399, %5440
  %5447 = phi i64 [ %5402, %5399 ], [ %5413, %5440 ]
  %5448 = phi i32 [ 1, %5399 ], [ %5444, %5440 ]
  br label %5449

5449:                                             ; preds = %5446, %5449
  %5450 = phi i64 [ %5455, %5449 ], [ %5447, %5446 ]
  %5451 = phi i32 [ %5454, %5449 ], [ %5448, %5446 ]
  %5452 = getelementptr inbounds i32, ptr %11, i64 %5450
  %5453 = load i32, ptr %5452, align 4, !tbaa !5
  %5454 = mul nsw i32 %5453, %5451
  %5455 = add nsw i64 %5450, -1
  %5456 = trunc i64 %5450 to i32
  %5457 = icmp sgt i32 %5456, 0
  br i1 %5457, label %5449, label %5458, !llvm.loop !760

5458:                                             ; preds = %5449, %5440
  %5459 = phi i32 [ %5444, %5440 ], [ %5454, %5449 ]
  %5460 = and i64 %5409, 4294967295
  %5461 = getelementptr inbounds i32, ptr %6, i64 %5460
  %5462 = load i32, ptr %5461, align 4, !tbaa !5
  %5463 = mul nsw i32 %5462, %5459
  %5464 = add nsw i32 %5463, %5403
  %5465 = icmp sgt i64 %5401, 2
  %5466 = add nsw i64 %5402, -1
  %5467 = add i32 %5400, 1
  br i1 %5465, label %5399, label %5468, !llvm.loop !761

5468:                                             ; preds = %5458, %5395
  %5469 = phi i32 [ %5398, %5395 ], [ %5464, %5458 ]
  %5470 = icmp slt i32 %5469, %5
  br i1 %5470, label %5473, label %5471

5471:                                             ; preds = %5468
  %5472 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5550

5473:                                             ; preds = %5468
  %5474 = sext i32 %5469 to i64
  %5475 = getelementptr inbounds i32, ptr %4927, i64 %5474
  %5476 = load i32, ptr %5475, align 4, !tbaa !5
  %5477 = sitofp i32 %5476 to double
  %5478 = icmp slt i32 %5476, 0
  %5479 = fneg fast double %5477
  %5480 = select fast i1 %5478, double %5479, double %5477
  %5481 = fadd fast double %5480, %5396
  store double %5481, ptr %4929, align 8, !tbaa !18
  %5482 = add nuw nsw i32 %5397, 1
  br i1 %5245, label %5483, label %5533

5483:                                             ; preds = %5473
  %5484 = load i32, ptr %4, align 4, !tbaa !5
  %5485 = load i32, ptr %12, align 4, !tbaa !5
  %5486 = add nsw i32 %5485, -1
  %5487 = icmp slt i32 %5484, %5486
  br i1 %5487, label %5510, label %5488

5488:                                             ; preds = %5483
  %5489 = icmp eq i32 %5484, %5486
  br i1 %5489, label %5490, label %5526

5490:                                             ; preds = %5488
  store i32 0, ptr %4, align 4, !tbaa !5
  %5491 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5491, ptr %6, align 4, !tbaa !5
  br i1 %5250, label %5533, label %5492

5492:                                             ; preds = %5490, %5520
  %5493 = phi i64 [ %5524, %5520 ], [ 1, %5490 ]
  %5494 = getelementptr inbounds i32, ptr %4, i64 %5493
  %5495 = load i32, ptr %5494, align 4, !tbaa !5
  %5496 = getelementptr inbounds i32, ptr %12, i64 %5493
  %5497 = load i32, ptr %5496, align 4, !tbaa !5
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5495, %5498
  br i1 %5499, label %5500, label %5518

5500:                                             ; preds = %5492
  br i1 %5487, label %5510, label %5501

5501:                                             ; preds = %5500
  %5502 = shl i64 %5493, 32
  %5503 = add i64 %5502, -4294967296
  %5504 = ashr exact i64 %5503, 32
  %5505 = getelementptr inbounds i32, ptr %7, i64 %5504
  %5506 = load i32, ptr %5505, align 4, !tbaa !5
  %5507 = getelementptr inbounds i32, ptr %6, i64 %5493
  %5508 = load i32, ptr %5507, align 4, !tbaa !5
  %5509 = add nsw i32 %5508, %5506
  store i32 %5509, ptr %5507, align 4, !tbaa !5
  br label %5528

5510:                                             ; preds = %5483, %5500
  %5511 = phi i32 [ %5495, %5500 ], [ %5484, %5483 ]
  %5512 = phi ptr [ %5494, %5500 ], [ %4, %5483 ]
  %5513 = phi i64 [ %5493, %5500 ], [ 0, %5483 ]
  %5514 = add nsw i32 %5511, 1
  store i32 %5514, ptr %5512, align 4, !tbaa !5
  %5515 = getelementptr inbounds i32, ptr %7, i64 %5513
  %5516 = load i32, ptr %5515, align 4, !tbaa !5
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5513
  br label %5528

5518:                                             ; preds = %5492
  %5519 = icmp eq i32 %5495, %5498
  br i1 %5519, label %5520, label %5526

5520:                                             ; preds = %5518
  store i32 0, ptr %5494, align 4, !tbaa !5
  %5521 = getelementptr inbounds i32, ptr %8, i64 %5493
  %5522 = load i32, ptr %5521, align 4, !tbaa !5
  %5523 = getelementptr inbounds i32, ptr %6, i64 %5493
  store i32 %5522, ptr %5523, align 4, !tbaa !5
  %5524 = add nuw nsw i64 %5493, 1
  %5525 = icmp eq i64 %5524, %5248
  br i1 %5525, label %5533, label %5492, !llvm.loop !762

5526:                                             ; preds = %5488, %5518
  %5527 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5550

5528:                                             ; preds = %5501, %5510
  %5529 = phi ptr [ %5517, %5510 ], [ %5494, %5501 ]
  %5530 = phi i32 [ %5516, %5510 ], [ 1, %5501 ]
  %5531 = load i32, ptr %5529, align 4, !tbaa !5
  %5532 = add nsw i32 %5531, %5530
  store i32 %5532, ptr %5529, align 4, !tbaa !5
  br label %5533

5533:                                             ; preds = %5520, %5528, %5490, %5473
  %5534 = icmp eq i32 %5482, %5
  br i1 %5534, label %5545, label %5395, !llvm.loop !763

5535:                                             ; preds = %4937
  %5536 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5545

5537:                                             ; preds = %2030
  store i16 %1980, ptr %1859, align 2, !tbaa !78
  br label %5545

5538:                                             ; preds = %2333
  store i16 %2283, ptr %1859, align 2, !tbaa !78
  br label %5545

5539:                                             ; preds = %3255
  store i64 %3205, ptr %3089, align 8, !tbaa !120
  br label %5545

5540:                                             ; preds = %3553
  store i64 %3503, ptr %3089, align 8, !tbaa !120
  br label %5545

5541:                                             ; preds = %4163
  store double %4113, ptr %3699, align 8, !tbaa !18
  br label %5545

5542:                                             ; preds = %4480
  store float %4430, ptr %4311, align 4, !tbaa !162
  br label %5545

5543:                                             ; preds = %4781
  store float %4731, ptr %4311, align 4, !tbaa !162
  br label %5545

5544:                                             ; preds = %5393
  store double %5343, ptr %4929, align 8, !tbaa !18
  br label %5545

5545:                                             ; preds = %5533, %5235, %5095, %4921, %4623, %4303, %4005, %3865, %3691, %3397, %3081, %2944, %2789, %2647, %2474, %2174, %1851, %1710, %1551, %1407, %1228, %1091, %936, %794, %621, %484, %329, %192, %5242, %5251, %5544, %4943, %4952, %4630, %4639, %5543, %4325, %4334, %5542, %4012, %4021, %5541, %3713, %3722, %3404, %3413, %5540, %3101, %3110, %5539, %2796, %2805, %2493, %2502, %2181, %2190, %5538, %1874, %1883, %5537, %1558, %1567, %1251, %1260, %943, %952, %640, %649, %336, %345, %37, %46, %4931, %5535, %4313, %4923, %3701, %4305, %3091, %3693, %2484, %3083, %1861, %2476, %1238, %1853, %631, %1230, %28, %623, %18
  %5546 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1230 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %1238 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %1861 ], [ 0.000000e+00, %3083 ], [ 0.000000e+00, %2484 ], [ 0.000000e+00, %3693 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %4305 ], [ 0.000000e+00, %3701 ], [ 0.000000e+00, %4923 ], [ 0.000000e+00, %4313 ], [ 0.000000e+00, %5535 ], [ 0.000000e+00, %4931 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %952 ], [ 0.000000e+00, %943 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1981, %5537 ], [ 0.000000e+00, %1883 ], [ 0.000000e+00, %1874 ], [ %2284, %5538 ], [ 0.000000e+00, %2190 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2502 ], [ 0.000000e+00, %2493 ], [ 0.000000e+00, %2805 ], [ 0.000000e+00, %2796 ], [ %3206, %5539 ], [ 0.000000e+00, %3110 ], [ 0.000000e+00, %3101 ], [ %3504, %5540 ], [ 0.000000e+00, %3413 ], [ 0.000000e+00, %3404 ], [ 0.000000e+00, %3722 ], [ 0.000000e+00, %3713 ], [ %4114, %5541 ], [ 0.000000e+00, %4021 ], [ 0.000000e+00, %4012 ], [ %4431, %5542 ], [ 0.000000e+00, %4334 ], [ 0.000000e+00, %4325 ], [ %4732, %5543 ], [ 0.000000e+00, %4639 ], [ 0.000000e+00, %4630 ], [ 0.000000e+00, %4952 ], [ 0.000000e+00, %4943 ], [ %5344, %5544 ], [ 0.000000e+00, %5251 ], [ 0.000000e+00, %5242 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %745, %794 ], [ 0.000000e+00, %936 ], [ %1042, %1091 ], [ 0.000000e+00, %1228 ], [ %1358, %1407 ], [ 0.000000e+00, %1551 ], [ %1661, %1710 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %2174 ], [ 0.000000e+00, %2474 ], [ %2598, %2647 ], [ 0.000000e+00, %2789 ], [ %2895, %2944 ], [ 0.000000e+00, %3081 ], [ 0.000000e+00, %3397 ], [ 0.000000e+00, %3691 ], [ %3816, %3865 ], [ 0.000000e+00, %4005 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %4623 ], [ 0.000000e+00, %4921 ], [ %5046, %5095 ], [ 0.000000e+00, %5235 ], [ 0.000000e+00, %5533 ]
  %5547 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1230 ], [ 1, %631 ], [ 1, %1853 ], [ 1, %1238 ], [ 1, %2476 ], [ 1, %1861 ], [ 1, %3083 ], [ 1, %2484 ], [ 1, %3693 ], [ 1, %3091 ], [ 1, %4305 ], [ 1, %3701 ], [ 1, %4923 ], [ 1, %4313 ], [ 1, %5535 ], [ 1, %4931 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %649 ], [ 1, %640 ], [ 1, %952 ], [ 1, %943 ], [ 1, %1260 ], [ 1, %1251 ], [ 1, %1567 ], [ 1, %1558 ], [ %1890, %5537 ], [ 1, %1883 ], [ 1, %1874 ], [ %2197, %5538 ], [ 1, %2190 ], [ 1, %2181 ], [ 1, %2502 ], [ 1, %2493 ], [ 1, %2805 ], [ 1, %2796 ], [ %3117, %5539 ], [ 1, %3110 ], [ 1, %3101 ], [ %3420, %5540 ], [ 1, %3413 ], [ 1, %3404 ], [ 1, %3722 ], [ 1, %3713 ], [ %4028, %5541 ], [ 1, %4021 ], [ 1, %4012 ], [ %4341, %5542 ], [ 1, %4334 ], [ 1, %4325 ], [ %4646, %5543 ], [ 1, %4639 ], [ 1, %4630 ], [ 1, %4952 ], [ 1, %4943 ], [ %5258, %5544 ], [ 1, %5251 ], [ 1, %5242 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %656, %794 ], [ %647, %936 ], [ %959, %1091 ], [ %950, %1228 ], [ %1267, %1407 ], [ %1258, %1551 ], [ %1574, %1710 ], [ %1565, %1851 ], [ %1881, %2174 ], [ %2188, %2474 ], [ %2509, %2647 ], [ %2500, %2789 ], [ %2812, %2944 ], [ %2803, %3081 ], [ %3108, %3397 ], [ %3411, %3691 ], [ %3729, %3865 ], [ %3720, %4005 ], [ %4019, %4303 ], [ %4332, %4623 ], [ %4637, %4921 ], [ %4959, %5095 ], [ %4950, %5235 ], [ %5249, %5533 ]
  %5548 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5547, ptr noundef nonnull @.str.5) #3
  %5549 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5546, ptr noundef nonnull @.str.6) #3
  br label %5550

5550:                                             ; preds = %5088, %5173, %5228, %5386, %5471, %5526, %4473, %4558, %4616, %4774, %4859, %4914, %3858, %3943, %3998, %4156, %4241, %4296, %3248, %3333, %3390, %3546, %3631, %3684, %2640, %2724, %2782, %2937, %3021, %3074, %2023, %2108, %2167, %2326, %2411, %2467, %1400, %1484, %1544, %1703, %1787, %1844, %787, %871, %929, %1084, %1168, %1221, %185, %269, %322, %477, %561, %614, %5545
  %5551 = phi i32 [ 0, %5545 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1221 ], [ -1, %1168 ], [ -1, %1084 ], [ -1, %929 ], [ -1, %871 ], [ -1, %787 ], [ -1, %1844 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1544 ], [ -1, %1484 ], [ -1, %1400 ], [ -1, %2467 ], [ -1, %2411 ], [ -1, %2326 ], [ -1, %2167 ], [ -1, %2108 ], [ -1, %2023 ], [ -1, %3074 ], [ -1, %3021 ], [ -1, %2937 ], [ -1, %2782 ], [ -1, %2724 ], [ -1, %2640 ], [ -1, %3684 ], [ -1, %3631 ], [ -1, %3546 ], [ -1, %3390 ], [ -1, %3333 ], [ -1, %3248 ], [ -1, %4296 ], [ -1, %4241 ], [ -1, %4156 ], [ -1, %3998 ], [ -1, %3943 ], [ -1, %3858 ], [ -1, %4914 ], [ -1, %4859 ], [ -1, %4774 ], [ -1, %4616 ], [ -1, %4558 ], [ -1, %4473 ], [ -1, %5526 ], [ -1, %5471 ], [ -1, %5386 ], [ -1, %5228 ], [ -1, %5173 ], [ -1, %5088 ]
  ret i32 %5551
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5537 [
    i32 101, label %22
    i32 102, label %626
    i32 103, label %1238
    i32 104, label %1854
    i32 105, label %2470
    i32 106, label %3082
    i32 107, label %3689
    i32 108, label %4301
    i32 109, label %4919
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !120
  %30 = trunc i64 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5537

31:                                               ; preds = %22
  switch i32 %1, label %624 [
    i32 1, label %32
    i32 0, label %332
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5537

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %195

46:                                               ; preds = %32
  br i1 %36, label %47, label %5537

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %193
  %56 = phi i32 [ 0, %47 ], [ %145, %193 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %144, %193 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !764

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !765

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !766

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i64, ptr %24, i64 %130
  %134 = load i64, ptr %133, align 8, !tbaa !120
  %135 = trunc i64 %134 to i32
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = and i32 %135, 255
  %139 = sitofp i32 %138 to double
  %140 = fmul fast double %132, %139
  %141 = tail call fast double @llvm.fabs.f64(double %140)
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %132, %57
  %145 = add nuw nsw i32 %56, 1
  br i1 %49, label %146, label %193

146:                                              ; preds = %128
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %54, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %52
  br i1 %185, label %193, label %155, !llvm.loop !767

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %128
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5537, label %55, !llvm.loop !768

195:                                              ; preds = %38, %330
  %196 = phi i32 [ 0, %38 ], [ %279, %330 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %43, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %42, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %41, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !769

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !770

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !771

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

272:                                              ; preds = %267
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = sext i32 %268 to i64
  %275 = getelementptr inbounds i64, ptr %24, i64 %274
  %276 = load i64, ptr %275, align 8, !tbaa !120
  %277 = trunc i64 %276 to i8
  %278 = add i8 %273, %277
  store i8 %278, ptr %26, align 1, !tbaa !11
  %279 = add nuw nsw i32 %196, 1
  br i1 %40, label %280, label %330

280:                                              ; preds = %272
  %281 = load i32, ptr %4, align 4, !tbaa !5
  %282 = load i32, ptr %12, align 4, !tbaa !5
  %283 = add nsw i32 %282, -1
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %307, label %285

285:                                              ; preds = %280
  %286 = icmp eq i32 %281, %283
  br i1 %286, label %287, label %323

287:                                              ; preds = %285
  store i32 0, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %288, ptr %6, align 4, !tbaa !5
  br i1 %45, label %330, label %289

289:                                              ; preds = %287, %317
  %290 = phi i64 [ %321, %317 ], [ 1, %287 ]
  %291 = getelementptr inbounds i32, ptr %4, i64 %290
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = getelementptr inbounds i32, ptr %12, i64 %290
  %294 = load i32, ptr %293, align 4, !tbaa !5
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %292, %295
  br i1 %296, label %297, label %315

297:                                              ; preds = %289
  br i1 %284, label %307, label %298

298:                                              ; preds = %297
  %299 = shl i64 %290, 32
  %300 = add i64 %299, -4294967296
  %301 = ashr exact i64 %300, 32
  %302 = getelementptr inbounds i32, ptr %7, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = getelementptr inbounds i32, ptr %6, i64 %290
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = add nsw i32 %305, %303
  store i32 %306, ptr %304, align 4, !tbaa !5
  br label %325

307:                                              ; preds = %280, %297
  %308 = phi i32 [ %292, %297 ], [ %281, %280 ]
  %309 = phi ptr [ %291, %297 ], [ %4, %280 ]
  %310 = phi i64 [ %290, %297 ], [ 0, %280 ]
  %311 = add nsw i32 %308, 1
  store i32 %311, ptr %309, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %7, i64 %310
  %313 = load i32, ptr %312, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %6, i64 %310
  br label %325

315:                                              ; preds = %289
  %316 = icmp eq i32 %292, %295
  br i1 %316, label %317, label %323

317:                                              ; preds = %315
  store i32 0, ptr %291, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %8, i64 %290
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %290
  store i32 %319, ptr %320, align 4, !tbaa !5
  %321 = add nuw nsw i64 %290, 1
  %322 = icmp eq i64 %321, %43
  br i1 %322, label %330, label %289, !llvm.loop !772

323:                                              ; preds = %285, %315
  %324 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

325:                                              ; preds = %298, %307
  %326 = phi ptr [ %314, %307 ], [ %291, %298 ]
  %327 = phi i32 [ %313, %307 ], [ 1, %298 ]
  %328 = load i32, ptr %326, align 4, !tbaa !5
  %329 = add nsw i32 %328, %327
  store i32 %329, ptr %326, align 4, !tbaa !5
  br label %330

330:                                              ; preds = %317, %325, %287, %272
  %331 = icmp eq i32 %279, %5
  br i1 %331, label %5537, label %195, !llvm.loop !773

332:                                              ; preds = %31
  %333 = getelementptr inbounds i32, ptr %3, i64 %19
  %334 = load i32, ptr %333, align 4, !tbaa !5
  %335 = icmp eq i32 %334, 0
  %336 = icmp sgt i32 %5, 0
  br i1 %335, label %346, label %337

337:                                              ; preds = %332
  br i1 %336, label %338, label %5537

338:                                              ; preds = %337
  %339 = icmp sgt i32 %13, 1
  %340 = icmp sgt i32 %13, 0
  %341 = add i32 %13, -2
  %342 = zext i32 %341 to i64
  %343 = zext i32 %13 to i64
  %344 = add nuw i32 %5, 1
  %345 = icmp eq i32 %13, 1
  br label %487

346:                                              ; preds = %332
  br i1 %336, label %347, label %5537

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %355

355:                                              ; preds = %347, %485
  %356 = phi i32 [ 0, %347 ], [ %437, %485 ]
  %357 = phi double [ 0.000000e+00, %347 ], [ %436, %485 ]
  %358 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %348, label %359, label %428

359:                                              ; preds = %355, %418
  %360 = phi i32 [ %427, %418 ], [ 0, %355 ]
  %361 = phi i64 [ %369, %418 ], [ %352, %355 ]
  %362 = phi i64 [ %426, %418 ], [ %351, %355 ]
  %363 = phi i32 [ %424, %418 ], [ %358, %355 ]
  %364 = sub i32 %350, %360
  %365 = tail call i32 @llvm.smin.i32(i32 %364, i32 0)
  %366 = sub i32 %364, %365
  %367 = zext i32 %366 to i64
  %368 = add nuw nsw i64 %367, 1
  %369 = add nsw i64 %361, -1
  %370 = icmp ult i32 %366, 31
  br i1 %370, label %406, label %371

371:                                              ; preds = %359
  %372 = and i64 %368, 8589934560
  %373 = sub i64 %362, %372
  br label %374

374:                                              ; preds = %374, %371
  %375 = phi i64 [ 0, %371 ], [ %398, %374 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %394, %374 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %395, %374 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %396, %374 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %397, %374 ]
  %380 = sub i64 %362, %375
  %381 = getelementptr inbounds i32, ptr %9, i64 %380
  %382 = getelementptr inbounds i32, ptr %381, i64 -7
  %383 = load <8 x i32>, ptr %382, align 4, !tbaa !5
  %384 = shufflevector <8 x i32> %383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %385 = getelementptr inbounds i32, ptr %381, i64 -15
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !5
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %381, i64 -23
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %381, i64 -31
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = mul <8 x i32> %384, %376
  %395 = mul <8 x i32> %387, %377
  %396 = mul <8 x i32> %390, %378
  %397 = mul <8 x i32> %393, %379
  %398 = add nuw i64 %375, 32
  %399 = icmp eq i64 %398, %372
  br i1 %399, label %400, label %374, !llvm.loop !774

400:                                              ; preds = %374
  %401 = mul <8 x i32> %395, %394
  %402 = mul <8 x i32> %396, %401
  %403 = mul <8 x i32> %397, %402
  %404 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %403)
  %405 = icmp eq i64 %368, %372
  br i1 %405, label %418, label %406

406:                                              ; preds = %359, %400
  %407 = phi i64 [ %362, %359 ], [ %373, %400 ]
  %408 = phi i32 [ 1, %359 ], [ %404, %400 ]
  br label %409

409:                                              ; preds = %406, %409
  %410 = phi i64 [ %415, %409 ], [ %407, %406 ]
  %411 = phi i32 [ %414, %409 ], [ %408, %406 ]
  %412 = getelementptr inbounds i32, ptr %9, i64 %410
  %413 = load i32, ptr %412, align 4, !tbaa !5
  %414 = mul nsw i32 %413, %411
  %415 = add nsw i64 %410, -1
  %416 = trunc i64 %410 to i32
  %417 = icmp sgt i32 %416, 0
  br i1 %417, label %409, label %418, !llvm.loop !775

418:                                              ; preds = %409, %400
  %419 = phi i32 [ %404, %400 ], [ %414, %409 ]
  %420 = and i64 %369, 4294967295
  %421 = getelementptr inbounds i32, ptr %6, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !5
  %423 = mul nsw i32 %422, %419
  %424 = add nsw i32 %423, %363
  %425 = icmp sgt i64 %361, 2
  %426 = add nsw i64 %362, -1
  %427 = add i32 %360, 1
  br i1 %425, label %359, label %428, !llvm.loop !776

428:                                              ; preds = %418, %355
  %429 = phi i32 [ %358, %355 ], [ %424, %418 ]
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i64, ptr %24, i64 %430
  %432 = load i64, ptr %431, align 8, !tbaa !120
  %433 = trunc i64 %432 to i8
  %434 = load i8, ptr %26, align 1, !tbaa !11
  %435 = add i8 %434, %433
  store i8 %435, ptr %26, align 1, !tbaa !11
  %436 = fadd fast double %357, 1.000000e+00
  %437 = add nuw nsw i32 %356, 1
  br i1 %349, label %438, label %485

438:                                              ; preds = %428
  %439 = load i32, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %12, align 4, !tbaa !5
  %441 = add nsw i32 %440, -1
  %442 = icmp slt i32 %439, %441
  br i1 %442, label %462, label %443

443:                                              ; preds = %438
  %444 = icmp eq i32 %439, %441
  br i1 %444, label %445, label %478

445:                                              ; preds = %443
  store i32 0, ptr %4, align 4, !tbaa !5
  %446 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %446, ptr %6, align 4, !tbaa !5
  br i1 %354, label %485, label %447

447:                                              ; preds = %445, %472
  %448 = phi i64 [ %476, %472 ], [ 1, %445 ]
  %449 = getelementptr inbounds i32, ptr %4, i64 %448
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = getelementptr inbounds i32, ptr %12, i64 %448
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = add nsw i32 %452, -1
  %454 = icmp slt i32 %450, %453
  br i1 %454, label %455, label %470

455:                                              ; preds = %447
  br i1 %442, label %462, label %456

456:                                              ; preds = %455
  %457 = getelementptr inbounds i32, ptr %7, i64 %448
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = getelementptr inbounds i32, ptr %6, i64 %448
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = add nsw i32 %460, %458
  store i32 %461, ptr %459, align 4, !tbaa !5
  br label %480

462:                                              ; preds = %438, %455
  %463 = phi i32 [ %450, %455 ], [ %439, %438 ]
  %464 = phi ptr [ %449, %455 ], [ %4, %438 ]
  %465 = phi i64 [ %448, %455 ], [ 0, %438 ]
  %466 = add nsw i32 %463, 1
  store i32 %466, ptr %464, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %7, i64 %465
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %465
  br label %480

470:                                              ; preds = %447
  %471 = icmp eq i32 %450, %453
  br i1 %471, label %472, label %478

472:                                              ; preds = %470
  store i32 0, ptr %449, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %8, i64 %448
  %474 = load i32, ptr %473, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %6, i64 %448
  store i32 %474, ptr %475, align 4, !tbaa !5
  %476 = add nuw nsw i64 %448, 1
  %477 = icmp eq i64 %476, %352
  br i1 %477, label %485, label %447, !llvm.loop !777

478:                                              ; preds = %443, %470
  %479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

480:                                              ; preds = %456, %462
  %481 = phi ptr [ %469, %462 ], [ %449, %456 ]
  %482 = phi i32 [ %468, %462 ], [ 1, %456 ]
  %483 = load i32, ptr %481, align 4, !tbaa !5
  %484 = add nsw i32 %483, %482
  store i32 %484, ptr %481, align 4, !tbaa !5
  br label %485

485:                                              ; preds = %472, %480, %445, %428
  %486 = icmp eq i32 %437, %5
  br i1 %486, label %5537, label %355, !llvm.loop !778

487:                                              ; preds = %338, %622
  %488 = phi i32 [ 0, %338 ], [ %571, %622 ]
  %489 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %339, label %490, label %559

490:                                              ; preds = %487, %549
  %491 = phi i32 [ %558, %549 ], [ 0, %487 ]
  %492 = phi i64 [ %500, %549 ], [ %343, %487 ]
  %493 = phi i64 [ %557, %549 ], [ %342, %487 ]
  %494 = phi i32 [ %555, %549 ], [ %489, %487 ]
  %495 = sub i32 %341, %491
  %496 = tail call i32 @llvm.smin.i32(i32 %495, i32 0)
  %497 = sub i32 %495, %496
  %498 = zext i32 %497 to i64
  %499 = add nuw nsw i64 %498, 1
  %500 = add nsw i64 %492, -1
  %501 = icmp ult i32 %497, 31
  br i1 %501, label %537, label %502

502:                                              ; preds = %490
  %503 = and i64 %499, 8589934560
  %504 = sub i64 %493, %503
  br label %505

505:                                              ; preds = %505, %502
  %506 = phi i64 [ 0, %502 ], [ %529, %505 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %502 ], [ %525, %505 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %502 ], [ %526, %505 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %502 ], [ %527, %505 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %502 ], [ %528, %505 ]
  %511 = sub i64 %493, %506
  %512 = getelementptr inbounds i32, ptr %11, i64 %511
  %513 = getelementptr inbounds i32, ptr %512, i64 -7
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %512, i64 -15
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = getelementptr inbounds i32, ptr %512, i64 -23
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !5
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %512, i64 -31
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !5
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = mul <8 x i32> %515, %507
  %526 = mul <8 x i32> %518, %508
  %527 = mul <8 x i32> %521, %509
  %528 = mul <8 x i32> %524, %510
  %529 = add nuw i64 %506, 32
  %530 = icmp eq i64 %529, %503
  br i1 %530, label %531, label %505, !llvm.loop !779

531:                                              ; preds = %505
  %532 = mul <8 x i32> %526, %525
  %533 = mul <8 x i32> %527, %532
  %534 = mul <8 x i32> %528, %533
  %535 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %534)
  %536 = icmp eq i64 %499, %503
  br i1 %536, label %549, label %537

537:                                              ; preds = %490, %531
  %538 = phi i64 [ %493, %490 ], [ %504, %531 ]
  %539 = phi i32 [ 1, %490 ], [ %535, %531 ]
  br label %540

540:                                              ; preds = %537, %540
  %541 = phi i64 [ %546, %540 ], [ %538, %537 ]
  %542 = phi i32 [ %545, %540 ], [ %539, %537 ]
  %543 = getelementptr inbounds i32, ptr %11, i64 %541
  %544 = load i32, ptr %543, align 4, !tbaa !5
  %545 = mul nsw i32 %544, %542
  %546 = add nsw i64 %541, -1
  %547 = trunc i64 %541 to i32
  %548 = icmp sgt i32 %547, 0
  br i1 %548, label %540, label %549, !llvm.loop !780

549:                                              ; preds = %540, %531
  %550 = phi i32 [ %535, %531 ], [ %545, %540 ]
  %551 = and i64 %500, 4294967295
  %552 = getelementptr inbounds i32, ptr %6, i64 %551
  %553 = load i32, ptr %552, align 4, !tbaa !5
  %554 = mul nsw i32 %553, %550
  %555 = add nsw i32 %554, %494
  %556 = icmp sgt i64 %492, 2
  %557 = add nsw i64 %493, -1
  %558 = add i32 %491, 1
  br i1 %556, label %490, label %559, !llvm.loop !781

559:                                              ; preds = %549, %487
  %560 = phi i32 [ %489, %487 ], [ %555, %549 ]
  %561 = icmp slt i32 %560, %5
  br i1 %561, label %564, label %562

562:                                              ; preds = %559
  %563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

564:                                              ; preds = %559
  %565 = sext i32 %560 to i64
  %566 = getelementptr inbounds i64, ptr %24, i64 %565
  %567 = load i64, ptr %566, align 8, !tbaa !120
  %568 = trunc i64 %567 to i8
  %569 = load i8, ptr %26, align 1, !tbaa !11
  %570 = add i8 %569, %568
  store i8 %570, ptr %26, align 1, !tbaa !11
  %571 = add nuw nsw i32 %488, 1
  br i1 %340, label %572, label %622

572:                                              ; preds = %564
  %573 = load i32, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %12, align 4, !tbaa !5
  %575 = add nsw i32 %574, -1
  %576 = icmp slt i32 %573, %575
  br i1 %576, label %599, label %577

577:                                              ; preds = %572
  %578 = icmp eq i32 %573, %575
  br i1 %578, label %579, label %615

579:                                              ; preds = %577
  store i32 0, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %580, ptr %6, align 4, !tbaa !5
  br i1 %345, label %622, label %581

581:                                              ; preds = %579, %609
  %582 = phi i64 [ %613, %609 ], [ 1, %579 ]
  %583 = getelementptr inbounds i32, ptr %4, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = getelementptr inbounds i32, ptr %12, i64 %582
  %586 = load i32, ptr %585, align 4, !tbaa !5
  %587 = add nsw i32 %586, -1
  %588 = icmp slt i32 %584, %587
  br i1 %588, label %589, label %607

589:                                              ; preds = %581
  br i1 %576, label %599, label %590

590:                                              ; preds = %589
  %591 = shl i64 %582, 32
  %592 = add i64 %591, -4294967296
  %593 = ashr exact i64 %592, 32
  %594 = getelementptr inbounds i32, ptr %7, i64 %593
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = getelementptr inbounds i32, ptr %6, i64 %582
  %597 = load i32, ptr %596, align 4, !tbaa !5
  %598 = add nsw i32 %597, %595
  store i32 %598, ptr %596, align 4, !tbaa !5
  br label %617

599:                                              ; preds = %572, %589
  %600 = phi i32 [ %584, %589 ], [ %573, %572 ]
  %601 = phi ptr [ %583, %589 ], [ %4, %572 ]
  %602 = phi i64 [ %582, %589 ], [ 0, %572 ]
  %603 = add nsw i32 %600, 1
  store i32 %603, ptr %601, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %7, i64 %602
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %602
  br label %617

607:                                              ; preds = %581
  %608 = icmp eq i32 %584, %587
  br i1 %608, label %609, label %615

609:                                              ; preds = %607
  store i32 0, ptr %583, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %8, i64 %582
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %582
  store i32 %611, ptr %612, align 4, !tbaa !5
  %613 = add nuw nsw i64 %582, 1
  %614 = icmp eq i64 %613, %343
  br i1 %614, label %622, label %581, !llvm.loop !782

615:                                              ; preds = %577, %607
  %616 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

617:                                              ; preds = %590, %599
  %618 = phi ptr [ %606, %599 ], [ %583, %590 ]
  %619 = phi i32 [ %605, %599 ], [ 1, %590 ]
  %620 = load i32, ptr %618, align 4, !tbaa !5
  %621 = add nsw i32 %620, %619
  store i32 %621, ptr %618, align 4, !tbaa !5
  br label %622

622:                                              ; preds = %609, %617, %579, %564
  %623 = icmp eq i32 %571, %5
  br i1 %623, label %5537, label %487, !llvm.loop !783

624:                                              ; preds = %31
  %625 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

626:                                              ; preds = %18
  %627 = getelementptr inbounds ptr, ptr %14, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  %629 = getelementptr inbounds ptr, ptr %16, i64 %19
  %630 = load ptr, ptr %629, align 8, !tbaa !9
  store i32 0, ptr %630, align 4, !tbaa !5
  %631 = icmp eq i32 %13, 0
  br i1 %631, label %632, label %636

632:                                              ; preds = %626
  %633 = load i64, ptr %628, align 8, !tbaa !120
  %634 = trunc i64 %633 to i32
  %635 = tail call i32 @llvm.abs.i32(i32 %634, i1 true)
  store i32 %635, ptr %630, align 4, !tbaa !5
  br label %5537

636:                                              ; preds = %626
  switch i32 %1, label %1236 [
    i32 1, label %637
    i32 0, label %942
  ]

637:                                              ; preds = %636
  %638 = getelementptr inbounds i32, ptr %3, i64 %19
  %639 = load i32, ptr %638, align 4, !tbaa !5
  %640 = icmp eq i32 %639, 0
  %641 = icmp sgt i32 %5, 0
  br i1 %640, label %651, label %642

642:                                              ; preds = %637
  br i1 %641, label %643, label %5537

643:                                              ; preds = %642
  %644 = icmp sgt i32 %13, 1
  %645 = icmp sgt i32 %13, 0
  %646 = add i32 %13, -2
  %647 = zext i32 %646 to i64
  %648 = zext i32 %13 to i64
  %649 = add nuw i32 %5, 1
  %650 = icmp eq i32 %13, 1
  br label %799

651:                                              ; preds = %637
  br i1 %641, label %652, label %5537

652:                                              ; preds = %651
  %653 = icmp sgt i32 %13, 1
  %654 = icmp sgt i32 %13, 0
  %655 = add i32 %13, -2
  %656 = zext i32 %655 to i64
  %657 = zext i32 %13 to i64
  %658 = add nuw i32 %5, 1
  %659 = icmp eq i32 %13, 1
  br label %660

660:                                              ; preds = %652, %797
  %661 = phi i32 [ 0, %652 ], [ %749, %797 ]
  %662 = phi double [ 0.000000e+00, %652 ], [ %748, %797 ]
  %663 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %653, label %664, label %733

664:                                              ; preds = %660, %723
  %665 = phi i32 [ %732, %723 ], [ 0, %660 ]
  %666 = phi i64 [ %674, %723 ], [ %657, %660 ]
  %667 = phi i64 [ %731, %723 ], [ %656, %660 ]
  %668 = phi i32 [ %729, %723 ], [ %663, %660 ]
  %669 = sub i32 %655, %665
  %670 = tail call i32 @llvm.smin.i32(i32 %669, i32 0)
  %671 = sub i32 %669, %670
  %672 = zext i32 %671 to i64
  %673 = add nuw nsw i64 %672, 1
  %674 = add nsw i64 %666, -1
  %675 = icmp ult i32 %671, 31
  br i1 %675, label %711, label %676

676:                                              ; preds = %664
  %677 = and i64 %673, 8589934560
  %678 = sub i64 %667, %677
  br label %679

679:                                              ; preds = %679, %676
  %680 = phi i64 [ 0, %676 ], [ %703, %679 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %699, %679 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %700, %679 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %701, %679 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %702, %679 ]
  %685 = sub i64 %667, %680
  %686 = getelementptr inbounds i32, ptr %9, i64 %685
  %687 = getelementptr inbounds i32, ptr %686, i64 -7
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %686, i64 -15
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %686, i64 -23
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %686, i64 -31
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = mul <8 x i32> %689, %681
  %700 = mul <8 x i32> %692, %682
  %701 = mul <8 x i32> %695, %683
  %702 = mul <8 x i32> %698, %684
  %703 = add nuw i64 %680, 32
  %704 = icmp eq i64 %703, %677
  br i1 %704, label %705, label %679, !llvm.loop !784

705:                                              ; preds = %679
  %706 = mul <8 x i32> %700, %699
  %707 = mul <8 x i32> %701, %706
  %708 = mul <8 x i32> %702, %707
  %709 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %708)
  %710 = icmp eq i64 %673, %677
  br i1 %710, label %723, label %711

711:                                              ; preds = %664, %705
  %712 = phi i64 [ %667, %664 ], [ %678, %705 ]
  %713 = phi i32 [ 1, %664 ], [ %709, %705 ]
  br label %714

714:                                              ; preds = %711, %714
  %715 = phi i64 [ %720, %714 ], [ %712, %711 ]
  %716 = phi i32 [ %719, %714 ], [ %713, %711 ]
  %717 = getelementptr inbounds i32, ptr %9, i64 %715
  %718 = load i32, ptr %717, align 4, !tbaa !5
  %719 = mul nsw i32 %718, %716
  %720 = add nsw i64 %715, -1
  %721 = trunc i64 %715 to i32
  %722 = icmp sgt i32 %721, 0
  br i1 %722, label %714, label %723, !llvm.loop !785

723:                                              ; preds = %714, %705
  %724 = phi i32 [ %709, %705 ], [ %719, %714 ]
  %725 = and i64 %674, 4294967295
  %726 = getelementptr inbounds i32, ptr %6, i64 %725
  %727 = load i32, ptr %726, align 4, !tbaa !5
  %728 = mul nsw i32 %727, %724
  %729 = add nsw i32 %728, %668
  %730 = icmp sgt i64 %666, 2
  %731 = add nsw i64 %667, -1
  %732 = add i32 %665, 1
  br i1 %730, label %664, label %733, !llvm.loop !786

733:                                              ; preds = %723, %660
  %734 = phi i32 [ %663, %660 ], [ %729, %723 ]
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds double, ptr %2, i64 %735
  %737 = load double, ptr %736, align 8, !tbaa !18
  %738 = getelementptr inbounds i64, ptr %628, i64 %735
  %739 = load i64, ptr %738, align 8, !tbaa !120
  %740 = trunc i64 %739 to i32
  %741 = load i32, ptr %630, align 4, !tbaa !5
  %742 = sitofp i32 %741 to double
  %743 = sitofp i32 %740 to double
  %744 = fmul fast double %737, %743
  %745 = tail call fast double @llvm.fabs.f64(double %744)
  %746 = fadd fast double %745, %742
  %747 = fptosi double %746 to i32
  store i32 %747, ptr %630, align 4, !tbaa !5
  %748 = fadd fast double %737, %662
  %749 = add nuw nsw i32 %661, 1
  br i1 %654, label %750, label %797

750:                                              ; preds = %733
  %751 = load i32, ptr %4, align 4, !tbaa !5
  %752 = load i32, ptr %12, align 4, !tbaa !5
  %753 = add nsw i32 %752, -1
  %754 = icmp slt i32 %751, %753
  br i1 %754, label %774, label %755

755:                                              ; preds = %750
  %756 = icmp eq i32 %751, %753
  br i1 %756, label %757, label %790

757:                                              ; preds = %755
  store i32 0, ptr %4, align 4, !tbaa !5
  %758 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %758, ptr %6, align 4, !tbaa !5
  br i1 %659, label %797, label %759

759:                                              ; preds = %757, %784
  %760 = phi i64 [ %788, %784 ], [ 1, %757 ]
  %761 = getelementptr inbounds i32, ptr %4, i64 %760
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = getelementptr inbounds i32, ptr %12, i64 %760
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %762, %765
  br i1 %766, label %767, label %782

767:                                              ; preds = %759
  br i1 %754, label %774, label %768

768:                                              ; preds = %767
  %769 = getelementptr inbounds i32, ptr %7, i64 %760
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %760
  %772 = load i32, ptr %771, align 4, !tbaa !5
  %773 = add nsw i32 %772, %770
  store i32 %773, ptr %771, align 4, !tbaa !5
  br label %792

774:                                              ; preds = %750, %767
  %775 = phi i32 [ %762, %767 ], [ %751, %750 ]
  %776 = phi ptr [ %761, %767 ], [ %4, %750 ]
  %777 = phi i64 [ %760, %767 ], [ 0, %750 ]
  %778 = add nsw i32 %775, 1
  store i32 %778, ptr %776, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %7, i64 %777
  %780 = load i32, ptr %779, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %6, i64 %777
  br label %792

782:                                              ; preds = %759
  %783 = icmp eq i32 %762, %765
  br i1 %783, label %784, label %790

784:                                              ; preds = %782
  store i32 0, ptr %761, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %8, i64 %760
  %786 = load i32, ptr %785, align 4, !tbaa !5
  %787 = getelementptr inbounds i32, ptr %6, i64 %760
  store i32 %786, ptr %787, align 4, !tbaa !5
  %788 = add nuw nsw i64 %760, 1
  %789 = icmp eq i64 %788, %657
  br i1 %789, label %797, label %759, !llvm.loop !787

790:                                              ; preds = %755, %782
  %791 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

792:                                              ; preds = %768, %774
  %793 = phi ptr [ %781, %774 ], [ %761, %768 ]
  %794 = phi i32 [ %780, %774 ], [ 1, %768 ]
  %795 = load i32, ptr %793, align 4, !tbaa !5
  %796 = add nsw i32 %795, %794
  store i32 %796, ptr %793, align 4, !tbaa !5
  br label %797

797:                                              ; preds = %784, %792, %757, %733
  %798 = icmp eq i32 %749, %5
  br i1 %798, label %5537, label %660, !llvm.loop !788

799:                                              ; preds = %643, %940
  %800 = phi i32 [ 0, %643 ], [ %889, %940 ]
  %801 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %644, label %802, label %871

802:                                              ; preds = %799, %861
  %803 = phi i32 [ %870, %861 ], [ 0, %799 ]
  %804 = phi i64 [ %812, %861 ], [ %648, %799 ]
  %805 = phi i64 [ %869, %861 ], [ %647, %799 ]
  %806 = phi i32 [ %867, %861 ], [ %801, %799 ]
  %807 = sub i32 %646, %803
  %808 = tail call i32 @llvm.smin.i32(i32 %807, i32 0)
  %809 = sub i32 %807, %808
  %810 = zext i32 %809 to i64
  %811 = add nuw nsw i64 %810, 1
  %812 = add nsw i64 %804, -1
  %813 = icmp ult i32 %809, 31
  br i1 %813, label %849, label %814

814:                                              ; preds = %802
  %815 = and i64 %811, 8589934560
  %816 = sub i64 %805, %815
  br label %817

817:                                              ; preds = %817, %814
  %818 = phi i64 [ 0, %814 ], [ %841, %817 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %814 ], [ %837, %817 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %814 ], [ %838, %817 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %814 ], [ %839, %817 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %814 ], [ %840, %817 ]
  %823 = sub i64 %805, %818
  %824 = getelementptr inbounds i32, ptr %11, i64 %823
  %825 = getelementptr inbounds i32, ptr %824, i64 -7
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %824, i64 -15
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %824, i64 -23
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %824, i64 -31
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = mul <8 x i32> %827, %819
  %838 = mul <8 x i32> %830, %820
  %839 = mul <8 x i32> %833, %821
  %840 = mul <8 x i32> %836, %822
  %841 = add nuw i64 %818, 32
  %842 = icmp eq i64 %841, %815
  br i1 %842, label %843, label %817, !llvm.loop !789

843:                                              ; preds = %817
  %844 = mul <8 x i32> %838, %837
  %845 = mul <8 x i32> %839, %844
  %846 = mul <8 x i32> %840, %845
  %847 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %846)
  %848 = icmp eq i64 %811, %815
  br i1 %848, label %861, label %849

849:                                              ; preds = %802, %843
  %850 = phi i64 [ %805, %802 ], [ %816, %843 ]
  %851 = phi i32 [ 1, %802 ], [ %847, %843 ]
  br label %852

852:                                              ; preds = %849, %852
  %853 = phi i64 [ %858, %852 ], [ %850, %849 ]
  %854 = phi i32 [ %857, %852 ], [ %851, %849 ]
  %855 = getelementptr inbounds i32, ptr %11, i64 %853
  %856 = load i32, ptr %855, align 4, !tbaa !5
  %857 = mul nsw i32 %856, %854
  %858 = add nsw i64 %853, -1
  %859 = trunc i64 %853 to i32
  %860 = icmp sgt i32 %859, 0
  br i1 %860, label %852, label %861, !llvm.loop !790

861:                                              ; preds = %852, %843
  %862 = phi i32 [ %847, %843 ], [ %857, %852 ]
  %863 = and i64 %812, 4294967295
  %864 = getelementptr inbounds i32, ptr %6, i64 %863
  %865 = load i32, ptr %864, align 4, !tbaa !5
  %866 = mul nsw i32 %865, %862
  %867 = add nsw i32 %866, %806
  %868 = icmp sgt i64 %804, 2
  %869 = add nsw i64 %805, -1
  %870 = add i32 %803, 1
  br i1 %868, label %802, label %871, !llvm.loop !791

871:                                              ; preds = %861, %799
  %872 = phi i32 [ %801, %799 ], [ %867, %861 ]
  %873 = icmp slt i32 %872, %5
  br i1 %873, label %876, label %874

874:                                              ; preds = %871
  %875 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

876:                                              ; preds = %871
  %877 = sext i32 %872 to i64
  %878 = getelementptr inbounds i64, ptr %628, i64 %877
  %879 = load i64, ptr %878, align 8, !tbaa !120
  %880 = trunc i64 %879 to i32
  %881 = load i32, ptr %630, align 4, !tbaa !5
  %882 = sitofp i32 %881 to double
  %883 = sitofp i32 %880 to double
  %884 = icmp slt i32 %880, 0
  %885 = fneg fast double %883
  %886 = select fast i1 %884, double %885, double %883
  %887 = fadd fast double %886, %882
  %888 = fptosi double %887 to i32
  store i32 %888, ptr %630, align 4, !tbaa !5
  %889 = add nuw nsw i32 %800, 1
  br i1 %645, label %890, label %940

890:                                              ; preds = %876
  %891 = load i32, ptr %4, align 4, !tbaa !5
  %892 = load i32, ptr %12, align 4, !tbaa !5
  %893 = add nsw i32 %892, -1
  %894 = icmp slt i32 %891, %893
  br i1 %894, label %917, label %895

895:                                              ; preds = %890
  %896 = icmp eq i32 %891, %893
  br i1 %896, label %897, label %933

897:                                              ; preds = %895
  store i32 0, ptr %4, align 4, !tbaa !5
  %898 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %898, ptr %6, align 4, !tbaa !5
  br i1 %650, label %940, label %899

899:                                              ; preds = %897, %927
  %900 = phi i64 [ %931, %927 ], [ 1, %897 ]
  %901 = getelementptr inbounds i32, ptr %4, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = getelementptr inbounds i32, ptr %12, i64 %900
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %902, %905
  br i1 %906, label %907, label %925

907:                                              ; preds = %899
  br i1 %894, label %917, label %908

908:                                              ; preds = %907
  %909 = shl i64 %900, 32
  %910 = add i64 %909, -4294967296
  %911 = ashr exact i64 %910, 32
  %912 = getelementptr inbounds i32, ptr %7, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %900
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = add nsw i32 %915, %913
  store i32 %916, ptr %914, align 4, !tbaa !5
  br label %935

917:                                              ; preds = %890, %907
  %918 = phi i32 [ %902, %907 ], [ %891, %890 ]
  %919 = phi ptr [ %901, %907 ], [ %4, %890 ]
  %920 = phi i64 [ %900, %907 ], [ 0, %890 ]
  %921 = add nsw i32 %918, 1
  store i32 %921, ptr %919, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %7, i64 %920
  %923 = load i32, ptr %922, align 4, !tbaa !5
  %924 = getelementptr inbounds i32, ptr %6, i64 %920
  br label %935

925:                                              ; preds = %899
  %926 = icmp eq i32 %902, %905
  br i1 %926, label %927, label %933

927:                                              ; preds = %925
  store i32 0, ptr %901, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %8, i64 %900
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %6, i64 %900
  store i32 %929, ptr %930, align 4, !tbaa !5
  %931 = add nuw nsw i64 %900, 1
  %932 = icmp eq i64 %931, %648
  br i1 %932, label %940, label %899, !llvm.loop !792

933:                                              ; preds = %895, %925
  %934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

935:                                              ; preds = %908, %917
  %936 = phi ptr [ %924, %917 ], [ %901, %908 ]
  %937 = phi i32 [ %923, %917 ], [ 1, %908 ]
  %938 = load i32, ptr %936, align 4, !tbaa !5
  %939 = add nsw i32 %938, %937
  store i32 %939, ptr %936, align 4, !tbaa !5
  br label %940

940:                                              ; preds = %927, %935, %897, %876
  %941 = icmp eq i32 %889, %5
  br i1 %941, label %5537, label %799, !llvm.loop !793

942:                                              ; preds = %636
  %943 = getelementptr inbounds i32, ptr %3, i64 %19
  %944 = load i32, ptr %943, align 4, !tbaa !5
  %945 = icmp eq i32 %944, 0
  %946 = icmp sgt i32 %5, 0
  br i1 %945, label %956, label %947

947:                                              ; preds = %942
  br i1 %946, label %948, label %5537

948:                                              ; preds = %947
  %949 = icmp sgt i32 %13, 1
  %950 = icmp sgt i32 %13, 0
  %951 = add i32 %13, -2
  %952 = zext i32 %951 to i64
  %953 = zext i32 %13 to i64
  %954 = add nuw i32 %5, 1
  %955 = icmp eq i32 %13, 1
  br label %1098

956:                                              ; preds = %942
  br i1 %946, label %957, label %5537

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %965

965:                                              ; preds = %957, %1096
  %966 = phi i32 [ 0, %957 ], [ %1048, %1096 ]
  %967 = phi double [ 0.000000e+00, %957 ], [ %1047, %1096 ]
  %968 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %958, label %969, label %1038

969:                                              ; preds = %965, %1028
  %970 = phi i32 [ %1037, %1028 ], [ 0, %965 ]
  %971 = phi i64 [ %979, %1028 ], [ %962, %965 ]
  %972 = phi i64 [ %1036, %1028 ], [ %961, %965 ]
  %973 = phi i32 [ %1034, %1028 ], [ %968, %965 ]
  %974 = sub i32 %960, %970
  %975 = tail call i32 @llvm.smin.i32(i32 %974, i32 0)
  %976 = sub i32 %974, %975
  %977 = zext i32 %976 to i64
  %978 = add nuw nsw i64 %977, 1
  %979 = add nsw i64 %971, -1
  %980 = icmp ult i32 %976, 31
  br i1 %980, label %1016, label %981

981:                                              ; preds = %969
  %982 = and i64 %978, 8589934560
  %983 = sub i64 %972, %982
  br label %984

984:                                              ; preds = %984, %981
  %985 = phi i64 [ 0, %981 ], [ %1008, %984 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1004, %984 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1005, %984 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1006, %984 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1007, %984 ]
  %990 = sub i64 %972, %985
  %991 = getelementptr inbounds i32, ptr %9, i64 %990
  %992 = getelementptr inbounds i32, ptr %991, i64 -7
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %991, i64 -15
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %991, i64 -23
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !5
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %991, i64 -31
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !5
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = mul <8 x i32> %994, %986
  %1005 = mul <8 x i32> %997, %987
  %1006 = mul <8 x i32> %1000, %988
  %1007 = mul <8 x i32> %1003, %989
  %1008 = add nuw i64 %985, 32
  %1009 = icmp eq i64 %1008, %982
  br i1 %1009, label %1010, label %984, !llvm.loop !794

1010:                                             ; preds = %984
  %1011 = mul <8 x i32> %1005, %1004
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1013)
  %1015 = icmp eq i64 %978, %982
  br i1 %1015, label %1028, label %1016

1016:                                             ; preds = %969, %1010
  %1017 = phi i64 [ %972, %969 ], [ %983, %1010 ]
  %1018 = phi i32 [ 1, %969 ], [ %1014, %1010 ]
  br label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1025, %1019 ], [ %1017, %1016 ]
  %1021 = phi i32 [ %1024, %1019 ], [ %1018, %1016 ]
  %1022 = getelementptr inbounds i32, ptr %9, i64 %1020
  %1023 = load i32, ptr %1022, align 4, !tbaa !5
  %1024 = mul nsw i32 %1023, %1021
  %1025 = add nsw i64 %1020, -1
  %1026 = trunc i64 %1020 to i32
  %1027 = icmp sgt i32 %1026, 0
  br i1 %1027, label %1019, label %1028, !llvm.loop !795

1028:                                             ; preds = %1019, %1010
  %1029 = phi i32 [ %1014, %1010 ], [ %1024, %1019 ]
  %1030 = and i64 %979, 4294967295
  %1031 = getelementptr inbounds i32, ptr %6, i64 %1030
  %1032 = load i32, ptr %1031, align 4, !tbaa !5
  %1033 = mul nsw i32 %1032, %1029
  %1034 = add nsw i32 %1033, %973
  %1035 = icmp sgt i64 %971, 2
  %1036 = add nsw i64 %972, -1
  %1037 = add i32 %970, 1
  br i1 %1035, label %969, label %1038, !llvm.loop !796

1038:                                             ; preds = %1028, %965
  %1039 = phi i32 [ %968, %965 ], [ %1034, %1028 ]
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i64, ptr %628, i64 %1040
  %1042 = load i64, ptr %1041, align 8, !tbaa !120
  %1043 = trunc i64 %1042 to i32
  %1044 = load i32, ptr %630, align 4, !tbaa !5
  %1045 = tail call i32 @llvm.abs.i32(i32 %1043, i1 true)
  %1046 = add nsw i32 %1045, %1044
  store i32 %1046, ptr %630, align 4, !tbaa !5
  %1047 = fadd fast double %967, 1.000000e+00
  %1048 = add nuw nsw i32 %966, 1
  br i1 %959, label %1049, label %1096

1049:                                             ; preds = %1038
  %1050 = load i32, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %12, align 4, !tbaa !5
  %1052 = add nsw i32 %1051, -1
  %1053 = icmp slt i32 %1050, %1052
  br i1 %1053, label %1073, label %1054

1054:                                             ; preds = %1049
  %1055 = icmp eq i32 %1050, %1052
  br i1 %1055, label %1056, label %1089

1056:                                             ; preds = %1054
  store i32 0, ptr %4, align 4, !tbaa !5
  %1057 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1057, ptr %6, align 4, !tbaa !5
  br i1 %964, label %1096, label %1058

1058:                                             ; preds = %1056, %1083
  %1059 = phi i64 [ %1087, %1083 ], [ 1, %1056 ]
  %1060 = getelementptr inbounds i32, ptr %4, i64 %1059
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = getelementptr inbounds i32, ptr %12, i64 %1059
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1061, %1064
  br i1 %1065, label %1066, label %1081

1066:                                             ; preds = %1058
  br i1 %1053, label %1073, label %1067

1067:                                             ; preds = %1066
  %1068 = getelementptr inbounds i32, ptr %7, i64 %1059
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %6, i64 %1059
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, %1069
  store i32 %1072, ptr %1070, align 4, !tbaa !5
  br label %1091

1073:                                             ; preds = %1049, %1066
  %1074 = phi i32 [ %1061, %1066 ], [ %1050, %1049 ]
  %1075 = phi ptr [ %1060, %1066 ], [ %4, %1049 ]
  %1076 = phi i64 [ %1059, %1066 ], [ 0, %1049 ]
  %1077 = add nsw i32 %1074, 1
  store i32 %1077, ptr %1075, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %7, i64 %1076
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1076
  br label %1091

1081:                                             ; preds = %1058
  %1082 = icmp eq i32 %1061, %1064
  br i1 %1082, label %1083, label %1089

1083:                                             ; preds = %1081
  store i32 0, ptr %1060, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %8, i64 %1059
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1059
  store i32 %1085, ptr %1086, align 4, !tbaa !5
  %1087 = add nuw nsw i64 %1059, 1
  %1088 = icmp eq i64 %1087, %962
  br i1 %1088, label %1096, label %1058, !llvm.loop !797

1089:                                             ; preds = %1054, %1081
  %1090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1091:                                             ; preds = %1067, %1073
  %1092 = phi ptr [ %1080, %1073 ], [ %1060, %1067 ]
  %1093 = phi i32 [ %1079, %1073 ], [ 1, %1067 ]
  %1094 = load i32, ptr %1092, align 4, !tbaa !5
  %1095 = add nsw i32 %1094, %1093
  store i32 %1095, ptr %1092, align 4, !tbaa !5
  br label %1096

1096:                                             ; preds = %1083, %1091, %1056, %1038
  %1097 = icmp eq i32 %1048, %5
  br i1 %1097, label %5537, label %965, !llvm.loop !798

1098:                                             ; preds = %948, %1234
  %1099 = phi i32 [ 0, %948 ], [ %1183, %1234 ]
  %1100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %949, label %1101, label %1170

1101:                                             ; preds = %1098, %1160
  %1102 = phi i32 [ %1169, %1160 ], [ 0, %1098 ]
  %1103 = phi i64 [ %1111, %1160 ], [ %953, %1098 ]
  %1104 = phi i64 [ %1168, %1160 ], [ %952, %1098 ]
  %1105 = phi i32 [ %1166, %1160 ], [ %1100, %1098 ]
  %1106 = sub i32 %951, %1102
  %1107 = tail call i32 @llvm.smin.i32(i32 %1106, i32 0)
  %1108 = sub i32 %1106, %1107
  %1109 = zext i32 %1108 to i64
  %1110 = add nuw nsw i64 %1109, 1
  %1111 = add nsw i64 %1103, -1
  %1112 = icmp ult i32 %1108, 31
  br i1 %1112, label %1148, label %1113

1113:                                             ; preds = %1101
  %1114 = and i64 %1110, 8589934560
  %1115 = sub i64 %1104, %1114
  br label %1116

1116:                                             ; preds = %1116, %1113
  %1117 = phi i64 [ 0, %1113 ], [ %1140, %1116 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1136, %1116 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1137, %1116 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1138, %1116 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1139, %1116 ]
  %1122 = sub i64 %1104, %1117
  %1123 = getelementptr inbounds i32, ptr %11, i64 %1122
  %1124 = getelementptr inbounds i32, ptr %1123, i64 -7
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1123, i64 -15
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = getelementptr inbounds i32, ptr %1123, i64 -23
  %1131 = load <8 x i32>, ptr %1130, align 4, !tbaa !5
  %1132 = shufflevector <8 x i32> %1131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1133 = getelementptr inbounds i32, ptr %1123, i64 -31
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !5
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = mul <8 x i32> %1126, %1118
  %1137 = mul <8 x i32> %1129, %1119
  %1138 = mul <8 x i32> %1132, %1120
  %1139 = mul <8 x i32> %1135, %1121
  %1140 = add nuw i64 %1117, 32
  %1141 = icmp eq i64 %1140, %1114
  br i1 %1141, label %1142, label %1116, !llvm.loop !799

1142:                                             ; preds = %1116
  %1143 = mul <8 x i32> %1137, %1136
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1145)
  %1147 = icmp eq i64 %1110, %1114
  br i1 %1147, label %1160, label %1148

1148:                                             ; preds = %1101, %1142
  %1149 = phi i64 [ %1104, %1101 ], [ %1115, %1142 ]
  %1150 = phi i32 [ 1, %1101 ], [ %1146, %1142 ]
  br label %1151

1151:                                             ; preds = %1148, %1151
  %1152 = phi i64 [ %1157, %1151 ], [ %1149, %1148 ]
  %1153 = phi i32 [ %1156, %1151 ], [ %1150, %1148 ]
  %1154 = getelementptr inbounds i32, ptr %11, i64 %1152
  %1155 = load i32, ptr %1154, align 4, !tbaa !5
  %1156 = mul nsw i32 %1155, %1153
  %1157 = add nsw i64 %1152, -1
  %1158 = trunc i64 %1152 to i32
  %1159 = icmp sgt i32 %1158, 0
  br i1 %1159, label %1151, label %1160, !llvm.loop !800

1160:                                             ; preds = %1151, %1142
  %1161 = phi i32 [ %1146, %1142 ], [ %1156, %1151 ]
  %1162 = and i64 %1111, 4294967295
  %1163 = getelementptr inbounds i32, ptr %6, i64 %1162
  %1164 = load i32, ptr %1163, align 4, !tbaa !5
  %1165 = mul nsw i32 %1164, %1161
  %1166 = add nsw i32 %1165, %1105
  %1167 = icmp sgt i64 %1103, 2
  %1168 = add nsw i64 %1104, -1
  %1169 = add i32 %1102, 1
  br i1 %1167, label %1101, label %1170, !llvm.loop !801

1170:                                             ; preds = %1160, %1098
  %1171 = phi i32 [ %1100, %1098 ], [ %1166, %1160 ]
  %1172 = icmp slt i32 %1171, %5
  br i1 %1172, label %1175, label %1173

1173:                                             ; preds = %1170
  %1174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

1175:                                             ; preds = %1170
  %1176 = sext i32 %1171 to i64
  %1177 = getelementptr inbounds i64, ptr %628, i64 %1176
  %1178 = load i64, ptr %1177, align 8, !tbaa !120
  %1179 = trunc i64 %1178 to i32
  %1180 = load i32, ptr %630, align 4, !tbaa !5
  %1181 = tail call i32 @llvm.abs.i32(i32 %1179, i1 true)
  %1182 = add nsw i32 %1181, %1180
  store i32 %1182, ptr %630, align 4, !tbaa !5
  %1183 = add nuw nsw i32 %1099, 1
  br i1 %950, label %1184, label %1234

1184:                                             ; preds = %1175
  %1185 = load i32, ptr %4, align 4, !tbaa !5
  %1186 = load i32, ptr %12, align 4, !tbaa !5
  %1187 = add nsw i32 %1186, -1
  %1188 = icmp slt i32 %1185, %1187
  br i1 %1188, label %1211, label %1189

1189:                                             ; preds = %1184
  %1190 = icmp eq i32 %1185, %1187
  br i1 %1190, label %1191, label %1227

1191:                                             ; preds = %1189
  store i32 0, ptr %4, align 4, !tbaa !5
  %1192 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1192, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1234, label %1193

1193:                                             ; preds = %1191, %1221
  %1194 = phi i64 [ %1225, %1221 ], [ 1, %1191 ]
  %1195 = getelementptr inbounds i32, ptr %4, i64 %1194
  %1196 = load i32, ptr %1195, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %12, i64 %1194
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = add nsw i32 %1198, -1
  %1200 = icmp slt i32 %1196, %1199
  br i1 %1200, label %1201, label %1219

1201:                                             ; preds = %1193
  br i1 %1188, label %1211, label %1202

1202:                                             ; preds = %1201
  %1203 = shl i64 %1194, 32
  %1204 = add i64 %1203, -4294967296
  %1205 = ashr exact i64 %1204, 32
  %1206 = getelementptr inbounds i32, ptr %7, i64 %1205
  %1207 = load i32, ptr %1206, align 4, !tbaa !5
  %1208 = getelementptr inbounds i32, ptr %6, i64 %1194
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = add nsw i32 %1209, %1207
  store i32 %1210, ptr %1208, align 4, !tbaa !5
  br label %1229

1211:                                             ; preds = %1184, %1201
  %1212 = phi i32 [ %1196, %1201 ], [ %1185, %1184 ]
  %1213 = phi ptr [ %1195, %1201 ], [ %4, %1184 ]
  %1214 = phi i64 [ %1194, %1201 ], [ 0, %1184 ]
  %1215 = add nsw i32 %1212, 1
  store i32 %1215, ptr %1213, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %7, i64 %1214
  %1217 = load i32, ptr %1216, align 4, !tbaa !5
  %1218 = getelementptr inbounds i32, ptr %6, i64 %1214
  br label %1229

1219:                                             ; preds = %1193
  %1220 = icmp eq i32 %1196, %1199
  br i1 %1220, label %1221, label %1227

1221:                                             ; preds = %1219
  store i32 0, ptr %1195, align 4, !tbaa !5
  %1222 = getelementptr inbounds i32, ptr %8, i64 %1194
  %1223 = load i32, ptr %1222, align 4, !tbaa !5
  %1224 = getelementptr inbounds i32, ptr %6, i64 %1194
  store i32 %1223, ptr %1224, align 4, !tbaa !5
  %1225 = add nuw nsw i64 %1194, 1
  %1226 = icmp eq i64 %1225, %953
  br i1 %1226, label %1234, label %1193, !llvm.loop !802

1227:                                             ; preds = %1189, %1219
  %1228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1229:                                             ; preds = %1202, %1211
  %1230 = phi ptr [ %1218, %1211 ], [ %1195, %1202 ]
  %1231 = phi i32 [ %1217, %1211 ], [ 1, %1202 ]
  %1232 = load i32, ptr %1230, align 4, !tbaa !5
  %1233 = add nsw i32 %1232, %1231
  store i32 %1233, ptr %1230, align 4, !tbaa !5
  br label %1234

1234:                                             ; preds = %1221, %1229, %1191, %1175
  %1235 = icmp eq i32 %1183, %5
  br i1 %1235, label %5537, label %1098, !llvm.loop !803

1236:                                             ; preds = %636
  %1237 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

1238:                                             ; preds = %18
  %1239 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1240 = load ptr, ptr %1239, align 8, !tbaa !9
  %1241 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1242 = load ptr, ptr %1241, align 8, !tbaa !9
  store i8 0, ptr %1242, align 1, !tbaa !11
  %1243 = icmp eq i32 %13, 0
  br i1 %1243, label %1244, label %1248

1244:                                             ; preds = %1238
  %1245 = load i64, ptr %1240, align 8, !tbaa !120
  %1246 = trunc i64 %1245 to i8
  %1247 = tail call i8 @llvm.abs.i8(i8 %1246, i1 false)
  store i8 %1247, ptr %1242, align 1, !tbaa !11
  br label %5537

1248:                                             ; preds = %1238
  switch i32 %1, label %1852 [
    i32 1, label %1249
    i32 0, label %1558
  ]

1249:                                             ; preds = %1248
  %1250 = getelementptr inbounds i32, ptr %3, i64 %19
  %1251 = load i32, ptr %1250, align 4, !tbaa !5
  %1252 = icmp eq i32 %1251, 0
  %1253 = icmp sgt i32 %5, 0
  br i1 %1252, label %1263, label %1254

1254:                                             ; preds = %1249
  br i1 %1253, label %1255, label %5537

1255:                                             ; preds = %1254
  %1256 = icmp sgt i32 %13, 1
  %1257 = icmp sgt i32 %13, 0
  %1258 = add i32 %13, -2
  %1259 = zext i32 %1258 to i64
  %1260 = zext i32 %13 to i64
  %1261 = add nuw i32 %5, 1
  %1262 = icmp eq i32 %13, 1
  br label %1413

1263:                                             ; preds = %1249
  br i1 %1253, label %1264, label %5537

1264:                                             ; preds = %1263
  %1265 = icmp sgt i32 %13, 1
  %1266 = icmp sgt i32 %13, 0
  %1267 = add i32 %13, -2
  %1268 = zext i32 %1267 to i64
  %1269 = zext i32 %13 to i64
  %1270 = add nuw i32 %5, 1
  %1271 = icmp eq i32 %13, 1
  br label %1272

1272:                                             ; preds = %1264, %1411
  %1273 = phi i32 [ 0, %1264 ], [ %1363, %1411 ]
  %1274 = phi double [ 0.000000e+00, %1264 ], [ %1362, %1411 ]
  %1275 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1276, label %1345

1276:                                             ; preds = %1272, %1335
  %1277 = phi i32 [ %1344, %1335 ], [ 0, %1272 ]
  %1278 = phi i64 [ %1286, %1335 ], [ %1269, %1272 ]
  %1279 = phi i64 [ %1343, %1335 ], [ %1268, %1272 ]
  %1280 = phi i32 [ %1341, %1335 ], [ %1275, %1272 ]
  %1281 = sub i32 %1267, %1277
  %1282 = tail call i32 @llvm.smin.i32(i32 %1281, i32 0)
  %1283 = sub i32 %1281, %1282
  %1284 = zext i32 %1283 to i64
  %1285 = add nuw nsw i64 %1284, 1
  %1286 = add nsw i64 %1278, -1
  %1287 = icmp ult i32 %1283, 31
  br i1 %1287, label %1323, label %1288

1288:                                             ; preds = %1276
  %1289 = and i64 %1285, 8589934560
  %1290 = sub i64 %1279, %1289
  br label %1291

1291:                                             ; preds = %1291, %1288
  %1292 = phi i64 [ 0, %1288 ], [ %1315, %1291 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1311, %1291 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1312, %1291 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1313, %1291 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1288 ], [ %1314, %1291 ]
  %1297 = sub i64 %1279, %1292
  %1298 = getelementptr inbounds i32, ptr %9, i64 %1297
  %1299 = getelementptr inbounds i32, ptr %1298, i64 -7
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1298, i64 -15
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1298, i64 -23
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1298, i64 -31
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !5
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = mul <8 x i32> %1301, %1293
  %1312 = mul <8 x i32> %1304, %1294
  %1313 = mul <8 x i32> %1307, %1295
  %1314 = mul <8 x i32> %1310, %1296
  %1315 = add nuw i64 %1292, 32
  %1316 = icmp eq i64 %1315, %1289
  br i1 %1316, label %1317, label %1291, !llvm.loop !804

1317:                                             ; preds = %1291
  %1318 = mul <8 x i32> %1312, %1311
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = mul <8 x i32> %1314, %1319
  %1321 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1320)
  %1322 = icmp eq i64 %1285, %1289
  br i1 %1322, label %1335, label %1323

1323:                                             ; preds = %1276, %1317
  %1324 = phi i64 [ %1279, %1276 ], [ %1290, %1317 ]
  %1325 = phi i32 [ 1, %1276 ], [ %1321, %1317 ]
  br label %1326

1326:                                             ; preds = %1323, %1326
  %1327 = phi i64 [ %1332, %1326 ], [ %1324, %1323 ]
  %1328 = phi i32 [ %1331, %1326 ], [ %1325, %1323 ]
  %1329 = getelementptr inbounds i32, ptr %9, i64 %1327
  %1330 = load i32, ptr %1329, align 4, !tbaa !5
  %1331 = mul nsw i32 %1330, %1328
  %1332 = add nsw i64 %1327, -1
  %1333 = trunc i64 %1327 to i32
  %1334 = icmp sgt i32 %1333, 0
  br i1 %1334, label %1326, label %1335, !llvm.loop !805

1335:                                             ; preds = %1326, %1317
  %1336 = phi i32 [ %1321, %1317 ], [ %1331, %1326 ]
  %1337 = and i64 %1286, 4294967295
  %1338 = getelementptr inbounds i32, ptr %6, i64 %1337
  %1339 = load i32, ptr %1338, align 4, !tbaa !5
  %1340 = mul nsw i32 %1339, %1336
  %1341 = add nsw i32 %1340, %1280
  %1342 = icmp sgt i64 %1278, 2
  %1343 = add nsw i64 %1279, -1
  %1344 = add i32 %1277, 1
  br i1 %1342, label %1276, label %1345, !llvm.loop !806

1345:                                             ; preds = %1335, %1272
  %1346 = phi i32 [ %1275, %1272 ], [ %1341, %1335 ]
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds double, ptr %2, i64 %1347
  %1349 = load double, ptr %1348, align 8, !tbaa !18
  %1350 = getelementptr inbounds i64, ptr %1240, i64 %1347
  %1351 = load i64, ptr %1350, align 8, !tbaa !120
  %1352 = trunc i64 %1351 to i32
  %1353 = load i8, ptr %1242, align 1, !tbaa !11
  %1354 = sitofp i8 %1353 to double
  %1355 = shl i32 %1352, 24
  %1356 = ashr exact i32 %1355, 24
  %1357 = sitofp i32 %1356 to double
  %1358 = fmul fast double %1349, %1357
  %1359 = tail call fast double @llvm.fabs.f64(double %1358)
  %1360 = fadd fast double %1359, %1354
  %1361 = fptosi double %1360 to i8
  store i8 %1361, ptr %1242, align 1, !tbaa !11
  %1362 = fadd fast double %1349, %1274
  %1363 = add nuw nsw i32 %1273, 1
  br i1 %1266, label %1364, label %1411

1364:                                             ; preds = %1345
  %1365 = load i32, ptr %4, align 4, !tbaa !5
  %1366 = load i32, ptr %12, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, -1
  %1368 = icmp slt i32 %1365, %1367
  br i1 %1368, label %1388, label %1369

1369:                                             ; preds = %1364
  %1370 = icmp eq i32 %1365, %1367
  br i1 %1370, label %1371, label %1404

1371:                                             ; preds = %1369
  store i32 0, ptr %4, align 4, !tbaa !5
  %1372 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1372, ptr %6, align 4, !tbaa !5
  br i1 %1271, label %1411, label %1373

1373:                                             ; preds = %1371, %1398
  %1374 = phi i64 [ %1402, %1398 ], [ 1, %1371 ]
  %1375 = getelementptr inbounds i32, ptr %4, i64 %1374
  %1376 = load i32, ptr %1375, align 4, !tbaa !5
  %1377 = getelementptr inbounds i32, ptr %12, i64 %1374
  %1378 = load i32, ptr %1377, align 4, !tbaa !5
  %1379 = add nsw i32 %1378, -1
  %1380 = icmp slt i32 %1376, %1379
  br i1 %1380, label %1381, label %1396

1381:                                             ; preds = %1373
  br i1 %1368, label %1388, label %1382

1382:                                             ; preds = %1381
  %1383 = getelementptr inbounds i32, ptr %7, i64 %1374
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = getelementptr inbounds i32, ptr %6, i64 %1374
  %1386 = load i32, ptr %1385, align 4, !tbaa !5
  %1387 = add nsw i32 %1386, %1384
  store i32 %1387, ptr %1385, align 4, !tbaa !5
  br label %1406

1388:                                             ; preds = %1364, %1381
  %1389 = phi i32 [ %1376, %1381 ], [ %1365, %1364 ]
  %1390 = phi ptr [ %1375, %1381 ], [ %4, %1364 ]
  %1391 = phi i64 [ %1374, %1381 ], [ 0, %1364 ]
  %1392 = add nsw i32 %1389, 1
  store i32 %1392, ptr %1390, align 4, !tbaa !5
  %1393 = getelementptr inbounds i32, ptr %7, i64 %1391
  %1394 = load i32, ptr %1393, align 4, !tbaa !5
  %1395 = getelementptr inbounds i32, ptr %6, i64 %1391
  br label %1406

1396:                                             ; preds = %1373
  %1397 = icmp eq i32 %1376, %1379
  br i1 %1397, label %1398, label %1404

1398:                                             ; preds = %1396
  store i32 0, ptr %1375, align 4, !tbaa !5
  %1399 = getelementptr inbounds i32, ptr %8, i64 %1374
  %1400 = load i32, ptr %1399, align 4, !tbaa !5
  %1401 = getelementptr inbounds i32, ptr %6, i64 %1374
  store i32 %1400, ptr %1401, align 4, !tbaa !5
  %1402 = add nuw nsw i64 %1374, 1
  %1403 = icmp eq i64 %1402, %1269
  br i1 %1403, label %1411, label %1373, !llvm.loop !807

1404:                                             ; preds = %1369, %1396
  %1405 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1406:                                             ; preds = %1382, %1388
  %1407 = phi ptr [ %1395, %1388 ], [ %1375, %1382 ]
  %1408 = phi i32 [ %1394, %1388 ], [ 1, %1382 ]
  %1409 = load i32, ptr %1407, align 4, !tbaa !5
  %1410 = add nsw i32 %1409, %1408
  store i32 %1410, ptr %1407, align 4, !tbaa !5
  br label %1411

1411:                                             ; preds = %1398, %1406, %1371, %1345
  %1412 = icmp eq i32 %1363, %5
  br i1 %1412, label %5537, label %1272, !llvm.loop !808

1413:                                             ; preds = %1255, %1556
  %1414 = phi i32 [ 0, %1255 ], [ %1505, %1556 ]
  %1415 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1256, label %1416, label %1485

1416:                                             ; preds = %1413, %1475
  %1417 = phi i32 [ %1484, %1475 ], [ 0, %1413 ]
  %1418 = phi i64 [ %1426, %1475 ], [ %1260, %1413 ]
  %1419 = phi i64 [ %1483, %1475 ], [ %1259, %1413 ]
  %1420 = phi i32 [ %1481, %1475 ], [ %1415, %1413 ]
  %1421 = sub i32 %1258, %1417
  %1422 = tail call i32 @llvm.smin.i32(i32 %1421, i32 0)
  %1423 = sub i32 %1421, %1422
  %1424 = zext i32 %1423 to i64
  %1425 = add nuw nsw i64 %1424, 1
  %1426 = add nsw i64 %1418, -1
  %1427 = icmp ult i32 %1423, 31
  br i1 %1427, label %1463, label %1428

1428:                                             ; preds = %1416
  %1429 = and i64 %1425, 8589934560
  %1430 = sub i64 %1419, %1429
  br label %1431

1431:                                             ; preds = %1431, %1428
  %1432 = phi i64 [ 0, %1428 ], [ %1455, %1431 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1451, %1431 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1452, %1431 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1453, %1431 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1454, %1431 ]
  %1437 = sub i64 %1419, %1432
  %1438 = getelementptr inbounds i32, ptr %11, i64 %1437
  %1439 = getelementptr inbounds i32, ptr %1438, i64 -7
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1438, i64 -15
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1438, i64 -23
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1438, i64 -31
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !5
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = mul <8 x i32> %1441, %1433
  %1452 = mul <8 x i32> %1444, %1434
  %1453 = mul <8 x i32> %1447, %1435
  %1454 = mul <8 x i32> %1450, %1436
  %1455 = add nuw i64 %1432, 32
  %1456 = icmp eq i64 %1455, %1429
  br i1 %1456, label %1457, label %1431, !llvm.loop !809

1457:                                             ; preds = %1431
  %1458 = mul <8 x i32> %1452, %1451
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = mul <8 x i32> %1454, %1459
  %1461 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1460)
  %1462 = icmp eq i64 %1425, %1429
  br i1 %1462, label %1475, label %1463

1463:                                             ; preds = %1416, %1457
  %1464 = phi i64 [ %1419, %1416 ], [ %1430, %1457 ]
  %1465 = phi i32 [ 1, %1416 ], [ %1461, %1457 ]
  br label %1466

1466:                                             ; preds = %1463, %1466
  %1467 = phi i64 [ %1472, %1466 ], [ %1464, %1463 ]
  %1468 = phi i32 [ %1471, %1466 ], [ %1465, %1463 ]
  %1469 = getelementptr inbounds i32, ptr %11, i64 %1467
  %1470 = load i32, ptr %1469, align 4, !tbaa !5
  %1471 = mul nsw i32 %1470, %1468
  %1472 = add nsw i64 %1467, -1
  %1473 = trunc i64 %1467 to i32
  %1474 = icmp sgt i32 %1473, 0
  br i1 %1474, label %1466, label %1475, !llvm.loop !810

1475:                                             ; preds = %1466, %1457
  %1476 = phi i32 [ %1461, %1457 ], [ %1471, %1466 ]
  %1477 = and i64 %1426, 4294967295
  %1478 = getelementptr inbounds i32, ptr %6, i64 %1477
  %1479 = load i32, ptr %1478, align 4, !tbaa !5
  %1480 = mul nsw i32 %1479, %1476
  %1481 = add nsw i32 %1480, %1420
  %1482 = icmp sgt i64 %1418, 2
  %1483 = add nsw i64 %1419, -1
  %1484 = add i32 %1417, 1
  br i1 %1482, label %1416, label %1485, !llvm.loop !811

1485:                                             ; preds = %1475, %1413
  %1486 = phi i32 [ %1415, %1413 ], [ %1481, %1475 ]
  %1487 = icmp slt i32 %1486, %5
  br i1 %1487, label %1490, label %1488

1488:                                             ; preds = %1485
  %1489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

1490:                                             ; preds = %1485
  %1491 = sext i32 %1486 to i64
  %1492 = getelementptr inbounds i64, ptr %1240, i64 %1491
  %1493 = load i64, ptr %1492, align 8, !tbaa !120
  %1494 = trunc i64 %1493 to i32
  %1495 = load i8, ptr %1242, align 1, !tbaa !11
  %1496 = sitofp i8 %1495 to double
  %1497 = shl i32 %1494, 24
  %1498 = ashr exact i32 %1497, 24
  %1499 = sitofp i32 %1498 to double
  %1500 = icmp slt i32 %1497, 0
  %1501 = fneg fast double %1499
  %1502 = select fast i1 %1500, double %1501, double %1499
  %1503 = fadd fast double %1502, %1496
  %1504 = fptosi double %1503 to i8
  store i8 %1504, ptr %1242, align 1, !tbaa !11
  %1505 = add nuw nsw i32 %1414, 1
  br i1 %1257, label %1506, label %1556

1506:                                             ; preds = %1490
  %1507 = load i32, ptr %4, align 4, !tbaa !5
  %1508 = load i32, ptr %12, align 4, !tbaa !5
  %1509 = add nsw i32 %1508, -1
  %1510 = icmp slt i32 %1507, %1509
  br i1 %1510, label %1533, label %1511

1511:                                             ; preds = %1506
  %1512 = icmp eq i32 %1507, %1509
  br i1 %1512, label %1513, label %1549

1513:                                             ; preds = %1511
  store i32 0, ptr %4, align 4, !tbaa !5
  %1514 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1514, ptr %6, align 4, !tbaa !5
  br i1 %1262, label %1556, label %1515

1515:                                             ; preds = %1513, %1543
  %1516 = phi i64 [ %1547, %1543 ], [ 1, %1513 ]
  %1517 = getelementptr inbounds i32, ptr %4, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = getelementptr inbounds i32, ptr %12, i64 %1516
  %1520 = load i32, ptr %1519, align 4, !tbaa !5
  %1521 = add nsw i32 %1520, -1
  %1522 = icmp slt i32 %1518, %1521
  br i1 %1522, label %1523, label %1541

1523:                                             ; preds = %1515
  br i1 %1510, label %1533, label %1524

1524:                                             ; preds = %1523
  %1525 = shl i64 %1516, 32
  %1526 = add i64 %1525, -4294967296
  %1527 = ashr exact i64 %1526, 32
  %1528 = getelementptr inbounds i32, ptr %7, i64 %1527
  %1529 = load i32, ptr %1528, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %6, i64 %1516
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = add nsw i32 %1531, %1529
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  br label %1551

1533:                                             ; preds = %1506, %1523
  %1534 = phi i32 [ %1518, %1523 ], [ %1507, %1506 ]
  %1535 = phi ptr [ %1517, %1523 ], [ %4, %1506 ]
  %1536 = phi i64 [ %1516, %1523 ], [ 0, %1506 ]
  %1537 = add nsw i32 %1534, 1
  store i32 %1537, ptr %1535, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %7, i64 %1536
  %1539 = load i32, ptr %1538, align 4, !tbaa !5
  %1540 = getelementptr inbounds i32, ptr %6, i64 %1536
  br label %1551

1541:                                             ; preds = %1515
  %1542 = icmp eq i32 %1518, %1521
  br i1 %1542, label %1543, label %1549

1543:                                             ; preds = %1541
  store i32 0, ptr %1517, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %8, i64 %1516
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = getelementptr inbounds i32, ptr %6, i64 %1516
  store i32 %1545, ptr %1546, align 4, !tbaa !5
  %1547 = add nuw nsw i64 %1516, 1
  %1548 = icmp eq i64 %1547, %1260
  br i1 %1548, label %1556, label %1515, !llvm.loop !812

1549:                                             ; preds = %1511, %1541
  %1550 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1551:                                             ; preds = %1524, %1533
  %1552 = phi ptr [ %1540, %1533 ], [ %1517, %1524 ]
  %1553 = phi i32 [ %1539, %1533 ], [ 1, %1524 ]
  %1554 = load i32, ptr %1552, align 4, !tbaa !5
  %1555 = add nsw i32 %1554, %1553
  store i32 %1555, ptr %1552, align 4, !tbaa !5
  br label %1556

1556:                                             ; preds = %1543, %1551, %1513, %1490
  %1557 = icmp eq i32 %1505, %5
  br i1 %1557, label %5537, label %1413, !llvm.loop !813

1558:                                             ; preds = %1248
  %1559 = getelementptr inbounds i32, ptr %3, i64 %19
  %1560 = load i32, ptr %1559, align 4, !tbaa !5
  %1561 = icmp eq i32 %1560, 0
  %1562 = icmp sgt i32 %5, 0
  br i1 %1561, label %1572, label %1563

1563:                                             ; preds = %1558
  br i1 %1562, label %1564, label %5537

1564:                                             ; preds = %1563
  %1565 = icmp sgt i32 %13, 1
  %1566 = icmp sgt i32 %13, 0
  %1567 = add i32 %13, -2
  %1568 = zext i32 %1567 to i64
  %1569 = zext i32 %13 to i64
  %1570 = add nuw i32 %5, 1
  %1571 = icmp eq i32 %13, 1
  br label %1714

1572:                                             ; preds = %1558
  br i1 %1562, label %1573, label %5537

1573:                                             ; preds = %1572
  %1574 = icmp sgt i32 %13, 1
  %1575 = icmp sgt i32 %13, 0
  %1576 = add i32 %13, -2
  %1577 = zext i32 %1576 to i64
  %1578 = zext i32 %13 to i64
  %1579 = add nuw i32 %5, 1
  %1580 = icmp eq i32 %13, 1
  br label %1581

1581:                                             ; preds = %1573, %1712
  %1582 = phi i32 [ 0, %1573 ], [ %1664, %1712 ]
  %1583 = phi double [ 0.000000e+00, %1573 ], [ %1663, %1712 ]
  %1584 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1574, label %1585, label %1654

1585:                                             ; preds = %1581, %1644
  %1586 = phi i32 [ %1653, %1644 ], [ 0, %1581 ]
  %1587 = phi i64 [ %1595, %1644 ], [ %1578, %1581 ]
  %1588 = phi i64 [ %1652, %1644 ], [ %1577, %1581 ]
  %1589 = phi i32 [ %1650, %1644 ], [ %1584, %1581 ]
  %1590 = sub i32 %1576, %1586
  %1591 = tail call i32 @llvm.smin.i32(i32 %1590, i32 0)
  %1592 = sub i32 %1590, %1591
  %1593 = zext i32 %1592 to i64
  %1594 = add nuw nsw i64 %1593, 1
  %1595 = add nsw i64 %1587, -1
  %1596 = icmp ult i32 %1592, 31
  br i1 %1596, label %1632, label %1597

1597:                                             ; preds = %1585
  %1598 = and i64 %1594, 8589934560
  %1599 = sub i64 %1588, %1598
  br label %1600

1600:                                             ; preds = %1600, %1597
  %1601 = phi i64 [ 0, %1597 ], [ %1624, %1600 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1597 ], [ %1620, %1600 ]
  %1603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1597 ], [ %1621, %1600 ]
  %1604 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1597 ], [ %1622, %1600 ]
  %1605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1597 ], [ %1623, %1600 ]
  %1606 = sub i64 %1588, %1601
  %1607 = getelementptr inbounds i32, ptr %9, i64 %1606
  %1608 = getelementptr inbounds i32, ptr %1607, i64 -7
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !5
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1607, i64 -15
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !5
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1607, i64 -23
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !5
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = getelementptr inbounds i32, ptr %1607, i64 -31
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !5
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = mul <8 x i32> %1610, %1602
  %1621 = mul <8 x i32> %1613, %1603
  %1622 = mul <8 x i32> %1616, %1604
  %1623 = mul <8 x i32> %1619, %1605
  %1624 = add nuw i64 %1601, 32
  %1625 = icmp eq i64 %1624, %1598
  br i1 %1625, label %1626, label %1600, !llvm.loop !814

1626:                                             ; preds = %1600
  %1627 = mul <8 x i32> %1621, %1620
  %1628 = mul <8 x i32> %1622, %1627
  %1629 = mul <8 x i32> %1623, %1628
  %1630 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1629)
  %1631 = icmp eq i64 %1594, %1598
  br i1 %1631, label %1644, label %1632

1632:                                             ; preds = %1585, %1626
  %1633 = phi i64 [ %1588, %1585 ], [ %1599, %1626 ]
  %1634 = phi i32 [ 1, %1585 ], [ %1630, %1626 ]
  br label %1635

1635:                                             ; preds = %1632, %1635
  %1636 = phi i64 [ %1641, %1635 ], [ %1633, %1632 ]
  %1637 = phi i32 [ %1640, %1635 ], [ %1634, %1632 ]
  %1638 = getelementptr inbounds i32, ptr %9, i64 %1636
  %1639 = load i32, ptr %1638, align 4, !tbaa !5
  %1640 = mul nsw i32 %1639, %1637
  %1641 = add nsw i64 %1636, -1
  %1642 = trunc i64 %1636 to i32
  %1643 = icmp sgt i32 %1642, 0
  br i1 %1643, label %1635, label %1644, !llvm.loop !815

1644:                                             ; preds = %1635, %1626
  %1645 = phi i32 [ %1630, %1626 ], [ %1640, %1635 ]
  %1646 = and i64 %1595, 4294967295
  %1647 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = mul nsw i32 %1648, %1645
  %1650 = add nsw i32 %1649, %1589
  %1651 = icmp sgt i64 %1587, 2
  %1652 = add nsw i64 %1588, -1
  %1653 = add i32 %1586, 1
  br i1 %1651, label %1585, label %1654, !llvm.loop !816

1654:                                             ; preds = %1644, %1581
  %1655 = phi i32 [ %1584, %1581 ], [ %1650, %1644 ]
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds i64, ptr %1240, i64 %1656
  %1658 = load i64, ptr %1657, align 8, !tbaa !120
  %1659 = trunc i64 %1658 to i8
  %1660 = load i8, ptr %1242, align 1, !tbaa !11
  %1661 = tail call i8 @llvm.abs.i8(i8 %1659, i1 false)
  %1662 = add i8 %1661, %1660
  store i8 %1662, ptr %1242, align 1, !tbaa !11
  %1663 = fadd fast double %1583, 1.000000e+00
  %1664 = add nuw nsw i32 %1582, 1
  br i1 %1575, label %1665, label %1712

1665:                                             ; preds = %1654
  %1666 = load i32, ptr %4, align 4, !tbaa !5
  %1667 = load i32, ptr %12, align 4, !tbaa !5
  %1668 = add nsw i32 %1667, -1
  %1669 = icmp slt i32 %1666, %1668
  br i1 %1669, label %1689, label %1670

1670:                                             ; preds = %1665
  %1671 = icmp eq i32 %1666, %1668
  br i1 %1671, label %1672, label %1705

1672:                                             ; preds = %1670
  store i32 0, ptr %4, align 4, !tbaa !5
  %1673 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1673, ptr %6, align 4, !tbaa !5
  br i1 %1580, label %1712, label %1674

1674:                                             ; preds = %1672, %1699
  %1675 = phi i64 [ %1703, %1699 ], [ 1, %1672 ]
  %1676 = getelementptr inbounds i32, ptr %4, i64 %1675
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %12, i64 %1675
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = add nsw i32 %1679, -1
  %1681 = icmp slt i32 %1677, %1680
  br i1 %1681, label %1682, label %1697

1682:                                             ; preds = %1674
  br i1 %1669, label %1689, label %1683

1683:                                             ; preds = %1682
  %1684 = getelementptr inbounds i32, ptr %7, i64 %1675
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %6, i64 %1675
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = add nsw i32 %1687, %1685
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  br label %1707

1689:                                             ; preds = %1665, %1682
  %1690 = phi i32 [ %1677, %1682 ], [ %1666, %1665 ]
  %1691 = phi ptr [ %1676, %1682 ], [ %4, %1665 ]
  %1692 = phi i64 [ %1675, %1682 ], [ 0, %1665 ]
  %1693 = add nsw i32 %1690, 1
  store i32 %1693, ptr %1691, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %7, i64 %1692
  %1695 = load i32, ptr %1694, align 4, !tbaa !5
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1692
  br label %1707

1697:                                             ; preds = %1674
  %1698 = icmp eq i32 %1677, %1680
  br i1 %1698, label %1699, label %1705

1699:                                             ; preds = %1697
  store i32 0, ptr %1676, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %8, i64 %1675
  %1701 = load i32, ptr %1700, align 4, !tbaa !5
  %1702 = getelementptr inbounds i32, ptr %6, i64 %1675
  store i32 %1701, ptr %1702, align 4, !tbaa !5
  %1703 = add nuw nsw i64 %1675, 1
  %1704 = icmp eq i64 %1703, %1578
  br i1 %1704, label %1712, label %1674, !llvm.loop !817

1705:                                             ; preds = %1670, %1697
  %1706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1707:                                             ; preds = %1683, %1689
  %1708 = phi ptr [ %1696, %1689 ], [ %1676, %1683 ]
  %1709 = phi i32 [ %1695, %1689 ], [ 1, %1683 ]
  %1710 = load i32, ptr %1708, align 4, !tbaa !5
  %1711 = add nsw i32 %1710, %1709
  store i32 %1711, ptr %1708, align 4, !tbaa !5
  br label %1712

1712:                                             ; preds = %1699, %1707, %1672, %1654
  %1713 = icmp eq i32 %1664, %5
  br i1 %1713, label %5537, label %1581, !llvm.loop !818

1714:                                             ; preds = %1564, %1850
  %1715 = phi i32 [ 0, %1564 ], [ %1799, %1850 ]
  %1716 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1565, label %1717, label %1786

1717:                                             ; preds = %1714, %1776
  %1718 = phi i32 [ %1785, %1776 ], [ 0, %1714 ]
  %1719 = phi i64 [ %1727, %1776 ], [ %1569, %1714 ]
  %1720 = phi i64 [ %1784, %1776 ], [ %1568, %1714 ]
  %1721 = phi i32 [ %1782, %1776 ], [ %1716, %1714 ]
  %1722 = sub i32 %1567, %1718
  %1723 = tail call i32 @llvm.smin.i32(i32 %1722, i32 0)
  %1724 = sub i32 %1722, %1723
  %1725 = zext i32 %1724 to i64
  %1726 = add nuw nsw i64 %1725, 1
  %1727 = add nsw i64 %1719, -1
  %1728 = icmp ult i32 %1724, 31
  br i1 %1728, label %1764, label %1729

1729:                                             ; preds = %1717
  %1730 = and i64 %1726, 8589934560
  %1731 = sub i64 %1720, %1730
  br label %1732

1732:                                             ; preds = %1732, %1729
  %1733 = phi i64 [ 0, %1729 ], [ %1756, %1732 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1729 ], [ %1752, %1732 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1729 ], [ %1753, %1732 ]
  %1736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1729 ], [ %1754, %1732 ]
  %1737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1729 ], [ %1755, %1732 ]
  %1738 = sub i64 %1720, %1733
  %1739 = getelementptr inbounds i32, ptr %11, i64 %1738
  %1740 = getelementptr inbounds i32, ptr %1739, i64 -7
  %1741 = load <8 x i32>, ptr %1740, align 4, !tbaa !5
  %1742 = shufflevector <8 x i32> %1741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1743 = getelementptr inbounds i32, ptr %1739, i64 -15
  %1744 = load <8 x i32>, ptr %1743, align 4, !tbaa !5
  %1745 = shufflevector <8 x i32> %1744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1746 = getelementptr inbounds i32, ptr %1739, i64 -23
  %1747 = load <8 x i32>, ptr %1746, align 4, !tbaa !5
  %1748 = shufflevector <8 x i32> %1747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1749 = getelementptr inbounds i32, ptr %1739, i64 -31
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !5
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = mul <8 x i32> %1742, %1734
  %1753 = mul <8 x i32> %1745, %1735
  %1754 = mul <8 x i32> %1748, %1736
  %1755 = mul <8 x i32> %1751, %1737
  %1756 = add nuw i64 %1733, 32
  %1757 = icmp eq i64 %1756, %1730
  br i1 %1757, label %1758, label %1732, !llvm.loop !819

1758:                                             ; preds = %1732
  %1759 = mul <8 x i32> %1753, %1752
  %1760 = mul <8 x i32> %1754, %1759
  %1761 = mul <8 x i32> %1755, %1760
  %1762 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1761)
  %1763 = icmp eq i64 %1726, %1730
  br i1 %1763, label %1776, label %1764

1764:                                             ; preds = %1717, %1758
  %1765 = phi i64 [ %1720, %1717 ], [ %1731, %1758 ]
  %1766 = phi i32 [ 1, %1717 ], [ %1762, %1758 ]
  br label %1767

1767:                                             ; preds = %1764, %1767
  %1768 = phi i64 [ %1773, %1767 ], [ %1765, %1764 ]
  %1769 = phi i32 [ %1772, %1767 ], [ %1766, %1764 ]
  %1770 = getelementptr inbounds i32, ptr %11, i64 %1768
  %1771 = load i32, ptr %1770, align 4, !tbaa !5
  %1772 = mul nsw i32 %1771, %1769
  %1773 = add nsw i64 %1768, -1
  %1774 = trunc i64 %1768 to i32
  %1775 = icmp sgt i32 %1774, 0
  br i1 %1775, label %1767, label %1776, !llvm.loop !820

1776:                                             ; preds = %1767, %1758
  %1777 = phi i32 [ %1762, %1758 ], [ %1772, %1767 ]
  %1778 = and i64 %1727, 4294967295
  %1779 = getelementptr inbounds i32, ptr %6, i64 %1778
  %1780 = load i32, ptr %1779, align 4, !tbaa !5
  %1781 = mul nsw i32 %1780, %1777
  %1782 = add nsw i32 %1781, %1721
  %1783 = icmp sgt i64 %1719, 2
  %1784 = add nsw i64 %1720, -1
  %1785 = add i32 %1718, 1
  br i1 %1783, label %1717, label %1786, !llvm.loop !821

1786:                                             ; preds = %1776, %1714
  %1787 = phi i32 [ %1716, %1714 ], [ %1782, %1776 ]
  %1788 = icmp slt i32 %1787, %5
  br i1 %1788, label %1791, label %1789

1789:                                             ; preds = %1786
  %1790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

1791:                                             ; preds = %1786
  %1792 = sext i32 %1787 to i64
  %1793 = getelementptr inbounds i64, ptr %1240, i64 %1792
  %1794 = load i64, ptr %1793, align 8, !tbaa !120
  %1795 = trunc i64 %1794 to i8
  %1796 = load i8, ptr %1242, align 1, !tbaa !11
  %1797 = tail call i8 @llvm.abs.i8(i8 %1795, i1 false)
  %1798 = add i8 %1797, %1796
  store i8 %1798, ptr %1242, align 1, !tbaa !11
  %1799 = add nuw nsw i32 %1715, 1
  br i1 %1566, label %1800, label %1850

1800:                                             ; preds = %1791
  %1801 = load i32, ptr %4, align 4, !tbaa !5
  %1802 = load i32, ptr %12, align 4, !tbaa !5
  %1803 = add nsw i32 %1802, -1
  %1804 = icmp slt i32 %1801, %1803
  br i1 %1804, label %1827, label %1805

1805:                                             ; preds = %1800
  %1806 = icmp eq i32 %1801, %1803
  br i1 %1806, label %1807, label %1843

1807:                                             ; preds = %1805
  store i32 0, ptr %4, align 4, !tbaa !5
  %1808 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1808, ptr %6, align 4, !tbaa !5
  br i1 %1571, label %1850, label %1809

1809:                                             ; preds = %1807, %1837
  %1810 = phi i64 [ %1841, %1837 ], [ 1, %1807 ]
  %1811 = getelementptr inbounds i32, ptr %4, i64 %1810
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = getelementptr inbounds i32, ptr %12, i64 %1810
  %1814 = load i32, ptr %1813, align 4, !tbaa !5
  %1815 = add nsw i32 %1814, -1
  %1816 = icmp slt i32 %1812, %1815
  br i1 %1816, label %1817, label %1835

1817:                                             ; preds = %1809
  br i1 %1804, label %1827, label %1818

1818:                                             ; preds = %1817
  %1819 = shl i64 %1810, 32
  %1820 = add i64 %1819, -4294967296
  %1821 = ashr exact i64 %1820, 32
  %1822 = getelementptr inbounds i32, ptr %7, i64 %1821
  %1823 = load i32, ptr %1822, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %6, i64 %1810
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = add nsw i32 %1825, %1823
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  br label %1845

1827:                                             ; preds = %1800, %1817
  %1828 = phi i32 [ %1812, %1817 ], [ %1801, %1800 ]
  %1829 = phi ptr [ %1811, %1817 ], [ %4, %1800 ]
  %1830 = phi i64 [ %1810, %1817 ], [ 0, %1800 ]
  %1831 = add nsw i32 %1828, 1
  store i32 %1831, ptr %1829, align 4, !tbaa !5
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1830
  %1833 = load i32, ptr %1832, align 4, !tbaa !5
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1830
  br label %1845

1835:                                             ; preds = %1809
  %1836 = icmp eq i32 %1812, %1815
  br i1 %1836, label %1837, label %1843

1837:                                             ; preds = %1835
  store i32 0, ptr %1811, align 4, !tbaa !5
  %1838 = getelementptr inbounds i32, ptr %8, i64 %1810
  %1839 = load i32, ptr %1838, align 4, !tbaa !5
  %1840 = getelementptr inbounds i32, ptr %6, i64 %1810
  store i32 %1839, ptr %1840, align 4, !tbaa !5
  %1841 = add nuw nsw i64 %1810, 1
  %1842 = icmp eq i64 %1841, %1569
  br i1 %1842, label %1850, label %1809, !llvm.loop !822

1843:                                             ; preds = %1805, %1835
  %1844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

1845:                                             ; preds = %1818, %1827
  %1846 = phi ptr [ %1834, %1827 ], [ %1811, %1818 ]
  %1847 = phi i32 [ %1833, %1827 ], [ 1, %1818 ]
  %1848 = load i32, ptr %1846, align 4, !tbaa !5
  %1849 = add nsw i32 %1848, %1847
  store i32 %1849, ptr %1846, align 4, !tbaa !5
  br label %1850

1850:                                             ; preds = %1837, %1845, %1807, %1791
  %1851 = icmp eq i32 %1799, %5
  br i1 %1851, label %5537, label %1714, !llvm.loop !823

1852:                                             ; preds = %1248
  %1853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

1854:                                             ; preds = %18
  %1855 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1856 = load ptr, ptr %1855, align 8, !tbaa !9
  %1857 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1858 = load ptr, ptr %1857, align 8, !tbaa !9
  store i16 0, ptr %1858, align 2, !tbaa !78
  %1859 = icmp eq i32 %13, 0
  br i1 %1859, label %1860, label %1864

1860:                                             ; preds = %1854
  %1861 = load i64, ptr %1856, align 8, !tbaa !120
  %1862 = trunc i64 %1861 to i16
  %1863 = tail call i16 @llvm.abs.i16(i16 %1862, i1 false)
  store i16 %1863, ptr %1858, align 2, !tbaa !78
  br label %5537

1864:                                             ; preds = %1854
  switch i32 %1, label %2468 [
    i32 1, label %1865
    i32 0, label %2174
  ]

1865:                                             ; preds = %1864
  %1866 = getelementptr inbounds i32, ptr %3, i64 %19
  %1867 = load i32, ptr %1866, align 4, !tbaa !5
  %1868 = icmp eq i32 %1867, 0
  %1869 = icmp sgt i32 %5, 0
  br i1 %1868, label %1879, label %1870

1870:                                             ; preds = %1865
  br i1 %1869, label %1871, label %5537

1871:                                             ; preds = %1870
  %1872 = icmp sgt i32 %13, 1
  %1873 = icmp sgt i32 %13, 0
  %1874 = add i32 %13, -2
  %1875 = zext i32 %1874 to i64
  %1876 = zext i32 %13 to i64
  %1877 = add nuw i32 %5, 1
  %1878 = icmp eq i32 %13, 1
  br label %2029

1879:                                             ; preds = %1865
  br i1 %1869, label %1880, label %5537

1880:                                             ; preds = %1879
  %1881 = icmp sgt i32 %13, 1
  %1882 = icmp sgt i32 %13, 0
  %1883 = add i32 %13, -2
  %1884 = zext i32 %1883 to i64
  %1885 = zext i32 %13 to i64
  %1886 = add nuw i32 %5, 1
  %1887 = icmp eq i32 %13, 1
  br label %1888

1888:                                             ; preds = %1880, %2027
  %1889 = phi i16 [ 0, %1880 ], [ %1977, %2027 ]
  %1890 = phi i32 [ 0, %1880 ], [ %1979, %2027 ]
  %1891 = phi double [ 0.000000e+00, %1880 ], [ %1978, %2027 ]
  %1892 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1881, label %1893, label %1962

1893:                                             ; preds = %1888, %1952
  %1894 = phi i32 [ %1961, %1952 ], [ 0, %1888 ]
  %1895 = phi i64 [ %1903, %1952 ], [ %1885, %1888 ]
  %1896 = phi i64 [ %1960, %1952 ], [ %1884, %1888 ]
  %1897 = phi i32 [ %1958, %1952 ], [ %1892, %1888 ]
  %1898 = sub i32 %1883, %1894
  %1899 = tail call i32 @llvm.smin.i32(i32 %1898, i32 0)
  %1900 = sub i32 %1898, %1899
  %1901 = zext i32 %1900 to i64
  %1902 = add nuw nsw i64 %1901, 1
  %1903 = add nsw i64 %1895, -1
  %1904 = icmp ult i32 %1900, 31
  br i1 %1904, label %1940, label %1905

1905:                                             ; preds = %1893
  %1906 = and i64 %1902, 8589934560
  %1907 = sub i64 %1896, %1906
  br label %1908

1908:                                             ; preds = %1908, %1905
  %1909 = phi i64 [ 0, %1905 ], [ %1932, %1908 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1928, %1908 ]
  %1911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1929, %1908 ]
  %1912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1930, %1908 ]
  %1913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1931, %1908 ]
  %1914 = sub i64 %1896, %1909
  %1915 = getelementptr inbounds i32, ptr %9, i64 %1914
  %1916 = getelementptr inbounds i32, ptr %1915, i64 -7
  %1917 = load <8 x i32>, ptr %1916, align 4, !tbaa !5
  %1918 = shufflevector <8 x i32> %1917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1919 = getelementptr inbounds i32, ptr %1915, i64 -15
  %1920 = load <8 x i32>, ptr %1919, align 4, !tbaa !5
  %1921 = shufflevector <8 x i32> %1920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1922 = getelementptr inbounds i32, ptr %1915, i64 -23
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !5
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = getelementptr inbounds i32, ptr %1915, i64 -31
  %1926 = load <8 x i32>, ptr %1925, align 4, !tbaa !5
  %1927 = shufflevector <8 x i32> %1926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1928 = mul <8 x i32> %1918, %1910
  %1929 = mul <8 x i32> %1921, %1911
  %1930 = mul <8 x i32> %1924, %1912
  %1931 = mul <8 x i32> %1927, %1913
  %1932 = add nuw i64 %1909, 32
  %1933 = icmp eq i64 %1932, %1906
  br i1 %1933, label %1934, label %1908, !llvm.loop !824

1934:                                             ; preds = %1908
  %1935 = mul <8 x i32> %1929, %1928
  %1936 = mul <8 x i32> %1930, %1935
  %1937 = mul <8 x i32> %1931, %1936
  %1938 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1937)
  %1939 = icmp eq i64 %1902, %1906
  br i1 %1939, label %1952, label %1940

1940:                                             ; preds = %1893, %1934
  %1941 = phi i64 [ %1896, %1893 ], [ %1907, %1934 ]
  %1942 = phi i32 [ 1, %1893 ], [ %1938, %1934 ]
  br label %1943

1943:                                             ; preds = %1940, %1943
  %1944 = phi i64 [ %1949, %1943 ], [ %1941, %1940 ]
  %1945 = phi i32 [ %1948, %1943 ], [ %1942, %1940 ]
  %1946 = getelementptr inbounds i32, ptr %9, i64 %1944
  %1947 = load i32, ptr %1946, align 4, !tbaa !5
  %1948 = mul nsw i32 %1947, %1945
  %1949 = add nsw i64 %1944, -1
  %1950 = trunc i64 %1944 to i32
  %1951 = icmp sgt i32 %1950, 0
  br i1 %1951, label %1943, label %1952, !llvm.loop !825

1952:                                             ; preds = %1943, %1934
  %1953 = phi i32 [ %1938, %1934 ], [ %1948, %1943 ]
  %1954 = and i64 %1903, 4294967295
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1954
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = mul nsw i32 %1956, %1953
  %1958 = add nsw i32 %1957, %1897
  %1959 = icmp sgt i64 %1895, 2
  %1960 = add nsw i64 %1896, -1
  %1961 = add i32 %1894, 1
  br i1 %1959, label %1893, label %1962, !llvm.loop !826

1962:                                             ; preds = %1952, %1888
  %1963 = phi i32 [ %1892, %1888 ], [ %1958, %1952 ]
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds double, ptr %2, i64 %1964
  %1966 = load double, ptr %1965, align 8, !tbaa !18
  %1967 = getelementptr inbounds i64, ptr %1856, i64 %1964
  %1968 = load i64, ptr %1967, align 8, !tbaa !120
  %1969 = trunc i64 %1968 to i32
  %1970 = sitofp i16 %1889 to double
  %1971 = shl i32 %1969, 16
  %1972 = ashr exact i32 %1971, 16
  %1973 = sitofp i32 %1972 to double
  %1974 = fmul fast double %1966, %1973
  %1975 = tail call fast double @llvm.fabs.f64(double %1974)
  %1976 = fadd fast double %1975, %1970
  %1977 = fptosi double %1976 to i16
  %1978 = fadd fast double %1966, %1891
  %1979 = add nuw nsw i32 %1890, 1
  br i1 %1882, label %1980, label %2027

1980:                                             ; preds = %1962
  %1981 = load i32, ptr %4, align 4, !tbaa !5
  %1982 = load i32, ptr %12, align 4, !tbaa !5
  %1983 = add nsw i32 %1982, -1
  %1984 = icmp slt i32 %1981, %1983
  br i1 %1984, label %2004, label %1985

1985:                                             ; preds = %1980
  %1986 = icmp eq i32 %1981, %1983
  br i1 %1986, label %1987, label %2020

1987:                                             ; preds = %1985
  store i32 0, ptr %4, align 4, !tbaa !5
  %1988 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1988, ptr %6, align 4, !tbaa !5
  br i1 %1887, label %2027, label %1989

1989:                                             ; preds = %1987, %2014
  %1990 = phi i64 [ %2018, %2014 ], [ 1, %1987 ]
  %1991 = getelementptr inbounds i32, ptr %4, i64 %1990
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = getelementptr inbounds i32, ptr %12, i64 %1990
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = add nsw i32 %1994, -1
  %1996 = icmp slt i32 %1992, %1995
  br i1 %1996, label %1997, label %2012

1997:                                             ; preds = %1989
  br i1 %1984, label %2004, label %1998

1998:                                             ; preds = %1997
  %1999 = getelementptr inbounds i32, ptr %7, i64 %1990
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %6, i64 %1990
  %2002 = load i32, ptr %2001, align 4, !tbaa !5
  %2003 = add nsw i32 %2002, %2000
  store i32 %2003, ptr %2001, align 4, !tbaa !5
  br label %2022

2004:                                             ; preds = %1980, %1997
  %2005 = phi i32 [ %1992, %1997 ], [ %1981, %1980 ]
  %2006 = phi ptr [ %1991, %1997 ], [ %4, %1980 ]
  %2007 = phi i64 [ %1990, %1997 ], [ 0, %1980 ]
  %2008 = add nsw i32 %2005, 1
  store i32 %2008, ptr %2006, align 4, !tbaa !5
  %2009 = getelementptr inbounds i32, ptr %7, i64 %2007
  %2010 = load i32, ptr %2009, align 4, !tbaa !5
  %2011 = getelementptr inbounds i32, ptr %6, i64 %2007
  br label %2022

2012:                                             ; preds = %1989
  %2013 = icmp eq i32 %1992, %1995
  br i1 %2013, label %2014, label %2020

2014:                                             ; preds = %2012
  store i32 0, ptr %1991, align 4, !tbaa !5
  %2015 = getelementptr inbounds i32, ptr %8, i64 %1990
  %2016 = load i32, ptr %2015, align 4, !tbaa !5
  %2017 = getelementptr inbounds i32, ptr %6, i64 %1990
  store i32 %2016, ptr %2017, align 4, !tbaa !5
  %2018 = add nuw nsw i64 %1990, 1
  %2019 = icmp eq i64 %2018, %1885
  br i1 %2019, label %2027, label %1989, !llvm.loop !827

2020:                                             ; preds = %1985, %2012
  store i16 %1977, ptr %1858, align 2, !tbaa !78
  %2021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2022:                                             ; preds = %1998, %2004
  %2023 = phi ptr [ %2011, %2004 ], [ %1991, %1998 ]
  %2024 = phi i32 [ %2010, %2004 ], [ 1, %1998 ]
  %2025 = load i32, ptr %2023, align 4, !tbaa !5
  %2026 = add nsw i32 %2025, %2024
  store i32 %2026, ptr %2023, align 4, !tbaa !5
  br label %2027

2027:                                             ; preds = %2014, %2022, %1987, %1962
  %2028 = icmp eq i32 %1979, %5
  br i1 %2028, label %5531, label %1888, !llvm.loop !828

2029:                                             ; preds = %1871, %2172
  %2030 = phi i16 [ 0, %1871 ], [ %2120, %2172 ]
  %2031 = phi i32 [ 0, %1871 ], [ %2121, %2172 ]
  %2032 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1872, label %2033, label %2102

2033:                                             ; preds = %2029, %2092
  %2034 = phi i32 [ %2101, %2092 ], [ 0, %2029 ]
  %2035 = phi i64 [ %2043, %2092 ], [ %1876, %2029 ]
  %2036 = phi i64 [ %2100, %2092 ], [ %1875, %2029 ]
  %2037 = phi i32 [ %2098, %2092 ], [ %2032, %2029 ]
  %2038 = sub i32 %1874, %2034
  %2039 = tail call i32 @llvm.smin.i32(i32 %2038, i32 0)
  %2040 = sub i32 %2038, %2039
  %2041 = zext i32 %2040 to i64
  %2042 = add nuw nsw i64 %2041, 1
  %2043 = add nsw i64 %2035, -1
  %2044 = icmp ult i32 %2040, 31
  br i1 %2044, label %2080, label %2045

2045:                                             ; preds = %2033
  %2046 = and i64 %2042, 8589934560
  %2047 = sub i64 %2036, %2046
  br label %2048

2048:                                             ; preds = %2048, %2045
  %2049 = phi i64 [ 0, %2045 ], [ %2072, %2048 ]
  %2050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2045 ], [ %2068, %2048 ]
  %2051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2045 ], [ %2069, %2048 ]
  %2052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2045 ], [ %2070, %2048 ]
  %2053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2045 ], [ %2071, %2048 ]
  %2054 = sub i64 %2036, %2049
  %2055 = getelementptr inbounds i32, ptr %11, i64 %2054
  %2056 = getelementptr inbounds i32, ptr %2055, i64 -7
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !5
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2055, i64 -15
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2055, i64 -23
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !5
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = getelementptr inbounds i32, ptr %2055, i64 -31
  %2066 = load <8 x i32>, ptr %2065, align 4, !tbaa !5
  %2067 = shufflevector <8 x i32> %2066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2068 = mul <8 x i32> %2058, %2050
  %2069 = mul <8 x i32> %2061, %2051
  %2070 = mul <8 x i32> %2064, %2052
  %2071 = mul <8 x i32> %2067, %2053
  %2072 = add nuw i64 %2049, 32
  %2073 = icmp eq i64 %2072, %2046
  br i1 %2073, label %2074, label %2048, !llvm.loop !829

2074:                                             ; preds = %2048
  %2075 = mul <8 x i32> %2069, %2068
  %2076 = mul <8 x i32> %2070, %2075
  %2077 = mul <8 x i32> %2071, %2076
  %2078 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2077)
  %2079 = icmp eq i64 %2042, %2046
  br i1 %2079, label %2092, label %2080

2080:                                             ; preds = %2033, %2074
  %2081 = phi i64 [ %2036, %2033 ], [ %2047, %2074 ]
  %2082 = phi i32 [ 1, %2033 ], [ %2078, %2074 ]
  br label %2083

2083:                                             ; preds = %2080, %2083
  %2084 = phi i64 [ %2089, %2083 ], [ %2081, %2080 ]
  %2085 = phi i32 [ %2088, %2083 ], [ %2082, %2080 ]
  %2086 = getelementptr inbounds i32, ptr %11, i64 %2084
  %2087 = load i32, ptr %2086, align 4, !tbaa !5
  %2088 = mul nsw i32 %2087, %2085
  %2089 = add nsw i64 %2084, -1
  %2090 = trunc i64 %2084 to i32
  %2091 = icmp sgt i32 %2090, 0
  br i1 %2091, label %2083, label %2092, !llvm.loop !830

2092:                                             ; preds = %2083, %2074
  %2093 = phi i32 [ %2078, %2074 ], [ %2088, %2083 ]
  %2094 = and i64 %2043, 4294967295
  %2095 = getelementptr inbounds i32, ptr %6, i64 %2094
  %2096 = load i32, ptr %2095, align 4, !tbaa !5
  %2097 = mul nsw i32 %2096, %2093
  %2098 = add nsw i32 %2097, %2037
  %2099 = icmp sgt i64 %2035, 2
  %2100 = add nsw i64 %2036, -1
  %2101 = add i32 %2034, 1
  br i1 %2099, label %2033, label %2102, !llvm.loop !831

2102:                                             ; preds = %2092, %2029
  %2103 = phi i32 [ %2032, %2029 ], [ %2098, %2092 ]
  %2104 = icmp slt i32 %2103, %5
  br i1 %2104, label %2107, label %2105

2105:                                             ; preds = %2102
  %2106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

2107:                                             ; preds = %2102
  %2108 = sext i32 %2103 to i64
  %2109 = getelementptr inbounds i64, ptr %1856, i64 %2108
  %2110 = load i64, ptr %2109, align 8, !tbaa !120
  %2111 = trunc i64 %2110 to i32
  %2112 = sitofp i16 %2030 to double
  %2113 = shl i32 %2111, 16
  %2114 = ashr exact i32 %2113, 16
  %2115 = sitofp i32 %2114 to double
  %2116 = icmp slt i32 %2113, 0
  %2117 = fneg fast double %2115
  %2118 = select fast i1 %2116, double %2117, double %2115
  %2119 = fadd fast double %2118, %2112
  %2120 = fptosi double %2119 to i16
  store i16 %2120, ptr %1858, align 2, !tbaa !78
  %2121 = add nuw nsw i32 %2031, 1
  br i1 %1873, label %2122, label %2172

2122:                                             ; preds = %2107
  %2123 = load i32, ptr %4, align 4, !tbaa !5
  %2124 = load i32, ptr %12, align 4, !tbaa !5
  %2125 = add nsw i32 %2124, -1
  %2126 = icmp slt i32 %2123, %2125
  br i1 %2126, label %2149, label %2127

2127:                                             ; preds = %2122
  %2128 = icmp eq i32 %2123, %2125
  br i1 %2128, label %2129, label %2165

2129:                                             ; preds = %2127
  store i32 0, ptr %4, align 4, !tbaa !5
  %2130 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2130, ptr %6, align 4, !tbaa !5
  br i1 %1878, label %2172, label %2131

2131:                                             ; preds = %2129, %2159
  %2132 = phi i64 [ %2163, %2159 ], [ 1, %2129 ]
  %2133 = getelementptr inbounds i32, ptr %4, i64 %2132
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = getelementptr inbounds i32, ptr %12, i64 %2132
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, -1
  %2138 = icmp slt i32 %2134, %2137
  br i1 %2138, label %2139, label %2157

2139:                                             ; preds = %2131
  br i1 %2126, label %2149, label %2140

2140:                                             ; preds = %2139
  %2141 = shl i64 %2132, 32
  %2142 = add i64 %2141, -4294967296
  %2143 = ashr exact i64 %2142, 32
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2145 = load i32, ptr %2144, align 4, !tbaa !5
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2132
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = add nsw i32 %2147, %2145
  store i32 %2148, ptr %2146, align 4, !tbaa !5
  br label %2167

2149:                                             ; preds = %2122, %2139
  %2150 = phi i32 [ %2134, %2139 ], [ %2123, %2122 ]
  %2151 = phi ptr [ %2133, %2139 ], [ %4, %2122 ]
  %2152 = phi i64 [ %2132, %2139 ], [ 0, %2122 ]
  %2153 = add nsw i32 %2150, 1
  store i32 %2153, ptr %2151, align 4, !tbaa !5
  %2154 = getelementptr inbounds i32, ptr %7, i64 %2152
  %2155 = load i32, ptr %2154, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %6, i64 %2152
  br label %2167

2157:                                             ; preds = %2131
  %2158 = icmp eq i32 %2134, %2137
  br i1 %2158, label %2159, label %2165

2159:                                             ; preds = %2157
  store i32 0, ptr %2133, align 4, !tbaa !5
  %2160 = getelementptr inbounds i32, ptr %8, i64 %2132
  %2161 = load i32, ptr %2160, align 4, !tbaa !5
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2132
  store i32 %2161, ptr %2162, align 4, !tbaa !5
  %2163 = add nuw nsw i64 %2132, 1
  %2164 = icmp eq i64 %2163, %1876
  br i1 %2164, label %2172, label %2131, !llvm.loop !832

2165:                                             ; preds = %2127, %2157
  %2166 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2167:                                             ; preds = %2140, %2149
  %2168 = phi ptr [ %2156, %2149 ], [ %2133, %2140 ]
  %2169 = phi i32 [ %2155, %2149 ], [ 1, %2140 ]
  %2170 = load i32, ptr %2168, align 4, !tbaa !5
  %2171 = add nsw i32 %2170, %2169
  store i32 %2171, ptr %2168, align 4, !tbaa !5
  br label %2172

2172:                                             ; preds = %2159, %2167, %2129, %2107
  %2173 = icmp eq i32 %2121, %5
  br i1 %2173, label %5537, label %2029, !llvm.loop !833

2174:                                             ; preds = %1864
  %2175 = getelementptr inbounds i32, ptr %3, i64 %19
  %2176 = load i32, ptr %2175, align 4, !tbaa !5
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp sgt i32 %5, 0
  br i1 %2177, label %2188, label %2179

2179:                                             ; preds = %2174
  br i1 %2178, label %2180, label %5537

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2330

2188:                                             ; preds = %2174
  br i1 %2178, label %2189, label %5537

2189:                                             ; preds = %2188
  %2190 = icmp sgt i32 %13, 1
  %2191 = icmp sgt i32 %13, 0
  %2192 = add i32 %13, -2
  %2193 = zext i32 %2192 to i64
  %2194 = zext i32 %13 to i64
  %2195 = add nuw i32 %5, 1
  %2196 = icmp eq i32 %13, 1
  br label %2197

2197:                                             ; preds = %2189, %2328
  %2198 = phi i16 [ 0, %2189 ], [ %2278, %2328 ]
  %2199 = phi i32 [ 0, %2189 ], [ %2280, %2328 ]
  %2200 = phi double [ 0.000000e+00, %2189 ], [ %2279, %2328 ]
  %2201 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2190, label %2202, label %2271

2202:                                             ; preds = %2197, %2261
  %2203 = phi i32 [ %2270, %2261 ], [ 0, %2197 ]
  %2204 = phi i64 [ %2212, %2261 ], [ %2194, %2197 ]
  %2205 = phi i64 [ %2269, %2261 ], [ %2193, %2197 ]
  %2206 = phi i32 [ %2267, %2261 ], [ %2201, %2197 ]
  %2207 = sub i32 %2192, %2203
  %2208 = tail call i32 @llvm.smin.i32(i32 %2207, i32 0)
  %2209 = sub i32 %2207, %2208
  %2210 = zext i32 %2209 to i64
  %2211 = add nuw nsw i64 %2210, 1
  %2212 = add nsw i64 %2204, -1
  %2213 = icmp ult i32 %2209, 31
  br i1 %2213, label %2249, label %2214

2214:                                             ; preds = %2202
  %2215 = and i64 %2211, 8589934560
  %2216 = sub i64 %2205, %2215
  br label %2217

2217:                                             ; preds = %2217, %2214
  %2218 = phi i64 [ 0, %2214 ], [ %2241, %2217 ]
  %2219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2237, %2217 ]
  %2220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2238, %2217 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2239, %2217 ]
  %2222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2214 ], [ %2240, %2217 ]
  %2223 = sub i64 %2205, %2218
  %2224 = getelementptr inbounds i32, ptr %9, i64 %2223
  %2225 = getelementptr inbounds i32, ptr %2224, i64 -7
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = getelementptr inbounds i32, ptr %2224, i64 -15
  %2229 = load <8 x i32>, ptr %2228, align 4, !tbaa !5
  %2230 = shufflevector <8 x i32> %2229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2231 = getelementptr inbounds i32, ptr %2224, i64 -23
  %2232 = load <8 x i32>, ptr %2231, align 4, !tbaa !5
  %2233 = shufflevector <8 x i32> %2232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2234 = getelementptr inbounds i32, ptr %2224, i64 -31
  %2235 = load <8 x i32>, ptr %2234, align 4, !tbaa !5
  %2236 = shufflevector <8 x i32> %2235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2237 = mul <8 x i32> %2227, %2219
  %2238 = mul <8 x i32> %2230, %2220
  %2239 = mul <8 x i32> %2233, %2221
  %2240 = mul <8 x i32> %2236, %2222
  %2241 = add nuw i64 %2218, 32
  %2242 = icmp eq i64 %2241, %2215
  br i1 %2242, label %2243, label %2217, !llvm.loop !834

2243:                                             ; preds = %2217
  %2244 = mul <8 x i32> %2238, %2237
  %2245 = mul <8 x i32> %2239, %2244
  %2246 = mul <8 x i32> %2240, %2245
  %2247 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2246)
  %2248 = icmp eq i64 %2211, %2215
  br i1 %2248, label %2261, label %2249

2249:                                             ; preds = %2202, %2243
  %2250 = phi i64 [ %2205, %2202 ], [ %2216, %2243 ]
  %2251 = phi i32 [ 1, %2202 ], [ %2247, %2243 ]
  br label %2252

2252:                                             ; preds = %2249, %2252
  %2253 = phi i64 [ %2258, %2252 ], [ %2250, %2249 ]
  %2254 = phi i32 [ %2257, %2252 ], [ %2251, %2249 ]
  %2255 = getelementptr inbounds i32, ptr %9, i64 %2253
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2254
  %2258 = add nsw i64 %2253, -1
  %2259 = trunc i64 %2253 to i32
  %2260 = icmp sgt i32 %2259, 0
  br i1 %2260, label %2252, label %2261, !llvm.loop !835

2261:                                             ; preds = %2252, %2243
  %2262 = phi i32 [ %2247, %2243 ], [ %2257, %2252 ]
  %2263 = and i64 %2212, 4294967295
  %2264 = getelementptr inbounds i32, ptr %6, i64 %2263
  %2265 = load i32, ptr %2264, align 4, !tbaa !5
  %2266 = mul nsw i32 %2265, %2262
  %2267 = add nsw i32 %2266, %2206
  %2268 = icmp sgt i64 %2204, 2
  %2269 = add nsw i64 %2205, -1
  %2270 = add i32 %2203, 1
  br i1 %2268, label %2202, label %2271, !llvm.loop !836

2271:                                             ; preds = %2261, %2197
  %2272 = phi i32 [ %2201, %2197 ], [ %2267, %2261 ]
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds i64, ptr %1856, i64 %2273
  %2275 = load i64, ptr %2274, align 8, !tbaa !120
  %2276 = trunc i64 %2275 to i16
  %2277 = tail call i16 @llvm.abs.i16(i16 %2276, i1 false)
  %2278 = add i16 %2277, %2198
  %2279 = fadd fast double %2200, 1.000000e+00
  %2280 = add nuw nsw i32 %2199, 1
  br i1 %2191, label %2281, label %2328

2281:                                             ; preds = %2271
  %2282 = load i32, ptr %4, align 4, !tbaa !5
  %2283 = load i32, ptr %12, align 4, !tbaa !5
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2282, %2284
  br i1 %2285, label %2305, label %2286

2286:                                             ; preds = %2281
  %2287 = icmp eq i32 %2282, %2284
  br i1 %2287, label %2288, label %2321

2288:                                             ; preds = %2286
  store i32 0, ptr %4, align 4, !tbaa !5
  %2289 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2289, ptr %6, align 4, !tbaa !5
  br i1 %2196, label %2328, label %2290

2290:                                             ; preds = %2288, %2315
  %2291 = phi i64 [ %2319, %2315 ], [ 1, %2288 ]
  %2292 = getelementptr inbounds i32, ptr %4, i64 %2291
  %2293 = load i32, ptr %2292, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %12, i64 %2291
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = add nsw i32 %2295, -1
  %2297 = icmp slt i32 %2293, %2296
  br i1 %2297, label %2298, label %2313

2298:                                             ; preds = %2290
  br i1 %2285, label %2305, label %2299

2299:                                             ; preds = %2298
  %2300 = getelementptr inbounds i32, ptr %7, i64 %2291
  %2301 = load i32, ptr %2300, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %6, i64 %2291
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = add nsw i32 %2303, %2301
  store i32 %2304, ptr %2302, align 4, !tbaa !5
  br label %2323

2305:                                             ; preds = %2281, %2298
  %2306 = phi i32 [ %2293, %2298 ], [ %2282, %2281 ]
  %2307 = phi ptr [ %2292, %2298 ], [ %4, %2281 ]
  %2308 = phi i64 [ %2291, %2298 ], [ 0, %2281 ]
  %2309 = add nsw i32 %2306, 1
  store i32 %2309, ptr %2307, align 4, !tbaa !5
  %2310 = getelementptr inbounds i32, ptr %7, i64 %2308
  %2311 = load i32, ptr %2310, align 4, !tbaa !5
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2308
  br label %2323

2313:                                             ; preds = %2290
  %2314 = icmp eq i32 %2293, %2296
  br i1 %2314, label %2315, label %2321

2315:                                             ; preds = %2313
  store i32 0, ptr %2292, align 4, !tbaa !5
  %2316 = getelementptr inbounds i32, ptr %8, i64 %2291
  %2317 = load i32, ptr %2316, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %6, i64 %2291
  store i32 %2317, ptr %2318, align 4, !tbaa !5
  %2319 = add nuw nsw i64 %2291, 1
  %2320 = icmp eq i64 %2319, %2194
  br i1 %2320, label %2328, label %2290, !llvm.loop !837

2321:                                             ; preds = %2286, %2313
  store i16 %2278, ptr %1858, align 2, !tbaa !78
  %2322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2323:                                             ; preds = %2299, %2305
  %2324 = phi ptr [ %2312, %2305 ], [ %2292, %2299 ]
  %2325 = phi i32 [ %2311, %2305 ], [ 1, %2299 ]
  %2326 = load i32, ptr %2324, align 4, !tbaa !5
  %2327 = add nsw i32 %2326, %2325
  store i32 %2327, ptr %2324, align 4, !tbaa !5
  br label %2328

2328:                                             ; preds = %2315, %2323, %2288, %2271
  %2329 = icmp eq i32 %2280, %5
  br i1 %2329, label %5532, label %2197, !llvm.loop !838

2330:                                             ; preds = %2180, %2466
  %2331 = phi i16 [ 0, %2180 ], [ %2414, %2466 ]
  %2332 = phi i32 [ 0, %2180 ], [ %2415, %2466 ]
  %2333 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2334, label %2403

2334:                                             ; preds = %2330, %2393
  %2335 = phi i32 [ %2402, %2393 ], [ 0, %2330 ]
  %2336 = phi i64 [ %2344, %2393 ], [ %2185, %2330 ]
  %2337 = phi i64 [ %2401, %2393 ], [ %2184, %2330 ]
  %2338 = phi i32 [ %2399, %2393 ], [ %2333, %2330 ]
  %2339 = sub i32 %2183, %2335
  %2340 = tail call i32 @llvm.smin.i32(i32 %2339, i32 0)
  %2341 = sub i32 %2339, %2340
  %2342 = zext i32 %2341 to i64
  %2343 = add nuw nsw i64 %2342, 1
  %2344 = add nsw i64 %2336, -1
  %2345 = icmp ult i32 %2341, 31
  br i1 %2345, label %2381, label %2346

2346:                                             ; preds = %2334
  %2347 = and i64 %2343, 8589934560
  %2348 = sub i64 %2337, %2347
  br label %2349

2349:                                             ; preds = %2349, %2346
  %2350 = phi i64 [ 0, %2346 ], [ %2373, %2349 ]
  %2351 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2369, %2349 ]
  %2352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2370, %2349 ]
  %2353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2371, %2349 ]
  %2354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2372, %2349 ]
  %2355 = sub i64 %2337, %2350
  %2356 = getelementptr inbounds i32, ptr %11, i64 %2355
  %2357 = getelementptr inbounds i32, ptr %2356, i64 -7
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = getelementptr inbounds i32, ptr %2356, i64 -15
  %2361 = load <8 x i32>, ptr %2360, align 4, !tbaa !5
  %2362 = shufflevector <8 x i32> %2361, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2363 = getelementptr inbounds i32, ptr %2356, i64 -23
  %2364 = load <8 x i32>, ptr %2363, align 4, !tbaa !5
  %2365 = shufflevector <8 x i32> %2364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2366 = getelementptr inbounds i32, ptr %2356, i64 -31
  %2367 = load <8 x i32>, ptr %2366, align 4, !tbaa !5
  %2368 = shufflevector <8 x i32> %2367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2369 = mul <8 x i32> %2359, %2351
  %2370 = mul <8 x i32> %2362, %2352
  %2371 = mul <8 x i32> %2365, %2353
  %2372 = mul <8 x i32> %2368, %2354
  %2373 = add nuw i64 %2350, 32
  %2374 = icmp eq i64 %2373, %2347
  br i1 %2374, label %2375, label %2349, !llvm.loop !839

2375:                                             ; preds = %2349
  %2376 = mul <8 x i32> %2370, %2369
  %2377 = mul <8 x i32> %2371, %2376
  %2378 = mul <8 x i32> %2372, %2377
  %2379 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2378)
  %2380 = icmp eq i64 %2343, %2347
  br i1 %2380, label %2393, label %2381

2381:                                             ; preds = %2334, %2375
  %2382 = phi i64 [ %2337, %2334 ], [ %2348, %2375 ]
  %2383 = phi i32 [ 1, %2334 ], [ %2379, %2375 ]
  br label %2384

2384:                                             ; preds = %2381, %2384
  %2385 = phi i64 [ %2390, %2384 ], [ %2382, %2381 ]
  %2386 = phi i32 [ %2389, %2384 ], [ %2383, %2381 ]
  %2387 = getelementptr inbounds i32, ptr %11, i64 %2385
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2386
  %2390 = add nsw i64 %2385, -1
  %2391 = trunc i64 %2385 to i32
  %2392 = icmp sgt i32 %2391, 0
  br i1 %2392, label %2384, label %2393, !llvm.loop !840

2393:                                             ; preds = %2384, %2375
  %2394 = phi i32 [ %2379, %2375 ], [ %2389, %2384 ]
  %2395 = and i64 %2344, 4294967295
  %2396 = getelementptr inbounds i32, ptr %6, i64 %2395
  %2397 = load i32, ptr %2396, align 4, !tbaa !5
  %2398 = mul nsw i32 %2397, %2394
  %2399 = add nsw i32 %2398, %2338
  %2400 = icmp sgt i64 %2336, 2
  %2401 = add nsw i64 %2337, -1
  %2402 = add i32 %2335, 1
  br i1 %2400, label %2334, label %2403, !llvm.loop !841

2403:                                             ; preds = %2393, %2330
  %2404 = phi i32 [ %2333, %2330 ], [ %2399, %2393 ]
  %2405 = icmp slt i32 %2404, %5
  br i1 %2405, label %2408, label %2406

2406:                                             ; preds = %2403
  %2407 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

2408:                                             ; preds = %2403
  %2409 = sext i32 %2404 to i64
  %2410 = getelementptr inbounds i64, ptr %1856, i64 %2409
  %2411 = load i64, ptr %2410, align 8, !tbaa !120
  %2412 = trunc i64 %2411 to i16
  %2413 = tail call i16 @llvm.abs.i16(i16 %2412, i1 false)
  %2414 = add i16 %2413, %2331
  store i16 %2414, ptr %1858, align 2, !tbaa !78
  %2415 = add nuw nsw i32 %2332, 1
  br i1 %2182, label %2416, label %2466

2416:                                             ; preds = %2408
  %2417 = load i32, ptr %4, align 4, !tbaa !5
  %2418 = load i32, ptr %12, align 4, !tbaa !5
  %2419 = add nsw i32 %2418, -1
  %2420 = icmp slt i32 %2417, %2419
  br i1 %2420, label %2443, label %2421

2421:                                             ; preds = %2416
  %2422 = icmp eq i32 %2417, %2419
  br i1 %2422, label %2423, label %2459

2423:                                             ; preds = %2421
  store i32 0, ptr %4, align 4, !tbaa !5
  %2424 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2424, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2466, label %2425

2425:                                             ; preds = %2423, %2453
  %2426 = phi i64 [ %2457, %2453 ], [ 1, %2423 ]
  %2427 = getelementptr inbounds i32, ptr %4, i64 %2426
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = getelementptr inbounds i32, ptr %12, i64 %2426
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = add nsw i32 %2430, -1
  %2432 = icmp slt i32 %2428, %2431
  br i1 %2432, label %2433, label %2451

2433:                                             ; preds = %2425
  br i1 %2420, label %2443, label %2434

2434:                                             ; preds = %2433
  %2435 = shl i64 %2426, 32
  %2436 = add i64 %2435, -4294967296
  %2437 = ashr exact i64 %2436, 32
  %2438 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2439 = load i32, ptr %2438, align 4, !tbaa !5
  %2440 = getelementptr inbounds i32, ptr %6, i64 %2426
  %2441 = load i32, ptr %2440, align 4, !tbaa !5
  %2442 = add nsw i32 %2441, %2439
  store i32 %2442, ptr %2440, align 4, !tbaa !5
  br label %2461

2443:                                             ; preds = %2416, %2433
  %2444 = phi i32 [ %2428, %2433 ], [ %2417, %2416 ]
  %2445 = phi ptr [ %2427, %2433 ], [ %4, %2416 ]
  %2446 = phi i64 [ %2426, %2433 ], [ 0, %2416 ]
  %2447 = add nsw i32 %2444, 1
  store i32 %2447, ptr %2445, align 4, !tbaa !5
  %2448 = getelementptr inbounds i32, ptr %7, i64 %2446
  %2449 = load i32, ptr %2448, align 4, !tbaa !5
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2446
  br label %2461

2451:                                             ; preds = %2425
  %2452 = icmp eq i32 %2428, %2431
  br i1 %2452, label %2453, label %2459

2453:                                             ; preds = %2451
  store i32 0, ptr %2427, align 4, !tbaa !5
  %2454 = getelementptr inbounds i32, ptr %8, i64 %2426
  %2455 = load i32, ptr %2454, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %6, i64 %2426
  store i32 %2455, ptr %2456, align 4, !tbaa !5
  %2457 = add nuw nsw i64 %2426, 1
  %2458 = icmp eq i64 %2457, %2185
  br i1 %2458, label %2466, label %2425, !llvm.loop !842

2459:                                             ; preds = %2421, %2451
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2461:                                             ; preds = %2434, %2443
  %2462 = phi ptr [ %2450, %2443 ], [ %2427, %2434 ]
  %2463 = phi i32 [ %2449, %2443 ], [ 1, %2434 ]
  %2464 = load i32, ptr %2462, align 4, !tbaa !5
  %2465 = add nsw i32 %2464, %2463
  store i32 %2465, ptr %2462, align 4, !tbaa !5
  br label %2466

2466:                                             ; preds = %2453, %2461, %2423, %2408
  %2467 = icmp eq i32 %2415, %5
  br i1 %2467, label %5537, label %2330, !llvm.loop !843

2468:                                             ; preds = %1864
  %2469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

2470:                                             ; preds = %18
  %2471 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2472 = load ptr, ptr %2471, align 8, !tbaa !9
  %2473 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2474 = load ptr, ptr %2473, align 8, !tbaa !9
  store i32 0, ptr %2474, align 4, !tbaa !5
  %2475 = icmp eq i32 %13, 0
  br i1 %2475, label %2476, label %2480

2476:                                             ; preds = %2470
  %2477 = load i64, ptr %2472, align 8, !tbaa !120
  %2478 = trunc i64 %2477 to i32
  %2479 = tail call i32 @llvm.abs.i32(i32 %2478, i1 true)
  store i32 %2479, ptr %2474, align 4, !tbaa !5
  br label %5537

2480:                                             ; preds = %2470
  switch i32 %1, label %3080 [
    i32 1, label %2481
    i32 0, label %2786
  ]

2481:                                             ; preds = %2480
  %2482 = getelementptr inbounds i32, ptr %3, i64 %19
  %2483 = load i32, ptr %2482, align 4, !tbaa !5
  %2484 = icmp eq i32 %2483, 0
  %2485 = icmp sgt i32 %5, 0
  br i1 %2484, label %2495, label %2486

2486:                                             ; preds = %2481
  br i1 %2485, label %2487, label %5537

2487:                                             ; preds = %2486
  %2488 = icmp sgt i32 %13, 1
  %2489 = icmp sgt i32 %13, 0
  %2490 = add i32 %13, -2
  %2491 = zext i32 %2490 to i64
  %2492 = zext i32 %13 to i64
  %2493 = add nuw i32 %5, 1
  %2494 = icmp eq i32 %13, 1
  br label %2643

2495:                                             ; preds = %2481
  br i1 %2485, label %2496, label %5537

2496:                                             ; preds = %2495
  %2497 = icmp sgt i32 %13, 1
  %2498 = icmp sgt i32 %13, 0
  %2499 = add i32 %13, -2
  %2500 = zext i32 %2499 to i64
  %2501 = zext i32 %13 to i64
  %2502 = add nuw i32 %5, 1
  %2503 = icmp eq i32 %13, 1
  br label %2504

2504:                                             ; preds = %2496, %2641
  %2505 = phi i32 [ 0, %2496 ], [ %2593, %2641 ]
  %2506 = phi double [ 0.000000e+00, %2496 ], [ %2592, %2641 ]
  %2507 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2497, label %2508, label %2577

2508:                                             ; preds = %2504, %2567
  %2509 = phi i32 [ %2576, %2567 ], [ 0, %2504 ]
  %2510 = phi i64 [ %2518, %2567 ], [ %2501, %2504 ]
  %2511 = phi i64 [ %2575, %2567 ], [ %2500, %2504 ]
  %2512 = phi i32 [ %2573, %2567 ], [ %2507, %2504 ]
  %2513 = sub i32 %2499, %2509
  %2514 = tail call i32 @llvm.smin.i32(i32 %2513, i32 0)
  %2515 = sub i32 %2513, %2514
  %2516 = zext i32 %2515 to i64
  %2517 = add nuw nsw i64 %2516, 1
  %2518 = add nsw i64 %2510, -1
  %2519 = icmp ult i32 %2515, 31
  br i1 %2519, label %2555, label %2520

2520:                                             ; preds = %2508
  %2521 = and i64 %2517, 8589934560
  %2522 = sub i64 %2511, %2521
  br label %2523

2523:                                             ; preds = %2523, %2520
  %2524 = phi i64 [ 0, %2520 ], [ %2547, %2523 ]
  %2525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2520 ], [ %2543, %2523 ]
  %2526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2520 ], [ %2544, %2523 ]
  %2527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2520 ], [ %2545, %2523 ]
  %2528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2520 ], [ %2546, %2523 ]
  %2529 = sub i64 %2511, %2524
  %2530 = getelementptr inbounds i32, ptr %9, i64 %2529
  %2531 = getelementptr inbounds i32, ptr %2530, i64 -7
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = getelementptr inbounds i32, ptr %2530, i64 -15
  %2535 = load <8 x i32>, ptr %2534, align 4, !tbaa !5
  %2536 = shufflevector <8 x i32> %2535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2537 = getelementptr inbounds i32, ptr %2530, i64 -23
  %2538 = load <8 x i32>, ptr %2537, align 4, !tbaa !5
  %2539 = shufflevector <8 x i32> %2538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2540 = getelementptr inbounds i32, ptr %2530, i64 -31
  %2541 = load <8 x i32>, ptr %2540, align 4, !tbaa !5
  %2542 = shufflevector <8 x i32> %2541, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2543 = mul <8 x i32> %2533, %2525
  %2544 = mul <8 x i32> %2536, %2526
  %2545 = mul <8 x i32> %2539, %2527
  %2546 = mul <8 x i32> %2542, %2528
  %2547 = add nuw i64 %2524, 32
  %2548 = icmp eq i64 %2547, %2521
  br i1 %2548, label %2549, label %2523, !llvm.loop !844

2549:                                             ; preds = %2523
  %2550 = mul <8 x i32> %2544, %2543
  %2551 = mul <8 x i32> %2545, %2550
  %2552 = mul <8 x i32> %2546, %2551
  %2553 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2552)
  %2554 = icmp eq i64 %2517, %2521
  br i1 %2554, label %2567, label %2555

2555:                                             ; preds = %2508, %2549
  %2556 = phi i64 [ %2511, %2508 ], [ %2522, %2549 ]
  %2557 = phi i32 [ 1, %2508 ], [ %2553, %2549 ]
  br label %2558

2558:                                             ; preds = %2555, %2558
  %2559 = phi i64 [ %2564, %2558 ], [ %2556, %2555 ]
  %2560 = phi i32 [ %2563, %2558 ], [ %2557, %2555 ]
  %2561 = getelementptr inbounds i32, ptr %9, i64 %2559
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2560
  %2564 = add nsw i64 %2559, -1
  %2565 = trunc i64 %2559 to i32
  %2566 = icmp sgt i32 %2565, 0
  br i1 %2566, label %2558, label %2567, !llvm.loop !845

2567:                                             ; preds = %2558, %2549
  %2568 = phi i32 [ %2553, %2549 ], [ %2563, %2558 ]
  %2569 = and i64 %2518, 4294967295
  %2570 = getelementptr inbounds i32, ptr %6, i64 %2569
  %2571 = load i32, ptr %2570, align 4, !tbaa !5
  %2572 = mul nsw i32 %2571, %2568
  %2573 = add nsw i32 %2572, %2512
  %2574 = icmp sgt i64 %2510, 2
  %2575 = add nsw i64 %2511, -1
  %2576 = add i32 %2509, 1
  br i1 %2574, label %2508, label %2577, !llvm.loop !846

2577:                                             ; preds = %2567, %2504
  %2578 = phi i32 [ %2507, %2504 ], [ %2573, %2567 ]
  %2579 = sext i32 %2578 to i64
  %2580 = getelementptr inbounds double, ptr %2, i64 %2579
  %2581 = load double, ptr %2580, align 8, !tbaa !18
  %2582 = getelementptr inbounds i64, ptr %2472, i64 %2579
  %2583 = load i64, ptr %2582, align 8, !tbaa !120
  %2584 = trunc i64 %2583 to i32
  %2585 = load i32, ptr %2474, align 4, !tbaa !5
  %2586 = sitofp i32 %2585 to double
  %2587 = sitofp i32 %2584 to double
  %2588 = fmul fast double %2581, %2587
  %2589 = tail call fast double @llvm.fabs.f64(double %2588)
  %2590 = fadd fast double %2589, %2586
  %2591 = fptosi double %2590 to i32
  store i32 %2591, ptr %2474, align 4, !tbaa !5
  %2592 = fadd fast double %2581, %2506
  %2593 = add nuw nsw i32 %2505, 1
  br i1 %2498, label %2594, label %2641

2594:                                             ; preds = %2577
  %2595 = load i32, ptr %4, align 4, !tbaa !5
  %2596 = load i32, ptr %12, align 4, !tbaa !5
  %2597 = add nsw i32 %2596, -1
  %2598 = icmp slt i32 %2595, %2597
  br i1 %2598, label %2618, label %2599

2599:                                             ; preds = %2594
  %2600 = icmp eq i32 %2595, %2597
  br i1 %2600, label %2601, label %2634

2601:                                             ; preds = %2599
  store i32 0, ptr %4, align 4, !tbaa !5
  %2602 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2602, ptr %6, align 4, !tbaa !5
  br i1 %2503, label %2641, label %2603

2603:                                             ; preds = %2601, %2628
  %2604 = phi i64 [ %2632, %2628 ], [ 1, %2601 ]
  %2605 = getelementptr inbounds i32, ptr %4, i64 %2604
  %2606 = load i32, ptr %2605, align 4, !tbaa !5
  %2607 = getelementptr inbounds i32, ptr %12, i64 %2604
  %2608 = load i32, ptr %2607, align 4, !tbaa !5
  %2609 = add nsw i32 %2608, -1
  %2610 = icmp slt i32 %2606, %2609
  br i1 %2610, label %2611, label %2626

2611:                                             ; preds = %2603
  br i1 %2598, label %2618, label %2612

2612:                                             ; preds = %2611
  %2613 = getelementptr inbounds i32, ptr %7, i64 %2604
  %2614 = load i32, ptr %2613, align 4, !tbaa !5
  %2615 = getelementptr inbounds i32, ptr %6, i64 %2604
  %2616 = load i32, ptr %2615, align 4, !tbaa !5
  %2617 = add nsw i32 %2616, %2614
  store i32 %2617, ptr %2615, align 4, !tbaa !5
  br label %2636

2618:                                             ; preds = %2594, %2611
  %2619 = phi i32 [ %2606, %2611 ], [ %2595, %2594 ]
  %2620 = phi ptr [ %2605, %2611 ], [ %4, %2594 ]
  %2621 = phi i64 [ %2604, %2611 ], [ 0, %2594 ]
  %2622 = add nsw i32 %2619, 1
  store i32 %2622, ptr %2620, align 4, !tbaa !5
  %2623 = getelementptr inbounds i32, ptr %7, i64 %2621
  %2624 = load i32, ptr %2623, align 4, !tbaa !5
  %2625 = getelementptr inbounds i32, ptr %6, i64 %2621
  br label %2636

2626:                                             ; preds = %2603
  %2627 = icmp eq i32 %2606, %2609
  br i1 %2627, label %2628, label %2634

2628:                                             ; preds = %2626
  store i32 0, ptr %2605, align 4, !tbaa !5
  %2629 = getelementptr inbounds i32, ptr %8, i64 %2604
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = getelementptr inbounds i32, ptr %6, i64 %2604
  store i32 %2630, ptr %2631, align 4, !tbaa !5
  %2632 = add nuw nsw i64 %2604, 1
  %2633 = icmp eq i64 %2632, %2501
  br i1 %2633, label %2641, label %2603, !llvm.loop !847

2634:                                             ; preds = %2599, %2626
  %2635 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2636:                                             ; preds = %2612, %2618
  %2637 = phi ptr [ %2625, %2618 ], [ %2605, %2612 ]
  %2638 = phi i32 [ %2624, %2618 ], [ 1, %2612 ]
  %2639 = load i32, ptr %2637, align 4, !tbaa !5
  %2640 = add nsw i32 %2639, %2638
  store i32 %2640, ptr %2637, align 4, !tbaa !5
  br label %2641

2641:                                             ; preds = %2628, %2636, %2601, %2577
  %2642 = icmp eq i32 %2593, %5
  br i1 %2642, label %5537, label %2504, !llvm.loop !848

2643:                                             ; preds = %2487, %2784
  %2644 = phi i32 [ 0, %2487 ], [ %2733, %2784 ]
  %2645 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2646, label %2715

2646:                                             ; preds = %2643, %2705
  %2647 = phi i32 [ %2714, %2705 ], [ 0, %2643 ]
  %2648 = phi i64 [ %2656, %2705 ], [ %2492, %2643 ]
  %2649 = phi i64 [ %2713, %2705 ], [ %2491, %2643 ]
  %2650 = phi i32 [ %2711, %2705 ], [ %2645, %2643 ]
  %2651 = sub i32 %2490, %2647
  %2652 = tail call i32 @llvm.smin.i32(i32 %2651, i32 0)
  %2653 = sub i32 %2651, %2652
  %2654 = zext i32 %2653 to i64
  %2655 = add nuw nsw i64 %2654, 1
  %2656 = add nsw i64 %2648, -1
  %2657 = icmp ult i32 %2653, 31
  br i1 %2657, label %2693, label %2658

2658:                                             ; preds = %2646
  %2659 = and i64 %2655, 8589934560
  %2660 = sub i64 %2649, %2659
  br label %2661

2661:                                             ; preds = %2661, %2658
  %2662 = phi i64 [ 0, %2658 ], [ %2685, %2661 ]
  %2663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2658 ], [ %2681, %2661 ]
  %2664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2658 ], [ %2682, %2661 ]
  %2665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2658 ], [ %2683, %2661 ]
  %2666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2658 ], [ %2684, %2661 ]
  %2667 = sub i64 %2649, %2662
  %2668 = getelementptr inbounds i32, ptr %11, i64 %2667
  %2669 = getelementptr inbounds i32, ptr %2668, i64 -7
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !5
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = getelementptr inbounds i32, ptr %2668, i64 -15
  %2673 = load <8 x i32>, ptr %2672, align 4, !tbaa !5
  %2674 = shufflevector <8 x i32> %2673, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2675 = getelementptr inbounds i32, ptr %2668, i64 -23
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !5
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = getelementptr inbounds i32, ptr %2668, i64 -31
  %2679 = load <8 x i32>, ptr %2678, align 4, !tbaa !5
  %2680 = shufflevector <8 x i32> %2679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2681 = mul <8 x i32> %2671, %2663
  %2682 = mul <8 x i32> %2674, %2664
  %2683 = mul <8 x i32> %2677, %2665
  %2684 = mul <8 x i32> %2680, %2666
  %2685 = add nuw i64 %2662, 32
  %2686 = icmp eq i64 %2685, %2659
  br i1 %2686, label %2687, label %2661, !llvm.loop !849

2687:                                             ; preds = %2661
  %2688 = mul <8 x i32> %2682, %2681
  %2689 = mul <8 x i32> %2683, %2688
  %2690 = mul <8 x i32> %2684, %2689
  %2691 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2690)
  %2692 = icmp eq i64 %2655, %2659
  br i1 %2692, label %2705, label %2693

2693:                                             ; preds = %2646, %2687
  %2694 = phi i64 [ %2649, %2646 ], [ %2660, %2687 ]
  %2695 = phi i32 [ 1, %2646 ], [ %2691, %2687 ]
  br label %2696

2696:                                             ; preds = %2693, %2696
  %2697 = phi i64 [ %2702, %2696 ], [ %2694, %2693 ]
  %2698 = phi i32 [ %2701, %2696 ], [ %2695, %2693 ]
  %2699 = getelementptr inbounds i32, ptr %11, i64 %2697
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = mul nsw i32 %2700, %2698
  %2702 = add nsw i64 %2697, -1
  %2703 = trunc i64 %2697 to i32
  %2704 = icmp sgt i32 %2703, 0
  br i1 %2704, label %2696, label %2705, !llvm.loop !850

2705:                                             ; preds = %2696, %2687
  %2706 = phi i32 [ %2691, %2687 ], [ %2701, %2696 ]
  %2707 = and i64 %2656, 4294967295
  %2708 = getelementptr inbounds i32, ptr %6, i64 %2707
  %2709 = load i32, ptr %2708, align 4, !tbaa !5
  %2710 = mul nsw i32 %2709, %2706
  %2711 = add nsw i32 %2710, %2650
  %2712 = icmp sgt i64 %2648, 2
  %2713 = add nsw i64 %2649, -1
  %2714 = add i32 %2647, 1
  br i1 %2712, label %2646, label %2715, !llvm.loop !851

2715:                                             ; preds = %2705, %2643
  %2716 = phi i32 [ %2645, %2643 ], [ %2711, %2705 ]
  %2717 = icmp slt i32 %2716, %5
  br i1 %2717, label %2720, label %2718

2718:                                             ; preds = %2715
  %2719 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

2720:                                             ; preds = %2715
  %2721 = sext i32 %2716 to i64
  %2722 = getelementptr inbounds i64, ptr %2472, i64 %2721
  %2723 = load i64, ptr %2722, align 8, !tbaa !120
  %2724 = trunc i64 %2723 to i32
  %2725 = load i32, ptr %2474, align 4, !tbaa !5
  %2726 = sitofp i32 %2725 to double
  %2727 = sitofp i32 %2724 to double
  %2728 = icmp slt i32 %2724, 0
  %2729 = fneg fast double %2727
  %2730 = select fast i1 %2728, double %2729, double %2727
  %2731 = fadd fast double %2730, %2726
  %2732 = fptosi double %2731 to i32
  store i32 %2732, ptr %2474, align 4, !tbaa !5
  %2733 = add nuw nsw i32 %2644, 1
  br i1 %2489, label %2734, label %2784

2734:                                             ; preds = %2720
  %2735 = load i32, ptr %4, align 4, !tbaa !5
  %2736 = load i32, ptr %12, align 4, !tbaa !5
  %2737 = add nsw i32 %2736, -1
  %2738 = icmp slt i32 %2735, %2737
  br i1 %2738, label %2761, label %2739

2739:                                             ; preds = %2734
  %2740 = icmp eq i32 %2735, %2737
  br i1 %2740, label %2741, label %2777

2741:                                             ; preds = %2739
  store i32 0, ptr %4, align 4, !tbaa !5
  %2742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2742, ptr %6, align 4, !tbaa !5
  br i1 %2494, label %2784, label %2743

2743:                                             ; preds = %2741, %2771
  %2744 = phi i64 [ %2775, %2771 ], [ 1, %2741 ]
  %2745 = getelementptr inbounds i32, ptr %4, i64 %2744
  %2746 = load i32, ptr %2745, align 4, !tbaa !5
  %2747 = getelementptr inbounds i32, ptr %12, i64 %2744
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = add nsw i32 %2748, -1
  %2750 = icmp slt i32 %2746, %2749
  br i1 %2750, label %2751, label %2769

2751:                                             ; preds = %2743
  br i1 %2738, label %2761, label %2752

2752:                                             ; preds = %2751
  %2753 = shl i64 %2744, 32
  %2754 = add i64 %2753, -4294967296
  %2755 = ashr exact i64 %2754, 32
  %2756 = getelementptr inbounds i32, ptr %7, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %6, i64 %2744
  %2759 = load i32, ptr %2758, align 4, !tbaa !5
  %2760 = add nsw i32 %2759, %2757
  store i32 %2760, ptr %2758, align 4, !tbaa !5
  br label %2779

2761:                                             ; preds = %2734, %2751
  %2762 = phi i32 [ %2746, %2751 ], [ %2735, %2734 ]
  %2763 = phi ptr [ %2745, %2751 ], [ %4, %2734 ]
  %2764 = phi i64 [ %2744, %2751 ], [ 0, %2734 ]
  %2765 = add nsw i32 %2762, 1
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  %2766 = getelementptr inbounds i32, ptr %7, i64 %2764
  %2767 = load i32, ptr %2766, align 4, !tbaa !5
  %2768 = getelementptr inbounds i32, ptr %6, i64 %2764
  br label %2779

2769:                                             ; preds = %2743
  %2770 = icmp eq i32 %2746, %2749
  br i1 %2770, label %2771, label %2777

2771:                                             ; preds = %2769
  store i32 0, ptr %2745, align 4, !tbaa !5
  %2772 = getelementptr inbounds i32, ptr %8, i64 %2744
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = getelementptr inbounds i32, ptr %6, i64 %2744
  store i32 %2773, ptr %2774, align 4, !tbaa !5
  %2775 = add nuw nsw i64 %2744, 1
  %2776 = icmp eq i64 %2775, %2492
  br i1 %2776, label %2784, label %2743, !llvm.loop !852

2777:                                             ; preds = %2739, %2769
  %2778 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2779:                                             ; preds = %2752, %2761
  %2780 = phi ptr [ %2768, %2761 ], [ %2745, %2752 ]
  %2781 = phi i32 [ %2767, %2761 ], [ 1, %2752 ]
  %2782 = load i32, ptr %2780, align 4, !tbaa !5
  %2783 = add nsw i32 %2782, %2781
  store i32 %2783, ptr %2780, align 4, !tbaa !5
  br label %2784

2784:                                             ; preds = %2771, %2779, %2741, %2720
  %2785 = icmp eq i32 %2733, %5
  br i1 %2785, label %5537, label %2643, !llvm.loop !853

2786:                                             ; preds = %2480
  %2787 = getelementptr inbounds i32, ptr %3, i64 %19
  %2788 = load i32, ptr %2787, align 4, !tbaa !5
  %2789 = icmp eq i32 %2788, 0
  %2790 = icmp sgt i32 %5, 0
  br i1 %2789, label %2800, label %2791

2791:                                             ; preds = %2786
  br i1 %2790, label %2792, label %5537

2792:                                             ; preds = %2791
  %2793 = icmp sgt i32 %13, 1
  %2794 = icmp sgt i32 %13, 0
  %2795 = add i32 %13, -2
  %2796 = zext i32 %2795 to i64
  %2797 = zext i32 %13 to i64
  %2798 = add nuw i32 %5, 1
  %2799 = icmp eq i32 %13, 1
  br label %2942

2800:                                             ; preds = %2786
  br i1 %2790, label %2801, label %5537

2801:                                             ; preds = %2800
  %2802 = icmp sgt i32 %13, 1
  %2803 = icmp sgt i32 %13, 0
  %2804 = add i32 %13, -2
  %2805 = zext i32 %2804 to i64
  %2806 = zext i32 %13 to i64
  %2807 = add nuw i32 %5, 1
  %2808 = icmp eq i32 %13, 1
  br label %2809

2809:                                             ; preds = %2801, %2940
  %2810 = phi i32 [ 0, %2801 ], [ %2892, %2940 ]
  %2811 = phi double [ 0.000000e+00, %2801 ], [ %2891, %2940 ]
  %2812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2802, label %2813, label %2882

2813:                                             ; preds = %2809, %2872
  %2814 = phi i32 [ %2881, %2872 ], [ 0, %2809 ]
  %2815 = phi i64 [ %2823, %2872 ], [ %2806, %2809 ]
  %2816 = phi i64 [ %2880, %2872 ], [ %2805, %2809 ]
  %2817 = phi i32 [ %2878, %2872 ], [ %2812, %2809 ]
  %2818 = sub i32 %2804, %2814
  %2819 = tail call i32 @llvm.smin.i32(i32 %2818, i32 0)
  %2820 = sub i32 %2818, %2819
  %2821 = zext i32 %2820 to i64
  %2822 = add nuw nsw i64 %2821, 1
  %2823 = add nsw i64 %2815, -1
  %2824 = icmp ult i32 %2820, 31
  br i1 %2824, label %2860, label %2825

2825:                                             ; preds = %2813
  %2826 = and i64 %2822, 8589934560
  %2827 = sub i64 %2816, %2826
  br label %2828

2828:                                             ; preds = %2828, %2825
  %2829 = phi i64 [ 0, %2825 ], [ %2852, %2828 ]
  %2830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2848, %2828 ]
  %2831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2849, %2828 ]
  %2832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2850, %2828 ]
  %2833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2851, %2828 ]
  %2834 = sub i64 %2816, %2829
  %2835 = getelementptr inbounds i32, ptr %9, i64 %2834
  %2836 = getelementptr inbounds i32, ptr %2835, i64 -7
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = getelementptr inbounds i32, ptr %2835, i64 -15
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !5
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = getelementptr inbounds i32, ptr %2835, i64 -23
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !5
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2835, i64 -31
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !5
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = mul <8 x i32> %2838, %2830
  %2849 = mul <8 x i32> %2841, %2831
  %2850 = mul <8 x i32> %2844, %2832
  %2851 = mul <8 x i32> %2847, %2833
  %2852 = add nuw i64 %2829, 32
  %2853 = icmp eq i64 %2852, %2826
  br i1 %2853, label %2854, label %2828, !llvm.loop !854

2854:                                             ; preds = %2828
  %2855 = mul <8 x i32> %2849, %2848
  %2856 = mul <8 x i32> %2850, %2855
  %2857 = mul <8 x i32> %2851, %2856
  %2858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2857)
  %2859 = icmp eq i64 %2822, %2826
  br i1 %2859, label %2872, label %2860

2860:                                             ; preds = %2813, %2854
  %2861 = phi i64 [ %2816, %2813 ], [ %2827, %2854 ]
  %2862 = phi i32 [ 1, %2813 ], [ %2858, %2854 ]
  br label %2863

2863:                                             ; preds = %2860, %2863
  %2864 = phi i64 [ %2869, %2863 ], [ %2861, %2860 ]
  %2865 = phi i32 [ %2868, %2863 ], [ %2862, %2860 ]
  %2866 = getelementptr inbounds i32, ptr %9, i64 %2864
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = mul nsw i32 %2867, %2865
  %2869 = add nsw i64 %2864, -1
  %2870 = trunc i64 %2864 to i32
  %2871 = icmp sgt i32 %2870, 0
  br i1 %2871, label %2863, label %2872, !llvm.loop !855

2872:                                             ; preds = %2863, %2854
  %2873 = phi i32 [ %2858, %2854 ], [ %2868, %2863 ]
  %2874 = and i64 %2823, 4294967295
  %2875 = getelementptr inbounds i32, ptr %6, i64 %2874
  %2876 = load i32, ptr %2875, align 4, !tbaa !5
  %2877 = mul nsw i32 %2876, %2873
  %2878 = add nsw i32 %2877, %2817
  %2879 = icmp sgt i64 %2815, 2
  %2880 = add nsw i64 %2816, -1
  %2881 = add i32 %2814, 1
  br i1 %2879, label %2813, label %2882, !llvm.loop !856

2882:                                             ; preds = %2872, %2809
  %2883 = phi i32 [ %2812, %2809 ], [ %2878, %2872 ]
  %2884 = sext i32 %2883 to i64
  %2885 = getelementptr inbounds i64, ptr %2472, i64 %2884
  %2886 = load i64, ptr %2885, align 8, !tbaa !120
  %2887 = trunc i64 %2886 to i32
  %2888 = load i32, ptr %2474, align 4, !tbaa !5
  %2889 = tail call i32 @llvm.abs.i32(i32 %2887, i1 true)
  %2890 = add nsw i32 %2889, %2888
  store i32 %2890, ptr %2474, align 4, !tbaa !5
  %2891 = fadd fast double %2811, 1.000000e+00
  %2892 = add nuw nsw i32 %2810, 1
  br i1 %2803, label %2893, label %2940

2893:                                             ; preds = %2882
  %2894 = load i32, ptr %4, align 4, !tbaa !5
  %2895 = load i32, ptr %12, align 4, !tbaa !5
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2894, %2896
  br i1 %2897, label %2917, label %2898

2898:                                             ; preds = %2893
  %2899 = icmp eq i32 %2894, %2896
  br i1 %2899, label %2900, label %2933

2900:                                             ; preds = %2898
  store i32 0, ptr %4, align 4, !tbaa !5
  %2901 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2901, ptr %6, align 4, !tbaa !5
  br i1 %2808, label %2940, label %2902

2902:                                             ; preds = %2900, %2927
  %2903 = phi i64 [ %2931, %2927 ], [ 1, %2900 ]
  %2904 = getelementptr inbounds i32, ptr %4, i64 %2903
  %2905 = load i32, ptr %2904, align 4, !tbaa !5
  %2906 = getelementptr inbounds i32, ptr %12, i64 %2903
  %2907 = load i32, ptr %2906, align 4, !tbaa !5
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2905, %2908
  br i1 %2909, label %2910, label %2925

2910:                                             ; preds = %2902
  br i1 %2897, label %2917, label %2911

2911:                                             ; preds = %2910
  %2912 = getelementptr inbounds i32, ptr %7, i64 %2903
  %2913 = load i32, ptr %2912, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %6, i64 %2903
  %2915 = load i32, ptr %2914, align 4, !tbaa !5
  %2916 = add nsw i32 %2915, %2913
  store i32 %2916, ptr %2914, align 4, !tbaa !5
  br label %2935

2917:                                             ; preds = %2893, %2910
  %2918 = phi i32 [ %2905, %2910 ], [ %2894, %2893 ]
  %2919 = phi ptr [ %2904, %2910 ], [ %4, %2893 ]
  %2920 = phi i64 [ %2903, %2910 ], [ 0, %2893 ]
  %2921 = add nsw i32 %2918, 1
  store i32 %2921, ptr %2919, align 4, !tbaa !5
  %2922 = getelementptr inbounds i32, ptr %7, i64 %2920
  %2923 = load i32, ptr %2922, align 4, !tbaa !5
  %2924 = getelementptr inbounds i32, ptr %6, i64 %2920
  br label %2935

2925:                                             ; preds = %2902
  %2926 = icmp eq i32 %2905, %2908
  br i1 %2926, label %2927, label %2933

2927:                                             ; preds = %2925
  store i32 0, ptr %2904, align 4, !tbaa !5
  %2928 = getelementptr inbounds i32, ptr %8, i64 %2903
  %2929 = load i32, ptr %2928, align 4, !tbaa !5
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2903
  store i32 %2929, ptr %2930, align 4, !tbaa !5
  %2931 = add nuw nsw i64 %2903, 1
  %2932 = icmp eq i64 %2931, %2806
  br i1 %2932, label %2940, label %2902, !llvm.loop !857

2933:                                             ; preds = %2898, %2925
  %2934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

2935:                                             ; preds = %2911, %2917
  %2936 = phi ptr [ %2924, %2917 ], [ %2904, %2911 ]
  %2937 = phi i32 [ %2923, %2917 ], [ 1, %2911 ]
  %2938 = load i32, ptr %2936, align 4, !tbaa !5
  %2939 = add nsw i32 %2938, %2937
  store i32 %2939, ptr %2936, align 4, !tbaa !5
  br label %2940

2940:                                             ; preds = %2927, %2935, %2900, %2882
  %2941 = icmp eq i32 %2892, %5
  br i1 %2941, label %5537, label %2809, !llvm.loop !858

2942:                                             ; preds = %2792, %3078
  %2943 = phi i32 [ 0, %2792 ], [ %3027, %3078 ]
  %2944 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2945, label %3014

2945:                                             ; preds = %2942, %3004
  %2946 = phi i32 [ %3013, %3004 ], [ 0, %2942 ]
  %2947 = phi i64 [ %2955, %3004 ], [ %2797, %2942 ]
  %2948 = phi i64 [ %3012, %3004 ], [ %2796, %2942 ]
  %2949 = phi i32 [ %3010, %3004 ], [ %2944, %2942 ]
  %2950 = sub i32 %2795, %2946
  %2951 = tail call i32 @llvm.smin.i32(i32 %2950, i32 0)
  %2952 = sub i32 %2950, %2951
  %2953 = zext i32 %2952 to i64
  %2954 = add nuw nsw i64 %2953, 1
  %2955 = add nsw i64 %2947, -1
  %2956 = icmp ult i32 %2952, 31
  br i1 %2956, label %2992, label %2957

2957:                                             ; preds = %2945
  %2958 = and i64 %2954, 8589934560
  %2959 = sub i64 %2948, %2958
  br label %2960

2960:                                             ; preds = %2960, %2957
  %2961 = phi i64 [ 0, %2957 ], [ %2984, %2960 ]
  %2962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2980, %2960 ]
  %2963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2981, %2960 ]
  %2964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2982, %2960 ]
  %2965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2983, %2960 ]
  %2966 = sub i64 %2948, %2961
  %2967 = getelementptr inbounds i32, ptr %11, i64 %2966
  %2968 = getelementptr inbounds i32, ptr %2967, i64 -7
  %2969 = load <8 x i32>, ptr %2968, align 4, !tbaa !5
  %2970 = shufflevector <8 x i32> %2969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2971 = getelementptr inbounds i32, ptr %2967, i64 -15
  %2972 = load <8 x i32>, ptr %2971, align 4, !tbaa !5
  %2973 = shufflevector <8 x i32> %2972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2974 = getelementptr inbounds i32, ptr %2967, i64 -23
  %2975 = load <8 x i32>, ptr %2974, align 4, !tbaa !5
  %2976 = shufflevector <8 x i32> %2975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2977 = getelementptr inbounds i32, ptr %2967, i64 -31
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !5
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = mul <8 x i32> %2970, %2962
  %2981 = mul <8 x i32> %2973, %2963
  %2982 = mul <8 x i32> %2976, %2964
  %2983 = mul <8 x i32> %2979, %2965
  %2984 = add nuw i64 %2961, 32
  %2985 = icmp eq i64 %2984, %2958
  br i1 %2985, label %2986, label %2960, !llvm.loop !859

2986:                                             ; preds = %2960
  %2987 = mul <8 x i32> %2981, %2980
  %2988 = mul <8 x i32> %2982, %2987
  %2989 = mul <8 x i32> %2983, %2988
  %2990 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2989)
  %2991 = icmp eq i64 %2954, %2958
  br i1 %2991, label %3004, label %2992

2992:                                             ; preds = %2945, %2986
  %2993 = phi i64 [ %2948, %2945 ], [ %2959, %2986 ]
  %2994 = phi i32 [ 1, %2945 ], [ %2990, %2986 ]
  br label %2995

2995:                                             ; preds = %2992, %2995
  %2996 = phi i64 [ %3001, %2995 ], [ %2993, %2992 ]
  %2997 = phi i32 [ %3000, %2995 ], [ %2994, %2992 ]
  %2998 = getelementptr inbounds i32, ptr %11, i64 %2996
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = mul nsw i32 %2999, %2997
  %3001 = add nsw i64 %2996, -1
  %3002 = trunc i64 %2996 to i32
  %3003 = icmp sgt i32 %3002, 0
  br i1 %3003, label %2995, label %3004, !llvm.loop !860

3004:                                             ; preds = %2995, %2986
  %3005 = phi i32 [ %2990, %2986 ], [ %3000, %2995 ]
  %3006 = and i64 %2955, 4294967295
  %3007 = getelementptr inbounds i32, ptr %6, i64 %3006
  %3008 = load i32, ptr %3007, align 4, !tbaa !5
  %3009 = mul nsw i32 %3008, %3005
  %3010 = add nsw i32 %3009, %2949
  %3011 = icmp sgt i64 %2947, 2
  %3012 = add nsw i64 %2948, -1
  %3013 = add i32 %2946, 1
  br i1 %3011, label %2945, label %3014, !llvm.loop !861

3014:                                             ; preds = %3004, %2942
  %3015 = phi i32 [ %2944, %2942 ], [ %3010, %3004 ]
  %3016 = icmp slt i32 %3015, %5
  br i1 %3016, label %3019, label %3017

3017:                                             ; preds = %3014
  %3018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

3019:                                             ; preds = %3014
  %3020 = sext i32 %3015 to i64
  %3021 = getelementptr inbounds i64, ptr %2472, i64 %3020
  %3022 = load i64, ptr %3021, align 8, !tbaa !120
  %3023 = trunc i64 %3022 to i32
  %3024 = load i32, ptr %2474, align 4, !tbaa !5
  %3025 = tail call i32 @llvm.abs.i32(i32 %3023, i1 true)
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %2474, align 4, !tbaa !5
  %3027 = add nuw nsw i32 %2943, 1
  br i1 %2794, label %3028, label %3078

3028:                                             ; preds = %3019
  %3029 = load i32, ptr %4, align 4, !tbaa !5
  %3030 = load i32, ptr %12, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, -1
  %3032 = icmp slt i32 %3029, %3031
  br i1 %3032, label %3055, label %3033

3033:                                             ; preds = %3028
  %3034 = icmp eq i32 %3029, %3031
  br i1 %3034, label %3035, label %3071

3035:                                             ; preds = %3033
  store i32 0, ptr %4, align 4, !tbaa !5
  %3036 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3036, ptr %6, align 4, !tbaa !5
  br i1 %2799, label %3078, label %3037

3037:                                             ; preds = %3035, %3065
  %3038 = phi i64 [ %3069, %3065 ], [ 1, %3035 ]
  %3039 = getelementptr inbounds i32, ptr %4, i64 %3038
  %3040 = load i32, ptr %3039, align 4, !tbaa !5
  %3041 = getelementptr inbounds i32, ptr %12, i64 %3038
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = add nsw i32 %3042, -1
  %3044 = icmp slt i32 %3040, %3043
  br i1 %3044, label %3045, label %3063

3045:                                             ; preds = %3037
  br i1 %3032, label %3055, label %3046

3046:                                             ; preds = %3045
  %3047 = shl i64 %3038, 32
  %3048 = add i64 %3047, -4294967296
  %3049 = ashr exact i64 %3048, 32
  %3050 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3051 = load i32, ptr %3050, align 4, !tbaa !5
  %3052 = getelementptr inbounds i32, ptr %6, i64 %3038
  %3053 = load i32, ptr %3052, align 4, !tbaa !5
  %3054 = add nsw i32 %3053, %3051
  store i32 %3054, ptr %3052, align 4, !tbaa !5
  br label %3073

3055:                                             ; preds = %3028, %3045
  %3056 = phi i32 [ %3040, %3045 ], [ %3029, %3028 ]
  %3057 = phi ptr [ %3039, %3045 ], [ %4, %3028 ]
  %3058 = phi i64 [ %3038, %3045 ], [ 0, %3028 ]
  %3059 = add nsw i32 %3056, 1
  store i32 %3059, ptr %3057, align 4, !tbaa !5
  %3060 = getelementptr inbounds i32, ptr %7, i64 %3058
  %3061 = load i32, ptr %3060, align 4, !tbaa !5
  %3062 = getelementptr inbounds i32, ptr %6, i64 %3058
  br label %3073

3063:                                             ; preds = %3037
  %3064 = icmp eq i32 %3040, %3043
  br i1 %3064, label %3065, label %3071

3065:                                             ; preds = %3063
  store i32 0, ptr %3039, align 4, !tbaa !5
  %3066 = getelementptr inbounds i32, ptr %8, i64 %3038
  %3067 = load i32, ptr %3066, align 4, !tbaa !5
  %3068 = getelementptr inbounds i32, ptr %6, i64 %3038
  store i32 %3067, ptr %3068, align 4, !tbaa !5
  %3069 = add nuw nsw i64 %3038, 1
  %3070 = icmp eq i64 %3069, %2797
  br i1 %3070, label %3078, label %3037, !llvm.loop !862

3071:                                             ; preds = %3033, %3063
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3073:                                             ; preds = %3046, %3055
  %3074 = phi ptr [ %3062, %3055 ], [ %3039, %3046 ]
  %3075 = phi i32 [ %3061, %3055 ], [ 1, %3046 ]
  %3076 = load i32, ptr %3074, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, %3075
  store i32 %3077, ptr %3074, align 4, !tbaa !5
  br label %3078

3078:                                             ; preds = %3065, %3073, %3035, %3019
  %3079 = icmp eq i32 %3027, %5
  br i1 %3079, label %5537, label %2942, !llvm.loop !863

3080:                                             ; preds = %2480
  %3081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

3082:                                             ; preds = %18
  %3083 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3084 = load ptr, ptr %3083, align 8, !tbaa !9
  %3085 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3086 = load ptr, ptr %3085, align 8, !tbaa !9
  store i64 0, ptr %3086, align 8, !tbaa !120
  %3087 = icmp eq i32 %13, 0
  br i1 %3087, label %3088, label %3091

3088:                                             ; preds = %3082
  %3089 = load i64, ptr %3084, align 8, !tbaa !120
  %3090 = tail call i64 @llvm.abs.i64(i64 %3089, i1 true)
  store i64 %3090, ptr %3086, align 8, !tbaa !120
  br label %5537

3091:                                             ; preds = %3082
  switch i32 %1, label %3687 [
    i32 1, label %3092
    i32 0, label %3395
  ]

3092:                                             ; preds = %3091
  %3093 = getelementptr inbounds i32, ptr %3, i64 %19
  %3094 = load i32, ptr %3093, align 4, !tbaa !5
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp sgt i32 %5, 0
  br i1 %3095, label %3106, label %3097

3097:                                             ; preds = %3092
  br i1 %3096, label %3098, label %5537

3098:                                             ; preds = %3097
  %3099 = icmp sgt i32 %13, 1
  %3100 = icmp sgt i32 %13, 0
  %3101 = add i32 %13, -2
  %3102 = zext i32 %3101 to i64
  %3103 = zext i32 %13 to i64
  %3104 = add nuw i32 %5, 1
  %3105 = icmp eq i32 %13, 1
  br label %3253

3106:                                             ; preds = %3092
  br i1 %3096, label %3107, label %5537

3107:                                             ; preds = %3106
  %3108 = icmp sgt i32 %13, 1
  %3109 = icmp sgt i32 %13, 0
  %3110 = add i32 %13, -2
  %3111 = zext i32 %3110 to i64
  %3112 = zext i32 %13 to i64
  %3113 = add nuw i32 %5, 1
  %3114 = icmp eq i32 %13, 1
  br label %3115

3115:                                             ; preds = %3107, %3251
  %3116 = phi i64 [ 0, %3107 ], [ %3201, %3251 ]
  %3117 = phi i32 [ 0, %3107 ], [ %3203, %3251 ]
  %3118 = phi double [ 0.000000e+00, %3107 ], [ %3202, %3251 ]
  %3119 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3108, label %3120, label %3189

3120:                                             ; preds = %3115, %3179
  %3121 = phi i32 [ %3188, %3179 ], [ 0, %3115 ]
  %3122 = phi i64 [ %3130, %3179 ], [ %3112, %3115 ]
  %3123 = phi i64 [ %3187, %3179 ], [ %3111, %3115 ]
  %3124 = phi i32 [ %3185, %3179 ], [ %3119, %3115 ]
  %3125 = sub i32 %3110, %3121
  %3126 = tail call i32 @llvm.smin.i32(i32 %3125, i32 0)
  %3127 = sub i32 %3125, %3126
  %3128 = zext i32 %3127 to i64
  %3129 = add nuw nsw i64 %3128, 1
  %3130 = add nsw i64 %3122, -1
  %3131 = icmp ult i32 %3127, 31
  br i1 %3131, label %3167, label %3132

3132:                                             ; preds = %3120
  %3133 = and i64 %3129, 8589934560
  %3134 = sub i64 %3123, %3133
  br label %3135

3135:                                             ; preds = %3135, %3132
  %3136 = phi i64 [ 0, %3132 ], [ %3159, %3135 ]
  %3137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3155, %3135 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3156, %3135 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3157, %3135 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3158, %3135 ]
  %3141 = sub i64 %3123, %3136
  %3142 = getelementptr inbounds i32, ptr %9, i64 %3141
  %3143 = getelementptr inbounds i32, ptr %3142, i64 -7
  %3144 = load <8 x i32>, ptr %3143, align 4, !tbaa !5
  %3145 = shufflevector <8 x i32> %3144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3146 = getelementptr inbounds i32, ptr %3142, i64 -15
  %3147 = load <8 x i32>, ptr %3146, align 4, !tbaa !5
  %3148 = shufflevector <8 x i32> %3147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3149 = getelementptr inbounds i32, ptr %3142, i64 -23
  %3150 = load <8 x i32>, ptr %3149, align 4, !tbaa !5
  %3151 = shufflevector <8 x i32> %3150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3152 = getelementptr inbounds i32, ptr %3142, i64 -31
  %3153 = load <8 x i32>, ptr %3152, align 4, !tbaa !5
  %3154 = shufflevector <8 x i32> %3153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3155 = mul <8 x i32> %3145, %3137
  %3156 = mul <8 x i32> %3148, %3138
  %3157 = mul <8 x i32> %3151, %3139
  %3158 = mul <8 x i32> %3154, %3140
  %3159 = add nuw i64 %3136, 32
  %3160 = icmp eq i64 %3159, %3133
  br i1 %3160, label %3161, label %3135, !llvm.loop !864

3161:                                             ; preds = %3135
  %3162 = mul <8 x i32> %3156, %3155
  %3163 = mul <8 x i32> %3157, %3162
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3164)
  %3166 = icmp eq i64 %3129, %3133
  br i1 %3166, label %3179, label %3167

3167:                                             ; preds = %3120, %3161
  %3168 = phi i64 [ %3123, %3120 ], [ %3134, %3161 ]
  %3169 = phi i32 [ 1, %3120 ], [ %3165, %3161 ]
  br label %3170

3170:                                             ; preds = %3167, %3170
  %3171 = phi i64 [ %3176, %3170 ], [ %3168, %3167 ]
  %3172 = phi i32 [ %3175, %3170 ], [ %3169, %3167 ]
  %3173 = getelementptr inbounds i32, ptr %9, i64 %3171
  %3174 = load i32, ptr %3173, align 4, !tbaa !5
  %3175 = mul nsw i32 %3174, %3172
  %3176 = add nsw i64 %3171, -1
  %3177 = trunc i64 %3171 to i32
  %3178 = icmp sgt i32 %3177, 0
  br i1 %3178, label %3170, label %3179, !llvm.loop !865

3179:                                             ; preds = %3170, %3161
  %3180 = phi i32 [ %3165, %3161 ], [ %3175, %3170 ]
  %3181 = and i64 %3130, 4294967295
  %3182 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = mul nsw i32 %3183, %3180
  %3185 = add nsw i32 %3184, %3124
  %3186 = icmp sgt i64 %3122, 2
  %3187 = add nsw i64 %3123, -1
  %3188 = add i32 %3121, 1
  br i1 %3186, label %3120, label %3189, !llvm.loop !866

3189:                                             ; preds = %3179, %3115
  %3190 = phi i32 [ %3119, %3115 ], [ %3185, %3179 ]
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds double, ptr %2, i64 %3191
  %3193 = load double, ptr %3192, align 8, !tbaa !18
  %3194 = getelementptr inbounds i64, ptr %3084, i64 %3191
  %3195 = load i64, ptr %3194, align 8, !tbaa !120
  %3196 = sitofp i64 %3116 to double
  %3197 = sitofp i64 %3195 to double
  %3198 = fmul fast double %3193, %3197
  %3199 = tail call fast double @llvm.fabs.f64(double %3198)
  %3200 = fadd fast double %3199, %3196
  %3201 = fptosi double %3200 to i64
  store i64 %3201, ptr %3086, align 8, !tbaa !120
  %3202 = fadd fast double %3193, %3118
  %3203 = add nuw nsw i32 %3117, 1
  br i1 %3109, label %3204, label %3251

3204:                                             ; preds = %3189
  %3205 = load i32, ptr %4, align 4, !tbaa !5
  %3206 = load i32, ptr %12, align 4, !tbaa !5
  %3207 = add nsw i32 %3206, -1
  %3208 = icmp slt i32 %3205, %3207
  br i1 %3208, label %3228, label %3209

3209:                                             ; preds = %3204
  %3210 = icmp eq i32 %3205, %3207
  br i1 %3210, label %3211, label %3244

3211:                                             ; preds = %3209
  store i32 0, ptr %4, align 4, !tbaa !5
  %3212 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3212, ptr %6, align 4, !tbaa !5
  br i1 %3114, label %3251, label %3213

3213:                                             ; preds = %3211, %3238
  %3214 = phi i64 [ %3242, %3238 ], [ 1, %3211 ]
  %3215 = getelementptr inbounds i32, ptr %4, i64 %3214
  %3216 = load i32, ptr %3215, align 4, !tbaa !5
  %3217 = getelementptr inbounds i32, ptr %12, i64 %3214
  %3218 = load i32, ptr %3217, align 4, !tbaa !5
  %3219 = add nsw i32 %3218, -1
  %3220 = icmp slt i32 %3216, %3219
  br i1 %3220, label %3221, label %3236

3221:                                             ; preds = %3213
  br i1 %3208, label %3228, label %3222

3222:                                             ; preds = %3221
  %3223 = getelementptr inbounds i32, ptr %7, i64 %3214
  %3224 = load i32, ptr %3223, align 4, !tbaa !5
  %3225 = getelementptr inbounds i32, ptr %6, i64 %3214
  %3226 = load i32, ptr %3225, align 4, !tbaa !5
  %3227 = add nsw i32 %3226, %3224
  store i32 %3227, ptr %3225, align 4, !tbaa !5
  br label %3246

3228:                                             ; preds = %3204, %3221
  %3229 = phi i32 [ %3216, %3221 ], [ %3205, %3204 ]
  %3230 = phi ptr [ %3215, %3221 ], [ %4, %3204 ]
  %3231 = phi i64 [ %3214, %3221 ], [ 0, %3204 ]
  %3232 = add nsw i32 %3229, 1
  store i32 %3232, ptr %3230, align 4, !tbaa !5
  %3233 = getelementptr inbounds i32, ptr %7, i64 %3231
  %3234 = load i32, ptr %3233, align 4, !tbaa !5
  %3235 = getelementptr inbounds i32, ptr %6, i64 %3231
  br label %3246

3236:                                             ; preds = %3213
  %3237 = icmp eq i32 %3216, %3219
  br i1 %3237, label %3238, label %3244

3238:                                             ; preds = %3236
  store i32 0, ptr %3215, align 4, !tbaa !5
  %3239 = getelementptr inbounds i32, ptr %8, i64 %3214
  %3240 = load i32, ptr %3239, align 4, !tbaa !5
  %3241 = getelementptr inbounds i32, ptr %6, i64 %3214
  store i32 %3240, ptr %3241, align 4, !tbaa !5
  %3242 = add nuw nsw i64 %3214, 1
  %3243 = icmp eq i64 %3242, %3112
  br i1 %3243, label %3251, label %3213, !llvm.loop !867

3244:                                             ; preds = %3209, %3236
  %3245 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3246:                                             ; preds = %3222, %3228
  %3247 = phi ptr [ %3235, %3228 ], [ %3215, %3222 ]
  %3248 = phi i32 [ %3234, %3228 ], [ 1, %3222 ]
  %3249 = load i32, ptr %3247, align 4, !tbaa !5
  %3250 = add nsw i32 %3249, %3248
  store i32 %3250, ptr %3247, align 4, !tbaa !5
  br label %3251

3251:                                             ; preds = %3238, %3246, %3211, %3189
  %3252 = icmp eq i32 %3203, %5
  br i1 %3252, label %5537, label %3115, !llvm.loop !868

3253:                                             ; preds = %3098, %3393
  %3254 = phi i64 [ 0, %3098 ], [ %3341, %3393 ]
  %3255 = phi i32 [ 0, %3098 ], [ %3342, %3393 ]
  %3256 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3257, label %3326

3257:                                             ; preds = %3253, %3316
  %3258 = phi i32 [ %3325, %3316 ], [ 0, %3253 ]
  %3259 = phi i64 [ %3267, %3316 ], [ %3103, %3253 ]
  %3260 = phi i64 [ %3324, %3316 ], [ %3102, %3253 ]
  %3261 = phi i32 [ %3322, %3316 ], [ %3256, %3253 ]
  %3262 = sub i32 %3101, %3258
  %3263 = tail call i32 @llvm.smin.i32(i32 %3262, i32 0)
  %3264 = sub i32 %3262, %3263
  %3265 = zext i32 %3264 to i64
  %3266 = add nuw nsw i64 %3265, 1
  %3267 = add nsw i64 %3259, -1
  %3268 = icmp ult i32 %3264, 31
  br i1 %3268, label %3304, label %3269

3269:                                             ; preds = %3257
  %3270 = and i64 %3266, 8589934560
  %3271 = sub i64 %3260, %3270
  br label %3272

3272:                                             ; preds = %3272, %3269
  %3273 = phi i64 [ 0, %3269 ], [ %3296, %3272 ]
  %3274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3292, %3272 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3293, %3272 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3294, %3272 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3295, %3272 ]
  %3278 = sub i64 %3260, %3273
  %3279 = getelementptr inbounds i32, ptr %11, i64 %3278
  %3280 = getelementptr inbounds i32, ptr %3279, i64 -7
  %3281 = load <8 x i32>, ptr %3280, align 4, !tbaa !5
  %3282 = shufflevector <8 x i32> %3281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3283 = getelementptr inbounds i32, ptr %3279, i64 -15
  %3284 = load <8 x i32>, ptr %3283, align 4, !tbaa !5
  %3285 = shufflevector <8 x i32> %3284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3286 = getelementptr inbounds i32, ptr %3279, i64 -23
  %3287 = load <8 x i32>, ptr %3286, align 4, !tbaa !5
  %3288 = shufflevector <8 x i32> %3287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3289 = getelementptr inbounds i32, ptr %3279, i64 -31
  %3290 = load <8 x i32>, ptr %3289, align 4, !tbaa !5
  %3291 = shufflevector <8 x i32> %3290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3292 = mul <8 x i32> %3282, %3274
  %3293 = mul <8 x i32> %3285, %3275
  %3294 = mul <8 x i32> %3288, %3276
  %3295 = mul <8 x i32> %3291, %3277
  %3296 = add nuw i64 %3273, 32
  %3297 = icmp eq i64 %3296, %3270
  br i1 %3297, label %3298, label %3272, !llvm.loop !869

3298:                                             ; preds = %3272
  %3299 = mul <8 x i32> %3293, %3292
  %3300 = mul <8 x i32> %3294, %3299
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3301)
  %3303 = icmp eq i64 %3266, %3270
  br i1 %3303, label %3316, label %3304

3304:                                             ; preds = %3257, %3298
  %3305 = phi i64 [ %3260, %3257 ], [ %3271, %3298 ]
  %3306 = phi i32 [ 1, %3257 ], [ %3302, %3298 ]
  br label %3307

3307:                                             ; preds = %3304, %3307
  %3308 = phi i64 [ %3313, %3307 ], [ %3305, %3304 ]
  %3309 = phi i32 [ %3312, %3307 ], [ %3306, %3304 ]
  %3310 = getelementptr inbounds i32, ptr %11, i64 %3308
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = mul nsw i32 %3311, %3309
  %3313 = add nsw i64 %3308, -1
  %3314 = trunc i64 %3308 to i32
  %3315 = icmp sgt i32 %3314, 0
  br i1 %3315, label %3307, label %3316, !llvm.loop !870

3316:                                             ; preds = %3307, %3298
  %3317 = phi i32 [ %3302, %3298 ], [ %3312, %3307 ]
  %3318 = and i64 %3267, 4294967295
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = mul nsw i32 %3320, %3317
  %3322 = add nsw i32 %3321, %3261
  %3323 = icmp sgt i64 %3259, 2
  %3324 = add nsw i64 %3260, -1
  %3325 = add i32 %3258, 1
  br i1 %3323, label %3257, label %3326, !llvm.loop !871

3326:                                             ; preds = %3316, %3253
  %3327 = phi i32 [ %3256, %3253 ], [ %3322, %3316 ]
  %3328 = icmp slt i32 %3327, %5
  br i1 %3328, label %3331, label %3329

3329:                                             ; preds = %3326
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

3331:                                             ; preds = %3326
  %3332 = sext i32 %3327 to i64
  %3333 = getelementptr inbounds i64, ptr %3084, i64 %3332
  %3334 = load i64, ptr %3333, align 8, !tbaa !120
  %3335 = sitofp i64 %3254 to double
  %3336 = sitofp i64 %3334 to double
  %3337 = icmp slt i64 %3334, 0
  %3338 = fneg fast double %3336
  %3339 = select fast i1 %3337, double %3338, double %3336
  %3340 = fadd fast double %3339, %3335
  %3341 = fptosi double %3340 to i64
  store i64 %3341, ptr %3086, align 8, !tbaa !120
  %3342 = add nuw nsw i32 %3255, 1
  br i1 %3100, label %3343, label %3393

3343:                                             ; preds = %3331
  %3344 = load i32, ptr %4, align 4, !tbaa !5
  %3345 = load i32, ptr %12, align 4, !tbaa !5
  %3346 = add nsw i32 %3345, -1
  %3347 = icmp slt i32 %3344, %3346
  br i1 %3347, label %3370, label %3348

3348:                                             ; preds = %3343
  %3349 = icmp eq i32 %3344, %3346
  br i1 %3349, label %3350, label %3386

3350:                                             ; preds = %3348
  store i32 0, ptr %4, align 4, !tbaa !5
  %3351 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3351, ptr %6, align 4, !tbaa !5
  br i1 %3105, label %3393, label %3352

3352:                                             ; preds = %3350, %3380
  %3353 = phi i64 [ %3384, %3380 ], [ 1, %3350 ]
  %3354 = getelementptr inbounds i32, ptr %4, i64 %3353
  %3355 = load i32, ptr %3354, align 4, !tbaa !5
  %3356 = getelementptr inbounds i32, ptr %12, i64 %3353
  %3357 = load i32, ptr %3356, align 4, !tbaa !5
  %3358 = add nsw i32 %3357, -1
  %3359 = icmp slt i32 %3355, %3358
  br i1 %3359, label %3360, label %3378

3360:                                             ; preds = %3352
  br i1 %3347, label %3370, label %3361

3361:                                             ; preds = %3360
  %3362 = shl i64 %3353, 32
  %3363 = add i64 %3362, -4294967296
  %3364 = ashr exact i64 %3363, 32
  %3365 = getelementptr inbounds i32, ptr %7, i64 %3364
  %3366 = load i32, ptr %3365, align 4, !tbaa !5
  %3367 = getelementptr inbounds i32, ptr %6, i64 %3353
  %3368 = load i32, ptr %3367, align 4, !tbaa !5
  %3369 = add nsw i32 %3368, %3366
  store i32 %3369, ptr %3367, align 4, !tbaa !5
  br label %3388

3370:                                             ; preds = %3343, %3360
  %3371 = phi i32 [ %3355, %3360 ], [ %3344, %3343 ]
  %3372 = phi ptr [ %3354, %3360 ], [ %4, %3343 ]
  %3373 = phi i64 [ %3353, %3360 ], [ 0, %3343 ]
  %3374 = add nsw i32 %3371, 1
  store i32 %3374, ptr %3372, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %7, i64 %3373
  %3376 = load i32, ptr %3375, align 4, !tbaa !5
  %3377 = getelementptr inbounds i32, ptr %6, i64 %3373
  br label %3388

3378:                                             ; preds = %3352
  %3379 = icmp eq i32 %3355, %3358
  br i1 %3379, label %3380, label %3386

3380:                                             ; preds = %3378
  store i32 0, ptr %3354, align 4, !tbaa !5
  %3381 = getelementptr inbounds i32, ptr %8, i64 %3353
  %3382 = load i32, ptr %3381, align 4, !tbaa !5
  %3383 = getelementptr inbounds i32, ptr %6, i64 %3353
  store i32 %3382, ptr %3383, align 4, !tbaa !5
  %3384 = add nuw nsw i64 %3353, 1
  %3385 = icmp eq i64 %3384, %3103
  br i1 %3385, label %3393, label %3352, !llvm.loop !872

3386:                                             ; preds = %3348, %3378
  %3387 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3388:                                             ; preds = %3361, %3370
  %3389 = phi ptr [ %3377, %3370 ], [ %3354, %3361 ]
  %3390 = phi i32 [ %3376, %3370 ], [ 1, %3361 ]
  %3391 = load i32, ptr %3389, align 4, !tbaa !5
  %3392 = add nsw i32 %3391, %3390
  store i32 %3392, ptr %3389, align 4, !tbaa !5
  br label %3393

3393:                                             ; preds = %3380, %3388, %3350, %3331
  %3394 = icmp eq i32 %3342, %5
  br i1 %3394, label %5537, label %3253, !llvm.loop !873

3395:                                             ; preds = %3091
  %3396 = getelementptr inbounds i32, ptr %3, i64 %19
  %3397 = load i32, ptr %3396, align 4, !tbaa !5
  %3398 = icmp eq i32 %3397, 0
  %3399 = icmp sgt i32 %5, 0
  br i1 %3398, label %3409, label %3400

3400:                                             ; preds = %3395
  br i1 %3399, label %3401, label %5537

3401:                                             ; preds = %3400
  %3402 = icmp sgt i32 %13, 1
  %3403 = icmp sgt i32 %13, 0
  %3404 = add i32 %13, -2
  %3405 = zext i32 %3404 to i64
  %3406 = zext i32 %13 to i64
  %3407 = add nuw i32 %5, 1
  %3408 = icmp eq i32 %13, 1
  br label %3550

3409:                                             ; preds = %3395
  br i1 %3399, label %3410, label %5537

3410:                                             ; preds = %3409
  %3411 = icmp sgt i32 %13, 1
  %3412 = icmp sgt i32 %13, 0
  %3413 = add i32 %13, -2
  %3414 = zext i32 %3413 to i64
  %3415 = zext i32 %13 to i64
  %3416 = add nuw i32 %5, 1
  %3417 = icmp eq i32 %13, 1
  br label %3418

3418:                                             ; preds = %3410, %3548
  %3419 = phi i64 [ 0, %3410 ], [ %3498, %3548 ]
  %3420 = phi i32 [ 0, %3410 ], [ %3500, %3548 ]
  %3421 = phi double [ 0.000000e+00, %3410 ], [ %3499, %3548 ]
  %3422 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3411, label %3423, label %3492

3423:                                             ; preds = %3418, %3482
  %3424 = phi i32 [ %3491, %3482 ], [ 0, %3418 ]
  %3425 = phi i64 [ %3433, %3482 ], [ %3415, %3418 ]
  %3426 = phi i64 [ %3490, %3482 ], [ %3414, %3418 ]
  %3427 = phi i32 [ %3488, %3482 ], [ %3422, %3418 ]
  %3428 = sub i32 %3413, %3424
  %3429 = tail call i32 @llvm.smin.i32(i32 %3428, i32 0)
  %3430 = sub i32 %3428, %3429
  %3431 = zext i32 %3430 to i64
  %3432 = add nuw nsw i64 %3431, 1
  %3433 = add nsw i64 %3425, -1
  %3434 = icmp ult i32 %3430, 31
  br i1 %3434, label %3470, label %3435

3435:                                             ; preds = %3423
  %3436 = and i64 %3432, 8589934560
  %3437 = sub i64 %3426, %3436
  br label %3438

3438:                                             ; preds = %3438, %3435
  %3439 = phi i64 [ 0, %3435 ], [ %3462, %3438 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3435 ], [ %3458, %3438 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3435 ], [ %3459, %3438 ]
  %3442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3435 ], [ %3460, %3438 ]
  %3443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3435 ], [ %3461, %3438 ]
  %3444 = sub i64 %3426, %3439
  %3445 = getelementptr inbounds i32, ptr %9, i64 %3444
  %3446 = getelementptr inbounds i32, ptr %3445, i64 -7
  %3447 = load <8 x i32>, ptr %3446, align 4, !tbaa !5
  %3448 = shufflevector <8 x i32> %3447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3449 = getelementptr inbounds i32, ptr %3445, i64 -15
  %3450 = load <8 x i32>, ptr %3449, align 4, !tbaa !5
  %3451 = shufflevector <8 x i32> %3450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3452 = getelementptr inbounds i32, ptr %3445, i64 -23
  %3453 = load <8 x i32>, ptr %3452, align 4, !tbaa !5
  %3454 = shufflevector <8 x i32> %3453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3455 = getelementptr inbounds i32, ptr %3445, i64 -31
  %3456 = load <8 x i32>, ptr %3455, align 4, !tbaa !5
  %3457 = shufflevector <8 x i32> %3456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3458 = mul <8 x i32> %3448, %3440
  %3459 = mul <8 x i32> %3451, %3441
  %3460 = mul <8 x i32> %3454, %3442
  %3461 = mul <8 x i32> %3457, %3443
  %3462 = add nuw i64 %3439, 32
  %3463 = icmp eq i64 %3462, %3436
  br i1 %3463, label %3464, label %3438, !llvm.loop !874

3464:                                             ; preds = %3438
  %3465 = mul <8 x i32> %3459, %3458
  %3466 = mul <8 x i32> %3460, %3465
  %3467 = mul <8 x i32> %3461, %3466
  %3468 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3467)
  %3469 = icmp eq i64 %3432, %3436
  br i1 %3469, label %3482, label %3470

3470:                                             ; preds = %3423, %3464
  %3471 = phi i64 [ %3426, %3423 ], [ %3437, %3464 ]
  %3472 = phi i32 [ 1, %3423 ], [ %3468, %3464 ]
  br label %3473

3473:                                             ; preds = %3470, %3473
  %3474 = phi i64 [ %3479, %3473 ], [ %3471, %3470 ]
  %3475 = phi i32 [ %3478, %3473 ], [ %3472, %3470 ]
  %3476 = getelementptr inbounds i32, ptr %9, i64 %3474
  %3477 = load i32, ptr %3476, align 4, !tbaa !5
  %3478 = mul nsw i32 %3477, %3475
  %3479 = add nsw i64 %3474, -1
  %3480 = trunc i64 %3474 to i32
  %3481 = icmp sgt i32 %3480, 0
  br i1 %3481, label %3473, label %3482, !llvm.loop !875

3482:                                             ; preds = %3473, %3464
  %3483 = phi i32 [ %3468, %3464 ], [ %3478, %3473 ]
  %3484 = and i64 %3433, 4294967295
  %3485 = getelementptr inbounds i32, ptr %6, i64 %3484
  %3486 = load i32, ptr %3485, align 4, !tbaa !5
  %3487 = mul nsw i32 %3486, %3483
  %3488 = add nsw i32 %3487, %3427
  %3489 = icmp sgt i64 %3425, 2
  %3490 = add nsw i64 %3426, -1
  %3491 = add i32 %3424, 1
  br i1 %3489, label %3423, label %3492, !llvm.loop !876

3492:                                             ; preds = %3482, %3418
  %3493 = phi i32 [ %3422, %3418 ], [ %3488, %3482 ]
  %3494 = sext i32 %3493 to i64
  %3495 = getelementptr inbounds i64, ptr %3084, i64 %3494
  %3496 = load i64, ptr %3495, align 8, !tbaa !120
  %3497 = tail call i64 @llvm.abs.i64(i64 %3496, i1 true)
  %3498 = add nuw nsw i64 %3419, %3497
  store i64 %3498, ptr %3086, align 8, !tbaa !120
  %3499 = fadd fast double %3421, 1.000000e+00
  %3500 = add nuw nsw i32 %3420, 1
  br i1 %3412, label %3501, label %3548

3501:                                             ; preds = %3492
  %3502 = load i32, ptr %4, align 4, !tbaa !5
  %3503 = load i32, ptr %12, align 4, !tbaa !5
  %3504 = add nsw i32 %3503, -1
  %3505 = icmp slt i32 %3502, %3504
  br i1 %3505, label %3525, label %3506

3506:                                             ; preds = %3501
  %3507 = icmp eq i32 %3502, %3504
  br i1 %3507, label %3508, label %3541

3508:                                             ; preds = %3506
  store i32 0, ptr %4, align 4, !tbaa !5
  %3509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3509, ptr %6, align 4, !tbaa !5
  br i1 %3417, label %3548, label %3510

3510:                                             ; preds = %3508, %3535
  %3511 = phi i64 [ %3539, %3535 ], [ 1, %3508 ]
  %3512 = getelementptr inbounds i32, ptr %4, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %12, i64 %3511
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = add nsw i32 %3515, -1
  %3517 = icmp slt i32 %3513, %3516
  br i1 %3517, label %3518, label %3533

3518:                                             ; preds = %3510
  br i1 %3505, label %3525, label %3519

3519:                                             ; preds = %3518
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3511
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3523 = load i32, ptr %3522, align 4, !tbaa !5
  %3524 = add nsw i32 %3523, %3521
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  br label %3543

3525:                                             ; preds = %3501, %3518
  %3526 = phi i32 [ %3513, %3518 ], [ %3502, %3501 ]
  %3527 = phi ptr [ %3512, %3518 ], [ %4, %3501 ]
  %3528 = phi i64 [ %3511, %3518 ], [ 0, %3501 ]
  %3529 = add nsw i32 %3526, 1
  store i32 %3529, ptr %3527, align 4, !tbaa !5
  %3530 = getelementptr inbounds i32, ptr %7, i64 %3528
  %3531 = load i32, ptr %3530, align 4, !tbaa !5
  %3532 = getelementptr inbounds i32, ptr %6, i64 %3528
  br label %3543

3533:                                             ; preds = %3510
  %3534 = icmp eq i32 %3513, %3516
  br i1 %3534, label %3535, label %3541

3535:                                             ; preds = %3533
  store i32 0, ptr %3512, align 4, !tbaa !5
  %3536 = getelementptr inbounds i32, ptr %8, i64 %3511
  %3537 = load i32, ptr %3536, align 4, !tbaa !5
  %3538 = getelementptr inbounds i32, ptr %6, i64 %3511
  store i32 %3537, ptr %3538, align 4, !tbaa !5
  %3539 = add nuw nsw i64 %3511, 1
  %3540 = icmp eq i64 %3539, %3415
  br i1 %3540, label %3548, label %3510, !llvm.loop !877

3541:                                             ; preds = %3506, %3533
  %3542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3543:                                             ; preds = %3519, %3525
  %3544 = phi ptr [ %3532, %3525 ], [ %3512, %3519 ]
  %3545 = phi i32 [ %3531, %3525 ], [ 1, %3519 ]
  %3546 = load i32, ptr %3544, align 4, !tbaa !5
  %3547 = add nsw i32 %3546, %3545
  store i32 %3547, ptr %3544, align 4, !tbaa !5
  br label %3548

3548:                                             ; preds = %3535, %3543, %3508, %3492
  %3549 = icmp eq i32 %3500, %5
  br i1 %3549, label %5537, label %3418, !llvm.loop !878

3550:                                             ; preds = %3401, %3685
  %3551 = phi i64 [ 0, %3401 ], [ %3633, %3685 ]
  %3552 = phi i32 [ 0, %3401 ], [ %3634, %3685 ]
  %3553 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3402, label %3554, label %3623

3554:                                             ; preds = %3550, %3613
  %3555 = phi i32 [ %3622, %3613 ], [ 0, %3550 ]
  %3556 = phi i64 [ %3564, %3613 ], [ %3406, %3550 ]
  %3557 = phi i64 [ %3621, %3613 ], [ %3405, %3550 ]
  %3558 = phi i32 [ %3619, %3613 ], [ %3553, %3550 ]
  %3559 = sub i32 %3404, %3555
  %3560 = tail call i32 @llvm.smin.i32(i32 %3559, i32 0)
  %3561 = sub i32 %3559, %3560
  %3562 = zext i32 %3561 to i64
  %3563 = add nuw nsw i64 %3562, 1
  %3564 = add nsw i64 %3556, -1
  %3565 = icmp ult i32 %3561, 31
  br i1 %3565, label %3601, label %3566

3566:                                             ; preds = %3554
  %3567 = and i64 %3563, 8589934560
  %3568 = sub i64 %3557, %3567
  br label %3569

3569:                                             ; preds = %3569, %3566
  %3570 = phi i64 [ 0, %3566 ], [ %3593, %3569 ]
  %3571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3589, %3569 ]
  %3572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3590, %3569 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3591, %3569 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3592, %3569 ]
  %3575 = sub i64 %3557, %3570
  %3576 = getelementptr inbounds i32, ptr %11, i64 %3575
  %3577 = getelementptr inbounds i32, ptr %3576, i64 -7
  %3578 = load <8 x i32>, ptr %3577, align 4, !tbaa !5
  %3579 = shufflevector <8 x i32> %3578, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3580 = getelementptr inbounds i32, ptr %3576, i64 -15
  %3581 = load <8 x i32>, ptr %3580, align 4, !tbaa !5
  %3582 = shufflevector <8 x i32> %3581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3583 = getelementptr inbounds i32, ptr %3576, i64 -23
  %3584 = load <8 x i32>, ptr %3583, align 4, !tbaa !5
  %3585 = shufflevector <8 x i32> %3584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3586 = getelementptr inbounds i32, ptr %3576, i64 -31
  %3587 = load <8 x i32>, ptr %3586, align 4, !tbaa !5
  %3588 = shufflevector <8 x i32> %3587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3589 = mul <8 x i32> %3579, %3571
  %3590 = mul <8 x i32> %3582, %3572
  %3591 = mul <8 x i32> %3585, %3573
  %3592 = mul <8 x i32> %3588, %3574
  %3593 = add nuw i64 %3570, 32
  %3594 = icmp eq i64 %3593, %3567
  br i1 %3594, label %3595, label %3569, !llvm.loop !879

3595:                                             ; preds = %3569
  %3596 = mul <8 x i32> %3590, %3589
  %3597 = mul <8 x i32> %3591, %3596
  %3598 = mul <8 x i32> %3592, %3597
  %3599 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3598)
  %3600 = icmp eq i64 %3563, %3567
  br i1 %3600, label %3613, label %3601

3601:                                             ; preds = %3554, %3595
  %3602 = phi i64 [ %3557, %3554 ], [ %3568, %3595 ]
  %3603 = phi i32 [ 1, %3554 ], [ %3599, %3595 ]
  br label %3604

3604:                                             ; preds = %3601, %3604
  %3605 = phi i64 [ %3610, %3604 ], [ %3602, %3601 ]
  %3606 = phi i32 [ %3609, %3604 ], [ %3603, %3601 ]
  %3607 = getelementptr inbounds i32, ptr %11, i64 %3605
  %3608 = load i32, ptr %3607, align 4, !tbaa !5
  %3609 = mul nsw i32 %3608, %3606
  %3610 = add nsw i64 %3605, -1
  %3611 = trunc i64 %3605 to i32
  %3612 = icmp sgt i32 %3611, 0
  br i1 %3612, label %3604, label %3613, !llvm.loop !880

3613:                                             ; preds = %3604, %3595
  %3614 = phi i32 [ %3599, %3595 ], [ %3609, %3604 ]
  %3615 = and i64 %3564, 4294967295
  %3616 = getelementptr inbounds i32, ptr %6, i64 %3615
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = mul nsw i32 %3617, %3614
  %3619 = add nsw i32 %3618, %3558
  %3620 = icmp sgt i64 %3556, 2
  %3621 = add nsw i64 %3557, -1
  %3622 = add i32 %3555, 1
  br i1 %3620, label %3554, label %3623, !llvm.loop !881

3623:                                             ; preds = %3613, %3550
  %3624 = phi i32 [ %3553, %3550 ], [ %3619, %3613 ]
  %3625 = icmp slt i32 %3624, %5
  br i1 %3625, label %3628, label %3626

3626:                                             ; preds = %3623
  %3627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

3628:                                             ; preds = %3623
  %3629 = sext i32 %3624 to i64
  %3630 = getelementptr inbounds i64, ptr %3084, i64 %3629
  %3631 = load i64, ptr %3630, align 8, !tbaa !120
  %3632 = tail call i64 @llvm.abs.i64(i64 %3631, i1 true)
  %3633 = add nuw nsw i64 %3551, %3632
  store i64 %3633, ptr %3086, align 8, !tbaa !120
  %3634 = add nuw nsw i32 %3552, 1
  br i1 %3403, label %3635, label %3685

3635:                                             ; preds = %3628
  %3636 = load i32, ptr %4, align 4, !tbaa !5
  %3637 = load i32, ptr %12, align 4, !tbaa !5
  %3638 = add nsw i32 %3637, -1
  %3639 = icmp slt i32 %3636, %3638
  br i1 %3639, label %3662, label %3640

3640:                                             ; preds = %3635
  %3641 = icmp eq i32 %3636, %3638
  br i1 %3641, label %3642, label %3678

3642:                                             ; preds = %3640
  store i32 0, ptr %4, align 4, !tbaa !5
  %3643 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3643, ptr %6, align 4, !tbaa !5
  br i1 %3408, label %3685, label %3644

3644:                                             ; preds = %3642, %3672
  %3645 = phi i64 [ %3676, %3672 ], [ 1, %3642 ]
  %3646 = getelementptr inbounds i32, ptr %4, i64 %3645
  %3647 = load i32, ptr %3646, align 4, !tbaa !5
  %3648 = getelementptr inbounds i32, ptr %12, i64 %3645
  %3649 = load i32, ptr %3648, align 4, !tbaa !5
  %3650 = add nsw i32 %3649, -1
  %3651 = icmp slt i32 %3647, %3650
  br i1 %3651, label %3652, label %3670

3652:                                             ; preds = %3644
  br i1 %3639, label %3662, label %3653

3653:                                             ; preds = %3652
  %3654 = shl i64 %3645, 32
  %3655 = add i64 %3654, -4294967296
  %3656 = ashr exact i64 %3655, 32
  %3657 = getelementptr inbounds i32, ptr %7, i64 %3656
  %3658 = load i32, ptr %3657, align 4, !tbaa !5
  %3659 = getelementptr inbounds i32, ptr %6, i64 %3645
  %3660 = load i32, ptr %3659, align 4, !tbaa !5
  %3661 = add nsw i32 %3660, %3658
  store i32 %3661, ptr %3659, align 4, !tbaa !5
  br label %3680

3662:                                             ; preds = %3635, %3652
  %3663 = phi i32 [ %3647, %3652 ], [ %3636, %3635 ]
  %3664 = phi ptr [ %3646, %3652 ], [ %4, %3635 ]
  %3665 = phi i64 [ %3645, %3652 ], [ 0, %3635 ]
  %3666 = add nsw i32 %3663, 1
  store i32 %3666, ptr %3664, align 4, !tbaa !5
  %3667 = getelementptr inbounds i32, ptr %7, i64 %3665
  %3668 = load i32, ptr %3667, align 4, !tbaa !5
  %3669 = getelementptr inbounds i32, ptr %6, i64 %3665
  br label %3680

3670:                                             ; preds = %3644
  %3671 = icmp eq i32 %3647, %3650
  br i1 %3671, label %3672, label %3678

3672:                                             ; preds = %3670
  store i32 0, ptr %3646, align 4, !tbaa !5
  %3673 = getelementptr inbounds i32, ptr %8, i64 %3645
  %3674 = load i32, ptr %3673, align 4, !tbaa !5
  %3675 = getelementptr inbounds i32, ptr %6, i64 %3645
  store i32 %3674, ptr %3675, align 4, !tbaa !5
  %3676 = add nuw nsw i64 %3645, 1
  %3677 = icmp eq i64 %3676, %3406
  br i1 %3677, label %3685, label %3644, !llvm.loop !882

3678:                                             ; preds = %3640, %3670
  %3679 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3680:                                             ; preds = %3653, %3662
  %3681 = phi ptr [ %3669, %3662 ], [ %3646, %3653 ]
  %3682 = phi i32 [ %3668, %3662 ], [ 1, %3653 ]
  %3683 = load i32, ptr %3681, align 4, !tbaa !5
  %3684 = add nsw i32 %3683, %3682
  store i32 %3684, ptr %3681, align 4, !tbaa !5
  br label %3685

3685:                                             ; preds = %3672, %3680, %3642, %3628
  %3686 = icmp eq i32 %3634, %5
  br i1 %3686, label %5537, label %3550, !llvm.loop !883

3687:                                             ; preds = %3091
  %3688 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

3689:                                             ; preds = %18
  %3690 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3691 = load ptr, ptr %3690, align 8, !tbaa !9
  %3692 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3693 = load ptr, ptr %3692, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3693, align 8, !tbaa !18
  %3694 = icmp eq i32 %13, 0
  br i1 %3694, label %3695, label %3701

3695:                                             ; preds = %3689
  %3696 = load i64, ptr %3691, align 8, !tbaa !120
  %3697 = sitofp i64 %3696 to double
  %3698 = icmp slt i64 %3696, 0
  %3699 = fneg fast double %3697
  %3700 = select fast i1 %3698, double %3699, double %3697
  store double %3700, ptr %3693, align 8, !tbaa !18
  br label %5537

3701:                                             ; preds = %3689
  switch i32 %1, label %4299 [
    i32 1, label %3702
    i32 0, label %4001
  ]

3702:                                             ; preds = %3701
  %3703 = getelementptr inbounds i32, ptr %3, i64 %19
  %3704 = load i32, ptr %3703, align 4, !tbaa !5
  %3705 = icmp eq i32 %3704, 0
  %3706 = icmp sgt i32 %5, 0
  br i1 %3705, label %3716, label %3707

3707:                                             ; preds = %3702
  br i1 %3706, label %3708, label %5537

3708:                                             ; preds = %3707
  %3709 = icmp sgt i32 %13, 1
  %3710 = icmp sgt i32 %13, 0
  %3711 = add i32 %13, -2
  %3712 = zext i32 %3711 to i64
  %3713 = zext i32 %13 to i64
  %3714 = add nuw i32 %5, 1
  %3715 = icmp eq i32 %13, 1
  br label %3861

3716:                                             ; preds = %3702
  br i1 %3706, label %3717, label %5537

3717:                                             ; preds = %3716
  %3718 = icmp sgt i32 %13, 1
  %3719 = icmp sgt i32 %13, 0
  %3720 = add i32 %13, -2
  %3721 = zext i32 %3720 to i64
  %3722 = zext i32 %13 to i64
  %3723 = add nuw i32 %5, 1
  %3724 = icmp eq i32 %13, 1
  br label %3725

3725:                                             ; preds = %3717, %3859
  %3726 = phi double [ 0.000000e+00, %3717 ], [ %3809, %3859 ]
  %3727 = phi i32 [ 0, %3717 ], [ %3811, %3859 ]
  %3728 = phi double [ 0.000000e+00, %3717 ], [ %3810, %3859 ]
  %3729 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3718, label %3730, label %3799

3730:                                             ; preds = %3725, %3789
  %3731 = phi i32 [ %3798, %3789 ], [ 0, %3725 ]
  %3732 = phi i64 [ %3740, %3789 ], [ %3722, %3725 ]
  %3733 = phi i64 [ %3797, %3789 ], [ %3721, %3725 ]
  %3734 = phi i32 [ %3795, %3789 ], [ %3729, %3725 ]
  %3735 = sub i32 %3720, %3731
  %3736 = tail call i32 @llvm.smin.i32(i32 %3735, i32 0)
  %3737 = sub i32 %3735, %3736
  %3738 = zext i32 %3737 to i64
  %3739 = add nuw nsw i64 %3738, 1
  %3740 = add nsw i64 %3732, -1
  %3741 = icmp ult i32 %3737, 31
  br i1 %3741, label %3777, label %3742

3742:                                             ; preds = %3730
  %3743 = and i64 %3739, 8589934560
  %3744 = sub i64 %3733, %3743
  br label %3745

3745:                                             ; preds = %3745, %3742
  %3746 = phi i64 [ 0, %3742 ], [ %3769, %3745 ]
  %3747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3742 ], [ %3765, %3745 ]
  %3748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3742 ], [ %3766, %3745 ]
  %3749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3742 ], [ %3767, %3745 ]
  %3750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3742 ], [ %3768, %3745 ]
  %3751 = sub i64 %3733, %3746
  %3752 = getelementptr inbounds i32, ptr %9, i64 %3751
  %3753 = getelementptr inbounds i32, ptr %3752, i64 -7
  %3754 = load <8 x i32>, ptr %3753, align 4, !tbaa !5
  %3755 = shufflevector <8 x i32> %3754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3756 = getelementptr inbounds i32, ptr %3752, i64 -15
  %3757 = load <8 x i32>, ptr %3756, align 4, !tbaa !5
  %3758 = shufflevector <8 x i32> %3757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3759 = getelementptr inbounds i32, ptr %3752, i64 -23
  %3760 = load <8 x i32>, ptr %3759, align 4, !tbaa !5
  %3761 = shufflevector <8 x i32> %3760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3762 = getelementptr inbounds i32, ptr %3752, i64 -31
  %3763 = load <8 x i32>, ptr %3762, align 4, !tbaa !5
  %3764 = shufflevector <8 x i32> %3763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3765 = mul <8 x i32> %3755, %3747
  %3766 = mul <8 x i32> %3758, %3748
  %3767 = mul <8 x i32> %3761, %3749
  %3768 = mul <8 x i32> %3764, %3750
  %3769 = add nuw i64 %3746, 32
  %3770 = icmp eq i64 %3769, %3743
  br i1 %3770, label %3771, label %3745, !llvm.loop !884

3771:                                             ; preds = %3745
  %3772 = mul <8 x i32> %3766, %3765
  %3773 = mul <8 x i32> %3767, %3772
  %3774 = mul <8 x i32> %3768, %3773
  %3775 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3774)
  %3776 = icmp eq i64 %3739, %3743
  br i1 %3776, label %3789, label %3777

3777:                                             ; preds = %3730, %3771
  %3778 = phi i64 [ %3733, %3730 ], [ %3744, %3771 ]
  %3779 = phi i32 [ 1, %3730 ], [ %3775, %3771 ]
  br label %3780

3780:                                             ; preds = %3777, %3780
  %3781 = phi i64 [ %3786, %3780 ], [ %3778, %3777 ]
  %3782 = phi i32 [ %3785, %3780 ], [ %3779, %3777 ]
  %3783 = getelementptr inbounds i32, ptr %9, i64 %3781
  %3784 = load i32, ptr %3783, align 4, !tbaa !5
  %3785 = mul nsw i32 %3784, %3782
  %3786 = add nsw i64 %3781, -1
  %3787 = trunc i64 %3781 to i32
  %3788 = icmp sgt i32 %3787, 0
  br i1 %3788, label %3780, label %3789, !llvm.loop !885

3789:                                             ; preds = %3780, %3771
  %3790 = phi i32 [ %3775, %3771 ], [ %3785, %3780 ]
  %3791 = and i64 %3740, 4294967295
  %3792 = getelementptr inbounds i32, ptr %6, i64 %3791
  %3793 = load i32, ptr %3792, align 4, !tbaa !5
  %3794 = mul nsw i32 %3793, %3790
  %3795 = add nsw i32 %3794, %3734
  %3796 = icmp sgt i64 %3732, 2
  %3797 = add nsw i64 %3733, -1
  %3798 = add i32 %3731, 1
  br i1 %3796, label %3730, label %3799, !llvm.loop !886

3799:                                             ; preds = %3789, %3725
  %3800 = phi i32 [ %3729, %3725 ], [ %3795, %3789 ]
  %3801 = sext i32 %3800 to i64
  %3802 = getelementptr inbounds double, ptr %2, i64 %3801
  %3803 = load double, ptr %3802, align 8, !tbaa !18
  %3804 = getelementptr inbounds i64, ptr %3691, i64 %3801
  %3805 = load i64, ptr %3804, align 8, !tbaa !120
  %3806 = sitofp i64 %3805 to double
  %3807 = fmul fast double %3803, %3806
  %3808 = tail call fast double @llvm.fabs.f64(double %3807)
  %3809 = fadd fast double %3808, %3726
  store double %3809, ptr %3693, align 8, !tbaa !18
  %3810 = fadd fast double %3803, %3728
  %3811 = add nuw nsw i32 %3727, 1
  br i1 %3719, label %3812, label %3859

3812:                                             ; preds = %3799
  %3813 = load i32, ptr %4, align 4, !tbaa !5
  %3814 = load i32, ptr %12, align 4, !tbaa !5
  %3815 = add nsw i32 %3814, -1
  %3816 = icmp slt i32 %3813, %3815
  br i1 %3816, label %3836, label %3817

3817:                                             ; preds = %3812
  %3818 = icmp eq i32 %3813, %3815
  br i1 %3818, label %3819, label %3852

3819:                                             ; preds = %3817
  store i32 0, ptr %4, align 4, !tbaa !5
  %3820 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3820, ptr %6, align 4, !tbaa !5
  br i1 %3724, label %3859, label %3821

3821:                                             ; preds = %3819, %3846
  %3822 = phi i64 [ %3850, %3846 ], [ 1, %3819 ]
  %3823 = getelementptr inbounds i32, ptr %4, i64 %3822
  %3824 = load i32, ptr %3823, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %12, i64 %3822
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = add nsw i32 %3826, -1
  %3828 = icmp slt i32 %3824, %3827
  br i1 %3828, label %3829, label %3844

3829:                                             ; preds = %3821
  br i1 %3816, label %3836, label %3830

3830:                                             ; preds = %3829
  %3831 = getelementptr inbounds i32, ptr %7, i64 %3822
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3822
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = add nsw i32 %3834, %3832
  store i32 %3835, ptr %3833, align 4, !tbaa !5
  br label %3854

3836:                                             ; preds = %3812, %3829
  %3837 = phi i32 [ %3824, %3829 ], [ %3813, %3812 ]
  %3838 = phi ptr [ %3823, %3829 ], [ %4, %3812 ]
  %3839 = phi i64 [ %3822, %3829 ], [ 0, %3812 ]
  %3840 = add nsw i32 %3837, 1
  store i32 %3840, ptr %3838, align 4, !tbaa !5
  %3841 = getelementptr inbounds i32, ptr %7, i64 %3839
  %3842 = load i32, ptr %3841, align 4, !tbaa !5
  %3843 = getelementptr inbounds i32, ptr %6, i64 %3839
  br label %3854

3844:                                             ; preds = %3821
  %3845 = icmp eq i32 %3824, %3827
  br i1 %3845, label %3846, label %3852

3846:                                             ; preds = %3844
  store i32 0, ptr %3823, align 4, !tbaa !5
  %3847 = getelementptr inbounds i32, ptr %8, i64 %3822
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3822
  store i32 %3848, ptr %3849, align 4, !tbaa !5
  %3850 = add nuw nsw i64 %3822, 1
  %3851 = icmp eq i64 %3850, %3722
  br i1 %3851, label %3859, label %3821, !llvm.loop !887

3852:                                             ; preds = %3817, %3844
  %3853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3854:                                             ; preds = %3830, %3836
  %3855 = phi ptr [ %3843, %3836 ], [ %3823, %3830 ]
  %3856 = phi i32 [ %3842, %3836 ], [ 1, %3830 ]
  %3857 = load i32, ptr %3855, align 4, !tbaa !5
  %3858 = add nsw i32 %3857, %3856
  store i32 %3858, ptr %3855, align 4, !tbaa !5
  br label %3859

3859:                                             ; preds = %3846, %3854, %3819, %3799
  %3860 = icmp eq i32 %3811, %5
  br i1 %3860, label %5537, label %3725, !llvm.loop !888

3861:                                             ; preds = %3708, %3999
  %3862 = phi double [ 0.000000e+00, %3708 ], [ %3947, %3999 ]
  %3863 = phi i32 [ 0, %3708 ], [ %3948, %3999 ]
  %3864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3709, label %3865, label %3934

3865:                                             ; preds = %3861, %3924
  %3866 = phi i32 [ %3933, %3924 ], [ 0, %3861 ]
  %3867 = phi i64 [ %3875, %3924 ], [ %3713, %3861 ]
  %3868 = phi i64 [ %3932, %3924 ], [ %3712, %3861 ]
  %3869 = phi i32 [ %3930, %3924 ], [ %3864, %3861 ]
  %3870 = sub i32 %3711, %3866
  %3871 = tail call i32 @llvm.smin.i32(i32 %3870, i32 0)
  %3872 = sub i32 %3870, %3871
  %3873 = zext i32 %3872 to i64
  %3874 = add nuw nsw i64 %3873, 1
  %3875 = add nsw i64 %3867, -1
  %3876 = icmp ult i32 %3872, 31
  br i1 %3876, label %3912, label %3877

3877:                                             ; preds = %3865
  %3878 = and i64 %3874, 8589934560
  %3879 = sub i64 %3868, %3878
  br label %3880

3880:                                             ; preds = %3880, %3877
  %3881 = phi i64 [ 0, %3877 ], [ %3904, %3880 ]
  %3882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3900, %3880 ]
  %3883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3901, %3880 ]
  %3884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3902, %3880 ]
  %3885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3903, %3880 ]
  %3886 = sub i64 %3868, %3881
  %3887 = getelementptr inbounds i32, ptr %11, i64 %3886
  %3888 = getelementptr inbounds i32, ptr %3887, i64 -7
  %3889 = load <8 x i32>, ptr %3888, align 4, !tbaa !5
  %3890 = shufflevector <8 x i32> %3889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3891 = getelementptr inbounds i32, ptr %3887, i64 -15
  %3892 = load <8 x i32>, ptr %3891, align 4, !tbaa !5
  %3893 = shufflevector <8 x i32> %3892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3894 = getelementptr inbounds i32, ptr %3887, i64 -23
  %3895 = load <8 x i32>, ptr %3894, align 4, !tbaa !5
  %3896 = shufflevector <8 x i32> %3895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3897 = getelementptr inbounds i32, ptr %3887, i64 -31
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = mul <8 x i32> %3890, %3882
  %3901 = mul <8 x i32> %3893, %3883
  %3902 = mul <8 x i32> %3896, %3884
  %3903 = mul <8 x i32> %3899, %3885
  %3904 = add nuw i64 %3881, 32
  %3905 = icmp eq i64 %3904, %3878
  br i1 %3905, label %3906, label %3880, !llvm.loop !889

3906:                                             ; preds = %3880
  %3907 = mul <8 x i32> %3901, %3900
  %3908 = mul <8 x i32> %3902, %3907
  %3909 = mul <8 x i32> %3903, %3908
  %3910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3909)
  %3911 = icmp eq i64 %3874, %3878
  br i1 %3911, label %3924, label %3912

3912:                                             ; preds = %3865, %3906
  %3913 = phi i64 [ %3868, %3865 ], [ %3879, %3906 ]
  %3914 = phi i32 [ 1, %3865 ], [ %3910, %3906 ]
  br label %3915

3915:                                             ; preds = %3912, %3915
  %3916 = phi i64 [ %3921, %3915 ], [ %3913, %3912 ]
  %3917 = phi i32 [ %3920, %3915 ], [ %3914, %3912 ]
  %3918 = getelementptr inbounds i32, ptr %11, i64 %3916
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = mul nsw i32 %3919, %3917
  %3921 = add nsw i64 %3916, -1
  %3922 = trunc i64 %3916 to i32
  %3923 = icmp sgt i32 %3922, 0
  br i1 %3923, label %3915, label %3924, !llvm.loop !890

3924:                                             ; preds = %3915, %3906
  %3925 = phi i32 [ %3910, %3906 ], [ %3920, %3915 ]
  %3926 = and i64 %3875, 4294967295
  %3927 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = mul nsw i32 %3928, %3925
  %3930 = add nsw i32 %3929, %3869
  %3931 = icmp sgt i64 %3867, 2
  %3932 = add nsw i64 %3868, -1
  %3933 = add i32 %3866, 1
  br i1 %3931, label %3865, label %3934, !llvm.loop !891

3934:                                             ; preds = %3924, %3861
  %3935 = phi i32 [ %3864, %3861 ], [ %3930, %3924 ]
  %3936 = icmp slt i32 %3935, %5
  br i1 %3936, label %3939, label %3937

3937:                                             ; preds = %3934
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

3939:                                             ; preds = %3934
  %3940 = sext i32 %3935 to i64
  %3941 = getelementptr inbounds i64, ptr %3691, i64 %3940
  %3942 = load i64, ptr %3941, align 8, !tbaa !120
  %3943 = sitofp i64 %3942 to double
  %3944 = icmp slt i64 %3942, 0
  %3945 = fneg fast double %3943
  %3946 = select fast i1 %3944, double %3945, double %3943
  %3947 = fadd fast double %3946, %3862
  store double %3947, ptr %3693, align 8, !tbaa !18
  %3948 = add nuw nsw i32 %3863, 1
  br i1 %3710, label %3949, label %3999

3949:                                             ; preds = %3939
  %3950 = load i32, ptr %4, align 4, !tbaa !5
  %3951 = load i32, ptr %12, align 4, !tbaa !5
  %3952 = add nsw i32 %3951, -1
  %3953 = icmp slt i32 %3950, %3952
  br i1 %3953, label %3976, label %3954

3954:                                             ; preds = %3949
  %3955 = icmp eq i32 %3950, %3952
  br i1 %3955, label %3956, label %3992

3956:                                             ; preds = %3954
  store i32 0, ptr %4, align 4, !tbaa !5
  %3957 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3957, ptr %6, align 4, !tbaa !5
  br i1 %3715, label %3999, label %3958

3958:                                             ; preds = %3956, %3986
  %3959 = phi i64 [ %3990, %3986 ], [ 1, %3956 ]
  %3960 = getelementptr inbounds i32, ptr %4, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %12, i64 %3959
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, -1
  %3965 = icmp slt i32 %3961, %3964
  br i1 %3965, label %3966, label %3984

3966:                                             ; preds = %3958
  br i1 %3953, label %3976, label %3967

3967:                                             ; preds = %3966
  %3968 = shl i64 %3959, 32
  %3969 = add i64 %3968, -4294967296
  %3970 = ashr exact i64 %3969, 32
  %3971 = getelementptr inbounds i32, ptr %7, i64 %3970
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = getelementptr inbounds i32, ptr %6, i64 %3959
  %3974 = load i32, ptr %3973, align 4, !tbaa !5
  %3975 = add nsw i32 %3974, %3972
  store i32 %3975, ptr %3973, align 4, !tbaa !5
  br label %3994

3976:                                             ; preds = %3949, %3966
  %3977 = phi i32 [ %3961, %3966 ], [ %3950, %3949 ]
  %3978 = phi ptr [ %3960, %3966 ], [ %4, %3949 ]
  %3979 = phi i64 [ %3959, %3966 ], [ 0, %3949 ]
  %3980 = add nsw i32 %3977, 1
  store i32 %3980, ptr %3978, align 4, !tbaa !5
  %3981 = getelementptr inbounds i32, ptr %7, i64 %3979
  %3982 = load i32, ptr %3981, align 4, !tbaa !5
  %3983 = getelementptr inbounds i32, ptr %6, i64 %3979
  br label %3994

3984:                                             ; preds = %3958
  %3985 = icmp eq i32 %3961, %3964
  br i1 %3985, label %3986, label %3992

3986:                                             ; preds = %3984
  store i32 0, ptr %3960, align 4, !tbaa !5
  %3987 = getelementptr inbounds i32, ptr %8, i64 %3959
  %3988 = load i32, ptr %3987, align 4, !tbaa !5
  %3989 = getelementptr inbounds i32, ptr %6, i64 %3959
  store i32 %3988, ptr %3989, align 4, !tbaa !5
  %3990 = add nuw nsw i64 %3959, 1
  %3991 = icmp eq i64 %3990, %3713
  br i1 %3991, label %3999, label %3958, !llvm.loop !892

3992:                                             ; preds = %3954, %3984
  %3993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

3994:                                             ; preds = %3967, %3976
  %3995 = phi ptr [ %3983, %3976 ], [ %3960, %3967 ]
  %3996 = phi i32 [ %3982, %3976 ], [ 1, %3967 ]
  %3997 = load i32, ptr %3995, align 4, !tbaa !5
  %3998 = add nsw i32 %3997, %3996
  store i32 %3998, ptr %3995, align 4, !tbaa !5
  br label %3999

3999:                                             ; preds = %3986, %3994, %3956, %3939
  %4000 = icmp eq i32 %3948, %5
  br i1 %4000, label %5537, label %3861, !llvm.loop !893

4001:                                             ; preds = %3701
  %4002 = getelementptr inbounds i32, ptr %3, i64 %19
  %4003 = load i32, ptr %4002, align 4, !tbaa !5
  %4004 = icmp eq i32 %4003, 0
  %4005 = icmp sgt i32 %5, 0
  br i1 %4004, label %4015, label %4006

4006:                                             ; preds = %4001
  br i1 %4005, label %4007, label %5537

4007:                                             ; preds = %4006
  %4008 = icmp sgt i32 %13, 1
  %4009 = icmp sgt i32 %13, 0
  %4010 = add i32 %13, -2
  %4011 = zext i32 %4010 to i64
  %4012 = zext i32 %13 to i64
  %4013 = add nuw i32 %5, 1
  %4014 = icmp eq i32 %13, 1
  br label %4159

4015:                                             ; preds = %4001
  br i1 %4005, label %4016, label %5537

4016:                                             ; preds = %4015
  %4017 = icmp sgt i32 %13, 1
  %4018 = icmp sgt i32 %13, 0
  %4019 = add i32 %13, -2
  %4020 = zext i32 %4019 to i64
  %4021 = zext i32 %13 to i64
  %4022 = add nuw i32 %5, 1
  %4023 = icmp eq i32 %13, 1
  br label %4024

4024:                                             ; preds = %4016, %4157
  %4025 = phi double [ 0.000000e+00, %4016 ], [ %4107, %4157 ]
  %4026 = phi i32 [ 0, %4016 ], [ %4109, %4157 ]
  %4027 = phi double [ 0.000000e+00, %4016 ], [ %4108, %4157 ]
  %4028 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4017, label %4029, label %4098

4029:                                             ; preds = %4024, %4088
  %4030 = phi i32 [ %4097, %4088 ], [ 0, %4024 ]
  %4031 = phi i64 [ %4039, %4088 ], [ %4021, %4024 ]
  %4032 = phi i64 [ %4096, %4088 ], [ %4020, %4024 ]
  %4033 = phi i32 [ %4094, %4088 ], [ %4028, %4024 ]
  %4034 = sub i32 %4019, %4030
  %4035 = tail call i32 @llvm.smin.i32(i32 %4034, i32 0)
  %4036 = sub i32 %4034, %4035
  %4037 = zext i32 %4036 to i64
  %4038 = add nuw nsw i64 %4037, 1
  %4039 = add nsw i64 %4031, -1
  %4040 = icmp ult i32 %4036, 31
  br i1 %4040, label %4076, label %4041

4041:                                             ; preds = %4029
  %4042 = and i64 %4038, 8589934560
  %4043 = sub i64 %4032, %4042
  br label %4044

4044:                                             ; preds = %4044, %4041
  %4045 = phi i64 [ 0, %4041 ], [ %4068, %4044 ]
  %4046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4041 ], [ %4064, %4044 ]
  %4047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4041 ], [ %4065, %4044 ]
  %4048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4041 ], [ %4066, %4044 ]
  %4049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4041 ], [ %4067, %4044 ]
  %4050 = sub i64 %4032, %4045
  %4051 = getelementptr inbounds i32, ptr %9, i64 %4050
  %4052 = getelementptr inbounds i32, ptr %4051, i64 -7
  %4053 = load <8 x i32>, ptr %4052, align 4, !tbaa !5
  %4054 = shufflevector <8 x i32> %4053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4055 = getelementptr inbounds i32, ptr %4051, i64 -15
  %4056 = load <8 x i32>, ptr %4055, align 4, !tbaa !5
  %4057 = shufflevector <8 x i32> %4056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4058 = getelementptr inbounds i32, ptr %4051, i64 -23
  %4059 = load <8 x i32>, ptr %4058, align 4, !tbaa !5
  %4060 = shufflevector <8 x i32> %4059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4061 = getelementptr inbounds i32, ptr %4051, i64 -31
  %4062 = load <8 x i32>, ptr %4061, align 4, !tbaa !5
  %4063 = shufflevector <8 x i32> %4062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4064 = mul <8 x i32> %4054, %4046
  %4065 = mul <8 x i32> %4057, %4047
  %4066 = mul <8 x i32> %4060, %4048
  %4067 = mul <8 x i32> %4063, %4049
  %4068 = add nuw i64 %4045, 32
  %4069 = icmp eq i64 %4068, %4042
  br i1 %4069, label %4070, label %4044, !llvm.loop !894

4070:                                             ; preds = %4044
  %4071 = mul <8 x i32> %4065, %4064
  %4072 = mul <8 x i32> %4066, %4071
  %4073 = mul <8 x i32> %4067, %4072
  %4074 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4073)
  %4075 = icmp eq i64 %4038, %4042
  br i1 %4075, label %4088, label %4076

4076:                                             ; preds = %4029, %4070
  %4077 = phi i64 [ %4032, %4029 ], [ %4043, %4070 ]
  %4078 = phi i32 [ 1, %4029 ], [ %4074, %4070 ]
  br label %4079

4079:                                             ; preds = %4076, %4079
  %4080 = phi i64 [ %4085, %4079 ], [ %4077, %4076 ]
  %4081 = phi i32 [ %4084, %4079 ], [ %4078, %4076 ]
  %4082 = getelementptr inbounds i32, ptr %9, i64 %4080
  %4083 = load i32, ptr %4082, align 4, !tbaa !5
  %4084 = mul nsw i32 %4083, %4081
  %4085 = add nsw i64 %4080, -1
  %4086 = trunc i64 %4080 to i32
  %4087 = icmp sgt i32 %4086, 0
  br i1 %4087, label %4079, label %4088, !llvm.loop !895

4088:                                             ; preds = %4079, %4070
  %4089 = phi i32 [ %4074, %4070 ], [ %4084, %4079 ]
  %4090 = and i64 %4039, 4294967295
  %4091 = getelementptr inbounds i32, ptr %6, i64 %4090
  %4092 = load i32, ptr %4091, align 4, !tbaa !5
  %4093 = mul nsw i32 %4092, %4089
  %4094 = add nsw i32 %4093, %4033
  %4095 = icmp sgt i64 %4031, 2
  %4096 = add nsw i64 %4032, -1
  %4097 = add i32 %4030, 1
  br i1 %4095, label %4029, label %4098, !llvm.loop !896

4098:                                             ; preds = %4088, %4024
  %4099 = phi i32 [ %4028, %4024 ], [ %4094, %4088 ]
  %4100 = sext i32 %4099 to i64
  %4101 = getelementptr inbounds i64, ptr %3691, i64 %4100
  %4102 = load i64, ptr %4101, align 8, !tbaa !120
  %4103 = sitofp i64 %4102 to double
  %4104 = icmp slt i64 %4102, 0
  %4105 = fneg fast double %4103
  %4106 = select fast i1 %4104, double %4105, double %4103
  %4107 = fadd fast double %4106, %4025
  %4108 = fadd fast double %4027, 1.000000e+00
  %4109 = add nuw nsw i32 %4026, 1
  br i1 %4018, label %4110, label %4157

4110:                                             ; preds = %4098
  %4111 = load i32, ptr %4, align 4, !tbaa !5
  %4112 = load i32, ptr %12, align 4, !tbaa !5
  %4113 = add nsw i32 %4112, -1
  %4114 = icmp slt i32 %4111, %4113
  br i1 %4114, label %4134, label %4115

4115:                                             ; preds = %4110
  %4116 = icmp eq i32 %4111, %4113
  br i1 %4116, label %4117, label %4150

4117:                                             ; preds = %4115
  store i32 0, ptr %4, align 4, !tbaa !5
  %4118 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4118, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4157, label %4119

4119:                                             ; preds = %4117, %4144
  %4120 = phi i64 [ %4148, %4144 ], [ 1, %4117 ]
  %4121 = getelementptr inbounds i32, ptr %4, i64 %4120
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = getelementptr inbounds i32, ptr %12, i64 %4120
  %4124 = load i32, ptr %4123, align 4, !tbaa !5
  %4125 = add nsw i32 %4124, -1
  %4126 = icmp slt i32 %4122, %4125
  br i1 %4126, label %4127, label %4142

4127:                                             ; preds = %4119
  br i1 %4114, label %4134, label %4128

4128:                                             ; preds = %4127
  %4129 = getelementptr inbounds i32, ptr %7, i64 %4120
  %4130 = load i32, ptr %4129, align 4, !tbaa !5
  %4131 = getelementptr inbounds i32, ptr %6, i64 %4120
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = add nsw i32 %4132, %4130
  store i32 %4133, ptr %4131, align 4, !tbaa !5
  br label %4152

4134:                                             ; preds = %4110, %4127
  %4135 = phi i32 [ %4122, %4127 ], [ %4111, %4110 ]
  %4136 = phi ptr [ %4121, %4127 ], [ %4, %4110 ]
  %4137 = phi i64 [ %4120, %4127 ], [ 0, %4110 ]
  %4138 = add nsw i32 %4135, 1
  store i32 %4138, ptr %4136, align 4, !tbaa !5
  %4139 = getelementptr inbounds i32, ptr %7, i64 %4137
  %4140 = load i32, ptr %4139, align 4, !tbaa !5
  %4141 = getelementptr inbounds i32, ptr %6, i64 %4137
  br label %4152

4142:                                             ; preds = %4119
  %4143 = icmp eq i32 %4122, %4125
  br i1 %4143, label %4144, label %4150

4144:                                             ; preds = %4142
  store i32 0, ptr %4121, align 4, !tbaa !5
  %4145 = getelementptr inbounds i32, ptr %8, i64 %4120
  %4146 = load i32, ptr %4145, align 4, !tbaa !5
  %4147 = getelementptr inbounds i32, ptr %6, i64 %4120
  store i32 %4146, ptr %4147, align 4, !tbaa !5
  %4148 = add nuw nsw i64 %4120, 1
  %4149 = icmp eq i64 %4148, %4021
  br i1 %4149, label %4157, label %4119, !llvm.loop !897

4150:                                             ; preds = %4115, %4142
  store double %4107, ptr %3693, align 8, !tbaa !18
  %4151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4152:                                             ; preds = %4128, %4134
  %4153 = phi ptr [ %4141, %4134 ], [ %4121, %4128 ]
  %4154 = phi i32 [ %4140, %4134 ], [ 1, %4128 ]
  %4155 = load i32, ptr %4153, align 4, !tbaa !5
  %4156 = add nsw i32 %4155, %4154
  store i32 %4156, ptr %4153, align 4, !tbaa !5
  br label %4157

4157:                                             ; preds = %4144, %4152, %4117, %4098
  %4158 = icmp eq i32 %4109, %5
  br i1 %4158, label %5533, label %4024, !llvm.loop !898

4159:                                             ; preds = %4007, %4297
  %4160 = phi double [ 0.000000e+00, %4007 ], [ %4245, %4297 ]
  %4161 = phi i32 [ 0, %4007 ], [ %4246, %4297 ]
  %4162 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4008, label %4163, label %4232

4163:                                             ; preds = %4159, %4222
  %4164 = phi i32 [ %4231, %4222 ], [ 0, %4159 ]
  %4165 = phi i64 [ %4173, %4222 ], [ %4012, %4159 ]
  %4166 = phi i64 [ %4230, %4222 ], [ %4011, %4159 ]
  %4167 = phi i32 [ %4228, %4222 ], [ %4162, %4159 ]
  %4168 = sub i32 %4010, %4164
  %4169 = tail call i32 @llvm.smin.i32(i32 %4168, i32 0)
  %4170 = sub i32 %4168, %4169
  %4171 = zext i32 %4170 to i64
  %4172 = add nuw nsw i64 %4171, 1
  %4173 = add nsw i64 %4165, -1
  %4174 = icmp ult i32 %4170, 31
  br i1 %4174, label %4210, label %4175

4175:                                             ; preds = %4163
  %4176 = and i64 %4172, 8589934560
  %4177 = sub i64 %4166, %4176
  br label %4178

4178:                                             ; preds = %4178, %4175
  %4179 = phi i64 [ 0, %4175 ], [ %4202, %4178 ]
  %4180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4198, %4178 ]
  %4181 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4199, %4178 ]
  %4182 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4200, %4178 ]
  %4183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4175 ], [ %4201, %4178 ]
  %4184 = sub i64 %4166, %4179
  %4185 = getelementptr inbounds i32, ptr %11, i64 %4184
  %4186 = getelementptr inbounds i32, ptr %4185, i64 -7
  %4187 = load <8 x i32>, ptr %4186, align 4, !tbaa !5
  %4188 = shufflevector <8 x i32> %4187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4189 = getelementptr inbounds i32, ptr %4185, i64 -15
  %4190 = load <8 x i32>, ptr %4189, align 4, !tbaa !5
  %4191 = shufflevector <8 x i32> %4190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4192 = getelementptr inbounds i32, ptr %4185, i64 -23
  %4193 = load <8 x i32>, ptr %4192, align 4, !tbaa !5
  %4194 = shufflevector <8 x i32> %4193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4195 = getelementptr inbounds i32, ptr %4185, i64 -31
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !5
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = mul <8 x i32> %4188, %4180
  %4199 = mul <8 x i32> %4191, %4181
  %4200 = mul <8 x i32> %4194, %4182
  %4201 = mul <8 x i32> %4197, %4183
  %4202 = add nuw i64 %4179, 32
  %4203 = icmp eq i64 %4202, %4176
  br i1 %4203, label %4204, label %4178, !llvm.loop !899

4204:                                             ; preds = %4178
  %4205 = mul <8 x i32> %4199, %4198
  %4206 = mul <8 x i32> %4200, %4205
  %4207 = mul <8 x i32> %4201, %4206
  %4208 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4207)
  %4209 = icmp eq i64 %4172, %4176
  br i1 %4209, label %4222, label %4210

4210:                                             ; preds = %4163, %4204
  %4211 = phi i64 [ %4166, %4163 ], [ %4177, %4204 ]
  %4212 = phi i32 [ 1, %4163 ], [ %4208, %4204 ]
  br label %4213

4213:                                             ; preds = %4210, %4213
  %4214 = phi i64 [ %4219, %4213 ], [ %4211, %4210 ]
  %4215 = phi i32 [ %4218, %4213 ], [ %4212, %4210 ]
  %4216 = getelementptr inbounds i32, ptr %11, i64 %4214
  %4217 = load i32, ptr %4216, align 4, !tbaa !5
  %4218 = mul nsw i32 %4217, %4215
  %4219 = add nsw i64 %4214, -1
  %4220 = trunc i64 %4214 to i32
  %4221 = icmp sgt i32 %4220, 0
  br i1 %4221, label %4213, label %4222, !llvm.loop !900

4222:                                             ; preds = %4213, %4204
  %4223 = phi i32 [ %4208, %4204 ], [ %4218, %4213 ]
  %4224 = and i64 %4173, 4294967295
  %4225 = getelementptr inbounds i32, ptr %6, i64 %4224
  %4226 = load i32, ptr %4225, align 4, !tbaa !5
  %4227 = mul nsw i32 %4226, %4223
  %4228 = add nsw i32 %4227, %4167
  %4229 = icmp sgt i64 %4165, 2
  %4230 = add nsw i64 %4166, -1
  %4231 = add i32 %4164, 1
  br i1 %4229, label %4163, label %4232, !llvm.loop !901

4232:                                             ; preds = %4222, %4159
  %4233 = phi i32 [ %4162, %4159 ], [ %4228, %4222 ]
  %4234 = icmp slt i32 %4233, %5
  br i1 %4234, label %4237, label %4235

4235:                                             ; preds = %4232
  %4236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

4237:                                             ; preds = %4232
  %4238 = sext i32 %4233 to i64
  %4239 = getelementptr inbounds i64, ptr %3691, i64 %4238
  %4240 = load i64, ptr %4239, align 8, !tbaa !120
  %4241 = sitofp i64 %4240 to double
  %4242 = icmp slt i64 %4240, 0
  %4243 = fneg fast double %4241
  %4244 = select fast i1 %4242, double %4243, double %4241
  %4245 = fadd fast double %4244, %4160
  store double %4245, ptr %3693, align 8, !tbaa !18
  %4246 = add nuw nsw i32 %4161, 1
  br i1 %4009, label %4247, label %4297

4247:                                             ; preds = %4237
  %4248 = load i32, ptr %4, align 4, !tbaa !5
  %4249 = load i32, ptr %12, align 4, !tbaa !5
  %4250 = add nsw i32 %4249, -1
  %4251 = icmp slt i32 %4248, %4250
  br i1 %4251, label %4274, label %4252

4252:                                             ; preds = %4247
  %4253 = icmp eq i32 %4248, %4250
  br i1 %4253, label %4254, label %4290

4254:                                             ; preds = %4252
  store i32 0, ptr %4, align 4, !tbaa !5
  %4255 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4255, ptr %6, align 4, !tbaa !5
  br i1 %4014, label %4297, label %4256

4256:                                             ; preds = %4254, %4284
  %4257 = phi i64 [ %4288, %4284 ], [ 1, %4254 ]
  %4258 = getelementptr inbounds i32, ptr %4, i64 %4257
  %4259 = load i32, ptr %4258, align 4, !tbaa !5
  %4260 = getelementptr inbounds i32, ptr %12, i64 %4257
  %4261 = load i32, ptr %4260, align 4, !tbaa !5
  %4262 = add nsw i32 %4261, -1
  %4263 = icmp slt i32 %4259, %4262
  br i1 %4263, label %4264, label %4282

4264:                                             ; preds = %4256
  br i1 %4251, label %4274, label %4265

4265:                                             ; preds = %4264
  %4266 = shl i64 %4257, 32
  %4267 = add i64 %4266, -4294967296
  %4268 = ashr exact i64 %4267, 32
  %4269 = getelementptr inbounds i32, ptr %7, i64 %4268
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = getelementptr inbounds i32, ptr %6, i64 %4257
  %4272 = load i32, ptr %4271, align 4, !tbaa !5
  %4273 = add nsw i32 %4272, %4270
  store i32 %4273, ptr %4271, align 4, !tbaa !5
  br label %4292

4274:                                             ; preds = %4247, %4264
  %4275 = phi i32 [ %4259, %4264 ], [ %4248, %4247 ]
  %4276 = phi ptr [ %4258, %4264 ], [ %4, %4247 ]
  %4277 = phi i64 [ %4257, %4264 ], [ 0, %4247 ]
  %4278 = add nsw i32 %4275, 1
  store i32 %4278, ptr %4276, align 4, !tbaa !5
  %4279 = getelementptr inbounds i32, ptr %7, i64 %4277
  %4280 = load i32, ptr %4279, align 4, !tbaa !5
  %4281 = getelementptr inbounds i32, ptr %6, i64 %4277
  br label %4292

4282:                                             ; preds = %4256
  %4283 = icmp eq i32 %4259, %4262
  br i1 %4283, label %4284, label %4290

4284:                                             ; preds = %4282
  store i32 0, ptr %4258, align 4, !tbaa !5
  %4285 = getelementptr inbounds i32, ptr %8, i64 %4257
  %4286 = load i32, ptr %4285, align 4, !tbaa !5
  %4287 = getelementptr inbounds i32, ptr %6, i64 %4257
  store i32 %4286, ptr %4287, align 4, !tbaa !5
  %4288 = add nuw nsw i64 %4257, 1
  %4289 = icmp eq i64 %4288, %4012
  br i1 %4289, label %4297, label %4256, !llvm.loop !902

4290:                                             ; preds = %4252, %4282
  %4291 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4292:                                             ; preds = %4265, %4274
  %4293 = phi ptr [ %4281, %4274 ], [ %4258, %4265 ]
  %4294 = phi i32 [ %4280, %4274 ], [ 1, %4265 ]
  %4295 = load i32, ptr %4293, align 4, !tbaa !5
  %4296 = add nsw i32 %4295, %4294
  store i32 %4296, ptr %4293, align 4, !tbaa !5
  br label %4297

4297:                                             ; preds = %4284, %4292, %4254, %4237
  %4298 = icmp eq i32 %4246, %5
  br i1 %4298, label %5537, label %4159, !llvm.loop !903

4299:                                             ; preds = %3701
  %4300 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

4301:                                             ; preds = %18
  %4302 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4303 = load ptr, ptr %4302, align 8, !tbaa !9
  %4304 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4305 = load ptr, ptr %4304, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4305, align 4, !tbaa !162
  %4306 = icmp eq i32 %13, 0
  br i1 %4306, label %4307, label %4313

4307:                                             ; preds = %4301
  %4308 = load i64, ptr %4303, align 8, !tbaa !120
  %4309 = sitofp i64 %4308 to float
  %4310 = icmp slt i64 %4308, 0
  %4311 = fneg fast float %4309
  %4312 = select fast i1 %4310, float %4311, float %4309
  store float %4312, ptr %4305, align 4, !tbaa !162
  br label %5537

4313:                                             ; preds = %4301
  switch i32 %1, label %4917 [
    i32 1, label %4314
    i32 0, label %4619
  ]

4314:                                             ; preds = %4313
  %4315 = getelementptr inbounds i32, ptr %3, i64 %19
  %4316 = load i32, ptr %4315, align 4, !tbaa !5
  %4317 = icmp eq i32 %4316, 0
  %4318 = icmp sgt i32 %5, 0
  br i1 %4317, label %4328, label %4319

4319:                                             ; preds = %4314
  br i1 %4318, label %4320, label %5537

4320:                                             ; preds = %4319
  %4321 = icmp sgt i32 %13, 1
  %4322 = icmp sgt i32 %13, 0
  %4323 = add i32 %13, -2
  %4324 = zext i32 %4323 to i64
  %4325 = zext i32 %13 to i64
  %4326 = add nuw i32 %5, 1
  %4327 = icmp eq i32 %13, 1
  br label %4476

4328:                                             ; preds = %4314
  br i1 %4318, label %4329, label %5537

4329:                                             ; preds = %4328
  %4330 = icmp sgt i32 %13, 1
  %4331 = icmp sgt i32 %13, 0
  %4332 = add i32 %13, -2
  %4333 = zext i32 %4332 to i64
  %4334 = zext i32 %13 to i64
  %4335 = add nuw i32 %5, 1
  %4336 = icmp eq i32 %13, 1
  br label %4337

4337:                                             ; preds = %4329, %4474
  %4338 = phi float [ 0.000000e+00, %4329 ], [ %4424, %4474 ]
  %4339 = phi i32 [ 0, %4329 ], [ %4426, %4474 ]
  %4340 = phi double [ 0.000000e+00, %4329 ], [ %4425, %4474 ]
  %4341 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4330, label %4342, label %4411

4342:                                             ; preds = %4337, %4401
  %4343 = phi i32 [ %4410, %4401 ], [ 0, %4337 ]
  %4344 = phi i64 [ %4352, %4401 ], [ %4334, %4337 ]
  %4345 = phi i64 [ %4409, %4401 ], [ %4333, %4337 ]
  %4346 = phi i32 [ %4407, %4401 ], [ %4341, %4337 ]
  %4347 = sub i32 %4332, %4343
  %4348 = tail call i32 @llvm.smin.i32(i32 %4347, i32 0)
  %4349 = sub i32 %4347, %4348
  %4350 = zext i32 %4349 to i64
  %4351 = add nuw nsw i64 %4350, 1
  %4352 = add nsw i64 %4344, -1
  %4353 = icmp ult i32 %4349, 31
  br i1 %4353, label %4389, label %4354

4354:                                             ; preds = %4342
  %4355 = and i64 %4351, 8589934560
  %4356 = sub i64 %4345, %4355
  br label %4357

4357:                                             ; preds = %4357, %4354
  %4358 = phi i64 [ 0, %4354 ], [ %4381, %4357 ]
  %4359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4354 ], [ %4377, %4357 ]
  %4360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4354 ], [ %4378, %4357 ]
  %4361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4354 ], [ %4379, %4357 ]
  %4362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4354 ], [ %4380, %4357 ]
  %4363 = sub i64 %4345, %4358
  %4364 = getelementptr inbounds i32, ptr %9, i64 %4363
  %4365 = getelementptr inbounds i32, ptr %4364, i64 -7
  %4366 = load <8 x i32>, ptr %4365, align 4, !tbaa !5
  %4367 = shufflevector <8 x i32> %4366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4368 = getelementptr inbounds i32, ptr %4364, i64 -15
  %4369 = load <8 x i32>, ptr %4368, align 4, !tbaa !5
  %4370 = shufflevector <8 x i32> %4369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4371 = getelementptr inbounds i32, ptr %4364, i64 -23
  %4372 = load <8 x i32>, ptr %4371, align 4, !tbaa !5
  %4373 = shufflevector <8 x i32> %4372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4374 = getelementptr inbounds i32, ptr %4364, i64 -31
  %4375 = load <8 x i32>, ptr %4374, align 4, !tbaa !5
  %4376 = shufflevector <8 x i32> %4375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4377 = mul <8 x i32> %4367, %4359
  %4378 = mul <8 x i32> %4370, %4360
  %4379 = mul <8 x i32> %4373, %4361
  %4380 = mul <8 x i32> %4376, %4362
  %4381 = add nuw i64 %4358, 32
  %4382 = icmp eq i64 %4381, %4355
  br i1 %4382, label %4383, label %4357, !llvm.loop !904

4383:                                             ; preds = %4357
  %4384 = mul <8 x i32> %4378, %4377
  %4385 = mul <8 x i32> %4379, %4384
  %4386 = mul <8 x i32> %4380, %4385
  %4387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4386)
  %4388 = icmp eq i64 %4351, %4355
  br i1 %4388, label %4401, label %4389

4389:                                             ; preds = %4342, %4383
  %4390 = phi i64 [ %4345, %4342 ], [ %4356, %4383 ]
  %4391 = phi i32 [ 1, %4342 ], [ %4387, %4383 ]
  br label %4392

4392:                                             ; preds = %4389, %4392
  %4393 = phi i64 [ %4398, %4392 ], [ %4390, %4389 ]
  %4394 = phi i32 [ %4397, %4392 ], [ %4391, %4389 ]
  %4395 = getelementptr inbounds i32, ptr %9, i64 %4393
  %4396 = load i32, ptr %4395, align 4, !tbaa !5
  %4397 = mul nsw i32 %4396, %4394
  %4398 = add nsw i64 %4393, -1
  %4399 = trunc i64 %4393 to i32
  %4400 = icmp sgt i32 %4399, 0
  br i1 %4400, label %4392, label %4401, !llvm.loop !905

4401:                                             ; preds = %4392, %4383
  %4402 = phi i32 [ %4387, %4383 ], [ %4397, %4392 ]
  %4403 = and i64 %4352, 4294967295
  %4404 = getelementptr inbounds i32, ptr %6, i64 %4403
  %4405 = load i32, ptr %4404, align 4, !tbaa !5
  %4406 = mul nsw i32 %4405, %4402
  %4407 = add nsw i32 %4406, %4346
  %4408 = icmp sgt i64 %4344, 2
  %4409 = add nsw i64 %4345, -1
  %4410 = add i32 %4343, 1
  br i1 %4408, label %4342, label %4411, !llvm.loop !906

4411:                                             ; preds = %4401, %4337
  %4412 = phi i32 [ %4341, %4337 ], [ %4407, %4401 ]
  %4413 = sext i32 %4412 to i64
  %4414 = getelementptr inbounds double, ptr %2, i64 %4413
  %4415 = load double, ptr %4414, align 8, !tbaa !18
  %4416 = getelementptr inbounds i64, ptr %4303, i64 %4413
  %4417 = load i64, ptr %4416, align 8, !tbaa !120
  %4418 = sitofp i64 %4417 to float
  %4419 = fpext float %4338 to double
  %4420 = fpext float %4418 to double
  %4421 = fmul fast double %4415, %4420
  %4422 = tail call fast double @llvm.fabs.f64(double %4421)
  %4423 = fadd fast double %4422, %4419
  %4424 = fptrunc double %4423 to float
  %4425 = fadd fast double %4415, %4340
  %4426 = add nuw nsw i32 %4339, 1
  br i1 %4331, label %4427, label %4474

4427:                                             ; preds = %4411
  %4428 = load i32, ptr %4, align 4, !tbaa !5
  %4429 = load i32, ptr %12, align 4, !tbaa !5
  %4430 = add nsw i32 %4429, -1
  %4431 = icmp slt i32 %4428, %4430
  br i1 %4431, label %4451, label %4432

4432:                                             ; preds = %4427
  %4433 = icmp eq i32 %4428, %4430
  br i1 %4433, label %4434, label %4467

4434:                                             ; preds = %4432
  store i32 0, ptr %4, align 4, !tbaa !5
  %4435 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4435, ptr %6, align 4, !tbaa !5
  br i1 %4336, label %4474, label %4436

4436:                                             ; preds = %4434, %4461
  %4437 = phi i64 [ %4465, %4461 ], [ 1, %4434 ]
  %4438 = getelementptr inbounds i32, ptr %4, i64 %4437
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %12, i64 %4437
  %4441 = load i32, ptr %4440, align 4, !tbaa !5
  %4442 = add nsw i32 %4441, -1
  %4443 = icmp slt i32 %4439, %4442
  br i1 %4443, label %4444, label %4459

4444:                                             ; preds = %4436
  br i1 %4431, label %4451, label %4445

4445:                                             ; preds = %4444
  %4446 = getelementptr inbounds i32, ptr %7, i64 %4437
  %4447 = load i32, ptr %4446, align 4, !tbaa !5
  %4448 = getelementptr inbounds i32, ptr %6, i64 %4437
  %4449 = load i32, ptr %4448, align 4, !tbaa !5
  %4450 = add nsw i32 %4449, %4447
  store i32 %4450, ptr %4448, align 4, !tbaa !5
  br label %4469

4451:                                             ; preds = %4427, %4444
  %4452 = phi i32 [ %4439, %4444 ], [ %4428, %4427 ]
  %4453 = phi ptr [ %4438, %4444 ], [ %4, %4427 ]
  %4454 = phi i64 [ %4437, %4444 ], [ 0, %4427 ]
  %4455 = add nsw i32 %4452, 1
  store i32 %4455, ptr %4453, align 4, !tbaa !5
  %4456 = getelementptr inbounds i32, ptr %7, i64 %4454
  %4457 = load i32, ptr %4456, align 4, !tbaa !5
  %4458 = getelementptr inbounds i32, ptr %6, i64 %4454
  br label %4469

4459:                                             ; preds = %4436
  %4460 = icmp eq i32 %4439, %4442
  br i1 %4460, label %4461, label %4467

4461:                                             ; preds = %4459
  store i32 0, ptr %4438, align 4, !tbaa !5
  %4462 = getelementptr inbounds i32, ptr %8, i64 %4437
  %4463 = load i32, ptr %4462, align 4, !tbaa !5
  %4464 = getelementptr inbounds i32, ptr %6, i64 %4437
  store i32 %4463, ptr %4464, align 4, !tbaa !5
  %4465 = add nuw nsw i64 %4437, 1
  %4466 = icmp eq i64 %4465, %4334
  br i1 %4466, label %4474, label %4436, !llvm.loop !907

4467:                                             ; preds = %4432, %4459
  store float %4424, ptr %4305, align 4, !tbaa !162
  %4468 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4469:                                             ; preds = %4445, %4451
  %4470 = phi ptr [ %4458, %4451 ], [ %4438, %4445 ]
  %4471 = phi i32 [ %4457, %4451 ], [ 1, %4445 ]
  %4472 = load i32, ptr %4470, align 4, !tbaa !5
  %4473 = add nsw i32 %4472, %4471
  store i32 %4473, ptr %4470, align 4, !tbaa !5
  br label %4474

4474:                                             ; preds = %4461, %4469, %4434, %4411
  %4475 = icmp eq i32 %4426, %5
  br i1 %4475, label %5534, label %4337, !llvm.loop !908

4476:                                             ; preds = %4320, %4617
  %4477 = phi float [ 0.000000e+00, %4320 ], [ %4565, %4617 ]
  %4478 = phi i32 [ 0, %4320 ], [ %4566, %4617 ]
  %4479 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4321, label %4480, label %4549

4480:                                             ; preds = %4476, %4539
  %4481 = phi i32 [ %4548, %4539 ], [ 0, %4476 ]
  %4482 = phi i64 [ %4490, %4539 ], [ %4325, %4476 ]
  %4483 = phi i64 [ %4547, %4539 ], [ %4324, %4476 ]
  %4484 = phi i32 [ %4545, %4539 ], [ %4479, %4476 ]
  %4485 = sub i32 %4323, %4481
  %4486 = tail call i32 @llvm.smin.i32(i32 %4485, i32 0)
  %4487 = sub i32 %4485, %4486
  %4488 = zext i32 %4487 to i64
  %4489 = add nuw nsw i64 %4488, 1
  %4490 = add nsw i64 %4482, -1
  %4491 = icmp ult i32 %4487, 31
  br i1 %4491, label %4527, label %4492

4492:                                             ; preds = %4480
  %4493 = and i64 %4489, 8589934560
  %4494 = sub i64 %4483, %4493
  br label %4495

4495:                                             ; preds = %4495, %4492
  %4496 = phi i64 [ 0, %4492 ], [ %4519, %4495 ]
  %4497 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4492 ], [ %4515, %4495 ]
  %4498 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4492 ], [ %4516, %4495 ]
  %4499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4492 ], [ %4517, %4495 ]
  %4500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4492 ], [ %4518, %4495 ]
  %4501 = sub i64 %4483, %4496
  %4502 = getelementptr inbounds i32, ptr %11, i64 %4501
  %4503 = getelementptr inbounds i32, ptr %4502, i64 -7
  %4504 = load <8 x i32>, ptr %4503, align 4, !tbaa !5
  %4505 = shufflevector <8 x i32> %4504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4506 = getelementptr inbounds i32, ptr %4502, i64 -15
  %4507 = load <8 x i32>, ptr %4506, align 4, !tbaa !5
  %4508 = shufflevector <8 x i32> %4507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4509 = getelementptr inbounds i32, ptr %4502, i64 -23
  %4510 = load <8 x i32>, ptr %4509, align 4, !tbaa !5
  %4511 = shufflevector <8 x i32> %4510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4512 = getelementptr inbounds i32, ptr %4502, i64 -31
  %4513 = load <8 x i32>, ptr %4512, align 4, !tbaa !5
  %4514 = shufflevector <8 x i32> %4513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4515 = mul <8 x i32> %4505, %4497
  %4516 = mul <8 x i32> %4508, %4498
  %4517 = mul <8 x i32> %4511, %4499
  %4518 = mul <8 x i32> %4514, %4500
  %4519 = add nuw i64 %4496, 32
  %4520 = icmp eq i64 %4519, %4493
  br i1 %4520, label %4521, label %4495, !llvm.loop !909

4521:                                             ; preds = %4495
  %4522 = mul <8 x i32> %4516, %4515
  %4523 = mul <8 x i32> %4517, %4522
  %4524 = mul <8 x i32> %4518, %4523
  %4525 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4524)
  %4526 = icmp eq i64 %4489, %4493
  br i1 %4526, label %4539, label %4527

4527:                                             ; preds = %4480, %4521
  %4528 = phi i64 [ %4483, %4480 ], [ %4494, %4521 ]
  %4529 = phi i32 [ 1, %4480 ], [ %4525, %4521 ]
  br label %4530

4530:                                             ; preds = %4527, %4530
  %4531 = phi i64 [ %4536, %4530 ], [ %4528, %4527 ]
  %4532 = phi i32 [ %4535, %4530 ], [ %4529, %4527 ]
  %4533 = getelementptr inbounds i32, ptr %11, i64 %4531
  %4534 = load i32, ptr %4533, align 4, !tbaa !5
  %4535 = mul nsw i32 %4534, %4532
  %4536 = add nsw i64 %4531, -1
  %4537 = trunc i64 %4531 to i32
  %4538 = icmp sgt i32 %4537, 0
  br i1 %4538, label %4530, label %4539, !llvm.loop !910

4539:                                             ; preds = %4530, %4521
  %4540 = phi i32 [ %4525, %4521 ], [ %4535, %4530 ]
  %4541 = and i64 %4490, 4294967295
  %4542 = getelementptr inbounds i32, ptr %6, i64 %4541
  %4543 = load i32, ptr %4542, align 4, !tbaa !5
  %4544 = mul nsw i32 %4543, %4540
  %4545 = add nsw i32 %4544, %4484
  %4546 = icmp sgt i64 %4482, 2
  %4547 = add nsw i64 %4483, -1
  %4548 = add i32 %4481, 1
  br i1 %4546, label %4480, label %4549, !llvm.loop !911

4549:                                             ; preds = %4539, %4476
  %4550 = phi i32 [ %4479, %4476 ], [ %4545, %4539 ]
  %4551 = icmp slt i32 %4550, %5
  br i1 %4551, label %4554, label %4552

4552:                                             ; preds = %4549
  %4553 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

4554:                                             ; preds = %4549
  %4555 = sext i32 %4550 to i64
  %4556 = getelementptr inbounds i64, ptr %4303, i64 %4555
  %4557 = load i64, ptr %4556, align 8, !tbaa !120
  %4558 = sitofp i64 %4557 to float
  %4559 = fpext float %4477 to double
  %4560 = fpext float %4558 to double
  %4561 = icmp slt i64 %4557, 0
  %4562 = fneg fast double %4560
  %4563 = select fast i1 %4561, double %4562, double %4560
  %4564 = fadd fast double %4563, %4559
  %4565 = fptrunc double %4564 to float
  store float %4565, ptr %4305, align 4, !tbaa !162
  %4566 = add nuw nsw i32 %4478, 1
  br i1 %4322, label %4567, label %4617

4567:                                             ; preds = %4554
  %4568 = load i32, ptr %4, align 4, !tbaa !5
  %4569 = load i32, ptr %12, align 4, !tbaa !5
  %4570 = add nsw i32 %4569, -1
  %4571 = icmp slt i32 %4568, %4570
  br i1 %4571, label %4594, label %4572

4572:                                             ; preds = %4567
  %4573 = icmp eq i32 %4568, %4570
  br i1 %4573, label %4574, label %4610

4574:                                             ; preds = %4572
  store i32 0, ptr %4, align 4, !tbaa !5
  %4575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4575, ptr %6, align 4, !tbaa !5
  br i1 %4327, label %4617, label %4576

4576:                                             ; preds = %4574, %4604
  %4577 = phi i64 [ %4608, %4604 ], [ 1, %4574 ]
  %4578 = getelementptr inbounds i32, ptr %4, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %12, i64 %4577
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = add nsw i32 %4581, -1
  %4583 = icmp slt i32 %4579, %4582
  br i1 %4583, label %4584, label %4602

4584:                                             ; preds = %4576
  br i1 %4571, label %4594, label %4585

4585:                                             ; preds = %4584
  %4586 = shl i64 %4577, 32
  %4587 = add i64 %4586, -4294967296
  %4588 = ashr exact i64 %4587, 32
  %4589 = getelementptr inbounds i32, ptr %7, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !5
  %4591 = getelementptr inbounds i32, ptr %6, i64 %4577
  %4592 = load i32, ptr %4591, align 4, !tbaa !5
  %4593 = add nsw i32 %4592, %4590
  store i32 %4593, ptr %4591, align 4, !tbaa !5
  br label %4612

4594:                                             ; preds = %4567, %4584
  %4595 = phi i32 [ %4579, %4584 ], [ %4568, %4567 ]
  %4596 = phi ptr [ %4578, %4584 ], [ %4, %4567 ]
  %4597 = phi i64 [ %4577, %4584 ], [ 0, %4567 ]
  %4598 = add nsw i32 %4595, 1
  store i32 %4598, ptr %4596, align 4, !tbaa !5
  %4599 = getelementptr inbounds i32, ptr %7, i64 %4597
  %4600 = load i32, ptr %4599, align 4, !tbaa !5
  %4601 = getelementptr inbounds i32, ptr %6, i64 %4597
  br label %4612

4602:                                             ; preds = %4576
  %4603 = icmp eq i32 %4579, %4582
  br i1 %4603, label %4604, label %4610

4604:                                             ; preds = %4602
  store i32 0, ptr %4578, align 4, !tbaa !5
  %4605 = getelementptr inbounds i32, ptr %8, i64 %4577
  %4606 = load i32, ptr %4605, align 4, !tbaa !5
  %4607 = getelementptr inbounds i32, ptr %6, i64 %4577
  store i32 %4606, ptr %4607, align 4, !tbaa !5
  %4608 = add nuw nsw i64 %4577, 1
  %4609 = icmp eq i64 %4608, %4325
  br i1 %4609, label %4617, label %4576, !llvm.loop !912

4610:                                             ; preds = %4572, %4602
  %4611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4612:                                             ; preds = %4585, %4594
  %4613 = phi ptr [ %4601, %4594 ], [ %4578, %4585 ]
  %4614 = phi i32 [ %4600, %4594 ], [ 1, %4585 ]
  %4615 = load i32, ptr %4613, align 4, !tbaa !5
  %4616 = add nsw i32 %4615, %4614
  store i32 %4616, ptr %4613, align 4, !tbaa !5
  br label %4617

4617:                                             ; preds = %4604, %4612, %4574, %4554
  %4618 = icmp eq i32 %4566, %5
  br i1 %4618, label %5537, label %4476, !llvm.loop !913

4619:                                             ; preds = %4313
  %4620 = getelementptr inbounds i32, ptr %3, i64 %19
  %4621 = load i32, ptr %4620, align 4, !tbaa !5
  %4622 = icmp eq i32 %4621, 0
  %4623 = icmp sgt i32 %5, 0
  br i1 %4622, label %4633, label %4624

4624:                                             ; preds = %4619
  br i1 %4623, label %4625, label %5537

4625:                                             ; preds = %4624
  %4626 = icmp sgt i32 %13, 1
  %4627 = icmp sgt i32 %13, 0
  %4628 = add i32 %13, -2
  %4629 = zext i32 %4628 to i64
  %4630 = zext i32 %13 to i64
  %4631 = add nuw i32 %5, 1
  %4632 = icmp eq i32 %13, 1
  br label %4777

4633:                                             ; preds = %4619
  br i1 %4623, label %4634, label %5537

4634:                                             ; preds = %4633
  %4635 = icmp sgt i32 %13, 1
  %4636 = icmp sgt i32 %13, 0
  %4637 = add i32 %13, -2
  %4638 = zext i32 %4637 to i64
  %4639 = zext i32 %13 to i64
  %4640 = add nuw i32 %5, 1
  %4641 = icmp eq i32 %13, 1
  br label %4642

4642:                                             ; preds = %4634, %4775
  %4643 = phi float [ 0.000000e+00, %4634 ], [ %4725, %4775 ]
  %4644 = phi i32 [ 0, %4634 ], [ %4727, %4775 ]
  %4645 = phi double [ 0.000000e+00, %4634 ], [ %4726, %4775 ]
  %4646 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4635, label %4647, label %4716

4647:                                             ; preds = %4642, %4706
  %4648 = phi i32 [ %4715, %4706 ], [ 0, %4642 ]
  %4649 = phi i64 [ %4657, %4706 ], [ %4639, %4642 ]
  %4650 = phi i64 [ %4714, %4706 ], [ %4638, %4642 ]
  %4651 = phi i32 [ %4712, %4706 ], [ %4646, %4642 ]
  %4652 = sub i32 %4637, %4648
  %4653 = tail call i32 @llvm.smin.i32(i32 %4652, i32 0)
  %4654 = sub i32 %4652, %4653
  %4655 = zext i32 %4654 to i64
  %4656 = add nuw nsw i64 %4655, 1
  %4657 = add nsw i64 %4649, -1
  %4658 = icmp ult i32 %4654, 31
  br i1 %4658, label %4694, label %4659

4659:                                             ; preds = %4647
  %4660 = and i64 %4656, 8589934560
  %4661 = sub i64 %4650, %4660
  br label %4662

4662:                                             ; preds = %4662, %4659
  %4663 = phi i64 [ 0, %4659 ], [ %4686, %4662 ]
  %4664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4682, %4662 ]
  %4665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4683, %4662 ]
  %4666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4684, %4662 ]
  %4667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4685, %4662 ]
  %4668 = sub i64 %4650, %4663
  %4669 = getelementptr inbounds i32, ptr %9, i64 %4668
  %4670 = getelementptr inbounds i32, ptr %4669, i64 -7
  %4671 = load <8 x i32>, ptr %4670, align 4, !tbaa !5
  %4672 = shufflevector <8 x i32> %4671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4673 = getelementptr inbounds i32, ptr %4669, i64 -15
  %4674 = load <8 x i32>, ptr %4673, align 4, !tbaa !5
  %4675 = shufflevector <8 x i32> %4674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4676 = getelementptr inbounds i32, ptr %4669, i64 -23
  %4677 = load <8 x i32>, ptr %4676, align 4, !tbaa !5
  %4678 = shufflevector <8 x i32> %4677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4679 = getelementptr inbounds i32, ptr %4669, i64 -31
  %4680 = load <8 x i32>, ptr %4679, align 4, !tbaa !5
  %4681 = shufflevector <8 x i32> %4680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4682 = mul <8 x i32> %4672, %4664
  %4683 = mul <8 x i32> %4675, %4665
  %4684 = mul <8 x i32> %4678, %4666
  %4685 = mul <8 x i32> %4681, %4667
  %4686 = add nuw i64 %4663, 32
  %4687 = icmp eq i64 %4686, %4660
  br i1 %4687, label %4688, label %4662, !llvm.loop !914

4688:                                             ; preds = %4662
  %4689 = mul <8 x i32> %4683, %4682
  %4690 = mul <8 x i32> %4684, %4689
  %4691 = mul <8 x i32> %4685, %4690
  %4692 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4691)
  %4693 = icmp eq i64 %4656, %4660
  br i1 %4693, label %4706, label %4694

4694:                                             ; preds = %4647, %4688
  %4695 = phi i64 [ %4650, %4647 ], [ %4661, %4688 ]
  %4696 = phi i32 [ 1, %4647 ], [ %4692, %4688 ]
  br label %4697

4697:                                             ; preds = %4694, %4697
  %4698 = phi i64 [ %4703, %4697 ], [ %4695, %4694 ]
  %4699 = phi i32 [ %4702, %4697 ], [ %4696, %4694 ]
  %4700 = getelementptr inbounds i32, ptr %9, i64 %4698
  %4701 = load i32, ptr %4700, align 4, !tbaa !5
  %4702 = mul nsw i32 %4701, %4699
  %4703 = add nsw i64 %4698, -1
  %4704 = trunc i64 %4698 to i32
  %4705 = icmp sgt i32 %4704, 0
  br i1 %4705, label %4697, label %4706, !llvm.loop !915

4706:                                             ; preds = %4697, %4688
  %4707 = phi i32 [ %4692, %4688 ], [ %4702, %4697 ]
  %4708 = and i64 %4657, 4294967295
  %4709 = getelementptr inbounds i32, ptr %6, i64 %4708
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = mul nsw i32 %4710, %4707
  %4712 = add nsw i32 %4711, %4651
  %4713 = icmp sgt i64 %4649, 2
  %4714 = add nsw i64 %4650, -1
  %4715 = add i32 %4648, 1
  br i1 %4713, label %4647, label %4716, !llvm.loop !916

4716:                                             ; preds = %4706, %4642
  %4717 = phi i32 [ %4646, %4642 ], [ %4712, %4706 ]
  %4718 = sext i32 %4717 to i64
  %4719 = getelementptr inbounds i64, ptr %4303, i64 %4718
  %4720 = load i64, ptr %4719, align 8, !tbaa !120
  %4721 = sitofp i64 %4720 to float
  %4722 = icmp slt i64 %4720, 0
  %4723 = fneg fast float %4721
  %4724 = select fast i1 %4722, float %4723, float %4721
  %4725 = fadd fast float %4724, %4643
  %4726 = fadd fast double %4645, 1.000000e+00
  %4727 = add nuw nsw i32 %4644, 1
  br i1 %4636, label %4728, label %4775

4728:                                             ; preds = %4716
  %4729 = load i32, ptr %4, align 4, !tbaa !5
  %4730 = load i32, ptr %12, align 4, !tbaa !5
  %4731 = add nsw i32 %4730, -1
  %4732 = icmp slt i32 %4729, %4731
  br i1 %4732, label %4752, label %4733

4733:                                             ; preds = %4728
  %4734 = icmp eq i32 %4729, %4731
  br i1 %4734, label %4735, label %4768

4735:                                             ; preds = %4733
  store i32 0, ptr %4, align 4, !tbaa !5
  %4736 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4736, ptr %6, align 4, !tbaa !5
  br i1 %4641, label %4775, label %4737

4737:                                             ; preds = %4735, %4762
  %4738 = phi i64 [ %4766, %4762 ], [ 1, %4735 ]
  %4739 = getelementptr inbounds i32, ptr %4, i64 %4738
  %4740 = load i32, ptr %4739, align 4, !tbaa !5
  %4741 = getelementptr inbounds i32, ptr %12, i64 %4738
  %4742 = load i32, ptr %4741, align 4, !tbaa !5
  %4743 = add nsw i32 %4742, -1
  %4744 = icmp slt i32 %4740, %4743
  br i1 %4744, label %4745, label %4760

4745:                                             ; preds = %4737
  br i1 %4732, label %4752, label %4746

4746:                                             ; preds = %4745
  %4747 = getelementptr inbounds i32, ptr %7, i64 %4738
  %4748 = load i32, ptr %4747, align 4, !tbaa !5
  %4749 = getelementptr inbounds i32, ptr %6, i64 %4738
  %4750 = load i32, ptr %4749, align 4, !tbaa !5
  %4751 = add nsw i32 %4750, %4748
  store i32 %4751, ptr %4749, align 4, !tbaa !5
  br label %4770

4752:                                             ; preds = %4728, %4745
  %4753 = phi i32 [ %4740, %4745 ], [ %4729, %4728 ]
  %4754 = phi ptr [ %4739, %4745 ], [ %4, %4728 ]
  %4755 = phi i64 [ %4738, %4745 ], [ 0, %4728 ]
  %4756 = add nsw i32 %4753, 1
  store i32 %4756, ptr %4754, align 4, !tbaa !5
  %4757 = getelementptr inbounds i32, ptr %7, i64 %4755
  %4758 = load i32, ptr %4757, align 4, !tbaa !5
  %4759 = getelementptr inbounds i32, ptr %6, i64 %4755
  br label %4770

4760:                                             ; preds = %4737
  %4761 = icmp eq i32 %4740, %4743
  br i1 %4761, label %4762, label %4768

4762:                                             ; preds = %4760
  store i32 0, ptr %4739, align 4, !tbaa !5
  %4763 = getelementptr inbounds i32, ptr %8, i64 %4738
  %4764 = load i32, ptr %4763, align 4, !tbaa !5
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4738
  store i32 %4764, ptr %4765, align 4, !tbaa !5
  %4766 = add nuw nsw i64 %4738, 1
  %4767 = icmp eq i64 %4766, %4639
  br i1 %4767, label %4775, label %4737, !llvm.loop !917

4768:                                             ; preds = %4733, %4760
  store float %4725, ptr %4305, align 4, !tbaa !162
  %4769 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4770:                                             ; preds = %4746, %4752
  %4771 = phi ptr [ %4759, %4752 ], [ %4739, %4746 ]
  %4772 = phi i32 [ %4758, %4752 ], [ 1, %4746 ]
  %4773 = load i32, ptr %4771, align 4, !tbaa !5
  %4774 = add nsw i32 %4773, %4772
  store i32 %4774, ptr %4771, align 4, !tbaa !5
  br label %4775

4775:                                             ; preds = %4762, %4770, %4735, %4716
  %4776 = icmp eq i32 %4727, %5
  br i1 %4776, label %5535, label %4642, !llvm.loop !918

4777:                                             ; preds = %4625, %4915
  %4778 = phi float [ 0.000000e+00, %4625 ], [ %4863, %4915 ]
  %4779 = phi i32 [ 0, %4625 ], [ %4864, %4915 ]
  %4780 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4626, label %4781, label %4850

4781:                                             ; preds = %4777, %4840
  %4782 = phi i32 [ %4849, %4840 ], [ 0, %4777 ]
  %4783 = phi i64 [ %4791, %4840 ], [ %4630, %4777 ]
  %4784 = phi i64 [ %4848, %4840 ], [ %4629, %4777 ]
  %4785 = phi i32 [ %4846, %4840 ], [ %4780, %4777 ]
  %4786 = sub i32 %4628, %4782
  %4787 = tail call i32 @llvm.smin.i32(i32 %4786, i32 0)
  %4788 = sub i32 %4786, %4787
  %4789 = zext i32 %4788 to i64
  %4790 = add nuw nsw i64 %4789, 1
  %4791 = add nsw i64 %4783, -1
  %4792 = icmp ult i32 %4788, 31
  br i1 %4792, label %4828, label %4793

4793:                                             ; preds = %4781
  %4794 = and i64 %4790, 8589934560
  %4795 = sub i64 %4784, %4794
  br label %4796

4796:                                             ; preds = %4796, %4793
  %4797 = phi i64 [ 0, %4793 ], [ %4820, %4796 ]
  %4798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4816, %4796 ]
  %4799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4817, %4796 ]
  %4800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4818, %4796 ]
  %4801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4819, %4796 ]
  %4802 = sub i64 %4784, %4797
  %4803 = getelementptr inbounds i32, ptr %11, i64 %4802
  %4804 = getelementptr inbounds i32, ptr %4803, i64 -7
  %4805 = load <8 x i32>, ptr %4804, align 4, !tbaa !5
  %4806 = shufflevector <8 x i32> %4805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4807 = getelementptr inbounds i32, ptr %4803, i64 -15
  %4808 = load <8 x i32>, ptr %4807, align 4, !tbaa !5
  %4809 = shufflevector <8 x i32> %4808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4810 = getelementptr inbounds i32, ptr %4803, i64 -23
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !5
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = getelementptr inbounds i32, ptr %4803, i64 -31
  %4814 = load <8 x i32>, ptr %4813, align 4, !tbaa !5
  %4815 = shufflevector <8 x i32> %4814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4816 = mul <8 x i32> %4806, %4798
  %4817 = mul <8 x i32> %4809, %4799
  %4818 = mul <8 x i32> %4812, %4800
  %4819 = mul <8 x i32> %4815, %4801
  %4820 = add nuw i64 %4797, 32
  %4821 = icmp eq i64 %4820, %4794
  br i1 %4821, label %4822, label %4796, !llvm.loop !919

4822:                                             ; preds = %4796
  %4823 = mul <8 x i32> %4817, %4816
  %4824 = mul <8 x i32> %4818, %4823
  %4825 = mul <8 x i32> %4819, %4824
  %4826 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4825)
  %4827 = icmp eq i64 %4790, %4794
  br i1 %4827, label %4840, label %4828

4828:                                             ; preds = %4781, %4822
  %4829 = phi i64 [ %4784, %4781 ], [ %4795, %4822 ]
  %4830 = phi i32 [ 1, %4781 ], [ %4826, %4822 ]
  br label %4831

4831:                                             ; preds = %4828, %4831
  %4832 = phi i64 [ %4837, %4831 ], [ %4829, %4828 ]
  %4833 = phi i32 [ %4836, %4831 ], [ %4830, %4828 ]
  %4834 = getelementptr inbounds i32, ptr %11, i64 %4832
  %4835 = load i32, ptr %4834, align 4, !tbaa !5
  %4836 = mul nsw i32 %4835, %4833
  %4837 = add nsw i64 %4832, -1
  %4838 = trunc i64 %4832 to i32
  %4839 = icmp sgt i32 %4838, 0
  br i1 %4839, label %4831, label %4840, !llvm.loop !920

4840:                                             ; preds = %4831, %4822
  %4841 = phi i32 [ %4826, %4822 ], [ %4836, %4831 ]
  %4842 = and i64 %4791, 4294967295
  %4843 = getelementptr inbounds i32, ptr %6, i64 %4842
  %4844 = load i32, ptr %4843, align 4, !tbaa !5
  %4845 = mul nsw i32 %4844, %4841
  %4846 = add nsw i32 %4845, %4785
  %4847 = icmp sgt i64 %4783, 2
  %4848 = add nsw i64 %4784, -1
  %4849 = add i32 %4782, 1
  br i1 %4847, label %4781, label %4850, !llvm.loop !921

4850:                                             ; preds = %4840, %4777
  %4851 = phi i32 [ %4780, %4777 ], [ %4846, %4840 ]
  %4852 = icmp slt i32 %4851, %5
  br i1 %4852, label %4855, label %4853

4853:                                             ; preds = %4850
  %4854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

4855:                                             ; preds = %4850
  %4856 = sext i32 %4851 to i64
  %4857 = getelementptr inbounds i64, ptr %4303, i64 %4856
  %4858 = load i64, ptr %4857, align 8, !tbaa !120
  %4859 = sitofp i64 %4858 to float
  %4860 = icmp slt i64 %4858, 0
  %4861 = fneg fast float %4859
  %4862 = select fast i1 %4860, float %4861, float %4859
  %4863 = fadd fast float %4862, %4778
  store float %4863, ptr %4305, align 4, !tbaa !162
  %4864 = add nuw nsw i32 %4779, 1
  br i1 %4627, label %4865, label %4915

4865:                                             ; preds = %4855
  %4866 = load i32, ptr %4, align 4, !tbaa !5
  %4867 = load i32, ptr %12, align 4, !tbaa !5
  %4868 = add nsw i32 %4867, -1
  %4869 = icmp slt i32 %4866, %4868
  br i1 %4869, label %4892, label %4870

4870:                                             ; preds = %4865
  %4871 = icmp eq i32 %4866, %4868
  br i1 %4871, label %4872, label %4908

4872:                                             ; preds = %4870
  store i32 0, ptr %4, align 4, !tbaa !5
  %4873 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4873, ptr %6, align 4, !tbaa !5
  br i1 %4632, label %4915, label %4874

4874:                                             ; preds = %4872, %4902
  %4875 = phi i64 [ %4906, %4902 ], [ 1, %4872 ]
  %4876 = getelementptr inbounds i32, ptr %4, i64 %4875
  %4877 = load i32, ptr %4876, align 4, !tbaa !5
  %4878 = getelementptr inbounds i32, ptr %12, i64 %4875
  %4879 = load i32, ptr %4878, align 4, !tbaa !5
  %4880 = add nsw i32 %4879, -1
  %4881 = icmp slt i32 %4877, %4880
  br i1 %4881, label %4882, label %4900

4882:                                             ; preds = %4874
  br i1 %4869, label %4892, label %4883

4883:                                             ; preds = %4882
  %4884 = shl i64 %4875, 32
  %4885 = add i64 %4884, -4294967296
  %4886 = ashr exact i64 %4885, 32
  %4887 = getelementptr inbounds i32, ptr %7, i64 %4886
  %4888 = load i32, ptr %4887, align 4, !tbaa !5
  %4889 = getelementptr inbounds i32, ptr %6, i64 %4875
  %4890 = load i32, ptr %4889, align 4, !tbaa !5
  %4891 = add nsw i32 %4890, %4888
  store i32 %4891, ptr %4889, align 4, !tbaa !5
  br label %4910

4892:                                             ; preds = %4865, %4882
  %4893 = phi i32 [ %4877, %4882 ], [ %4866, %4865 ]
  %4894 = phi ptr [ %4876, %4882 ], [ %4, %4865 ]
  %4895 = phi i64 [ %4875, %4882 ], [ 0, %4865 ]
  %4896 = add nsw i32 %4893, 1
  store i32 %4896, ptr %4894, align 4, !tbaa !5
  %4897 = getelementptr inbounds i32, ptr %7, i64 %4895
  %4898 = load i32, ptr %4897, align 4, !tbaa !5
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4895
  br label %4910

4900:                                             ; preds = %4874
  %4901 = icmp eq i32 %4877, %4880
  br i1 %4901, label %4902, label %4908

4902:                                             ; preds = %4900
  store i32 0, ptr %4876, align 4, !tbaa !5
  %4903 = getelementptr inbounds i32, ptr %8, i64 %4875
  %4904 = load i32, ptr %4903, align 4, !tbaa !5
  %4905 = getelementptr inbounds i32, ptr %6, i64 %4875
  store i32 %4904, ptr %4905, align 4, !tbaa !5
  %4906 = add nuw nsw i64 %4875, 1
  %4907 = icmp eq i64 %4906, %4630
  br i1 %4907, label %4915, label %4874, !llvm.loop !922

4908:                                             ; preds = %4870, %4900
  %4909 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

4910:                                             ; preds = %4883, %4892
  %4911 = phi ptr [ %4899, %4892 ], [ %4876, %4883 ]
  %4912 = phi i32 [ %4898, %4892 ], [ 1, %4883 ]
  %4913 = load i32, ptr %4911, align 4, !tbaa !5
  %4914 = add nsw i32 %4913, %4912
  store i32 %4914, ptr %4911, align 4, !tbaa !5
  br label %4915

4915:                                             ; preds = %4902, %4910, %4872, %4855
  %4916 = icmp eq i32 %4864, %5
  br i1 %4916, label %5537, label %4777, !llvm.loop !923

4917:                                             ; preds = %4313
  %4918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

4919:                                             ; preds = %18
  %4920 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4921 = load ptr, ptr %4920, align 8, !tbaa !9
  %4922 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4923 = load ptr, ptr %4922, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4923, align 8, !tbaa !18
  %4924 = icmp eq i32 %13, 0
  br i1 %4924, label %4925, label %4931

4925:                                             ; preds = %4919
  %4926 = load i64, ptr %4921, align 8, !tbaa !120
  %4927 = sitofp i64 %4926 to double
  %4928 = icmp slt i64 %4926, 0
  %4929 = fneg fast double %4927
  %4930 = select fast i1 %4928, double %4929, double %4927
  store double %4930, ptr %4923, align 8, !tbaa !18
  br label %5537

4931:                                             ; preds = %4919
  switch i32 %1, label %5529 [
    i32 1, label %4932
    i32 0, label %5231
  ]

4932:                                             ; preds = %4931
  %4933 = getelementptr inbounds i32, ptr %3, i64 %19
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = icmp eq i32 %4934, 0
  %4936 = icmp sgt i32 %5, 0
  br i1 %4935, label %4946, label %4937

4937:                                             ; preds = %4932
  br i1 %4936, label %4938, label %5537

4938:                                             ; preds = %4937
  %4939 = icmp sgt i32 %13, 1
  %4940 = icmp sgt i32 %13, 0
  %4941 = add i32 %13, -2
  %4942 = zext i32 %4941 to i64
  %4943 = zext i32 %13 to i64
  %4944 = add nuw i32 %5, 1
  %4945 = icmp eq i32 %13, 1
  br label %5091

4946:                                             ; preds = %4932
  br i1 %4936, label %4947, label %5537

4947:                                             ; preds = %4946
  %4948 = icmp sgt i32 %13, 1
  %4949 = icmp sgt i32 %13, 0
  %4950 = add i32 %13, -2
  %4951 = zext i32 %4950 to i64
  %4952 = zext i32 %13 to i64
  %4953 = add nuw i32 %5, 1
  %4954 = icmp eq i32 %13, 1
  br label %4955

4955:                                             ; preds = %4947, %5089
  %4956 = phi double [ 0.000000e+00, %4947 ], [ %5039, %5089 ]
  %4957 = phi i32 [ 0, %4947 ], [ %5041, %5089 ]
  %4958 = phi double [ 0.000000e+00, %4947 ], [ %5040, %5089 ]
  %4959 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4948, label %4960, label %5029

4960:                                             ; preds = %4955, %5019
  %4961 = phi i32 [ %5028, %5019 ], [ 0, %4955 ]
  %4962 = phi i64 [ %4970, %5019 ], [ %4952, %4955 ]
  %4963 = phi i64 [ %5027, %5019 ], [ %4951, %4955 ]
  %4964 = phi i32 [ %5025, %5019 ], [ %4959, %4955 ]
  %4965 = sub i32 %4950, %4961
  %4966 = tail call i32 @llvm.smin.i32(i32 %4965, i32 0)
  %4967 = sub i32 %4965, %4966
  %4968 = zext i32 %4967 to i64
  %4969 = add nuw nsw i64 %4968, 1
  %4970 = add nsw i64 %4962, -1
  %4971 = icmp ult i32 %4967, 31
  br i1 %4971, label %5007, label %4972

4972:                                             ; preds = %4960
  %4973 = and i64 %4969, 8589934560
  %4974 = sub i64 %4963, %4973
  br label %4975

4975:                                             ; preds = %4975, %4972
  %4976 = phi i64 [ 0, %4972 ], [ %4999, %4975 ]
  %4977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4972 ], [ %4995, %4975 ]
  %4978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4972 ], [ %4996, %4975 ]
  %4979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4972 ], [ %4997, %4975 ]
  %4980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4972 ], [ %4998, %4975 ]
  %4981 = sub i64 %4963, %4976
  %4982 = getelementptr inbounds i32, ptr %9, i64 %4981
  %4983 = getelementptr inbounds i32, ptr %4982, i64 -7
  %4984 = load <8 x i32>, ptr %4983, align 4, !tbaa !5
  %4985 = shufflevector <8 x i32> %4984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4986 = getelementptr inbounds i32, ptr %4982, i64 -15
  %4987 = load <8 x i32>, ptr %4986, align 4, !tbaa !5
  %4988 = shufflevector <8 x i32> %4987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4989 = getelementptr inbounds i32, ptr %4982, i64 -23
  %4990 = load <8 x i32>, ptr %4989, align 4, !tbaa !5
  %4991 = shufflevector <8 x i32> %4990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4992 = getelementptr inbounds i32, ptr %4982, i64 -31
  %4993 = load <8 x i32>, ptr %4992, align 4, !tbaa !5
  %4994 = shufflevector <8 x i32> %4993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4995 = mul <8 x i32> %4985, %4977
  %4996 = mul <8 x i32> %4988, %4978
  %4997 = mul <8 x i32> %4991, %4979
  %4998 = mul <8 x i32> %4994, %4980
  %4999 = add nuw i64 %4976, 32
  %5000 = icmp eq i64 %4999, %4973
  br i1 %5000, label %5001, label %4975, !llvm.loop !924

5001:                                             ; preds = %4975
  %5002 = mul <8 x i32> %4996, %4995
  %5003 = mul <8 x i32> %4997, %5002
  %5004 = mul <8 x i32> %4998, %5003
  %5005 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5004)
  %5006 = icmp eq i64 %4969, %4973
  br i1 %5006, label %5019, label %5007

5007:                                             ; preds = %4960, %5001
  %5008 = phi i64 [ %4963, %4960 ], [ %4974, %5001 ]
  %5009 = phi i32 [ 1, %4960 ], [ %5005, %5001 ]
  br label %5010

5010:                                             ; preds = %5007, %5010
  %5011 = phi i64 [ %5016, %5010 ], [ %5008, %5007 ]
  %5012 = phi i32 [ %5015, %5010 ], [ %5009, %5007 ]
  %5013 = getelementptr inbounds i32, ptr %9, i64 %5011
  %5014 = load i32, ptr %5013, align 4, !tbaa !5
  %5015 = mul nsw i32 %5014, %5012
  %5016 = add nsw i64 %5011, -1
  %5017 = trunc i64 %5011 to i32
  %5018 = icmp sgt i32 %5017, 0
  br i1 %5018, label %5010, label %5019, !llvm.loop !925

5019:                                             ; preds = %5010, %5001
  %5020 = phi i32 [ %5005, %5001 ], [ %5015, %5010 ]
  %5021 = and i64 %4970, 4294967295
  %5022 = getelementptr inbounds i32, ptr %6, i64 %5021
  %5023 = load i32, ptr %5022, align 4, !tbaa !5
  %5024 = mul nsw i32 %5023, %5020
  %5025 = add nsw i32 %5024, %4964
  %5026 = icmp sgt i64 %4962, 2
  %5027 = add nsw i64 %4963, -1
  %5028 = add i32 %4961, 1
  br i1 %5026, label %4960, label %5029, !llvm.loop !926

5029:                                             ; preds = %5019, %4955
  %5030 = phi i32 [ %4959, %4955 ], [ %5025, %5019 ]
  %5031 = sext i32 %5030 to i64
  %5032 = getelementptr inbounds double, ptr %2, i64 %5031
  %5033 = load double, ptr %5032, align 8, !tbaa !18
  %5034 = getelementptr inbounds i64, ptr %4921, i64 %5031
  %5035 = load i64, ptr %5034, align 8, !tbaa !120
  %5036 = sitofp i64 %5035 to double
  %5037 = fmul fast double %5033, %5036
  %5038 = tail call fast double @llvm.fabs.f64(double %5037)
  %5039 = fadd fast double %5038, %4956
  store double %5039, ptr %4923, align 8, !tbaa !18
  %5040 = fadd fast double %5033, %4958
  %5041 = add nuw nsw i32 %4957, 1
  br i1 %4949, label %5042, label %5089

5042:                                             ; preds = %5029
  %5043 = load i32, ptr %4, align 4, !tbaa !5
  %5044 = load i32, ptr %12, align 4, !tbaa !5
  %5045 = add nsw i32 %5044, -1
  %5046 = icmp slt i32 %5043, %5045
  br i1 %5046, label %5066, label %5047

5047:                                             ; preds = %5042
  %5048 = icmp eq i32 %5043, %5045
  br i1 %5048, label %5049, label %5082

5049:                                             ; preds = %5047
  store i32 0, ptr %4, align 4, !tbaa !5
  %5050 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5050, ptr %6, align 4, !tbaa !5
  br i1 %4954, label %5089, label %5051

5051:                                             ; preds = %5049, %5076
  %5052 = phi i64 [ %5080, %5076 ], [ 1, %5049 ]
  %5053 = getelementptr inbounds i32, ptr %4, i64 %5052
  %5054 = load i32, ptr %5053, align 4, !tbaa !5
  %5055 = getelementptr inbounds i32, ptr %12, i64 %5052
  %5056 = load i32, ptr %5055, align 4, !tbaa !5
  %5057 = add nsw i32 %5056, -1
  %5058 = icmp slt i32 %5054, %5057
  br i1 %5058, label %5059, label %5074

5059:                                             ; preds = %5051
  br i1 %5046, label %5066, label %5060

5060:                                             ; preds = %5059
  %5061 = getelementptr inbounds i32, ptr %7, i64 %5052
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = getelementptr inbounds i32, ptr %6, i64 %5052
  %5064 = load i32, ptr %5063, align 4, !tbaa !5
  %5065 = add nsw i32 %5064, %5062
  store i32 %5065, ptr %5063, align 4, !tbaa !5
  br label %5084

5066:                                             ; preds = %5042, %5059
  %5067 = phi i32 [ %5054, %5059 ], [ %5043, %5042 ]
  %5068 = phi ptr [ %5053, %5059 ], [ %4, %5042 ]
  %5069 = phi i64 [ %5052, %5059 ], [ 0, %5042 ]
  %5070 = add nsw i32 %5067, 1
  store i32 %5070, ptr %5068, align 4, !tbaa !5
  %5071 = getelementptr inbounds i32, ptr %7, i64 %5069
  %5072 = load i32, ptr %5071, align 4, !tbaa !5
  %5073 = getelementptr inbounds i32, ptr %6, i64 %5069
  br label %5084

5074:                                             ; preds = %5051
  %5075 = icmp eq i32 %5054, %5057
  br i1 %5075, label %5076, label %5082

5076:                                             ; preds = %5074
  store i32 0, ptr %5053, align 4, !tbaa !5
  %5077 = getelementptr inbounds i32, ptr %8, i64 %5052
  %5078 = load i32, ptr %5077, align 4, !tbaa !5
  %5079 = getelementptr inbounds i32, ptr %6, i64 %5052
  store i32 %5078, ptr %5079, align 4, !tbaa !5
  %5080 = add nuw nsw i64 %5052, 1
  %5081 = icmp eq i64 %5080, %4952
  br i1 %5081, label %5089, label %5051, !llvm.loop !927

5082:                                             ; preds = %5047, %5074
  %5083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

5084:                                             ; preds = %5060, %5066
  %5085 = phi ptr [ %5073, %5066 ], [ %5053, %5060 ]
  %5086 = phi i32 [ %5072, %5066 ], [ 1, %5060 ]
  %5087 = load i32, ptr %5085, align 4, !tbaa !5
  %5088 = add nsw i32 %5087, %5086
  store i32 %5088, ptr %5085, align 4, !tbaa !5
  br label %5089

5089:                                             ; preds = %5076, %5084, %5049, %5029
  %5090 = icmp eq i32 %5041, %5
  br i1 %5090, label %5537, label %4955, !llvm.loop !928

5091:                                             ; preds = %4938, %5229
  %5092 = phi double [ 0.000000e+00, %4938 ], [ %5177, %5229 ]
  %5093 = phi i32 [ 0, %4938 ], [ %5178, %5229 ]
  %5094 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4939, label %5095, label %5164

5095:                                             ; preds = %5091, %5154
  %5096 = phi i32 [ %5163, %5154 ], [ 0, %5091 ]
  %5097 = phi i64 [ %5105, %5154 ], [ %4943, %5091 ]
  %5098 = phi i64 [ %5162, %5154 ], [ %4942, %5091 ]
  %5099 = phi i32 [ %5160, %5154 ], [ %5094, %5091 ]
  %5100 = sub i32 %4941, %5096
  %5101 = tail call i32 @llvm.smin.i32(i32 %5100, i32 0)
  %5102 = sub i32 %5100, %5101
  %5103 = zext i32 %5102 to i64
  %5104 = add nuw nsw i64 %5103, 1
  %5105 = add nsw i64 %5097, -1
  %5106 = icmp ult i32 %5102, 31
  br i1 %5106, label %5142, label %5107

5107:                                             ; preds = %5095
  %5108 = and i64 %5104, 8589934560
  %5109 = sub i64 %5098, %5108
  br label %5110

5110:                                             ; preds = %5110, %5107
  %5111 = phi i64 [ 0, %5107 ], [ %5134, %5110 ]
  %5112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5107 ], [ %5130, %5110 ]
  %5113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5107 ], [ %5131, %5110 ]
  %5114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5107 ], [ %5132, %5110 ]
  %5115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5107 ], [ %5133, %5110 ]
  %5116 = sub i64 %5098, %5111
  %5117 = getelementptr inbounds i32, ptr %11, i64 %5116
  %5118 = getelementptr inbounds i32, ptr %5117, i64 -7
  %5119 = load <8 x i32>, ptr %5118, align 4, !tbaa !5
  %5120 = shufflevector <8 x i32> %5119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5121 = getelementptr inbounds i32, ptr %5117, i64 -15
  %5122 = load <8 x i32>, ptr %5121, align 4, !tbaa !5
  %5123 = shufflevector <8 x i32> %5122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5124 = getelementptr inbounds i32, ptr %5117, i64 -23
  %5125 = load <8 x i32>, ptr %5124, align 4, !tbaa !5
  %5126 = shufflevector <8 x i32> %5125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5127 = getelementptr inbounds i32, ptr %5117, i64 -31
  %5128 = load <8 x i32>, ptr %5127, align 4, !tbaa !5
  %5129 = shufflevector <8 x i32> %5128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5130 = mul <8 x i32> %5120, %5112
  %5131 = mul <8 x i32> %5123, %5113
  %5132 = mul <8 x i32> %5126, %5114
  %5133 = mul <8 x i32> %5129, %5115
  %5134 = add nuw i64 %5111, 32
  %5135 = icmp eq i64 %5134, %5108
  br i1 %5135, label %5136, label %5110, !llvm.loop !929

5136:                                             ; preds = %5110
  %5137 = mul <8 x i32> %5131, %5130
  %5138 = mul <8 x i32> %5132, %5137
  %5139 = mul <8 x i32> %5133, %5138
  %5140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5139)
  %5141 = icmp eq i64 %5104, %5108
  br i1 %5141, label %5154, label %5142

5142:                                             ; preds = %5095, %5136
  %5143 = phi i64 [ %5098, %5095 ], [ %5109, %5136 ]
  %5144 = phi i32 [ 1, %5095 ], [ %5140, %5136 ]
  br label %5145

5145:                                             ; preds = %5142, %5145
  %5146 = phi i64 [ %5151, %5145 ], [ %5143, %5142 ]
  %5147 = phi i32 [ %5150, %5145 ], [ %5144, %5142 ]
  %5148 = getelementptr inbounds i32, ptr %11, i64 %5146
  %5149 = load i32, ptr %5148, align 4, !tbaa !5
  %5150 = mul nsw i32 %5149, %5147
  %5151 = add nsw i64 %5146, -1
  %5152 = trunc i64 %5146 to i32
  %5153 = icmp sgt i32 %5152, 0
  br i1 %5153, label %5145, label %5154, !llvm.loop !930

5154:                                             ; preds = %5145, %5136
  %5155 = phi i32 [ %5140, %5136 ], [ %5150, %5145 ]
  %5156 = and i64 %5105, 4294967295
  %5157 = getelementptr inbounds i32, ptr %6, i64 %5156
  %5158 = load i32, ptr %5157, align 4, !tbaa !5
  %5159 = mul nsw i32 %5158, %5155
  %5160 = add nsw i32 %5159, %5099
  %5161 = icmp sgt i64 %5097, 2
  %5162 = add nsw i64 %5098, -1
  %5163 = add i32 %5096, 1
  br i1 %5161, label %5095, label %5164, !llvm.loop !931

5164:                                             ; preds = %5154, %5091
  %5165 = phi i32 [ %5094, %5091 ], [ %5160, %5154 ]
  %5166 = icmp slt i32 %5165, %5
  br i1 %5166, label %5169, label %5167

5167:                                             ; preds = %5164
  %5168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

5169:                                             ; preds = %5164
  %5170 = sext i32 %5165 to i64
  %5171 = getelementptr inbounds i64, ptr %4921, i64 %5170
  %5172 = load i64, ptr %5171, align 8, !tbaa !120
  %5173 = sitofp i64 %5172 to double
  %5174 = icmp slt i64 %5172, 0
  %5175 = fneg fast double %5173
  %5176 = select fast i1 %5174, double %5175, double %5173
  %5177 = fadd fast double %5176, %5092
  store double %5177, ptr %4923, align 8, !tbaa !18
  %5178 = add nuw nsw i32 %5093, 1
  br i1 %4940, label %5179, label %5229

5179:                                             ; preds = %5169
  %5180 = load i32, ptr %4, align 4, !tbaa !5
  %5181 = load i32, ptr %12, align 4, !tbaa !5
  %5182 = add nsw i32 %5181, -1
  %5183 = icmp slt i32 %5180, %5182
  br i1 %5183, label %5206, label %5184

5184:                                             ; preds = %5179
  %5185 = icmp eq i32 %5180, %5182
  br i1 %5185, label %5186, label %5222

5186:                                             ; preds = %5184
  store i32 0, ptr %4, align 4, !tbaa !5
  %5187 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5187, ptr %6, align 4, !tbaa !5
  br i1 %4945, label %5229, label %5188

5188:                                             ; preds = %5186, %5216
  %5189 = phi i64 [ %5220, %5216 ], [ 1, %5186 ]
  %5190 = getelementptr inbounds i32, ptr %4, i64 %5189
  %5191 = load i32, ptr %5190, align 4, !tbaa !5
  %5192 = getelementptr inbounds i32, ptr %12, i64 %5189
  %5193 = load i32, ptr %5192, align 4, !tbaa !5
  %5194 = add nsw i32 %5193, -1
  %5195 = icmp slt i32 %5191, %5194
  br i1 %5195, label %5196, label %5214

5196:                                             ; preds = %5188
  br i1 %5183, label %5206, label %5197

5197:                                             ; preds = %5196
  %5198 = shl i64 %5189, 32
  %5199 = add i64 %5198, -4294967296
  %5200 = ashr exact i64 %5199, 32
  %5201 = getelementptr inbounds i32, ptr %7, i64 %5200
  %5202 = load i32, ptr %5201, align 4, !tbaa !5
  %5203 = getelementptr inbounds i32, ptr %6, i64 %5189
  %5204 = load i32, ptr %5203, align 4, !tbaa !5
  %5205 = add nsw i32 %5204, %5202
  store i32 %5205, ptr %5203, align 4, !tbaa !5
  br label %5224

5206:                                             ; preds = %5179, %5196
  %5207 = phi i32 [ %5191, %5196 ], [ %5180, %5179 ]
  %5208 = phi ptr [ %5190, %5196 ], [ %4, %5179 ]
  %5209 = phi i64 [ %5189, %5196 ], [ 0, %5179 ]
  %5210 = add nsw i32 %5207, 1
  store i32 %5210, ptr %5208, align 4, !tbaa !5
  %5211 = getelementptr inbounds i32, ptr %7, i64 %5209
  %5212 = load i32, ptr %5211, align 4, !tbaa !5
  %5213 = getelementptr inbounds i32, ptr %6, i64 %5209
  br label %5224

5214:                                             ; preds = %5188
  %5215 = icmp eq i32 %5191, %5194
  br i1 %5215, label %5216, label %5222

5216:                                             ; preds = %5214
  store i32 0, ptr %5190, align 4, !tbaa !5
  %5217 = getelementptr inbounds i32, ptr %8, i64 %5189
  %5218 = load i32, ptr %5217, align 4, !tbaa !5
  %5219 = getelementptr inbounds i32, ptr %6, i64 %5189
  store i32 %5218, ptr %5219, align 4, !tbaa !5
  %5220 = add nuw nsw i64 %5189, 1
  %5221 = icmp eq i64 %5220, %4943
  br i1 %5221, label %5229, label %5188, !llvm.loop !932

5222:                                             ; preds = %5184, %5214
  %5223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

5224:                                             ; preds = %5197, %5206
  %5225 = phi ptr [ %5213, %5206 ], [ %5190, %5197 ]
  %5226 = phi i32 [ %5212, %5206 ], [ 1, %5197 ]
  %5227 = load i32, ptr %5225, align 4, !tbaa !5
  %5228 = add nsw i32 %5227, %5226
  store i32 %5228, ptr %5225, align 4, !tbaa !5
  br label %5229

5229:                                             ; preds = %5216, %5224, %5186, %5169
  %5230 = icmp eq i32 %5178, %5
  br i1 %5230, label %5537, label %5091, !llvm.loop !933

5231:                                             ; preds = %4931
  %5232 = getelementptr inbounds i32, ptr %3, i64 %19
  %5233 = load i32, ptr %5232, align 4, !tbaa !5
  %5234 = icmp eq i32 %5233, 0
  %5235 = icmp sgt i32 %5, 0
  br i1 %5234, label %5245, label %5236

5236:                                             ; preds = %5231
  br i1 %5235, label %5237, label %5537

5237:                                             ; preds = %5236
  %5238 = icmp sgt i32 %13, 1
  %5239 = icmp sgt i32 %13, 0
  %5240 = add i32 %13, -2
  %5241 = zext i32 %5240 to i64
  %5242 = zext i32 %13 to i64
  %5243 = add nuw i32 %5, 1
  %5244 = icmp eq i32 %13, 1
  br label %5389

5245:                                             ; preds = %5231
  br i1 %5235, label %5246, label %5537

5246:                                             ; preds = %5245
  %5247 = icmp sgt i32 %13, 1
  %5248 = icmp sgt i32 %13, 0
  %5249 = add i32 %13, -2
  %5250 = zext i32 %5249 to i64
  %5251 = zext i32 %13 to i64
  %5252 = add nuw i32 %5, 1
  %5253 = icmp eq i32 %13, 1
  br label %5254

5254:                                             ; preds = %5246, %5387
  %5255 = phi double [ 0.000000e+00, %5246 ], [ %5337, %5387 ]
  %5256 = phi i32 [ 0, %5246 ], [ %5339, %5387 ]
  %5257 = phi double [ 0.000000e+00, %5246 ], [ %5338, %5387 ]
  %5258 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5247, label %5259, label %5328

5259:                                             ; preds = %5254, %5318
  %5260 = phi i32 [ %5327, %5318 ], [ 0, %5254 ]
  %5261 = phi i64 [ %5269, %5318 ], [ %5251, %5254 ]
  %5262 = phi i64 [ %5326, %5318 ], [ %5250, %5254 ]
  %5263 = phi i32 [ %5324, %5318 ], [ %5258, %5254 ]
  %5264 = sub i32 %5249, %5260
  %5265 = tail call i32 @llvm.smin.i32(i32 %5264, i32 0)
  %5266 = sub i32 %5264, %5265
  %5267 = zext i32 %5266 to i64
  %5268 = add nuw nsw i64 %5267, 1
  %5269 = add nsw i64 %5261, -1
  %5270 = icmp ult i32 %5266, 31
  br i1 %5270, label %5306, label %5271

5271:                                             ; preds = %5259
  %5272 = and i64 %5268, 8589934560
  %5273 = sub i64 %5262, %5272
  br label %5274

5274:                                             ; preds = %5274, %5271
  %5275 = phi i64 [ 0, %5271 ], [ %5298, %5274 ]
  %5276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5271 ], [ %5294, %5274 ]
  %5277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5271 ], [ %5295, %5274 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5271 ], [ %5296, %5274 ]
  %5279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5271 ], [ %5297, %5274 ]
  %5280 = sub i64 %5262, %5275
  %5281 = getelementptr inbounds i32, ptr %9, i64 %5280
  %5282 = getelementptr inbounds i32, ptr %5281, i64 -7
  %5283 = load <8 x i32>, ptr %5282, align 4, !tbaa !5
  %5284 = shufflevector <8 x i32> %5283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5285 = getelementptr inbounds i32, ptr %5281, i64 -15
  %5286 = load <8 x i32>, ptr %5285, align 4, !tbaa !5
  %5287 = shufflevector <8 x i32> %5286, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5288 = getelementptr inbounds i32, ptr %5281, i64 -23
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !5
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5281, i64 -31
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !5
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = mul <8 x i32> %5284, %5276
  %5295 = mul <8 x i32> %5287, %5277
  %5296 = mul <8 x i32> %5290, %5278
  %5297 = mul <8 x i32> %5293, %5279
  %5298 = add nuw i64 %5275, 32
  %5299 = icmp eq i64 %5298, %5272
  br i1 %5299, label %5300, label %5274, !llvm.loop !934

5300:                                             ; preds = %5274
  %5301 = mul <8 x i32> %5295, %5294
  %5302 = mul <8 x i32> %5296, %5301
  %5303 = mul <8 x i32> %5297, %5302
  %5304 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5303)
  %5305 = icmp eq i64 %5268, %5272
  br i1 %5305, label %5318, label %5306

5306:                                             ; preds = %5259, %5300
  %5307 = phi i64 [ %5262, %5259 ], [ %5273, %5300 ]
  %5308 = phi i32 [ 1, %5259 ], [ %5304, %5300 ]
  br label %5309

5309:                                             ; preds = %5306, %5309
  %5310 = phi i64 [ %5315, %5309 ], [ %5307, %5306 ]
  %5311 = phi i32 [ %5314, %5309 ], [ %5308, %5306 ]
  %5312 = getelementptr inbounds i32, ptr %9, i64 %5310
  %5313 = load i32, ptr %5312, align 4, !tbaa !5
  %5314 = mul nsw i32 %5313, %5311
  %5315 = add nsw i64 %5310, -1
  %5316 = trunc i64 %5310 to i32
  %5317 = icmp sgt i32 %5316, 0
  br i1 %5317, label %5309, label %5318, !llvm.loop !935

5318:                                             ; preds = %5309, %5300
  %5319 = phi i32 [ %5304, %5300 ], [ %5314, %5309 ]
  %5320 = and i64 %5269, 4294967295
  %5321 = getelementptr inbounds i32, ptr %6, i64 %5320
  %5322 = load i32, ptr %5321, align 4, !tbaa !5
  %5323 = mul nsw i32 %5322, %5319
  %5324 = add nsw i32 %5323, %5263
  %5325 = icmp sgt i64 %5261, 2
  %5326 = add nsw i64 %5262, -1
  %5327 = add i32 %5260, 1
  br i1 %5325, label %5259, label %5328, !llvm.loop !936

5328:                                             ; preds = %5318, %5254
  %5329 = phi i32 [ %5258, %5254 ], [ %5324, %5318 ]
  %5330 = sext i32 %5329 to i64
  %5331 = getelementptr inbounds i64, ptr %4921, i64 %5330
  %5332 = load i64, ptr %5331, align 8, !tbaa !120
  %5333 = sitofp i64 %5332 to double
  %5334 = icmp slt i64 %5332, 0
  %5335 = fneg fast double %5333
  %5336 = select fast i1 %5334, double %5335, double %5333
  %5337 = fadd fast double %5336, %5255
  %5338 = fadd fast double %5257, 1.000000e+00
  %5339 = add nuw nsw i32 %5256, 1
  br i1 %5248, label %5340, label %5387

5340:                                             ; preds = %5328
  %5341 = load i32, ptr %4, align 4, !tbaa !5
  %5342 = load i32, ptr %12, align 4, !tbaa !5
  %5343 = add nsw i32 %5342, -1
  %5344 = icmp slt i32 %5341, %5343
  br i1 %5344, label %5364, label %5345

5345:                                             ; preds = %5340
  %5346 = icmp eq i32 %5341, %5343
  br i1 %5346, label %5347, label %5380

5347:                                             ; preds = %5345
  store i32 0, ptr %4, align 4, !tbaa !5
  %5348 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5348, ptr %6, align 4, !tbaa !5
  br i1 %5253, label %5387, label %5349

5349:                                             ; preds = %5347, %5374
  %5350 = phi i64 [ %5378, %5374 ], [ 1, %5347 ]
  %5351 = getelementptr inbounds i32, ptr %4, i64 %5350
  %5352 = load i32, ptr %5351, align 4, !tbaa !5
  %5353 = getelementptr inbounds i32, ptr %12, i64 %5350
  %5354 = load i32, ptr %5353, align 4, !tbaa !5
  %5355 = add nsw i32 %5354, -1
  %5356 = icmp slt i32 %5352, %5355
  br i1 %5356, label %5357, label %5372

5357:                                             ; preds = %5349
  br i1 %5344, label %5364, label %5358

5358:                                             ; preds = %5357
  %5359 = getelementptr inbounds i32, ptr %7, i64 %5350
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = getelementptr inbounds i32, ptr %6, i64 %5350
  %5362 = load i32, ptr %5361, align 4, !tbaa !5
  %5363 = add nsw i32 %5362, %5360
  store i32 %5363, ptr %5361, align 4, !tbaa !5
  br label %5382

5364:                                             ; preds = %5340, %5357
  %5365 = phi i32 [ %5352, %5357 ], [ %5341, %5340 ]
  %5366 = phi ptr [ %5351, %5357 ], [ %4, %5340 ]
  %5367 = phi i64 [ %5350, %5357 ], [ 0, %5340 ]
  %5368 = add nsw i32 %5365, 1
  store i32 %5368, ptr %5366, align 4, !tbaa !5
  %5369 = getelementptr inbounds i32, ptr %7, i64 %5367
  %5370 = load i32, ptr %5369, align 4, !tbaa !5
  %5371 = getelementptr inbounds i32, ptr %6, i64 %5367
  br label %5382

5372:                                             ; preds = %5349
  %5373 = icmp eq i32 %5352, %5355
  br i1 %5373, label %5374, label %5380

5374:                                             ; preds = %5372
  store i32 0, ptr %5351, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %8, i64 %5350
  %5376 = load i32, ptr %5375, align 4, !tbaa !5
  %5377 = getelementptr inbounds i32, ptr %6, i64 %5350
  store i32 %5376, ptr %5377, align 4, !tbaa !5
  %5378 = add nuw nsw i64 %5350, 1
  %5379 = icmp eq i64 %5378, %5251
  br i1 %5379, label %5387, label %5349, !llvm.loop !937

5380:                                             ; preds = %5345, %5372
  store double %5337, ptr %4923, align 8, !tbaa !18
  %5381 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

5382:                                             ; preds = %5358, %5364
  %5383 = phi ptr [ %5371, %5364 ], [ %5351, %5358 ]
  %5384 = phi i32 [ %5370, %5364 ], [ 1, %5358 ]
  %5385 = load i32, ptr %5383, align 4, !tbaa !5
  %5386 = add nsw i32 %5385, %5384
  store i32 %5386, ptr %5383, align 4, !tbaa !5
  br label %5387

5387:                                             ; preds = %5374, %5382, %5347, %5328
  %5388 = icmp eq i32 %5339, %5
  br i1 %5388, label %5536, label %5254, !llvm.loop !938

5389:                                             ; preds = %5237, %5527
  %5390 = phi double [ 0.000000e+00, %5237 ], [ %5475, %5527 ]
  %5391 = phi i32 [ 0, %5237 ], [ %5476, %5527 ]
  %5392 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5238, label %5393, label %5462

5393:                                             ; preds = %5389, %5452
  %5394 = phi i32 [ %5461, %5452 ], [ 0, %5389 ]
  %5395 = phi i64 [ %5403, %5452 ], [ %5242, %5389 ]
  %5396 = phi i64 [ %5460, %5452 ], [ %5241, %5389 ]
  %5397 = phi i32 [ %5458, %5452 ], [ %5392, %5389 ]
  %5398 = sub i32 %5240, %5394
  %5399 = tail call i32 @llvm.smin.i32(i32 %5398, i32 0)
  %5400 = sub i32 %5398, %5399
  %5401 = zext i32 %5400 to i64
  %5402 = add nuw nsw i64 %5401, 1
  %5403 = add nsw i64 %5395, -1
  %5404 = icmp ult i32 %5400, 31
  br i1 %5404, label %5440, label %5405

5405:                                             ; preds = %5393
  %5406 = and i64 %5402, 8589934560
  %5407 = sub i64 %5396, %5406
  br label %5408

5408:                                             ; preds = %5408, %5405
  %5409 = phi i64 [ 0, %5405 ], [ %5432, %5408 ]
  %5410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5405 ], [ %5428, %5408 ]
  %5411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5405 ], [ %5429, %5408 ]
  %5412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5405 ], [ %5430, %5408 ]
  %5413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5405 ], [ %5431, %5408 ]
  %5414 = sub i64 %5396, %5409
  %5415 = getelementptr inbounds i32, ptr %11, i64 %5414
  %5416 = getelementptr inbounds i32, ptr %5415, i64 -7
  %5417 = load <8 x i32>, ptr %5416, align 4, !tbaa !5
  %5418 = shufflevector <8 x i32> %5417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5419 = getelementptr inbounds i32, ptr %5415, i64 -15
  %5420 = load <8 x i32>, ptr %5419, align 4, !tbaa !5
  %5421 = shufflevector <8 x i32> %5420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5422 = getelementptr inbounds i32, ptr %5415, i64 -23
  %5423 = load <8 x i32>, ptr %5422, align 4, !tbaa !5
  %5424 = shufflevector <8 x i32> %5423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5425 = getelementptr inbounds i32, ptr %5415, i64 -31
  %5426 = load <8 x i32>, ptr %5425, align 4, !tbaa !5
  %5427 = shufflevector <8 x i32> %5426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5428 = mul <8 x i32> %5418, %5410
  %5429 = mul <8 x i32> %5421, %5411
  %5430 = mul <8 x i32> %5424, %5412
  %5431 = mul <8 x i32> %5427, %5413
  %5432 = add nuw i64 %5409, 32
  %5433 = icmp eq i64 %5432, %5406
  br i1 %5433, label %5434, label %5408, !llvm.loop !939

5434:                                             ; preds = %5408
  %5435 = mul <8 x i32> %5429, %5428
  %5436 = mul <8 x i32> %5430, %5435
  %5437 = mul <8 x i32> %5431, %5436
  %5438 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5437)
  %5439 = icmp eq i64 %5402, %5406
  br i1 %5439, label %5452, label %5440

5440:                                             ; preds = %5393, %5434
  %5441 = phi i64 [ %5396, %5393 ], [ %5407, %5434 ]
  %5442 = phi i32 [ 1, %5393 ], [ %5438, %5434 ]
  br label %5443

5443:                                             ; preds = %5440, %5443
  %5444 = phi i64 [ %5449, %5443 ], [ %5441, %5440 ]
  %5445 = phi i32 [ %5448, %5443 ], [ %5442, %5440 ]
  %5446 = getelementptr inbounds i32, ptr %11, i64 %5444
  %5447 = load i32, ptr %5446, align 4, !tbaa !5
  %5448 = mul nsw i32 %5447, %5445
  %5449 = add nsw i64 %5444, -1
  %5450 = trunc i64 %5444 to i32
  %5451 = icmp sgt i32 %5450, 0
  br i1 %5451, label %5443, label %5452, !llvm.loop !940

5452:                                             ; preds = %5443, %5434
  %5453 = phi i32 [ %5438, %5434 ], [ %5448, %5443 ]
  %5454 = and i64 %5403, 4294967295
  %5455 = getelementptr inbounds i32, ptr %6, i64 %5454
  %5456 = load i32, ptr %5455, align 4, !tbaa !5
  %5457 = mul nsw i32 %5456, %5453
  %5458 = add nsw i32 %5457, %5397
  %5459 = icmp sgt i64 %5395, 2
  %5460 = add nsw i64 %5396, -1
  %5461 = add i32 %5394, 1
  br i1 %5459, label %5393, label %5462, !llvm.loop !941

5462:                                             ; preds = %5452, %5389
  %5463 = phi i32 [ %5392, %5389 ], [ %5458, %5452 ]
  %5464 = icmp slt i32 %5463, %5
  br i1 %5464, label %5467, label %5465

5465:                                             ; preds = %5462
  %5466 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5542

5467:                                             ; preds = %5462
  %5468 = sext i32 %5463 to i64
  %5469 = getelementptr inbounds i64, ptr %4921, i64 %5468
  %5470 = load i64, ptr %5469, align 8, !tbaa !120
  %5471 = sitofp i64 %5470 to double
  %5472 = icmp slt i64 %5470, 0
  %5473 = fneg fast double %5471
  %5474 = select fast i1 %5472, double %5473, double %5471
  %5475 = fadd fast double %5474, %5390
  store double %5475, ptr %4923, align 8, !tbaa !18
  %5476 = add nuw nsw i32 %5391, 1
  br i1 %5239, label %5477, label %5527

5477:                                             ; preds = %5467
  %5478 = load i32, ptr %4, align 4, !tbaa !5
  %5479 = load i32, ptr %12, align 4, !tbaa !5
  %5480 = add nsw i32 %5479, -1
  %5481 = icmp slt i32 %5478, %5480
  br i1 %5481, label %5504, label %5482

5482:                                             ; preds = %5477
  %5483 = icmp eq i32 %5478, %5480
  br i1 %5483, label %5484, label %5520

5484:                                             ; preds = %5482
  store i32 0, ptr %4, align 4, !tbaa !5
  %5485 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5485, ptr %6, align 4, !tbaa !5
  br i1 %5244, label %5527, label %5486

5486:                                             ; preds = %5484, %5514
  %5487 = phi i64 [ %5518, %5514 ], [ 1, %5484 ]
  %5488 = getelementptr inbounds i32, ptr %4, i64 %5487
  %5489 = load i32, ptr %5488, align 4, !tbaa !5
  %5490 = getelementptr inbounds i32, ptr %12, i64 %5487
  %5491 = load i32, ptr %5490, align 4, !tbaa !5
  %5492 = add nsw i32 %5491, -1
  %5493 = icmp slt i32 %5489, %5492
  br i1 %5493, label %5494, label %5512

5494:                                             ; preds = %5486
  br i1 %5481, label %5504, label %5495

5495:                                             ; preds = %5494
  %5496 = shl i64 %5487, 32
  %5497 = add i64 %5496, -4294967296
  %5498 = ashr exact i64 %5497, 32
  %5499 = getelementptr inbounds i32, ptr %7, i64 %5498
  %5500 = load i32, ptr %5499, align 4, !tbaa !5
  %5501 = getelementptr inbounds i32, ptr %6, i64 %5487
  %5502 = load i32, ptr %5501, align 4, !tbaa !5
  %5503 = add nsw i32 %5502, %5500
  store i32 %5503, ptr %5501, align 4, !tbaa !5
  br label %5522

5504:                                             ; preds = %5477, %5494
  %5505 = phi i32 [ %5489, %5494 ], [ %5478, %5477 ]
  %5506 = phi ptr [ %5488, %5494 ], [ %4, %5477 ]
  %5507 = phi i64 [ %5487, %5494 ], [ 0, %5477 ]
  %5508 = add nsw i32 %5505, 1
  store i32 %5508, ptr %5506, align 4, !tbaa !5
  %5509 = getelementptr inbounds i32, ptr %7, i64 %5507
  %5510 = load i32, ptr %5509, align 4, !tbaa !5
  %5511 = getelementptr inbounds i32, ptr %6, i64 %5507
  br label %5522

5512:                                             ; preds = %5486
  %5513 = icmp eq i32 %5489, %5492
  br i1 %5513, label %5514, label %5520

5514:                                             ; preds = %5512
  store i32 0, ptr %5488, align 4, !tbaa !5
  %5515 = getelementptr inbounds i32, ptr %8, i64 %5487
  %5516 = load i32, ptr %5515, align 4, !tbaa !5
  %5517 = getelementptr inbounds i32, ptr %6, i64 %5487
  store i32 %5516, ptr %5517, align 4, !tbaa !5
  %5518 = add nuw nsw i64 %5487, 1
  %5519 = icmp eq i64 %5518, %5242
  br i1 %5519, label %5527, label %5486, !llvm.loop !942

5520:                                             ; preds = %5482, %5512
  %5521 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5542

5522:                                             ; preds = %5495, %5504
  %5523 = phi ptr [ %5511, %5504 ], [ %5488, %5495 ]
  %5524 = phi i32 [ %5510, %5504 ], [ 1, %5495 ]
  %5525 = load i32, ptr %5523, align 4, !tbaa !5
  %5526 = add nsw i32 %5525, %5524
  store i32 %5526, ptr %5523, align 4, !tbaa !5
  br label %5527

5527:                                             ; preds = %5514, %5522, %5484, %5467
  %5528 = icmp eq i32 %5476, %5
  br i1 %5528, label %5537, label %5389, !llvm.loop !943

5529:                                             ; preds = %4931
  %5530 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5537

5531:                                             ; preds = %2027
  store i16 %1977, ptr %1858, align 2, !tbaa !78
  br label %5537

5532:                                             ; preds = %2328
  store i16 %2278, ptr %1858, align 2, !tbaa !78
  br label %5537

5533:                                             ; preds = %4157
  store double %4107, ptr %3693, align 8, !tbaa !18
  br label %5537

5534:                                             ; preds = %4474
  store float %4424, ptr %4305, align 4, !tbaa !162
  br label %5537

5535:                                             ; preds = %4775
  store float %4725, ptr %4305, align 4, !tbaa !162
  br label %5537

5536:                                             ; preds = %5387
  store double %5337, ptr %4923, align 8, !tbaa !18
  br label %5537

5537:                                             ; preds = %5527, %5229, %5089, %4915, %4617, %4297, %3999, %3859, %3685, %3548, %3393, %3251, %3078, %2940, %2784, %2641, %2466, %2172, %1850, %1712, %1556, %1411, %1234, %1096, %940, %797, %622, %485, %330, %193, %5236, %5245, %5536, %4937, %4946, %4624, %4633, %5535, %4319, %4328, %5534, %4006, %4015, %5533, %3707, %3716, %3400, %3409, %3097, %3106, %2791, %2800, %2486, %2495, %2179, %2188, %5532, %1870, %1879, %5531, %1563, %1572, %1254, %1263, %947, %956, %642, %651, %337, %346, %37, %46, %4925, %5529, %4307, %4917, %3695, %4299, %3088, %3687, %2476, %3080, %1860, %2468, %1244, %1852, %632, %1236, %28, %624, %18
  %5538 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %624 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1236 ], [ 0.000000e+00, %632 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %1244 ], [ 0.000000e+00, %2468 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %3080 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %3687 ], [ 0.000000e+00, %3088 ], [ 0.000000e+00, %4299 ], [ 0.000000e+00, %3695 ], [ 0.000000e+00, %4917 ], [ 0.000000e+00, %4307 ], [ 0.000000e+00, %5529 ], [ 0.000000e+00, %4925 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %337 ], [ 0.000000e+00, %651 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %947 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %1254 ], [ 0.000000e+00, %1572 ], [ 0.000000e+00, %1563 ], [ %1978, %5531 ], [ 0.000000e+00, %1879 ], [ 0.000000e+00, %1870 ], [ %2279, %5532 ], [ 0.000000e+00, %2188 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2495 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %2800 ], [ 0.000000e+00, %2791 ], [ 0.000000e+00, %3106 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3409 ], [ 0.000000e+00, %3400 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %3707 ], [ %4108, %5533 ], [ 0.000000e+00, %4015 ], [ 0.000000e+00, %4006 ], [ %4425, %5534 ], [ 0.000000e+00, %4328 ], [ 0.000000e+00, %4319 ], [ %4726, %5535 ], [ 0.000000e+00, %4633 ], [ 0.000000e+00, %4624 ], [ 0.000000e+00, %4946 ], [ 0.000000e+00, %4937 ], [ %5338, %5536 ], [ 0.000000e+00, %5245 ], [ 0.000000e+00, %5236 ], [ %144, %193 ], [ 0.000000e+00, %330 ], [ %436, %485 ], [ 0.000000e+00, %622 ], [ %748, %797 ], [ 0.000000e+00, %940 ], [ %1047, %1096 ], [ 0.000000e+00, %1234 ], [ %1362, %1411 ], [ 0.000000e+00, %1556 ], [ %1663, %1712 ], [ 0.000000e+00, %1850 ], [ 0.000000e+00, %2172 ], [ 0.000000e+00, %2466 ], [ %2592, %2641 ], [ 0.000000e+00, %2784 ], [ %2891, %2940 ], [ 0.000000e+00, %3078 ], [ %3202, %3251 ], [ 0.000000e+00, %3393 ], [ %3499, %3548 ], [ 0.000000e+00, %3685 ], [ %3810, %3859 ], [ 0.000000e+00, %3999 ], [ 0.000000e+00, %4297 ], [ 0.000000e+00, %4617 ], [ 0.000000e+00, %4915 ], [ %5040, %5089 ], [ 0.000000e+00, %5229 ], [ 0.000000e+00, %5527 ]
  %5539 = phi i32 [ %10, %18 ], [ 1, %624 ], [ 1, %28 ], [ 1, %1236 ], [ 1, %632 ], [ 1, %1852 ], [ 1, %1244 ], [ 1, %2468 ], [ 1, %1860 ], [ 1, %3080 ], [ 1, %2476 ], [ 1, %3687 ], [ 1, %3088 ], [ 1, %4299 ], [ 1, %3695 ], [ 1, %4917 ], [ 1, %4307 ], [ 1, %5529 ], [ 1, %4925 ], [ 1, %46 ], [ 1, %37 ], [ 1, %346 ], [ 1, %337 ], [ 1, %651 ], [ 1, %642 ], [ 1, %956 ], [ 1, %947 ], [ 1, %1263 ], [ 1, %1254 ], [ 1, %1572 ], [ 1, %1563 ], [ %1886, %5531 ], [ 1, %1879 ], [ 1, %1870 ], [ %2195, %5532 ], [ 1, %2188 ], [ 1, %2179 ], [ 1, %2495 ], [ 1, %2486 ], [ 1, %2800 ], [ 1, %2791 ], [ 1, %3106 ], [ 1, %3097 ], [ 1, %3409 ], [ 1, %3400 ], [ 1, %3716 ], [ 1, %3707 ], [ %4022, %5533 ], [ 1, %4015 ], [ 1, %4006 ], [ %4335, %5534 ], [ 1, %4328 ], [ 1, %4319 ], [ %4640, %5535 ], [ 1, %4633 ], [ 1, %4624 ], [ 1, %4946 ], [ 1, %4937 ], [ %5252, %5536 ], [ 1, %5245 ], [ 1, %5236 ], [ %53, %193 ], [ %44, %330 ], [ %353, %485 ], [ %344, %622 ], [ %658, %797 ], [ %649, %940 ], [ %963, %1096 ], [ %954, %1234 ], [ %1270, %1411 ], [ %1261, %1556 ], [ %1579, %1712 ], [ %1570, %1850 ], [ %1877, %2172 ], [ %2186, %2466 ], [ %2502, %2641 ], [ %2493, %2784 ], [ %2807, %2940 ], [ %2798, %3078 ], [ %3113, %3251 ], [ %3104, %3393 ], [ %3416, %3548 ], [ %3407, %3685 ], [ %3723, %3859 ], [ %3714, %3999 ], [ %4013, %4297 ], [ %4326, %4617 ], [ %4631, %4915 ], [ %4953, %5089 ], [ %4944, %5229 ], [ %5243, %5527 ]
  %5540 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5539, ptr noundef nonnull @.str.5) #3
  %5541 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5538, ptr noundef nonnull @.str.6) #3
  br label %5542

5542:                                             ; preds = %5082, %5167, %5222, %5380, %5465, %5520, %4467, %4552, %4610, %4768, %4853, %4908, %3852, %3937, %3992, %4150, %4235, %4290, %3244, %3329, %3386, %3541, %3626, %3678, %2634, %2718, %2777, %2933, %3017, %3071, %2020, %2105, %2165, %2321, %2406, %2459, %1404, %1488, %1549, %1705, %1789, %1843, %790, %874, %933, %1089, %1173, %1227, %186, %270, %323, %478, %562, %615, %5537
  %5543 = phi i32 [ 0, %5537 ], [ -1, %615 ], [ -1, %562 ], [ -1, %478 ], [ -1, %323 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1227 ], [ -1, %1173 ], [ -1, %1089 ], [ -1, %933 ], [ -1, %874 ], [ -1, %790 ], [ -1, %1843 ], [ -1, %1789 ], [ -1, %1705 ], [ -1, %1549 ], [ -1, %1488 ], [ -1, %1404 ], [ -1, %2459 ], [ -1, %2406 ], [ -1, %2321 ], [ -1, %2165 ], [ -1, %2105 ], [ -1, %2020 ], [ -1, %3071 ], [ -1, %3017 ], [ -1, %2933 ], [ -1, %2777 ], [ -1, %2718 ], [ -1, %2634 ], [ -1, %3678 ], [ -1, %3626 ], [ -1, %3541 ], [ -1, %3386 ], [ -1, %3329 ], [ -1, %3244 ], [ -1, %4290 ], [ -1, %4235 ], [ -1, %4150 ], [ -1, %3992 ], [ -1, %3937 ], [ -1, %3852 ], [ -1, %4908 ], [ -1, %4853 ], [ -1, %4768 ], [ -1, %4610 ], [ -1, %4552 ], [ -1, %4467 ], [ -1, %5520 ], [ -1, %5465 ], [ -1, %5380 ], [ -1, %5222 ], [ -1, %5167 ], [ -1, %5082 ]
  ret i32 %5543
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5501 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1237
    i32 104, label %1849
    i32 105, label %2461
    i32 106, label %3073
    i32 107, label %3685
    i32 108, label %4284
    i32 109, label %4896
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5501

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5501

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5501

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !944

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !945

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !946

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %137
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !947

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5501, label %55, !llvm.loop !948

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !949

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !950

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !951

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !952

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5501, label %194, !llvm.loop !953

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5501

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5501

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !954

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !955

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !956

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds double, ptr %24, i64 %429
  %431 = load double, ptr %430, align 8, !tbaa !18
  %432 = fptoui double %431 to i8
  %433 = load i8, ptr %26, align 1, !tbaa !11
  %434 = add i8 %433, %432
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !957

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5501, label %354, !llvm.loop !958

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !959

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !960

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !961

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds double, ptr %24, i64 %564
  %566 = load double, ptr %565, align 8, !tbaa !18
  %567 = fptoui double %566 to i8
  %568 = load i8, ptr %26, align 1, !tbaa !11
  %569 = add i8 %568, %567
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !962

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5501, label %486, !llvm.loop !963

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %635

631:                                              ; preds = %625
  %632 = load double, ptr %627, align 8, !tbaa !18
  %633 = fptosi double %632 to i32
  %634 = tail call i32 @llvm.abs.i32(i32 %633, i1 true)
  store i32 %634, ptr %629, align 4, !tbaa !5
  br label %5501

635:                                              ; preds = %625
  switch i32 %1, label %1235 [
    i32 1, label %636
    i32 0, label %941
  ]

636:                                              ; preds = %635
  %637 = getelementptr inbounds i32, ptr %3, i64 %19
  %638 = load i32, ptr %637, align 4, !tbaa !5
  %639 = icmp eq i32 %638, 0
  %640 = icmp sgt i32 %5, 0
  br i1 %639, label %650, label %641

641:                                              ; preds = %636
  br i1 %640, label %642, label %5501

642:                                              ; preds = %641
  %643 = icmp sgt i32 %13, 1
  %644 = icmp sgt i32 %13, 0
  %645 = add i32 %13, -2
  %646 = zext i32 %645 to i64
  %647 = zext i32 %13 to i64
  %648 = add nuw i32 %5, 1
  %649 = icmp eq i32 %13, 1
  br label %798

650:                                              ; preds = %636
  br i1 %640, label %651, label %5501

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %659

659:                                              ; preds = %651, %796
  %660 = phi i32 [ 0, %651 ], [ %748, %796 ]
  %661 = phi double [ 0.000000e+00, %651 ], [ %747, %796 ]
  %662 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %663, label %732

663:                                              ; preds = %659, %722
  %664 = phi i32 [ %731, %722 ], [ 0, %659 ]
  %665 = phi i64 [ %673, %722 ], [ %656, %659 ]
  %666 = phi i64 [ %730, %722 ], [ %655, %659 ]
  %667 = phi i32 [ %728, %722 ], [ %662, %659 ]
  %668 = sub i32 %654, %664
  %669 = tail call i32 @llvm.smin.i32(i32 %668, i32 0)
  %670 = sub i32 %668, %669
  %671 = zext i32 %670 to i64
  %672 = add nuw nsw i64 %671, 1
  %673 = add nsw i64 %665, -1
  %674 = icmp ult i32 %670, 31
  br i1 %674, label %710, label %675

675:                                              ; preds = %663
  %676 = and i64 %672, 8589934560
  %677 = sub i64 %666, %676
  br label %678

678:                                              ; preds = %678, %675
  %679 = phi i64 [ 0, %675 ], [ %702, %678 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %698, %678 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %699, %678 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %700, %678 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %701, %678 ]
  %684 = sub i64 %666, %679
  %685 = getelementptr inbounds i32, ptr %9, i64 %684
  %686 = getelementptr inbounds i32, ptr %685, i64 -7
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %685, i64 -15
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %685, i64 -23
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %685, i64 -31
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = mul <8 x i32> %688, %680
  %699 = mul <8 x i32> %691, %681
  %700 = mul <8 x i32> %694, %682
  %701 = mul <8 x i32> %697, %683
  %702 = add nuw i64 %679, 32
  %703 = icmp eq i64 %702, %676
  br i1 %703, label %704, label %678, !llvm.loop !964

704:                                              ; preds = %678
  %705 = mul <8 x i32> %699, %698
  %706 = mul <8 x i32> %700, %705
  %707 = mul <8 x i32> %701, %706
  %708 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %707)
  %709 = icmp eq i64 %672, %676
  br i1 %709, label %722, label %710

710:                                              ; preds = %663, %704
  %711 = phi i64 [ %666, %663 ], [ %677, %704 ]
  %712 = phi i32 [ 1, %663 ], [ %708, %704 ]
  br label %713

713:                                              ; preds = %710, %713
  %714 = phi i64 [ %719, %713 ], [ %711, %710 ]
  %715 = phi i32 [ %718, %713 ], [ %712, %710 ]
  %716 = getelementptr inbounds i32, ptr %9, i64 %714
  %717 = load i32, ptr %716, align 4, !tbaa !5
  %718 = mul nsw i32 %717, %715
  %719 = add nsw i64 %714, -1
  %720 = trunc i64 %714 to i32
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %713, label %722, !llvm.loop !965

722:                                              ; preds = %713, %704
  %723 = phi i32 [ %708, %704 ], [ %718, %713 ]
  %724 = and i64 %673, 4294967295
  %725 = getelementptr inbounds i32, ptr %6, i64 %724
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %723
  %728 = add nsw i32 %727, %667
  %729 = icmp sgt i64 %665, 2
  %730 = add nsw i64 %666, -1
  %731 = add i32 %664, 1
  br i1 %729, label %663, label %732, !llvm.loop !966

732:                                              ; preds = %722, %659
  %733 = phi i32 [ %662, %659 ], [ %728, %722 ]
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds double, ptr %2, i64 %734
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = getelementptr inbounds double, ptr %627, i64 %734
  %738 = load double, ptr %737, align 8, !tbaa !18
  %739 = fptosi double %738 to i32
  %740 = load i32, ptr %629, align 4, !tbaa !5
  %741 = sitofp i32 %740 to double
  %742 = sitofp i32 %739 to double
  %743 = fmul fast double %736, %742
  %744 = tail call fast double @llvm.fabs.f64(double %743)
  %745 = fadd fast double %744, %741
  %746 = fptosi double %745 to i32
  store i32 %746, ptr %629, align 4, !tbaa !5
  %747 = fadd fast double %736, %661
  %748 = add nuw nsw i32 %660, 1
  br i1 %653, label %749, label %796

749:                                              ; preds = %732
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %658, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %656
  br i1 %788, label %796, label %758, !llvm.loop !967

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %732
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5501, label %659, !llvm.loop !968

798:                                              ; preds = %642, %939
  %799 = phi i32 [ 0, %642 ], [ %888, %939 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %643, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %647, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %646, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %645, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !969

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !970

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !971

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds double, ptr %627, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !18
  %879 = fptosi double %878 to i32
  %880 = load i32, ptr %629, align 4, !tbaa !5
  %881 = sitofp i32 %880 to double
  %882 = sitofp i32 %879 to double
  %883 = icmp slt i32 %879, 0
  %884 = fneg fast double %882
  %885 = select fast i1 %883, double %884, double %882
  %886 = fadd fast double %885, %881
  %887 = fptosi double %886 to i32
  store i32 %887, ptr %629, align 4, !tbaa !5
  %888 = add nuw nsw i32 %799, 1
  br i1 %644, label %889, label %939

889:                                              ; preds = %875
  %890 = load i32, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %12, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %890, %892
  br i1 %893, label %916, label %894

894:                                              ; preds = %889
  %895 = icmp eq i32 %890, %892
  br i1 %895, label %896, label %932

896:                                              ; preds = %894
  store i32 0, ptr %4, align 4, !tbaa !5
  %897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %897, ptr %6, align 4, !tbaa !5
  br i1 %649, label %939, label %898

898:                                              ; preds = %896, %926
  %899 = phi i64 [ %930, %926 ], [ 1, %896 ]
  %900 = getelementptr inbounds i32, ptr %4, i64 %899
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %12, i64 %899
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %901, %904
  br i1 %905, label %906, label %924

906:                                              ; preds = %898
  br i1 %893, label %916, label %907

907:                                              ; preds = %906
  %908 = shl i64 %899, 32
  %909 = add i64 %908, -4294967296
  %910 = ashr exact i64 %909, 32
  %911 = getelementptr inbounds i32, ptr %7, i64 %910
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %899
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = add nsw i32 %914, %912
  store i32 %915, ptr %913, align 4, !tbaa !5
  br label %934

916:                                              ; preds = %889, %906
  %917 = phi i32 [ %901, %906 ], [ %890, %889 ]
  %918 = phi ptr [ %900, %906 ], [ %4, %889 ]
  %919 = phi i64 [ %899, %906 ], [ 0, %889 ]
  %920 = add nsw i32 %917, 1
  store i32 %920, ptr %918, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %7, i64 %919
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %919
  br label %934

924:                                              ; preds = %898
  %925 = icmp eq i32 %901, %904
  br i1 %925, label %926, label %932

926:                                              ; preds = %924
  store i32 0, ptr %900, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %8, i64 %899
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %6, i64 %899
  store i32 %928, ptr %929, align 4, !tbaa !5
  %930 = add nuw nsw i64 %899, 1
  %931 = icmp eq i64 %930, %647
  br i1 %931, label %939, label %898, !llvm.loop !972

932:                                              ; preds = %894, %924
  %933 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

934:                                              ; preds = %907, %916
  %935 = phi ptr [ %923, %916 ], [ %900, %907 ]
  %936 = phi i32 [ %922, %916 ], [ 1, %907 ]
  %937 = load i32, ptr %935, align 4, !tbaa !5
  %938 = add nsw i32 %937, %936
  store i32 %938, ptr %935, align 4, !tbaa !5
  br label %939

939:                                              ; preds = %926, %934, %896, %875
  %940 = icmp eq i32 %888, %5
  br i1 %940, label %5501, label %798, !llvm.loop !973

941:                                              ; preds = %635
  %942 = getelementptr inbounds i32, ptr %3, i64 %19
  %943 = load i32, ptr %942, align 4, !tbaa !5
  %944 = icmp eq i32 %943, 0
  %945 = icmp sgt i32 %5, 0
  br i1 %944, label %955, label %946

946:                                              ; preds = %941
  br i1 %945, label %947, label %5501

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %1097

955:                                              ; preds = %941
  br i1 %945, label %956, label %5501

956:                                              ; preds = %955
  %957 = icmp sgt i32 %13, 1
  %958 = icmp sgt i32 %13, 0
  %959 = add i32 %13, -2
  %960 = zext i32 %959 to i64
  %961 = zext i32 %13 to i64
  %962 = add nuw i32 %5, 1
  %963 = icmp eq i32 %13, 1
  br label %964

964:                                              ; preds = %956, %1095
  %965 = phi i32 [ 0, %956 ], [ %1047, %1095 ]
  %966 = phi double [ 0.000000e+00, %956 ], [ %1046, %1095 ]
  %967 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %957, label %968, label %1037

968:                                              ; preds = %964, %1027
  %969 = phi i32 [ %1036, %1027 ], [ 0, %964 ]
  %970 = phi i64 [ %978, %1027 ], [ %961, %964 ]
  %971 = phi i64 [ %1035, %1027 ], [ %960, %964 ]
  %972 = phi i32 [ %1033, %1027 ], [ %967, %964 ]
  %973 = sub i32 %959, %969
  %974 = tail call i32 @llvm.smin.i32(i32 %973, i32 0)
  %975 = sub i32 %973, %974
  %976 = zext i32 %975 to i64
  %977 = add nuw nsw i64 %976, 1
  %978 = add nsw i64 %970, -1
  %979 = icmp ult i32 %975, 31
  br i1 %979, label %1015, label %980

980:                                              ; preds = %968
  %981 = and i64 %977, 8589934560
  %982 = sub i64 %971, %981
  br label %983

983:                                              ; preds = %983, %980
  %984 = phi i64 [ 0, %980 ], [ %1007, %983 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1003, %983 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1004, %983 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1005, %983 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1006, %983 ]
  %989 = sub i64 %971, %984
  %990 = getelementptr inbounds i32, ptr %9, i64 %989
  %991 = getelementptr inbounds i32, ptr %990, i64 -7
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %990, i64 -15
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %990, i64 -23
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %990, i64 -31
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = mul <8 x i32> %993, %985
  %1004 = mul <8 x i32> %996, %986
  %1005 = mul <8 x i32> %999, %987
  %1006 = mul <8 x i32> %1002, %988
  %1007 = add nuw i64 %984, 32
  %1008 = icmp eq i64 %1007, %981
  br i1 %1008, label %1009, label %983, !llvm.loop !974

1009:                                             ; preds = %983
  %1010 = mul <8 x i32> %1004, %1003
  %1011 = mul <8 x i32> %1005, %1010
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1012)
  %1014 = icmp eq i64 %977, %981
  br i1 %1014, label %1027, label %1015

1015:                                             ; preds = %968, %1009
  %1016 = phi i64 [ %971, %968 ], [ %982, %1009 ]
  %1017 = phi i32 [ 1, %968 ], [ %1013, %1009 ]
  br label %1018

1018:                                             ; preds = %1015, %1018
  %1019 = phi i64 [ %1024, %1018 ], [ %1016, %1015 ]
  %1020 = phi i32 [ %1023, %1018 ], [ %1017, %1015 ]
  %1021 = getelementptr inbounds i32, ptr %9, i64 %1019
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1020
  %1024 = add nsw i64 %1019, -1
  %1025 = trunc i64 %1019 to i32
  %1026 = icmp sgt i32 %1025, 0
  br i1 %1026, label %1018, label %1027, !llvm.loop !975

1027:                                             ; preds = %1018, %1009
  %1028 = phi i32 [ %1013, %1009 ], [ %1023, %1018 ]
  %1029 = and i64 %978, 4294967295
  %1030 = getelementptr inbounds i32, ptr %6, i64 %1029
  %1031 = load i32, ptr %1030, align 4, !tbaa !5
  %1032 = mul nsw i32 %1031, %1028
  %1033 = add nsw i32 %1032, %972
  %1034 = icmp sgt i64 %970, 2
  %1035 = add nsw i64 %971, -1
  %1036 = add i32 %969, 1
  br i1 %1034, label %968, label %1037, !llvm.loop !976

1037:                                             ; preds = %1027, %964
  %1038 = phi i32 [ %967, %964 ], [ %1033, %1027 ]
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds double, ptr %627, i64 %1039
  %1041 = load double, ptr %1040, align 8, !tbaa !18
  %1042 = fptosi double %1041 to i32
  %1043 = load i32, ptr %629, align 4, !tbaa !5
  %1044 = tail call i32 @llvm.abs.i32(i32 %1042, i1 true)
  %1045 = add nsw i32 %1044, %1043
  store i32 %1045, ptr %629, align 4, !tbaa !5
  %1046 = fadd fast double %966, 1.000000e+00
  %1047 = add nuw nsw i32 %965, 1
  br i1 %958, label %1048, label %1095

1048:                                             ; preds = %1037
  %1049 = load i32, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %12, align 4, !tbaa !5
  %1051 = add nsw i32 %1050, -1
  %1052 = icmp slt i32 %1049, %1051
  br i1 %1052, label %1072, label %1053

1053:                                             ; preds = %1048
  %1054 = icmp eq i32 %1049, %1051
  br i1 %1054, label %1055, label %1088

1055:                                             ; preds = %1053
  store i32 0, ptr %4, align 4, !tbaa !5
  %1056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1056, ptr %6, align 4, !tbaa !5
  br i1 %963, label %1095, label %1057

1057:                                             ; preds = %1055, %1082
  %1058 = phi i64 [ %1086, %1082 ], [ 1, %1055 ]
  %1059 = getelementptr inbounds i32, ptr %4, i64 %1058
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %12, i64 %1058
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = add nsw i32 %1062, -1
  %1064 = icmp slt i32 %1060, %1063
  br i1 %1064, label %1065, label %1080

1065:                                             ; preds = %1057
  br i1 %1052, label %1072, label %1066

1066:                                             ; preds = %1065
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1058
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1058
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = add nsw i32 %1070, %1068
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  br label %1090

1072:                                             ; preds = %1048, %1065
  %1073 = phi i32 [ %1060, %1065 ], [ %1049, %1048 ]
  %1074 = phi ptr [ %1059, %1065 ], [ %4, %1048 ]
  %1075 = phi i64 [ %1058, %1065 ], [ 0, %1048 ]
  %1076 = add nsw i32 %1073, 1
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %7, i64 %1075
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1075
  br label %1090

1080:                                             ; preds = %1057
  %1081 = icmp eq i32 %1060, %1063
  br i1 %1081, label %1082, label %1088

1082:                                             ; preds = %1080
  store i32 0, ptr %1059, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %8, i64 %1058
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %6, i64 %1058
  store i32 %1084, ptr %1085, align 4, !tbaa !5
  %1086 = add nuw nsw i64 %1058, 1
  %1087 = icmp eq i64 %1086, %961
  br i1 %1087, label %1095, label %1057, !llvm.loop !977

1088:                                             ; preds = %1053, %1080
  %1089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1090:                                             ; preds = %1066, %1072
  %1091 = phi ptr [ %1079, %1072 ], [ %1059, %1066 ]
  %1092 = phi i32 [ %1078, %1072 ], [ 1, %1066 ]
  %1093 = load i32, ptr %1091, align 4, !tbaa !5
  %1094 = add nsw i32 %1093, %1092
  store i32 %1094, ptr %1091, align 4, !tbaa !5
  br label %1095

1095:                                             ; preds = %1082, %1090, %1055, %1037
  %1096 = icmp eq i32 %1047, %5
  br i1 %1096, label %5501, label %964, !llvm.loop !978

1097:                                             ; preds = %947, %1233
  %1098 = phi i32 [ 0, %947 ], [ %1182, %1233 ]
  %1099 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1100, label %1169

1100:                                             ; preds = %1097, %1159
  %1101 = phi i32 [ %1168, %1159 ], [ 0, %1097 ]
  %1102 = phi i64 [ %1110, %1159 ], [ %952, %1097 ]
  %1103 = phi i64 [ %1167, %1159 ], [ %951, %1097 ]
  %1104 = phi i32 [ %1165, %1159 ], [ %1099, %1097 ]
  %1105 = sub i32 %950, %1101
  %1106 = tail call i32 @llvm.smin.i32(i32 %1105, i32 0)
  %1107 = sub i32 %1105, %1106
  %1108 = zext i32 %1107 to i64
  %1109 = add nuw nsw i64 %1108, 1
  %1110 = add nsw i64 %1102, -1
  %1111 = icmp ult i32 %1107, 31
  br i1 %1111, label %1147, label %1112

1112:                                             ; preds = %1100
  %1113 = and i64 %1109, 8589934560
  %1114 = sub i64 %1103, %1113
  br label %1115

1115:                                             ; preds = %1115, %1112
  %1116 = phi i64 [ 0, %1112 ], [ %1139, %1115 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1135, %1115 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1136, %1115 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1137, %1115 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1138, %1115 ]
  %1121 = sub i64 %1103, %1116
  %1122 = getelementptr inbounds i32, ptr %11, i64 %1121
  %1123 = getelementptr inbounds i32, ptr %1122, i64 -7
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1122, i64 -15
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1122, i64 -23
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !5
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1122, i64 -31
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !5
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = mul <8 x i32> %1125, %1117
  %1136 = mul <8 x i32> %1128, %1118
  %1137 = mul <8 x i32> %1131, %1119
  %1138 = mul <8 x i32> %1134, %1120
  %1139 = add nuw i64 %1116, 32
  %1140 = icmp eq i64 %1139, %1113
  br i1 %1140, label %1141, label %1115, !llvm.loop !979

1141:                                             ; preds = %1115
  %1142 = mul <8 x i32> %1136, %1135
  %1143 = mul <8 x i32> %1137, %1142
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1144)
  %1146 = icmp eq i64 %1109, %1113
  br i1 %1146, label %1159, label %1147

1147:                                             ; preds = %1100, %1141
  %1148 = phi i64 [ %1103, %1100 ], [ %1114, %1141 ]
  %1149 = phi i32 [ 1, %1100 ], [ %1145, %1141 ]
  br label %1150

1150:                                             ; preds = %1147, %1150
  %1151 = phi i64 [ %1156, %1150 ], [ %1148, %1147 ]
  %1152 = phi i32 [ %1155, %1150 ], [ %1149, %1147 ]
  %1153 = getelementptr inbounds i32, ptr %11, i64 %1151
  %1154 = load i32, ptr %1153, align 4, !tbaa !5
  %1155 = mul nsw i32 %1154, %1152
  %1156 = add nsw i64 %1151, -1
  %1157 = trunc i64 %1151 to i32
  %1158 = icmp sgt i32 %1157, 0
  br i1 %1158, label %1150, label %1159, !llvm.loop !980

1159:                                             ; preds = %1150, %1141
  %1160 = phi i32 [ %1145, %1141 ], [ %1155, %1150 ]
  %1161 = and i64 %1110, 4294967295
  %1162 = getelementptr inbounds i32, ptr %6, i64 %1161
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = mul nsw i32 %1163, %1160
  %1165 = add nsw i32 %1164, %1104
  %1166 = icmp sgt i64 %1102, 2
  %1167 = add nsw i64 %1103, -1
  %1168 = add i32 %1101, 1
  br i1 %1166, label %1100, label %1169, !llvm.loop !981

1169:                                             ; preds = %1159, %1097
  %1170 = phi i32 [ %1099, %1097 ], [ %1165, %1159 ]
  %1171 = icmp slt i32 %1170, %5
  br i1 %1171, label %1174, label %1172

1172:                                             ; preds = %1169
  %1173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1174:                                             ; preds = %1169
  %1175 = sext i32 %1170 to i64
  %1176 = getelementptr inbounds double, ptr %627, i64 %1175
  %1177 = load double, ptr %1176, align 8, !tbaa !18
  %1178 = fptosi double %1177 to i32
  %1179 = load i32, ptr %629, align 4, !tbaa !5
  %1180 = tail call i32 @llvm.abs.i32(i32 %1178, i1 true)
  %1181 = add nsw i32 %1180, %1179
  store i32 %1181, ptr %629, align 4, !tbaa !5
  %1182 = add nuw nsw i32 %1098, 1
  br i1 %949, label %1183, label %1233

1183:                                             ; preds = %1174
  %1184 = load i32, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %12, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1184, %1186
  br i1 %1187, label %1210, label %1188

1188:                                             ; preds = %1183
  %1189 = icmp eq i32 %1184, %1186
  br i1 %1189, label %1190, label %1226

1190:                                             ; preds = %1188
  store i32 0, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1191, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1233, label %1192

1192:                                             ; preds = %1190, %1220
  %1193 = phi i64 [ %1224, %1220 ], [ 1, %1190 ]
  %1194 = getelementptr inbounds i32, ptr %4, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %12, i64 %1193
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1195, %1198
  br i1 %1199, label %1200, label %1218

1200:                                             ; preds = %1192
  br i1 %1187, label %1210, label %1201

1201:                                             ; preds = %1200
  %1202 = shl i64 %1193, 32
  %1203 = add i64 %1202, -4294967296
  %1204 = ashr exact i64 %1203, 32
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1193
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, %1206
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  br label %1228

1210:                                             ; preds = %1183, %1200
  %1211 = phi i32 [ %1195, %1200 ], [ %1184, %1183 ]
  %1212 = phi ptr [ %1194, %1200 ], [ %4, %1183 ]
  %1213 = phi i64 [ %1193, %1200 ], [ 0, %1183 ]
  %1214 = add nsw i32 %1211, 1
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1213
  br label %1228

1218:                                             ; preds = %1192
  %1219 = icmp eq i32 %1195, %1198
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1218
  store i32 0, ptr %1194, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %8, i64 %1193
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1193
  store i32 %1222, ptr %1223, align 4, !tbaa !5
  %1224 = add nuw nsw i64 %1193, 1
  %1225 = icmp eq i64 %1224, %952
  br i1 %1225, label %1233, label %1192, !llvm.loop !982

1226:                                             ; preds = %1188, %1218
  %1227 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1228:                                             ; preds = %1201, %1210
  %1229 = phi ptr [ %1217, %1210 ], [ %1194, %1201 ]
  %1230 = phi i32 [ %1216, %1210 ], [ 1, %1201 ]
  %1231 = load i32, ptr %1229, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1230
  store i32 %1232, ptr %1229, align 4, !tbaa !5
  br label %1233

1233:                                             ; preds = %1220, %1228, %1190, %1174
  %1234 = icmp eq i32 %1182, %5
  br i1 %1234, label %5501, label %1097, !llvm.loop !983

1235:                                             ; preds = %635
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

1237:                                             ; preds = %18
  %1238 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  %1240 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  store i8 0, ptr %1241, align 1, !tbaa !11
  %1242 = icmp eq i32 %13, 0
  br i1 %1242, label %1243, label %1247

1243:                                             ; preds = %1237
  %1244 = load double, ptr %1239, align 8, !tbaa !18
  %1245 = fptosi double %1244 to i8
  %1246 = tail call i8 @llvm.abs.i8(i8 %1245, i1 false)
  store i8 %1246, ptr %1241, align 1, !tbaa !11
  br label %5501

1247:                                             ; preds = %1237
  switch i32 %1, label %1847 [
    i32 1, label %1248
    i32 0, label %1553
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %5501

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1410

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %5501

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1408
  %1272 = phi i32 [ 0, %1263 ], [ %1360, %1408 ]
  %1273 = phi double [ 0.000000e+00, %1263 ], [ %1359, %1408 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1275, label %1344

1275:                                             ; preds = %1271, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1271 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1268, %1271 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1267, %1271 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1271 ]
  %1280 = sub i32 %1266, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !984

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !985

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !986

1344:                                             ; preds = %1334, %1271
  %1345 = phi i32 [ %1274, %1271 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds double, ptr %1239, i64 %1346
  %1350 = load double, ptr %1349, align 8, !tbaa !18
  %1351 = fptosi double %1350 to i8
  %1352 = load i8, ptr %1241, align 1, !tbaa !11
  %1353 = sitofp i8 %1352 to double
  %1354 = sitofp i8 %1351 to double
  %1355 = fmul fast double %1348, %1354
  %1356 = tail call fast double @llvm.fabs.f64(double %1355)
  %1357 = fadd fast double %1356, %1353
  %1358 = fptosi double %1357 to i8
  store i8 %1358, ptr %1241, align 1, !tbaa !11
  %1359 = fadd fast double %1348, %1273
  %1360 = add nuw nsw i32 %1272, 1
  br i1 %1265, label %1361, label %1408

1361:                                             ; preds = %1344
  %1362 = load i32, ptr %4, align 4, !tbaa !5
  %1363 = load i32, ptr %12, align 4, !tbaa !5
  %1364 = add nsw i32 %1363, -1
  %1365 = icmp slt i32 %1362, %1364
  br i1 %1365, label %1385, label %1366

1366:                                             ; preds = %1361
  %1367 = icmp eq i32 %1362, %1364
  br i1 %1367, label %1368, label %1401

1368:                                             ; preds = %1366
  store i32 0, ptr %4, align 4, !tbaa !5
  %1369 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1369, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1408, label %1370

1370:                                             ; preds = %1368, %1395
  %1371 = phi i64 [ %1399, %1395 ], [ 1, %1368 ]
  %1372 = getelementptr inbounds i32, ptr %4, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %12, i64 %1371
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1373, %1376
  br i1 %1377, label %1378, label %1393

1378:                                             ; preds = %1370
  br i1 %1365, label %1385, label %1379

1379:                                             ; preds = %1378
  %1380 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1381 = load i32, ptr %1380, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1381
  store i32 %1384, ptr %1382, align 4, !tbaa !5
  br label %1403

1385:                                             ; preds = %1361, %1378
  %1386 = phi i32 [ %1373, %1378 ], [ %1362, %1361 ]
  %1387 = phi ptr [ %1372, %1378 ], [ %4, %1361 ]
  %1388 = phi i64 [ %1371, %1378 ], [ 0, %1361 ]
  %1389 = add nsw i32 %1386, 1
  store i32 %1389, ptr %1387, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1388
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1388
  br label %1403

1393:                                             ; preds = %1370
  %1394 = icmp eq i32 %1373, %1376
  br i1 %1394, label %1395, label %1401

1395:                                             ; preds = %1393
  store i32 0, ptr %1372, align 4, !tbaa !5
  %1396 = getelementptr inbounds i32, ptr %8, i64 %1371
  %1397 = load i32, ptr %1396, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1371
  store i32 %1397, ptr %1398, align 4, !tbaa !5
  %1399 = add nuw nsw i64 %1371, 1
  %1400 = icmp eq i64 %1399, %1268
  br i1 %1400, label %1408, label %1370, !llvm.loop !987

1401:                                             ; preds = %1366, %1393
  %1402 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1403:                                             ; preds = %1379, %1385
  %1404 = phi ptr [ %1392, %1385 ], [ %1372, %1379 ]
  %1405 = phi i32 [ %1391, %1385 ], [ 1, %1379 ]
  %1406 = load i32, ptr %1404, align 4, !tbaa !5
  %1407 = add nsw i32 %1406, %1405
  store i32 %1407, ptr %1404, align 4, !tbaa !5
  br label %1408

1408:                                             ; preds = %1395, %1403, %1368, %1344
  %1409 = icmp eq i32 %1360, %5
  br i1 %1409, label %5501, label %1271, !llvm.loop !988

1410:                                             ; preds = %1254, %1551
  %1411 = phi i32 [ 0, %1254 ], [ %1500, %1551 ]
  %1412 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1413, label %1482

1413:                                             ; preds = %1410, %1472
  %1414 = phi i32 [ %1481, %1472 ], [ 0, %1410 ]
  %1415 = phi i64 [ %1423, %1472 ], [ %1259, %1410 ]
  %1416 = phi i64 [ %1480, %1472 ], [ %1258, %1410 ]
  %1417 = phi i32 [ %1478, %1472 ], [ %1412, %1410 ]
  %1418 = sub i32 %1257, %1414
  %1419 = tail call i32 @llvm.smin.i32(i32 %1418, i32 0)
  %1420 = sub i32 %1418, %1419
  %1421 = zext i32 %1420 to i64
  %1422 = add nuw nsw i64 %1421, 1
  %1423 = add nsw i64 %1415, -1
  %1424 = icmp ult i32 %1420, 31
  br i1 %1424, label %1460, label %1425

1425:                                             ; preds = %1413
  %1426 = and i64 %1422, 8589934560
  %1427 = sub i64 %1416, %1426
  br label %1428

1428:                                             ; preds = %1428, %1425
  %1429 = phi i64 [ 0, %1425 ], [ %1452, %1428 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1448, %1428 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1449, %1428 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1450, %1428 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1451, %1428 ]
  %1434 = sub i64 %1416, %1429
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1434
  %1436 = getelementptr inbounds i32, ptr %1435, i64 -7
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1435, i64 -15
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1435, i64 -23
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1435, i64 -31
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = mul <8 x i32> %1438, %1430
  %1449 = mul <8 x i32> %1441, %1431
  %1450 = mul <8 x i32> %1444, %1432
  %1451 = mul <8 x i32> %1447, %1433
  %1452 = add nuw i64 %1429, 32
  %1453 = icmp eq i64 %1452, %1426
  br i1 %1453, label %1454, label %1428, !llvm.loop !989

1454:                                             ; preds = %1428
  %1455 = mul <8 x i32> %1449, %1448
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1457)
  %1459 = icmp eq i64 %1422, %1426
  br i1 %1459, label %1472, label %1460

1460:                                             ; preds = %1413, %1454
  %1461 = phi i64 [ %1416, %1413 ], [ %1427, %1454 ]
  %1462 = phi i32 [ 1, %1413 ], [ %1458, %1454 ]
  br label %1463

1463:                                             ; preds = %1460, %1463
  %1464 = phi i64 [ %1469, %1463 ], [ %1461, %1460 ]
  %1465 = phi i32 [ %1468, %1463 ], [ %1462, %1460 ]
  %1466 = getelementptr inbounds i32, ptr %11, i64 %1464
  %1467 = load i32, ptr %1466, align 4, !tbaa !5
  %1468 = mul nsw i32 %1467, %1465
  %1469 = add nsw i64 %1464, -1
  %1470 = trunc i64 %1464 to i32
  %1471 = icmp sgt i32 %1470, 0
  br i1 %1471, label %1463, label %1472, !llvm.loop !990

1472:                                             ; preds = %1463, %1454
  %1473 = phi i32 [ %1458, %1454 ], [ %1468, %1463 ]
  %1474 = and i64 %1423, 4294967295
  %1475 = getelementptr inbounds i32, ptr %6, i64 %1474
  %1476 = load i32, ptr %1475, align 4, !tbaa !5
  %1477 = mul nsw i32 %1476, %1473
  %1478 = add nsw i32 %1477, %1417
  %1479 = icmp sgt i64 %1415, 2
  %1480 = add nsw i64 %1416, -1
  %1481 = add i32 %1414, 1
  br i1 %1479, label %1413, label %1482, !llvm.loop !991

1482:                                             ; preds = %1472, %1410
  %1483 = phi i32 [ %1412, %1410 ], [ %1478, %1472 ]
  %1484 = icmp slt i32 %1483, %5
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1482
  %1486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1487:                                             ; preds = %1482
  %1488 = sext i32 %1483 to i64
  %1489 = getelementptr inbounds double, ptr %1239, i64 %1488
  %1490 = load double, ptr %1489, align 8, !tbaa !18
  %1491 = fptosi double %1490 to i8
  %1492 = load i8, ptr %1241, align 1, !tbaa !11
  %1493 = sitofp i8 %1492 to double
  %1494 = sitofp i8 %1491 to double
  %1495 = icmp slt i8 %1491, 0
  %1496 = fneg fast double %1494
  %1497 = select fast i1 %1495, double %1496, double %1494
  %1498 = fadd fast double %1497, %1493
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1241, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1411, 1
  br i1 %1256, label %1501, label %1551

1501:                                             ; preds = %1487
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1259
  br i1 %1543, label %1551, label %1510, !llvm.loop !992

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1487
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5501, label %1410, !llvm.loop !993

1553:                                             ; preds = %1247
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5501

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1709

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5501

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1707
  %1577 = phi i32 [ 0, %1568 ], [ %1659, %1707 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1658, %1707 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !994

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !995

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !996

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds double, ptr %1239, i64 %1651
  %1653 = load double, ptr %1652, align 8, !tbaa !18
  %1654 = fptosi double %1653 to i8
  %1655 = load i8, ptr %1241, align 1, !tbaa !11
  %1656 = tail call i8 @llvm.abs.i8(i8 %1654, i1 false)
  %1657 = add i8 %1656, %1655
  store i8 %1657, ptr %1241, align 1, !tbaa !11
  %1658 = fadd fast double %1578, 1.000000e+00
  %1659 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1660, label %1707

1660:                                             ; preds = %1649
  %1661 = load i32, ptr %4, align 4, !tbaa !5
  %1662 = load i32, ptr %12, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, -1
  %1664 = icmp slt i32 %1661, %1663
  br i1 %1664, label %1684, label %1665

1665:                                             ; preds = %1660
  %1666 = icmp eq i32 %1661, %1663
  br i1 %1666, label %1667, label %1700

1667:                                             ; preds = %1665
  store i32 0, ptr %4, align 4, !tbaa !5
  %1668 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1668, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1707, label %1669

1669:                                             ; preds = %1667, %1694
  %1670 = phi i64 [ %1698, %1694 ], [ 1, %1667 ]
  %1671 = getelementptr inbounds i32, ptr %4, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %12, i64 %1670
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = add nsw i32 %1674, -1
  %1676 = icmp slt i32 %1672, %1675
  br i1 %1676, label %1677, label %1692

1677:                                             ; preds = %1669
  br i1 %1664, label %1684, label %1678

1678:                                             ; preds = %1677
  %1679 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1680 = load i32, ptr %1679, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %6, i64 %1670
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = add nsw i32 %1682, %1680
  store i32 %1683, ptr %1681, align 4, !tbaa !5
  br label %1702

1684:                                             ; preds = %1660, %1677
  %1685 = phi i32 [ %1672, %1677 ], [ %1661, %1660 ]
  %1686 = phi ptr [ %1671, %1677 ], [ %4, %1660 ]
  %1687 = phi i64 [ %1670, %1677 ], [ 0, %1660 ]
  %1688 = add nsw i32 %1685, 1
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  %1689 = getelementptr inbounds i32, ptr %7, i64 %1687
  %1690 = load i32, ptr %1689, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1687
  br label %1702

1692:                                             ; preds = %1669
  %1693 = icmp eq i32 %1672, %1675
  br i1 %1693, label %1694, label %1700

1694:                                             ; preds = %1692
  store i32 0, ptr %1671, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %8, i64 %1670
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %6, i64 %1670
  store i32 %1696, ptr %1697, align 4, !tbaa !5
  %1698 = add nuw nsw i64 %1670, 1
  %1699 = icmp eq i64 %1698, %1573
  br i1 %1699, label %1707, label %1669, !llvm.loop !997

1700:                                             ; preds = %1665, %1692
  %1701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1702:                                             ; preds = %1678, %1684
  %1703 = phi ptr [ %1691, %1684 ], [ %1671, %1678 ]
  %1704 = phi i32 [ %1690, %1684 ], [ 1, %1678 ]
  %1705 = load i32, ptr %1703, align 4, !tbaa !5
  %1706 = add nsw i32 %1705, %1704
  store i32 %1706, ptr %1703, align 4, !tbaa !5
  br label %1707

1707:                                             ; preds = %1694, %1702, %1667, %1649
  %1708 = icmp eq i32 %1659, %5
  br i1 %1708, label %5501, label %1576, !llvm.loop !998

1709:                                             ; preds = %1559, %1845
  %1710 = phi i32 [ 0, %1559 ], [ %1794, %1845 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1712, label %1781

1712:                                             ; preds = %1709, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1709 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1564, %1709 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1563, %1709 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1709 ]
  %1717 = sub i32 %1562, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !999

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !1000

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !1001

1781:                                             ; preds = %1771, %1709
  %1782 = phi i32 [ %1711, %1709 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds double, ptr %1239, i64 %1787
  %1789 = load double, ptr %1788, align 8, !tbaa !18
  %1790 = fptosi double %1789 to i8
  %1791 = load i8, ptr %1241, align 1, !tbaa !11
  %1792 = tail call i8 @llvm.abs.i8(i8 %1790, i1 false)
  %1793 = add i8 %1792, %1791
  store i8 %1793, ptr %1241, align 1, !tbaa !11
  %1794 = add nuw nsw i32 %1710, 1
  br i1 %1561, label %1795, label %1845

1795:                                             ; preds = %1786
  %1796 = load i32, ptr %4, align 4, !tbaa !5
  %1797 = load i32, ptr %12, align 4, !tbaa !5
  %1798 = add nsw i32 %1797, -1
  %1799 = icmp slt i32 %1796, %1798
  br i1 %1799, label %1822, label %1800

1800:                                             ; preds = %1795
  %1801 = icmp eq i32 %1796, %1798
  br i1 %1801, label %1802, label %1838

1802:                                             ; preds = %1800
  store i32 0, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1803, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1845, label %1804

1804:                                             ; preds = %1802, %1832
  %1805 = phi i64 [ %1836, %1832 ], [ 1, %1802 ]
  %1806 = getelementptr inbounds i32, ptr %4, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %12, i64 %1805
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = add nsw i32 %1809, -1
  %1811 = icmp slt i32 %1807, %1810
  br i1 %1811, label %1812, label %1830

1812:                                             ; preds = %1804
  br i1 %1799, label %1822, label %1813

1813:                                             ; preds = %1812
  %1814 = shl i64 %1805, 32
  %1815 = add i64 %1814, -4294967296
  %1816 = ashr exact i64 %1815, 32
  %1817 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = add nsw i32 %1820, %1818
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  br label %1840

1822:                                             ; preds = %1795, %1812
  %1823 = phi i32 [ %1807, %1812 ], [ %1796, %1795 ]
  %1824 = phi ptr [ %1806, %1812 ], [ %4, %1795 ]
  %1825 = phi i64 [ %1805, %1812 ], [ 0, %1795 ]
  %1826 = add nsw i32 %1823, 1
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1825
  br label %1840

1830:                                             ; preds = %1804
  %1831 = icmp eq i32 %1807, %1810
  br i1 %1831, label %1832, label %1838

1832:                                             ; preds = %1830
  store i32 0, ptr %1806, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %8, i64 %1805
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1805
  store i32 %1834, ptr %1835, align 4, !tbaa !5
  %1836 = add nuw nsw i64 %1805, 1
  %1837 = icmp eq i64 %1836, %1564
  br i1 %1837, label %1845, label %1804, !llvm.loop !1002

1838:                                             ; preds = %1800, %1830
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1840:                                             ; preds = %1813, %1822
  %1841 = phi ptr [ %1829, %1822 ], [ %1806, %1813 ]
  %1842 = phi i32 [ %1828, %1822 ], [ 1, %1813 ]
  %1843 = load i32, ptr %1841, align 4, !tbaa !5
  %1844 = add nsw i32 %1843, %1842
  store i32 %1844, ptr %1841, align 4, !tbaa !5
  br label %1845

1845:                                             ; preds = %1832, %1840, %1802, %1786
  %1846 = icmp eq i32 %1794, %5
  br i1 %1846, label %5501, label %1709, !llvm.loop !1003

1847:                                             ; preds = %1247
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

1849:                                             ; preds = %18
  %1850 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  %1852 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1853 = load ptr, ptr %1852, align 8, !tbaa !9
  store i16 0, ptr %1853, align 2, !tbaa !78
  %1854 = icmp eq i32 %13, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1849
  %1856 = load double, ptr %1851, align 8, !tbaa !18
  %1857 = fptosi double %1856 to i16
  %1858 = tail call i16 @llvm.abs.i16(i16 %1857, i1 false)
  store i16 %1858, ptr %1853, align 2, !tbaa !78
  br label %5501

1859:                                             ; preds = %1849
  switch i32 %1, label %2459 [
    i32 1, label %1860
    i32 0, label %2165
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5501

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2022

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5501

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2020
  %1884 = phi i16 [ 0, %1875 ], [ %1970, %2020 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1972, %2020 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1971, %2020 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !1004

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !1005

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !1006

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds double, ptr %1851, i64 %1959
  %1963 = load double, ptr %1962, align 8, !tbaa !18
  %1964 = fptosi double %1963 to i16
  %1965 = sitofp i16 %1884 to double
  %1966 = sitofp i16 %1964 to double
  %1967 = fmul fast double %1961, %1966
  %1968 = tail call fast double @llvm.fabs.f64(double %1967)
  %1969 = fadd fast double %1968, %1965
  %1970 = fptosi double %1969 to i16
  %1971 = fadd fast double %1961, %1886
  %1972 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1973, label %2020

1973:                                             ; preds = %1957
  %1974 = load i32, ptr %4, align 4, !tbaa !5
  %1975 = load i32, ptr %12, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1974, %1976
  br i1 %1977, label %1997, label %1978

1978:                                             ; preds = %1973
  %1979 = icmp eq i32 %1974, %1976
  br i1 %1979, label %1980, label %2013

1980:                                             ; preds = %1978
  store i32 0, ptr %4, align 4, !tbaa !5
  %1981 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1981, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2020, label %1982

1982:                                             ; preds = %1980, %2007
  %1983 = phi i64 [ %2011, %2007 ], [ 1, %1980 ]
  %1984 = getelementptr inbounds i32, ptr %4, i64 %1983
  %1985 = load i32, ptr %1984, align 4, !tbaa !5
  %1986 = getelementptr inbounds i32, ptr %12, i64 %1983
  %1987 = load i32, ptr %1986, align 4, !tbaa !5
  %1988 = add nsw i32 %1987, -1
  %1989 = icmp slt i32 %1985, %1988
  br i1 %1989, label %1990, label %2005

1990:                                             ; preds = %1982
  br i1 %1977, label %1997, label %1991

1991:                                             ; preds = %1990
  %1992 = getelementptr inbounds i32, ptr %7, i64 %1983
  %1993 = load i32, ptr %1992, align 4, !tbaa !5
  %1994 = getelementptr inbounds i32, ptr %6, i64 %1983
  %1995 = load i32, ptr %1994, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1993
  store i32 %1996, ptr %1994, align 4, !tbaa !5
  br label %2015

1997:                                             ; preds = %1973, %1990
  %1998 = phi i32 [ %1985, %1990 ], [ %1974, %1973 ]
  %1999 = phi ptr [ %1984, %1990 ], [ %4, %1973 ]
  %2000 = phi i64 [ %1983, %1990 ], [ 0, %1973 ]
  %2001 = add nsw i32 %1998, 1
  store i32 %2001, ptr %1999, align 4, !tbaa !5
  %2002 = getelementptr inbounds i32, ptr %7, i64 %2000
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %2000
  br label %2015

2005:                                             ; preds = %1982
  %2006 = icmp eq i32 %1985, %1988
  br i1 %2006, label %2007, label %2013

2007:                                             ; preds = %2005
  store i32 0, ptr %1984, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %8, i64 %1983
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = getelementptr inbounds i32, ptr %6, i64 %1983
  store i32 %2009, ptr %2010, align 4, !tbaa !5
  %2011 = add nuw nsw i64 %1983, 1
  %2012 = icmp eq i64 %2011, %1880
  br i1 %2012, label %2020, label %1982, !llvm.loop !1007

2013:                                             ; preds = %1978, %2005
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  %2014 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2015:                                             ; preds = %1991, %1997
  %2016 = phi ptr [ %2004, %1997 ], [ %1984, %1991 ]
  %2017 = phi i32 [ %2003, %1997 ], [ 1, %1991 ]
  %2018 = load i32, ptr %2016, align 4, !tbaa !5
  %2019 = add nsw i32 %2018, %2017
  store i32 %2019, ptr %2016, align 4, !tbaa !5
  br label %2020

2020:                                             ; preds = %2007, %2015, %1980, %1957
  %2021 = icmp eq i32 %1972, %5
  br i1 %2021, label %5495, label %1883, !llvm.loop !1008

2022:                                             ; preds = %1866, %2163
  %2023 = phi i16 [ 0, %1866 ], [ %2111, %2163 ]
  %2024 = phi i32 [ 0, %1866 ], [ %2112, %2163 ]
  %2025 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2026, label %2095

2026:                                             ; preds = %2022, %2085
  %2027 = phi i32 [ %2094, %2085 ], [ 0, %2022 ]
  %2028 = phi i64 [ %2036, %2085 ], [ %1871, %2022 ]
  %2029 = phi i64 [ %2093, %2085 ], [ %1870, %2022 ]
  %2030 = phi i32 [ %2091, %2085 ], [ %2025, %2022 ]
  %2031 = sub i32 %1869, %2027
  %2032 = tail call i32 @llvm.smin.i32(i32 %2031, i32 0)
  %2033 = sub i32 %2031, %2032
  %2034 = zext i32 %2033 to i64
  %2035 = add nuw nsw i64 %2034, 1
  %2036 = add nsw i64 %2028, -1
  %2037 = icmp ult i32 %2033, 31
  br i1 %2037, label %2073, label %2038

2038:                                             ; preds = %2026
  %2039 = and i64 %2035, 8589934560
  %2040 = sub i64 %2029, %2039
  br label %2041

2041:                                             ; preds = %2041, %2038
  %2042 = phi i64 [ 0, %2038 ], [ %2065, %2041 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2061, %2041 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2062, %2041 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2063, %2041 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2064, %2041 ]
  %2047 = sub i64 %2029, %2042
  %2048 = getelementptr inbounds i32, ptr %11, i64 %2047
  %2049 = getelementptr inbounds i32, ptr %2048, i64 -7
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2048, i64 -15
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2048, i64 -23
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = getelementptr inbounds i32, ptr %2048, i64 -31
  %2059 = load <8 x i32>, ptr %2058, align 4, !tbaa !5
  %2060 = shufflevector <8 x i32> %2059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2061 = mul <8 x i32> %2051, %2043
  %2062 = mul <8 x i32> %2054, %2044
  %2063 = mul <8 x i32> %2057, %2045
  %2064 = mul <8 x i32> %2060, %2046
  %2065 = add nuw i64 %2042, 32
  %2066 = icmp eq i64 %2065, %2039
  br i1 %2066, label %2067, label %2041, !llvm.loop !1009

2067:                                             ; preds = %2041
  %2068 = mul <8 x i32> %2062, %2061
  %2069 = mul <8 x i32> %2063, %2068
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2070)
  %2072 = icmp eq i64 %2035, %2039
  br i1 %2072, label %2085, label %2073

2073:                                             ; preds = %2026, %2067
  %2074 = phi i64 [ %2029, %2026 ], [ %2040, %2067 ]
  %2075 = phi i32 [ 1, %2026 ], [ %2071, %2067 ]
  br label %2076

2076:                                             ; preds = %2073, %2076
  %2077 = phi i64 [ %2082, %2076 ], [ %2074, %2073 ]
  %2078 = phi i32 [ %2081, %2076 ], [ %2075, %2073 ]
  %2079 = getelementptr inbounds i32, ptr %11, i64 %2077
  %2080 = load i32, ptr %2079, align 4, !tbaa !5
  %2081 = mul nsw i32 %2080, %2078
  %2082 = add nsw i64 %2077, -1
  %2083 = trunc i64 %2077 to i32
  %2084 = icmp sgt i32 %2083, 0
  br i1 %2084, label %2076, label %2085, !llvm.loop !1010

2085:                                             ; preds = %2076, %2067
  %2086 = phi i32 [ %2071, %2067 ], [ %2081, %2076 ]
  %2087 = and i64 %2036, 4294967295
  %2088 = getelementptr inbounds i32, ptr %6, i64 %2087
  %2089 = load i32, ptr %2088, align 4, !tbaa !5
  %2090 = mul nsw i32 %2089, %2086
  %2091 = add nsw i32 %2090, %2030
  %2092 = icmp sgt i64 %2028, 2
  %2093 = add nsw i64 %2029, -1
  %2094 = add i32 %2027, 1
  br i1 %2092, label %2026, label %2095, !llvm.loop !1011

2095:                                             ; preds = %2085, %2022
  %2096 = phi i32 [ %2025, %2022 ], [ %2091, %2085 ]
  %2097 = icmp slt i32 %2096, %5
  br i1 %2097, label %2100, label %2098

2098:                                             ; preds = %2095
  %2099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2100:                                             ; preds = %2095
  %2101 = sext i32 %2096 to i64
  %2102 = getelementptr inbounds double, ptr %1851, i64 %2101
  %2103 = load double, ptr %2102, align 8, !tbaa !18
  %2104 = fptosi double %2103 to i16
  %2105 = sitofp i16 %2023 to double
  %2106 = sitofp i16 %2104 to double
  %2107 = icmp slt i16 %2104, 0
  %2108 = fneg fast double %2106
  %2109 = select fast i1 %2107, double %2108, double %2106
  %2110 = fadd fast double %2109, %2105
  %2111 = fptosi double %2110 to i16
  store i16 %2111, ptr %1853, align 2, !tbaa !78
  %2112 = add nuw nsw i32 %2024, 1
  br i1 %1868, label %2113, label %2163

2113:                                             ; preds = %2100
  %2114 = load i32, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %12, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, -1
  %2117 = icmp slt i32 %2114, %2116
  br i1 %2117, label %2140, label %2118

2118:                                             ; preds = %2113
  %2119 = icmp eq i32 %2114, %2116
  br i1 %2119, label %2120, label %2156

2120:                                             ; preds = %2118
  store i32 0, ptr %4, align 4, !tbaa !5
  %2121 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2121, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2163, label %2122

2122:                                             ; preds = %2120, %2150
  %2123 = phi i64 [ %2154, %2150 ], [ 1, %2120 ]
  %2124 = getelementptr inbounds i32, ptr %4, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %12, i64 %2123
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, -1
  %2129 = icmp slt i32 %2125, %2128
  br i1 %2129, label %2130, label %2148

2130:                                             ; preds = %2122
  br i1 %2117, label %2140, label %2131

2131:                                             ; preds = %2130
  %2132 = shl i64 %2123, 32
  %2133 = add i64 %2132, -4294967296
  %2134 = ashr exact i64 %2133, 32
  %2135 = getelementptr inbounds i32, ptr %7, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, %2136
  store i32 %2139, ptr %2137, align 4, !tbaa !5
  br label %2158

2140:                                             ; preds = %2113, %2130
  %2141 = phi i32 [ %2125, %2130 ], [ %2114, %2113 ]
  %2142 = phi ptr [ %2124, %2130 ], [ %4, %2113 ]
  %2143 = phi i64 [ %2123, %2130 ], [ 0, %2113 ]
  %2144 = add nsw i32 %2141, 1
  store i32 %2144, ptr %2142, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2143
  br label %2158

2148:                                             ; preds = %2122
  %2149 = icmp eq i32 %2125, %2128
  br i1 %2149, label %2150, label %2156

2150:                                             ; preds = %2148
  store i32 0, ptr %2124, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %8, i64 %2123
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %6, i64 %2123
  store i32 %2152, ptr %2153, align 4, !tbaa !5
  %2154 = add nuw nsw i64 %2123, 1
  %2155 = icmp eq i64 %2154, %1871
  br i1 %2155, label %2163, label %2122, !llvm.loop !1012

2156:                                             ; preds = %2118, %2148
  %2157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2158:                                             ; preds = %2131, %2140
  %2159 = phi ptr [ %2147, %2140 ], [ %2124, %2131 ]
  %2160 = phi i32 [ %2146, %2140 ], [ 1, %2131 ]
  %2161 = load i32, ptr %2159, align 4, !tbaa !5
  %2162 = add nsw i32 %2161, %2160
  store i32 %2162, ptr %2159, align 4, !tbaa !5
  br label %2163

2163:                                             ; preds = %2150, %2158, %2120, %2100
  %2164 = icmp eq i32 %2112, %5
  br i1 %2164, label %5501, label %2022, !llvm.loop !1013

2165:                                             ; preds = %1859
  %2166 = getelementptr inbounds i32, ptr %3, i64 %19
  %2167 = load i32, ptr %2166, align 4, !tbaa !5
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp sgt i32 %5, 0
  br i1 %2168, label %2179, label %2170

2170:                                             ; preds = %2165
  br i1 %2169, label %2171, label %5501

2171:                                             ; preds = %2170
  %2172 = icmp sgt i32 %13, 1
  %2173 = icmp sgt i32 %13, 0
  %2174 = add i32 %13, -2
  %2175 = zext i32 %2174 to i64
  %2176 = zext i32 %13 to i64
  %2177 = add nuw i32 %5, 1
  %2178 = icmp eq i32 %13, 1
  br label %2321

2179:                                             ; preds = %2165
  br i1 %2169, label %2180, label %5501

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2188

2188:                                             ; preds = %2180, %2319
  %2189 = phi i16 [ 0, %2180 ], [ %2269, %2319 ]
  %2190 = phi i32 [ 0, %2180 ], [ %2271, %2319 ]
  %2191 = phi double [ 0.000000e+00, %2180 ], [ %2270, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2193, label %2262

2193:                                             ; preds = %2188, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2188 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2185, %2188 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2184, %2188 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2188 ]
  %2198 = sub i32 %2183, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !1014

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !1015

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !1016

2262:                                             ; preds = %2252, %2188
  %2263 = phi i32 [ %2192, %2188 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds double, ptr %1851, i64 %2264
  %2266 = load double, ptr %2265, align 8, !tbaa !18
  %2267 = fptosi double %2266 to i16
  %2268 = tail call i16 @llvm.abs.i16(i16 %2267, i1 false)
  %2269 = add i16 %2268, %2189
  %2270 = fadd fast double %2191, 1.000000e+00
  %2271 = add nuw nsw i32 %2190, 1
  br i1 %2182, label %2272, label %2319

2272:                                             ; preds = %2262
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2185
  br i1 %2311, label %2319, label %2281, !llvm.loop !1017

2312:                                             ; preds = %2277, %2304
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2262
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %5496, label %2188, !llvm.loop !1018

2321:                                             ; preds = %2171, %2457
  %2322 = phi i16 [ 0, %2171 ], [ %2405, %2457 ]
  %2323 = phi i32 [ 0, %2171 ], [ %2406, %2457 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2176, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2175, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2174, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !1019

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !1020

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !1021

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds double, ptr %1851, i64 %2400
  %2402 = load double, ptr %2401, align 8, !tbaa !18
  %2403 = fptosi double %2402 to i16
  %2404 = tail call i16 @llvm.abs.i16(i16 %2403, i1 false)
  %2405 = add i16 %2404, %2322
  store i16 %2405, ptr %1853, align 2, !tbaa !78
  %2406 = add nuw nsw i32 %2323, 1
  br i1 %2173, label %2407, label %2457

2407:                                             ; preds = %2399
  %2408 = load i32, ptr %4, align 4, !tbaa !5
  %2409 = load i32, ptr %12, align 4, !tbaa !5
  %2410 = add nsw i32 %2409, -1
  %2411 = icmp slt i32 %2408, %2410
  br i1 %2411, label %2434, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp eq i32 %2408, %2410
  br i1 %2413, label %2414, label %2450

2414:                                             ; preds = %2412
  store i32 0, ptr %4, align 4, !tbaa !5
  %2415 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2415, ptr %6, align 4, !tbaa !5
  br i1 %2178, label %2457, label %2416

2416:                                             ; preds = %2414, %2444
  %2417 = phi i64 [ %2448, %2444 ], [ 1, %2414 ]
  %2418 = getelementptr inbounds i32, ptr %4, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %12, i64 %2417
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2419, %2422
  br i1 %2423, label %2424, label %2442

2424:                                             ; preds = %2416
  br i1 %2411, label %2434, label %2425

2425:                                             ; preds = %2424
  %2426 = shl i64 %2417, 32
  %2427 = add i64 %2426, -4294967296
  %2428 = ashr exact i64 %2427, 32
  %2429 = getelementptr inbounds i32, ptr %7, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %6, i64 %2417
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, %2430
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  br label %2452

2434:                                             ; preds = %2407, %2424
  %2435 = phi i32 [ %2419, %2424 ], [ %2408, %2407 ]
  %2436 = phi ptr [ %2418, %2424 ], [ %4, %2407 ]
  %2437 = phi i64 [ %2417, %2424 ], [ 0, %2407 ]
  %2438 = add nsw i32 %2435, 1
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  %2439 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %6, i64 %2437
  br label %2452

2442:                                             ; preds = %2416
  %2443 = icmp eq i32 %2419, %2422
  br i1 %2443, label %2444, label %2450

2444:                                             ; preds = %2442
  store i32 0, ptr %2418, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %8, i64 %2417
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %6, i64 %2417
  store i32 %2446, ptr %2447, align 4, !tbaa !5
  %2448 = add nuw nsw i64 %2417, 1
  %2449 = icmp eq i64 %2448, %2176
  br i1 %2449, label %2457, label %2416, !llvm.loop !1022

2450:                                             ; preds = %2412, %2442
  %2451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2452:                                             ; preds = %2425, %2434
  %2453 = phi ptr [ %2441, %2434 ], [ %2418, %2425 ]
  %2454 = phi i32 [ %2440, %2434 ], [ 1, %2425 ]
  %2455 = load i32, ptr %2453, align 4, !tbaa !5
  %2456 = add nsw i32 %2455, %2454
  store i32 %2456, ptr %2453, align 4, !tbaa !5
  br label %2457

2457:                                             ; preds = %2444, %2452, %2414, %2399
  %2458 = icmp eq i32 %2406, %5
  br i1 %2458, label %5501, label %2321, !llvm.loop !1023

2459:                                             ; preds = %1859
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

2461:                                             ; preds = %18
  %2462 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2463 = load ptr, ptr %2462, align 8, !tbaa !9
  %2464 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  store i32 0, ptr %2465, align 4, !tbaa !5
  %2466 = icmp eq i32 %13, 0
  br i1 %2466, label %2467, label %2471

2467:                                             ; preds = %2461
  %2468 = load double, ptr %2463, align 8, !tbaa !18
  %2469 = fptosi double %2468 to i32
  %2470 = tail call i32 @llvm.abs.i32(i32 %2469, i1 true)
  store i32 %2470, ptr %2465, align 4, !tbaa !5
  br label %5501

2471:                                             ; preds = %2461
  switch i32 %1, label %3071 [
    i32 1, label %2472
    i32 0, label %2777
  ]

2472:                                             ; preds = %2471
  %2473 = getelementptr inbounds i32, ptr %3, i64 %19
  %2474 = load i32, ptr %2473, align 4, !tbaa !5
  %2475 = icmp eq i32 %2474, 0
  %2476 = icmp sgt i32 %5, 0
  br i1 %2475, label %2486, label %2477

2477:                                             ; preds = %2472
  br i1 %2476, label %2478, label %5501

2478:                                             ; preds = %2477
  %2479 = icmp sgt i32 %13, 1
  %2480 = icmp sgt i32 %13, 0
  %2481 = add i32 %13, -2
  %2482 = zext i32 %2481 to i64
  %2483 = zext i32 %13 to i64
  %2484 = add nuw i32 %5, 1
  %2485 = icmp eq i32 %13, 1
  br label %2634

2486:                                             ; preds = %2472
  br i1 %2476, label %2487, label %5501

2487:                                             ; preds = %2486
  %2488 = icmp sgt i32 %13, 1
  %2489 = icmp sgt i32 %13, 0
  %2490 = add i32 %13, -2
  %2491 = zext i32 %2490 to i64
  %2492 = zext i32 %13 to i64
  %2493 = add nuw i32 %5, 1
  %2494 = icmp eq i32 %13, 1
  br label %2495

2495:                                             ; preds = %2487, %2632
  %2496 = phi i32 [ 0, %2487 ], [ %2584, %2632 ]
  %2497 = phi double [ 0.000000e+00, %2487 ], [ %2583, %2632 ]
  %2498 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2499, label %2568

2499:                                             ; preds = %2495, %2558
  %2500 = phi i32 [ %2567, %2558 ], [ 0, %2495 ]
  %2501 = phi i64 [ %2509, %2558 ], [ %2492, %2495 ]
  %2502 = phi i64 [ %2566, %2558 ], [ %2491, %2495 ]
  %2503 = phi i32 [ %2564, %2558 ], [ %2498, %2495 ]
  %2504 = sub i32 %2490, %2500
  %2505 = tail call i32 @llvm.smin.i32(i32 %2504, i32 0)
  %2506 = sub i32 %2504, %2505
  %2507 = zext i32 %2506 to i64
  %2508 = add nuw nsw i64 %2507, 1
  %2509 = add nsw i64 %2501, -1
  %2510 = icmp ult i32 %2506, 31
  br i1 %2510, label %2546, label %2511

2511:                                             ; preds = %2499
  %2512 = and i64 %2508, 8589934560
  %2513 = sub i64 %2502, %2512
  br label %2514

2514:                                             ; preds = %2514, %2511
  %2515 = phi i64 [ 0, %2511 ], [ %2538, %2514 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2534, %2514 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2535, %2514 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2536, %2514 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2537, %2514 ]
  %2520 = sub i64 %2502, %2515
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2520
  %2522 = getelementptr inbounds i32, ptr %2521, i64 -7
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2521, i64 -15
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2521, i64 -23
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2521, i64 -31
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = mul <8 x i32> %2524, %2516
  %2535 = mul <8 x i32> %2527, %2517
  %2536 = mul <8 x i32> %2530, %2518
  %2537 = mul <8 x i32> %2533, %2519
  %2538 = add nuw i64 %2515, 32
  %2539 = icmp eq i64 %2538, %2512
  br i1 %2539, label %2540, label %2514, !llvm.loop !1024

2540:                                             ; preds = %2514
  %2541 = mul <8 x i32> %2535, %2534
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2543)
  %2545 = icmp eq i64 %2508, %2512
  br i1 %2545, label %2558, label %2546

2546:                                             ; preds = %2499, %2540
  %2547 = phi i64 [ %2502, %2499 ], [ %2513, %2540 ]
  %2548 = phi i32 [ 1, %2499 ], [ %2544, %2540 ]
  br label %2549

2549:                                             ; preds = %2546, %2549
  %2550 = phi i64 [ %2555, %2549 ], [ %2547, %2546 ]
  %2551 = phi i32 [ %2554, %2549 ], [ %2548, %2546 ]
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = mul nsw i32 %2553, %2551
  %2555 = add nsw i64 %2550, -1
  %2556 = trunc i64 %2550 to i32
  %2557 = icmp sgt i32 %2556, 0
  br i1 %2557, label %2549, label %2558, !llvm.loop !1025

2558:                                             ; preds = %2549, %2540
  %2559 = phi i32 [ %2544, %2540 ], [ %2554, %2549 ]
  %2560 = and i64 %2509, 4294967295
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2560
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2559
  %2564 = add nsw i32 %2563, %2503
  %2565 = icmp sgt i64 %2501, 2
  %2566 = add nsw i64 %2502, -1
  %2567 = add i32 %2500, 1
  br i1 %2565, label %2499, label %2568, !llvm.loop !1026

2568:                                             ; preds = %2558, %2495
  %2569 = phi i32 [ %2498, %2495 ], [ %2564, %2558 ]
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds double, ptr %2, i64 %2570
  %2572 = load double, ptr %2571, align 8, !tbaa !18
  %2573 = getelementptr inbounds double, ptr %2463, i64 %2570
  %2574 = load double, ptr %2573, align 8, !tbaa !18
  %2575 = fptosi double %2574 to i32
  %2576 = load i32, ptr %2465, align 4, !tbaa !5
  %2577 = sitofp i32 %2576 to double
  %2578 = sitofp i32 %2575 to double
  %2579 = fmul fast double %2572, %2578
  %2580 = tail call fast double @llvm.fabs.f64(double %2579)
  %2581 = fadd fast double %2580, %2577
  %2582 = fptosi double %2581 to i32
  store i32 %2582, ptr %2465, align 4, !tbaa !5
  %2583 = fadd fast double %2572, %2497
  %2584 = add nuw nsw i32 %2496, 1
  br i1 %2489, label %2585, label %2632

2585:                                             ; preds = %2568
  %2586 = load i32, ptr %4, align 4, !tbaa !5
  %2587 = load i32, ptr %12, align 4, !tbaa !5
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !5
  %2593 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2593, ptr %6, align 4, !tbaa !5
  br i1 %2494, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !5
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !5
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !5
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !5
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !5
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2492
  br i1 %2624, label %2632, label %2594, !llvm.loop !1027

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !5
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !5
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2568
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5501, label %2495, !llvm.loop !1028

2634:                                             ; preds = %2478, %2775
  %2635 = phi i32 [ 0, %2478 ], [ %2724, %2775 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2483, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2482, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2481, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !5
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !5
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !5
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1029

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !5
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1030

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1031

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds double, ptr %2463, i64 %2712
  %2714 = load double, ptr %2713, align 8, !tbaa !18
  %2715 = fptosi double %2714 to i32
  %2716 = load i32, ptr %2465, align 4, !tbaa !5
  %2717 = sitofp i32 %2716 to double
  %2718 = sitofp i32 %2715 to double
  %2719 = icmp slt i32 %2715, 0
  %2720 = fneg fast double %2718
  %2721 = select fast i1 %2719, double %2720, double %2718
  %2722 = fadd fast double %2721, %2717
  %2723 = fptosi double %2722 to i32
  store i32 %2723, ptr %2465, align 4, !tbaa !5
  %2724 = add nuw nsw i32 %2635, 1
  br i1 %2480, label %2725, label %2775

2725:                                             ; preds = %2711
  %2726 = load i32, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %12, align 4, !tbaa !5
  %2728 = add nsw i32 %2727, -1
  %2729 = icmp slt i32 %2726, %2728
  br i1 %2729, label %2752, label %2730

2730:                                             ; preds = %2725
  %2731 = icmp eq i32 %2726, %2728
  br i1 %2731, label %2732, label %2768

2732:                                             ; preds = %2730
  store i32 0, ptr %4, align 4, !tbaa !5
  %2733 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2733, ptr %6, align 4, !tbaa !5
  br i1 %2485, label %2775, label %2734

2734:                                             ; preds = %2732, %2762
  %2735 = phi i64 [ %2766, %2762 ], [ 1, %2732 ]
  %2736 = getelementptr inbounds i32, ptr %4, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = getelementptr inbounds i32, ptr %12, i64 %2735
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = add nsw i32 %2739, -1
  %2741 = icmp slt i32 %2737, %2740
  br i1 %2741, label %2742, label %2760

2742:                                             ; preds = %2734
  br i1 %2729, label %2752, label %2743

2743:                                             ; preds = %2742
  %2744 = shl i64 %2735, 32
  %2745 = add i64 %2744, -4294967296
  %2746 = ashr exact i64 %2745, 32
  %2747 = getelementptr inbounds i32, ptr %7, i64 %2746
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = getelementptr inbounds i32, ptr %6, i64 %2735
  %2750 = load i32, ptr %2749, align 4, !tbaa !5
  %2751 = add nsw i32 %2750, %2748
  store i32 %2751, ptr %2749, align 4, !tbaa !5
  br label %2770

2752:                                             ; preds = %2725, %2742
  %2753 = phi i32 [ %2737, %2742 ], [ %2726, %2725 ]
  %2754 = phi ptr [ %2736, %2742 ], [ %4, %2725 ]
  %2755 = phi i64 [ %2735, %2742 ], [ 0, %2725 ]
  %2756 = add nsw i32 %2753, 1
  store i32 %2756, ptr %2754, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %7, i64 %2755
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2755
  br label %2770

2760:                                             ; preds = %2734
  %2761 = icmp eq i32 %2737, %2740
  br i1 %2761, label %2762, label %2768

2762:                                             ; preds = %2760
  store i32 0, ptr %2736, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %8, i64 %2735
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = getelementptr inbounds i32, ptr %6, i64 %2735
  store i32 %2764, ptr %2765, align 4, !tbaa !5
  %2766 = add nuw nsw i64 %2735, 1
  %2767 = icmp eq i64 %2766, %2483
  br i1 %2767, label %2775, label %2734, !llvm.loop !1032

2768:                                             ; preds = %2730, %2760
  %2769 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2770:                                             ; preds = %2743, %2752
  %2771 = phi ptr [ %2759, %2752 ], [ %2736, %2743 ]
  %2772 = phi i32 [ %2758, %2752 ], [ 1, %2743 ]
  %2773 = load i32, ptr %2771, align 4, !tbaa !5
  %2774 = add nsw i32 %2773, %2772
  store i32 %2774, ptr %2771, align 4, !tbaa !5
  br label %2775

2775:                                             ; preds = %2762, %2770, %2732, %2711
  %2776 = icmp eq i32 %2724, %5
  br i1 %2776, label %5501, label %2634, !llvm.loop !1033

2777:                                             ; preds = %2471
  %2778 = getelementptr inbounds i32, ptr %3, i64 %19
  %2779 = load i32, ptr %2778, align 4, !tbaa !5
  %2780 = icmp eq i32 %2779, 0
  %2781 = icmp sgt i32 %5, 0
  br i1 %2780, label %2791, label %2782

2782:                                             ; preds = %2777
  br i1 %2781, label %2783, label %5501

2783:                                             ; preds = %2782
  %2784 = icmp sgt i32 %13, 1
  %2785 = icmp sgt i32 %13, 0
  %2786 = add i32 %13, -2
  %2787 = zext i32 %2786 to i64
  %2788 = zext i32 %13 to i64
  %2789 = add nuw i32 %5, 1
  %2790 = icmp eq i32 %13, 1
  br label %2933

2791:                                             ; preds = %2777
  br i1 %2781, label %2792, label %5501

2792:                                             ; preds = %2791
  %2793 = icmp sgt i32 %13, 1
  %2794 = icmp sgt i32 %13, 0
  %2795 = add i32 %13, -2
  %2796 = zext i32 %2795 to i64
  %2797 = zext i32 %13 to i64
  %2798 = add nuw i32 %5, 1
  %2799 = icmp eq i32 %13, 1
  br label %2800

2800:                                             ; preds = %2792, %2931
  %2801 = phi i32 [ 0, %2792 ], [ %2883, %2931 ]
  %2802 = phi double [ 0.000000e+00, %2792 ], [ %2882, %2931 ]
  %2803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2804, label %2873

2804:                                             ; preds = %2800, %2863
  %2805 = phi i32 [ %2872, %2863 ], [ 0, %2800 ]
  %2806 = phi i64 [ %2814, %2863 ], [ %2797, %2800 ]
  %2807 = phi i64 [ %2871, %2863 ], [ %2796, %2800 ]
  %2808 = phi i32 [ %2869, %2863 ], [ %2803, %2800 ]
  %2809 = sub i32 %2795, %2805
  %2810 = tail call i32 @llvm.smin.i32(i32 %2809, i32 0)
  %2811 = sub i32 %2809, %2810
  %2812 = zext i32 %2811 to i64
  %2813 = add nuw nsw i64 %2812, 1
  %2814 = add nsw i64 %2806, -1
  %2815 = icmp ult i32 %2811, 31
  br i1 %2815, label %2851, label %2816

2816:                                             ; preds = %2804
  %2817 = and i64 %2813, 8589934560
  %2818 = sub i64 %2807, %2817
  br label %2819

2819:                                             ; preds = %2819, %2816
  %2820 = phi i64 [ 0, %2816 ], [ %2843, %2819 ]
  %2821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2839, %2819 ]
  %2822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2840, %2819 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2841, %2819 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2842, %2819 ]
  %2825 = sub i64 %2807, %2820
  %2826 = getelementptr inbounds i32, ptr %9, i64 %2825
  %2827 = getelementptr inbounds i32, ptr %2826, i64 -7
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2826, i64 -15
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2826, i64 -23
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !5
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2826, i64 -31
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = mul <8 x i32> %2829, %2821
  %2840 = mul <8 x i32> %2832, %2822
  %2841 = mul <8 x i32> %2835, %2823
  %2842 = mul <8 x i32> %2838, %2824
  %2843 = add nuw i64 %2820, 32
  %2844 = icmp eq i64 %2843, %2817
  br i1 %2844, label %2845, label %2819, !llvm.loop !1034

2845:                                             ; preds = %2819
  %2846 = mul <8 x i32> %2840, %2839
  %2847 = mul <8 x i32> %2841, %2846
  %2848 = mul <8 x i32> %2842, %2847
  %2849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2848)
  %2850 = icmp eq i64 %2813, %2817
  br i1 %2850, label %2863, label %2851

2851:                                             ; preds = %2804, %2845
  %2852 = phi i64 [ %2807, %2804 ], [ %2818, %2845 ]
  %2853 = phi i32 [ 1, %2804 ], [ %2849, %2845 ]
  br label %2854

2854:                                             ; preds = %2851, %2854
  %2855 = phi i64 [ %2860, %2854 ], [ %2852, %2851 ]
  %2856 = phi i32 [ %2859, %2854 ], [ %2853, %2851 ]
  %2857 = getelementptr inbounds i32, ptr %9, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = mul nsw i32 %2858, %2856
  %2860 = add nsw i64 %2855, -1
  %2861 = trunc i64 %2855 to i32
  %2862 = icmp sgt i32 %2861, 0
  br i1 %2862, label %2854, label %2863, !llvm.loop !1035

2863:                                             ; preds = %2854, %2845
  %2864 = phi i32 [ %2849, %2845 ], [ %2859, %2854 ]
  %2865 = and i64 %2814, 4294967295
  %2866 = getelementptr inbounds i32, ptr %6, i64 %2865
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = mul nsw i32 %2867, %2864
  %2869 = add nsw i32 %2868, %2808
  %2870 = icmp sgt i64 %2806, 2
  %2871 = add nsw i64 %2807, -1
  %2872 = add i32 %2805, 1
  br i1 %2870, label %2804, label %2873, !llvm.loop !1036

2873:                                             ; preds = %2863, %2800
  %2874 = phi i32 [ %2803, %2800 ], [ %2869, %2863 ]
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds double, ptr %2463, i64 %2875
  %2877 = load double, ptr %2876, align 8, !tbaa !18
  %2878 = fptosi double %2877 to i32
  %2879 = load i32, ptr %2465, align 4, !tbaa !5
  %2880 = tail call i32 @llvm.abs.i32(i32 %2878, i1 true)
  %2881 = add nsw i32 %2880, %2879
  store i32 %2881, ptr %2465, align 4, !tbaa !5
  %2882 = fadd fast double %2802, 1.000000e+00
  %2883 = add nuw nsw i32 %2801, 1
  br i1 %2794, label %2884, label %2931

2884:                                             ; preds = %2873
  %2885 = load i32, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %12, align 4, !tbaa !5
  %2887 = add nsw i32 %2886, -1
  %2888 = icmp slt i32 %2885, %2887
  br i1 %2888, label %2908, label %2889

2889:                                             ; preds = %2884
  %2890 = icmp eq i32 %2885, %2887
  br i1 %2890, label %2891, label %2924

2891:                                             ; preds = %2889
  store i32 0, ptr %4, align 4, !tbaa !5
  %2892 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2892, ptr %6, align 4, !tbaa !5
  br i1 %2799, label %2931, label %2893

2893:                                             ; preds = %2891, %2918
  %2894 = phi i64 [ %2922, %2918 ], [ 1, %2891 ]
  %2895 = getelementptr inbounds i32, ptr %4, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = getelementptr inbounds i32, ptr %12, i64 %2894
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2896, %2899
  br i1 %2900, label %2901, label %2916

2901:                                             ; preds = %2893
  br i1 %2888, label %2908, label %2902

2902:                                             ; preds = %2901
  %2903 = getelementptr inbounds i32, ptr %7, i64 %2894
  %2904 = load i32, ptr %2903, align 4, !tbaa !5
  %2905 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2906 = load i32, ptr %2905, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2904
  store i32 %2907, ptr %2905, align 4, !tbaa !5
  br label %2926

2908:                                             ; preds = %2884, %2901
  %2909 = phi i32 [ %2896, %2901 ], [ %2885, %2884 ]
  %2910 = phi ptr [ %2895, %2901 ], [ %4, %2884 ]
  %2911 = phi i64 [ %2894, %2901 ], [ 0, %2884 ]
  %2912 = add nsw i32 %2909, 1
  store i32 %2912, ptr %2910, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %7, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2911
  br label %2926

2916:                                             ; preds = %2893
  %2917 = icmp eq i32 %2896, %2899
  br i1 %2917, label %2918, label %2924

2918:                                             ; preds = %2916
  store i32 0, ptr %2895, align 4, !tbaa !5
  %2919 = getelementptr inbounds i32, ptr %8, i64 %2894
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = getelementptr inbounds i32, ptr %6, i64 %2894
  store i32 %2920, ptr %2921, align 4, !tbaa !5
  %2922 = add nuw nsw i64 %2894, 1
  %2923 = icmp eq i64 %2922, %2797
  br i1 %2923, label %2931, label %2893, !llvm.loop !1037

2924:                                             ; preds = %2889, %2916
  %2925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2926:                                             ; preds = %2902, %2908
  %2927 = phi ptr [ %2915, %2908 ], [ %2895, %2902 ]
  %2928 = phi i32 [ %2914, %2908 ], [ 1, %2902 ]
  %2929 = load i32, ptr %2927, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, %2928
  store i32 %2930, ptr %2927, align 4, !tbaa !5
  br label %2931

2931:                                             ; preds = %2918, %2926, %2891, %2873
  %2932 = icmp eq i32 %2883, %5
  br i1 %2932, label %5501, label %2800, !llvm.loop !1038

2933:                                             ; preds = %2783, %3069
  %2934 = phi i32 [ 0, %2783 ], [ %3018, %3069 ]
  %2935 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %2936, label %3005

2936:                                             ; preds = %2933, %2995
  %2937 = phi i32 [ %3004, %2995 ], [ 0, %2933 ]
  %2938 = phi i64 [ %2946, %2995 ], [ %2788, %2933 ]
  %2939 = phi i64 [ %3003, %2995 ], [ %2787, %2933 ]
  %2940 = phi i32 [ %3001, %2995 ], [ %2935, %2933 ]
  %2941 = sub i32 %2786, %2937
  %2942 = tail call i32 @llvm.smin.i32(i32 %2941, i32 0)
  %2943 = sub i32 %2941, %2942
  %2944 = zext i32 %2943 to i64
  %2945 = add nuw nsw i64 %2944, 1
  %2946 = add nsw i64 %2938, -1
  %2947 = icmp ult i32 %2943, 31
  br i1 %2947, label %2983, label %2948

2948:                                             ; preds = %2936
  %2949 = and i64 %2945, 8589934560
  %2950 = sub i64 %2939, %2949
  br label %2951

2951:                                             ; preds = %2951, %2948
  %2952 = phi i64 [ 0, %2948 ], [ %2975, %2951 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2971, %2951 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2972, %2951 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2973, %2951 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2974, %2951 ]
  %2957 = sub i64 %2939, %2952
  %2958 = getelementptr inbounds i32, ptr %11, i64 %2957
  %2959 = getelementptr inbounds i32, ptr %2958, i64 -7
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2958, i64 -15
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2958, i64 -23
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !5
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = getelementptr inbounds i32, ptr %2958, i64 -31
  %2969 = load <8 x i32>, ptr %2968, align 4, !tbaa !5
  %2970 = shufflevector <8 x i32> %2969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2971 = mul <8 x i32> %2961, %2953
  %2972 = mul <8 x i32> %2964, %2954
  %2973 = mul <8 x i32> %2967, %2955
  %2974 = mul <8 x i32> %2970, %2956
  %2975 = add nuw i64 %2952, 32
  %2976 = icmp eq i64 %2975, %2949
  br i1 %2976, label %2977, label %2951, !llvm.loop !1039

2977:                                             ; preds = %2951
  %2978 = mul <8 x i32> %2972, %2971
  %2979 = mul <8 x i32> %2973, %2978
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2980)
  %2982 = icmp eq i64 %2945, %2949
  br i1 %2982, label %2995, label %2983

2983:                                             ; preds = %2936, %2977
  %2984 = phi i64 [ %2939, %2936 ], [ %2950, %2977 ]
  %2985 = phi i32 [ 1, %2936 ], [ %2981, %2977 ]
  br label %2986

2986:                                             ; preds = %2983, %2986
  %2987 = phi i64 [ %2992, %2986 ], [ %2984, %2983 ]
  %2988 = phi i32 [ %2991, %2986 ], [ %2985, %2983 ]
  %2989 = getelementptr inbounds i32, ptr %11, i64 %2987
  %2990 = load i32, ptr %2989, align 4, !tbaa !5
  %2991 = mul nsw i32 %2990, %2988
  %2992 = add nsw i64 %2987, -1
  %2993 = trunc i64 %2987 to i32
  %2994 = icmp sgt i32 %2993, 0
  br i1 %2994, label %2986, label %2995, !llvm.loop !1040

2995:                                             ; preds = %2986, %2977
  %2996 = phi i32 [ %2981, %2977 ], [ %2991, %2986 ]
  %2997 = and i64 %2946, 4294967295
  %2998 = getelementptr inbounds i32, ptr %6, i64 %2997
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = mul nsw i32 %2999, %2996
  %3001 = add nsw i32 %3000, %2940
  %3002 = icmp sgt i64 %2938, 2
  %3003 = add nsw i64 %2939, -1
  %3004 = add i32 %2937, 1
  br i1 %3002, label %2936, label %3005, !llvm.loop !1041

3005:                                             ; preds = %2995, %2933
  %3006 = phi i32 [ %2935, %2933 ], [ %3001, %2995 ]
  %3007 = icmp slt i32 %3006, %5
  br i1 %3007, label %3010, label %3008

3008:                                             ; preds = %3005
  %3009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3010:                                             ; preds = %3005
  %3011 = sext i32 %3006 to i64
  %3012 = getelementptr inbounds double, ptr %2463, i64 %3011
  %3013 = load double, ptr %3012, align 8, !tbaa !18
  %3014 = fptosi double %3013 to i32
  %3015 = load i32, ptr %2465, align 4, !tbaa !5
  %3016 = tail call i32 @llvm.abs.i32(i32 %3014, i1 true)
  %3017 = add nsw i32 %3016, %3015
  store i32 %3017, ptr %2465, align 4, !tbaa !5
  %3018 = add nuw nsw i32 %2934, 1
  br i1 %2785, label %3019, label %3069

3019:                                             ; preds = %3010
  %3020 = load i32, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %12, align 4, !tbaa !5
  %3022 = add nsw i32 %3021, -1
  %3023 = icmp slt i32 %3020, %3022
  br i1 %3023, label %3046, label %3024

3024:                                             ; preds = %3019
  %3025 = icmp eq i32 %3020, %3022
  br i1 %3025, label %3026, label %3062

3026:                                             ; preds = %3024
  store i32 0, ptr %4, align 4, !tbaa !5
  %3027 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3027, ptr %6, align 4, !tbaa !5
  br i1 %2790, label %3069, label %3028

3028:                                             ; preds = %3026, %3056
  %3029 = phi i64 [ %3060, %3056 ], [ 1, %3026 ]
  %3030 = getelementptr inbounds i32, ptr %4, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !5
  %3032 = getelementptr inbounds i32, ptr %12, i64 %3029
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3031, %3034
  br i1 %3035, label %3036, label %3054

3036:                                             ; preds = %3028
  br i1 %3023, label %3046, label %3037

3037:                                             ; preds = %3036
  %3038 = shl i64 %3029, 32
  %3039 = add i64 %3038, -4294967296
  %3040 = ashr exact i64 %3039, 32
  %3041 = getelementptr inbounds i32, ptr %7, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = add nsw i32 %3044, %3042
  store i32 %3045, ptr %3043, align 4, !tbaa !5
  br label %3064

3046:                                             ; preds = %3019, %3036
  %3047 = phi i32 [ %3031, %3036 ], [ %3020, %3019 ]
  %3048 = phi ptr [ %3030, %3036 ], [ %4, %3019 ]
  %3049 = phi i64 [ %3029, %3036 ], [ 0, %3019 ]
  %3050 = add nsw i32 %3047, 1
  store i32 %3050, ptr %3048, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3049
  br label %3064

3054:                                             ; preds = %3028
  %3055 = icmp eq i32 %3031, %3034
  br i1 %3055, label %3056, label %3062

3056:                                             ; preds = %3054
  store i32 0, ptr %3030, align 4, !tbaa !5
  %3057 = getelementptr inbounds i32, ptr %8, i64 %3029
  %3058 = load i32, ptr %3057, align 4, !tbaa !5
  %3059 = getelementptr inbounds i32, ptr %6, i64 %3029
  store i32 %3058, ptr %3059, align 4, !tbaa !5
  %3060 = add nuw nsw i64 %3029, 1
  %3061 = icmp eq i64 %3060, %2788
  br i1 %3061, label %3069, label %3028, !llvm.loop !1042

3062:                                             ; preds = %3024, %3054
  %3063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3064:                                             ; preds = %3037, %3046
  %3065 = phi ptr [ %3053, %3046 ], [ %3030, %3037 ]
  %3066 = phi i32 [ %3052, %3046 ], [ 1, %3037 ]
  %3067 = load i32, ptr %3065, align 4, !tbaa !5
  %3068 = add nsw i32 %3067, %3066
  store i32 %3068, ptr %3065, align 4, !tbaa !5
  br label %3069

3069:                                             ; preds = %3056, %3064, %3026, %3010
  %3070 = icmp eq i32 %3018, %5
  br i1 %3070, label %5501, label %2933, !llvm.loop !1043

3071:                                             ; preds = %2471
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

3073:                                             ; preds = %18
  %3074 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !9
  %3076 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3077 = load ptr, ptr %3076, align 8, !tbaa !9
  store i64 0, ptr %3077, align 8, !tbaa !120
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %3079, label %3083

3079:                                             ; preds = %3073
  %3080 = load double, ptr %3075, align 8, !tbaa !18
  %3081 = fptosi double %3080 to i64
  %3082 = tail call i64 @llvm.abs.i64(i64 %3081, i1 true)
  store i64 %3082, ptr %3077, align 8, !tbaa !120
  br label %5501

3083:                                             ; preds = %3073
  switch i32 %1, label %3683 [
    i32 1, label %3084
    i32 0, label %3389
  ]

3084:                                             ; preds = %3083
  %3085 = getelementptr inbounds i32, ptr %3, i64 %19
  %3086 = load i32, ptr %3085, align 4, !tbaa !5
  %3087 = icmp eq i32 %3086, 0
  %3088 = icmp sgt i32 %5, 0
  br i1 %3087, label %3098, label %3089

3089:                                             ; preds = %3084
  br i1 %3088, label %3090, label %5501

3090:                                             ; preds = %3089
  %3091 = icmp sgt i32 %13, 1
  %3092 = icmp sgt i32 %13, 0
  %3093 = add i32 %13, -2
  %3094 = zext i32 %3093 to i64
  %3095 = zext i32 %13 to i64
  %3096 = add nuw i32 %5, 1
  %3097 = icmp eq i32 %13, 1
  br label %3246

3098:                                             ; preds = %3084
  br i1 %3088, label %3099, label %5501

3099:                                             ; preds = %3098
  %3100 = icmp sgt i32 %13, 1
  %3101 = icmp sgt i32 %13, 0
  %3102 = add i32 %13, -2
  %3103 = zext i32 %3102 to i64
  %3104 = zext i32 %13 to i64
  %3105 = add nuw i32 %5, 1
  %3106 = icmp eq i32 %13, 1
  br label %3107

3107:                                             ; preds = %3099, %3244
  %3108 = phi i64 [ 0, %3099 ], [ %3194, %3244 ]
  %3109 = phi i32 [ 0, %3099 ], [ %3196, %3244 ]
  %3110 = phi double [ 0.000000e+00, %3099 ], [ %3195, %3244 ]
  %3111 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3112, label %3181

3112:                                             ; preds = %3107, %3171
  %3113 = phi i32 [ %3180, %3171 ], [ 0, %3107 ]
  %3114 = phi i64 [ %3122, %3171 ], [ %3104, %3107 ]
  %3115 = phi i64 [ %3179, %3171 ], [ %3103, %3107 ]
  %3116 = phi i32 [ %3177, %3171 ], [ %3111, %3107 ]
  %3117 = sub i32 %3102, %3113
  %3118 = tail call i32 @llvm.smin.i32(i32 %3117, i32 0)
  %3119 = sub i32 %3117, %3118
  %3120 = zext i32 %3119 to i64
  %3121 = add nuw nsw i64 %3120, 1
  %3122 = add nsw i64 %3114, -1
  %3123 = icmp ult i32 %3119, 31
  br i1 %3123, label %3159, label %3124

3124:                                             ; preds = %3112
  %3125 = and i64 %3121, 8589934560
  %3126 = sub i64 %3115, %3125
  br label %3127

3127:                                             ; preds = %3127, %3124
  %3128 = phi i64 [ 0, %3124 ], [ %3151, %3127 ]
  %3129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3147, %3127 ]
  %3130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3148, %3127 ]
  %3131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3149, %3127 ]
  %3132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3150, %3127 ]
  %3133 = sub i64 %3115, %3128
  %3134 = getelementptr inbounds i32, ptr %9, i64 %3133
  %3135 = getelementptr inbounds i32, ptr %3134, i64 -7
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3134, i64 -15
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = getelementptr inbounds i32, ptr %3134, i64 -23
  %3142 = load <8 x i32>, ptr %3141, align 4, !tbaa !5
  %3143 = shufflevector <8 x i32> %3142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3144 = getelementptr inbounds i32, ptr %3134, i64 -31
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !5
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = mul <8 x i32> %3137, %3129
  %3148 = mul <8 x i32> %3140, %3130
  %3149 = mul <8 x i32> %3143, %3131
  %3150 = mul <8 x i32> %3146, %3132
  %3151 = add nuw i64 %3128, 32
  %3152 = icmp eq i64 %3151, %3125
  br i1 %3152, label %3153, label %3127, !llvm.loop !1044

3153:                                             ; preds = %3127
  %3154 = mul <8 x i32> %3148, %3147
  %3155 = mul <8 x i32> %3149, %3154
  %3156 = mul <8 x i32> %3150, %3155
  %3157 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3156)
  %3158 = icmp eq i64 %3121, %3125
  br i1 %3158, label %3171, label %3159

3159:                                             ; preds = %3112, %3153
  %3160 = phi i64 [ %3115, %3112 ], [ %3126, %3153 ]
  %3161 = phi i32 [ 1, %3112 ], [ %3157, %3153 ]
  br label %3162

3162:                                             ; preds = %3159, %3162
  %3163 = phi i64 [ %3168, %3162 ], [ %3160, %3159 ]
  %3164 = phi i32 [ %3167, %3162 ], [ %3161, %3159 ]
  %3165 = getelementptr inbounds i32, ptr %9, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = mul nsw i32 %3166, %3164
  %3168 = add nsw i64 %3163, -1
  %3169 = trunc i64 %3163 to i32
  %3170 = icmp sgt i32 %3169, 0
  br i1 %3170, label %3162, label %3171, !llvm.loop !1045

3171:                                             ; preds = %3162, %3153
  %3172 = phi i32 [ %3157, %3153 ], [ %3167, %3162 ]
  %3173 = and i64 %3122, 4294967295
  %3174 = getelementptr inbounds i32, ptr %6, i64 %3173
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = mul nsw i32 %3175, %3172
  %3177 = add nsw i32 %3176, %3116
  %3178 = icmp sgt i64 %3114, 2
  %3179 = add nsw i64 %3115, -1
  %3180 = add i32 %3113, 1
  br i1 %3178, label %3112, label %3181, !llvm.loop !1046

3181:                                             ; preds = %3171, %3107
  %3182 = phi i32 [ %3111, %3107 ], [ %3177, %3171 ]
  %3183 = sext i32 %3182 to i64
  %3184 = getelementptr inbounds double, ptr %2, i64 %3183
  %3185 = load double, ptr %3184, align 8, !tbaa !18
  %3186 = getelementptr inbounds double, ptr %3075, i64 %3183
  %3187 = load double, ptr %3186, align 8, !tbaa !18
  %3188 = fptosi double %3187 to i64
  %3189 = sitofp i64 %3108 to double
  %3190 = sitofp i64 %3188 to double
  %3191 = fmul fast double %3185, %3190
  %3192 = tail call fast double @llvm.fabs.f64(double %3191)
  %3193 = fadd fast double %3192, %3189
  %3194 = fptosi double %3193 to i64
  %3195 = fadd fast double %3185, %3110
  %3196 = add nuw nsw i32 %3109, 1
  br i1 %3101, label %3197, label %3244

3197:                                             ; preds = %3181
  %3198 = load i32, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %12, align 4, !tbaa !5
  %3200 = add nsw i32 %3199, -1
  %3201 = icmp slt i32 %3198, %3200
  br i1 %3201, label %3221, label %3202

3202:                                             ; preds = %3197
  %3203 = icmp eq i32 %3198, %3200
  br i1 %3203, label %3204, label %3237

3204:                                             ; preds = %3202
  store i32 0, ptr %4, align 4, !tbaa !5
  %3205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3205, ptr %6, align 4, !tbaa !5
  br i1 %3106, label %3244, label %3206

3206:                                             ; preds = %3204, %3231
  %3207 = phi i64 [ %3235, %3231 ], [ 1, %3204 ]
  %3208 = getelementptr inbounds i32, ptr %4, i64 %3207
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %12, i64 %3207
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, -1
  %3213 = icmp slt i32 %3209, %3212
  br i1 %3213, label %3214, label %3229

3214:                                             ; preds = %3206
  br i1 %3201, label %3221, label %3215

3215:                                             ; preds = %3214
  %3216 = getelementptr inbounds i32, ptr %7, i64 %3207
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %6, i64 %3207
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, %3217
  store i32 %3220, ptr %3218, align 4, !tbaa !5
  br label %3239

3221:                                             ; preds = %3197, %3214
  %3222 = phi i32 [ %3209, %3214 ], [ %3198, %3197 ]
  %3223 = phi ptr [ %3208, %3214 ], [ %4, %3197 ]
  %3224 = phi i64 [ %3207, %3214 ], [ 0, %3197 ]
  %3225 = add nsw i32 %3222, 1
  store i32 %3225, ptr %3223, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %7, i64 %3224
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3224
  br label %3239

3229:                                             ; preds = %3206
  %3230 = icmp eq i32 %3209, %3212
  br i1 %3230, label %3231, label %3237

3231:                                             ; preds = %3229
  store i32 0, ptr %3208, align 4, !tbaa !5
  %3232 = getelementptr inbounds i32, ptr %8, i64 %3207
  %3233 = load i32, ptr %3232, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %6, i64 %3207
  store i32 %3233, ptr %3234, align 4, !tbaa !5
  %3235 = add nuw nsw i64 %3207, 1
  %3236 = icmp eq i64 %3235, %3104
  br i1 %3236, label %3244, label %3206, !llvm.loop !1047

3237:                                             ; preds = %3202, %3229
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  %3238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3239:                                             ; preds = %3215, %3221
  %3240 = phi ptr [ %3228, %3221 ], [ %3208, %3215 ]
  %3241 = phi i32 [ %3227, %3221 ], [ 1, %3215 ]
  %3242 = load i32, ptr %3240, align 4, !tbaa !5
  %3243 = add nsw i32 %3242, %3241
  store i32 %3243, ptr %3240, align 4, !tbaa !5
  br label %3244

3244:                                             ; preds = %3231, %3239, %3204, %3181
  %3245 = icmp eq i32 %3196, %5
  br i1 %3245, label %5497, label %3107, !llvm.loop !1048

3246:                                             ; preds = %3090, %3387
  %3247 = phi i64 [ 0, %3090 ], [ %3335, %3387 ]
  %3248 = phi i32 [ 0, %3090 ], [ %3336, %3387 ]
  %3249 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3250, label %3319

3250:                                             ; preds = %3246, %3309
  %3251 = phi i32 [ %3318, %3309 ], [ 0, %3246 ]
  %3252 = phi i64 [ %3260, %3309 ], [ %3095, %3246 ]
  %3253 = phi i64 [ %3317, %3309 ], [ %3094, %3246 ]
  %3254 = phi i32 [ %3315, %3309 ], [ %3249, %3246 ]
  %3255 = sub i32 %3093, %3251
  %3256 = tail call i32 @llvm.smin.i32(i32 %3255, i32 0)
  %3257 = sub i32 %3255, %3256
  %3258 = zext i32 %3257 to i64
  %3259 = add nuw nsw i64 %3258, 1
  %3260 = add nsw i64 %3252, -1
  %3261 = icmp ult i32 %3257, 31
  br i1 %3261, label %3297, label %3262

3262:                                             ; preds = %3250
  %3263 = and i64 %3259, 8589934560
  %3264 = sub i64 %3253, %3263
  br label %3265

3265:                                             ; preds = %3265, %3262
  %3266 = phi i64 [ 0, %3262 ], [ %3289, %3265 ]
  %3267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3285, %3265 ]
  %3268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3286, %3265 ]
  %3269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3287, %3265 ]
  %3270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3288, %3265 ]
  %3271 = sub i64 %3253, %3266
  %3272 = getelementptr inbounds i32, ptr %11, i64 %3271
  %3273 = getelementptr inbounds i32, ptr %3272, i64 -7
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3272, i64 -15
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = getelementptr inbounds i32, ptr %3272, i64 -23
  %3280 = load <8 x i32>, ptr %3279, align 4, !tbaa !5
  %3281 = shufflevector <8 x i32> %3280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3282 = getelementptr inbounds i32, ptr %3272, i64 -31
  %3283 = load <8 x i32>, ptr %3282, align 4, !tbaa !5
  %3284 = shufflevector <8 x i32> %3283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3285 = mul <8 x i32> %3275, %3267
  %3286 = mul <8 x i32> %3278, %3268
  %3287 = mul <8 x i32> %3281, %3269
  %3288 = mul <8 x i32> %3284, %3270
  %3289 = add nuw i64 %3266, 32
  %3290 = icmp eq i64 %3289, %3263
  br i1 %3290, label %3291, label %3265, !llvm.loop !1049

3291:                                             ; preds = %3265
  %3292 = mul <8 x i32> %3286, %3285
  %3293 = mul <8 x i32> %3287, %3292
  %3294 = mul <8 x i32> %3288, %3293
  %3295 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3294)
  %3296 = icmp eq i64 %3259, %3263
  br i1 %3296, label %3309, label %3297

3297:                                             ; preds = %3250, %3291
  %3298 = phi i64 [ %3253, %3250 ], [ %3264, %3291 ]
  %3299 = phi i32 [ 1, %3250 ], [ %3295, %3291 ]
  br label %3300

3300:                                             ; preds = %3297, %3300
  %3301 = phi i64 [ %3306, %3300 ], [ %3298, %3297 ]
  %3302 = phi i32 [ %3305, %3300 ], [ %3299, %3297 ]
  %3303 = getelementptr inbounds i32, ptr %11, i64 %3301
  %3304 = load i32, ptr %3303, align 4, !tbaa !5
  %3305 = mul nsw i32 %3304, %3302
  %3306 = add nsw i64 %3301, -1
  %3307 = trunc i64 %3301 to i32
  %3308 = icmp sgt i32 %3307, 0
  br i1 %3308, label %3300, label %3309, !llvm.loop !1050

3309:                                             ; preds = %3300, %3291
  %3310 = phi i32 [ %3295, %3291 ], [ %3305, %3300 ]
  %3311 = and i64 %3260, 4294967295
  %3312 = getelementptr inbounds i32, ptr %6, i64 %3311
  %3313 = load i32, ptr %3312, align 4, !tbaa !5
  %3314 = mul nsw i32 %3313, %3310
  %3315 = add nsw i32 %3314, %3254
  %3316 = icmp sgt i64 %3252, 2
  %3317 = add nsw i64 %3253, -1
  %3318 = add i32 %3251, 1
  br i1 %3316, label %3250, label %3319, !llvm.loop !1051

3319:                                             ; preds = %3309, %3246
  %3320 = phi i32 [ %3249, %3246 ], [ %3315, %3309 ]
  %3321 = icmp slt i32 %3320, %5
  br i1 %3321, label %3324, label %3322

3322:                                             ; preds = %3319
  %3323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3324:                                             ; preds = %3319
  %3325 = sext i32 %3320 to i64
  %3326 = getelementptr inbounds double, ptr %3075, i64 %3325
  %3327 = load double, ptr %3326, align 8, !tbaa !18
  %3328 = fptosi double %3327 to i64
  %3329 = sitofp i64 %3247 to double
  %3330 = sitofp i64 %3328 to double
  %3331 = icmp slt i64 %3328, 0
  %3332 = fneg fast double %3330
  %3333 = select fast i1 %3331, double %3332, double %3330
  %3334 = fadd fast double %3333, %3329
  %3335 = fptosi double %3334 to i64
  store i64 %3335, ptr %3077, align 8, !tbaa !120
  %3336 = add nuw nsw i32 %3248, 1
  br i1 %3092, label %3337, label %3387

3337:                                             ; preds = %3324
  %3338 = load i32, ptr %4, align 4, !tbaa !5
  %3339 = load i32, ptr %12, align 4, !tbaa !5
  %3340 = add nsw i32 %3339, -1
  %3341 = icmp slt i32 %3338, %3340
  br i1 %3341, label %3364, label %3342

3342:                                             ; preds = %3337
  %3343 = icmp eq i32 %3338, %3340
  br i1 %3343, label %3344, label %3380

3344:                                             ; preds = %3342
  store i32 0, ptr %4, align 4, !tbaa !5
  %3345 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3345, ptr %6, align 4, !tbaa !5
  br i1 %3097, label %3387, label %3346

3346:                                             ; preds = %3344, %3374
  %3347 = phi i64 [ %3378, %3374 ], [ 1, %3344 ]
  %3348 = getelementptr inbounds i32, ptr %4, i64 %3347
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = getelementptr inbounds i32, ptr %12, i64 %3347
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = add nsw i32 %3351, -1
  %3353 = icmp slt i32 %3349, %3352
  br i1 %3353, label %3354, label %3372

3354:                                             ; preds = %3346
  br i1 %3341, label %3364, label %3355

3355:                                             ; preds = %3354
  %3356 = shl i64 %3347, 32
  %3357 = add i64 %3356, -4294967296
  %3358 = ashr exact i64 %3357, 32
  %3359 = getelementptr inbounds i32, ptr %7, i64 %3358
  %3360 = load i32, ptr %3359, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3347
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = add nsw i32 %3362, %3360
  store i32 %3363, ptr %3361, align 4, !tbaa !5
  br label %3382

3364:                                             ; preds = %3337, %3354
  %3365 = phi i32 [ %3349, %3354 ], [ %3338, %3337 ]
  %3366 = phi ptr [ %3348, %3354 ], [ %4, %3337 ]
  %3367 = phi i64 [ %3347, %3354 ], [ 0, %3337 ]
  %3368 = add nsw i32 %3365, 1
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3367
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3367
  br label %3382

3372:                                             ; preds = %3346
  %3373 = icmp eq i32 %3349, %3352
  br i1 %3373, label %3374, label %3380

3374:                                             ; preds = %3372
  store i32 0, ptr %3348, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %8, i64 %3347
  %3376 = load i32, ptr %3375, align 4, !tbaa !5
  %3377 = getelementptr inbounds i32, ptr %6, i64 %3347
  store i32 %3376, ptr %3377, align 4, !tbaa !5
  %3378 = add nuw nsw i64 %3347, 1
  %3379 = icmp eq i64 %3378, %3095
  br i1 %3379, label %3387, label %3346, !llvm.loop !1052

3380:                                             ; preds = %3342, %3372
  %3381 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3382:                                             ; preds = %3355, %3364
  %3383 = phi ptr [ %3371, %3364 ], [ %3348, %3355 ]
  %3384 = phi i32 [ %3370, %3364 ], [ 1, %3355 ]
  %3385 = load i32, ptr %3383, align 4, !tbaa !5
  %3386 = add nsw i32 %3385, %3384
  store i32 %3386, ptr %3383, align 4, !tbaa !5
  br label %3387

3387:                                             ; preds = %3374, %3382, %3344, %3324
  %3388 = icmp eq i32 %3336, %5
  br i1 %3388, label %5501, label %3246, !llvm.loop !1053

3389:                                             ; preds = %3083
  %3390 = getelementptr inbounds i32, ptr %3, i64 %19
  %3391 = load i32, ptr %3390, align 4, !tbaa !5
  %3392 = icmp eq i32 %3391, 0
  %3393 = icmp sgt i32 %5, 0
  br i1 %3392, label %3403, label %3394

3394:                                             ; preds = %3389
  br i1 %3393, label %3395, label %5501

3395:                                             ; preds = %3394
  %3396 = icmp sgt i32 %13, 1
  %3397 = icmp sgt i32 %13, 0
  %3398 = add i32 %13, -2
  %3399 = zext i32 %3398 to i64
  %3400 = zext i32 %13 to i64
  %3401 = add nuw i32 %5, 1
  %3402 = icmp eq i32 %13, 1
  br label %3545

3403:                                             ; preds = %3389
  br i1 %3393, label %3404, label %5501

3404:                                             ; preds = %3403
  %3405 = icmp sgt i32 %13, 1
  %3406 = icmp sgt i32 %13, 0
  %3407 = add i32 %13, -2
  %3408 = zext i32 %3407 to i64
  %3409 = zext i32 %13 to i64
  %3410 = add nuw i32 %5, 1
  %3411 = icmp eq i32 %13, 1
  br label %3412

3412:                                             ; preds = %3404, %3543
  %3413 = phi i64 [ 0, %3404 ], [ %3493, %3543 ]
  %3414 = phi i32 [ 0, %3404 ], [ %3495, %3543 ]
  %3415 = phi double [ 0.000000e+00, %3404 ], [ %3494, %3543 ]
  %3416 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3405, label %3417, label %3486

3417:                                             ; preds = %3412, %3476
  %3418 = phi i32 [ %3485, %3476 ], [ 0, %3412 ]
  %3419 = phi i64 [ %3427, %3476 ], [ %3409, %3412 ]
  %3420 = phi i64 [ %3484, %3476 ], [ %3408, %3412 ]
  %3421 = phi i32 [ %3482, %3476 ], [ %3416, %3412 ]
  %3422 = sub i32 %3407, %3418
  %3423 = tail call i32 @llvm.smin.i32(i32 %3422, i32 0)
  %3424 = sub i32 %3422, %3423
  %3425 = zext i32 %3424 to i64
  %3426 = add nuw nsw i64 %3425, 1
  %3427 = add nsw i64 %3419, -1
  %3428 = icmp ult i32 %3424, 31
  br i1 %3428, label %3464, label %3429

3429:                                             ; preds = %3417
  %3430 = and i64 %3426, 8589934560
  %3431 = sub i64 %3420, %3430
  br label %3432

3432:                                             ; preds = %3432, %3429
  %3433 = phi i64 [ 0, %3429 ], [ %3456, %3432 ]
  %3434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3452, %3432 ]
  %3435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3453, %3432 ]
  %3436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3454, %3432 ]
  %3437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3455, %3432 ]
  %3438 = sub i64 %3420, %3433
  %3439 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3440 = getelementptr inbounds i32, ptr %3439, i64 -7
  %3441 = load <8 x i32>, ptr %3440, align 4, !tbaa !5
  %3442 = shufflevector <8 x i32> %3441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3443 = getelementptr inbounds i32, ptr %3439, i64 -15
  %3444 = load <8 x i32>, ptr %3443, align 4, !tbaa !5
  %3445 = shufflevector <8 x i32> %3444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3446 = getelementptr inbounds i32, ptr %3439, i64 -23
  %3447 = load <8 x i32>, ptr %3446, align 4, !tbaa !5
  %3448 = shufflevector <8 x i32> %3447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3449 = getelementptr inbounds i32, ptr %3439, i64 -31
  %3450 = load <8 x i32>, ptr %3449, align 4, !tbaa !5
  %3451 = shufflevector <8 x i32> %3450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3452 = mul <8 x i32> %3442, %3434
  %3453 = mul <8 x i32> %3445, %3435
  %3454 = mul <8 x i32> %3448, %3436
  %3455 = mul <8 x i32> %3451, %3437
  %3456 = add nuw i64 %3433, 32
  %3457 = icmp eq i64 %3456, %3430
  br i1 %3457, label %3458, label %3432, !llvm.loop !1054

3458:                                             ; preds = %3432
  %3459 = mul <8 x i32> %3453, %3452
  %3460 = mul <8 x i32> %3454, %3459
  %3461 = mul <8 x i32> %3455, %3460
  %3462 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3461)
  %3463 = icmp eq i64 %3426, %3430
  br i1 %3463, label %3476, label %3464

3464:                                             ; preds = %3417, %3458
  %3465 = phi i64 [ %3420, %3417 ], [ %3431, %3458 ]
  %3466 = phi i32 [ 1, %3417 ], [ %3462, %3458 ]
  br label %3467

3467:                                             ; preds = %3464, %3467
  %3468 = phi i64 [ %3473, %3467 ], [ %3465, %3464 ]
  %3469 = phi i32 [ %3472, %3467 ], [ %3466, %3464 ]
  %3470 = getelementptr inbounds i32, ptr %9, i64 %3468
  %3471 = load i32, ptr %3470, align 4, !tbaa !5
  %3472 = mul nsw i32 %3471, %3469
  %3473 = add nsw i64 %3468, -1
  %3474 = trunc i64 %3468 to i32
  %3475 = icmp sgt i32 %3474, 0
  br i1 %3475, label %3467, label %3476, !llvm.loop !1055

3476:                                             ; preds = %3467, %3458
  %3477 = phi i32 [ %3462, %3458 ], [ %3472, %3467 ]
  %3478 = and i64 %3427, 4294967295
  %3479 = getelementptr inbounds i32, ptr %6, i64 %3478
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = mul nsw i32 %3480, %3477
  %3482 = add nsw i32 %3481, %3421
  %3483 = icmp sgt i64 %3419, 2
  %3484 = add nsw i64 %3420, -1
  %3485 = add i32 %3418, 1
  br i1 %3483, label %3417, label %3486, !llvm.loop !1056

3486:                                             ; preds = %3476, %3412
  %3487 = phi i32 [ %3416, %3412 ], [ %3482, %3476 ]
  %3488 = sext i32 %3487 to i64
  %3489 = getelementptr inbounds double, ptr %3075, i64 %3488
  %3490 = load double, ptr %3489, align 8, !tbaa !18
  %3491 = fptosi double %3490 to i64
  %3492 = tail call i64 @llvm.abs.i64(i64 %3491, i1 true)
  %3493 = add nuw nsw i64 %3492, %3413
  %3494 = fadd fast double %3415, 1.000000e+00
  %3495 = add nuw nsw i32 %3414, 1
  br i1 %3406, label %3496, label %3543

3496:                                             ; preds = %3486
  %3497 = load i32, ptr %4, align 4, !tbaa !5
  %3498 = load i32, ptr %12, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, -1
  %3500 = icmp slt i32 %3497, %3499
  br i1 %3500, label %3520, label %3501

3501:                                             ; preds = %3496
  %3502 = icmp eq i32 %3497, %3499
  br i1 %3502, label %3503, label %3536

3503:                                             ; preds = %3501
  store i32 0, ptr %4, align 4, !tbaa !5
  %3504 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3504, ptr %6, align 4, !tbaa !5
  br i1 %3411, label %3543, label %3505

3505:                                             ; preds = %3503, %3530
  %3506 = phi i64 [ %3534, %3530 ], [ 1, %3503 ]
  %3507 = getelementptr inbounds i32, ptr %4, i64 %3506
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %12, i64 %3506
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, -1
  %3512 = icmp slt i32 %3508, %3511
  br i1 %3512, label %3513, label %3528

3513:                                             ; preds = %3505
  br i1 %3500, label %3520, label %3514

3514:                                             ; preds = %3513
  %3515 = getelementptr inbounds i32, ptr %7, i64 %3506
  %3516 = load i32, ptr %3515, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %6, i64 %3506
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = add nsw i32 %3518, %3516
  store i32 %3519, ptr %3517, align 4, !tbaa !5
  br label %3538

3520:                                             ; preds = %3496, %3513
  %3521 = phi i32 [ %3508, %3513 ], [ %3497, %3496 ]
  %3522 = phi ptr [ %3507, %3513 ], [ %4, %3496 ]
  %3523 = phi i64 [ %3506, %3513 ], [ 0, %3496 ]
  %3524 = add nsw i32 %3521, 1
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %7, i64 %3523
  %3526 = load i32, ptr %3525, align 4, !tbaa !5
  %3527 = getelementptr inbounds i32, ptr %6, i64 %3523
  br label %3538

3528:                                             ; preds = %3505
  %3529 = icmp eq i32 %3508, %3511
  br i1 %3529, label %3530, label %3536

3530:                                             ; preds = %3528
  store i32 0, ptr %3507, align 4, !tbaa !5
  %3531 = getelementptr inbounds i32, ptr %8, i64 %3506
  %3532 = load i32, ptr %3531, align 4, !tbaa !5
  %3533 = getelementptr inbounds i32, ptr %6, i64 %3506
  store i32 %3532, ptr %3533, align 4, !tbaa !5
  %3534 = add nuw nsw i64 %3506, 1
  %3535 = icmp eq i64 %3534, %3409
  br i1 %3535, label %3543, label %3505, !llvm.loop !1057

3536:                                             ; preds = %3501, %3528
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  %3537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3538:                                             ; preds = %3514, %3520
  %3539 = phi ptr [ %3527, %3520 ], [ %3507, %3514 ]
  %3540 = phi i32 [ %3526, %3520 ], [ 1, %3514 ]
  %3541 = load i32, ptr %3539, align 4, !tbaa !5
  %3542 = add nsw i32 %3541, %3540
  store i32 %3542, ptr %3539, align 4, !tbaa !5
  br label %3543

3543:                                             ; preds = %3530, %3538, %3503, %3486
  %3544 = icmp eq i32 %3495, %5
  br i1 %3544, label %5498, label %3412, !llvm.loop !1058

3545:                                             ; preds = %3395, %3681
  %3546 = phi i64 [ 0, %3395 ], [ %3629, %3681 ]
  %3547 = phi i32 [ 0, %3395 ], [ %3630, %3681 ]
  %3548 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3396, label %3549, label %3618

3549:                                             ; preds = %3545, %3608
  %3550 = phi i32 [ %3617, %3608 ], [ 0, %3545 ]
  %3551 = phi i64 [ %3559, %3608 ], [ %3400, %3545 ]
  %3552 = phi i64 [ %3616, %3608 ], [ %3399, %3545 ]
  %3553 = phi i32 [ %3614, %3608 ], [ %3548, %3545 ]
  %3554 = sub i32 %3398, %3550
  %3555 = tail call i32 @llvm.smin.i32(i32 %3554, i32 0)
  %3556 = sub i32 %3554, %3555
  %3557 = zext i32 %3556 to i64
  %3558 = add nuw nsw i64 %3557, 1
  %3559 = add nsw i64 %3551, -1
  %3560 = icmp ult i32 %3556, 31
  br i1 %3560, label %3596, label %3561

3561:                                             ; preds = %3549
  %3562 = and i64 %3558, 8589934560
  %3563 = sub i64 %3552, %3562
  br label %3564

3564:                                             ; preds = %3564, %3561
  %3565 = phi i64 [ 0, %3561 ], [ %3588, %3564 ]
  %3566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3584, %3564 ]
  %3567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3585, %3564 ]
  %3568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3586, %3564 ]
  %3569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3587, %3564 ]
  %3570 = sub i64 %3552, %3565
  %3571 = getelementptr inbounds i32, ptr %11, i64 %3570
  %3572 = getelementptr inbounds i32, ptr %3571, i64 -7
  %3573 = load <8 x i32>, ptr %3572, align 4, !tbaa !5
  %3574 = shufflevector <8 x i32> %3573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3575 = getelementptr inbounds i32, ptr %3571, i64 -15
  %3576 = load <8 x i32>, ptr %3575, align 4, !tbaa !5
  %3577 = shufflevector <8 x i32> %3576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3578 = getelementptr inbounds i32, ptr %3571, i64 -23
  %3579 = load <8 x i32>, ptr %3578, align 4, !tbaa !5
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3581 = getelementptr inbounds i32, ptr %3571, i64 -31
  %3582 = load <8 x i32>, ptr %3581, align 4, !tbaa !5
  %3583 = shufflevector <8 x i32> %3582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3584 = mul <8 x i32> %3574, %3566
  %3585 = mul <8 x i32> %3577, %3567
  %3586 = mul <8 x i32> %3580, %3568
  %3587 = mul <8 x i32> %3583, %3569
  %3588 = add nuw i64 %3565, 32
  %3589 = icmp eq i64 %3588, %3562
  br i1 %3589, label %3590, label %3564, !llvm.loop !1059

3590:                                             ; preds = %3564
  %3591 = mul <8 x i32> %3585, %3584
  %3592 = mul <8 x i32> %3586, %3591
  %3593 = mul <8 x i32> %3587, %3592
  %3594 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3593)
  %3595 = icmp eq i64 %3558, %3562
  br i1 %3595, label %3608, label %3596

3596:                                             ; preds = %3549, %3590
  %3597 = phi i64 [ %3552, %3549 ], [ %3563, %3590 ]
  %3598 = phi i32 [ 1, %3549 ], [ %3594, %3590 ]
  br label %3599

3599:                                             ; preds = %3596, %3599
  %3600 = phi i64 [ %3605, %3599 ], [ %3597, %3596 ]
  %3601 = phi i32 [ %3604, %3599 ], [ %3598, %3596 ]
  %3602 = getelementptr inbounds i32, ptr %11, i64 %3600
  %3603 = load i32, ptr %3602, align 4, !tbaa !5
  %3604 = mul nsw i32 %3603, %3601
  %3605 = add nsw i64 %3600, -1
  %3606 = trunc i64 %3600 to i32
  %3607 = icmp sgt i32 %3606, 0
  br i1 %3607, label %3599, label %3608, !llvm.loop !1060

3608:                                             ; preds = %3599, %3590
  %3609 = phi i32 [ %3594, %3590 ], [ %3604, %3599 ]
  %3610 = and i64 %3559, 4294967295
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3610
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = mul nsw i32 %3612, %3609
  %3614 = add nsw i32 %3613, %3553
  %3615 = icmp sgt i64 %3551, 2
  %3616 = add nsw i64 %3552, -1
  %3617 = add i32 %3550, 1
  br i1 %3615, label %3549, label %3618, !llvm.loop !1061

3618:                                             ; preds = %3608, %3545
  %3619 = phi i32 [ %3548, %3545 ], [ %3614, %3608 ]
  %3620 = icmp slt i32 %3619, %5
  br i1 %3620, label %3623, label %3621

3621:                                             ; preds = %3618
  %3622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3623:                                             ; preds = %3618
  %3624 = sext i32 %3619 to i64
  %3625 = getelementptr inbounds double, ptr %3075, i64 %3624
  %3626 = load double, ptr %3625, align 8, !tbaa !18
  %3627 = fptosi double %3626 to i64
  %3628 = tail call i64 @llvm.abs.i64(i64 %3627, i1 true)
  %3629 = add nuw nsw i64 %3628, %3546
  store i64 %3629, ptr %3077, align 8, !tbaa !120
  %3630 = add nuw nsw i32 %3547, 1
  br i1 %3397, label %3631, label %3681

3631:                                             ; preds = %3623
  %3632 = load i32, ptr %4, align 4, !tbaa !5
  %3633 = load i32, ptr %12, align 4, !tbaa !5
  %3634 = add nsw i32 %3633, -1
  %3635 = icmp slt i32 %3632, %3634
  br i1 %3635, label %3658, label %3636

3636:                                             ; preds = %3631
  %3637 = icmp eq i32 %3632, %3634
  br i1 %3637, label %3638, label %3674

3638:                                             ; preds = %3636
  store i32 0, ptr %4, align 4, !tbaa !5
  %3639 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3639, ptr %6, align 4, !tbaa !5
  br i1 %3402, label %3681, label %3640

3640:                                             ; preds = %3638, %3668
  %3641 = phi i64 [ %3672, %3668 ], [ 1, %3638 ]
  %3642 = getelementptr inbounds i32, ptr %4, i64 %3641
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %12, i64 %3641
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = add nsw i32 %3645, -1
  %3647 = icmp slt i32 %3643, %3646
  br i1 %3647, label %3648, label %3666

3648:                                             ; preds = %3640
  br i1 %3635, label %3658, label %3649

3649:                                             ; preds = %3648
  %3650 = shl i64 %3641, 32
  %3651 = add i64 %3650, -4294967296
  %3652 = ashr exact i64 %3651, 32
  %3653 = getelementptr inbounds i32, ptr %7, i64 %3652
  %3654 = load i32, ptr %3653, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %6, i64 %3641
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = add nsw i32 %3656, %3654
  store i32 %3657, ptr %3655, align 4, !tbaa !5
  br label %3676

3658:                                             ; preds = %3631, %3648
  %3659 = phi i32 [ %3643, %3648 ], [ %3632, %3631 ]
  %3660 = phi ptr [ %3642, %3648 ], [ %4, %3631 ]
  %3661 = phi i64 [ %3641, %3648 ], [ 0, %3631 ]
  %3662 = add nsw i32 %3659, 1
  store i32 %3662, ptr %3660, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %7, i64 %3661
  %3664 = load i32, ptr %3663, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %6, i64 %3661
  br label %3676

3666:                                             ; preds = %3640
  %3667 = icmp eq i32 %3643, %3646
  br i1 %3667, label %3668, label %3674

3668:                                             ; preds = %3666
  store i32 0, ptr %3642, align 4, !tbaa !5
  %3669 = getelementptr inbounds i32, ptr %8, i64 %3641
  %3670 = load i32, ptr %3669, align 4, !tbaa !5
  %3671 = getelementptr inbounds i32, ptr %6, i64 %3641
  store i32 %3670, ptr %3671, align 4, !tbaa !5
  %3672 = add nuw nsw i64 %3641, 1
  %3673 = icmp eq i64 %3672, %3400
  br i1 %3673, label %3681, label %3640, !llvm.loop !1062

3674:                                             ; preds = %3636, %3666
  %3675 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3676:                                             ; preds = %3649, %3658
  %3677 = phi ptr [ %3665, %3658 ], [ %3642, %3649 ]
  %3678 = phi i32 [ %3664, %3658 ], [ 1, %3649 ]
  %3679 = load i32, ptr %3677, align 4, !tbaa !5
  %3680 = add nsw i32 %3679, %3678
  store i32 %3680, ptr %3677, align 4, !tbaa !5
  br label %3681

3681:                                             ; preds = %3668, %3676, %3638, %3623
  %3682 = icmp eq i32 %3630, %5
  br i1 %3682, label %5501, label %3545, !llvm.loop !1063

3683:                                             ; preds = %3083
  %3684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

3685:                                             ; preds = %18
  %3686 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3687 = load ptr, ptr %3686, align 8, !tbaa !9
  %3688 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3689 = load ptr, ptr %3688, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3689, align 8, !tbaa !18
  %3690 = icmp eq i32 %13, 0
  br i1 %3690, label %3691, label %3694

3691:                                             ; preds = %3685
  %3692 = load double, ptr %3687, align 8, !tbaa !18
  %3693 = tail call fast double @llvm.fabs.f64(double %3692)
  store double %3693, ptr %3689, align 8, !tbaa !18
  br label %5501

3694:                                             ; preds = %3685
  switch i32 %1, label %4282 [
    i32 1, label %3695
    i32 0, label %3990
  ]

3695:                                             ; preds = %3694
  %3696 = getelementptr inbounds i32, ptr %3, i64 %19
  %3697 = load i32, ptr %3696, align 4, !tbaa !5
  %3698 = icmp eq i32 %3697, 0
  %3699 = icmp sgt i32 %5, 0
  br i1 %3698, label %3709, label %3700

3700:                                             ; preds = %3695
  br i1 %3699, label %3701, label %5501

3701:                                             ; preds = %3700
  %3702 = icmp sgt i32 %13, 1
  %3703 = icmp sgt i32 %13, 0
  %3704 = add i32 %13, -2
  %3705 = zext i32 %3704 to i64
  %3706 = zext i32 %13 to i64
  %3707 = add nuw i32 %5, 1
  %3708 = icmp eq i32 %13, 1
  br label %3853

3709:                                             ; preds = %3695
  br i1 %3699, label %3710, label %5501

3710:                                             ; preds = %3709
  %3711 = icmp sgt i32 %13, 1
  %3712 = icmp sgt i32 %13, 0
  %3713 = add i32 %13, -2
  %3714 = zext i32 %3713 to i64
  %3715 = zext i32 %13 to i64
  %3716 = add nuw i32 %5, 1
  %3717 = icmp eq i32 %13, 1
  br label %3718

3718:                                             ; preds = %3710, %3851
  %3719 = phi double [ 0.000000e+00, %3710 ], [ %3801, %3851 ]
  %3720 = phi i32 [ 0, %3710 ], [ %3803, %3851 ]
  %3721 = phi double [ 0.000000e+00, %3710 ], [ %3802, %3851 ]
  %3722 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3711, label %3723, label %3792

3723:                                             ; preds = %3718, %3782
  %3724 = phi i32 [ %3791, %3782 ], [ 0, %3718 ]
  %3725 = phi i64 [ %3733, %3782 ], [ %3715, %3718 ]
  %3726 = phi i64 [ %3790, %3782 ], [ %3714, %3718 ]
  %3727 = phi i32 [ %3788, %3782 ], [ %3722, %3718 ]
  %3728 = sub i32 %3713, %3724
  %3729 = tail call i32 @llvm.smin.i32(i32 %3728, i32 0)
  %3730 = sub i32 %3728, %3729
  %3731 = zext i32 %3730 to i64
  %3732 = add nuw nsw i64 %3731, 1
  %3733 = add nsw i64 %3725, -1
  %3734 = icmp ult i32 %3730, 31
  br i1 %3734, label %3770, label %3735

3735:                                             ; preds = %3723
  %3736 = and i64 %3732, 8589934560
  %3737 = sub i64 %3726, %3736
  br label %3738

3738:                                             ; preds = %3738, %3735
  %3739 = phi i64 [ 0, %3735 ], [ %3762, %3738 ]
  %3740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3758, %3738 ]
  %3741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3759, %3738 ]
  %3742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3760, %3738 ]
  %3743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3761, %3738 ]
  %3744 = sub i64 %3726, %3739
  %3745 = getelementptr inbounds i32, ptr %9, i64 %3744
  %3746 = getelementptr inbounds i32, ptr %3745, i64 -7
  %3747 = load <8 x i32>, ptr %3746, align 4, !tbaa !5
  %3748 = shufflevector <8 x i32> %3747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3749 = getelementptr inbounds i32, ptr %3745, i64 -15
  %3750 = load <8 x i32>, ptr %3749, align 4, !tbaa !5
  %3751 = shufflevector <8 x i32> %3750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3752 = getelementptr inbounds i32, ptr %3745, i64 -23
  %3753 = load <8 x i32>, ptr %3752, align 4, !tbaa !5
  %3754 = shufflevector <8 x i32> %3753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3755 = getelementptr inbounds i32, ptr %3745, i64 -31
  %3756 = load <8 x i32>, ptr %3755, align 4, !tbaa !5
  %3757 = shufflevector <8 x i32> %3756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3758 = mul <8 x i32> %3748, %3740
  %3759 = mul <8 x i32> %3751, %3741
  %3760 = mul <8 x i32> %3754, %3742
  %3761 = mul <8 x i32> %3757, %3743
  %3762 = add nuw i64 %3739, 32
  %3763 = icmp eq i64 %3762, %3736
  br i1 %3763, label %3764, label %3738, !llvm.loop !1064

3764:                                             ; preds = %3738
  %3765 = mul <8 x i32> %3759, %3758
  %3766 = mul <8 x i32> %3760, %3765
  %3767 = mul <8 x i32> %3761, %3766
  %3768 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3767)
  %3769 = icmp eq i64 %3732, %3736
  br i1 %3769, label %3782, label %3770

3770:                                             ; preds = %3723, %3764
  %3771 = phi i64 [ %3726, %3723 ], [ %3737, %3764 ]
  %3772 = phi i32 [ 1, %3723 ], [ %3768, %3764 ]
  br label %3773

3773:                                             ; preds = %3770, %3773
  %3774 = phi i64 [ %3779, %3773 ], [ %3771, %3770 ]
  %3775 = phi i32 [ %3778, %3773 ], [ %3772, %3770 ]
  %3776 = getelementptr inbounds i32, ptr %9, i64 %3774
  %3777 = load i32, ptr %3776, align 4, !tbaa !5
  %3778 = mul nsw i32 %3777, %3775
  %3779 = add nsw i64 %3774, -1
  %3780 = trunc i64 %3774 to i32
  %3781 = icmp sgt i32 %3780, 0
  br i1 %3781, label %3773, label %3782, !llvm.loop !1065

3782:                                             ; preds = %3773, %3764
  %3783 = phi i32 [ %3768, %3764 ], [ %3778, %3773 ]
  %3784 = and i64 %3733, 4294967295
  %3785 = getelementptr inbounds i32, ptr %6, i64 %3784
  %3786 = load i32, ptr %3785, align 4, !tbaa !5
  %3787 = mul nsw i32 %3786, %3783
  %3788 = add nsw i32 %3787, %3727
  %3789 = icmp sgt i64 %3725, 2
  %3790 = add nsw i64 %3726, -1
  %3791 = add i32 %3724, 1
  br i1 %3789, label %3723, label %3792, !llvm.loop !1066

3792:                                             ; preds = %3782, %3718
  %3793 = phi i32 [ %3722, %3718 ], [ %3788, %3782 ]
  %3794 = sext i32 %3793 to i64
  %3795 = getelementptr inbounds double, ptr %2, i64 %3794
  %3796 = load double, ptr %3795, align 8, !tbaa !18
  %3797 = getelementptr inbounds double, ptr %3687, i64 %3794
  %3798 = load double, ptr %3797, align 8, !tbaa !18
  %3799 = fmul fast double %3798, %3796
  %3800 = tail call fast double @llvm.fabs.f64(double %3799)
  %3801 = fadd fast double %3800, %3719
  store double %3801, ptr %3689, align 8, !tbaa !18
  %3802 = fadd fast double %3796, %3721
  %3803 = add nuw nsw i32 %3720, 1
  br i1 %3712, label %3804, label %3851

3804:                                             ; preds = %3792
  %3805 = load i32, ptr %4, align 4, !tbaa !5
  %3806 = load i32, ptr %12, align 4, !tbaa !5
  %3807 = add nsw i32 %3806, -1
  %3808 = icmp slt i32 %3805, %3807
  br i1 %3808, label %3828, label %3809

3809:                                             ; preds = %3804
  %3810 = icmp eq i32 %3805, %3807
  br i1 %3810, label %3811, label %3844

3811:                                             ; preds = %3809
  store i32 0, ptr %4, align 4, !tbaa !5
  %3812 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3812, ptr %6, align 4, !tbaa !5
  br i1 %3717, label %3851, label %3813

3813:                                             ; preds = %3811, %3838
  %3814 = phi i64 [ %3842, %3838 ], [ 1, %3811 ]
  %3815 = getelementptr inbounds i32, ptr %4, i64 %3814
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %12, i64 %3814
  %3818 = load i32, ptr %3817, align 4, !tbaa !5
  %3819 = add nsw i32 %3818, -1
  %3820 = icmp slt i32 %3816, %3819
  br i1 %3820, label %3821, label %3836

3821:                                             ; preds = %3813
  br i1 %3808, label %3828, label %3822

3822:                                             ; preds = %3821
  %3823 = getelementptr inbounds i32, ptr %7, i64 %3814
  %3824 = load i32, ptr %3823, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %6, i64 %3814
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = add nsw i32 %3826, %3824
  store i32 %3827, ptr %3825, align 4, !tbaa !5
  br label %3846

3828:                                             ; preds = %3804, %3821
  %3829 = phi i32 [ %3816, %3821 ], [ %3805, %3804 ]
  %3830 = phi ptr [ %3815, %3821 ], [ %4, %3804 ]
  %3831 = phi i64 [ %3814, %3821 ], [ 0, %3804 ]
  %3832 = add nsw i32 %3829, 1
  store i32 %3832, ptr %3830, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %7, i64 %3831
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = getelementptr inbounds i32, ptr %6, i64 %3831
  br label %3846

3836:                                             ; preds = %3813
  %3837 = icmp eq i32 %3816, %3819
  br i1 %3837, label %3838, label %3844

3838:                                             ; preds = %3836
  store i32 0, ptr %3815, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %8, i64 %3814
  %3840 = load i32, ptr %3839, align 4, !tbaa !5
  %3841 = getelementptr inbounds i32, ptr %6, i64 %3814
  store i32 %3840, ptr %3841, align 4, !tbaa !5
  %3842 = add nuw nsw i64 %3814, 1
  %3843 = icmp eq i64 %3842, %3715
  br i1 %3843, label %3851, label %3813, !llvm.loop !1067

3844:                                             ; preds = %3809, %3836
  %3845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3846:                                             ; preds = %3822, %3828
  %3847 = phi ptr [ %3835, %3828 ], [ %3815, %3822 ]
  %3848 = phi i32 [ %3834, %3828 ], [ 1, %3822 ]
  %3849 = load i32, ptr %3847, align 4, !tbaa !5
  %3850 = add nsw i32 %3849, %3848
  store i32 %3850, ptr %3847, align 4, !tbaa !5
  br label %3851

3851:                                             ; preds = %3838, %3846, %3811, %3792
  %3852 = icmp eq i32 %3803, %5
  br i1 %3852, label %5501, label %3718, !llvm.loop !1068

3853:                                             ; preds = %3701, %3988
  %3854 = phi double [ 0.000000e+00, %3701 ], [ %3936, %3988 ]
  %3855 = phi i32 [ 0, %3701 ], [ %3937, %3988 ]
  %3856 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3702, label %3857, label %3926

3857:                                             ; preds = %3853, %3916
  %3858 = phi i32 [ %3925, %3916 ], [ 0, %3853 ]
  %3859 = phi i64 [ %3867, %3916 ], [ %3706, %3853 ]
  %3860 = phi i64 [ %3924, %3916 ], [ %3705, %3853 ]
  %3861 = phi i32 [ %3922, %3916 ], [ %3856, %3853 ]
  %3862 = sub i32 %3704, %3858
  %3863 = tail call i32 @llvm.smin.i32(i32 %3862, i32 0)
  %3864 = sub i32 %3862, %3863
  %3865 = zext i32 %3864 to i64
  %3866 = add nuw nsw i64 %3865, 1
  %3867 = add nsw i64 %3859, -1
  %3868 = icmp ult i32 %3864, 31
  br i1 %3868, label %3904, label %3869

3869:                                             ; preds = %3857
  %3870 = and i64 %3866, 8589934560
  %3871 = sub i64 %3860, %3870
  br label %3872

3872:                                             ; preds = %3872, %3869
  %3873 = phi i64 [ 0, %3869 ], [ %3896, %3872 ]
  %3874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3892, %3872 ]
  %3875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3893, %3872 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3894, %3872 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3895, %3872 ]
  %3878 = sub i64 %3860, %3873
  %3879 = getelementptr inbounds i32, ptr %11, i64 %3878
  %3880 = getelementptr inbounds i32, ptr %3879, i64 -7
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !5
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = getelementptr inbounds i32, ptr %3879, i64 -15
  %3884 = load <8 x i32>, ptr %3883, align 4, !tbaa !5
  %3885 = shufflevector <8 x i32> %3884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3886 = getelementptr inbounds i32, ptr %3879, i64 -23
  %3887 = load <8 x i32>, ptr %3886, align 4, !tbaa !5
  %3888 = shufflevector <8 x i32> %3887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3889 = getelementptr inbounds i32, ptr %3879, i64 -31
  %3890 = load <8 x i32>, ptr %3889, align 4, !tbaa !5
  %3891 = shufflevector <8 x i32> %3890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3892 = mul <8 x i32> %3882, %3874
  %3893 = mul <8 x i32> %3885, %3875
  %3894 = mul <8 x i32> %3888, %3876
  %3895 = mul <8 x i32> %3891, %3877
  %3896 = add nuw i64 %3873, 32
  %3897 = icmp eq i64 %3896, %3870
  br i1 %3897, label %3898, label %3872, !llvm.loop !1069

3898:                                             ; preds = %3872
  %3899 = mul <8 x i32> %3893, %3892
  %3900 = mul <8 x i32> %3894, %3899
  %3901 = mul <8 x i32> %3895, %3900
  %3902 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3901)
  %3903 = icmp eq i64 %3866, %3870
  br i1 %3903, label %3916, label %3904

3904:                                             ; preds = %3857, %3898
  %3905 = phi i64 [ %3860, %3857 ], [ %3871, %3898 ]
  %3906 = phi i32 [ 1, %3857 ], [ %3902, %3898 ]
  br label %3907

3907:                                             ; preds = %3904, %3907
  %3908 = phi i64 [ %3913, %3907 ], [ %3905, %3904 ]
  %3909 = phi i32 [ %3912, %3907 ], [ %3906, %3904 ]
  %3910 = getelementptr inbounds i32, ptr %11, i64 %3908
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = mul nsw i32 %3911, %3909
  %3913 = add nsw i64 %3908, -1
  %3914 = trunc i64 %3908 to i32
  %3915 = icmp sgt i32 %3914, 0
  br i1 %3915, label %3907, label %3916, !llvm.loop !1070

3916:                                             ; preds = %3907, %3898
  %3917 = phi i32 [ %3902, %3898 ], [ %3912, %3907 ]
  %3918 = and i64 %3867, 4294967295
  %3919 = getelementptr inbounds i32, ptr %6, i64 %3918
  %3920 = load i32, ptr %3919, align 4, !tbaa !5
  %3921 = mul nsw i32 %3920, %3917
  %3922 = add nsw i32 %3921, %3861
  %3923 = icmp sgt i64 %3859, 2
  %3924 = add nsw i64 %3860, -1
  %3925 = add i32 %3858, 1
  br i1 %3923, label %3857, label %3926, !llvm.loop !1071

3926:                                             ; preds = %3916, %3853
  %3927 = phi i32 [ %3856, %3853 ], [ %3922, %3916 ]
  %3928 = icmp slt i32 %3927, %5
  br i1 %3928, label %3931, label %3929

3929:                                             ; preds = %3926
  %3930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3931:                                             ; preds = %3926
  %3932 = sext i32 %3927 to i64
  %3933 = getelementptr inbounds double, ptr %3687, i64 %3932
  %3934 = load double, ptr %3933, align 8, !tbaa !18
  %3935 = tail call fast double @llvm.fabs.f64(double %3934)
  %3936 = fadd fast double %3854, %3935
  store double %3936, ptr %3689, align 8, !tbaa !18
  %3937 = add nuw nsw i32 %3855, 1
  br i1 %3703, label %3938, label %3988

3938:                                             ; preds = %3931
  %3939 = load i32, ptr %4, align 4, !tbaa !5
  %3940 = load i32, ptr %12, align 4, !tbaa !5
  %3941 = add nsw i32 %3940, -1
  %3942 = icmp slt i32 %3939, %3941
  br i1 %3942, label %3965, label %3943

3943:                                             ; preds = %3938
  %3944 = icmp eq i32 %3939, %3941
  br i1 %3944, label %3945, label %3981

3945:                                             ; preds = %3943
  store i32 0, ptr %4, align 4, !tbaa !5
  %3946 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3946, ptr %6, align 4, !tbaa !5
  br i1 %3708, label %3988, label %3947

3947:                                             ; preds = %3945, %3975
  %3948 = phi i64 [ %3979, %3975 ], [ 1, %3945 ]
  %3949 = getelementptr inbounds i32, ptr %4, i64 %3948
  %3950 = load i32, ptr %3949, align 4, !tbaa !5
  %3951 = getelementptr inbounds i32, ptr %12, i64 %3948
  %3952 = load i32, ptr %3951, align 4, !tbaa !5
  %3953 = add nsw i32 %3952, -1
  %3954 = icmp slt i32 %3950, %3953
  br i1 %3954, label %3955, label %3973

3955:                                             ; preds = %3947
  br i1 %3942, label %3965, label %3956

3956:                                             ; preds = %3955
  %3957 = shl i64 %3948, 32
  %3958 = add i64 %3957, -4294967296
  %3959 = ashr exact i64 %3958, 32
  %3960 = getelementptr inbounds i32, ptr %7, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %6, i64 %3948
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, %3961
  store i32 %3964, ptr %3962, align 4, !tbaa !5
  br label %3983

3965:                                             ; preds = %3938, %3955
  %3966 = phi i32 [ %3950, %3955 ], [ %3939, %3938 ]
  %3967 = phi ptr [ %3949, %3955 ], [ %4, %3938 ]
  %3968 = phi i64 [ %3948, %3955 ], [ 0, %3938 ]
  %3969 = add nsw i32 %3966, 1
  store i32 %3969, ptr %3967, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %7, i64 %3968
  %3971 = load i32, ptr %3970, align 4, !tbaa !5
  %3972 = getelementptr inbounds i32, ptr %6, i64 %3968
  br label %3983

3973:                                             ; preds = %3947
  %3974 = icmp eq i32 %3950, %3953
  br i1 %3974, label %3975, label %3981

3975:                                             ; preds = %3973
  store i32 0, ptr %3949, align 4, !tbaa !5
  %3976 = getelementptr inbounds i32, ptr %8, i64 %3948
  %3977 = load i32, ptr %3976, align 4, !tbaa !5
  %3978 = getelementptr inbounds i32, ptr %6, i64 %3948
  store i32 %3977, ptr %3978, align 4, !tbaa !5
  %3979 = add nuw nsw i64 %3948, 1
  %3980 = icmp eq i64 %3979, %3706
  br i1 %3980, label %3988, label %3947, !llvm.loop !1072

3981:                                             ; preds = %3943, %3973
  %3982 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3983:                                             ; preds = %3956, %3965
  %3984 = phi ptr [ %3972, %3965 ], [ %3949, %3956 ]
  %3985 = phi i32 [ %3971, %3965 ], [ 1, %3956 ]
  %3986 = load i32, ptr %3984, align 4, !tbaa !5
  %3987 = add nsw i32 %3986, %3985
  store i32 %3987, ptr %3984, align 4, !tbaa !5
  br label %3988

3988:                                             ; preds = %3975, %3983, %3945, %3931
  %3989 = icmp eq i32 %3937, %5
  br i1 %3989, label %5501, label %3853, !llvm.loop !1073

3990:                                             ; preds = %3694
  %3991 = getelementptr inbounds i32, ptr %3, i64 %19
  %3992 = load i32, ptr %3991, align 4, !tbaa !5
  %3993 = icmp eq i32 %3992, 0
  %3994 = icmp sgt i32 %5, 0
  br i1 %3993, label %4004, label %3995

3995:                                             ; preds = %3990
  br i1 %3994, label %3996, label %5501

3996:                                             ; preds = %3995
  %3997 = icmp sgt i32 %13, 1
  %3998 = icmp sgt i32 %13, 0
  %3999 = add i32 %13, -2
  %4000 = zext i32 %3999 to i64
  %4001 = zext i32 %13 to i64
  %4002 = add nuw i32 %5, 1
  %4003 = icmp eq i32 %13, 1
  br label %4145

4004:                                             ; preds = %3990
  br i1 %3994, label %4005, label %5501

4005:                                             ; preds = %4004
  %4006 = icmp sgt i32 %13, 1
  %4007 = icmp sgt i32 %13, 0
  %4008 = add i32 %13, -2
  %4009 = zext i32 %4008 to i64
  %4010 = zext i32 %13 to i64
  %4011 = add nuw i32 %5, 1
  %4012 = icmp eq i32 %13, 1
  br label %4013

4013:                                             ; preds = %4005, %4143
  %4014 = phi double [ 0.000000e+00, %4005 ], [ %4093, %4143 ]
  %4015 = phi i32 [ 0, %4005 ], [ %4095, %4143 ]
  %4016 = phi double [ 0.000000e+00, %4005 ], [ %4094, %4143 ]
  %4017 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4006, label %4018, label %4087

4018:                                             ; preds = %4013, %4077
  %4019 = phi i32 [ %4086, %4077 ], [ 0, %4013 ]
  %4020 = phi i64 [ %4028, %4077 ], [ %4010, %4013 ]
  %4021 = phi i64 [ %4085, %4077 ], [ %4009, %4013 ]
  %4022 = phi i32 [ %4083, %4077 ], [ %4017, %4013 ]
  %4023 = sub i32 %4008, %4019
  %4024 = tail call i32 @llvm.smin.i32(i32 %4023, i32 0)
  %4025 = sub i32 %4023, %4024
  %4026 = zext i32 %4025 to i64
  %4027 = add nuw nsw i64 %4026, 1
  %4028 = add nsw i64 %4020, -1
  %4029 = icmp ult i32 %4025, 31
  br i1 %4029, label %4065, label %4030

4030:                                             ; preds = %4018
  %4031 = and i64 %4027, 8589934560
  %4032 = sub i64 %4021, %4031
  br label %4033

4033:                                             ; preds = %4033, %4030
  %4034 = phi i64 [ 0, %4030 ], [ %4057, %4033 ]
  %4035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4053, %4033 ]
  %4036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4054, %4033 ]
  %4037 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4055, %4033 ]
  %4038 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4056, %4033 ]
  %4039 = sub i64 %4021, %4034
  %4040 = getelementptr inbounds i32, ptr %9, i64 %4039
  %4041 = getelementptr inbounds i32, ptr %4040, i64 -7
  %4042 = load <8 x i32>, ptr %4041, align 4, !tbaa !5
  %4043 = shufflevector <8 x i32> %4042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4044 = getelementptr inbounds i32, ptr %4040, i64 -15
  %4045 = load <8 x i32>, ptr %4044, align 4, !tbaa !5
  %4046 = shufflevector <8 x i32> %4045, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4047 = getelementptr inbounds i32, ptr %4040, i64 -23
  %4048 = load <8 x i32>, ptr %4047, align 4, !tbaa !5
  %4049 = shufflevector <8 x i32> %4048, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4050 = getelementptr inbounds i32, ptr %4040, i64 -31
  %4051 = load <8 x i32>, ptr %4050, align 4, !tbaa !5
  %4052 = shufflevector <8 x i32> %4051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4053 = mul <8 x i32> %4043, %4035
  %4054 = mul <8 x i32> %4046, %4036
  %4055 = mul <8 x i32> %4049, %4037
  %4056 = mul <8 x i32> %4052, %4038
  %4057 = add nuw i64 %4034, 32
  %4058 = icmp eq i64 %4057, %4031
  br i1 %4058, label %4059, label %4033, !llvm.loop !1074

4059:                                             ; preds = %4033
  %4060 = mul <8 x i32> %4054, %4053
  %4061 = mul <8 x i32> %4055, %4060
  %4062 = mul <8 x i32> %4056, %4061
  %4063 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4062)
  %4064 = icmp eq i64 %4027, %4031
  br i1 %4064, label %4077, label %4065

4065:                                             ; preds = %4018, %4059
  %4066 = phi i64 [ %4021, %4018 ], [ %4032, %4059 ]
  %4067 = phi i32 [ 1, %4018 ], [ %4063, %4059 ]
  br label %4068

4068:                                             ; preds = %4065, %4068
  %4069 = phi i64 [ %4074, %4068 ], [ %4066, %4065 ]
  %4070 = phi i32 [ %4073, %4068 ], [ %4067, %4065 ]
  %4071 = getelementptr inbounds i32, ptr %9, i64 %4069
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = mul nsw i32 %4072, %4070
  %4074 = add nsw i64 %4069, -1
  %4075 = trunc i64 %4069 to i32
  %4076 = icmp sgt i32 %4075, 0
  br i1 %4076, label %4068, label %4077, !llvm.loop !1075

4077:                                             ; preds = %4068, %4059
  %4078 = phi i32 [ %4063, %4059 ], [ %4073, %4068 ]
  %4079 = and i64 %4028, 4294967295
  %4080 = getelementptr inbounds i32, ptr %6, i64 %4079
  %4081 = load i32, ptr %4080, align 4, !tbaa !5
  %4082 = mul nsw i32 %4081, %4078
  %4083 = add nsw i32 %4082, %4022
  %4084 = icmp sgt i64 %4020, 2
  %4085 = add nsw i64 %4021, -1
  %4086 = add i32 %4019, 1
  br i1 %4084, label %4018, label %4087, !llvm.loop !1076

4087:                                             ; preds = %4077, %4013
  %4088 = phi i32 [ %4017, %4013 ], [ %4083, %4077 ]
  %4089 = sext i32 %4088 to i64
  %4090 = getelementptr inbounds double, ptr %3687, i64 %4089
  %4091 = load double, ptr %4090, align 8, !tbaa !18
  %4092 = tail call fast double @llvm.fabs.f64(double %4091)
  %4093 = fadd fast double %4014, %4092
  store double %4093, ptr %3689, align 8, !tbaa !18
  %4094 = fadd fast double %4016, 1.000000e+00
  %4095 = add nuw nsw i32 %4015, 1
  br i1 %4007, label %4096, label %4143

4096:                                             ; preds = %4087
  %4097 = load i32, ptr %4, align 4, !tbaa !5
  %4098 = load i32, ptr %12, align 4, !tbaa !5
  %4099 = add nsw i32 %4098, -1
  %4100 = icmp slt i32 %4097, %4099
  br i1 %4100, label %4120, label %4101

4101:                                             ; preds = %4096
  %4102 = icmp eq i32 %4097, %4099
  br i1 %4102, label %4103, label %4136

4103:                                             ; preds = %4101
  store i32 0, ptr %4, align 4, !tbaa !5
  %4104 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4104, ptr %6, align 4, !tbaa !5
  br i1 %4012, label %4143, label %4105

4105:                                             ; preds = %4103, %4130
  %4106 = phi i64 [ %4134, %4130 ], [ 1, %4103 ]
  %4107 = getelementptr inbounds i32, ptr %4, i64 %4106
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %12, i64 %4106
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, -1
  %4112 = icmp slt i32 %4108, %4111
  br i1 %4112, label %4113, label %4128

4113:                                             ; preds = %4105
  br i1 %4100, label %4120, label %4114

4114:                                             ; preds = %4113
  %4115 = getelementptr inbounds i32, ptr %7, i64 %4106
  %4116 = load i32, ptr %4115, align 4, !tbaa !5
  %4117 = getelementptr inbounds i32, ptr %6, i64 %4106
  %4118 = load i32, ptr %4117, align 4, !tbaa !5
  %4119 = add nsw i32 %4118, %4116
  store i32 %4119, ptr %4117, align 4, !tbaa !5
  br label %4138

4120:                                             ; preds = %4096, %4113
  %4121 = phi i32 [ %4108, %4113 ], [ %4097, %4096 ]
  %4122 = phi ptr [ %4107, %4113 ], [ %4, %4096 ]
  %4123 = phi i64 [ %4106, %4113 ], [ 0, %4096 ]
  %4124 = add nsw i32 %4121, 1
  store i32 %4124, ptr %4122, align 4, !tbaa !5
  %4125 = getelementptr inbounds i32, ptr %7, i64 %4123
  %4126 = load i32, ptr %4125, align 4, !tbaa !5
  %4127 = getelementptr inbounds i32, ptr %6, i64 %4123
  br label %4138

4128:                                             ; preds = %4105
  %4129 = icmp eq i32 %4108, %4111
  br i1 %4129, label %4130, label %4136

4130:                                             ; preds = %4128
  store i32 0, ptr %4107, align 4, !tbaa !5
  %4131 = getelementptr inbounds i32, ptr %8, i64 %4106
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4106
  store i32 %4132, ptr %4133, align 4, !tbaa !5
  %4134 = add nuw nsw i64 %4106, 1
  %4135 = icmp eq i64 %4134, %4010
  br i1 %4135, label %4143, label %4105, !llvm.loop !1077

4136:                                             ; preds = %4101, %4128
  %4137 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4138:                                             ; preds = %4114, %4120
  %4139 = phi ptr [ %4127, %4120 ], [ %4107, %4114 ]
  %4140 = phi i32 [ %4126, %4120 ], [ 1, %4114 ]
  %4141 = load i32, ptr %4139, align 4, !tbaa !5
  %4142 = add nsw i32 %4141, %4140
  store i32 %4142, ptr %4139, align 4, !tbaa !5
  br label %4143

4143:                                             ; preds = %4130, %4138, %4103, %4087
  %4144 = icmp eq i32 %4095, %5
  br i1 %4144, label %5501, label %4013, !llvm.loop !1078

4145:                                             ; preds = %3996, %4280
  %4146 = phi double [ 0.000000e+00, %3996 ], [ %4228, %4280 ]
  %4147 = phi i32 [ 0, %3996 ], [ %4229, %4280 ]
  %4148 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3997, label %4149, label %4218

4149:                                             ; preds = %4145, %4208
  %4150 = phi i32 [ %4217, %4208 ], [ 0, %4145 ]
  %4151 = phi i64 [ %4159, %4208 ], [ %4001, %4145 ]
  %4152 = phi i64 [ %4216, %4208 ], [ %4000, %4145 ]
  %4153 = phi i32 [ %4214, %4208 ], [ %4148, %4145 ]
  %4154 = sub i32 %3999, %4150
  %4155 = tail call i32 @llvm.smin.i32(i32 %4154, i32 0)
  %4156 = sub i32 %4154, %4155
  %4157 = zext i32 %4156 to i64
  %4158 = add nuw nsw i64 %4157, 1
  %4159 = add nsw i64 %4151, -1
  %4160 = icmp ult i32 %4156, 31
  br i1 %4160, label %4196, label %4161

4161:                                             ; preds = %4149
  %4162 = and i64 %4158, 8589934560
  %4163 = sub i64 %4152, %4162
  br label %4164

4164:                                             ; preds = %4164, %4161
  %4165 = phi i64 [ 0, %4161 ], [ %4188, %4164 ]
  %4166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4184, %4164 ]
  %4167 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4185, %4164 ]
  %4168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4186, %4164 ]
  %4169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4187, %4164 ]
  %4170 = sub i64 %4152, %4165
  %4171 = getelementptr inbounds i32, ptr %11, i64 %4170
  %4172 = getelementptr inbounds i32, ptr %4171, i64 -7
  %4173 = load <8 x i32>, ptr %4172, align 4, !tbaa !5
  %4174 = shufflevector <8 x i32> %4173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4175 = getelementptr inbounds i32, ptr %4171, i64 -15
  %4176 = load <8 x i32>, ptr %4175, align 4, !tbaa !5
  %4177 = shufflevector <8 x i32> %4176, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4178 = getelementptr inbounds i32, ptr %4171, i64 -23
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !5
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4171, i64 -31
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !5
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = mul <8 x i32> %4174, %4166
  %4185 = mul <8 x i32> %4177, %4167
  %4186 = mul <8 x i32> %4180, %4168
  %4187 = mul <8 x i32> %4183, %4169
  %4188 = add nuw i64 %4165, 32
  %4189 = icmp eq i64 %4188, %4162
  br i1 %4189, label %4190, label %4164, !llvm.loop !1079

4190:                                             ; preds = %4164
  %4191 = mul <8 x i32> %4185, %4184
  %4192 = mul <8 x i32> %4186, %4191
  %4193 = mul <8 x i32> %4187, %4192
  %4194 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4193)
  %4195 = icmp eq i64 %4158, %4162
  br i1 %4195, label %4208, label %4196

4196:                                             ; preds = %4149, %4190
  %4197 = phi i64 [ %4152, %4149 ], [ %4163, %4190 ]
  %4198 = phi i32 [ 1, %4149 ], [ %4194, %4190 ]
  br label %4199

4199:                                             ; preds = %4196, %4199
  %4200 = phi i64 [ %4205, %4199 ], [ %4197, %4196 ]
  %4201 = phi i32 [ %4204, %4199 ], [ %4198, %4196 ]
  %4202 = getelementptr inbounds i32, ptr %11, i64 %4200
  %4203 = load i32, ptr %4202, align 4, !tbaa !5
  %4204 = mul nsw i32 %4203, %4201
  %4205 = add nsw i64 %4200, -1
  %4206 = trunc i64 %4200 to i32
  %4207 = icmp sgt i32 %4206, 0
  br i1 %4207, label %4199, label %4208, !llvm.loop !1080

4208:                                             ; preds = %4199, %4190
  %4209 = phi i32 [ %4194, %4190 ], [ %4204, %4199 ]
  %4210 = and i64 %4159, 4294967295
  %4211 = getelementptr inbounds i32, ptr %6, i64 %4210
  %4212 = load i32, ptr %4211, align 4, !tbaa !5
  %4213 = mul nsw i32 %4212, %4209
  %4214 = add nsw i32 %4213, %4153
  %4215 = icmp sgt i64 %4151, 2
  %4216 = add nsw i64 %4152, -1
  %4217 = add i32 %4150, 1
  br i1 %4215, label %4149, label %4218, !llvm.loop !1081

4218:                                             ; preds = %4208, %4145
  %4219 = phi i32 [ %4148, %4145 ], [ %4214, %4208 ]
  %4220 = icmp slt i32 %4219, %5
  br i1 %4220, label %4223, label %4221

4221:                                             ; preds = %4218
  %4222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4223:                                             ; preds = %4218
  %4224 = sext i32 %4219 to i64
  %4225 = getelementptr inbounds double, ptr %3687, i64 %4224
  %4226 = load double, ptr %4225, align 8, !tbaa !18
  %4227 = tail call fast double @llvm.fabs.f64(double %4226)
  %4228 = fadd fast double %4146, %4227
  store double %4228, ptr %3689, align 8, !tbaa !18
  %4229 = add nuw nsw i32 %4147, 1
  br i1 %3998, label %4230, label %4280

4230:                                             ; preds = %4223
  %4231 = load i32, ptr %4, align 4, !tbaa !5
  %4232 = load i32, ptr %12, align 4, !tbaa !5
  %4233 = add nsw i32 %4232, -1
  %4234 = icmp slt i32 %4231, %4233
  br i1 %4234, label %4257, label %4235

4235:                                             ; preds = %4230
  %4236 = icmp eq i32 %4231, %4233
  br i1 %4236, label %4237, label %4273

4237:                                             ; preds = %4235
  store i32 0, ptr %4, align 4, !tbaa !5
  %4238 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4238, ptr %6, align 4, !tbaa !5
  br i1 %4003, label %4280, label %4239

4239:                                             ; preds = %4237, %4267
  %4240 = phi i64 [ %4271, %4267 ], [ 1, %4237 ]
  %4241 = getelementptr inbounds i32, ptr %4, i64 %4240
  %4242 = load i32, ptr %4241, align 4, !tbaa !5
  %4243 = getelementptr inbounds i32, ptr %12, i64 %4240
  %4244 = load i32, ptr %4243, align 4, !tbaa !5
  %4245 = add nsw i32 %4244, -1
  %4246 = icmp slt i32 %4242, %4245
  br i1 %4246, label %4247, label %4265

4247:                                             ; preds = %4239
  br i1 %4234, label %4257, label %4248

4248:                                             ; preds = %4247
  %4249 = shl i64 %4240, 32
  %4250 = add i64 %4249, -4294967296
  %4251 = ashr exact i64 %4250, 32
  %4252 = getelementptr inbounds i32, ptr %7, i64 %4251
  %4253 = load i32, ptr %4252, align 4, !tbaa !5
  %4254 = getelementptr inbounds i32, ptr %6, i64 %4240
  %4255 = load i32, ptr %4254, align 4, !tbaa !5
  %4256 = add nsw i32 %4255, %4253
  store i32 %4256, ptr %4254, align 4, !tbaa !5
  br label %4275

4257:                                             ; preds = %4230, %4247
  %4258 = phi i32 [ %4242, %4247 ], [ %4231, %4230 ]
  %4259 = phi ptr [ %4241, %4247 ], [ %4, %4230 ]
  %4260 = phi i64 [ %4240, %4247 ], [ 0, %4230 ]
  %4261 = add nsw i32 %4258, 1
  store i32 %4261, ptr %4259, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %7, i64 %4260
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = getelementptr inbounds i32, ptr %6, i64 %4260
  br label %4275

4265:                                             ; preds = %4239
  %4266 = icmp eq i32 %4242, %4245
  br i1 %4266, label %4267, label %4273

4267:                                             ; preds = %4265
  store i32 0, ptr %4241, align 4, !tbaa !5
  %4268 = getelementptr inbounds i32, ptr %8, i64 %4240
  %4269 = load i32, ptr %4268, align 4, !tbaa !5
  %4270 = getelementptr inbounds i32, ptr %6, i64 %4240
  store i32 %4269, ptr %4270, align 4, !tbaa !5
  %4271 = add nuw nsw i64 %4240, 1
  %4272 = icmp eq i64 %4271, %4001
  br i1 %4272, label %4280, label %4239, !llvm.loop !1082

4273:                                             ; preds = %4235, %4265
  %4274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4275:                                             ; preds = %4248, %4257
  %4276 = phi ptr [ %4264, %4257 ], [ %4241, %4248 ]
  %4277 = phi i32 [ %4263, %4257 ], [ 1, %4248 ]
  %4278 = load i32, ptr %4276, align 4, !tbaa !5
  %4279 = add nsw i32 %4278, %4277
  store i32 %4279, ptr %4276, align 4, !tbaa !5
  br label %4280

4280:                                             ; preds = %4267, %4275, %4237, %4223
  %4281 = icmp eq i32 %4229, %5
  br i1 %4281, label %5501, label %4145, !llvm.loop !1083

4282:                                             ; preds = %3694
  %4283 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

4284:                                             ; preds = %18
  %4285 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4286 = load ptr, ptr %4285, align 8, !tbaa !9
  %4287 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4288 = load ptr, ptr %4287, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4288, align 4, !tbaa !162
  %4289 = icmp eq i32 %13, 0
  br i1 %4289, label %4290, label %4294

4290:                                             ; preds = %4284
  %4291 = load double, ptr %4286, align 8, !tbaa !18
  %4292 = fptrunc double %4291 to float
  %4293 = tail call fast float @llvm.fabs.f32(float %4292)
  store float %4293, ptr %4288, align 4, !tbaa !162
  br label %5501

4294:                                             ; preds = %4284
  switch i32 %1, label %4894 [
    i32 1, label %4295
    i32 0, label %4600
  ]

4295:                                             ; preds = %4294
  %4296 = getelementptr inbounds i32, ptr %3, i64 %19
  %4297 = load i32, ptr %4296, align 4, !tbaa !5
  %4298 = icmp eq i32 %4297, 0
  %4299 = icmp sgt i32 %5, 0
  br i1 %4298, label %4309, label %4300

4300:                                             ; preds = %4295
  br i1 %4299, label %4301, label %5501

4301:                                             ; preds = %4300
  %4302 = icmp sgt i32 %13, 1
  %4303 = icmp sgt i32 %13, 0
  %4304 = add i32 %13, -2
  %4305 = zext i32 %4304 to i64
  %4306 = zext i32 %13 to i64
  %4307 = add nuw i32 %5, 1
  %4308 = icmp eq i32 %13, 1
  br label %4457

4309:                                             ; preds = %4295
  br i1 %4299, label %4310, label %5501

4310:                                             ; preds = %4309
  %4311 = icmp sgt i32 %13, 1
  %4312 = icmp sgt i32 %13, 0
  %4313 = add i32 %13, -2
  %4314 = zext i32 %4313 to i64
  %4315 = zext i32 %13 to i64
  %4316 = add nuw i32 %5, 1
  %4317 = icmp eq i32 %13, 1
  br label %4318

4318:                                             ; preds = %4310, %4455
  %4319 = phi float [ 0.000000e+00, %4310 ], [ %4405, %4455 ]
  %4320 = phi i32 [ 0, %4310 ], [ %4407, %4455 ]
  %4321 = phi double [ 0.000000e+00, %4310 ], [ %4406, %4455 ]
  %4322 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4323, label %4392

4323:                                             ; preds = %4318, %4382
  %4324 = phi i32 [ %4391, %4382 ], [ 0, %4318 ]
  %4325 = phi i64 [ %4333, %4382 ], [ %4315, %4318 ]
  %4326 = phi i64 [ %4390, %4382 ], [ %4314, %4318 ]
  %4327 = phi i32 [ %4388, %4382 ], [ %4322, %4318 ]
  %4328 = sub i32 %4313, %4324
  %4329 = tail call i32 @llvm.smin.i32(i32 %4328, i32 0)
  %4330 = sub i32 %4328, %4329
  %4331 = zext i32 %4330 to i64
  %4332 = add nuw nsw i64 %4331, 1
  %4333 = add nsw i64 %4325, -1
  %4334 = icmp ult i32 %4330, 31
  br i1 %4334, label %4370, label %4335

4335:                                             ; preds = %4323
  %4336 = and i64 %4332, 8589934560
  %4337 = sub i64 %4326, %4336
  br label %4338

4338:                                             ; preds = %4338, %4335
  %4339 = phi i64 [ 0, %4335 ], [ %4362, %4338 ]
  %4340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4358, %4338 ]
  %4341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4359, %4338 ]
  %4342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4360, %4338 ]
  %4343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4361, %4338 ]
  %4344 = sub i64 %4326, %4339
  %4345 = getelementptr inbounds i32, ptr %9, i64 %4344
  %4346 = getelementptr inbounds i32, ptr %4345, i64 -7
  %4347 = load <8 x i32>, ptr %4346, align 4, !tbaa !5
  %4348 = shufflevector <8 x i32> %4347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4349 = getelementptr inbounds i32, ptr %4345, i64 -15
  %4350 = load <8 x i32>, ptr %4349, align 4, !tbaa !5
  %4351 = shufflevector <8 x i32> %4350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4352 = getelementptr inbounds i32, ptr %4345, i64 -23
  %4353 = load <8 x i32>, ptr %4352, align 4, !tbaa !5
  %4354 = shufflevector <8 x i32> %4353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4355 = getelementptr inbounds i32, ptr %4345, i64 -31
  %4356 = load <8 x i32>, ptr %4355, align 4, !tbaa !5
  %4357 = shufflevector <8 x i32> %4356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4358 = mul <8 x i32> %4348, %4340
  %4359 = mul <8 x i32> %4351, %4341
  %4360 = mul <8 x i32> %4354, %4342
  %4361 = mul <8 x i32> %4357, %4343
  %4362 = add nuw i64 %4339, 32
  %4363 = icmp eq i64 %4362, %4336
  br i1 %4363, label %4364, label %4338, !llvm.loop !1084

4364:                                             ; preds = %4338
  %4365 = mul <8 x i32> %4359, %4358
  %4366 = mul <8 x i32> %4360, %4365
  %4367 = mul <8 x i32> %4361, %4366
  %4368 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4367)
  %4369 = icmp eq i64 %4332, %4336
  br i1 %4369, label %4382, label %4370

4370:                                             ; preds = %4323, %4364
  %4371 = phi i64 [ %4326, %4323 ], [ %4337, %4364 ]
  %4372 = phi i32 [ 1, %4323 ], [ %4368, %4364 ]
  br label %4373

4373:                                             ; preds = %4370, %4373
  %4374 = phi i64 [ %4379, %4373 ], [ %4371, %4370 ]
  %4375 = phi i32 [ %4378, %4373 ], [ %4372, %4370 ]
  %4376 = getelementptr inbounds i32, ptr %9, i64 %4374
  %4377 = load i32, ptr %4376, align 4, !tbaa !5
  %4378 = mul nsw i32 %4377, %4375
  %4379 = add nsw i64 %4374, -1
  %4380 = trunc i64 %4374 to i32
  %4381 = icmp sgt i32 %4380, 0
  br i1 %4381, label %4373, label %4382, !llvm.loop !1085

4382:                                             ; preds = %4373, %4364
  %4383 = phi i32 [ %4368, %4364 ], [ %4378, %4373 ]
  %4384 = and i64 %4333, 4294967295
  %4385 = getelementptr inbounds i32, ptr %6, i64 %4384
  %4386 = load i32, ptr %4385, align 4, !tbaa !5
  %4387 = mul nsw i32 %4386, %4383
  %4388 = add nsw i32 %4387, %4327
  %4389 = icmp sgt i64 %4325, 2
  %4390 = add nsw i64 %4326, -1
  %4391 = add i32 %4324, 1
  br i1 %4389, label %4323, label %4392, !llvm.loop !1086

4392:                                             ; preds = %4382, %4318
  %4393 = phi i32 [ %4322, %4318 ], [ %4388, %4382 ]
  %4394 = sext i32 %4393 to i64
  %4395 = getelementptr inbounds double, ptr %2, i64 %4394
  %4396 = load double, ptr %4395, align 8, !tbaa !18
  %4397 = getelementptr inbounds double, ptr %4286, i64 %4394
  %4398 = load double, ptr %4397, align 8, !tbaa !18
  %4399 = fptrunc double %4398 to float
  %4400 = fpext float %4319 to double
  %4401 = fpext float %4399 to double
  %4402 = fmul fast double %4396, %4401
  %4403 = tail call fast double @llvm.fabs.f64(double %4402)
  %4404 = fadd fast double %4403, %4400
  %4405 = fptrunc double %4404 to float
  %4406 = fadd fast double %4396, %4321
  %4407 = add nuw nsw i32 %4320, 1
  br i1 %4312, label %4408, label %4455

4408:                                             ; preds = %4392
  %4409 = load i32, ptr %4, align 4, !tbaa !5
  %4410 = load i32, ptr %12, align 4, !tbaa !5
  %4411 = add nsw i32 %4410, -1
  %4412 = icmp slt i32 %4409, %4411
  br i1 %4412, label %4432, label %4413

4413:                                             ; preds = %4408
  %4414 = icmp eq i32 %4409, %4411
  br i1 %4414, label %4415, label %4448

4415:                                             ; preds = %4413
  store i32 0, ptr %4, align 4, !tbaa !5
  %4416 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4416, ptr %6, align 4, !tbaa !5
  br i1 %4317, label %4455, label %4417

4417:                                             ; preds = %4415, %4442
  %4418 = phi i64 [ %4446, %4442 ], [ 1, %4415 ]
  %4419 = getelementptr inbounds i32, ptr %4, i64 %4418
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %12, i64 %4418
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = add nsw i32 %4422, -1
  %4424 = icmp slt i32 %4420, %4423
  br i1 %4424, label %4425, label %4440

4425:                                             ; preds = %4417
  br i1 %4412, label %4432, label %4426

4426:                                             ; preds = %4425
  %4427 = getelementptr inbounds i32, ptr %7, i64 %4418
  %4428 = load i32, ptr %4427, align 4, !tbaa !5
  %4429 = getelementptr inbounds i32, ptr %6, i64 %4418
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = add nsw i32 %4430, %4428
  store i32 %4431, ptr %4429, align 4, !tbaa !5
  br label %4450

4432:                                             ; preds = %4408, %4425
  %4433 = phi i32 [ %4420, %4425 ], [ %4409, %4408 ]
  %4434 = phi ptr [ %4419, %4425 ], [ %4, %4408 ]
  %4435 = phi i64 [ %4418, %4425 ], [ 0, %4408 ]
  %4436 = add nsw i32 %4433, 1
  store i32 %4436, ptr %4434, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %7, i64 %4435
  %4438 = load i32, ptr %4437, align 4, !tbaa !5
  %4439 = getelementptr inbounds i32, ptr %6, i64 %4435
  br label %4450

4440:                                             ; preds = %4417
  %4441 = icmp eq i32 %4420, %4423
  br i1 %4441, label %4442, label %4448

4442:                                             ; preds = %4440
  store i32 0, ptr %4419, align 4, !tbaa !5
  %4443 = getelementptr inbounds i32, ptr %8, i64 %4418
  %4444 = load i32, ptr %4443, align 4, !tbaa !5
  %4445 = getelementptr inbounds i32, ptr %6, i64 %4418
  store i32 %4444, ptr %4445, align 4, !tbaa !5
  %4446 = add nuw nsw i64 %4418, 1
  %4447 = icmp eq i64 %4446, %4315
  br i1 %4447, label %4455, label %4417, !llvm.loop !1087

4448:                                             ; preds = %4413, %4440
  store float %4405, ptr %4288, align 4, !tbaa !162
  %4449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4450:                                             ; preds = %4426, %4432
  %4451 = phi ptr [ %4439, %4432 ], [ %4419, %4426 ]
  %4452 = phi i32 [ %4438, %4432 ], [ 1, %4426 ]
  %4453 = load i32, ptr %4451, align 4, !tbaa !5
  %4454 = add nsw i32 %4453, %4452
  store i32 %4454, ptr %4451, align 4, !tbaa !5
  br label %4455

4455:                                             ; preds = %4442, %4450, %4415, %4392
  %4456 = icmp eq i32 %4407, %5
  br i1 %4456, label %5499, label %4318, !llvm.loop !1088

4457:                                             ; preds = %4301, %4598
  %4458 = phi float [ 0.000000e+00, %4301 ], [ %4546, %4598 ]
  %4459 = phi i32 [ 0, %4301 ], [ %4547, %4598 ]
  %4460 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4461, label %4530

4461:                                             ; preds = %4457, %4520
  %4462 = phi i32 [ %4529, %4520 ], [ 0, %4457 ]
  %4463 = phi i64 [ %4471, %4520 ], [ %4306, %4457 ]
  %4464 = phi i64 [ %4528, %4520 ], [ %4305, %4457 ]
  %4465 = phi i32 [ %4526, %4520 ], [ %4460, %4457 ]
  %4466 = sub i32 %4304, %4462
  %4467 = tail call i32 @llvm.smin.i32(i32 %4466, i32 0)
  %4468 = sub i32 %4466, %4467
  %4469 = zext i32 %4468 to i64
  %4470 = add nuw nsw i64 %4469, 1
  %4471 = add nsw i64 %4463, -1
  %4472 = icmp ult i32 %4468, 31
  br i1 %4472, label %4508, label %4473

4473:                                             ; preds = %4461
  %4474 = and i64 %4470, 8589934560
  %4475 = sub i64 %4464, %4474
  br label %4476

4476:                                             ; preds = %4476, %4473
  %4477 = phi i64 [ 0, %4473 ], [ %4500, %4476 ]
  %4478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4496, %4476 ]
  %4479 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4497, %4476 ]
  %4480 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4498, %4476 ]
  %4481 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4499, %4476 ]
  %4482 = sub i64 %4464, %4477
  %4483 = getelementptr inbounds i32, ptr %11, i64 %4482
  %4484 = getelementptr inbounds i32, ptr %4483, i64 -7
  %4485 = load <8 x i32>, ptr %4484, align 4, !tbaa !5
  %4486 = shufflevector <8 x i32> %4485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4487 = getelementptr inbounds i32, ptr %4483, i64 -15
  %4488 = load <8 x i32>, ptr %4487, align 4, !tbaa !5
  %4489 = shufflevector <8 x i32> %4488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4490 = getelementptr inbounds i32, ptr %4483, i64 -23
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !5
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4483, i64 -31
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !5
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = mul <8 x i32> %4486, %4478
  %4497 = mul <8 x i32> %4489, %4479
  %4498 = mul <8 x i32> %4492, %4480
  %4499 = mul <8 x i32> %4495, %4481
  %4500 = add nuw i64 %4477, 32
  %4501 = icmp eq i64 %4500, %4474
  br i1 %4501, label %4502, label %4476, !llvm.loop !1089

4502:                                             ; preds = %4476
  %4503 = mul <8 x i32> %4497, %4496
  %4504 = mul <8 x i32> %4498, %4503
  %4505 = mul <8 x i32> %4499, %4504
  %4506 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4505)
  %4507 = icmp eq i64 %4470, %4474
  br i1 %4507, label %4520, label %4508

4508:                                             ; preds = %4461, %4502
  %4509 = phi i64 [ %4464, %4461 ], [ %4475, %4502 ]
  %4510 = phi i32 [ 1, %4461 ], [ %4506, %4502 ]
  br label %4511

4511:                                             ; preds = %4508, %4511
  %4512 = phi i64 [ %4517, %4511 ], [ %4509, %4508 ]
  %4513 = phi i32 [ %4516, %4511 ], [ %4510, %4508 ]
  %4514 = getelementptr inbounds i32, ptr %11, i64 %4512
  %4515 = load i32, ptr %4514, align 4, !tbaa !5
  %4516 = mul nsw i32 %4515, %4513
  %4517 = add nsw i64 %4512, -1
  %4518 = trunc i64 %4512 to i32
  %4519 = icmp sgt i32 %4518, 0
  br i1 %4519, label %4511, label %4520, !llvm.loop !1090

4520:                                             ; preds = %4511, %4502
  %4521 = phi i32 [ %4506, %4502 ], [ %4516, %4511 ]
  %4522 = and i64 %4471, 4294967295
  %4523 = getelementptr inbounds i32, ptr %6, i64 %4522
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = mul nsw i32 %4524, %4521
  %4526 = add nsw i32 %4525, %4465
  %4527 = icmp sgt i64 %4463, 2
  %4528 = add nsw i64 %4464, -1
  %4529 = add i32 %4462, 1
  br i1 %4527, label %4461, label %4530, !llvm.loop !1091

4530:                                             ; preds = %4520, %4457
  %4531 = phi i32 [ %4460, %4457 ], [ %4526, %4520 ]
  %4532 = icmp slt i32 %4531, %5
  br i1 %4532, label %4535, label %4533

4533:                                             ; preds = %4530
  %4534 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4535:                                             ; preds = %4530
  %4536 = sext i32 %4531 to i64
  %4537 = getelementptr inbounds double, ptr %4286, i64 %4536
  %4538 = load double, ptr %4537, align 8, !tbaa !18
  %4539 = fptrunc double %4538 to float
  %4540 = fpext float %4458 to double
  %4541 = fpext float %4539 to double
  %4542 = fcmp fast olt float %4539, 0.000000e+00
  %4543 = fneg fast double %4541
  %4544 = select fast i1 %4542, double %4543, double %4541
  %4545 = fadd fast double %4544, %4540
  %4546 = fptrunc double %4545 to float
  store float %4546, ptr %4288, align 4, !tbaa !162
  %4547 = add nuw nsw i32 %4459, 1
  br i1 %4303, label %4548, label %4598

4548:                                             ; preds = %4535
  %4549 = load i32, ptr %4, align 4, !tbaa !5
  %4550 = load i32, ptr %12, align 4, !tbaa !5
  %4551 = add nsw i32 %4550, -1
  %4552 = icmp slt i32 %4549, %4551
  br i1 %4552, label %4575, label %4553

4553:                                             ; preds = %4548
  %4554 = icmp eq i32 %4549, %4551
  br i1 %4554, label %4555, label %4591

4555:                                             ; preds = %4553
  store i32 0, ptr %4, align 4, !tbaa !5
  %4556 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4556, ptr %6, align 4, !tbaa !5
  br i1 %4308, label %4598, label %4557

4557:                                             ; preds = %4555, %4585
  %4558 = phi i64 [ %4589, %4585 ], [ 1, %4555 ]
  %4559 = getelementptr inbounds i32, ptr %4, i64 %4558
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %12, i64 %4558
  %4562 = load i32, ptr %4561, align 4, !tbaa !5
  %4563 = add nsw i32 %4562, -1
  %4564 = icmp slt i32 %4560, %4563
  br i1 %4564, label %4565, label %4583

4565:                                             ; preds = %4557
  br i1 %4552, label %4575, label %4566

4566:                                             ; preds = %4565
  %4567 = shl i64 %4558, 32
  %4568 = add i64 %4567, -4294967296
  %4569 = ashr exact i64 %4568, 32
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4569
  %4571 = load i32, ptr %4570, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4558
  %4573 = load i32, ptr %4572, align 4, !tbaa !5
  %4574 = add nsw i32 %4573, %4571
  store i32 %4574, ptr %4572, align 4, !tbaa !5
  br label %4593

4575:                                             ; preds = %4548, %4565
  %4576 = phi i32 [ %4560, %4565 ], [ %4549, %4548 ]
  %4577 = phi ptr [ %4559, %4565 ], [ %4, %4548 ]
  %4578 = phi i64 [ %4558, %4565 ], [ 0, %4548 ]
  %4579 = add nsw i32 %4576, 1
  store i32 %4579, ptr %4577, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %7, i64 %4578
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = getelementptr inbounds i32, ptr %6, i64 %4578
  br label %4593

4583:                                             ; preds = %4557
  %4584 = icmp eq i32 %4560, %4563
  br i1 %4584, label %4585, label %4591

4585:                                             ; preds = %4583
  store i32 0, ptr %4559, align 4, !tbaa !5
  %4586 = getelementptr inbounds i32, ptr %8, i64 %4558
  %4587 = load i32, ptr %4586, align 4, !tbaa !5
  %4588 = getelementptr inbounds i32, ptr %6, i64 %4558
  store i32 %4587, ptr %4588, align 4, !tbaa !5
  %4589 = add nuw nsw i64 %4558, 1
  %4590 = icmp eq i64 %4589, %4306
  br i1 %4590, label %4598, label %4557, !llvm.loop !1092

4591:                                             ; preds = %4553, %4583
  %4592 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4593:                                             ; preds = %4566, %4575
  %4594 = phi ptr [ %4582, %4575 ], [ %4559, %4566 ]
  %4595 = phi i32 [ %4581, %4575 ], [ 1, %4566 ]
  %4596 = load i32, ptr %4594, align 4, !tbaa !5
  %4597 = add nsw i32 %4596, %4595
  store i32 %4597, ptr %4594, align 4, !tbaa !5
  br label %4598

4598:                                             ; preds = %4585, %4593, %4555, %4535
  %4599 = icmp eq i32 %4547, %5
  br i1 %4599, label %5501, label %4457, !llvm.loop !1093

4600:                                             ; preds = %4294
  %4601 = getelementptr inbounds i32, ptr %3, i64 %19
  %4602 = load i32, ptr %4601, align 4, !tbaa !5
  %4603 = icmp eq i32 %4602, 0
  %4604 = icmp sgt i32 %5, 0
  br i1 %4603, label %4614, label %4605

4605:                                             ; preds = %4600
  br i1 %4604, label %4606, label %5501

4606:                                             ; preds = %4605
  %4607 = icmp sgt i32 %13, 1
  %4608 = icmp sgt i32 %13, 0
  %4609 = add i32 %13, -2
  %4610 = zext i32 %4609 to i64
  %4611 = zext i32 %13 to i64
  %4612 = add nuw i32 %5, 1
  %4613 = icmp eq i32 %13, 1
  br label %4756

4614:                                             ; preds = %4600
  br i1 %4604, label %4615, label %5501

4615:                                             ; preds = %4614
  %4616 = icmp sgt i32 %13, 1
  %4617 = icmp sgt i32 %13, 0
  %4618 = add i32 %13, -2
  %4619 = zext i32 %4618 to i64
  %4620 = zext i32 %13 to i64
  %4621 = add nuw i32 %5, 1
  %4622 = icmp eq i32 %13, 1
  br label %4623

4623:                                             ; preds = %4615, %4754
  %4624 = phi float [ 0.000000e+00, %4615 ], [ %4704, %4754 ]
  %4625 = phi i32 [ 0, %4615 ], [ %4706, %4754 ]
  %4626 = phi double [ 0.000000e+00, %4615 ], [ %4705, %4754 ]
  %4627 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4616, label %4628, label %4697

4628:                                             ; preds = %4623, %4687
  %4629 = phi i32 [ %4696, %4687 ], [ 0, %4623 ]
  %4630 = phi i64 [ %4638, %4687 ], [ %4620, %4623 ]
  %4631 = phi i64 [ %4695, %4687 ], [ %4619, %4623 ]
  %4632 = phi i32 [ %4693, %4687 ], [ %4627, %4623 ]
  %4633 = sub i32 %4618, %4629
  %4634 = tail call i32 @llvm.smin.i32(i32 %4633, i32 0)
  %4635 = sub i32 %4633, %4634
  %4636 = zext i32 %4635 to i64
  %4637 = add nuw nsw i64 %4636, 1
  %4638 = add nsw i64 %4630, -1
  %4639 = icmp ult i32 %4635, 31
  br i1 %4639, label %4675, label %4640

4640:                                             ; preds = %4628
  %4641 = and i64 %4637, 8589934560
  %4642 = sub i64 %4631, %4641
  br label %4643

4643:                                             ; preds = %4643, %4640
  %4644 = phi i64 [ 0, %4640 ], [ %4667, %4643 ]
  %4645 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4663, %4643 ]
  %4646 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4664, %4643 ]
  %4647 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4665, %4643 ]
  %4648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4666, %4643 ]
  %4649 = sub i64 %4631, %4644
  %4650 = getelementptr inbounds i32, ptr %9, i64 %4649
  %4651 = getelementptr inbounds i32, ptr %4650, i64 -7
  %4652 = load <8 x i32>, ptr %4651, align 4, !tbaa !5
  %4653 = shufflevector <8 x i32> %4652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4654 = getelementptr inbounds i32, ptr %4650, i64 -15
  %4655 = load <8 x i32>, ptr %4654, align 4, !tbaa !5
  %4656 = shufflevector <8 x i32> %4655, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4657 = getelementptr inbounds i32, ptr %4650, i64 -23
  %4658 = load <8 x i32>, ptr %4657, align 4, !tbaa !5
  %4659 = shufflevector <8 x i32> %4658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4660 = getelementptr inbounds i32, ptr %4650, i64 -31
  %4661 = load <8 x i32>, ptr %4660, align 4, !tbaa !5
  %4662 = shufflevector <8 x i32> %4661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4663 = mul <8 x i32> %4653, %4645
  %4664 = mul <8 x i32> %4656, %4646
  %4665 = mul <8 x i32> %4659, %4647
  %4666 = mul <8 x i32> %4662, %4648
  %4667 = add nuw i64 %4644, 32
  %4668 = icmp eq i64 %4667, %4641
  br i1 %4668, label %4669, label %4643, !llvm.loop !1094

4669:                                             ; preds = %4643
  %4670 = mul <8 x i32> %4664, %4663
  %4671 = mul <8 x i32> %4665, %4670
  %4672 = mul <8 x i32> %4666, %4671
  %4673 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4672)
  %4674 = icmp eq i64 %4637, %4641
  br i1 %4674, label %4687, label %4675

4675:                                             ; preds = %4628, %4669
  %4676 = phi i64 [ %4631, %4628 ], [ %4642, %4669 ]
  %4677 = phi i32 [ 1, %4628 ], [ %4673, %4669 ]
  br label %4678

4678:                                             ; preds = %4675, %4678
  %4679 = phi i64 [ %4684, %4678 ], [ %4676, %4675 ]
  %4680 = phi i32 [ %4683, %4678 ], [ %4677, %4675 ]
  %4681 = getelementptr inbounds i32, ptr %9, i64 %4679
  %4682 = load i32, ptr %4681, align 4, !tbaa !5
  %4683 = mul nsw i32 %4682, %4680
  %4684 = add nsw i64 %4679, -1
  %4685 = trunc i64 %4679 to i32
  %4686 = icmp sgt i32 %4685, 0
  br i1 %4686, label %4678, label %4687, !llvm.loop !1095

4687:                                             ; preds = %4678, %4669
  %4688 = phi i32 [ %4673, %4669 ], [ %4683, %4678 ]
  %4689 = and i64 %4638, 4294967295
  %4690 = getelementptr inbounds i32, ptr %6, i64 %4689
  %4691 = load i32, ptr %4690, align 4, !tbaa !5
  %4692 = mul nsw i32 %4691, %4688
  %4693 = add nsw i32 %4692, %4632
  %4694 = icmp sgt i64 %4630, 2
  %4695 = add nsw i64 %4631, -1
  %4696 = add i32 %4629, 1
  br i1 %4694, label %4628, label %4697, !llvm.loop !1096

4697:                                             ; preds = %4687, %4623
  %4698 = phi i32 [ %4627, %4623 ], [ %4693, %4687 ]
  %4699 = sext i32 %4698 to i64
  %4700 = getelementptr inbounds double, ptr %4286, i64 %4699
  %4701 = load double, ptr %4700, align 8, !tbaa !18
  %4702 = fptrunc double %4701 to float
  %4703 = tail call fast float @llvm.fabs.f32(float %4702)
  %4704 = fadd fast float %4703, %4624
  %4705 = fadd fast double %4626, 1.000000e+00
  %4706 = add nuw nsw i32 %4625, 1
  br i1 %4617, label %4707, label %4754

4707:                                             ; preds = %4697
  %4708 = load i32, ptr %4, align 4, !tbaa !5
  %4709 = load i32, ptr %12, align 4, !tbaa !5
  %4710 = add nsw i32 %4709, -1
  %4711 = icmp slt i32 %4708, %4710
  br i1 %4711, label %4731, label %4712

4712:                                             ; preds = %4707
  %4713 = icmp eq i32 %4708, %4710
  br i1 %4713, label %4714, label %4747

4714:                                             ; preds = %4712
  store i32 0, ptr %4, align 4, !tbaa !5
  %4715 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4715, ptr %6, align 4, !tbaa !5
  br i1 %4622, label %4754, label %4716

4716:                                             ; preds = %4714, %4741
  %4717 = phi i64 [ %4745, %4741 ], [ 1, %4714 ]
  %4718 = getelementptr inbounds i32, ptr %4, i64 %4717
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = getelementptr inbounds i32, ptr %12, i64 %4717
  %4721 = load i32, ptr %4720, align 4, !tbaa !5
  %4722 = add nsw i32 %4721, -1
  %4723 = icmp slt i32 %4719, %4722
  br i1 %4723, label %4724, label %4739

4724:                                             ; preds = %4716
  br i1 %4711, label %4731, label %4725

4725:                                             ; preds = %4724
  %4726 = getelementptr inbounds i32, ptr %7, i64 %4717
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4717
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = add nsw i32 %4729, %4727
  store i32 %4730, ptr %4728, align 4, !tbaa !5
  br label %4749

4731:                                             ; preds = %4707, %4724
  %4732 = phi i32 [ %4719, %4724 ], [ %4708, %4707 ]
  %4733 = phi ptr [ %4718, %4724 ], [ %4, %4707 ]
  %4734 = phi i64 [ %4717, %4724 ], [ 0, %4707 ]
  %4735 = add nsw i32 %4732, 1
  store i32 %4735, ptr %4733, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %7, i64 %4734
  %4737 = load i32, ptr %4736, align 4, !tbaa !5
  %4738 = getelementptr inbounds i32, ptr %6, i64 %4734
  br label %4749

4739:                                             ; preds = %4716
  %4740 = icmp eq i32 %4719, %4722
  br i1 %4740, label %4741, label %4747

4741:                                             ; preds = %4739
  store i32 0, ptr %4718, align 4, !tbaa !5
  %4742 = getelementptr inbounds i32, ptr %8, i64 %4717
  %4743 = load i32, ptr %4742, align 4, !tbaa !5
  %4744 = getelementptr inbounds i32, ptr %6, i64 %4717
  store i32 %4743, ptr %4744, align 4, !tbaa !5
  %4745 = add nuw nsw i64 %4717, 1
  %4746 = icmp eq i64 %4745, %4620
  br i1 %4746, label %4754, label %4716, !llvm.loop !1097

4747:                                             ; preds = %4712, %4739
  store float %4704, ptr %4288, align 4, !tbaa !162
  %4748 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4749:                                             ; preds = %4725, %4731
  %4750 = phi ptr [ %4738, %4731 ], [ %4718, %4725 ]
  %4751 = phi i32 [ %4737, %4731 ], [ 1, %4725 ]
  %4752 = load i32, ptr %4750, align 4, !tbaa !5
  %4753 = add nsw i32 %4752, %4751
  store i32 %4753, ptr %4750, align 4, !tbaa !5
  br label %4754

4754:                                             ; preds = %4741, %4749, %4714, %4697
  %4755 = icmp eq i32 %4706, %5
  br i1 %4755, label %5500, label %4623, !llvm.loop !1098

4756:                                             ; preds = %4606, %4892
  %4757 = phi float [ 0.000000e+00, %4606 ], [ %4840, %4892 ]
  %4758 = phi i32 [ 0, %4606 ], [ %4841, %4892 ]
  %4759 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4607, label %4760, label %4829

4760:                                             ; preds = %4756, %4819
  %4761 = phi i32 [ %4828, %4819 ], [ 0, %4756 ]
  %4762 = phi i64 [ %4770, %4819 ], [ %4611, %4756 ]
  %4763 = phi i64 [ %4827, %4819 ], [ %4610, %4756 ]
  %4764 = phi i32 [ %4825, %4819 ], [ %4759, %4756 ]
  %4765 = sub i32 %4609, %4761
  %4766 = tail call i32 @llvm.smin.i32(i32 %4765, i32 0)
  %4767 = sub i32 %4765, %4766
  %4768 = zext i32 %4767 to i64
  %4769 = add nuw nsw i64 %4768, 1
  %4770 = add nsw i64 %4762, -1
  %4771 = icmp ult i32 %4767, 31
  br i1 %4771, label %4807, label %4772

4772:                                             ; preds = %4760
  %4773 = and i64 %4769, 8589934560
  %4774 = sub i64 %4763, %4773
  br label %4775

4775:                                             ; preds = %4775, %4772
  %4776 = phi i64 [ 0, %4772 ], [ %4799, %4775 ]
  %4777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4795, %4775 ]
  %4778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4796, %4775 ]
  %4779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4797, %4775 ]
  %4780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4798, %4775 ]
  %4781 = sub i64 %4763, %4776
  %4782 = getelementptr inbounds i32, ptr %11, i64 %4781
  %4783 = getelementptr inbounds i32, ptr %4782, i64 -7
  %4784 = load <8 x i32>, ptr %4783, align 4, !tbaa !5
  %4785 = shufflevector <8 x i32> %4784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4786 = getelementptr inbounds i32, ptr %4782, i64 -15
  %4787 = load <8 x i32>, ptr %4786, align 4, !tbaa !5
  %4788 = shufflevector <8 x i32> %4787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4789 = getelementptr inbounds i32, ptr %4782, i64 -23
  %4790 = load <8 x i32>, ptr %4789, align 4, !tbaa !5
  %4791 = shufflevector <8 x i32> %4790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4792 = getelementptr inbounds i32, ptr %4782, i64 -31
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !5
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = mul <8 x i32> %4785, %4777
  %4796 = mul <8 x i32> %4788, %4778
  %4797 = mul <8 x i32> %4791, %4779
  %4798 = mul <8 x i32> %4794, %4780
  %4799 = add nuw i64 %4776, 32
  %4800 = icmp eq i64 %4799, %4773
  br i1 %4800, label %4801, label %4775, !llvm.loop !1099

4801:                                             ; preds = %4775
  %4802 = mul <8 x i32> %4796, %4795
  %4803 = mul <8 x i32> %4797, %4802
  %4804 = mul <8 x i32> %4798, %4803
  %4805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4804)
  %4806 = icmp eq i64 %4769, %4773
  br i1 %4806, label %4819, label %4807

4807:                                             ; preds = %4760, %4801
  %4808 = phi i64 [ %4763, %4760 ], [ %4774, %4801 ]
  %4809 = phi i32 [ 1, %4760 ], [ %4805, %4801 ]
  br label %4810

4810:                                             ; preds = %4807, %4810
  %4811 = phi i64 [ %4816, %4810 ], [ %4808, %4807 ]
  %4812 = phi i32 [ %4815, %4810 ], [ %4809, %4807 ]
  %4813 = getelementptr inbounds i32, ptr %11, i64 %4811
  %4814 = load i32, ptr %4813, align 4, !tbaa !5
  %4815 = mul nsw i32 %4814, %4812
  %4816 = add nsw i64 %4811, -1
  %4817 = trunc i64 %4811 to i32
  %4818 = icmp sgt i32 %4817, 0
  br i1 %4818, label %4810, label %4819, !llvm.loop !1100

4819:                                             ; preds = %4810, %4801
  %4820 = phi i32 [ %4805, %4801 ], [ %4815, %4810 ]
  %4821 = and i64 %4770, 4294967295
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4821
  %4823 = load i32, ptr %4822, align 4, !tbaa !5
  %4824 = mul nsw i32 %4823, %4820
  %4825 = add nsw i32 %4824, %4764
  %4826 = icmp sgt i64 %4762, 2
  %4827 = add nsw i64 %4763, -1
  %4828 = add i32 %4761, 1
  br i1 %4826, label %4760, label %4829, !llvm.loop !1101

4829:                                             ; preds = %4819, %4756
  %4830 = phi i32 [ %4759, %4756 ], [ %4825, %4819 ]
  %4831 = icmp slt i32 %4830, %5
  br i1 %4831, label %4834, label %4832

4832:                                             ; preds = %4829
  %4833 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4834:                                             ; preds = %4829
  %4835 = sext i32 %4830 to i64
  %4836 = getelementptr inbounds double, ptr %4286, i64 %4835
  %4837 = load double, ptr %4836, align 8, !tbaa !18
  %4838 = fptrunc double %4837 to float
  %4839 = tail call fast float @llvm.fabs.f32(float %4838)
  %4840 = fadd fast float %4839, %4757
  store float %4840, ptr %4288, align 4, !tbaa !162
  %4841 = add nuw nsw i32 %4758, 1
  br i1 %4608, label %4842, label %4892

4842:                                             ; preds = %4834
  %4843 = load i32, ptr %4, align 4, !tbaa !5
  %4844 = load i32, ptr %12, align 4, !tbaa !5
  %4845 = add nsw i32 %4844, -1
  %4846 = icmp slt i32 %4843, %4845
  br i1 %4846, label %4869, label %4847

4847:                                             ; preds = %4842
  %4848 = icmp eq i32 %4843, %4845
  br i1 %4848, label %4849, label %4885

4849:                                             ; preds = %4847
  store i32 0, ptr %4, align 4, !tbaa !5
  %4850 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4850, ptr %6, align 4, !tbaa !5
  br i1 %4613, label %4892, label %4851

4851:                                             ; preds = %4849, %4879
  %4852 = phi i64 [ %4883, %4879 ], [ 1, %4849 ]
  %4853 = getelementptr inbounds i32, ptr %4, i64 %4852
  %4854 = load i32, ptr %4853, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %12, i64 %4852
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = add nsw i32 %4856, -1
  %4858 = icmp slt i32 %4854, %4857
  br i1 %4858, label %4859, label %4877

4859:                                             ; preds = %4851
  br i1 %4846, label %4869, label %4860

4860:                                             ; preds = %4859
  %4861 = shl i64 %4852, 32
  %4862 = add i64 %4861, -4294967296
  %4863 = ashr exact i64 %4862, 32
  %4864 = getelementptr inbounds i32, ptr %7, i64 %4863
  %4865 = load i32, ptr %4864, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4852
  %4867 = load i32, ptr %4866, align 4, !tbaa !5
  %4868 = add nsw i32 %4867, %4865
  store i32 %4868, ptr %4866, align 4, !tbaa !5
  br label %4887

4869:                                             ; preds = %4842, %4859
  %4870 = phi i32 [ %4854, %4859 ], [ %4843, %4842 ]
  %4871 = phi ptr [ %4853, %4859 ], [ %4, %4842 ]
  %4872 = phi i64 [ %4852, %4859 ], [ 0, %4842 ]
  %4873 = add nsw i32 %4870, 1
  store i32 %4873, ptr %4871, align 4, !tbaa !5
  %4874 = getelementptr inbounds i32, ptr %7, i64 %4872
  %4875 = load i32, ptr %4874, align 4, !tbaa !5
  %4876 = getelementptr inbounds i32, ptr %6, i64 %4872
  br label %4887

4877:                                             ; preds = %4851
  %4878 = icmp eq i32 %4854, %4857
  br i1 %4878, label %4879, label %4885

4879:                                             ; preds = %4877
  store i32 0, ptr %4853, align 4, !tbaa !5
  %4880 = getelementptr inbounds i32, ptr %8, i64 %4852
  %4881 = load i32, ptr %4880, align 4, !tbaa !5
  %4882 = getelementptr inbounds i32, ptr %6, i64 %4852
  store i32 %4881, ptr %4882, align 4, !tbaa !5
  %4883 = add nuw nsw i64 %4852, 1
  %4884 = icmp eq i64 %4883, %4611
  br i1 %4884, label %4892, label %4851, !llvm.loop !1102

4885:                                             ; preds = %4847, %4877
  %4886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4887:                                             ; preds = %4860, %4869
  %4888 = phi ptr [ %4876, %4869 ], [ %4853, %4860 ]
  %4889 = phi i32 [ %4875, %4869 ], [ 1, %4860 ]
  %4890 = load i32, ptr %4888, align 4, !tbaa !5
  %4891 = add nsw i32 %4890, %4889
  store i32 %4891, ptr %4888, align 4, !tbaa !5
  br label %4892

4892:                                             ; preds = %4879, %4887, %4849, %4834
  %4893 = icmp eq i32 %4841, %5
  br i1 %4893, label %5501, label %4756, !llvm.loop !1103

4894:                                             ; preds = %4294
  %4895 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

4896:                                             ; preds = %18
  %4897 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4898 = load ptr, ptr %4897, align 8, !tbaa !9
  %4899 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4900 = load ptr, ptr %4899, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4900, align 8, !tbaa !18
  %4901 = icmp eq i32 %13, 0
  br i1 %4901, label %4902, label %4905

4902:                                             ; preds = %4896
  %4903 = load double, ptr %4898, align 8, !tbaa !18
  %4904 = tail call fast double @llvm.fabs.f64(double %4903)
  store double %4904, ptr %4900, align 8, !tbaa !18
  br label %5501

4905:                                             ; preds = %4896
  switch i32 %1, label %5493 [
    i32 1, label %4906
    i32 0, label %5201
  ]

4906:                                             ; preds = %4905
  %4907 = getelementptr inbounds i32, ptr %3, i64 %19
  %4908 = load i32, ptr %4907, align 4, !tbaa !5
  %4909 = icmp eq i32 %4908, 0
  %4910 = icmp sgt i32 %5, 0
  br i1 %4909, label %4920, label %4911

4911:                                             ; preds = %4906
  br i1 %4910, label %4912, label %5501

4912:                                             ; preds = %4911
  %4913 = icmp sgt i32 %13, 1
  %4914 = icmp sgt i32 %13, 0
  %4915 = add i32 %13, -2
  %4916 = zext i32 %4915 to i64
  %4917 = zext i32 %13 to i64
  %4918 = add nuw i32 %5, 1
  %4919 = icmp eq i32 %13, 1
  br label %5064

4920:                                             ; preds = %4906
  br i1 %4910, label %4921, label %5501

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %4929

4929:                                             ; preds = %4921, %5062
  %4930 = phi double [ 0.000000e+00, %4921 ], [ %5012, %5062 ]
  %4931 = phi i32 [ 0, %4921 ], [ %5014, %5062 ]
  %4932 = phi double [ 0.000000e+00, %4921 ], [ %5013, %5062 ]
  %4933 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4922, label %4934, label %5003

4934:                                             ; preds = %4929, %4993
  %4935 = phi i32 [ %5002, %4993 ], [ 0, %4929 ]
  %4936 = phi i64 [ %4944, %4993 ], [ %4926, %4929 ]
  %4937 = phi i64 [ %5001, %4993 ], [ %4925, %4929 ]
  %4938 = phi i32 [ %4999, %4993 ], [ %4933, %4929 ]
  %4939 = sub i32 %4924, %4935
  %4940 = tail call i32 @llvm.smin.i32(i32 %4939, i32 0)
  %4941 = sub i32 %4939, %4940
  %4942 = zext i32 %4941 to i64
  %4943 = add nuw nsw i64 %4942, 1
  %4944 = add nsw i64 %4936, -1
  %4945 = icmp ult i32 %4941, 31
  br i1 %4945, label %4981, label %4946

4946:                                             ; preds = %4934
  %4947 = and i64 %4943, 8589934560
  %4948 = sub i64 %4937, %4947
  br label %4949

4949:                                             ; preds = %4949, %4946
  %4950 = phi i64 [ 0, %4946 ], [ %4973, %4949 ]
  %4951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4969, %4949 ]
  %4952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4970, %4949 ]
  %4953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4971, %4949 ]
  %4954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4972, %4949 ]
  %4955 = sub i64 %4937, %4950
  %4956 = getelementptr inbounds i32, ptr %9, i64 %4955
  %4957 = getelementptr inbounds i32, ptr %4956, i64 -7
  %4958 = load <8 x i32>, ptr %4957, align 4, !tbaa !5
  %4959 = shufflevector <8 x i32> %4958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4960 = getelementptr inbounds i32, ptr %4956, i64 -15
  %4961 = load <8 x i32>, ptr %4960, align 4, !tbaa !5
  %4962 = shufflevector <8 x i32> %4961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4963 = getelementptr inbounds i32, ptr %4956, i64 -23
  %4964 = load <8 x i32>, ptr %4963, align 4, !tbaa !5
  %4965 = shufflevector <8 x i32> %4964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4966 = getelementptr inbounds i32, ptr %4956, i64 -31
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !5
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = mul <8 x i32> %4959, %4951
  %4970 = mul <8 x i32> %4962, %4952
  %4971 = mul <8 x i32> %4965, %4953
  %4972 = mul <8 x i32> %4968, %4954
  %4973 = add nuw i64 %4950, 32
  %4974 = icmp eq i64 %4973, %4947
  br i1 %4974, label %4975, label %4949, !llvm.loop !1104

4975:                                             ; preds = %4949
  %4976 = mul <8 x i32> %4970, %4969
  %4977 = mul <8 x i32> %4971, %4976
  %4978 = mul <8 x i32> %4972, %4977
  %4979 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4978)
  %4980 = icmp eq i64 %4943, %4947
  br i1 %4980, label %4993, label %4981

4981:                                             ; preds = %4934, %4975
  %4982 = phi i64 [ %4937, %4934 ], [ %4948, %4975 ]
  %4983 = phi i32 [ 1, %4934 ], [ %4979, %4975 ]
  br label %4984

4984:                                             ; preds = %4981, %4984
  %4985 = phi i64 [ %4990, %4984 ], [ %4982, %4981 ]
  %4986 = phi i32 [ %4989, %4984 ], [ %4983, %4981 ]
  %4987 = getelementptr inbounds i32, ptr %9, i64 %4985
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = mul nsw i32 %4988, %4986
  %4990 = add nsw i64 %4985, -1
  %4991 = trunc i64 %4985 to i32
  %4992 = icmp sgt i32 %4991, 0
  br i1 %4992, label %4984, label %4993, !llvm.loop !1105

4993:                                             ; preds = %4984, %4975
  %4994 = phi i32 [ %4979, %4975 ], [ %4989, %4984 ]
  %4995 = and i64 %4944, 4294967295
  %4996 = getelementptr inbounds i32, ptr %6, i64 %4995
  %4997 = load i32, ptr %4996, align 4, !tbaa !5
  %4998 = mul nsw i32 %4997, %4994
  %4999 = add nsw i32 %4998, %4938
  %5000 = icmp sgt i64 %4936, 2
  %5001 = add nsw i64 %4937, -1
  %5002 = add i32 %4935, 1
  br i1 %5000, label %4934, label %5003, !llvm.loop !1106

5003:                                             ; preds = %4993, %4929
  %5004 = phi i32 [ %4933, %4929 ], [ %4999, %4993 ]
  %5005 = sext i32 %5004 to i64
  %5006 = getelementptr inbounds double, ptr %2, i64 %5005
  %5007 = load double, ptr %5006, align 8, !tbaa !18
  %5008 = getelementptr inbounds double, ptr %4898, i64 %5005
  %5009 = load double, ptr %5008, align 8, !tbaa !18
  %5010 = fmul fast double %5009, %5007
  %5011 = tail call fast double @llvm.fabs.f64(double %5010)
  %5012 = fadd fast double %5011, %4930
  store double %5012, ptr %4900, align 8, !tbaa !18
  %5013 = fadd fast double %5007, %4932
  %5014 = add nuw nsw i32 %4931, 1
  br i1 %4923, label %5015, label %5062

5015:                                             ; preds = %5003
  %5016 = load i32, ptr %4, align 4, !tbaa !5
  %5017 = load i32, ptr %12, align 4, !tbaa !5
  %5018 = add nsw i32 %5017, -1
  %5019 = icmp slt i32 %5016, %5018
  br i1 %5019, label %5039, label %5020

5020:                                             ; preds = %5015
  %5021 = icmp eq i32 %5016, %5018
  br i1 %5021, label %5022, label %5055

5022:                                             ; preds = %5020
  store i32 0, ptr %4, align 4, !tbaa !5
  %5023 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5023, ptr %6, align 4, !tbaa !5
  br i1 %4928, label %5062, label %5024

5024:                                             ; preds = %5022, %5049
  %5025 = phi i64 [ %5053, %5049 ], [ 1, %5022 ]
  %5026 = getelementptr inbounds i32, ptr %4, i64 %5025
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %12, i64 %5025
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = add nsw i32 %5029, -1
  %5031 = icmp slt i32 %5027, %5030
  br i1 %5031, label %5032, label %5047

5032:                                             ; preds = %5024
  br i1 %5019, label %5039, label %5033

5033:                                             ; preds = %5032
  %5034 = getelementptr inbounds i32, ptr %7, i64 %5025
  %5035 = load i32, ptr %5034, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %6, i64 %5025
  %5037 = load i32, ptr %5036, align 4, !tbaa !5
  %5038 = add nsw i32 %5037, %5035
  store i32 %5038, ptr %5036, align 4, !tbaa !5
  br label %5057

5039:                                             ; preds = %5015, %5032
  %5040 = phi i32 [ %5027, %5032 ], [ %5016, %5015 ]
  %5041 = phi ptr [ %5026, %5032 ], [ %4, %5015 ]
  %5042 = phi i64 [ %5025, %5032 ], [ 0, %5015 ]
  %5043 = add nsw i32 %5040, 1
  store i32 %5043, ptr %5041, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %7, i64 %5042
  %5045 = load i32, ptr %5044, align 4, !tbaa !5
  %5046 = getelementptr inbounds i32, ptr %6, i64 %5042
  br label %5057

5047:                                             ; preds = %5024
  %5048 = icmp eq i32 %5027, %5030
  br i1 %5048, label %5049, label %5055

5049:                                             ; preds = %5047
  store i32 0, ptr %5026, align 4, !tbaa !5
  %5050 = getelementptr inbounds i32, ptr %8, i64 %5025
  %5051 = load i32, ptr %5050, align 4, !tbaa !5
  %5052 = getelementptr inbounds i32, ptr %6, i64 %5025
  store i32 %5051, ptr %5052, align 4, !tbaa !5
  %5053 = add nuw nsw i64 %5025, 1
  %5054 = icmp eq i64 %5053, %4926
  br i1 %5054, label %5062, label %5024, !llvm.loop !1107

5055:                                             ; preds = %5020, %5047
  %5056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5057:                                             ; preds = %5033, %5039
  %5058 = phi ptr [ %5046, %5039 ], [ %5026, %5033 ]
  %5059 = phi i32 [ %5045, %5039 ], [ 1, %5033 ]
  %5060 = load i32, ptr %5058, align 4, !tbaa !5
  %5061 = add nsw i32 %5060, %5059
  store i32 %5061, ptr %5058, align 4, !tbaa !5
  br label %5062

5062:                                             ; preds = %5049, %5057, %5022, %5003
  %5063 = icmp eq i32 %5014, %5
  br i1 %5063, label %5501, label %4929, !llvm.loop !1108

5064:                                             ; preds = %4912, %5199
  %5065 = phi double [ 0.000000e+00, %4912 ], [ %5147, %5199 ]
  %5066 = phi i32 [ 0, %4912 ], [ %5148, %5199 ]
  %5067 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4913, label %5068, label %5137

5068:                                             ; preds = %5064, %5127
  %5069 = phi i32 [ %5136, %5127 ], [ 0, %5064 ]
  %5070 = phi i64 [ %5078, %5127 ], [ %4917, %5064 ]
  %5071 = phi i64 [ %5135, %5127 ], [ %4916, %5064 ]
  %5072 = phi i32 [ %5133, %5127 ], [ %5067, %5064 ]
  %5073 = sub i32 %4915, %5069
  %5074 = tail call i32 @llvm.smin.i32(i32 %5073, i32 0)
  %5075 = sub i32 %5073, %5074
  %5076 = zext i32 %5075 to i64
  %5077 = add nuw nsw i64 %5076, 1
  %5078 = add nsw i64 %5070, -1
  %5079 = icmp ult i32 %5075, 31
  br i1 %5079, label %5115, label %5080

5080:                                             ; preds = %5068
  %5081 = and i64 %5077, 8589934560
  %5082 = sub i64 %5071, %5081
  br label %5083

5083:                                             ; preds = %5083, %5080
  %5084 = phi i64 [ 0, %5080 ], [ %5107, %5083 ]
  %5085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5103, %5083 ]
  %5086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5104, %5083 ]
  %5087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5105, %5083 ]
  %5088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5106, %5083 ]
  %5089 = sub i64 %5071, %5084
  %5090 = getelementptr inbounds i32, ptr %11, i64 %5089
  %5091 = getelementptr inbounds i32, ptr %5090, i64 -7
  %5092 = load <8 x i32>, ptr %5091, align 4, !tbaa !5
  %5093 = shufflevector <8 x i32> %5092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5094 = getelementptr inbounds i32, ptr %5090, i64 -15
  %5095 = load <8 x i32>, ptr %5094, align 4, !tbaa !5
  %5096 = shufflevector <8 x i32> %5095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5097 = getelementptr inbounds i32, ptr %5090, i64 -23
  %5098 = load <8 x i32>, ptr %5097, align 4, !tbaa !5
  %5099 = shufflevector <8 x i32> %5098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5100 = getelementptr inbounds i32, ptr %5090, i64 -31
  %5101 = load <8 x i32>, ptr %5100, align 4, !tbaa !5
  %5102 = shufflevector <8 x i32> %5101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5103 = mul <8 x i32> %5093, %5085
  %5104 = mul <8 x i32> %5096, %5086
  %5105 = mul <8 x i32> %5099, %5087
  %5106 = mul <8 x i32> %5102, %5088
  %5107 = add nuw i64 %5084, 32
  %5108 = icmp eq i64 %5107, %5081
  br i1 %5108, label %5109, label %5083, !llvm.loop !1109

5109:                                             ; preds = %5083
  %5110 = mul <8 x i32> %5104, %5103
  %5111 = mul <8 x i32> %5105, %5110
  %5112 = mul <8 x i32> %5106, %5111
  %5113 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5112)
  %5114 = icmp eq i64 %5077, %5081
  br i1 %5114, label %5127, label %5115

5115:                                             ; preds = %5068, %5109
  %5116 = phi i64 [ %5071, %5068 ], [ %5082, %5109 ]
  %5117 = phi i32 [ 1, %5068 ], [ %5113, %5109 ]
  br label %5118

5118:                                             ; preds = %5115, %5118
  %5119 = phi i64 [ %5124, %5118 ], [ %5116, %5115 ]
  %5120 = phi i32 [ %5123, %5118 ], [ %5117, %5115 ]
  %5121 = getelementptr inbounds i32, ptr %11, i64 %5119
  %5122 = load i32, ptr %5121, align 4, !tbaa !5
  %5123 = mul nsw i32 %5122, %5120
  %5124 = add nsw i64 %5119, -1
  %5125 = trunc i64 %5119 to i32
  %5126 = icmp sgt i32 %5125, 0
  br i1 %5126, label %5118, label %5127, !llvm.loop !1110

5127:                                             ; preds = %5118, %5109
  %5128 = phi i32 [ %5113, %5109 ], [ %5123, %5118 ]
  %5129 = and i64 %5078, 4294967295
  %5130 = getelementptr inbounds i32, ptr %6, i64 %5129
  %5131 = load i32, ptr %5130, align 4, !tbaa !5
  %5132 = mul nsw i32 %5131, %5128
  %5133 = add nsw i32 %5132, %5072
  %5134 = icmp sgt i64 %5070, 2
  %5135 = add nsw i64 %5071, -1
  %5136 = add i32 %5069, 1
  br i1 %5134, label %5068, label %5137, !llvm.loop !1111

5137:                                             ; preds = %5127, %5064
  %5138 = phi i32 [ %5067, %5064 ], [ %5133, %5127 ]
  %5139 = icmp slt i32 %5138, %5
  br i1 %5139, label %5142, label %5140

5140:                                             ; preds = %5137
  %5141 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

5142:                                             ; preds = %5137
  %5143 = sext i32 %5138 to i64
  %5144 = getelementptr inbounds double, ptr %4898, i64 %5143
  %5145 = load double, ptr %5144, align 8, !tbaa !18
  %5146 = tail call fast double @llvm.fabs.f64(double %5145)
  %5147 = fadd fast double %5065, %5146
  store double %5147, ptr %4900, align 8, !tbaa !18
  %5148 = add nuw nsw i32 %5066, 1
  br i1 %4914, label %5149, label %5199

5149:                                             ; preds = %5142
  %5150 = load i32, ptr %4, align 4, !tbaa !5
  %5151 = load i32, ptr %12, align 4, !tbaa !5
  %5152 = add nsw i32 %5151, -1
  %5153 = icmp slt i32 %5150, %5152
  br i1 %5153, label %5176, label %5154

5154:                                             ; preds = %5149
  %5155 = icmp eq i32 %5150, %5152
  br i1 %5155, label %5156, label %5192

5156:                                             ; preds = %5154
  store i32 0, ptr %4, align 4, !tbaa !5
  %5157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5157, ptr %6, align 4, !tbaa !5
  br i1 %4919, label %5199, label %5158

5158:                                             ; preds = %5156, %5186
  %5159 = phi i64 [ %5190, %5186 ], [ 1, %5156 ]
  %5160 = getelementptr inbounds i32, ptr %4, i64 %5159
  %5161 = load i32, ptr %5160, align 4, !tbaa !5
  %5162 = getelementptr inbounds i32, ptr %12, i64 %5159
  %5163 = load i32, ptr %5162, align 4, !tbaa !5
  %5164 = add nsw i32 %5163, -1
  %5165 = icmp slt i32 %5161, %5164
  br i1 %5165, label %5166, label %5184

5166:                                             ; preds = %5158
  br i1 %5153, label %5176, label %5167

5167:                                             ; preds = %5166
  %5168 = shl i64 %5159, 32
  %5169 = add i64 %5168, -4294967296
  %5170 = ashr exact i64 %5169, 32
  %5171 = getelementptr inbounds i32, ptr %7, i64 %5170
  %5172 = load i32, ptr %5171, align 4, !tbaa !5
  %5173 = getelementptr inbounds i32, ptr %6, i64 %5159
  %5174 = load i32, ptr %5173, align 4, !tbaa !5
  %5175 = add nsw i32 %5174, %5172
  store i32 %5175, ptr %5173, align 4, !tbaa !5
  br label %5194

5176:                                             ; preds = %5149, %5166
  %5177 = phi i32 [ %5161, %5166 ], [ %5150, %5149 ]
  %5178 = phi ptr [ %5160, %5166 ], [ %4, %5149 ]
  %5179 = phi i64 [ %5159, %5166 ], [ 0, %5149 ]
  %5180 = add nsw i32 %5177, 1
  store i32 %5180, ptr %5178, align 4, !tbaa !5
  %5181 = getelementptr inbounds i32, ptr %7, i64 %5179
  %5182 = load i32, ptr %5181, align 4, !tbaa !5
  %5183 = getelementptr inbounds i32, ptr %6, i64 %5179
  br label %5194

5184:                                             ; preds = %5158
  %5185 = icmp eq i32 %5161, %5164
  br i1 %5185, label %5186, label %5192

5186:                                             ; preds = %5184
  store i32 0, ptr %5160, align 4, !tbaa !5
  %5187 = getelementptr inbounds i32, ptr %8, i64 %5159
  %5188 = load i32, ptr %5187, align 4, !tbaa !5
  %5189 = getelementptr inbounds i32, ptr %6, i64 %5159
  store i32 %5188, ptr %5189, align 4, !tbaa !5
  %5190 = add nuw nsw i64 %5159, 1
  %5191 = icmp eq i64 %5190, %4917
  br i1 %5191, label %5199, label %5158, !llvm.loop !1112

5192:                                             ; preds = %5154, %5184
  %5193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5194:                                             ; preds = %5167, %5176
  %5195 = phi ptr [ %5183, %5176 ], [ %5160, %5167 ]
  %5196 = phi i32 [ %5182, %5176 ], [ 1, %5167 ]
  %5197 = load i32, ptr %5195, align 4, !tbaa !5
  %5198 = add nsw i32 %5197, %5196
  store i32 %5198, ptr %5195, align 4, !tbaa !5
  br label %5199

5199:                                             ; preds = %5186, %5194, %5156, %5142
  %5200 = icmp eq i32 %5148, %5
  br i1 %5200, label %5501, label %5064, !llvm.loop !1113

5201:                                             ; preds = %4905
  %5202 = getelementptr inbounds i32, ptr %3, i64 %19
  %5203 = load i32, ptr %5202, align 4, !tbaa !5
  %5204 = icmp eq i32 %5203, 0
  %5205 = icmp sgt i32 %5, 0
  br i1 %5204, label %5215, label %5206

5206:                                             ; preds = %5201
  br i1 %5205, label %5207, label %5501

5207:                                             ; preds = %5206
  %5208 = icmp sgt i32 %13, 1
  %5209 = icmp sgt i32 %13, 0
  %5210 = add i32 %13, -2
  %5211 = zext i32 %5210 to i64
  %5212 = zext i32 %13 to i64
  %5213 = add nuw i32 %5, 1
  %5214 = icmp eq i32 %13, 1
  br label %5356

5215:                                             ; preds = %5201
  br i1 %5205, label %5216, label %5501

5216:                                             ; preds = %5215
  %5217 = icmp sgt i32 %13, 1
  %5218 = icmp sgt i32 %13, 0
  %5219 = add i32 %13, -2
  %5220 = zext i32 %5219 to i64
  %5221 = zext i32 %13 to i64
  %5222 = add nuw i32 %5, 1
  %5223 = icmp eq i32 %13, 1
  br label %5224

5224:                                             ; preds = %5216, %5354
  %5225 = phi double [ 0.000000e+00, %5216 ], [ %5304, %5354 ]
  %5226 = phi i32 [ 0, %5216 ], [ %5306, %5354 ]
  %5227 = phi double [ 0.000000e+00, %5216 ], [ %5305, %5354 ]
  %5228 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5217, label %5229, label %5298

5229:                                             ; preds = %5224, %5288
  %5230 = phi i32 [ %5297, %5288 ], [ 0, %5224 ]
  %5231 = phi i64 [ %5239, %5288 ], [ %5221, %5224 ]
  %5232 = phi i64 [ %5296, %5288 ], [ %5220, %5224 ]
  %5233 = phi i32 [ %5294, %5288 ], [ %5228, %5224 ]
  %5234 = sub i32 %5219, %5230
  %5235 = tail call i32 @llvm.smin.i32(i32 %5234, i32 0)
  %5236 = sub i32 %5234, %5235
  %5237 = zext i32 %5236 to i64
  %5238 = add nuw nsw i64 %5237, 1
  %5239 = add nsw i64 %5231, -1
  %5240 = icmp ult i32 %5236, 31
  br i1 %5240, label %5276, label %5241

5241:                                             ; preds = %5229
  %5242 = and i64 %5238, 8589934560
  %5243 = sub i64 %5232, %5242
  br label %5244

5244:                                             ; preds = %5244, %5241
  %5245 = phi i64 [ 0, %5241 ], [ %5268, %5244 ]
  %5246 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5264, %5244 ]
  %5247 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5265, %5244 ]
  %5248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5266, %5244 ]
  %5249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5267, %5244 ]
  %5250 = sub i64 %5232, %5245
  %5251 = getelementptr inbounds i32, ptr %9, i64 %5250
  %5252 = getelementptr inbounds i32, ptr %5251, i64 -7
  %5253 = load <8 x i32>, ptr %5252, align 4, !tbaa !5
  %5254 = shufflevector <8 x i32> %5253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5255 = getelementptr inbounds i32, ptr %5251, i64 -15
  %5256 = load <8 x i32>, ptr %5255, align 4, !tbaa !5
  %5257 = shufflevector <8 x i32> %5256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5258 = getelementptr inbounds i32, ptr %5251, i64 -23
  %5259 = load <8 x i32>, ptr %5258, align 4, !tbaa !5
  %5260 = shufflevector <8 x i32> %5259, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5261 = getelementptr inbounds i32, ptr %5251, i64 -31
  %5262 = load <8 x i32>, ptr %5261, align 4, !tbaa !5
  %5263 = shufflevector <8 x i32> %5262, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5264 = mul <8 x i32> %5254, %5246
  %5265 = mul <8 x i32> %5257, %5247
  %5266 = mul <8 x i32> %5260, %5248
  %5267 = mul <8 x i32> %5263, %5249
  %5268 = add nuw i64 %5245, 32
  %5269 = icmp eq i64 %5268, %5242
  br i1 %5269, label %5270, label %5244, !llvm.loop !1114

5270:                                             ; preds = %5244
  %5271 = mul <8 x i32> %5265, %5264
  %5272 = mul <8 x i32> %5266, %5271
  %5273 = mul <8 x i32> %5267, %5272
  %5274 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5273)
  %5275 = icmp eq i64 %5238, %5242
  br i1 %5275, label %5288, label %5276

5276:                                             ; preds = %5229, %5270
  %5277 = phi i64 [ %5232, %5229 ], [ %5243, %5270 ]
  %5278 = phi i32 [ 1, %5229 ], [ %5274, %5270 ]
  br label %5279

5279:                                             ; preds = %5276, %5279
  %5280 = phi i64 [ %5285, %5279 ], [ %5277, %5276 ]
  %5281 = phi i32 [ %5284, %5279 ], [ %5278, %5276 ]
  %5282 = getelementptr inbounds i32, ptr %9, i64 %5280
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = mul nsw i32 %5283, %5281
  %5285 = add nsw i64 %5280, -1
  %5286 = trunc i64 %5280 to i32
  %5287 = icmp sgt i32 %5286, 0
  br i1 %5287, label %5279, label %5288, !llvm.loop !1115

5288:                                             ; preds = %5279, %5270
  %5289 = phi i32 [ %5274, %5270 ], [ %5284, %5279 ]
  %5290 = and i64 %5239, 4294967295
  %5291 = getelementptr inbounds i32, ptr %6, i64 %5290
  %5292 = load i32, ptr %5291, align 4, !tbaa !5
  %5293 = mul nsw i32 %5292, %5289
  %5294 = add nsw i32 %5293, %5233
  %5295 = icmp sgt i64 %5231, 2
  %5296 = add nsw i64 %5232, -1
  %5297 = add i32 %5230, 1
  br i1 %5295, label %5229, label %5298, !llvm.loop !1116

5298:                                             ; preds = %5288, %5224
  %5299 = phi i32 [ %5228, %5224 ], [ %5294, %5288 ]
  %5300 = sext i32 %5299 to i64
  %5301 = getelementptr inbounds double, ptr %4898, i64 %5300
  %5302 = load double, ptr %5301, align 8, !tbaa !18
  %5303 = tail call fast double @llvm.fabs.f64(double %5302)
  %5304 = fadd fast double %5225, %5303
  store double %5304, ptr %4900, align 8, !tbaa !18
  %5305 = fadd fast double %5227, 1.000000e+00
  %5306 = add nuw nsw i32 %5226, 1
  br i1 %5218, label %5307, label %5354

5307:                                             ; preds = %5298
  %5308 = load i32, ptr %4, align 4, !tbaa !5
  %5309 = load i32, ptr %12, align 4, !tbaa !5
  %5310 = add nsw i32 %5309, -1
  %5311 = icmp slt i32 %5308, %5310
  br i1 %5311, label %5331, label %5312

5312:                                             ; preds = %5307
  %5313 = icmp eq i32 %5308, %5310
  br i1 %5313, label %5314, label %5347

5314:                                             ; preds = %5312
  store i32 0, ptr %4, align 4, !tbaa !5
  %5315 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5315, ptr %6, align 4, !tbaa !5
  br i1 %5223, label %5354, label %5316

5316:                                             ; preds = %5314, %5341
  %5317 = phi i64 [ %5345, %5341 ], [ 1, %5314 ]
  %5318 = getelementptr inbounds i32, ptr %4, i64 %5317
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = getelementptr inbounds i32, ptr %12, i64 %5317
  %5321 = load i32, ptr %5320, align 4, !tbaa !5
  %5322 = add nsw i32 %5321, -1
  %5323 = icmp slt i32 %5319, %5322
  br i1 %5323, label %5324, label %5339

5324:                                             ; preds = %5316
  br i1 %5311, label %5331, label %5325

5325:                                             ; preds = %5324
  %5326 = getelementptr inbounds i32, ptr %7, i64 %5317
  %5327 = load i32, ptr %5326, align 4, !tbaa !5
  %5328 = getelementptr inbounds i32, ptr %6, i64 %5317
  %5329 = load i32, ptr %5328, align 4, !tbaa !5
  %5330 = add nsw i32 %5329, %5327
  store i32 %5330, ptr %5328, align 4, !tbaa !5
  br label %5349

5331:                                             ; preds = %5307, %5324
  %5332 = phi i32 [ %5319, %5324 ], [ %5308, %5307 ]
  %5333 = phi ptr [ %5318, %5324 ], [ %4, %5307 ]
  %5334 = phi i64 [ %5317, %5324 ], [ 0, %5307 ]
  %5335 = add nsw i32 %5332, 1
  store i32 %5335, ptr %5333, align 4, !tbaa !5
  %5336 = getelementptr inbounds i32, ptr %7, i64 %5334
  %5337 = load i32, ptr %5336, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %6, i64 %5334
  br label %5349

5339:                                             ; preds = %5316
  %5340 = icmp eq i32 %5319, %5322
  br i1 %5340, label %5341, label %5347

5341:                                             ; preds = %5339
  store i32 0, ptr %5318, align 4, !tbaa !5
  %5342 = getelementptr inbounds i32, ptr %8, i64 %5317
  %5343 = load i32, ptr %5342, align 4, !tbaa !5
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5317
  store i32 %5343, ptr %5344, align 4, !tbaa !5
  %5345 = add nuw nsw i64 %5317, 1
  %5346 = icmp eq i64 %5345, %5221
  br i1 %5346, label %5354, label %5316, !llvm.loop !1117

5347:                                             ; preds = %5312, %5339
  %5348 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5349:                                             ; preds = %5325, %5331
  %5350 = phi ptr [ %5338, %5331 ], [ %5318, %5325 ]
  %5351 = phi i32 [ %5337, %5331 ], [ 1, %5325 ]
  %5352 = load i32, ptr %5350, align 4, !tbaa !5
  %5353 = add nsw i32 %5352, %5351
  store i32 %5353, ptr %5350, align 4, !tbaa !5
  br label %5354

5354:                                             ; preds = %5341, %5349, %5314, %5298
  %5355 = icmp eq i32 %5306, %5
  br i1 %5355, label %5501, label %5224, !llvm.loop !1118

5356:                                             ; preds = %5207, %5491
  %5357 = phi double [ 0.000000e+00, %5207 ], [ %5439, %5491 ]
  %5358 = phi i32 [ 0, %5207 ], [ %5440, %5491 ]
  %5359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5208, label %5360, label %5429

5360:                                             ; preds = %5356, %5419
  %5361 = phi i32 [ %5428, %5419 ], [ 0, %5356 ]
  %5362 = phi i64 [ %5370, %5419 ], [ %5212, %5356 ]
  %5363 = phi i64 [ %5427, %5419 ], [ %5211, %5356 ]
  %5364 = phi i32 [ %5425, %5419 ], [ %5359, %5356 ]
  %5365 = sub i32 %5210, %5361
  %5366 = tail call i32 @llvm.smin.i32(i32 %5365, i32 0)
  %5367 = sub i32 %5365, %5366
  %5368 = zext i32 %5367 to i64
  %5369 = add nuw nsw i64 %5368, 1
  %5370 = add nsw i64 %5362, -1
  %5371 = icmp ult i32 %5367, 31
  br i1 %5371, label %5407, label %5372

5372:                                             ; preds = %5360
  %5373 = and i64 %5369, 8589934560
  %5374 = sub i64 %5363, %5373
  br label %5375

5375:                                             ; preds = %5375, %5372
  %5376 = phi i64 [ 0, %5372 ], [ %5399, %5375 ]
  %5377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5395, %5375 ]
  %5378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5396, %5375 ]
  %5379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5397, %5375 ]
  %5380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5398, %5375 ]
  %5381 = sub i64 %5363, %5376
  %5382 = getelementptr inbounds i32, ptr %11, i64 %5381
  %5383 = getelementptr inbounds i32, ptr %5382, i64 -7
  %5384 = load <8 x i32>, ptr %5383, align 4, !tbaa !5
  %5385 = shufflevector <8 x i32> %5384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5386 = getelementptr inbounds i32, ptr %5382, i64 -15
  %5387 = load <8 x i32>, ptr %5386, align 4, !tbaa !5
  %5388 = shufflevector <8 x i32> %5387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5389 = getelementptr inbounds i32, ptr %5382, i64 -23
  %5390 = load <8 x i32>, ptr %5389, align 4, !tbaa !5
  %5391 = shufflevector <8 x i32> %5390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5392 = getelementptr inbounds i32, ptr %5382, i64 -31
  %5393 = load <8 x i32>, ptr %5392, align 4, !tbaa !5
  %5394 = shufflevector <8 x i32> %5393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5395 = mul <8 x i32> %5385, %5377
  %5396 = mul <8 x i32> %5388, %5378
  %5397 = mul <8 x i32> %5391, %5379
  %5398 = mul <8 x i32> %5394, %5380
  %5399 = add nuw i64 %5376, 32
  %5400 = icmp eq i64 %5399, %5373
  br i1 %5400, label %5401, label %5375, !llvm.loop !1119

5401:                                             ; preds = %5375
  %5402 = mul <8 x i32> %5396, %5395
  %5403 = mul <8 x i32> %5397, %5402
  %5404 = mul <8 x i32> %5398, %5403
  %5405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5404)
  %5406 = icmp eq i64 %5369, %5373
  br i1 %5406, label %5419, label %5407

5407:                                             ; preds = %5360, %5401
  %5408 = phi i64 [ %5363, %5360 ], [ %5374, %5401 ]
  %5409 = phi i32 [ 1, %5360 ], [ %5405, %5401 ]
  br label %5410

5410:                                             ; preds = %5407, %5410
  %5411 = phi i64 [ %5416, %5410 ], [ %5408, %5407 ]
  %5412 = phi i32 [ %5415, %5410 ], [ %5409, %5407 ]
  %5413 = getelementptr inbounds i32, ptr %11, i64 %5411
  %5414 = load i32, ptr %5413, align 4, !tbaa !5
  %5415 = mul nsw i32 %5414, %5412
  %5416 = add nsw i64 %5411, -1
  %5417 = trunc i64 %5411 to i32
  %5418 = icmp sgt i32 %5417, 0
  br i1 %5418, label %5410, label %5419, !llvm.loop !1120

5419:                                             ; preds = %5410, %5401
  %5420 = phi i32 [ %5405, %5401 ], [ %5415, %5410 ]
  %5421 = and i64 %5370, 4294967295
  %5422 = getelementptr inbounds i32, ptr %6, i64 %5421
  %5423 = load i32, ptr %5422, align 4, !tbaa !5
  %5424 = mul nsw i32 %5423, %5420
  %5425 = add nsw i32 %5424, %5364
  %5426 = icmp sgt i64 %5362, 2
  %5427 = add nsw i64 %5363, -1
  %5428 = add i32 %5361, 1
  br i1 %5426, label %5360, label %5429, !llvm.loop !1121

5429:                                             ; preds = %5419, %5356
  %5430 = phi i32 [ %5359, %5356 ], [ %5425, %5419 ]
  %5431 = icmp slt i32 %5430, %5
  br i1 %5431, label %5434, label %5432

5432:                                             ; preds = %5429
  %5433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

5434:                                             ; preds = %5429
  %5435 = sext i32 %5430 to i64
  %5436 = getelementptr inbounds double, ptr %4898, i64 %5435
  %5437 = load double, ptr %5436, align 8, !tbaa !18
  %5438 = tail call fast double @llvm.fabs.f64(double %5437)
  %5439 = fadd fast double %5357, %5438
  store double %5439, ptr %4900, align 8, !tbaa !18
  %5440 = add nuw nsw i32 %5358, 1
  br i1 %5209, label %5441, label %5491

5441:                                             ; preds = %5434
  %5442 = load i32, ptr %4, align 4, !tbaa !5
  %5443 = load i32, ptr %12, align 4, !tbaa !5
  %5444 = add nsw i32 %5443, -1
  %5445 = icmp slt i32 %5442, %5444
  br i1 %5445, label %5468, label %5446

5446:                                             ; preds = %5441
  %5447 = icmp eq i32 %5442, %5444
  br i1 %5447, label %5448, label %5484

5448:                                             ; preds = %5446
  store i32 0, ptr %4, align 4, !tbaa !5
  %5449 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5449, ptr %6, align 4, !tbaa !5
  br i1 %5214, label %5491, label %5450

5450:                                             ; preds = %5448, %5478
  %5451 = phi i64 [ %5482, %5478 ], [ 1, %5448 ]
  %5452 = getelementptr inbounds i32, ptr %4, i64 %5451
  %5453 = load i32, ptr %5452, align 4, !tbaa !5
  %5454 = getelementptr inbounds i32, ptr %12, i64 %5451
  %5455 = load i32, ptr %5454, align 4, !tbaa !5
  %5456 = add nsw i32 %5455, -1
  %5457 = icmp slt i32 %5453, %5456
  br i1 %5457, label %5458, label %5476

5458:                                             ; preds = %5450
  br i1 %5445, label %5468, label %5459

5459:                                             ; preds = %5458
  %5460 = shl i64 %5451, 32
  %5461 = add i64 %5460, -4294967296
  %5462 = ashr exact i64 %5461, 32
  %5463 = getelementptr inbounds i32, ptr %7, i64 %5462
  %5464 = load i32, ptr %5463, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %6, i64 %5451
  %5466 = load i32, ptr %5465, align 4, !tbaa !5
  %5467 = add nsw i32 %5466, %5464
  store i32 %5467, ptr %5465, align 4, !tbaa !5
  br label %5486

5468:                                             ; preds = %5441, %5458
  %5469 = phi i32 [ %5453, %5458 ], [ %5442, %5441 ]
  %5470 = phi ptr [ %5452, %5458 ], [ %4, %5441 ]
  %5471 = phi i64 [ %5451, %5458 ], [ 0, %5441 ]
  %5472 = add nsw i32 %5469, 1
  store i32 %5472, ptr %5470, align 4, !tbaa !5
  %5473 = getelementptr inbounds i32, ptr %7, i64 %5471
  %5474 = load i32, ptr %5473, align 4, !tbaa !5
  %5475 = getelementptr inbounds i32, ptr %6, i64 %5471
  br label %5486

5476:                                             ; preds = %5450
  %5477 = icmp eq i32 %5453, %5456
  br i1 %5477, label %5478, label %5484

5478:                                             ; preds = %5476
  store i32 0, ptr %5452, align 4, !tbaa !5
  %5479 = getelementptr inbounds i32, ptr %8, i64 %5451
  %5480 = load i32, ptr %5479, align 4, !tbaa !5
  %5481 = getelementptr inbounds i32, ptr %6, i64 %5451
  store i32 %5480, ptr %5481, align 4, !tbaa !5
  %5482 = add nuw nsw i64 %5451, 1
  %5483 = icmp eq i64 %5482, %5212
  br i1 %5483, label %5491, label %5450, !llvm.loop !1122

5484:                                             ; preds = %5446, %5476
  %5485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5486:                                             ; preds = %5459, %5468
  %5487 = phi ptr [ %5475, %5468 ], [ %5452, %5459 ]
  %5488 = phi i32 [ %5474, %5468 ], [ 1, %5459 ]
  %5489 = load i32, ptr %5487, align 4, !tbaa !5
  %5490 = add nsw i32 %5489, %5488
  store i32 %5490, ptr %5487, align 4, !tbaa !5
  br label %5491

5491:                                             ; preds = %5478, %5486, %5448, %5434
  %5492 = icmp eq i32 %5440, %5
  br i1 %5492, label %5501, label %5356, !llvm.loop !1123

5493:                                             ; preds = %4905
  %5494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

5495:                                             ; preds = %2020
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  br label %5501

5496:                                             ; preds = %2319
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  br label %5501

5497:                                             ; preds = %3244
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  br label %5501

5498:                                             ; preds = %3543
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  br label %5501

5499:                                             ; preds = %4455
  store float %4405, ptr %4288, align 4, !tbaa !162
  br label %5501

5500:                                             ; preds = %4754
  store float %4704, ptr %4288, align 4, !tbaa !162
  br label %5501

5501:                                             ; preds = %5491, %5354, %5199, %5062, %4892, %4598, %4280, %4143, %3988, %3851, %3681, %3387, %3069, %2931, %2775, %2632, %2457, %2163, %1845, %1707, %1551, %1408, %1233, %1095, %939, %796, %621, %484, %329, %192, %5206, %5215, %4911, %4920, %4605, %4614, %5500, %4300, %4309, %5499, %3995, %4004, %3700, %3709, %3394, %3403, %5498, %3089, %3098, %5497, %2782, %2791, %2477, %2486, %2170, %2179, %5496, %1865, %1874, %5495, %1558, %1567, %1253, %1262, %946, %955, %641, %650, %336, %345, %37, %46, %4902, %5493, %4290, %4894, %3691, %4282, %3079, %3683, %2467, %3071, %1855, %2459, %1243, %1847, %631, %1235, %28, %623, %18
  %5502 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1847 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %3079 ], [ 0.000000e+00, %4282 ], [ 0.000000e+00, %3691 ], [ 0.000000e+00, %4894 ], [ 0.000000e+00, %4290 ], [ 0.000000e+00, %5493 ], [ 0.000000e+00, %4902 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %641 ], [ 0.000000e+00, %955 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1971, %5495 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %5496 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2170 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %2477 ], [ 0.000000e+00, %2791 ], [ 0.000000e+00, %2782 ], [ %3195, %5497 ], [ 0.000000e+00, %3098 ], [ 0.000000e+00, %3089 ], [ %3494, %5498 ], [ 0.000000e+00, %3403 ], [ 0.000000e+00, %3394 ], [ 0.000000e+00, %3709 ], [ 0.000000e+00, %3700 ], [ 0.000000e+00, %4004 ], [ 0.000000e+00, %3995 ], [ %4406, %5499 ], [ 0.000000e+00, %4309 ], [ 0.000000e+00, %4300 ], [ %4705, %5500 ], [ 0.000000e+00, %4614 ], [ 0.000000e+00, %4605 ], [ 0.000000e+00, %4920 ], [ 0.000000e+00, %4911 ], [ 0.000000e+00, %5215 ], [ 0.000000e+00, %5206 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %747, %796 ], [ 0.000000e+00, %939 ], [ %1046, %1095 ], [ 0.000000e+00, %1233 ], [ %1359, %1408 ], [ 0.000000e+00, %1551 ], [ %1658, %1707 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2457 ], [ %2583, %2632 ], [ 0.000000e+00, %2775 ], [ %2882, %2931 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3681 ], [ %3802, %3851 ], [ 0.000000e+00, %3988 ], [ %4094, %4143 ], [ 0.000000e+00, %4280 ], [ 0.000000e+00, %4598 ], [ 0.000000e+00, %4892 ], [ %5013, %5062 ], [ 0.000000e+00, %5199 ], [ %5305, %5354 ], [ 0.000000e+00, %5491 ]
  %5503 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1235 ], [ 1, %631 ], [ 1, %1847 ], [ 1, %1243 ], [ 1, %2459 ], [ 1, %1855 ], [ 1, %3071 ], [ 1, %2467 ], [ 1, %3683 ], [ 1, %3079 ], [ 1, %4282 ], [ 1, %3691 ], [ 1, %4894 ], [ 1, %4290 ], [ 1, %5493 ], [ 1, %4902 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %650 ], [ 1, %641 ], [ 1, %955 ], [ 1, %946 ], [ 1, %1262 ], [ 1, %1253 ], [ 1, %1567 ], [ 1, %1558 ], [ %1881, %5495 ], [ 1, %1874 ], [ 1, %1865 ], [ %2186, %5496 ], [ 1, %2179 ], [ 1, %2170 ], [ 1, %2486 ], [ 1, %2477 ], [ 1, %2791 ], [ 1, %2782 ], [ %3105, %5497 ], [ 1, %3098 ], [ 1, %3089 ], [ %3410, %5498 ], [ 1, %3403 ], [ 1, %3394 ], [ 1, %3709 ], [ 1, %3700 ], [ 1, %4004 ], [ 1, %3995 ], [ %4316, %5499 ], [ 1, %4309 ], [ 1, %4300 ], [ %4621, %5500 ], [ 1, %4614 ], [ 1, %4605 ], [ 1, %4920 ], [ 1, %4911 ], [ 1, %5215 ], [ 1, %5206 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %657, %796 ], [ %648, %939 ], [ %962, %1095 ], [ %953, %1233 ], [ %1269, %1408 ], [ %1260, %1551 ], [ %1574, %1707 ], [ %1565, %1845 ], [ %1872, %2163 ], [ %2177, %2457 ], [ %2493, %2632 ], [ %2484, %2775 ], [ %2798, %2931 ], [ %2789, %3069 ], [ %3096, %3387 ], [ %3401, %3681 ], [ %3716, %3851 ], [ %3707, %3988 ], [ %4011, %4143 ], [ %4002, %4280 ], [ %4307, %4598 ], [ %4612, %4892 ], [ %4927, %5062 ], [ %4918, %5199 ], [ %5222, %5354 ], [ %5213, %5491 ]
  %5504 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5503, ptr noundef nonnull @.str.5) #3
  %5505 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5502, ptr noundef nonnull @.str.6) #3
  br label %5506

5506:                                             ; preds = %5055, %5140, %5192, %5347, %5432, %5484, %4448, %4533, %4591, %4747, %4832, %4885, %3844, %3929, %3981, %4136, %4221, %4273, %3237, %3322, %3380, %3536, %3621, %3674, %2625, %2709, %2768, %2924, %3008, %3062, %2013, %2098, %2156, %2312, %2397, %2450, %1401, %1485, %1544, %1700, %1784, %1838, %789, %873, %932, %1088, %1172, %1226, %185, %269, %322, %477, %561, %614, %5501
  %5507 = phi i32 [ 0, %5501 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1226 ], [ -1, %1172 ], [ -1, %1088 ], [ -1, %932 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1838 ], [ -1, %1784 ], [ -1, %1700 ], [ -1, %1544 ], [ -1, %1485 ], [ -1, %1401 ], [ -1, %2450 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2156 ], [ -1, %2098 ], [ -1, %2013 ], [ -1, %3062 ], [ -1, %3008 ], [ -1, %2924 ], [ -1, %2768 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3674 ], [ -1, %3621 ], [ -1, %3536 ], [ -1, %3380 ], [ -1, %3322 ], [ -1, %3237 ], [ -1, %4273 ], [ -1, %4221 ], [ -1, %4136 ], [ -1, %3981 ], [ -1, %3929 ], [ -1, %3844 ], [ -1, %4885 ], [ -1, %4832 ], [ -1, %4747 ], [ -1, %4591 ], [ -1, %4533 ], [ -1, %4448 ], [ -1, %5484 ], [ -1, %5432 ], [ -1, %5347 ], [ -1, %5192 ], [ -1, %5140 ], [ -1, %5055 ]
  ret i32 %5507
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5522 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1237
    i32 104, label %1849
    i32 105, label %2461
    i32 106, label %3073
    i32 107, label %3685
    i32 108, label %4297
    i32 109, label %4904
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !162
  %30 = fptoui float %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5522

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5522

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5522

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1124

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1125

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1126

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds float, ptr %24, i64 %130
  %134 = load float, ptr %133, align 4, !tbaa !162
  %135 = fptoui float %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %137
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !1127

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5522, label %55, !llvm.loop !1128

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !1129

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !1130

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !1131

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds float, ptr %24, i64 %273
  %275 = load float, ptr %274, align 4, !tbaa !162
  %276 = fptoui float %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !1132

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5522, label %194, !llvm.loop !1133

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5522

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5522

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !1134

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !1135

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !1136

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds float, ptr %24, i64 %429
  %431 = load float, ptr %430, align 4, !tbaa !162
  %432 = fptoui float %431 to i8
  %433 = load i8, ptr %26, align 1, !tbaa !11
  %434 = add i8 %433, %432
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !1137

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5522, label %354, !llvm.loop !1138

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !1139

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !1140

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !1141

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds float, ptr %24, i64 %564
  %566 = load float, ptr %565, align 4, !tbaa !162
  %567 = fptoui float %566 to i8
  %568 = load i8, ptr %26, align 1, !tbaa !11
  %569 = add i8 %568, %567
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !1142

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5522, label %486, !llvm.loop !1143

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %635

631:                                              ; preds = %625
  %632 = load float, ptr %627, align 4, !tbaa !162
  %633 = fptosi float %632 to i32
  %634 = tail call i32 @llvm.abs.i32(i32 %633, i1 true)
  store i32 %634, ptr %629, align 4, !tbaa !5
  br label %5522

635:                                              ; preds = %625
  switch i32 %1, label %1235 [
    i32 1, label %636
    i32 0, label %941
  ]

636:                                              ; preds = %635
  %637 = getelementptr inbounds i32, ptr %3, i64 %19
  %638 = load i32, ptr %637, align 4, !tbaa !5
  %639 = icmp eq i32 %638, 0
  %640 = icmp sgt i32 %5, 0
  br i1 %639, label %650, label %641

641:                                              ; preds = %636
  br i1 %640, label %642, label %5522

642:                                              ; preds = %641
  %643 = icmp sgt i32 %13, 1
  %644 = icmp sgt i32 %13, 0
  %645 = add i32 %13, -2
  %646 = zext i32 %645 to i64
  %647 = zext i32 %13 to i64
  %648 = add nuw i32 %5, 1
  %649 = icmp eq i32 %13, 1
  br label %798

650:                                              ; preds = %636
  br i1 %640, label %651, label %5522

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %659

659:                                              ; preds = %651, %796
  %660 = phi i32 [ 0, %651 ], [ %748, %796 ]
  %661 = phi double [ 0.000000e+00, %651 ], [ %747, %796 ]
  %662 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %663, label %732

663:                                              ; preds = %659, %722
  %664 = phi i32 [ %731, %722 ], [ 0, %659 ]
  %665 = phi i64 [ %673, %722 ], [ %656, %659 ]
  %666 = phi i64 [ %730, %722 ], [ %655, %659 ]
  %667 = phi i32 [ %728, %722 ], [ %662, %659 ]
  %668 = sub i32 %654, %664
  %669 = tail call i32 @llvm.smin.i32(i32 %668, i32 0)
  %670 = sub i32 %668, %669
  %671 = zext i32 %670 to i64
  %672 = add nuw nsw i64 %671, 1
  %673 = add nsw i64 %665, -1
  %674 = icmp ult i32 %670, 31
  br i1 %674, label %710, label %675

675:                                              ; preds = %663
  %676 = and i64 %672, 8589934560
  %677 = sub i64 %666, %676
  br label %678

678:                                              ; preds = %678, %675
  %679 = phi i64 [ 0, %675 ], [ %702, %678 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %698, %678 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %699, %678 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %700, %678 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %701, %678 ]
  %684 = sub i64 %666, %679
  %685 = getelementptr inbounds i32, ptr %9, i64 %684
  %686 = getelementptr inbounds i32, ptr %685, i64 -7
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %685, i64 -15
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %685, i64 -23
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %685, i64 -31
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = mul <8 x i32> %688, %680
  %699 = mul <8 x i32> %691, %681
  %700 = mul <8 x i32> %694, %682
  %701 = mul <8 x i32> %697, %683
  %702 = add nuw i64 %679, 32
  %703 = icmp eq i64 %702, %676
  br i1 %703, label %704, label %678, !llvm.loop !1144

704:                                              ; preds = %678
  %705 = mul <8 x i32> %699, %698
  %706 = mul <8 x i32> %700, %705
  %707 = mul <8 x i32> %701, %706
  %708 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %707)
  %709 = icmp eq i64 %672, %676
  br i1 %709, label %722, label %710

710:                                              ; preds = %663, %704
  %711 = phi i64 [ %666, %663 ], [ %677, %704 ]
  %712 = phi i32 [ 1, %663 ], [ %708, %704 ]
  br label %713

713:                                              ; preds = %710, %713
  %714 = phi i64 [ %719, %713 ], [ %711, %710 ]
  %715 = phi i32 [ %718, %713 ], [ %712, %710 ]
  %716 = getelementptr inbounds i32, ptr %9, i64 %714
  %717 = load i32, ptr %716, align 4, !tbaa !5
  %718 = mul nsw i32 %717, %715
  %719 = add nsw i64 %714, -1
  %720 = trunc i64 %714 to i32
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %713, label %722, !llvm.loop !1145

722:                                              ; preds = %713, %704
  %723 = phi i32 [ %708, %704 ], [ %718, %713 ]
  %724 = and i64 %673, 4294967295
  %725 = getelementptr inbounds i32, ptr %6, i64 %724
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %723
  %728 = add nsw i32 %727, %667
  %729 = icmp sgt i64 %665, 2
  %730 = add nsw i64 %666, -1
  %731 = add i32 %664, 1
  br i1 %729, label %663, label %732, !llvm.loop !1146

732:                                              ; preds = %722, %659
  %733 = phi i32 [ %662, %659 ], [ %728, %722 ]
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds double, ptr %2, i64 %734
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = getelementptr inbounds float, ptr %627, i64 %734
  %738 = load float, ptr %737, align 4, !tbaa !162
  %739 = fptosi float %738 to i32
  %740 = load i32, ptr %629, align 4, !tbaa !5
  %741 = sitofp i32 %740 to double
  %742 = sitofp i32 %739 to double
  %743 = fmul fast double %736, %742
  %744 = tail call fast double @llvm.fabs.f64(double %743)
  %745 = fadd fast double %744, %741
  %746 = fptosi double %745 to i32
  store i32 %746, ptr %629, align 4, !tbaa !5
  %747 = fadd fast double %736, %661
  %748 = add nuw nsw i32 %660, 1
  br i1 %653, label %749, label %796

749:                                              ; preds = %732
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %658, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %656
  br i1 %788, label %796, label %758, !llvm.loop !1147

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %732
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5522, label %659, !llvm.loop !1148

798:                                              ; preds = %642, %939
  %799 = phi i32 [ 0, %642 ], [ %888, %939 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %643, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %647, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %646, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %645, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !1149

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !1150

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !1151

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds float, ptr %627, i64 %876
  %878 = load float, ptr %877, align 4, !tbaa !162
  %879 = fptosi float %878 to i32
  %880 = load i32, ptr %629, align 4, !tbaa !5
  %881 = sitofp i32 %880 to double
  %882 = sitofp i32 %879 to double
  %883 = icmp slt i32 %879, 0
  %884 = fneg fast double %882
  %885 = select fast i1 %883, double %884, double %882
  %886 = fadd fast double %885, %881
  %887 = fptosi double %886 to i32
  store i32 %887, ptr %629, align 4, !tbaa !5
  %888 = add nuw nsw i32 %799, 1
  br i1 %644, label %889, label %939

889:                                              ; preds = %875
  %890 = load i32, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %12, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %890, %892
  br i1 %893, label %916, label %894

894:                                              ; preds = %889
  %895 = icmp eq i32 %890, %892
  br i1 %895, label %896, label %932

896:                                              ; preds = %894
  store i32 0, ptr %4, align 4, !tbaa !5
  %897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %897, ptr %6, align 4, !tbaa !5
  br i1 %649, label %939, label %898

898:                                              ; preds = %896, %926
  %899 = phi i64 [ %930, %926 ], [ 1, %896 ]
  %900 = getelementptr inbounds i32, ptr %4, i64 %899
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %12, i64 %899
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %901, %904
  br i1 %905, label %906, label %924

906:                                              ; preds = %898
  br i1 %893, label %916, label %907

907:                                              ; preds = %906
  %908 = shl i64 %899, 32
  %909 = add i64 %908, -4294967296
  %910 = ashr exact i64 %909, 32
  %911 = getelementptr inbounds i32, ptr %7, i64 %910
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %899
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = add nsw i32 %914, %912
  store i32 %915, ptr %913, align 4, !tbaa !5
  br label %934

916:                                              ; preds = %889, %906
  %917 = phi i32 [ %901, %906 ], [ %890, %889 ]
  %918 = phi ptr [ %900, %906 ], [ %4, %889 ]
  %919 = phi i64 [ %899, %906 ], [ 0, %889 ]
  %920 = add nsw i32 %917, 1
  store i32 %920, ptr %918, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %7, i64 %919
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %919
  br label %934

924:                                              ; preds = %898
  %925 = icmp eq i32 %901, %904
  br i1 %925, label %926, label %932

926:                                              ; preds = %924
  store i32 0, ptr %900, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %8, i64 %899
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %6, i64 %899
  store i32 %928, ptr %929, align 4, !tbaa !5
  %930 = add nuw nsw i64 %899, 1
  %931 = icmp eq i64 %930, %647
  br i1 %931, label %939, label %898, !llvm.loop !1152

932:                                              ; preds = %894, %924
  %933 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

934:                                              ; preds = %907, %916
  %935 = phi ptr [ %923, %916 ], [ %900, %907 ]
  %936 = phi i32 [ %922, %916 ], [ 1, %907 ]
  %937 = load i32, ptr %935, align 4, !tbaa !5
  %938 = add nsw i32 %937, %936
  store i32 %938, ptr %935, align 4, !tbaa !5
  br label %939

939:                                              ; preds = %926, %934, %896, %875
  %940 = icmp eq i32 %888, %5
  br i1 %940, label %5522, label %798, !llvm.loop !1153

941:                                              ; preds = %635
  %942 = getelementptr inbounds i32, ptr %3, i64 %19
  %943 = load i32, ptr %942, align 4, !tbaa !5
  %944 = icmp eq i32 %943, 0
  %945 = icmp sgt i32 %5, 0
  br i1 %944, label %955, label %946

946:                                              ; preds = %941
  br i1 %945, label %947, label %5522

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %1097

955:                                              ; preds = %941
  br i1 %945, label %956, label %5522

956:                                              ; preds = %955
  %957 = icmp sgt i32 %13, 1
  %958 = icmp sgt i32 %13, 0
  %959 = add i32 %13, -2
  %960 = zext i32 %959 to i64
  %961 = zext i32 %13 to i64
  %962 = add nuw i32 %5, 1
  %963 = icmp eq i32 %13, 1
  br label %964

964:                                              ; preds = %956, %1095
  %965 = phi i32 [ 0, %956 ], [ %1047, %1095 ]
  %966 = phi double [ 0.000000e+00, %956 ], [ %1046, %1095 ]
  %967 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %957, label %968, label %1037

968:                                              ; preds = %964, %1027
  %969 = phi i32 [ %1036, %1027 ], [ 0, %964 ]
  %970 = phi i64 [ %978, %1027 ], [ %961, %964 ]
  %971 = phi i64 [ %1035, %1027 ], [ %960, %964 ]
  %972 = phi i32 [ %1033, %1027 ], [ %967, %964 ]
  %973 = sub i32 %959, %969
  %974 = tail call i32 @llvm.smin.i32(i32 %973, i32 0)
  %975 = sub i32 %973, %974
  %976 = zext i32 %975 to i64
  %977 = add nuw nsw i64 %976, 1
  %978 = add nsw i64 %970, -1
  %979 = icmp ult i32 %975, 31
  br i1 %979, label %1015, label %980

980:                                              ; preds = %968
  %981 = and i64 %977, 8589934560
  %982 = sub i64 %971, %981
  br label %983

983:                                              ; preds = %983, %980
  %984 = phi i64 [ 0, %980 ], [ %1007, %983 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1003, %983 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1004, %983 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1005, %983 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1006, %983 ]
  %989 = sub i64 %971, %984
  %990 = getelementptr inbounds i32, ptr %9, i64 %989
  %991 = getelementptr inbounds i32, ptr %990, i64 -7
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %990, i64 -15
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %990, i64 -23
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %990, i64 -31
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = mul <8 x i32> %993, %985
  %1004 = mul <8 x i32> %996, %986
  %1005 = mul <8 x i32> %999, %987
  %1006 = mul <8 x i32> %1002, %988
  %1007 = add nuw i64 %984, 32
  %1008 = icmp eq i64 %1007, %981
  br i1 %1008, label %1009, label %983, !llvm.loop !1154

1009:                                             ; preds = %983
  %1010 = mul <8 x i32> %1004, %1003
  %1011 = mul <8 x i32> %1005, %1010
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1012)
  %1014 = icmp eq i64 %977, %981
  br i1 %1014, label %1027, label %1015

1015:                                             ; preds = %968, %1009
  %1016 = phi i64 [ %971, %968 ], [ %982, %1009 ]
  %1017 = phi i32 [ 1, %968 ], [ %1013, %1009 ]
  br label %1018

1018:                                             ; preds = %1015, %1018
  %1019 = phi i64 [ %1024, %1018 ], [ %1016, %1015 ]
  %1020 = phi i32 [ %1023, %1018 ], [ %1017, %1015 ]
  %1021 = getelementptr inbounds i32, ptr %9, i64 %1019
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1020
  %1024 = add nsw i64 %1019, -1
  %1025 = trunc i64 %1019 to i32
  %1026 = icmp sgt i32 %1025, 0
  br i1 %1026, label %1018, label %1027, !llvm.loop !1155

1027:                                             ; preds = %1018, %1009
  %1028 = phi i32 [ %1013, %1009 ], [ %1023, %1018 ]
  %1029 = and i64 %978, 4294967295
  %1030 = getelementptr inbounds i32, ptr %6, i64 %1029
  %1031 = load i32, ptr %1030, align 4, !tbaa !5
  %1032 = mul nsw i32 %1031, %1028
  %1033 = add nsw i32 %1032, %972
  %1034 = icmp sgt i64 %970, 2
  %1035 = add nsw i64 %971, -1
  %1036 = add i32 %969, 1
  br i1 %1034, label %968, label %1037, !llvm.loop !1156

1037:                                             ; preds = %1027, %964
  %1038 = phi i32 [ %967, %964 ], [ %1033, %1027 ]
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds float, ptr %627, i64 %1039
  %1041 = load float, ptr %1040, align 4, !tbaa !162
  %1042 = fptosi float %1041 to i32
  %1043 = load i32, ptr %629, align 4, !tbaa !5
  %1044 = tail call i32 @llvm.abs.i32(i32 %1042, i1 true)
  %1045 = add nsw i32 %1044, %1043
  store i32 %1045, ptr %629, align 4, !tbaa !5
  %1046 = fadd fast double %966, 1.000000e+00
  %1047 = add nuw nsw i32 %965, 1
  br i1 %958, label %1048, label %1095

1048:                                             ; preds = %1037
  %1049 = load i32, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %12, align 4, !tbaa !5
  %1051 = add nsw i32 %1050, -1
  %1052 = icmp slt i32 %1049, %1051
  br i1 %1052, label %1072, label %1053

1053:                                             ; preds = %1048
  %1054 = icmp eq i32 %1049, %1051
  br i1 %1054, label %1055, label %1088

1055:                                             ; preds = %1053
  store i32 0, ptr %4, align 4, !tbaa !5
  %1056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1056, ptr %6, align 4, !tbaa !5
  br i1 %963, label %1095, label %1057

1057:                                             ; preds = %1055, %1082
  %1058 = phi i64 [ %1086, %1082 ], [ 1, %1055 ]
  %1059 = getelementptr inbounds i32, ptr %4, i64 %1058
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %12, i64 %1058
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = add nsw i32 %1062, -1
  %1064 = icmp slt i32 %1060, %1063
  br i1 %1064, label %1065, label %1080

1065:                                             ; preds = %1057
  br i1 %1052, label %1072, label %1066

1066:                                             ; preds = %1065
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1058
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1058
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = add nsw i32 %1070, %1068
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  br label %1090

1072:                                             ; preds = %1048, %1065
  %1073 = phi i32 [ %1060, %1065 ], [ %1049, %1048 ]
  %1074 = phi ptr [ %1059, %1065 ], [ %4, %1048 ]
  %1075 = phi i64 [ %1058, %1065 ], [ 0, %1048 ]
  %1076 = add nsw i32 %1073, 1
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %7, i64 %1075
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1075
  br label %1090

1080:                                             ; preds = %1057
  %1081 = icmp eq i32 %1060, %1063
  br i1 %1081, label %1082, label %1088

1082:                                             ; preds = %1080
  store i32 0, ptr %1059, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %8, i64 %1058
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %6, i64 %1058
  store i32 %1084, ptr %1085, align 4, !tbaa !5
  %1086 = add nuw nsw i64 %1058, 1
  %1087 = icmp eq i64 %1086, %961
  br i1 %1087, label %1095, label %1057, !llvm.loop !1157

1088:                                             ; preds = %1053, %1080
  %1089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1090:                                             ; preds = %1066, %1072
  %1091 = phi ptr [ %1079, %1072 ], [ %1059, %1066 ]
  %1092 = phi i32 [ %1078, %1072 ], [ 1, %1066 ]
  %1093 = load i32, ptr %1091, align 4, !tbaa !5
  %1094 = add nsw i32 %1093, %1092
  store i32 %1094, ptr %1091, align 4, !tbaa !5
  br label %1095

1095:                                             ; preds = %1082, %1090, %1055, %1037
  %1096 = icmp eq i32 %1047, %5
  br i1 %1096, label %5522, label %964, !llvm.loop !1158

1097:                                             ; preds = %947, %1233
  %1098 = phi i32 [ 0, %947 ], [ %1182, %1233 ]
  %1099 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1100, label %1169

1100:                                             ; preds = %1097, %1159
  %1101 = phi i32 [ %1168, %1159 ], [ 0, %1097 ]
  %1102 = phi i64 [ %1110, %1159 ], [ %952, %1097 ]
  %1103 = phi i64 [ %1167, %1159 ], [ %951, %1097 ]
  %1104 = phi i32 [ %1165, %1159 ], [ %1099, %1097 ]
  %1105 = sub i32 %950, %1101
  %1106 = tail call i32 @llvm.smin.i32(i32 %1105, i32 0)
  %1107 = sub i32 %1105, %1106
  %1108 = zext i32 %1107 to i64
  %1109 = add nuw nsw i64 %1108, 1
  %1110 = add nsw i64 %1102, -1
  %1111 = icmp ult i32 %1107, 31
  br i1 %1111, label %1147, label %1112

1112:                                             ; preds = %1100
  %1113 = and i64 %1109, 8589934560
  %1114 = sub i64 %1103, %1113
  br label %1115

1115:                                             ; preds = %1115, %1112
  %1116 = phi i64 [ 0, %1112 ], [ %1139, %1115 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1135, %1115 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1136, %1115 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1137, %1115 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1138, %1115 ]
  %1121 = sub i64 %1103, %1116
  %1122 = getelementptr inbounds i32, ptr %11, i64 %1121
  %1123 = getelementptr inbounds i32, ptr %1122, i64 -7
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1122, i64 -15
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1122, i64 -23
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !5
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1122, i64 -31
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !5
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = mul <8 x i32> %1125, %1117
  %1136 = mul <8 x i32> %1128, %1118
  %1137 = mul <8 x i32> %1131, %1119
  %1138 = mul <8 x i32> %1134, %1120
  %1139 = add nuw i64 %1116, 32
  %1140 = icmp eq i64 %1139, %1113
  br i1 %1140, label %1141, label %1115, !llvm.loop !1159

1141:                                             ; preds = %1115
  %1142 = mul <8 x i32> %1136, %1135
  %1143 = mul <8 x i32> %1137, %1142
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1144)
  %1146 = icmp eq i64 %1109, %1113
  br i1 %1146, label %1159, label %1147

1147:                                             ; preds = %1100, %1141
  %1148 = phi i64 [ %1103, %1100 ], [ %1114, %1141 ]
  %1149 = phi i32 [ 1, %1100 ], [ %1145, %1141 ]
  br label %1150

1150:                                             ; preds = %1147, %1150
  %1151 = phi i64 [ %1156, %1150 ], [ %1148, %1147 ]
  %1152 = phi i32 [ %1155, %1150 ], [ %1149, %1147 ]
  %1153 = getelementptr inbounds i32, ptr %11, i64 %1151
  %1154 = load i32, ptr %1153, align 4, !tbaa !5
  %1155 = mul nsw i32 %1154, %1152
  %1156 = add nsw i64 %1151, -1
  %1157 = trunc i64 %1151 to i32
  %1158 = icmp sgt i32 %1157, 0
  br i1 %1158, label %1150, label %1159, !llvm.loop !1160

1159:                                             ; preds = %1150, %1141
  %1160 = phi i32 [ %1145, %1141 ], [ %1155, %1150 ]
  %1161 = and i64 %1110, 4294967295
  %1162 = getelementptr inbounds i32, ptr %6, i64 %1161
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = mul nsw i32 %1163, %1160
  %1165 = add nsw i32 %1164, %1104
  %1166 = icmp sgt i64 %1102, 2
  %1167 = add nsw i64 %1103, -1
  %1168 = add i32 %1101, 1
  br i1 %1166, label %1100, label %1169, !llvm.loop !1161

1169:                                             ; preds = %1159, %1097
  %1170 = phi i32 [ %1099, %1097 ], [ %1165, %1159 ]
  %1171 = icmp slt i32 %1170, %5
  br i1 %1171, label %1174, label %1172

1172:                                             ; preds = %1169
  %1173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1174:                                             ; preds = %1169
  %1175 = sext i32 %1170 to i64
  %1176 = getelementptr inbounds float, ptr %627, i64 %1175
  %1177 = load float, ptr %1176, align 4, !tbaa !162
  %1178 = fptosi float %1177 to i32
  %1179 = load i32, ptr %629, align 4, !tbaa !5
  %1180 = tail call i32 @llvm.abs.i32(i32 %1178, i1 true)
  %1181 = add nsw i32 %1180, %1179
  store i32 %1181, ptr %629, align 4, !tbaa !5
  %1182 = add nuw nsw i32 %1098, 1
  br i1 %949, label %1183, label %1233

1183:                                             ; preds = %1174
  %1184 = load i32, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %12, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1184, %1186
  br i1 %1187, label %1210, label %1188

1188:                                             ; preds = %1183
  %1189 = icmp eq i32 %1184, %1186
  br i1 %1189, label %1190, label %1226

1190:                                             ; preds = %1188
  store i32 0, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1191, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1233, label %1192

1192:                                             ; preds = %1190, %1220
  %1193 = phi i64 [ %1224, %1220 ], [ 1, %1190 ]
  %1194 = getelementptr inbounds i32, ptr %4, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %12, i64 %1193
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1195, %1198
  br i1 %1199, label %1200, label %1218

1200:                                             ; preds = %1192
  br i1 %1187, label %1210, label %1201

1201:                                             ; preds = %1200
  %1202 = shl i64 %1193, 32
  %1203 = add i64 %1202, -4294967296
  %1204 = ashr exact i64 %1203, 32
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1193
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, %1206
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  br label %1228

1210:                                             ; preds = %1183, %1200
  %1211 = phi i32 [ %1195, %1200 ], [ %1184, %1183 ]
  %1212 = phi ptr [ %1194, %1200 ], [ %4, %1183 ]
  %1213 = phi i64 [ %1193, %1200 ], [ 0, %1183 ]
  %1214 = add nsw i32 %1211, 1
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1213
  br label %1228

1218:                                             ; preds = %1192
  %1219 = icmp eq i32 %1195, %1198
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1218
  store i32 0, ptr %1194, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %8, i64 %1193
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1193
  store i32 %1222, ptr %1223, align 4, !tbaa !5
  %1224 = add nuw nsw i64 %1193, 1
  %1225 = icmp eq i64 %1224, %952
  br i1 %1225, label %1233, label %1192, !llvm.loop !1162

1226:                                             ; preds = %1188, %1218
  %1227 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1228:                                             ; preds = %1201, %1210
  %1229 = phi ptr [ %1217, %1210 ], [ %1194, %1201 ]
  %1230 = phi i32 [ %1216, %1210 ], [ 1, %1201 ]
  %1231 = load i32, ptr %1229, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1230
  store i32 %1232, ptr %1229, align 4, !tbaa !5
  br label %1233

1233:                                             ; preds = %1220, %1228, %1190, %1174
  %1234 = icmp eq i32 %1182, %5
  br i1 %1234, label %5522, label %1097, !llvm.loop !1163

1235:                                             ; preds = %635
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

1237:                                             ; preds = %18
  %1238 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  %1240 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  store i8 0, ptr %1241, align 1, !tbaa !11
  %1242 = icmp eq i32 %13, 0
  br i1 %1242, label %1243, label %1247

1243:                                             ; preds = %1237
  %1244 = load float, ptr %1239, align 4, !tbaa !162
  %1245 = fptosi float %1244 to i8
  %1246 = tail call i8 @llvm.abs.i8(i8 %1245, i1 false)
  store i8 %1246, ptr %1241, align 1, !tbaa !11
  br label %5522

1247:                                             ; preds = %1237
  switch i32 %1, label %1847 [
    i32 1, label %1248
    i32 0, label %1553
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %5522

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1410

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %5522

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1408
  %1272 = phi i32 [ 0, %1263 ], [ %1360, %1408 ]
  %1273 = phi double [ 0.000000e+00, %1263 ], [ %1359, %1408 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1275, label %1344

1275:                                             ; preds = %1271, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1271 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1268, %1271 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1267, %1271 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1271 ]
  %1280 = sub i32 %1266, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !1164

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !1165

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !1166

1344:                                             ; preds = %1334, %1271
  %1345 = phi i32 [ %1274, %1271 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds float, ptr %1239, i64 %1346
  %1350 = load float, ptr %1349, align 4, !tbaa !162
  %1351 = fptosi float %1350 to i8
  %1352 = load i8, ptr %1241, align 1, !tbaa !11
  %1353 = sitofp i8 %1352 to double
  %1354 = sitofp i8 %1351 to double
  %1355 = fmul fast double %1348, %1354
  %1356 = tail call fast double @llvm.fabs.f64(double %1355)
  %1357 = fadd fast double %1356, %1353
  %1358 = fptosi double %1357 to i8
  store i8 %1358, ptr %1241, align 1, !tbaa !11
  %1359 = fadd fast double %1348, %1273
  %1360 = add nuw nsw i32 %1272, 1
  br i1 %1265, label %1361, label %1408

1361:                                             ; preds = %1344
  %1362 = load i32, ptr %4, align 4, !tbaa !5
  %1363 = load i32, ptr %12, align 4, !tbaa !5
  %1364 = add nsw i32 %1363, -1
  %1365 = icmp slt i32 %1362, %1364
  br i1 %1365, label %1385, label %1366

1366:                                             ; preds = %1361
  %1367 = icmp eq i32 %1362, %1364
  br i1 %1367, label %1368, label %1401

1368:                                             ; preds = %1366
  store i32 0, ptr %4, align 4, !tbaa !5
  %1369 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1369, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1408, label %1370

1370:                                             ; preds = %1368, %1395
  %1371 = phi i64 [ %1399, %1395 ], [ 1, %1368 ]
  %1372 = getelementptr inbounds i32, ptr %4, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %12, i64 %1371
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1373, %1376
  br i1 %1377, label %1378, label %1393

1378:                                             ; preds = %1370
  br i1 %1365, label %1385, label %1379

1379:                                             ; preds = %1378
  %1380 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1381 = load i32, ptr %1380, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1381
  store i32 %1384, ptr %1382, align 4, !tbaa !5
  br label %1403

1385:                                             ; preds = %1361, %1378
  %1386 = phi i32 [ %1373, %1378 ], [ %1362, %1361 ]
  %1387 = phi ptr [ %1372, %1378 ], [ %4, %1361 ]
  %1388 = phi i64 [ %1371, %1378 ], [ 0, %1361 ]
  %1389 = add nsw i32 %1386, 1
  store i32 %1389, ptr %1387, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1388
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1388
  br label %1403

1393:                                             ; preds = %1370
  %1394 = icmp eq i32 %1373, %1376
  br i1 %1394, label %1395, label %1401

1395:                                             ; preds = %1393
  store i32 0, ptr %1372, align 4, !tbaa !5
  %1396 = getelementptr inbounds i32, ptr %8, i64 %1371
  %1397 = load i32, ptr %1396, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1371
  store i32 %1397, ptr %1398, align 4, !tbaa !5
  %1399 = add nuw nsw i64 %1371, 1
  %1400 = icmp eq i64 %1399, %1268
  br i1 %1400, label %1408, label %1370, !llvm.loop !1167

1401:                                             ; preds = %1366, %1393
  %1402 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1403:                                             ; preds = %1379, %1385
  %1404 = phi ptr [ %1392, %1385 ], [ %1372, %1379 ]
  %1405 = phi i32 [ %1391, %1385 ], [ 1, %1379 ]
  %1406 = load i32, ptr %1404, align 4, !tbaa !5
  %1407 = add nsw i32 %1406, %1405
  store i32 %1407, ptr %1404, align 4, !tbaa !5
  br label %1408

1408:                                             ; preds = %1395, %1403, %1368, %1344
  %1409 = icmp eq i32 %1360, %5
  br i1 %1409, label %5522, label %1271, !llvm.loop !1168

1410:                                             ; preds = %1254, %1551
  %1411 = phi i32 [ 0, %1254 ], [ %1500, %1551 ]
  %1412 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1413, label %1482

1413:                                             ; preds = %1410, %1472
  %1414 = phi i32 [ %1481, %1472 ], [ 0, %1410 ]
  %1415 = phi i64 [ %1423, %1472 ], [ %1259, %1410 ]
  %1416 = phi i64 [ %1480, %1472 ], [ %1258, %1410 ]
  %1417 = phi i32 [ %1478, %1472 ], [ %1412, %1410 ]
  %1418 = sub i32 %1257, %1414
  %1419 = tail call i32 @llvm.smin.i32(i32 %1418, i32 0)
  %1420 = sub i32 %1418, %1419
  %1421 = zext i32 %1420 to i64
  %1422 = add nuw nsw i64 %1421, 1
  %1423 = add nsw i64 %1415, -1
  %1424 = icmp ult i32 %1420, 31
  br i1 %1424, label %1460, label %1425

1425:                                             ; preds = %1413
  %1426 = and i64 %1422, 8589934560
  %1427 = sub i64 %1416, %1426
  br label %1428

1428:                                             ; preds = %1428, %1425
  %1429 = phi i64 [ 0, %1425 ], [ %1452, %1428 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1448, %1428 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1449, %1428 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1450, %1428 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1451, %1428 ]
  %1434 = sub i64 %1416, %1429
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1434
  %1436 = getelementptr inbounds i32, ptr %1435, i64 -7
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1435, i64 -15
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1435, i64 -23
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1435, i64 -31
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = mul <8 x i32> %1438, %1430
  %1449 = mul <8 x i32> %1441, %1431
  %1450 = mul <8 x i32> %1444, %1432
  %1451 = mul <8 x i32> %1447, %1433
  %1452 = add nuw i64 %1429, 32
  %1453 = icmp eq i64 %1452, %1426
  br i1 %1453, label %1454, label %1428, !llvm.loop !1169

1454:                                             ; preds = %1428
  %1455 = mul <8 x i32> %1449, %1448
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1457)
  %1459 = icmp eq i64 %1422, %1426
  br i1 %1459, label %1472, label %1460

1460:                                             ; preds = %1413, %1454
  %1461 = phi i64 [ %1416, %1413 ], [ %1427, %1454 ]
  %1462 = phi i32 [ 1, %1413 ], [ %1458, %1454 ]
  br label %1463

1463:                                             ; preds = %1460, %1463
  %1464 = phi i64 [ %1469, %1463 ], [ %1461, %1460 ]
  %1465 = phi i32 [ %1468, %1463 ], [ %1462, %1460 ]
  %1466 = getelementptr inbounds i32, ptr %11, i64 %1464
  %1467 = load i32, ptr %1466, align 4, !tbaa !5
  %1468 = mul nsw i32 %1467, %1465
  %1469 = add nsw i64 %1464, -1
  %1470 = trunc i64 %1464 to i32
  %1471 = icmp sgt i32 %1470, 0
  br i1 %1471, label %1463, label %1472, !llvm.loop !1170

1472:                                             ; preds = %1463, %1454
  %1473 = phi i32 [ %1458, %1454 ], [ %1468, %1463 ]
  %1474 = and i64 %1423, 4294967295
  %1475 = getelementptr inbounds i32, ptr %6, i64 %1474
  %1476 = load i32, ptr %1475, align 4, !tbaa !5
  %1477 = mul nsw i32 %1476, %1473
  %1478 = add nsw i32 %1477, %1417
  %1479 = icmp sgt i64 %1415, 2
  %1480 = add nsw i64 %1416, -1
  %1481 = add i32 %1414, 1
  br i1 %1479, label %1413, label %1482, !llvm.loop !1171

1482:                                             ; preds = %1472, %1410
  %1483 = phi i32 [ %1412, %1410 ], [ %1478, %1472 ]
  %1484 = icmp slt i32 %1483, %5
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1482
  %1486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1487:                                             ; preds = %1482
  %1488 = sext i32 %1483 to i64
  %1489 = getelementptr inbounds float, ptr %1239, i64 %1488
  %1490 = load float, ptr %1489, align 4, !tbaa !162
  %1491 = fptosi float %1490 to i8
  %1492 = load i8, ptr %1241, align 1, !tbaa !11
  %1493 = sitofp i8 %1492 to double
  %1494 = sitofp i8 %1491 to double
  %1495 = icmp slt i8 %1491, 0
  %1496 = fneg fast double %1494
  %1497 = select fast i1 %1495, double %1496, double %1494
  %1498 = fadd fast double %1497, %1493
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1241, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1411, 1
  br i1 %1256, label %1501, label %1551

1501:                                             ; preds = %1487
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1259
  br i1 %1543, label %1551, label %1510, !llvm.loop !1172

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1487
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5522, label %1410, !llvm.loop !1173

1553:                                             ; preds = %1247
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5522

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1709

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5522

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1707
  %1577 = phi i32 [ 0, %1568 ], [ %1659, %1707 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1658, %1707 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !1174

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !1175

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !1176

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds float, ptr %1239, i64 %1651
  %1653 = load float, ptr %1652, align 4, !tbaa !162
  %1654 = fptosi float %1653 to i8
  %1655 = load i8, ptr %1241, align 1, !tbaa !11
  %1656 = tail call i8 @llvm.abs.i8(i8 %1654, i1 false)
  %1657 = add i8 %1656, %1655
  store i8 %1657, ptr %1241, align 1, !tbaa !11
  %1658 = fadd fast double %1578, 1.000000e+00
  %1659 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1660, label %1707

1660:                                             ; preds = %1649
  %1661 = load i32, ptr %4, align 4, !tbaa !5
  %1662 = load i32, ptr %12, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, -1
  %1664 = icmp slt i32 %1661, %1663
  br i1 %1664, label %1684, label %1665

1665:                                             ; preds = %1660
  %1666 = icmp eq i32 %1661, %1663
  br i1 %1666, label %1667, label %1700

1667:                                             ; preds = %1665
  store i32 0, ptr %4, align 4, !tbaa !5
  %1668 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1668, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1707, label %1669

1669:                                             ; preds = %1667, %1694
  %1670 = phi i64 [ %1698, %1694 ], [ 1, %1667 ]
  %1671 = getelementptr inbounds i32, ptr %4, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %12, i64 %1670
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = add nsw i32 %1674, -1
  %1676 = icmp slt i32 %1672, %1675
  br i1 %1676, label %1677, label %1692

1677:                                             ; preds = %1669
  br i1 %1664, label %1684, label %1678

1678:                                             ; preds = %1677
  %1679 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1680 = load i32, ptr %1679, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %6, i64 %1670
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = add nsw i32 %1682, %1680
  store i32 %1683, ptr %1681, align 4, !tbaa !5
  br label %1702

1684:                                             ; preds = %1660, %1677
  %1685 = phi i32 [ %1672, %1677 ], [ %1661, %1660 ]
  %1686 = phi ptr [ %1671, %1677 ], [ %4, %1660 ]
  %1687 = phi i64 [ %1670, %1677 ], [ 0, %1660 ]
  %1688 = add nsw i32 %1685, 1
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  %1689 = getelementptr inbounds i32, ptr %7, i64 %1687
  %1690 = load i32, ptr %1689, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1687
  br label %1702

1692:                                             ; preds = %1669
  %1693 = icmp eq i32 %1672, %1675
  br i1 %1693, label %1694, label %1700

1694:                                             ; preds = %1692
  store i32 0, ptr %1671, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %8, i64 %1670
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %6, i64 %1670
  store i32 %1696, ptr %1697, align 4, !tbaa !5
  %1698 = add nuw nsw i64 %1670, 1
  %1699 = icmp eq i64 %1698, %1573
  br i1 %1699, label %1707, label %1669, !llvm.loop !1177

1700:                                             ; preds = %1665, %1692
  %1701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1702:                                             ; preds = %1678, %1684
  %1703 = phi ptr [ %1691, %1684 ], [ %1671, %1678 ]
  %1704 = phi i32 [ %1690, %1684 ], [ 1, %1678 ]
  %1705 = load i32, ptr %1703, align 4, !tbaa !5
  %1706 = add nsw i32 %1705, %1704
  store i32 %1706, ptr %1703, align 4, !tbaa !5
  br label %1707

1707:                                             ; preds = %1694, %1702, %1667, %1649
  %1708 = icmp eq i32 %1659, %5
  br i1 %1708, label %5522, label %1576, !llvm.loop !1178

1709:                                             ; preds = %1559, %1845
  %1710 = phi i32 [ 0, %1559 ], [ %1794, %1845 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1712, label %1781

1712:                                             ; preds = %1709, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1709 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1564, %1709 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1563, %1709 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1709 ]
  %1717 = sub i32 %1562, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !1179

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !1180

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !1181

1781:                                             ; preds = %1771, %1709
  %1782 = phi i32 [ %1711, %1709 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds float, ptr %1239, i64 %1787
  %1789 = load float, ptr %1788, align 4, !tbaa !162
  %1790 = fptosi float %1789 to i8
  %1791 = load i8, ptr %1241, align 1, !tbaa !11
  %1792 = tail call i8 @llvm.abs.i8(i8 %1790, i1 false)
  %1793 = add i8 %1792, %1791
  store i8 %1793, ptr %1241, align 1, !tbaa !11
  %1794 = add nuw nsw i32 %1710, 1
  br i1 %1561, label %1795, label %1845

1795:                                             ; preds = %1786
  %1796 = load i32, ptr %4, align 4, !tbaa !5
  %1797 = load i32, ptr %12, align 4, !tbaa !5
  %1798 = add nsw i32 %1797, -1
  %1799 = icmp slt i32 %1796, %1798
  br i1 %1799, label %1822, label %1800

1800:                                             ; preds = %1795
  %1801 = icmp eq i32 %1796, %1798
  br i1 %1801, label %1802, label %1838

1802:                                             ; preds = %1800
  store i32 0, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1803, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1845, label %1804

1804:                                             ; preds = %1802, %1832
  %1805 = phi i64 [ %1836, %1832 ], [ 1, %1802 ]
  %1806 = getelementptr inbounds i32, ptr %4, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %12, i64 %1805
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = add nsw i32 %1809, -1
  %1811 = icmp slt i32 %1807, %1810
  br i1 %1811, label %1812, label %1830

1812:                                             ; preds = %1804
  br i1 %1799, label %1822, label %1813

1813:                                             ; preds = %1812
  %1814 = shl i64 %1805, 32
  %1815 = add i64 %1814, -4294967296
  %1816 = ashr exact i64 %1815, 32
  %1817 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = add nsw i32 %1820, %1818
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  br label %1840

1822:                                             ; preds = %1795, %1812
  %1823 = phi i32 [ %1807, %1812 ], [ %1796, %1795 ]
  %1824 = phi ptr [ %1806, %1812 ], [ %4, %1795 ]
  %1825 = phi i64 [ %1805, %1812 ], [ 0, %1795 ]
  %1826 = add nsw i32 %1823, 1
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1825
  br label %1840

1830:                                             ; preds = %1804
  %1831 = icmp eq i32 %1807, %1810
  br i1 %1831, label %1832, label %1838

1832:                                             ; preds = %1830
  store i32 0, ptr %1806, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %8, i64 %1805
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1805
  store i32 %1834, ptr %1835, align 4, !tbaa !5
  %1836 = add nuw nsw i64 %1805, 1
  %1837 = icmp eq i64 %1836, %1564
  br i1 %1837, label %1845, label %1804, !llvm.loop !1182

1838:                                             ; preds = %1800, %1830
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

1840:                                             ; preds = %1813, %1822
  %1841 = phi ptr [ %1829, %1822 ], [ %1806, %1813 ]
  %1842 = phi i32 [ %1828, %1822 ], [ 1, %1813 ]
  %1843 = load i32, ptr %1841, align 4, !tbaa !5
  %1844 = add nsw i32 %1843, %1842
  store i32 %1844, ptr %1841, align 4, !tbaa !5
  br label %1845

1845:                                             ; preds = %1832, %1840, %1802, %1786
  %1846 = icmp eq i32 %1794, %5
  br i1 %1846, label %5522, label %1709, !llvm.loop !1183

1847:                                             ; preds = %1247
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

1849:                                             ; preds = %18
  %1850 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  %1852 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1853 = load ptr, ptr %1852, align 8, !tbaa !9
  store i16 0, ptr %1853, align 2, !tbaa !78
  %1854 = icmp eq i32 %13, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1849
  %1856 = load float, ptr %1851, align 4, !tbaa !162
  %1857 = fptosi float %1856 to i16
  %1858 = tail call i16 @llvm.abs.i16(i16 %1857, i1 false)
  store i16 %1858, ptr %1853, align 2, !tbaa !78
  br label %5522

1859:                                             ; preds = %1849
  switch i32 %1, label %2459 [
    i32 1, label %1860
    i32 0, label %2165
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5522

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2022

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5522

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2020
  %1884 = phi i16 [ 0, %1875 ], [ %1970, %2020 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1972, %2020 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1971, %2020 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !1184

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !1185

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !1186

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds float, ptr %1851, i64 %1959
  %1963 = load float, ptr %1962, align 4, !tbaa !162
  %1964 = fptosi float %1963 to i16
  %1965 = sitofp i16 %1884 to double
  %1966 = sitofp i16 %1964 to double
  %1967 = fmul fast double %1961, %1966
  %1968 = tail call fast double @llvm.fabs.f64(double %1967)
  %1969 = fadd fast double %1968, %1965
  %1970 = fptosi double %1969 to i16
  %1971 = fadd fast double %1961, %1886
  %1972 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1973, label %2020

1973:                                             ; preds = %1957
  %1974 = load i32, ptr %4, align 4, !tbaa !5
  %1975 = load i32, ptr %12, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1974, %1976
  br i1 %1977, label %1997, label %1978

1978:                                             ; preds = %1973
  %1979 = icmp eq i32 %1974, %1976
  br i1 %1979, label %1980, label %2013

1980:                                             ; preds = %1978
  store i32 0, ptr %4, align 4, !tbaa !5
  %1981 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1981, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2020, label %1982

1982:                                             ; preds = %1980, %2007
  %1983 = phi i64 [ %2011, %2007 ], [ 1, %1980 ]
  %1984 = getelementptr inbounds i32, ptr %4, i64 %1983
  %1985 = load i32, ptr %1984, align 4, !tbaa !5
  %1986 = getelementptr inbounds i32, ptr %12, i64 %1983
  %1987 = load i32, ptr %1986, align 4, !tbaa !5
  %1988 = add nsw i32 %1987, -1
  %1989 = icmp slt i32 %1985, %1988
  br i1 %1989, label %1990, label %2005

1990:                                             ; preds = %1982
  br i1 %1977, label %1997, label %1991

1991:                                             ; preds = %1990
  %1992 = getelementptr inbounds i32, ptr %7, i64 %1983
  %1993 = load i32, ptr %1992, align 4, !tbaa !5
  %1994 = getelementptr inbounds i32, ptr %6, i64 %1983
  %1995 = load i32, ptr %1994, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1993
  store i32 %1996, ptr %1994, align 4, !tbaa !5
  br label %2015

1997:                                             ; preds = %1973, %1990
  %1998 = phi i32 [ %1985, %1990 ], [ %1974, %1973 ]
  %1999 = phi ptr [ %1984, %1990 ], [ %4, %1973 ]
  %2000 = phi i64 [ %1983, %1990 ], [ 0, %1973 ]
  %2001 = add nsw i32 %1998, 1
  store i32 %2001, ptr %1999, align 4, !tbaa !5
  %2002 = getelementptr inbounds i32, ptr %7, i64 %2000
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %2000
  br label %2015

2005:                                             ; preds = %1982
  %2006 = icmp eq i32 %1985, %1988
  br i1 %2006, label %2007, label %2013

2007:                                             ; preds = %2005
  store i32 0, ptr %1984, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %8, i64 %1983
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = getelementptr inbounds i32, ptr %6, i64 %1983
  store i32 %2009, ptr %2010, align 4, !tbaa !5
  %2011 = add nuw nsw i64 %1983, 1
  %2012 = icmp eq i64 %2011, %1880
  br i1 %2012, label %2020, label %1982, !llvm.loop !1187

2013:                                             ; preds = %1978, %2005
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  %2014 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2015:                                             ; preds = %1991, %1997
  %2016 = phi ptr [ %2004, %1997 ], [ %1984, %1991 ]
  %2017 = phi i32 [ %2003, %1997 ], [ 1, %1991 ]
  %2018 = load i32, ptr %2016, align 4, !tbaa !5
  %2019 = add nsw i32 %2018, %2017
  store i32 %2019, ptr %2016, align 4, !tbaa !5
  br label %2020

2020:                                             ; preds = %2007, %2015, %1980, %1957
  %2021 = icmp eq i32 %1972, %5
  br i1 %2021, label %5516, label %1883, !llvm.loop !1188

2022:                                             ; preds = %1866, %2163
  %2023 = phi i16 [ 0, %1866 ], [ %2111, %2163 ]
  %2024 = phi i32 [ 0, %1866 ], [ %2112, %2163 ]
  %2025 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2026, label %2095

2026:                                             ; preds = %2022, %2085
  %2027 = phi i32 [ %2094, %2085 ], [ 0, %2022 ]
  %2028 = phi i64 [ %2036, %2085 ], [ %1871, %2022 ]
  %2029 = phi i64 [ %2093, %2085 ], [ %1870, %2022 ]
  %2030 = phi i32 [ %2091, %2085 ], [ %2025, %2022 ]
  %2031 = sub i32 %1869, %2027
  %2032 = tail call i32 @llvm.smin.i32(i32 %2031, i32 0)
  %2033 = sub i32 %2031, %2032
  %2034 = zext i32 %2033 to i64
  %2035 = add nuw nsw i64 %2034, 1
  %2036 = add nsw i64 %2028, -1
  %2037 = icmp ult i32 %2033, 31
  br i1 %2037, label %2073, label %2038

2038:                                             ; preds = %2026
  %2039 = and i64 %2035, 8589934560
  %2040 = sub i64 %2029, %2039
  br label %2041

2041:                                             ; preds = %2041, %2038
  %2042 = phi i64 [ 0, %2038 ], [ %2065, %2041 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2061, %2041 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2062, %2041 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2063, %2041 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2064, %2041 ]
  %2047 = sub i64 %2029, %2042
  %2048 = getelementptr inbounds i32, ptr %11, i64 %2047
  %2049 = getelementptr inbounds i32, ptr %2048, i64 -7
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2048, i64 -15
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2048, i64 -23
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = getelementptr inbounds i32, ptr %2048, i64 -31
  %2059 = load <8 x i32>, ptr %2058, align 4, !tbaa !5
  %2060 = shufflevector <8 x i32> %2059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2061 = mul <8 x i32> %2051, %2043
  %2062 = mul <8 x i32> %2054, %2044
  %2063 = mul <8 x i32> %2057, %2045
  %2064 = mul <8 x i32> %2060, %2046
  %2065 = add nuw i64 %2042, 32
  %2066 = icmp eq i64 %2065, %2039
  br i1 %2066, label %2067, label %2041, !llvm.loop !1189

2067:                                             ; preds = %2041
  %2068 = mul <8 x i32> %2062, %2061
  %2069 = mul <8 x i32> %2063, %2068
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2070)
  %2072 = icmp eq i64 %2035, %2039
  br i1 %2072, label %2085, label %2073

2073:                                             ; preds = %2026, %2067
  %2074 = phi i64 [ %2029, %2026 ], [ %2040, %2067 ]
  %2075 = phi i32 [ 1, %2026 ], [ %2071, %2067 ]
  br label %2076

2076:                                             ; preds = %2073, %2076
  %2077 = phi i64 [ %2082, %2076 ], [ %2074, %2073 ]
  %2078 = phi i32 [ %2081, %2076 ], [ %2075, %2073 ]
  %2079 = getelementptr inbounds i32, ptr %11, i64 %2077
  %2080 = load i32, ptr %2079, align 4, !tbaa !5
  %2081 = mul nsw i32 %2080, %2078
  %2082 = add nsw i64 %2077, -1
  %2083 = trunc i64 %2077 to i32
  %2084 = icmp sgt i32 %2083, 0
  br i1 %2084, label %2076, label %2085, !llvm.loop !1190

2085:                                             ; preds = %2076, %2067
  %2086 = phi i32 [ %2071, %2067 ], [ %2081, %2076 ]
  %2087 = and i64 %2036, 4294967295
  %2088 = getelementptr inbounds i32, ptr %6, i64 %2087
  %2089 = load i32, ptr %2088, align 4, !tbaa !5
  %2090 = mul nsw i32 %2089, %2086
  %2091 = add nsw i32 %2090, %2030
  %2092 = icmp sgt i64 %2028, 2
  %2093 = add nsw i64 %2029, -1
  %2094 = add i32 %2027, 1
  br i1 %2092, label %2026, label %2095, !llvm.loop !1191

2095:                                             ; preds = %2085, %2022
  %2096 = phi i32 [ %2025, %2022 ], [ %2091, %2085 ]
  %2097 = icmp slt i32 %2096, %5
  br i1 %2097, label %2100, label %2098

2098:                                             ; preds = %2095
  %2099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2100:                                             ; preds = %2095
  %2101 = sext i32 %2096 to i64
  %2102 = getelementptr inbounds float, ptr %1851, i64 %2101
  %2103 = load float, ptr %2102, align 4, !tbaa !162
  %2104 = fptosi float %2103 to i16
  %2105 = sitofp i16 %2023 to double
  %2106 = sitofp i16 %2104 to double
  %2107 = icmp slt i16 %2104, 0
  %2108 = fneg fast double %2106
  %2109 = select fast i1 %2107, double %2108, double %2106
  %2110 = fadd fast double %2109, %2105
  %2111 = fptosi double %2110 to i16
  store i16 %2111, ptr %1853, align 2, !tbaa !78
  %2112 = add nuw nsw i32 %2024, 1
  br i1 %1868, label %2113, label %2163

2113:                                             ; preds = %2100
  %2114 = load i32, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %12, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, -1
  %2117 = icmp slt i32 %2114, %2116
  br i1 %2117, label %2140, label %2118

2118:                                             ; preds = %2113
  %2119 = icmp eq i32 %2114, %2116
  br i1 %2119, label %2120, label %2156

2120:                                             ; preds = %2118
  store i32 0, ptr %4, align 4, !tbaa !5
  %2121 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2121, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2163, label %2122

2122:                                             ; preds = %2120, %2150
  %2123 = phi i64 [ %2154, %2150 ], [ 1, %2120 ]
  %2124 = getelementptr inbounds i32, ptr %4, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %12, i64 %2123
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, -1
  %2129 = icmp slt i32 %2125, %2128
  br i1 %2129, label %2130, label %2148

2130:                                             ; preds = %2122
  br i1 %2117, label %2140, label %2131

2131:                                             ; preds = %2130
  %2132 = shl i64 %2123, 32
  %2133 = add i64 %2132, -4294967296
  %2134 = ashr exact i64 %2133, 32
  %2135 = getelementptr inbounds i32, ptr %7, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, %2136
  store i32 %2139, ptr %2137, align 4, !tbaa !5
  br label %2158

2140:                                             ; preds = %2113, %2130
  %2141 = phi i32 [ %2125, %2130 ], [ %2114, %2113 ]
  %2142 = phi ptr [ %2124, %2130 ], [ %4, %2113 ]
  %2143 = phi i64 [ %2123, %2130 ], [ 0, %2113 ]
  %2144 = add nsw i32 %2141, 1
  store i32 %2144, ptr %2142, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2143
  br label %2158

2148:                                             ; preds = %2122
  %2149 = icmp eq i32 %2125, %2128
  br i1 %2149, label %2150, label %2156

2150:                                             ; preds = %2148
  store i32 0, ptr %2124, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %8, i64 %2123
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %6, i64 %2123
  store i32 %2152, ptr %2153, align 4, !tbaa !5
  %2154 = add nuw nsw i64 %2123, 1
  %2155 = icmp eq i64 %2154, %1871
  br i1 %2155, label %2163, label %2122, !llvm.loop !1192

2156:                                             ; preds = %2118, %2148
  %2157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2158:                                             ; preds = %2131, %2140
  %2159 = phi ptr [ %2147, %2140 ], [ %2124, %2131 ]
  %2160 = phi i32 [ %2146, %2140 ], [ 1, %2131 ]
  %2161 = load i32, ptr %2159, align 4, !tbaa !5
  %2162 = add nsw i32 %2161, %2160
  store i32 %2162, ptr %2159, align 4, !tbaa !5
  br label %2163

2163:                                             ; preds = %2150, %2158, %2120, %2100
  %2164 = icmp eq i32 %2112, %5
  br i1 %2164, label %5522, label %2022, !llvm.loop !1193

2165:                                             ; preds = %1859
  %2166 = getelementptr inbounds i32, ptr %3, i64 %19
  %2167 = load i32, ptr %2166, align 4, !tbaa !5
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp sgt i32 %5, 0
  br i1 %2168, label %2179, label %2170

2170:                                             ; preds = %2165
  br i1 %2169, label %2171, label %5522

2171:                                             ; preds = %2170
  %2172 = icmp sgt i32 %13, 1
  %2173 = icmp sgt i32 %13, 0
  %2174 = add i32 %13, -2
  %2175 = zext i32 %2174 to i64
  %2176 = zext i32 %13 to i64
  %2177 = add nuw i32 %5, 1
  %2178 = icmp eq i32 %13, 1
  br label %2321

2179:                                             ; preds = %2165
  br i1 %2169, label %2180, label %5522

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2188

2188:                                             ; preds = %2180, %2319
  %2189 = phi i16 [ 0, %2180 ], [ %2269, %2319 ]
  %2190 = phi i32 [ 0, %2180 ], [ %2271, %2319 ]
  %2191 = phi double [ 0.000000e+00, %2180 ], [ %2270, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2193, label %2262

2193:                                             ; preds = %2188, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2188 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2185, %2188 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2184, %2188 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2188 ]
  %2198 = sub i32 %2183, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !1194

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !1195

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !1196

2262:                                             ; preds = %2252, %2188
  %2263 = phi i32 [ %2192, %2188 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds float, ptr %1851, i64 %2264
  %2266 = load float, ptr %2265, align 4, !tbaa !162
  %2267 = fptosi float %2266 to i16
  %2268 = tail call i16 @llvm.abs.i16(i16 %2267, i1 false)
  %2269 = add i16 %2268, %2189
  %2270 = fadd fast double %2191, 1.000000e+00
  %2271 = add nuw nsw i32 %2190, 1
  br i1 %2182, label %2272, label %2319

2272:                                             ; preds = %2262
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2185
  br i1 %2311, label %2319, label %2281, !llvm.loop !1197

2312:                                             ; preds = %2277, %2304
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2262
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %5517, label %2188, !llvm.loop !1198

2321:                                             ; preds = %2171, %2457
  %2322 = phi i16 [ 0, %2171 ], [ %2405, %2457 ]
  %2323 = phi i32 [ 0, %2171 ], [ %2406, %2457 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2176, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2175, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2174, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !1199

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !1200

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !1201

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds float, ptr %1851, i64 %2400
  %2402 = load float, ptr %2401, align 4, !tbaa !162
  %2403 = fptosi float %2402 to i16
  %2404 = tail call i16 @llvm.abs.i16(i16 %2403, i1 false)
  %2405 = add i16 %2404, %2322
  store i16 %2405, ptr %1853, align 2, !tbaa !78
  %2406 = add nuw nsw i32 %2323, 1
  br i1 %2173, label %2407, label %2457

2407:                                             ; preds = %2399
  %2408 = load i32, ptr %4, align 4, !tbaa !5
  %2409 = load i32, ptr %12, align 4, !tbaa !5
  %2410 = add nsw i32 %2409, -1
  %2411 = icmp slt i32 %2408, %2410
  br i1 %2411, label %2434, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp eq i32 %2408, %2410
  br i1 %2413, label %2414, label %2450

2414:                                             ; preds = %2412
  store i32 0, ptr %4, align 4, !tbaa !5
  %2415 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2415, ptr %6, align 4, !tbaa !5
  br i1 %2178, label %2457, label %2416

2416:                                             ; preds = %2414, %2444
  %2417 = phi i64 [ %2448, %2444 ], [ 1, %2414 ]
  %2418 = getelementptr inbounds i32, ptr %4, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %12, i64 %2417
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2419, %2422
  br i1 %2423, label %2424, label %2442

2424:                                             ; preds = %2416
  br i1 %2411, label %2434, label %2425

2425:                                             ; preds = %2424
  %2426 = shl i64 %2417, 32
  %2427 = add i64 %2426, -4294967296
  %2428 = ashr exact i64 %2427, 32
  %2429 = getelementptr inbounds i32, ptr %7, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %6, i64 %2417
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, %2430
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  br label %2452

2434:                                             ; preds = %2407, %2424
  %2435 = phi i32 [ %2419, %2424 ], [ %2408, %2407 ]
  %2436 = phi ptr [ %2418, %2424 ], [ %4, %2407 ]
  %2437 = phi i64 [ %2417, %2424 ], [ 0, %2407 ]
  %2438 = add nsw i32 %2435, 1
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  %2439 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %6, i64 %2437
  br label %2452

2442:                                             ; preds = %2416
  %2443 = icmp eq i32 %2419, %2422
  br i1 %2443, label %2444, label %2450

2444:                                             ; preds = %2442
  store i32 0, ptr %2418, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %8, i64 %2417
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %6, i64 %2417
  store i32 %2446, ptr %2447, align 4, !tbaa !5
  %2448 = add nuw nsw i64 %2417, 1
  %2449 = icmp eq i64 %2448, %2176
  br i1 %2449, label %2457, label %2416, !llvm.loop !1202

2450:                                             ; preds = %2412, %2442
  %2451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2452:                                             ; preds = %2425, %2434
  %2453 = phi ptr [ %2441, %2434 ], [ %2418, %2425 ]
  %2454 = phi i32 [ %2440, %2434 ], [ 1, %2425 ]
  %2455 = load i32, ptr %2453, align 4, !tbaa !5
  %2456 = add nsw i32 %2455, %2454
  store i32 %2456, ptr %2453, align 4, !tbaa !5
  br label %2457

2457:                                             ; preds = %2444, %2452, %2414, %2399
  %2458 = icmp eq i32 %2406, %5
  br i1 %2458, label %5522, label %2321, !llvm.loop !1203

2459:                                             ; preds = %1859
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

2461:                                             ; preds = %18
  %2462 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2463 = load ptr, ptr %2462, align 8, !tbaa !9
  %2464 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  store i32 0, ptr %2465, align 4, !tbaa !5
  %2466 = icmp eq i32 %13, 0
  br i1 %2466, label %2467, label %2471

2467:                                             ; preds = %2461
  %2468 = load float, ptr %2463, align 4, !tbaa !162
  %2469 = fptosi float %2468 to i32
  %2470 = tail call i32 @llvm.abs.i32(i32 %2469, i1 true)
  store i32 %2470, ptr %2465, align 4, !tbaa !5
  br label %5522

2471:                                             ; preds = %2461
  switch i32 %1, label %3071 [
    i32 1, label %2472
    i32 0, label %2777
  ]

2472:                                             ; preds = %2471
  %2473 = getelementptr inbounds i32, ptr %3, i64 %19
  %2474 = load i32, ptr %2473, align 4, !tbaa !5
  %2475 = icmp eq i32 %2474, 0
  %2476 = icmp sgt i32 %5, 0
  br i1 %2475, label %2486, label %2477

2477:                                             ; preds = %2472
  br i1 %2476, label %2478, label %5522

2478:                                             ; preds = %2477
  %2479 = icmp sgt i32 %13, 1
  %2480 = icmp sgt i32 %13, 0
  %2481 = add i32 %13, -2
  %2482 = zext i32 %2481 to i64
  %2483 = zext i32 %13 to i64
  %2484 = add nuw i32 %5, 1
  %2485 = icmp eq i32 %13, 1
  br label %2634

2486:                                             ; preds = %2472
  br i1 %2476, label %2487, label %5522

2487:                                             ; preds = %2486
  %2488 = icmp sgt i32 %13, 1
  %2489 = icmp sgt i32 %13, 0
  %2490 = add i32 %13, -2
  %2491 = zext i32 %2490 to i64
  %2492 = zext i32 %13 to i64
  %2493 = add nuw i32 %5, 1
  %2494 = icmp eq i32 %13, 1
  br label %2495

2495:                                             ; preds = %2487, %2632
  %2496 = phi i32 [ 0, %2487 ], [ %2584, %2632 ]
  %2497 = phi double [ 0.000000e+00, %2487 ], [ %2583, %2632 ]
  %2498 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2499, label %2568

2499:                                             ; preds = %2495, %2558
  %2500 = phi i32 [ %2567, %2558 ], [ 0, %2495 ]
  %2501 = phi i64 [ %2509, %2558 ], [ %2492, %2495 ]
  %2502 = phi i64 [ %2566, %2558 ], [ %2491, %2495 ]
  %2503 = phi i32 [ %2564, %2558 ], [ %2498, %2495 ]
  %2504 = sub i32 %2490, %2500
  %2505 = tail call i32 @llvm.smin.i32(i32 %2504, i32 0)
  %2506 = sub i32 %2504, %2505
  %2507 = zext i32 %2506 to i64
  %2508 = add nuw nsw i64 %2507, 1
  %2509 = add nsw i64 %2501, -1
  %2510 = icmp ult i32 %2506, 31
  br i1 %2510, label %2546, label %2511

2511:                                             ; preds = %2499
  %2512 = and i64 %2508, 8589934560
  %2513 = sub i64 %2502, %2512
  br label %2514

2514:                                             ; preds = %2514, %2511
  %2515 = phi i64 [ 0, %2511 ], [ %2538, %2514 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2534, %2514 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2535, %2514 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2536, %2514 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2537, %2514 ]
  %2520 = sub i64 %2502, %2515
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2520
  %2522 = getelementptr inbounds i32, ptr %2521, i64 -7
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2521, i64 -15
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2521, i64 -23
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2521, i64 -31
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = mul <8 x i32> %2524, %2516
  %2535 = mul <8 x i32> %2527, %2517
  %2536 = mul <8 x i32> %2530, %2518
  %2537 = mul <8 x i32> %2533, %2519
  %2538 = add nuw i64 %2515, 32
  %2539 = icmp eq i64 %2538, %2512
  br i1 %2539, label %2540, label %2514, !llvm.loop !1204

2540:                                             ; preds = %2514
  %2541 = mul <8 x i32> %2535, %2534
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2543)
  %2545 = icmp eq i64 %2508, %2512
  br i1 %2545, label %2558, label %2546

2546:                                             ; preds = %2499, %2540
  %2547 = phi i64 [ %2502, %2499 ], [ %2513, %2540 ]
  %2548 = phi i32 [ 1, %2499 ], [ %2544, %2540 ]
  br label %2549

2549:                                             ; preds = %2546, %2549
  %2550 = phi i64 [ %2555, %2549 ], [ %2547, %2546 ]
  %2551 = phi i32 [ %2554, %2549 ], [ %2548, %2546 ]
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = mul nsw i32 %2553, %2551
  %2555 = add nsw i64 %2550, -1
  %2556 = trunc i64 %2550 to i32
  %2557 = icmp sgt i32 %2556, 0
  br i1 %2557, label %2549, label %2558, !llvm.loop !1205

2558:                                             ; preds = %2549, %2540
  %2559 = phi i32 [ %2544, %2540 ], [ %2554, %2549 ]
  %2560 = and i64 %2509, 4294967295
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2560
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2559
  %2564 = add nsw i32 %2563, %2503
  %2565 = icmp sgt i64 %2501, 2
  %2566 = add nsw i64 %2502, -1
  %2567 = add i32 %2500, 1
  br i1 %2565, label %2499, label %2568, !llvm.loop !1206

2568:                                             ; preds = %2558, %2495
  %2569 = phi i32 [ %2498, %2495 ], [ %2564, %2558 ]
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds double, ptr %2, i64 %2570
  %2572 = load double, ptr %2571, align 8, !tbaa !18
  %2573 = getelementptr inbounds float, ptr %2463, i64 %2570
  %2574 = load float, ptr %2573, align 4, !tbaa !162
  %2575 = fptosi float %2574 to i32
  %2576 = load i32, ptr %2465, align 4, !tbaa !5
  %2577 = sitofp i32 %2576 to double
  %2578 = sitofp i32 %2575 to double
  %2579 = fmul fast double %2572, %2578
  %2580 = tail call fast double @llvm.fabs.f64(double %2579)
  %2581 = fadd fast double %2580, %2577
  %2582 = fptosi double %2581 to i32
  store i32 %2582, ptr %2465, align 4, !tbaa !5
  %2583 = fadd fast double %2572, %2497
  %2584 = add nuw nsw i32 %2496, 1
  br i1 %2489, label %2585, label %2632

2585:                                             ; preds = %2568
  %2586 = load i32, ptr %4, align 4, !tbaa !5
  %2587 = load i32, ptr %12, align 4, !tbaa !5
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !5
  %2593 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2593, ptr %6, align 4, !tbaa !5
  br i1 %2494, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !5
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !5
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !5
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !5
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !5
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2492
  br i1 %2624, label %2632, label %2594, !llvm.loop !1207

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !5
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !5
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2568
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5522, label %2495, !llvm.loop !1208

2634:                                             ; preds = %2478, %2775
  %2635 = phi i32 [ 0, %2478 ], [ %2724, %2775 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2483, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2482, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2481, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !5
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !5
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !5
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1209

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !5
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1210

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1211

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds float, ptr %2463, i64 %2712
  %2714 = load float, ptr %2713, align 4, !tbaa !162
  %2715 = fptosi float %2714 to i32
  %2716 = load i32, ptr %2465, align 4, !tbaa !5
  %2717 = sitofp i32 %2716 to double
  %2718 = sitofp i32 %2715 to double
  %2719 = icmp slt i32 %2715, 0
  %2720 = fneg fast double %2718
  %2721 = select fast i1 %2719, double %2720, double %2718
  %2722 = fadd fast double %2721, %2717
  %2723 = fptosi double %2722 to i32
  store i32 %2723, ptr %2465, align 4, !tbaa !5
  %2724 = add nuw nsw i32 %2635, 1
  br i1 %2480, label %2725, label %2775

2725:                                             ; preds = %2711
  %2726 = load i32, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %12, align 4, !tbaa !5
  %2728 = add nsw i32 %2727, -1
  %2729 = icmp slt i32 %2726, %2728
  br i1 %2729, label %2752, label %2730

2730:                                             ; preds = %2725
  %2731 = icmp eq i32 %2726, %2728
  br i1 %2731, label %2732, label %2768

2732:                                             ; preds = %2730
  store i32 0, ptr %4, align 4, !tbaa !5
  %2733 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2733, ptr %6, align 4, !tbaa !5
  br i1 %2485, label %2775, label %2734

2734:                                             ; preds = %2732, %2762
  %2735 = phi i64 [ %2766, %2762 ], [ 1, %2732 ]
  %2736 = getelementptr inbounds i32, ptr %4, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = getelementptr inbounds i32, ptr %12, i64 %2735
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = add nsw i32 %2739, -1
  %2741 = icmp slt i32 %2737, %2740
  br i1 %2741, label %2742, label %2760

2742:                                             ; preds = %2734
  br i1 %2729, label %2752, label %2743

2743:                                             ; preds = %2742
  %2744 = shl i64 %2735, 32
  %2745 = add i64 %2744, -4294967296
  %2746 = ashr exact i64 %2745, 32
  %2747 = getelementptr inbounds i32, ptr %7, i64 %2746
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = getelementptr inbounds i32, ptr %6, i64 %2735
  %2750 = load i32, ptr %2749, align 4, !tbaa !5
  %2751 = add nsw i32 %2750, %2748
  store i32 %2751, ptr %2749, align 4, !tbaa !5
  br label %2770

2752:                                             ; preds = %2725, %2742
  %2753 = phi i32 [ %2737, %2742 ], [ %2726, %2725 ]
  %2754 = phi ptr [ %2736, %2742 ], [ %4, %2725 ]
  %2755 = phi i64 [ %2735, %2742 ], [ 0, %2725 ]
  %2756 = add nsw i32 %2753, 1
  store i32 %2756, ptr %2754, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %7, i64 %2755
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2755
  br label %2770

2760:                                             ; preds = %2734
  %2761 = icmp eq i32 %2737, %2740
  br i1 %2761, label %2762, label %2768

2762:                                             ; preds = %2760
  store i32 0, ptr %2736, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %8, i64 %2735
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = getelementptr inbounds i32, ptr %6, i64 %2735
  store i32 %2764, ptr %2765, align 4, !tbaa !5
  %2766 = add nuw nsw i64 %2735, 1
  %2767 = icmp eq i64 %2766, %2483
  br i1 %2767, label %2775, label %2734, !llvm.loop !1212

2768:                                             ; preds = %2730, %2760
  %2769 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2770:                                             ; preds = %2743, %2752
  %2771 = phi ptr [ %2759, %2752 ], [ %2736, %2743 ]
  %2772 = phi i32 [ %2758, %2752 ], [ 1, %2743 ]
  %2773 = load i32, ptr %2771, align 4, !tbaa !5
  %2774 = add nsw i32 %2773, %2772
  store i32 %2774, ptr %2771, align 4, !tbaa !5
  br label %2775

2775:                                             ; preds = %2762, %2770, %2732, %2711
  %2776 = icmp eq i32 %2724, %5
  br i1 %2776, label %5522, label %2634, !llvm.loop !1213

2777:                                             ; preds = %2471
  %2778 = getelementptr inbounds i32, ptr %3, i64 %19
  %2779 = load i32, ptr %2778, align 4, !tbaa !5
  %2780 = icmp eq i32 %2779, 0
  %2781 = icmp sgt i32 %5, 0
  br i1 %2780, label %2791, label %2782

2782:                                             ; preds = %2777
  br i1 %2781, label %2783, label %5522

2783:                                             ; preds = %2782
  %2784 = icmp sgt i32 %13, 1
  %2785 = icmp sgt i32 %13, 0
  %2786 = add i32 %13, -2
  %2787 = zext i32 %2786 to i64
  %2788 = zext i32 %13 to i64
  %2789 = add nuw i32 %5, 1
  %2790 = icmp eq i32 %13, 1
  br label %2933

2791:                                             ; preds = %2777
  br i1 %2781, label %2792, label %5522

2792:                                             ; preds = %2791
  %2793 = icmp sgt i32 %13, 1
  %2794 = icmp sgt i32 %13, 0
  %2795 = add i32 %13, -2
  %2796 = zext i32 %2795 to i64
  %2797 = zext i32 %13 to i64
  %2798 = add nuw i32 %5, 1
  %2799 = icmp eq i32 %13, 1
  br label %2800

2800:                                             ; preds = %2792, %2931
  %2801 = phi i32 [ 0, %2792 ], [ %2883, %2931 ]
  %2802 = phi double [ 0.000000e+00, %2792 ], [ %2882, %2931 ]
  %2803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2804, label %2873

2804:                                             ; preds = %2800, %2863
  %2805 = phi i32 [ %2872, %2863 ], [ 0, %2800 ]
  %2806 = phi i64 [ %2814, %2863 ], [ %2797, %2800 ]
  %2807 = phi i64 [ %2871, %2863 ], [ %2796, %2800 ]
  %2808 = phi i32 [ %2869, %2863 ], [ %2803, %2800 ]
  %2809 = sub i32 %2795, %2805
  %2810 = tail call i32 @llvm.smin.i32(i32 %2809, i32 0)
  %2811 = sub i32 %2809, %2810
  %2812 = zext i32 %2811 to i64
  %2813 = add nuw nsw i64 %2812, 1
  %2814 = add nsw i64 %2806, -1
  %2815 = icmp ult i32 %2811, 31
  br i1 %2815, label %2851, label %2816

2816:                                             ; preds = %2804
  %2817 = and i64 %2813, 8589934560
  %2818 = sub i64 %2807, %2817
  br label %2819

2819:                                             ; preds = %2819, %2816
  %2820 = phi i64 [ 0, %2816 ], [ %2843, %2819 ]
  %2821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2839, %2819 ]
  %2822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2840, %2819 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2841, %2819 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2842, %2819 ]
  %2825 = sub i64 %2807, %2820
  %2826 = getelementptr inbounds i32, ptr %9, i64 %2825
  %2827 = getelementptr inbounds i32, ptr %2826, i64 -7
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2826, i64 -15
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2826, i64 -23
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !5
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2826, i64 -31
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = mul <8 x i32> %2829, %2821
  %2840 = mul <8 x i32> %2832, %2822
  %2841 = mul <8 x i32> %2835, %2823
  %2842 = mul <8 x i32> %2838, %2824
  %2843 = add nuw i64 %2820, 32
  %2844 = icmp eq i64 %2843, %2817
  br i1 %2844, label %2845, label %2819, !llvm.loop !1214

2845:                                             ; preds = %2819
  %2846 = mul <8 x i32> %2840, %2839
  %2847 = mul <8 x i32> %2841, %2846
  %2848 = mul <8 x i32> %2842, %2847
  %2849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2848)
  %2850 = icmp eq i64 %2813, %2817
  br i1 %2850, label %2863, label %2851

2851:                                             ; preds = %2804, %2845
  %2852 = phi i64 [ %2807, %2804 ], [ %2818, %2845 ]
  %2853 = phi i32 [ 1, %2804 ], [ %2849, %2845 ]
  br label %2854

2854:                                             ; preds = %2851, %2854
  %2855 = phi i64 [ %2860, %2854 ], [ %2852, %2851 ]
  %2856 = phi i32 [ %2859, %2854 ], [ %2853, %2851 ]
  %2857 = getelementptr inbounds i32, ptr %9, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = mul nsw i32 %2858, %2856
  %2860 = add nsw i64 %2855, -1
  %2861 = trunc i64 %2855 to i32
  %2862 = icmp sgt i32 %2861, 0
  br i1 %2862, label %2854, label %2863, !llvm.loop !1215

2863:                                             ; preds = %2854, %2845
  %2864 = phi i32 [ %2849, %2845 ], [ %2859, %2854 ]
  %2865 = and i64 %2814, 4294967295
  %2866 = getelementptr inbounds i32, ptr %6, i64 %2865
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = mul nsw i32 %2867, %2864
  %2869 = add nsw i32 %2868, %2808
  %2870 = icmp sgt i64 %2806, 2
  %2871 = add nsw i64 %2807, -1
  %2872 = add i32 %2805, 1
  br i1 %2870, label %2804, label %2873, !llvm.loop !1216

2873:                                             ; preds = %2863, %2800
  %2874 = phi i32 [ %2803, %2800 ], [ %2869, %2863 ]
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds float, ptr %2463, i64 %2875
  %2877 = load float, ptr %2876, align 4, !tbaa !162
  %2878 = fptosi float %2877 to i32
  %2879 = load i32, ptr %2465, align 4, !tbaa !5
  %2880 = tail call i32 @llvm.abs.i32(i32 %2878, i1 true)
  %2881 = add nsw i32 %2880, %2879
  store i32 %2881, ptr %2465, align 4, !tbaa !5
  %2882 = fadd fast double %2802, 1.000000e+00
  %2883 = add nuw nsw i32 %2801, 1
  br i1 %2794, label %2884, label %2931

2884:                                             ; preds = %2873
  %2885 = load i32, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %12, align 4, !tbaa !5
  %2887 = add nsw i32 %2886, -1
  %2888 = icmp slt i32 %2885, %2887
  br i1 %2888, label %2908, label %2889

2889:                                             ; preds = %2884
  %2890 = icmp eq i32 %2885, %2887
  br i1 %2890, label %2891, label %2924

2891:                                             ; preds = %2889
  store i32 0, ptr %4, align 4, !tbaa !5
  %2892 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2892, ptr %6, align 4, !tbaa !5
  br i1 %2799, label %2931, label %2893

2893:                                             ; preds = %2891, %2918
  %2894 = phi i64 [ %2922, %2918 ], [ 1, %2891 ]
  %2895 = getelementptr inbounds i32, ptr %4, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = getelementptr inbounds i32, ptr %12, i64 %2894
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2896, %2899
  br i1 %2900, label %2901, label %2916

2901:                                             ; preds = %2893
  br i1 %2888, label %2908, label %2902

2902:                                             ; preds = %2901
  %2903 = getelementptr inbounds i32, ptr %7, i64 %2894
  %2904 = load i32, ptr %2903, align 4, !tbaa !5
  %2905 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2906 = load i32, ptr %2905, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2904
  store i32 %2907, ptr %2905, align 4, !tbaa !5
  br label %2926

2908:                                             ; preds = %2884, %2901
  %2909 = phi i32 [ %2896, %2901 ], [ %2885, %2884 ]
  %2910 = phi ptr [ %2895, %2901 ], [ %4, %2884 ]
  %2911 = phi i64 [ %2894, %2901 ], [ 0, %2884 ]
  %2912 = add nsw i32 %2909, 1
  store i32 %2912, ptr %2910, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %7, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2911
  br label %2926

2916:                                             ; preds = %2893
  %2917 = icmp eq i32 %2896, %2899
  br i1 %2917, label %2918, label %2924

2918:                                             ; preds = %2916
  store i32 0, ptr %2895, align 4, !tbaa !5
  %2919 = getelementptr inbounds i32, ptr %8, i64 %2894
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = getelementptr inbounds i32, ptr %6, i64 %2894
  store i32 %2920, ptr %2921, align 4, !tbaa !5
  %2922 = add nuw nsw i64 %2894, 1
  %2923 = icmp eq i64 %2922, %2797
  br i1 %2923, label %2931, label %2893, !llvm.loop !1217

2924:                                             ; preds = %2889, %2916
  %2925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

2926:                                             ; preds = %2902, %2908
  %2927 = phi ptr [ %2915, %2908 ], [ %2895, %2902 ]
  %2928 = phi i32 [ %2914, %2908 ], [ 1, %2902 ]
  %2929 = load i32, ptr %2927, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, %2928
  store i32 %2930, ptr %2927, align 4, !tbaa !5
  br label %2931

2931:                                             ; preds = %2918, %2926, %2891, %2873
  %2932 = icmp eq i32 %2883, %5
  br i1 %2932, label %5522, label %2800, !llvm.loop !1218

2933:                                             ; preds = %2783, %3069
  %2934 = phi i32 [ 0, %2783 ], [ %3018, %3069 ]
  %2935 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %2936, label %3005

2936:                                             ; preds = %2933, %2995
  %2937 = phi i32 [ %3004, %2995 ], [ 0, %2933 ]
  %2938 = phi i64 [ %2946, %2995 ], [ %2788, %2933 ]
  %2939 = phi i64 [ %3003, %2995 ], [ %2787, %2933 ]
  %2940 = phi i32 [ %3001, %2995 ], [ %2935, %2933 ]
  %2941 = sub i32 %2786, %2937
  %2942 = tail call i32 @llvm.smin.i32(i32 %2941, i32 0)
  %2943 = sub i32 %2941, %2942
  %2944 = zext i32 %2943 to i64
  %2945 = add nuw nsw i64 %2944, 1
  %2946 = add nsw i64 %2938, -1
  %2947 = icmp ult i32 %2943, 31
  br i1 %2947, label %2983, label %2948

2948:                                             ; preds = %2936
  %2949 = and i64 %2945, 8589934560
  %2950 = sub i64 %2939, %2949
  br label %2951

2951:                                             ; preds = %2951, %2948
  %2952 = phi i64 [ 0, %2948 ], [ %2975, %2951 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2971, %2951 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2972, %2951 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2973, %2951 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2974, %2951 ]
  %2957 = sub i64 %2939, %2952
  %2958 = getelementptr inbounds i32, ptr %11, i64 %2957
  %2959 = getelementptr inbounds i32, ptr %2958, i64 -7
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2958, i64 -15
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2958, i64 -23
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !5
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = getelementptr inbounds i32, ptr %2958, i64 -31
  %2969 = load <8 x i32>, ptr %2968, align 4, !tbaa !5
  %2970 = shufflevector <8 x i32> %2969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2971 = mul <8 x i32> %2961, %2953
  %2972 = mul <8 x i32> %2964, %2954
  %2973 = mul <8 x i32> %2967, %2955
  %2974 = mul <8 x i32> %2970, %2956
  %2975 = add nuw i64 %2952, 32
  %2976 = icmp eq i64 %2975, %2949
  br i1 %2976, label %2977, label %2951, !llvm.loop !1219

2977:                                             ; preds = %2951
  %2978 = mul <8 x i32> %2972, %2971
  %2979 = mul <8 x i32> %2973, %2978
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2980)
  %2982 = icmp eq i64 %2945, %2949
  br i1 %2982, label %2995, label %2983

2983:                                             ; preds = %2936, %2977
  %2984 = phi i64 [ %2939, %2936 ], [ %2950, %2977 ]
  %2985 = phi i32 [ 1, %2936 ], [ %2981, %2977 ]
  br label %2986

2986:                                             ; preds = %2983, %2986
  %2987 = phi i64 [ %2992, %2986 ], [ %2984, %2983 ]
  %2988 = phi i32 [ %2991, %2986 ], [ %2985, %2983 ]
  %2989 = getelementptr inbounds i32, ptr %11, i64 %2987
  %2990 = load i32, ptr %2989, align 4, !tbaa !5
  %2991 = mul nsw i32 %2990, %2988
  %2992 = add nsw i64 %2987, -1
  %2993 = trunc i64 %2987 to i32
  %2994 = icmp sgt i32 %2993, 0
  br i1 %2994, label %2986, label %2995, !llvm.loop !1220

2995:                                             ; preds = %2986, %2977
  %2996 = phi i32 [ %2981, %2977 ], [ %2991, %2986 ]
  %2997 = and i64 %2946, 4294967295
  %2998 = getelementptr inbounds i32, ptr %6, i64 %2997
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = mul nsw i32 %2999, %2996
  %3001 = add nsw i32 %3000, %2940
  %3002 = icmp sgt i64 %2938, 2
  %3003 = add nsw i64 %2939, -1
  %3004 = add i32 %2937, 1
  br i1 %3002, label %2936, label %3005, !llvm.loop !1221

3005:                                             ; preds = %2995, %2933
  %3006 = phi i32 [ %2935, %2933 ], [ %3001, %2995 ]
  %3007 = icmp slt i32 %3006, %5
  br i1 %3007, label %3010, label %3008

3008:                                             ; preds = %3005
  %3009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3010:                                             ; preds = %3005
  %3011 = sext i32 %3006 to i64
  %3012 = getelementptr inbounds float, ptr %2463, i64 %3011
  %3013 = load float, ptr %3012, align 4, !tbaa !162
  %3014 = fptosi float %3013 to i32
  %3015 = load i32, ptr %2465, align 4, !tbaa !5
  %3016 = tail call i32 @llvm.abs.i32(i32 %3014, i1 true)
  %3017 = add nsw i32 %3016, %3015
  store i32 %3017, ptr %2465, align 4, !tbaa !5
  %3018 = add nuw nsw i32 %2934, 1
  br i1 %2785, label %3019, label %3069

3019:                                             ; preds = %3010
  %3020 = load i32, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %12, align 4, !tbaa !5
  %3022 = add nsw i32 %3021, -1
  %3023 = icmp slt i32 %3020, %3022
  br i1 %3023, label %3046, label %3024

3024:                                             ; preds = %3019
  %3025 = icmp eq i32 %3020, %3022
  br i1 %3025, label %3026, label %3062

3026:                                             ; preds = %3024
  store i32 0, ptr %4, align 4, !tbaa !5
  %3027 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3027, ptr %6, align 4, !tbaa !5
  br i1 %2790, label %3069, label %3028

3028:                                             ; preds = %3026, %3056
  %3029 = phi i64 [ %3060, %3056 ], [ 1, %3026 ]
  %3030 = getelementptr inbounds i32, ptr %4, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !5
  %3032 = getelementptr inbounds i32, ptr %12, i64 %3029
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3031, %3034
  br i1 %3035, label %3036, label %3054

3036:                                             ; preds = %3028
  br i1 %3023, label %3046, label %3037

3037:                                             ; preds = %3036
  %3038 = shl i64 %3029, 32
  %3039 = add i64 %3038, -4294967296
  %3040 = ashr exact i64 %3039, 32
  %3041 = getelementptr inbounds i32, ptr %7, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = add nsw i32 %3044, %3042
  store i32 %3045, ptr %3043, align 4, !tbaa !5
  br label %3064

3046:                                             ; preds = %3019, %3036
  %3047 = phi i32 [ %3031, %3036 ], [ %3020, %3019 ]
  %3048 = phi ptr [ %3030, %3036 ], [ %4, %3019 ]
  %3049 = phi i64 [ %3029, %3036 ], [ 0, %3019 ]
  %3050 = add nsw i32 %3047, 1
  store i32 %3050, ptr %3048, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3049
  br label %3064

3054:                                             ; preds = %3028
  %3055 = icmp eq i32 %3031, %3034
  br i1 %3055, label %3056, label %3062

3056:                                             ; preds = %3054
  store i32 0, ptr %3030, align 4, !tbaa !5
  %3057 = getelementptr inbounds i32, ptr %8, i64 %3029
  %3058 = load i32, ptr %3057, align 4, !tbaa !5
  %3059 = getelementptr inbounds i32, ptr %6, i64 %3029
  store i32 %3058, ptr %3059, align 4, !tbaa !5
  %3060 = add nuw nsw i64 %3029, 1
  %3061 = icmp eq i64 %3060, %2788
  br i1 %3061, label %3069, label %3028, !llvm.loop !1222

3062:                                             ; preds = %3024, %3054
  %3063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3064:                                             ; preds = %3037, %3046
  %3065 = phi ptr [ %3053, %3046 ], [ %3030, %3037 ]
  %3066 = phi i32 [ %3052, %3046 ], [ 1, %3037 ]
  %3067 = load i32, ptr %3065, align 4, !tbaa !5
  %3068 = add nsw i32 %3067, %3066
  store i32 %3068, ptr %3065, align 4, !tbaa !5
  br label %3069

3069:                                             ; preds = %3056, %3064, %3026, %3010
  %3070 = icmp eq i32 %3018, %5
  br i1 %3070, label %5522, label %2933, !llvm.loop !1223

3071:                                             ; preds = %2471
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

3073:                                             ; preds = %18
  %3074 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !9
  %3076 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3077 = load ptr, ptr %3076, align 8, !tbaa !9
  store i64 0, ptr %3077, align 8, !tbaa !120
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %3079, label %3083

3079:                                             ; preds = %3073
  %3080 = load float, ptr %3075, align 4, !tbaa !162
  %3081 = fptosi float %3080 to i64
  %3082 = tail call i64 @llvm.abs.i64(i64 %3081, i1 true)
  store i64 %3082, ptr %3077, align 8, !tbaa !120
  br label %5522

3083:                                             ; preds = %3073
  switch i32 %1, label %3683 [
    i32 1, label %3084
    i32 0, label %3389
  ]

3084:                                             ; preds = %3083
  %3085 = getelementptr inbounds i32, ptr %3, i64 %19
  %3086 = load i32, ptr %3085, align 4, !tbaa !5
  %3087 = icmp eq i32 %3086, 0
  %3088 = icmp sgt i32 %5, 0
  br i1 %3087, label %3098, label %3089

3089:                                             ; preds = %3084
  br i1 %3088, label %3090, label %5522

3090:                                             ; preds = %3089
  %3091 = icmp sgt i32 %13, 1
  %3092 = icmp sgt i32 %13, 0
  %3093 = add i32 %13, -2
  %3094 = zext i32 %3093 to i64
  %3095 = zext i32 %13 to i64
  %3096 = add nuw i32 %5, 1
  %3097 = icmp eq i32 %13, 1
  br label %3246

3098:                                             ; preds = %3084
  br i1 %3088, label %3099, label %5522

3099:                                             ; preds = %3098
  %3100 = icmp sgt i32 %13, 1
  %3101 = icmp sgt i32 %13, 0
  %3102 = add i32 %13, -2
  %3103 = zext i32 %3102 to i64
  %3104 = zext i32 %13 to i64
  %3105 = add nuw i32 %5, 1
  %3106 = icmp eq i32 %13, 1
  br label %3107

3107:                                             ; preds = %3099, %3244
  %3108 = phi i64 [ 0, %3099 ], [ %3194, %3244 ]
  %3109 = phi i32 [ 0, %3099 ], [ %3196, %3244 ]
  %3110 = phi double [ 0.000000e+00, %3099 ], [ %3195, %3244 ]
  %3111 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3112, label %3181

3112:                                             ; preds = %3107, %3171
  %3113 = phi i32 [ %3180, %3171 ], [ 0, %3107 ]
  %3114 = phi i64 [ %3122, %3171 ], [ %3104, %3107 ]
  %3115 = phi i64 [ %3179, %3171 ], [ %3103, %3107 ]
  %3116 = phi i32 [ %3177, %3171 ], [ %3111, %3107 ]
  %3117 = sub i32 %3102, %3113
  %3118 = tail call i32 @llvm.smin.i32(i32 %3117, i32 0)
  %3119 = sub i32 %3117, %3118
  %3120 = zext i32 %3119 to i64
  %3121 = add nuw nsw i64 %3120, 1
  %3122 = add nsw i64 %3114, -1
  %3123 = icmp ult i32 %3119, 31
  br i1 %3123, label %3159, label %3124

3124:                                             ; preds = %3112
  %3125 = and i64 %3121, 8589934560
  %3126 = sub i64 %3115, %3125
  br label %3127

3127:                                             ; preds = %3127, %3124
  %3128 = phi i64 [ 0, %3124 ], [ %3151, %3127 ]
  %3129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3147, %3127 ]
  %3130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3148, %3127 ]
  %3131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3149, %3127 ]
  %3132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3150, %3127 ]
  %3133 = sub i64 %3115, %3128
  %3134 = getelementptr inbounds i32, ptr %9, i64 %3133
  %3135 = getelementptr inbounds i32, ptr %3134, i64 -7
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3134, i64 -15
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = getelementptr inbounds i32, ptr %3134, i64 -23
  %3142 = load <8 x i32>, ptr %3141, align 4, !tbaa !5
  %3143 = shufflevector <8 x i32> %3142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3144 = getelementptr inbounds i32, ptr %3134, i64 -31
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !5
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = mul <8 x i32> %3137, %3129
  %3148 = mul <8 x i32> %3140, %3130
  %3149 = mul <8 x i32> %3143, %3131
  %3150 = mul <8 x i32> %3146, %3132
  %3151 = add nuw i64 %3128, 32
  %3152 = icmp eq i64 %3151, %3125
  br i1 %3152, label %3153, label %3127, !llvm.loop !1224

3153:                                             ; preds = %3127
  %3154 = mul <8 x i32> %3148, %3147
  %3155 = mul <8 x i32> %3149, %3154
  %3156 = mul <8 x i32> %3150, %3155
  %3157 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3156)
  %3158 = icmp eq i64 %3121, %3125
  br i1 %3158, label %3171, label %3159

3159:                                             ; preds = %3112, %3153
  %3160 = phi i64 [ %3115, %3112 ], [ %3126, %3153 ]
  %3161 = phi i32 [ 1, %3112 ], [ %3157, %3153 ]
  br label %3162

3162:                                             ; preds = %3159, %3162
  %3163 = phi i64 [ %3168, %3162 ], [ %3160, %3159 ]
  %3164 = phi i32 [ %3167, %3162 ], [ %3161, %3159 ]
  %3165 = getelementptr inbounds i32, ptr %9, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = mul nsw i32 %3166, %3164
  %3168 = add nsw i64 %3163, -1
  %3169 = trunc i64 %3163 to i32
  %3170 = icmp sgt i32 %3169, 0
  br i1 %3170, label %3162, label %3171, !llvm.loop !1225

3171:                                             ; preds = %3162, %3153
  %3172 = phi i32 [ %3157, %3153 ], [ %3167, %3162 ]
  %3173 = and i64 %3122, 4294967295
  %3174 = getelementptr inbounds i32, ptr %6, i64 %3173
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = mul nsw i32 %3175, %3172
  %3177 = add nsw i32 %3176, %3116
  %3178 = icmp sgt i64 %3114, 2
  %3179 = add nsw i64 %3115, -1
  %3180 = add i32 %3113, 1
  br i1 %3178, label %3112, label %3181, !llvm.loop !1226

3181:                                             ; preds = %3171, %3107
  %3182 = phi i32 [ %3111, %3107 ], [ %3177, %3171 ]
  %3183 = sext i32 %3182 to i64
  %3184 = getelementptr inbounds double, ptr %2, i64 %3183
  %3185 = load double, ptr %3184, align 8, !tbaa !18
  %3186 = getelementptr inbounds float, ptr %3075, i64 %3183
  %3187 = load float, ptr %3186, align 4, !tbaa !162
  %3188 = fptosi float %3187 to i64
  %3189 = sitofp i64 %3108 to double
  %3190 = sitofp i64 %3188 to double
  %3191 = fmul fast double %3185, %3190
  %3192 = tail call fast double @llvm.fabs.f64(double %3191)
  %3193 = fadd fast double %3192, %3189
  %3194 = fptosi double %3193 to i64
  %3195 = fadd fast double %3185, %3110
  %3196 = add nuw nsw i32 %3109, 1
  br i1 %3101, label %3197, label %3244

3197:                                             ; preds = %3181
  %3198 = load i32, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %12, align 4, !tbaa !5
  %3200 = add nsw i32 %3199, -1
  %3201 = icmp slt i32 %3198, %3200
  br i1 %3201, label %3221, label %3202

3202:                                             ; preds = %3197
  %3203 = icmp eq i32 %3198, %3200
  br i1 %3203, label %3204, label %3237

3204:                                             ; preds = %3202
  store i32 0, ptr %4, align 4, !tbaa !5
  %3205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3205, ptr %6, align 4, !tbaa !5
  br i1 %3106, label %3244, label %3206

3206:                                             ; preds = %3204, %3231
  %3207 = phi i64 [ %3235, %3231 ], [ 1, %3204 ]
  %3208 = getelementptr inbounds i32, ptr %4, i64 %3207
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %12, i64 %3207
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, -1
  %3213 = icmp slt i32 %3209, %3212
  br i1 %3213, label %3214, label %3229

3214:                                             ; preds = %3206
  br i1 %3201, label %3221, label %3215

3215:                                             ; preds = %3214
  %3216 = getelementptr inbounds i32, ptr %7, i64 %3207
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %6, i64 %3207
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, %3217
  store i32 %3220, ptr %3218, align 4, !tbaa !5
  br label %3239

3221:                                             ; preds = %3197, %3214
  %3222 = phi i32 [ %3209, %3214 ], [ %3198, %3197 ]
  %3223 = phi ptr [ %3208, %3214 ], [ %4, %3197 ]
  %3224 = phi i64 [ %3207, %3214 ], [ 0, %3197 ]
  %3225 = add nsw i32 %3222, 1
  store i32 %3225, ptr %3223, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %7, i64 %3224
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3224
  br label %3239

3229:                                             ; preds = %3206
  %3230 = icmp eq i32 %3209, %3212
  br i1 %3230, label %3231, label %3237

3231:                                             ; preds = %3229
  store i32 0, ptr %3208, align 4, !tbaa !5
  %3232 = getelementptr inbounds i32, ptr %8, i64 %3207
  %3233 = load i32, ptr %3232, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %6, i64 %3207
  store i32 %3233, ptr %3234, align 4, !tbaa !5
  %3235 = add nuw nsw i64 %3207, 1
  %3236 = icmp eq i64 %3235, %3104
  br i1 %3236, label %3244, label %3206, !llvm.loop !1227

3237:                                             ; preds = %3202, %3229
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  %3238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3239:                                             ; preds = %3215, %3221
  %3240 = phi ptr [ %3228, %3221 ], [ %3208, %3215 ]
  %3241 = phi i32 [ %3227, %3221 ], [ 1, %3215 ]
  %3242 = load i32, ptr %3240, align 4, !tbaa !5
  %3243 = add nsw i32 %3242, %3241
  store i32 %3243, ptr %3240, align 4, !tbaa !5
  br label %3244

3244:                                             ; preds = %3231, %3239, %3204, %3181
  %3245 = icmp eq i32 %3196, %5
  br i1 %3245, label %5518, label %3107, !llvm.loop !1228

3246:                                             ; preds = %3090, %3387
  %3247 = phi i64 [ 0, %3090 ], [ %3335, %3387 ]
  %3248 = phi i32 [ 0, %3090 ], [ %3336, %3387 ]
  %3249 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3250, label %3319

3250:                                             ; preds = %3246, %3309
  %3251 = phi i32 [ %3318, %3309 ], [ 0, %3246 ]
  %3252 = phi i64 [ %3260, %3309 ], [ %3095, %3246 ]
  %3253 = phi i64 [ %3317, %3309 ], [ %3094, %3246 ]
  %3254 = phi i32 [ %3315, %3309 ], [ %3249, %3246 ]
  %3255 = sub i32 %3093, %3251
  %3256 = tail call i32 @llvm.smin.i32(i32 %3255, i32 0)
  %3257 = sub i32 %3255, %3256
  %3258 = zext i32 %3257 to i64
  %3259 = add nuw nsw i64 %3258, 1
  %3260 = add nsw i64 %3252, -1
  %3261 = icmp ult i32 %3257, 31
  br i1 %3261, label %3297, label %3262

3262:                                             ; preds = %3250
  %3263 = and i64 %3259, 8589934560
  %3264 = sub i64 %3253, %3263
  br label %3265

3265:                                             ; preds = %3265, %3262
  %3266 = phi i64 [ 0, %3262 ], [ %3289, %3265 ]
  %3267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3285, %3265 ]
  %3268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3286, %3265 ]
  %3269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3287, %3265 ]
  %3270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3288, %3265 ]
  %3271 = sub i64 %3253, %3266
  %3272 = getelementptr inbounds i32, ptr %11, i64 %3271
  %3273 = getelementptr inbounds i32, ptr %3272, i64 -7
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3272, i64 -15
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = getelementptr inbounds i32, ptr %3272, i64 -23
  %3280 = load <8 x i32>, ptr %3279, align 4, !tbaa !5
  %3281 = shufflevector <8 x i32> %3280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3282 = getelementptr inbounds i32, ptr %3272, i64 -31
  %3283 = load <8 x i32>, ptr %3282, align 4, !tbaa !5
  %3284 = shufflevector <8 x i32> %3283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3285 = mul <8 x i32> %3275, %3267
  %3286 = mul <8 x i32> %3278, %3268
  %3287 = mul <8 x i32> %3281, %3269
  %3288 = mul <8 x i32> %3284, %3270
  %3289 = add nuw i64 %3266, 32
  %3290 = icmp eq i64 %3289, %3263
  br i1 %3290, label %3291, label %3265, !llvm.loop !1229

3291:                                             ; preds = %3265
  %3292 = mul <8 x i32> %3286, %3285
  %3293 = mul <8 x i32> %3287, %3292
  %3294 = mul <8 x i32> %3288, %3293
  %3295 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3294)
  %3296 = icmp eq i64 %3259, %3263
  br i1 %3296, label %3309, label %3297

3297:                                             ; preds = %3250, %3291
  %3298 = phi i64 [ %3253, %3250 ], [ %3264, %3291 ]
  %3299 = phi i32 [ 1, %3250 ], [ %3295, %3291 ]
  br label %3300

3300:                                             ; preds = %3297, %3300
  %3301 = phi i64 [ %3306, %3300 ], [ %3298, %3297 ]
  %3302 = phi i32 [ %3305, %3300 ], [ %3299, %3297 ]
  %3303 = getelementptr inbounds i32, ptr %11, i64 %3301
  %3304 = load i32, ptr %3303, align 4, !tbaa !5
  %3305 = mul nsw i32 %3304, %3302
  %3306 = add nsw i64 %3301, -1
  %3307 = trunc i64 %3301 to i32
  %3308 = icmp sgt i32 %3307, 0
  br i1 %3308, label %3300, label %3309, !llvm.loop !1230

3309:                                             ; preds = %3300, %3291
  %3310 = phi i32 [ %3295, %3291 ], [ %3305, %3300 ]
  %3311 = and i64 %3260, 4294967295
  %3312 = getelementptr inbounds i32, ptr %6, i64 %3311
  %3313 = load i32, ptr %3312, align 4, !tbaa !5
  %3314 = mul nsw i32 %3313, %3310
  %3315 = add nsw i32 %3314, %3254
  %3316 = icmp sgt i64 %3252, 2
  %3317 = add nsw i64 %3253, -1
  %3318 = add i32 %3251, 1
  br i1 %3316, label %3250, label %3319, !llvm.loop !1231

3319:                                             ; preds = %3309, %3246
  %3320 = phi i32 [ %3249, %3246 ], [ %3315, %3309 ]
  %3321 = icmp slt i32 %3320, %5
  br i1 %3321, label %3324, label %3322

3322:                                             ; preds = %3319
  %3323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3324:                                             ; preds = %3319
  %3325 = sext i32 %3320 to i64
  %3326 = getelementptr inbounds float, ptr %3075, i64 %3325
  %3327 = load float, ptr %3326, align 4, !tbaa !162
  %3328 = fptosi float %3327 to i64
  %3329 = sitofp i64 %3247 to double
  %3330 = sitofp i64 %3328 to double
  %3331 = icmp slt i64 %3328, 0
  %3332 = fneg fast double %3330
  %3333 = select fast i1 %3331, double %3332, double %3330
  %3334 = fadd fast double %3333, %3329
  %3335 = fptosi double %3334 to i64
  store i64 %3335, ptr %3077, align 8, !tbaa !120
  %3336 = add nuw nsw i32 %3248, 1
  br i1 %3092, label %3337, label %3387

3337:                                             ; preds = %3324
  %3338 = load i32, ptr %4, align 4, !tbaa !5
  %3339 = load i32, ptr %12, align 4, !tbaa !5
  %3340 = add nsw i32 %3339, -1
  %3341 = icmp slt i32 %3338, %3340
  br i1 %3341, label %3364, label %3342

3342:                                             ; preds = %3337
  %3343 = icmp eq i32 %3338, %3340
  br i1 %3343, label %3344, label %3380

3344:                                             ; preds = %3342
  store i32 0, ptr %4, align 4, !tbaa !5
  %3345 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3345, ptr %6, align 4, !tbaa !5
  br i1 %3097, label %3387, label %3346

3346:                                             ; preds = %3344, %3374
  %3347 = phi i64 [ %3378, %3374 ], [ 1, %3344 ]
  %3348 = getelementptr inbounds i32, ptr %4, i64 %3347
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = getelementptr inbounds i32, ptr %12, i64 %3347
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = add nsw i32 %3351, -1
  %3353 = icmp slt i32 %3349, %3352
  br i1 %3353, label %3354, label %3372

3354:                                             ; preds = %3346
  br i1 %3341, label %3364, label %3355

3355:                                             ; preds = %3354
  %3356 = shl i64 %3347, 32
  %3357 = add i64 %3356, -4294967296
  %3358 = ashr exact i64 %3357, 32
  %3359 = getelementptr inbounds i32, ptr %7, i64 %3358
  %3360 = load i32, ptr %3359, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3347
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = add nsw i32 %3362, %3360
  store i32 %3363, ptr %3361, align 4, !tbaa !5
  br label %3382

3364:                                             ; preds = %3337, %3354
  %3365 = phi i32 [ %3349, %3354 ], [ %3338, %3337 ]
  %3366 = phi ptr [ %3348, %3354 ], [ %4, %3337 ]
  %3367 = phi i64 [ %3347, %3354 ], [ 0, %3337 ]
  %3368 = add nsw i32 %3365, 1
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3367
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3367
  br label %3382

3372:                                             ; preds = %3346
  %3373 = icmp eq i32 %3349, %3352
  br i1 %3373, label %3374, label %3380

3374:                                             ; preds = %3372
  store i32 0, ptr %3348, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %8, i64 %3347
  %3376 = load i32, ptr %3375, align 4, !tbaa !5
  %3377 = getelementptr inbounds i32, ptr %6, i64 %3347
  store i32 %3376, ptr %3377, align 4, !tbaa !5
  %3378 = add nuw nsw i64 %3347, 1
  %3379 = icmp eq i64 %3378, %3095
  br i1 %3379, label %3387, label %3346, !llvm.loop !1232

3380:                                             ; preds = %3342, %3372
  %3381 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3382:                                             ; preds = %3355, %3364
  %3383 = phi ptr [ %3371, %3364 ], [ %3348, %3355 ]
  %3384 = phi i32 [ %3370, %3364 ], [ 1, %3355 ]
  %3385 = load i32, ptr %3383, align 4, !tbaa !5
  %3386 = add nsw i32 %3385, %3384
  store i32 %3386, ptr %3383, align 4, !tbaa !5
  br label %3387

3387:                                             ; preds = %3374, %3382, %3344, %3324
  %3388 = icmp eq i32 %3336, %5
  br i1 %3388, label %5522, label %3246, !llvm.loop !1233

3389:                                             ; preds = %3083
  %3390 = getelementptr inbounds i32, ptr %3, i64 %19
  %3391 = load i32, ptr %3390, align 4, !tbaa !5
  %3392 = icmp eq i32 %3391, 0
  %3393 = icmp sgt i32 %5, 0
  br i1 %3392, label %3403, label %3394

3394:                                             ; preds = %3389
  br i1 %3393, label %3395, label %5522

3395:                                             ; preds = %3394
  %3396 = icmp sgt i32 %13, 1
  %3397 = icmp sgt i32 %13, 0
  %3398 = add i32 %13, -2
  %3399 = zext i32 %3398 to i64
  %3400 = zext i32 %13 to i64
  %3401 = add nuw i32 %5, 1
  %3402 = icmp eq i32 %13, 1
  br label %3545

3403:                                             ; preds = %3389
  br i1 %3393, label %3404, label %5522

3404:                                             ; preds = %3403
  %3405 = icmp sgt i32 %13, 1
  %3406 = icmp sgt i32 %13, 0
  %3407 = add i32 %13, -2
  %3408 = zext i32 %3407 to i64
  %3409 = zext i32 %13 to i64
  %3410 = add nuw i32 %5, 1
  %3411 = icmp eq i32 %13, 1
  br label %3412

3412:                                             ; preds = %3404, %3543
  %3413 = phi i64 [ 0, %3404 ], [ %3493, %3543 ]
  %3414 = phi i32 [ 0, %3404 ], [ %3495, %3543 ]
  %3415 = phi double [ 0.000000e+00, %3404 ], [ %3494, %3543 ]
  %3416 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3405, label %3417, label %3486

3417:                                             ; preds = %3412, %3476
  %3418 = phi i32 [ %3485, %3476 ], [ 0, %3412 ]
  %3419 = phi i64 [ %3427, %3476 ], [ %3409, %3412 ]
  %3420 = phi i64 [ %3484, %3476 ], [ %3408, %3412 ]
  %3421 = phi i32 [ %3482, %3476 ], [ %3416, %3412 ]
  %3422 = sub i32 %3407, %3418
  %3423 = tail call i32 @llvm.smin.i32(i32 %3422, i32 0)
  %3424 = sub i32 %3422, %3423
  %3425 = zext i32 %3424 to i64
  %3426 = add nuw nsw i64 %3425, 1
  %3427 = add nsw i64 %3419, -1
  %3428 = icmp ult i32 %3424, 31
  br i1 %3428, label %3464, label %3429

3429:                                             ; preds = %3417
  %3430 = and i64 %3426, 8589934560
  %3431 = sub i64 %3420, %3430
  br label %3432

3432:                                             ; preds = %3432, %3429
  %3433 = phi i64 [ 0, %3429 ], [ %3456, %3432 ]
  %3434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3452, %3432 ]
  %3435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3453, %3432 ]
  %3436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3454, %3432 ]
  %3437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3455, %3432 ]
  %3438 = sub i64 %3420, %3433
  %3439 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3440 = getelementptr inbounds i32, ptr %3439, i64 -7
  %3441 = load <8 x i32>, ptr %3440, align 4, !tbaa !5
  %3442 = shufflevector <8 x i32> %3441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3443 = getelementptr inbounds i32, ptr %3439, i64 -15
  %3444 = load <8 x i32>, ptr %3443, align 4, !tbaa !5
  %3445 = shufflevector <8 x i32> %3444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3446 = getelementptr inbounds i32, ptr %3439, i64 -23
  %3447 = load <8 x i32>, ptr %3446, align 4, !tbaa !5
  %3448 = shufflevector <8 x i32> %3447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3449 = getelementptr inbounds i32, ptr %3439, i64 -31
  %3450 = load <8 x i32>, ptr %3449, align 4, !tbaa !5
  %3451 = shufflevector <8 x i32> %3450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3452 = mul <8 x i32> %3442, %3434
  %3453 = mul <8 x i32> %3445, %3435
  %3454 = mul <8 x i32> %3448, %3436
  %3455 = mul <8 x i32> %3451, %3437
  %3456 = add nuw i64 %3433, 32
  %3457 = icmp eq i64 %3456, %3430
  br i1 %3457, label %3458, label %3432, !llvm.loop !1234

3458:                                             ; preds = %3432
  %3459 = mul <8 x i32> %3453, %3452
  %3460 = mul <8 x i32> %3454, %3459
  %3461 = mul <8 x i32> %3455, %3460
  %3462 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3461)
  %3463 = icmp eq i64 %3426, %3430
  br i1 %3463, label %3476, label %3464

3464:                                             ; preds = %3417, %3458
  %3465 = phi i64 [ %3420, %3417 ], [ %3431, %3458 ]
  %3466 = phi i32 [ 1, %3417 ], [ %3462, %3458 ]
  br label %3467

3467:                                             ; preds = %3464, %3467
  %3468 = phi i64 [ %3473, %3467 ], [ %3465, %3464 ]
  %3469 = phi i32 [ %3472, %3467 ], [ %3466, %3464 ]
  %3470 = getelementptr inbounds i32, ptr %9, i64 %3468
  %3471 = load i32, ptr %3470, align 4, !tbaa !5
  %3472 = mul nsw i32 %3471, %3469
  %3473 = add nsw i64 %3468, -1
  %3474 = trunc i64 %3468 to i32
  %3475 = icmp sgt i32 %3474, 0
  br i1 %3475, label %3467, label %3476, !llvm.loop !1235

3476:                                             ; preds = %3467, %3458
  %3477 = phi i32 [ %3462, %3458 ], [ %3472, %3467 ]
  %3478 = and i64 %3427, 4294967295
  %3479 = getelementptr inbounds i32, ptr %6, i64 %3478
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = mul nsw i32 %3480, %3477
  %3482 = add nsw i32 %3481, %3421
  %3483 = icmp sgt i64 %3419, 2
  %3484 = add nsw i64 %3420, -1
  %3485 = add i32 %3418, 1
  br i1 %3483, label %3417, label %3486, !llvm.loop !1236

3486:                                             ; preds = %3476, %3412
  %3487 = phi i32 [ %3416, %3412 ], [ %3482, %3476 ]
  %3488 = sext i32 %3487 to i64
  %3489 = getelementptr inbounds float, ptr %3075, i64 %3488
  %3490 = load float, ptr %3489, align 4, !tbaa !162
  %3491 = fptosi float %3490 to i64
  %3492 = tail call i64 @llvm.abs.i64(i64 %3491, i1 true)
  %3493 = add nuw nsw i64 %3492, %3413
  %3494 = fadd fast double %3415, 1.000000e+00
  %3495 = add nuw nsw i32 %3414, 1
  br i1 %3406, label %3496, label %3543

3496:                                             ; preds = %3486
  %3497 = load i32, ptr %4, align 4, !tbaa !5
  %3498 = load i32, ptr %12, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, -1
  %3500 = icmp slt i32 %3497, %3499
  br i1 %3500, label %3520, label %3501

3501:                                             ; preds = %3496
  %3502 = icmp eq i32 %3497, %3499
  br i1 %3502, label %3503, label %3536

3503:                                             ; preds = %3501
  store i32 0, ptr %4, align 4, !tbaa !5
  %3504 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3504, ptr %6, align 4, !tbaa !5
  br i1 %3411, label %3543, label %3505

3505:                                             ; preds = %3503, %3530
  %3506 = phi i64 [ %3534, %3530 ], [ 1, %3503 ]
  %3507 = getelementptr inbounds i32, ptr %4, i64 %3506
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %12, i64 %3506
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, -1
  %3512 = icmp slt i32 %3508, %3511
  br i1 %3512, label %3513, label %3528

3513:                                             ; preds = %3505
  br i1 %3500, label %3520, label %3514

3514:                                             ; preds = %3513
  %3515 = getelementptr inbounds i32, ptr %7, i64 %3506
  %3516 = load i32, ptr %3515, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %6, i64 %3506
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = add nsw i32 %3518, %3516
  store i32 %3519, ptr %3517, align 4, !tbaa !5
  br label %3538

3520:                                             ; preds = %3496, %3513
  %3521 = phi i32 [ %3508, %3513 ], [ %3497, %3496 ]
  %3522 = phi ptr [ %3507, %3513 ], [ %4, %3496 ]
  %3523 = phi i64 [ %3506, %3513 ], [ 0, %3496 ]
  %3524 = add nsw i32 %3521, 1
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %7, i64 %3523
  %3526 = load i32, ptr %3525, align 4, !tbaa !5
  %3527 = getelementptr inbounds i32, ptr %6, i64 %3523
  br label %3538

3528:                                             ; preds = %3505
  %3529 = icmp eq i32 %3508, %3511
  br i1 %3529, label %3530, label %3536

3530:                                             ; preds = %3528
  store i32 0, ptr %3507, align 4, !tbaa !5
  %3531 = getelementptr inbounds i32, ptr %8, i64 %3506
  %3532 = load i32, ptr %3531, align 4, !tbaa !5
  %3533 = getelementptr inbounds i32, ptr %6, i64 %3506
  store i32 %3532, ptr %3533, align 4, !tbaa !5
  %3534 = add nuw nsw i64 %3506, 1
  %3535 = icmp eq i64 %3534, %3409
  br i1 %3535, label %3543, label %3505, !llvm.loop !1237

3536:                                             ; preds = %3501, %3528
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  %3537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3538:                                             ; preds = %3514, %3520
  %3539 = phi ptr [ %3527, %3520 ], [ %3507, %3514 ]
  %3540 = phi i32 [ %3526, %3520 ], [ 1, %3514 ]
  %3541 = load i32, ptr %3539, align 4, !tbaa !5
  %3542 = add nsw i32 %3541, %3540
  store i32 %3542, ptr %3539, align 4, !tbaa !5
  br label %3543

3543:                                             ; preds = %3530, %3538, %3503, %3486
  %3544 = icmp eq i32 %3495, %5
  br i1 %3544, label %5519, label %3412, !llvm.loop !1238

3545:                                             ; preds = %3395, %3681
  %3546 = phi i64 [ 0, %3395 ], [ %3629, %3681 ]
  %3547 = phi i32 [ 0, %3395 ], [ %3630, %3681 ]
  %3548 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3396, label %3549, label %3618

3549:                                             ; preds = %3545, %3608
  %3550 = phi i32 [ %3617, %3608 ], [ 0, %3545 ]
  %3551 = phi i64 [ %3559, %3608 ], [ %3400, %3545 ]
  %3552 = phi i64 [ %3616, %3608 ], [ %3399, %3545 ]
  %3553 = phi i32 [ %3614, %3608 ], [ %3548, %3545 ]
  %3554 = sub i32 %3398, %3550
  %3555 = tail call i32 @llvm.smin.i32(i32 %3554, i32 0)
  %3556 = sub i32 %3554, %3555
  %3557 = zext i32 %3556 to i64
  %3558 = add nuw nsw i64 %3557, 1
  %3559 = add nsw i64 %3551, -1
  %3560 = icmp ult i32 %3556, 31
  br i1 %3560, label %3596, label %3561

3561:                                             ; preds = %3549
  %3562 = and i64 %3558, 8589934560
  %3563 = sub i64 %3552, %3562
  br label %3564

3564:                                             ; preds = %3564, %3561
  %3565 = phi i64 [ 0, %3561 ], [ %3588, %3564 ]
  %3566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3584, %3564 ]
  %3567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3585, %3564 ]
  %3568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3586, %3564 ]
  %3569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3587, %3564 ]
  %3570 = sub i64 %3552, %3565
  %3571 = getelementptr inbounds i32, ptr %11, i64 %3570
  %3572 = getelementptr inbounds i32, ptr %3571, i64 -7
  %3573 = load <8 x i32>, ptr %3572, align 4, !tbaa !5
  %3574 = shufflevector <8 x i32> %3573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3575 = getelementptr inbounds i32, ptr %3571, i64 -15
  %3576 = load <8 x i32>, ptr %3575, align 4, !tbaa !5
  %3577 = shufflevector <8 x i32> %3576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3578 = getelementptr inbounds i32, ptr %3571, i64 -23
  %3579 = load <8 x i32>, ptr %3578, align 4, !tbaa !5
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3581 = getelementptr inbounds i32, ptr %3571, i64 -31
  %3582 = load <8 x i32>, ptr %3581, align 4, !tbaa !5
  %3583 = shufflevector <8 x i32> %3582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3584 = mul <8 x i32> %3574, %3566
  %3585 = mul <8 x i32> %3577, %3567
  %3586 = mul <8 x i32> %3580, %3568
  %3587 = mul <8 x i32> %3583, %3569
  %3588 = add nuw i64 %3565, 32
  %3589 = icmp eq i64 %3588, %3562
  br i1 %3589, label %3590, label %3564, !llvm.loop !1239

3590:                                             ; preds = %3564
  %3591 = mul <8 x i32> %3585, %3584
  %3592 = mul <8 x i32> %3586, %3591
  %3593 = mul <8 x i32> %3587, %3592
  %3594 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3593)
  %3595 = icmp eq i64 %3558, %3562
  br i1 %3595, label %3608, label %3596

3596:                                             ; preds = %3549, %3590
  %3597 = phi i64 [ %3552, %3549 ], [ %3563, %3590 ]
  %3598 = phi i32 [ 1, %3549 ], [ %3594, %3590 ]
  br label %3599

3599:                                             ; preds = %3596, %3599
  %3600 = phi i64 [ %3605, %3599 ], [ %3597, %3596 ]
  %3601 = phi i32 [ %3604, %3599 ], [ %3598, %3596 ]
  %3602 = getelementptr inbounds i32, ptr %11, i64 %3600
  %3603 = load i32, ptr %3602, align 4, !tbaa !5
  %3604 = mul nsw i32 %3603, %3601
  %3605 = add nsw i64 %3600, -1
  %3606 = trunc i64 %3600 to i32
  %3607 = icmp sgt i32 %3606, 0
  br i1 %3607, label %3599, label %3608, !llvm.loop !1240

3608:                                             ; preds = %3599, %3590
  %3609 = phi i32 [ %3594, %3590 ], [ %3604, %3599 ]
  %3610 = and i64 %3559, 4294967295
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3610
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = mul nsw i32 %3612, %3609
  %3614 = add nsw i32 %3613, %3553
  %3615 = icmp sgt i64 %3551, 2
  %3616 = add nsw i64 %3552, -1
  %3617 = add i32 %3550, 1
  br i1 %3615, label %3549, label %3618, !llvm.loop !1241

3618:                                             ; preds = %3608, %3545
  %3619 = phi i32 [ %3548, %3545 ], [ %3614, %3608 ]
  %3620 = icmp slt i32 %3619, %5
  br i1 %3620, label %3623, label %3621

3621:                                             ; preds = %3618
  %3622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3623:                                             ; preds = %3618
  %3624 = sext i32 %3619 to i64
  %3625 = getelementptr inbounds float, ptr %3075, i64 %3624
  %3626 = load float, ptr %3625, align 4, !tbaa !162
  %3627 = fptosi float %3626 to i64
  %3628 = tail call i64 @llvm.abs.i64(i64 %3627, i1 true)
  %3629 = add nuw nsw i64 %3628, %3546
  store i64 %3629, ptr %3077, align 8, !tbaa !120
  %3630 = add nuw nsw i32 %3547, 1
  br i1 %3397, label %3631, label %3681

3631:                                             ; preds = %3623
  %3632 = load i32, ptr %4, align 4, !tbaa !5
  %3633 = load i32, ptr %12, align 4, !tbaa !5
  %3634 = add nsw i32 %3633, -1
  %3635 = icmp slt i32 %3632, %3634
  br i1 %3635, label %3658, label %3636

3636:                                             ; preds = %3631
  %3637 = icmp eq i32 %3632, %3634
  br i1 %3637, label %3638, label %3674

3638:                                             ; preds = %3636
  store i32 0, ptr %4, align 4, !tbaa !5
  %3639 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3639, ptr %6, align 4, !tbaa !5
  br i1 %3402, label %3681, label %3640

3640:                                             ; preds = %3638, %3668
  %3641 = phi i64 [ %3672, %3668 ], [ 1, %3638 ]
  %3642 = getelementptr inbounds i32, ptr %4, i64 %3641
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %12, i64 %3641
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = add nsw i32 %3645, -1
  %3647 = icmp slt i32 %3643, %3646
  br i1 %3647, label %3648, label %3666

3648:                                             ; preds = %3640
  br i1 %3635, label %3658, label %3649

3649:                                             ; preds = %3648
  %3650 = shl i64 %3641, 32
  %3651 = add i64 %3650, -4294967296
  %3652 = ashr exact i64 %3651, 32
  %3653 = getelementptr inbounds i32, ptr %7, i64 %3652
  %3654 = load i32, ptr %3653, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %6, i64 %3641
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = add nsw i32 %3656, %3654
  store i32 %3657, ptr %3655, align 4, !tbaa !5
  br label %3676

3658:                                             ; preds = %3631, %3648
  %3659 = phi i32 [ %3643, %3648 ], [ %3632, %3631 ]
  %3660 = phi ptr [ %3642, %3648 ], [ %4, %3631 ]
  %3661 = phi i64 [ %3641, %3648 ], [ 0, %3631 ]
  %3662 = add nsw i32 %3659, 1
  store i32 %3662, ptr %3660, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %7, i64 %3661
  %3664 = load i32, ptr %3663, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %6, i64 %3661
  br label %3676

3666:                                             ; preds = %3640
  %3667 = icmp eq i32 %3643, %3646
  br i1 %3667, label %3668, label %3674

3668:                                             ; preds = %3666
  store i32 0, ptr %3642, align 4, !tbaa !5
  %3669 = getelementptr inbounds i32, ptr %8, i64 %3641
  %3670 = load i32, ptr %3669, align 4, !tbaa !5
  %3671 = getelementptr inbounds i32, ptr %6, i64 %3641
  store i32 %3670, ptr %3671, align 4, !tbaa !5
  %3672 = add nuw nsw i64 %3641, 1
  %3673 = icmp eq i64 %3672, %3400
  br i1 %3673, label %3681, label %3640, !llvm.loop !1242

3674:                                             ; preds = %3636, %3666
  %3675 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3676:                                             ; preds = %3649, %3658
  %3677 = phi ptr [ %3665, %3658 ], [ %3642, %3649 ]
  %3678 = phi i32 [ %3664, %3658 ], [ 1, %3649 ]
  %3679 = load i32, ptr %3677, align 4, !tbaa !5
  %3680 = add nsw i32 %3679, %3678
  store i32 %3680, ptr %3677, align 4, !tbaa !5
  br label %3681

3681:                                             ; preds = %3668, %3676, %3638, %3623
  %3682 = icmp eq i32 %3630, %5
  br i1 %3682, label %5522, label %3545, !llvm.loop !1243

3683:                                             ; preds = %3083
  %3684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

3685:                                             ; preds = %18
  %3686 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3687 = load ptr, ptr %3686, align 8, !tbaa !9
  %3688 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3689 = load ptr, ptr %3688, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3689, align 8, !tbaa !18
  %3690 = icmp eq i32 %13, 0
  br i1 %3690, label %3691, label %3697

3691:                                             ; preds = %3685
  %3692 = load float, ptr %3687, align 4, !tbaa !162
  %3693 = fpext float %3692 to double
  %3694 = fcmp fast olt float %3692, 0.000000e+00
  %3695 = fneg fast double %3693
  %3696 = select fast i1 %3694, double %3695, double %3693
  store double %3696, ptr %3689, align 8, !tbaa !18
  br label %5522

3697:                                             ; preds = %3685
  switch i32 %1, label %4295 [
    i32 1, label %3698
    i32 0, label %3997
  ]

3698:                                             ; preds = %3697
  %3699 = getelementptr inbounds i32, ptr %3, i64 %19
  %3700 = load i32, ptr %3699, align 4, !tbaa !5
  %3701 = icmp eq i32 %3700, 0
  %3702 = icmp sgt i32 %5, 0
  br i1 %3701, label %3712, label %3703

3703:                                             ; preds = %3698
  br i1 %3702, label %3704, label %5522

3704:                                             ; preds = %3703
  %3705 = icmp sgt i32 %13, 1
  %3706 = icmp sgt i32 %13, 0
  %3707 = add i32 %13, -2
  %3708 = zext i32 %3707 to i64
  %3709 = zext i32 %13 to i64
  %3710 = add nuw i32 %5, 1
  %3711 = icmp eq i32 %13, 1
  br label %3857

3712:                                             ; preds = %3698
  br i1 %3702, label %3713, label %5522

3713:                                             ; preds = %3712
  %3714 = icmp sgt i32 %13, 1
  %3715 = icmp sgt i32 %13, 0
  %3716 = add i32 %13, -2
  %3717 = zext i32 %3716 to i64
  %3718 = zext i32 %13 to i64
  %3719 = add nuw i32 %5, 1
  %3720 = icmp eq i32 %13, 1
  br label %3721

3721:                                             ; preds = %3713, %3855
  %3722 = phi double [ 0.000000e+00, %3713 ], [ %3805, %3855 ]
  %3723 = phi i32 [ 0, %3713 ], [ %3807, %3855 ]
  %3724 = phi double [ 0.000000e+00, %3713 ], [ %3806, %3855 ]
  %3725 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3714, label %3726, label %3795

3726:                                             ; preds = %3721, %3785
  %3727 = phi i32 [ %3794, %3785 ], [ 0, %3721 ]
  %3728 = phi i64 [ %3736, %3785 ], [ %3718, %3721 ]
  %3729 = phi i64 [ %3793, %3785 ], [ %3717, %3721 ]
  %3730 = phi i32 [ %3791, %3785 ], [ %3725, %3721 ]
  %3731 = sub i32 %3716, %3727
  %3732 = tail call i32 @llvm.smin.i32(i32 %3731, i32 0)
  %3733 = sub i32 %3731, %3732
  %3734 = zext i32 %3733 to i64
  %3735 = add nuw nsw i64 %3734, 1
  %3736 = add nsw i64 %3728, -1
  %3737 = icmp ult i32 %3733, 31
  br i1 %3737, label %3773, label %3738

3738:                                             ; preds = %3726
  %3739 = and i64 %3735, 8589934560
  %3740 = sub i64 %3729, %3739
  br label %3741

3741:                                             ; preds = %3741, %3738
  %3742 = phi i64 [ 0, %3738 ], [ %3765, %3741 ]
  %3743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3761, %3741 ]
  %3744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3762, %3741 ]
  %3745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3763, %3741 ]
  %3746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3764, %3741 ]
  %3747 = sub i64 %3729, %3742
  %3748 = getelementptr inbounds i32, ptr %9, i64 %3747
  %3749 = getelementptr inbounds i32, ptr %3748, i64 -7
  %3750 = load <8 x i32>, ptr %3749, align 4, !tbaa !5
  %3751 = shufflevector <8 x i32> %3750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3752 = getelementptr inbounds i32, ptr %3748, i64 -15
  %3753 = load <8 x i32>, ptr %3752, align 4, !tbaa !5
  %3754 = shufflevector <8 x i32> %3753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3755 = getelementptr inbounds i32, ptr %3748, i64 -23
  %3756 = load <8 x i32>, ptr %3755, align 4, !tbaa !5
  %3757 = shufflevector <8 x i32> %3756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3758 = getelementptr inbounds i32, ptr %3748, i64 -31
  %3759 = load <8 x i32>, ptr %3758, align 4, !tbaa !5
  %3760 = shufflevector <8 x i32> %3759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3761 = mul <8 x i32> %3751, %3743
  %3762 = mul <8 x i32> %3754, %3744
  %3763 = mul <8 x i32> %3757, %3745
  %3764 = mul <8 x i32> %3760, %3746
  %3765 = add nuw i64 %3742, 32
  %3766 = icmp eq i64 %3765, %3739
  br i1 %3766, label %3767, label %3741, !llvm.loop !1244

3767:                                             ; preds = %3741
  %3768 = mul <8 x i32> %3762, %3761
  %3769 = mul <8 x i32> %3763, %3768
  %3770 = mul <8 x i32> %3764, %3769
  %3771 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3770)
  %3772 = icmp eq i64 %3735, %3739
  br i1 %3772, label %3785, label %3773

3773:                                             ; preds = %3726, %3767
  %3774 = phi i64 [ %3729, %3726 ], [ %3740, %3767 ]
  %3775 = phi i32 [ 1, %3726 ], [ %3771, %3767 ]
  br label %3776

3776:                                             ; preds = %3773, %3776
  %3777 = phi i64 [ %3782, %3776 ], [ %3774, %3773 ]
  %3778 = phi i32 [ %3781, %3776 ], [ %3775, %3773 ]
  %3779 = getelementptr inbounds i32, ptr %9, i64 %3777
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = mul nsw i32 %3780, %3778
  %3782 = add nsw i64 %3777, -1
  %3783 = trunc i64 %3777 to i32
  %3784 = icmp sgt i32 %3783, 0
  br i1 %3784, label %3776, label %3785, !llvm.loop !1245

3785:                                             ; preds = %3776, %3767
  %3786 = phi i32 [ %3771, %3767 ], [ %3781, %3776 ]
  %3787 = and i64 %3736, 4294967295
  %3788 = getelementptr inbounds i32, ptr %6, i64 %3787
  %3789 = load i32, ptr %3788, align 4, !tbaa !5
  %3790 = mul nsw i32 %3789, %3786
  %3791 = add nsw i32 %3790, %3730
  %3792 = icmp sgt i64 %3728, 2
  %3793 = add nsw i64 %3729, -1
  %3794 = add i32 %3727, 1
  br i1 %3792, label %3726, label %3795, !llvm.loop !1246

3795:                                             ; preds = %3785, %3721
  %3796 = phi i32 [ %3725, %3721 ], [ %3791, %3785 ]
  %3797 = sext i32 %3796 to i64
  %3798 = getelementptr inbounds double, ptr %2, i64 %3797
  %3799 = load double, ptr %3798, align 8, !tbaa !18
  %3800 = getelementptr inbounds float, ptr %3687, i64 %3797
  %3801 = load float, ptr %3800, align 4, !tbaa !162
  %3802 = fpext float %3801 to double
  %3803 = fmul fast double %3799, %3802
  %3804 = tail call fast double @llvm.fabs.f64(double %3803)
  %3805 = fadd fast double %3804, %3722
  store double %3805, ptr %3689, align 8, !tbaa !18
  %3806 = fadd fast double %3799, %3724
  %3807 = add nuw nsw i32 %3723, 1
  br i1 %3715, label %3808, label %3855

3808:                                             ; preds = %3795
  %3809 = load i32, ptr %4, align 4, !tbaa !5
  %3810 = load i32, ptr %12, align 4, !tbaa !5
  %3811 = add nsw i32 %3810, -1
  %3812 = icmp slt i32 %3809, %3811
  br i1 %3812, label %3832, label %3813

3813:                                             ; preds = %3808
  %3814 = icmp eq i32 %3809, %3811
  br i1 %3814, label %3815, label %3848

3815:                                             ; preds = %3813
  store i32 0, ptr %4, align 4, !tbaa !5
  %3816 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3816, ptr %6, align 4, !tbaa !5
  br i1 %3720, label %3855, label %3817

3817:                                             ; preds = %3815, %3842
  %3818 = phi i64 [ %3846, %3842 ], [ 1, %3815 ]
  %3819 = getelementptr inbounds i32, ptr %4, i64 %3818
  %3820 = load i32, ptr %3819, align 4, !tbaa !5
  %3821 = getelementptr inbounds i32, ptr %12, i64 %3818
  %3822 = load i32, ptr %3821, align 4, !tbaa !5
  %3823 = add nsw i32 %3822, -1
  %3824 = icmp slt i32 %3820, %3823
  br i1 %3824, label %3825, label %3840

3825:                                             ; preds = %3817
  br i1 %3812, label %3832, label %3826

3826:                                             ; preds = %3825
  %3827 = getelementptr inbounds i32, ptr %7, i64 %3818
  %3828 = load i32, ptr %3827, align 4, !tbaa !5
  %3829 = getelementptr inbounds i32, ptr %6, i64 %3818
  %3830 = load i32, ptr %3829, align 4, !tbaa !5
  %3831 = add nsw i32 %3830, %3828
  store i32 %3831, ptr %3829, align 4, !tbaa !5
  br label %3850

3832:                                             ; preds = %3808, %3825
  %3833 = phi i32 [ %3820, %3825 ], [ %3809, %3808 ]
  %3834 = phi ptr [ %3819, %3825 ], [ %4, %3808 ]
  %3835 = phi i64 [ %3818, %3825 ], [ 0, %3808 ]
  %3836 = add nsw i32 %3833, 1
  store i32 %3836, ptr %3834, align 4, !tbaa !5
  %3837 = getelementptr inbounds i32, ptr %7, i64 %3835
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %6, i64 %3835
  br label %3850

3840:                                             ; preds = %3817
  %3841 = icmp eq i32 %3820, %3823
  br i1 %3841, label %3842, label %3848

3842:                                             ; preds = %3840
  store i32 0, ptr %3819, align 4, !tbaa !5
  %3843 = getelementptr inbounds i32, ptr %8, i64 %3818
  %3844 = load i32, ptr %3843, align 4, !tbaa !5
  %3845 = getelementptr inbounds i32, ptr %6, i64 %3818
  store i32 %3844, ptr %3845, align 4, !tbaa !5
  %3846 = add nuw nsw i64 %3818, 1
  %3847 = icmp eq i64 %3846, %3718
  br i1 %3847, label %3855, label %3817, !llvm.loop !1247

3848:                                             ; preds = %3813, %3840
  %3849 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3850:                                             ; preds = %3826, %3832
  %3851 = phi ptr [ %3839, %3832 ], [ %3819, %3826 ]
  %3852 = phi i32 [ %3838, %3832 ], [ 1, %3826 ]
  %3853 = load i32, ptr %3851, align 4, !tbaa !5
  %3854 = add nsw i32 %3853, %3852
  store i32 %3854, ptr %3851, align 4, !tbaa !5
  br label %3855

3855:                                             ; preds = %3842, %3850, %3815, %3795
  %3856 = icmp eq i32 %3807, %5
  br i1 %3856, label %5522, label %3721, !llvm.loop !1248

3857:                                             ; preds = %3704, %3995
  %3858 = phi double [ 0.000000e+00, %3704 ], [ %3943, %3995 ]
  %3859 = phi i32 [ 0, %3704 ], [ %3944, %3995 ]
  %3860 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3705, label %3861, label %3930

3861:                                             ; preds = %3857, %3920
  %3862 = phi i32 [ %3929, %3920 ], [ 0, %3857 ]
  %3863 = phi i64 [ %3871, %3920 ], [ %3709, %3857 ]
  %3864 = phi i64 [ %3928, %3920 ], [ %3708, %3857 ]
  %3865 = phi i32 [ %3926, %3920 ], [ %3860, %3857 ]
  %3866 = sub i32 %3707, %3862
  %3867 = tail call i32 @llvm.smin.i32(i32 %3866, i32 0)
  %3868 = sub i32 %3866, %3867
  %3869 = zext i32 %3868 to i64
  %3870 = add nuw nsw i64 %3869, 1
  %3871 = add nsw i64 %3863, -1
  %3872 = icmp ult i32 %3868, 31
  br i1 %3872, label %3908, label %3873

3873:                                             ; preds = %3861
  %3874 = and i64 %3870, 8589934560
  %3875 = sub i64 %3864, %3874
  br label %3876

3876:                                             ; preds = %3876, %3873
  %3877 = phi i64 [ 0, %3873 ], [ %3900, %3876 ]
  %3878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3896, %3876 ]
  %3879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3897, %3876 ]
  %3880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3898, %3876 ]
  %3881 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3899, %3876 ]
  %3882 = sub i64 %3864, %3877
  %3883 = getelementptr inbounds i32, ptr %11, i64 %3882
  %3884 = getelementptr inbounds i32, ptr %3883, i64 -7
  %3885 = load <8 x i32>, ptr %3884, align 4, !tbaa !5
  %3886 = shufflevector <8 x i32> %3885, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3887 = getelementptr inbounds i32, ptr %3883, i64 -15
  %3888 = load <8 x i32>, ptr %3887, align 4, !tbaa !5
  %3889 = shufflevector <8 x i32> %3888, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3890 = getelementptr inbounds i32, ptr %3883, i64 -23
  %3891 = load <8 x i32>, ptr %3890, align 4, !tbaa !5
  %3892 = shufflevector <8 x i32> %3891, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3893 = getelementptr inbounds i32, ptr %3883, i64 -31
  %3894 = load <8 x i32>, ptr %3893, align 4, !tbaa !5
  %3895 = shufflevector <8 x i32> %3894, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3896 = mul <8 x i32> %3886, %3878
  %3897 = mul <8 x i32> %3889, %3879
  %3898 = mul <8 x i32> %3892, %3880
  %3899 = mul <8 x i32> %3895, %3881
  %3900 = add nuw i64 %3877, 32
  %3901 = icmp eq i64 %3900, %3874
  br i1 %3901, label %3902, label %3876, !llvm.loop !1249

3902:                                             ; preds = %3876
  %3903 = mul <8 x i32> %3897, %3896
  %3904 = mul <8 x i32> %3898, %3903
  %3905 = mul <8 x i32> %3899, %3904
  %3906 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3905)
  %3907 = icmp eq i64 %3870, %3874
  br i1 %3907, label %3920, label %3908

3908:                                             ; preds = %3861, %3902
  %3909 = phi i64 [ %3864, %3861 ], [ %3875, %3902 ]
  %3910 = phi i32 [ 1, %3861 ], [ %3906, %3902 ]
  br label %3911

3911:                                             ; preds = %3908, %3911
  %3912 = phi i64 [ %3917, %3911 ], [ %3909, %3908 ]
  %3913 = phi i32 [ %3916, %3911 ], [ %3910, %3908 ]
  %3914 = getelementptr inbounds i32, ptr %11, i64 %3912
  %3915 = load i32, ptr %3914, align 4, !tbaa !5
  %3916 = mul nsw i32 %3915, %3913
  %3917 = add nsw i64 %3912, -1
  %3918 = trunc i64 %3912 to i32
  %3919 = icmp sgt i32 %3918, 0
  br i1 %3919, label %3911, label %3920, !llvm.loop !1250

3920:                                             ; preds = %3911, %3902
  %3921 = phi i32 [ %3906, %3902 ], [ %3916, %3911 ]
  %3922 = and i64 %3871, 4294967295
  %3923 = getelementptr inbounds i32, ptr %6, i64 %3922
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = mul nsw i32 %3924, %3921
  %3926 = add nsw i32 %3925, %3865
  %3927 = icmp sgt i64 %3863, 2
  %3928 = add nsw i64 %3864, -1
  %3929 = add i32 %3862, 1
  br i1 %3927, label %3861, label %3930, !llvm.loop !1251

3930:                                             ; preds = %3920, %3857
  %3931 = phi i32 [ %3860, %3857 ], [ %3926, %3920 ]
  %3932 = icmp slt i32 %3931, %5
  br i1 %3932, label %3935, label %3933

3933:                                             ; preds = %3930
  %3934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

3935:                                             ; preds = %3930
  %3936 = sext i32 %3931 to i64
  %3937 = getelementptr inbounds float, ptr %3687, i64 %3936
  %3938 = load float, ptr %3937, align 4, !tbaa !162
  %3939 = fpext float %3938 to double
  %3940 = fcmp fast olt float %3938, 0.000000e+00
  %3941 = fneg fast double %3939
  %3942 = select fast i1 %3940, double %3941, double %3939
  %3943 = fadd fast double %3942, %3858
  store double %3943, ptr %3689, align 8, !tbaa !18
  %3944 = add nuw nsw i32 %3859, 1
  br i1 %3706, label %3945, label %3995

3945:                                             ; preds = %3935
  %3946 = load i32, ptr %4, align 4, !tbaa !5
  %3947 = load i32, ptr %12, align 4, !tbaa !5
  %3948 = add nsw i32 %3947, -1
  %3949 = icmp slt i32 %3946, %3948
  br i1 %3949, label %3972, label %3950

3950:                                             ; preds = %3945
  %3951 = icmp eq i32 %3946, %3948
  br i1 %3951, label %3952, label %3988

3952:                                             ; preds = %3950
  store i32 0, ptr %4, align 4, !tbaa !5
  %3953 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3953, ptr %6, align 4, !tbaa !5
  br i1 %3711, label %3995, label %3954

3954:                                             ; preds = %3952, %3982
  %3955 = phi i64 [ %3986, %3982 ], [ 1, %3952 ]
  %3956 = getelementptr inbounds i32, ptr %4, i64 %3955
  %3957 = load i32, ptr %3956, align 4, !tbaa !5
  %3958 = getelementptr inbounds i32, ptr %12, i64 %3955
  %3959 = load i32, ptr %3958, align 4, !tbaa !5
  %3960 = add nsw i32 %3959, -1
  %3961 = icmp slt i32 %3957, %3960
  br i1 %3961, label %3962, label %3980

3962:                                             ; preds = %3954
  br i1 %3949, label %3972, label %3963

3963:                                             ; preds = %3962
  %3964 = shl i64 %3955, 32
  %3965 = add i64 %3964, -4294967296
  %3966 = ashr exact i64 %3965, 32
  %3967 = getelementptr inbounds i32, ptr %7, i64 %3966
  %3968 = load i32, ptr %3967, align 4, !tbaa !5
  %3969 = getelementptr inbounds i32, ptr %6, i64 %3955
  %3970 = load i32, ptr %3969, align 4, !tbaa !5
  %3971 = add nsw i32 %3970, %3968
  store i32 %3971, ptr %3969, align 4, !tbaa !5
  br label %3990

3972:                                             ; preds = %3945, %3962
  %3973 = phi i32 [ %3957, %3962 ], [ %3946, %3945 ]
  %3974 = phi ptr [ %3956, %3962 ], [ %4, %3945 ]
  %3975 = phi i64 [ %3955, %3962 ], [ 0, %3945 ]
  %3976 = add nsw i32 %3973, 1
  store i32 %3976, ptr %3974, align 4, !tbaa !5
  %3977 = getelementptr inbounds i32, ptr %7, i64 %3975
  %3978 = load i32, ptr %3977, align 4, !tbaa !5
  %3979 = getelementptr inbounds i32, ptr %6, i64 %3975
  br label %3990

3980:                                             ; preds = %3954
  %3981 = icmp eq i32 %3957, %3960
  br i1 %3981, label %3982, label %3988

3982:                                             ; preds = %3980
  store i32 0, ptr %3956, align 4, !tbaa !5
  %3983 = getelementptr inbounds i32, ptr %8, i64 %3955
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = getelementptr inbounds i32, ptr %6, i64 %3955
  store i32 %3984, ptr %3985, align 4, !tbaa !5
  %3986 = add nuw nsw i64 %3955, 1
  %3987 = icmp eq i64 %3986, %3709
  br i1 %3987, label %3995, label %3954, !llvm.loop !1252

3988:                                             ; preds = %3950, %3980
  %3989 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

3990:                                             ; preds = %3963, %3972
  %3991 = phi ptr [ %3979, %3972 ], [ %3956, %3963 ]
  %3992 = phi i32 [ %3978, %3972 ], [ 1, %3963 ]
  %3993 = load i32, ptr %3991, align 4, !tbaa !5
  %3994 = add nsw i32 %3993, %3992
  store i32 %3994, ptr %3991, align 4, !tbaa !5
  br label %3995

3995:                                             ; preds = %3982, %3990, %3952, %3935
  %3996 = icmp eq i32 %3944, %5
  br i1 %3996, label %5522, label %3857, !llvm.loop !1253

3997:                                             ; preds = %3697
  %3998 = getelementptr inbounds i32, ptr %3, i64 %19
  %3999 = load i32, ptr %3998, align 4, !tbaa !5
  %4000 = icmp eq i32 %3999, 0
  %4001 = icmp sgt i32 %5, 0
  br i1 %4000, label %4011, label %4002

4002:                                             ; preds = %3997
  br i1 %4001, label %4003, label %5522

4003:                                             ; preds = %4002
  %4004 = icmp sgt i32 %13, 1
  %4005 = icmp sgt i32 %13, 0
  %4006 = add i32 %13, -2
  %4007 = zext i32 %4006 to i64
  %4008 = zext i32 %13 to i64
  %4009 = add nuw i32 %5, 1
  %4010 = icmp eq i32 %13, 1
  br label %4155

4011:                                             ; preds = %3997
  br i1 %4001, label %4012, label %5522

4012:                                             ; preds = %4011
  %4013 = icmp sgt i32 %13, 1
  %4014 = icmp sgt i32 %13, 0
  %4015 = add i32 %13, -2
  %4016 = zext i32 %4015 to i64
  %4017 = zext i32 %13 to i64
  %4018 = add nuw i32 %5, 1
  %4019 = icmp eq i32 %13, 1
  br label %4020

4020:                                             ; preds = %4012, %4153
  %4021 = phi double [ 0.000000e+00, %4012 ], [ %4103, %4153 ]
  %4022 = phi i32 [ 0, %4012 ], [ %4105, %4153 ]
  %4023 = phi double [ 0.000000e+00, %4012 ], [ %4104, %4153 ]
  %4024 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4013, label %4025, label %4094

4025:                                             ; preds = %4020, %4084
  %4026 = phi i32 [ %4093, %4084 ], [ 0, %4020 ]
  %4027 = phi i64 [ %4035, %4084 ], [ %4017, %4020 ]
  %4028 = phi i64 [ %4092, %4084 ], [ %4016, %4020 ]
  %4029 = phi i32 [ %4090, %4084 ], [ %4024, %4020 ]
  %4030 = sub i32 %4015, %4026
  %4031 = tail call i32 @llvm.smin.i32(i32 %4030, i32 0)
  %4032 = sub i32 %4030, %4031
  %4033 = zext i32 %4032 to i64
  %4034 = add nuw nsw i64 %4033, 1
  %4035 = add nsw i64 %4027, -1
  %4036 = icmp ult i32 %4032, 31
  br i1 %4036, label %4072, label %4037

4037:                                             ; preds = %4025
  %4038 = and i64 %4034, 8589934560
  %4039 = sub i64 %4028, %4038
  br label %4040

4040:                                             ; preds = %4040, %4037
  %4041 = phi i64 [ 0, %4037 ], [ %4064, %4040 ]
  %4042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4037 ], [ %4060, %4040 ]
  %4043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4037 ], [ %4061, %4040 ]
  %4044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4037 ], [ %4062, %4040 ]
  %4045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4037 ], [ %4063, %4040 ]
  %4046 = sub i64 %4028, %4041
  %4047 = getelementptr inbounds i32, ptr %9, i64 %4046
  %4048 = getelementptr inbounds i32, ptr %4047, i64 -7
  %4049 = load <8 x i32>, ptr %4048, align 4, !tbaa !5
  %4050 = shufflevector <8 x i32> %4049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4051 = getelementptr inbounds i32, ptr %4047, i64 -15
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !5
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = getelementptr inbounds i32, ptr %4047, i64 -23
  %4055 = load <8 x i32>, ptr %4054, align 4, !tbaa !5
  %4056 = shufflevector <8 x i32> %4055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4057 = getelementptr inbounds i32, ptr %4047, i64 -31
  %4058 = load <8 x i32>, ptr %4057, align 4, !tbaa !5
  %4059 = shufflevector <8 x i32> %4058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4060 = mul <8 x i32> %4050, %4042
  %4061 = mul <8 x i32> %4053, %4043
  %4062 = mul <8 x i32> %4056, %4044
  %4063 = mul <8 x i32> %4059, %4045
  %4064 = add nuw i64 %4041, 32
  %4065 = icmp eq i64 %4064, %4038
  br i1 %4065, label %4066, label %4040, !llvm.loop !1254

4066:                                             ; preds = %4040
  %4067 = mul <8 x i32> %4061, %4060
  %4068 = mul <8 x i32> %4062, %4067
  %4069 = mul <8 x i32> %4063, %4068
  %4070 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4069)
  %4071 = icmp eq i64 %4034, %4038
  br i1 %4071, label %4084, label %4072

4072:                                             ; preds = %4025, %4066
  %4073 = phi i64 [ %4028, %4025 ], [ %4039, %4066 ]
  %4074 = phi i32 [ 1, %4025 ], [ %4070, %4066 ]
  br label %4075

4075:                                             ; preds = %4072, %4075
  %4076 = phi i64 [ %4081, %4075 ], [ %4073, %4072 ]
  %4077 = phi i32 [ %4080, %4075 ], [ %4074, %4072 ]
  %4078 = getelementptr inbounds i32, ptr %9, i64 %4076
  %4079 = load i32, ptr %4078, align 4, !tbaa !5
  %4080 = mul nsw i32 %4079, %4077
  %4081 = add nsw i64 %4076, -1
  %4082 = trunc i64 %4076 to i32
  %4083 = icmp sgt i32 %4082, 0
  br i1 %4083, label %4075, label %4084, !llvm.loop !1255

4084:                                             ; preds = %4075, %4066
  %4085 = phi i32 [ %4070, %4066 ], [ %4080, %4075 ]
  %4086 = and i64 %4035, 4294967295
  %4087 = getelementptr inbounds i32, ptr %6, i64 %4086
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = mul nsw i32 %4088, %4085
  %4090 = add nsw i32 %4089, %4029
  %4091 = icmp sgt i64 %4027, 2
  %4092 = add nsw i64 %4028, -1
  %4093 = add i32 %4026, 1
  br i1 %4091, label %4025, label %4094, !llvm.loop !1256

4094:                                             ; preds = %4084, %4020
  %4095 = phi i32 [ %4024, %4020 ], [ %4090, %4084 ]
  %4096 = sext i32 %4095 to i64
  %4097 = getelementptr inbounds float, ptr %3687, i64 %4096
  %4098 = load float, ptr %4097, align 4, !tbaa !162
  %4099 = fpext float %4098 to double
  %4100 = fcmp fast olt float %4098, 0.000000e+00
  %4101 = fneg fast double %4099
  %4102 = select fast i1 %4100, double %4101, double %4099
  %4103 = fadd fast double %4102, %4021
  %4104 = fadd fast double %4023, 1.000000e+00
  %4105 = add nuw nsw i32 %4022, 1
  br i1 %4014, label %4106, label %4153

4106:                                             ; preds = %4094
  %4107 = load i32, ptr %4, align 4, !tbaa !5
  %4108 = load i32, ptr %12, align 4, !tbaa !5
  %4109 = add nsw i32 %4108, -1
  %4110 = icmp slt i32 %4107, %4109
  br i1 %4110, label %4130, label %4111

4111:                                             ; preds = %4106
  %4112 = icmp eq i32 %4107, %4109
  br i1 %4112, label %4113, label %4146

4113:                                             ; preds = %4111
  store i32 0, ptr %4, align 4, !tbaa !5
  %4114 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4114, ptr %6, align 4, !tbaa !5
  br i1 %4019, label %4153, label %4115

4115:                                             ; preds = %4113, %4140
  %4116 = phi i64 [ %4144, %4140 ], [ 1, %4113 ]
  %4117 = getelementptr inbounds i32, ptr %4, i64 %4116
  %4118 = load i32, ptr %4117, align 4, !tbaa !5
  %4119 = getelementptr inbounds i32, ptr %12, i64 %4116
  %4120 = load i32, ptr %4119, align 4, !tbaa !5
  %4121 = add nsw i32 %4120, -1
  %4122 = icmp slt i32 %4118, %4121
  br i1 %4122, label %4123, label %4138

4123:                                             ; preds = %4115
  br i1 %4110, label %4130, label %4124

4124:                                             ; preds = %4123
  %4125 = getelementptr inbounds i32, ptr %7, i64 %4116
  %4126 = load i32, ptr %4125, align 4, !tbaa !5
  %4127 = getelementptr inbounds i32, ptr %6, i64 %4116
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = add nsw i32 %4128, %4126
  store i32 %4129, ptr %4127, align 4, !tbaa !5
  br label %4148

4130:                                             ; preds = %4106, %4123
  %4131 = phi i32 [ %4118, %4123 ], [ %4107, %4106 ]
  %4132 = phi ptr [ %4117, %4123 ], [ %4, %4106 ]
  %4133 = phi i64 [ %4116, %4123 ], [ 0, %4106 ]
  %4134 = add nsw i32 %4131, 1
  store i32 %4134, ptr %4132, align 4, !tbaa !5
  %4135 = getelementptr inbounds i32, ptr %7, i64 %4133
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %6, i64 %4133
  br label %4148

4138:                                             ; preds = %4115
  %4139 = icmp eq i32 %4118, %4121
  br i1 %4139, label %4140, label %4146

4140:                                             ; preds = %4138
  store i32 0, ptr %4117, align 4, !tbaa !5
  %4141 = getelementptr inbounds i32, ptr %8, i64 %4116
  %4142 = load i32, ptr %4141, align 4, !tbaa !5
  %4143 = getelementptr inbounds i32, ptr %6, i64 %4116
  store i32 %4142, ptr %4143, align 4, !tbaa !5
  %4144 = add nuw nsw i64 %4116, 1
  %4145 = icmp eq i64 %4144, %4017
  br i1 %4145, label %4153, label %4115, !llvm.loop !1257

4146:                                             ; preds = %4111, %4138
  store double %4103, ptr %3689, align 8, !tbaa !18
  %4147 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4148:                                             ; preds = %4124, %4130
  %4149 = phi ptr [ %4137, %4130 ], [ %4117, %4124 ]
  %4150 = phi i32 [ %4136, %4130 ], [ 1, %4124 ]
  %4151 = load i32, ptr %4149, align 4, !tbaa !5
  %4152 = add nsw i32 %4151, %4150
  store i32 %4152, ptr %4149, align 4, !tbaa !5
  br label %4153

4153:                                             ; preds = %4140, %4148, %4113, %4094
  %4154 = icmp eq i32 %4105, %5
  br i1 %4154, label %5520, label %4020, !llvm.loop !1258

4155:                                             ; preds = %4003, %4293
  %4156 = phi double [ 0.000000e+00, %4003 ], [ %4241, %4293 ]
  %4157 = phi i32 [ 0, %4003 ], [ %4242, %4293 ]
  %4158 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4159, label %4228

4159:                                             ; preds = %4155, %4218
  %4160 = phi i32 [ %4227, %4218 ], [ 0, %4155 ]
  %4161 = phi i64 [ %4169, %4218 ], [ %4008, %4155 ]
  %4162 = phi i64 [ %4226, %4218 ], [ %4007, %4155 ]
  %4163 = phi i32 [ %4224, %4218 ], [ %4158, %4155 ]
  %4164 = sub i32 %4006, %4160
  %4165 = tail call i32 @llvm.smin.i32(i32 %4164, i32 0)
  %4166 = sub i32 %4164, %4165
  %4167 = zext i32 %4166 to i64
  %4168 = add nuw nsw i64 %4167, 1
  %4169 = add nsw i64 %4161, -1
  %4170 = icmp ult i32 %4166, 31
  br i1 %4170, label %4206, label %4171

4171:                                             ; preds = %4159
  %4172 = and i64 %4168, 8589934560
  %4173 = sub i64 %4162, %4172
  br label %4174

4174:                                             ; preds = %4174, %4171
  %4175 = phi i64 [ 0, %4171 ], [ %4198, %4174 ]
  %4176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4171 ], [ %4194, %4174 ]
  %4177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4171 ], [ %4195, %4174 ]
  %4178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4171 ], [ %4196, %4174 ]
  %4179 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4171 ], [ %4197, %4174 ]
  %4180 = sub i64 %4162, %4175
  %4181 = getelementptr inbounds i32, ptr %11, i64 %4180
  %4182 = getelementptr inbounds i32, ptr %4181, i64 -7
  %4183 = load <8 x i32>, ptr %4182, align 4, !tbaa !5
  %4184 = shufflevector <8 x i32> %4183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4185 = getelementptr inbounds i32, ptr %4181, i64 -15
  %4186 = load <8 x i32>, ptr %4185, align 4, !tbaa !5
  %4187 = shufflevector <8 x i32> %4186, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4188 = getelementptr inbounds i32, ptr %4181, i64 -23
  %4189 = load <8 x i32>, ptr %4188, align 4, !tbaa !5
  %4190 = shufflevector <8 x i32> %4189, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4191 = getelementptr inbounds i32, ptr %4181, i64 -31
  %4192 = load <8 x i32>, ptr %4191, align 4, !tbaa !5
  %4193 = shufflevector <8 x i32> %4192, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4194 = mul <8 x i32> %4184, %4176
  %4195 = mul <8 x i32> %4187, %4177
  %4196 = mul <8 x i32> %4190, %4178
  %4197 = mul <8 x i32> %4193, %4179
  %4198 = add nuw i64 %4175, 32
  %4199 = icmp eq i64 %4198, %4172
  br i1 %4199, label %4200, label %4174, !llvm.loop !1259

4200:                                             ; preds = %4174
  %4201 = mul <8 x i32> %4195, %4194
  %4202 = mul <8 x i32> %4196, %4201
  %4203 = mul <8 x i32> %4197, %4202
  %4204 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4203)
  %4205 = icmp eq i64 %4168, %4172
  br i1 %4205, label %4218, label %4206

4206:                                             ; preds = %4159, %4200
  %4207 = phi i64 [ %4162, %4159 ], [ %4173, %4200 ]
  %4208 = phi i32 [ 1, %4159 ], [ %4204, %4200 ]
  br label %4209

4209:                                             ; preds = %4206, %4209
  %4210 = phi i64 [ %4215, %4209 ], [ %4207, %4206 ]
  %4211 = phi i32 [ %4214, %4209 ], [ %4208, %4206 ]
  %4212 = getelementptr inbounds i32, ptr %11, i64 %4210
  %4213 = load i32, ptr %4212, align 4, !tbaa !5
  %4214 = mul nsw i32 %4213, %4211
  %4215 = add nsw i64 %4210, -1
  %4216 = trunc i64 %4210 to i32
  %4217 = icmp sgt i32 %4216, 0
  br i1 %4217, label %4209, label %4218, !llvm.loop !1260

4218:                                             ; preds = %4209, %4200
  %4219 = phi i32 [ %4204, %4200 ], [ %4214, %4209 ]
  %4220 = and i64 %4169, 4294967295
  %4221 = getelementptr inbounds i32, ptr %6, i64 %4220
  %4222 = load i32, ptr %4221, align 4, !tbaa !5
  %4223 = mul nsw i32 %4222, %4219
  %4224 = add nsw i32 %4223, %4163
  %4225 = icmp sgt i64 %4161, 2
  %4226 = add nsw i64 %4162, -1
  %4227 = add i32 %4160, 1
  br i1 %4225, label %4159, label %4228, !llvm.loop !1261

4228:                                             ; preds = %4218, %4155
  %4229 = phi i32 [ %4158, %4155 ], [ %4224, %4218 ]
  %4230 = icmp slt i32 %4229, %5
  br i1 %4230, label %4233, label %4231

4231:                                             ; preds = %4228
  %4232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4233:                                             ; preds = %4228
  %4234 = sext i32 %4229 to i64
  %4235 = getelementptr inbounds float, ptr %3687, i64 %4234
  %4236 = load float, ptr %4235, align 4, !tbaa !162
  %4237 = fpext float %4236 to double
  %4238 = fcmp fast olt float %4236, 0.000000e+00
  %4239 = fneg fast double %4237
  %4240 = select fast i1 %4238, double %4239, double %4237
  %4241 = fadd fast double %4240, %4156
  store double %4241, ptr %3689, align 8, !tbaa !18
  %4242 = add nuw nsw i32 %4157, 1
  br i1 %4005, label %4243, label %4293

4243:                                             ; preds = %4233
  %4244 = load i32, ptr %4, align 4, !tbaa !5
  %4245 = load i32, ptr %12, align 4, !tbaa !5
  %4246 = add nsw i32 %4245, -1
  %4247 = icmp slt i32 %4244, %4246
  br i1 %4247, label %4270, label %4248

4248:                                             ; preds = %4243
  %4249 = icmp eq i32 %4244, %4246
  br i1 %4249, label %4250, label %4286

4250:                                             ; preds = %4248
  store i32 0, ptr %4, align 4, !tbaa !5
  %4251 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4251, ptr %6, align 4, !tbaa !5
  br i1 %4010, label %4293, label %4252

4252:                                             ; preds = %4250, %4280
  %4253 = phi i64 [ %4284, %4280 ], [ 1, %4250 ]
  %4254 = getelementptr inbounds i32, ptr %4, i64 %4253
  %4255 = load i32, ptr %4254, align 4, !tbaa !5
  %4256 = getelementptr inbounds i32, ptr %12, i64 %4253
  %4257 = load i32, ptr %4256, align 4, !tbaa !5
  %4258 = add nsw i32 %4257, -1
  %4259 = icmp slt i32 %4255, %4258
  br i1 %4259, label %4260, label %4278

4260:                                             ; preds = %4252
  br i1 %4247, label %4270, label %4261

4261:                                             ; preds = %4260
  %4262 = shl i64 %4253, 32
  %4263 = add i64 %4262, -4294967296
  %4264 = ashr exact i64 %4263, 32
  %4265 = getelementptr inbounds i32, ptr %7, i64 %4264
  %4266 = load i32, ptr %4265, align 4, !tbaa !5
  %4267 = getelementptr inbounds i32, ptr %6, i64 %4253
  %4268 = load i32, ptr %4267, align 4, !tbaa !5
  %4269 = add nsw i32 %4268, %4266
  store i32 %4269, ptr %4267, align 4, !tbaa !5
  br label %4288

4270:                                             ; preds = %4243, %4260
  %4271 = phi i32 [ %4255, %4260 ], [ %4244, %4243 ]
  %4272 = phi ptr [ %4254, %4260 ], [ %4, %4243 ]
  %4273 = phi i64 [ %4253, %4260 ], [ 0, %4243 ]
  %4274 = add nsw i32 %4271, 1
  store i32 %4274, ptr %4272, align 4, !tbaa !5
  %4275 = getelementptr inbounds i32, ptr %7, i64 %4273
  %4276 = load i32, ptr %4275, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %6, i64 %4273
  br label %4288

4278:                                             ; preds = %4252
  %4279 = icmp eq i32 %4255, %4258
  br i1 %4279, label %4280, label %4286

4280:                                             ; preds = %4278
  store i32 0, ptr %4254, align 4, !tbaa !5
  %4281 = getelementptr inbounds i32, ptr %8, i64 %4253
  %4282 = load i32, ptr %4281, align 4, !tbaa !5
  %4283 = getelementptr inbounds i32, ptr %6, i64 %4253
  store i32 %4282, ptr %4283, align 4, !tbaa !5
  %4284 = add nuw nsw i64 %4253, 1
  %4285 = icmp eq i64 %4284, %4008
  br i1 %4285, label %4293, label %4252, !llvm.loop !1262

4286:                                             ; preds = %4248, %4278
  %4287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4288:                                             ; preds = %4261, %4270
  %4289 = phi ptr [ %4277, %4270 ], [ %4254, %4261 ]
  %4290 = phi i32 [ %4276, %4270 ], [ 1, %4261 ]
  %4291 = load i32, ptr %4289, align 4, !tbaa !5
  %4292 = add nsw i32 %4291, %4290
  store i32 %4292, ptr %4289, align 4, !tbaa !5
  br label %4293

4293:                                             ; preds = %4280, %4288, %4250, %4233
  %4294 = icmp eq i32 %4242, %5
  br i1 %4294, label %5522, label %4155, !llvm.loop !1263

4295:                                             ; preds = %3697
  %4296 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

4297:                                             ; preds = %18
  %4298 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4299 = load ptr, ptr %4298, align 8, !tbaa !9
  %4300 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4301 = load ptr, ptr %4300, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4301, align 4, !tbaa !162
  %4302 = icmp eq i32 %13, 0
  br i1 %4302, label %4303, label %4306

4303:                                             ; preds = %4297
  %4304 = load float, ptr %4299, align 4, !tbaa !162
  %4305 = tail call fast float @llvm.fabs.f32(float %4304)
  store float %4305, ptr %4301, align 4, !tbaa !162
  br label %5522

4306:                                             ; preds = %4297
  switch i32 %1, label %4902 [
    i32 1, label %4307
    i32 0, label %4610
  ]

4307:                                             ; preds = %4306
  %4308 = getelementptr inbounds i32, ptr %3, i64 %19
  %4309 = load i32, ptr %4308, align 4, !tbaa !5
  %4310 = icmp eq i32 %4309, 0
  %4311 = icmp sgt i32 %5, 0
  br i1 %4310, label %4321, label %4312

4312:                                             ; preds = %4307
  br i1 %4311, label %4313, label %5522

4313:                                             ; preds = %4312
  %4314 = icmp sgt i32 %13, 1
  %4315 = icmp sgt i32 %13, 0
  %4316 = add i32 %13, -2
  %4317 = zext i32 %4316 to i64
  %4318 = zext i32 %13 to i64
  %4319 = add nuw i32 %5, 1
  %4320 = icmp eq i32 %13, 1
  br label %4468

4321:                                             ; preds = %4307
  br i1 %4311, label %4322, label %5522

4322:                                             ; preds = %4321
  %4323 = icmp sgt i32 %13, 1
  %4324 = icmp sgt i32 %13, 0
  %4325 = add i32 %13, -2
  %4326 = zext i32 %4325 to i64
  %4327 = zext i32 %13 to i64
  %4328 = add nuw i32 %5, 1
  %4329 = icmp eq i32 %13, 1
  br label %4330

4330:                                             ; preds = %4322, %4466
  %4331 = phi float [ 0.000000e+00, %4322 ], [ %4416, %4466 ]
  %4332 = phi i32 [ 0, %4322 ], [ %4418, %4466 ]
  %4333 = phi double [ 0.000000e+00, %4322 ], [ %4417, %4466 ]
  %4334 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4323, label %4335, label %4404

4335:                                             ; preds = %4330, %4394
  %4336 = phi i32 [ %4403, %4394 ], [ 0, %4330 ]
  %4337 = phi i64 [ %4345, %4394 ], [ %4327, %4330 ]
  %4338 = phi i64 [ %4402, %4394 ], [ %4326, %4330 ]
  %4339 = phi i32 [ %4400, %4394 ], [ %4334, %4330 ]
  %4340 = sub i32 %4325, %4336
  %4341 = tail call i32 @llvm.smin.i32(i32 %4340, i32 0)
  %4342 = sub i32 %4340, %4341
  %4343 = zext i32 %4342 to i64
  %4344 = add nuw nsw i64 %4343, 1
  %4345 = add nsw i64 %4337, -1
  %4346 = icmp ult i32 %4342, 31
  br i1 %4346, label %4382, label %4347

4347:                                             ; preds = %4335
  %4348 = and i64 %4344, 8589934560
  %4349 = sub i64 %4338, %4348
  br label %4350

4350:                                             ; preds = %4350, %4347
  %4351 = phi i64 [ 0, %4347 ], [ %4374, %4350 ]
  %4352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4370, %4350 ]
  %4353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4371, %4350 ]
  %4354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4372, %4350 ]
  %4355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4373, %4350 ]
  %4356 = sub i64 %4338, %4351
  %4357 = getelementptr inbounds i32, ptr %9, i64 %4356
  %4358 = getelementptr inbounds i32, ptr %4357, i64 -7
  %4359 = load <8 x i32>, ptr %4358, align 4, !tbaa !5
  %4360 = shufflevector <8 x i32> %4359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4361 = getelementptr inbounds i32, ptr %4357, i64 -15
  %4362 = load <8 x i32>, ptr %4361, align 4, !tbaa !5
  %4363 = shufflevector <8 x i32> %4362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4364 = getelementptr inbounds i32, ptr %4357, i64 -23
  %4365 = load <8 x i32>, ptr %4364, align 4, !tbaa !5
  %4366 = shufflevector <8 x i32> %4365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4367 = getelementptr inbounds i32, ptr %4357, i64 -31
  %4368 = load <8 x i32>, ptr %4367, align 4, !tbaa !5
  %4369 = shufflevector <8 x i32> %4368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4370 = mul <8 x i32> %4360, %4352
  %4371 = mul <8 x i32> %4363, %4353
  %4372 = mul <8 x i32> %4366, %4354
  %4373 = mul <8 x i32> %4369, %4355
  %4374 = add nuw i64 %4351, 32
  %4375 = icmp eq i64 %4374, %4348
  br i1 %4375, label %4376, label %4350, !llvm.loop !1264

4376:                                             ; preds = %4350
  %4377 = mul <8 x i32> %4371, %4370
  %4378 = mul <8 x i32> %4372, %4377
  %4379 = mul <8 x i32> %4373, %4378
  %4380 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4379)
  %4381 = icmp eq i64 %4344, %4348
  br i1 %4381, label %4394, label %4382

4382:                                             ; preds = %4335, %4376
  %4383 = phi i64 [ %4338, %4335 ], [ %4349, %4376 ]
  %4384 = phi i32 [ 1, %4335 ], [ %4380, %4376 ]
  br label %4385

4385:                                             ; preds = %4382, %4385
  %4386 = phi i64 [ %4391, %4385 ], [ %4383, %4382 ]
  %4387 = phi i32 [ %4390, %4385 ], [ %4384, %4382 ]
  %4388 = getelementptr inbounds i32, ptr %9, i64 %4386
  %4389 = load i32, ptr %4388, align 4, !tbaa !5
  %4390 = mul nsw i32 %4389, %4387
  %4391 = add nsw i64 %4386, -1
  %4392 = trunc i64 %4386 to i32
  %4393 = icmp sgt i32 %4392, 0
  br i1 %4393, label %4385, label %4394, !llvm.loop !1265

4394:                                             ; preds = %4385, %4376
  %4395 = phi i32 [ %4380, %4376 ], [ %4390, %4385 ]
  %4396 = and i64 %4345, 4294967295
  %4397 = getelementptr inbounds i32, ptr %6, i64 %4396
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = mul nsw i32 %4398, %4395
  %4400 = add nsw i32 %4399, %4339
  %4401 = icmp sgt i64 %4337, 2
  %4402 = add nsw i64 %4338, -1
  %4403 = add i32 %4336, 1
  br i1 %4401, label %4335, label %4404, !llvm.loop !1266

4404:                                             ; preds = %4394, %4330
  %4405 = phi i32 [ %4334, %4330 ], [ %4400, %4394 ]
  %4406 = sext i32 %4405 to i64
  %4407 = getelementptr inbounds double, ptr %2, i64 %4406
  %4408 = load double, ptr %4407, align 8, !tbaa !18
  %4409 = getelementptr inbounds float, ptr %4299, i64 %4406
  %4410 = load float, ptr %4409, align 4, !tbaa !162
  %4411 = fpext float %4331 to double
  %4412 = fpext float %4410 to double
  %4413 = fmul fast double %4408, %4412
  %4414 = tail call fast double @llvm.fabs.f64(double %4413)
  %4415 = fadd fast double %4414, %4411
  %4416 = fptrunc double %4415 to float
  store float %4416, ptr %4301, align 4, !tbaa !162
  %4417 = fadd fast double %4408, %4333
  %4418 = add nuw nsw i32 %4332, 1
  br i1 %4324, label %4419, label %4466

4419:                                             ; preds = %4404
  %4420 = load i32, ptr %4, align 4, !tbaa !5
  %4421 = load i32, ptr %12, align 4, !tbaa !5
  %4422 = add nsw i32 %4421, -1
  %4423 = icmp slt i32 %4420, %4422
  br i1 %4423, label %4443, label %4424

4424:                                             ; preds = %4419
  %4425 = icmp eq i32 %4420, %4422
  br i1 %4425, label %4426, label %4459

4426:                                             ; preds = %4424
  store i32 0, ptr %4, align 4, !tbaa !5
  %4427 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4427, ptr %6, align 4, !tbaa !5
  br i1 %4329, label %4466, label %4428

4428:                                             ; preds = %4426, %4453
  %4429 = phi i64 [ %4457, %4453 ], [ 1, %4426 ]
  %4430 = getelementptr inbounds i32, ptr %4, i64 %4429
  %4431 = load i32, ptr %4430, align 4, !tbaa !5
  %4432 = getelementptr inbounds i32, ptr %12, i64 %4429
  %4433 = load i32, ptr %4432, align 4, !tbaa !5
  %4434 = add nsw i32 %4433, -1
  %4435 = icmp slt i32 %4431, %4434
  br i1 %4435, label %4436, label %4451

4436:                                             ; preds = %4428
  br i1 %4423, label %4443, label %4437

4437:                                             ; preds = %4436
  %4438 = getelementptr inbounds i32, ptr %7, i64 %4429
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %6, i64 %4429
  %4441 = load i32, ptr %4440, align 4, !tbaa !5
  %4442 = add nsw i32 %4441, %4439
  store i32 %4442, ptr %4440, align 4, !tbaa !5
  br label %4461

4443:                                             ; preds = %4419, %4436
  %4444 = phi i32 [ %4431, %4436 ], [ %4420, %4419 ]
  %4445 = phi ptr [ %4430, %4436 ], [ %4, %4419 ]
  %4446 = phi i64 [ %4429, %4436 ], [ 0, %4419 ]
  %4447 = add nsw i32 %4444, 1
  store i32 %4447, ptr %4445, align 4, !tbaa !5
  %4448 = getelementptr inbounds i32, ptr %7, i64 %4446
  %4449 = load i32, ptr %4448, align 4, !tbaa !5
  %4450 = getelementptr inbounds i32, ptr %6, i64 %4446
  br label %4461

4451:                                             ; preds = %4428
  %4452 = icmp eq i32 %4431, %4434
  br i1 %4452, label %4453, label %4459

4453:                                             ; preds = %4451
  store i32 0, ptr %4430, align 4, !tbaa !5
  %4454 = getelementptr inbounds i32, ptr %8, i64 %4429
  %4455 = load i32, ptr %4454, align 4, !tbaa !5
  %4456 = getelementptr inbounds i32, ptr %6, i64 %4429
  store i32 %4455, ptr %4456, align 4, !tbaa !5
  %4457 = add nuw nsw i64 %4429, 1
  %4458 = icmp eq i64 %4457, %4327
  br i1 %4458, label %4466, label %4428, !llvm.loop !1267

4459:                                             ; preds = %4424, %4451
  %4460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4461:                                             ; preds = %4437, %4443
  %4462 = phi ptr [ %4450, %4443 ], [ %4430, %4437 ]
  %4463 = phi i32 [ %4449, %4443 ], [ 1, %4437 ]
  %4464 = load i32, ptr %4462, align 4, !tbaa !5
  %4465 = add nsw i32 %4464, %4463
  store i32 %4465, ptr %4462, align 4, !tbaa !5
  br label %4466

4466:                                             ; preds = %4453, %4461, %4426, %4404
  %4467 = icmp eq i32 %4418, %5
  br i1 %4467, label %5522, label %4330, !llvm.loop !1268

4468:                                             ; preds = %4313, %4608
  %4469 = phi float [ 0.000000e+00, %4313 ], [ %4556, %4608 ]
  %4470 = phi i32 [ 0, %4313 ], [ %4557, %4608 ]
  %4471 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4314, label %4472, label %4541

4472:                                             ; preds = %4468, %4531
  %4473 = phi i32 [ %4540, %4531 ], [ 0, %4468 ]
  %4474 = phi i64 [ %4482, %4531 ], [ %4318, %4468 ]
  %4475 = phi i64 [ %4539, %4531 ], [ %4317, %4468 ]
  %4476 = phi i32 [ %4537, %4531 ], [ %4471, %4468 ]
  %4477 = sub i32 %4316, %4473
  %4478 = tail call i32 @llvm.smin.i32(i32 %4477, i32 0)
  %4479 = sub i32 %4477, %4478
  %4480 = zext i32 %4479 to i64
  %4481 = add nuw nsw i64 %4480, 1
  %4482 = add nsw i64 %4474, -1
  %4483 = icmp ult i32 %4479, 31
  br i1 %4483, label %4519, label %4484

4484:                                             ; preds = %4472
  %4485 = and i64 %4481, 8589934560
  %4486 = sub i64 %4475, %4485
  br label %4487

4487:                                             ; preds = %4487, %4484
  %4488 = phi i64 [ 0, %4484 ], [ %4511, %4487 ]
  %4489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4507, %4487 ]
  %4490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4508, %4487 ]
  %4491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4509, %4487 ]
  %4492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4510, %4487 ]
  %4493 = sub i64 %4475, %4488
  %4494 = getelementptr inbounds i32, ptr %11, i64 %4493
  %4495 = getelementptr inbounds i32, ptr %4494, i64 -7
  %4496 = load <8 x i32>, ptr %4495, align 4, !tbaa !5
  %4497 = shufflevector <8 x i32> %4496, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4498 = getelementptr inbounds i32, ptr %4494, i64 -15
  %4499 = load <8 x i32>, ptr %4498, align 4, !tbaa !5
  %4500 = shufflevector <8 x i32> %4499, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4501 = getelementptr inbounds i32, ptr %4494, i64 -23
  %4502 = load <8 x i32>, ptr %4501, align 4, !tbaa !5
  %4503 = shufflevector <8 x i32> %4502, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4504 = getelementptr inbounds i32, ptr %4494, i64 -31
  %4505 = load <8 x i32>, ptr %4504, align 4, !tbaa !5
  %4506 = shufflevector <8 x i32> %4505, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4507 = mul <8 x i32> %4497, %4489
  %4508 = mul <8 x i32> %4500, %4490
  %4509 = mul <8 x i32> %4503, %4491
  %4510 = mul <8 x i32> %4506, %4492
  %4511 = add nuw i64 %4488, 32
  %4512 = icmp eq i64 %4511, %4485
  br i1 %4512, label %4513, label %4487, !llvm.loop !1269

4513:                                             ; preds = %4487
  %4514 = mul <8 x i32> %4508, %4507
  %4515 = mul <8 x i32> %4509, %4514
  %4516 = mul <8 x i32> %4510, %4515
  %4517 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4516)
  %4518 = icmp eq i64 %4481, %4485
  br i1 %4518, label %4531, label %4519

4519:                                             ; preds = %4472, %4513
  %4520 = phi i64 [ %4475, %4472 ], [ %4486, %4513 ]
  %4521 = phi i32 [ 1, %4472 ], [ %4517, %4513 ]
  br label %4522

4522:                                             ; preds = %4519, %4522
  %4523 = phi i64 [ %4528, %4522 ], [ %4520, %4519 ]
  %4524 = phi i32 [ %4527, %4522 ], [ %4521, %4519 ]
  %4525 = getelementptr inbounds i32, ptr %11, i64 %4523
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = mul nsw i32 %4526, %4524
  %4528 = add nsw i64 %4523, -1
  %4529 = trunc i64 %4523 to i32
  %4530 = icmp sgt i32 %4529, 0
  br i1 %4530, label %4522, label %4531, !llvm.loop !1270

4531:                                             ; preds = %4522, %4513
  %4532 = phi i32 [ %4517, %4513 ], [ %4527, %4522 ]
  %4533 = and i64 %4482, 4294967295
  %4534 = getelementptr inbounds i32, ptr %6, i64 %4533
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = mul nsw i32 %4535, %4532
  %4537 = add nsw i32 %4536, %4476
  %4538 = icmp sgt i64 %4474, 2
  %4539 = add nsw i64 %4475, -1
  %4540 = add i32 %4473, 1
  br i1 %4538, label %4472, label %4541, !llvm.loop !1271

4541:                                             ; preds = %4531, %4468
  %4542 = phi i32 [ %4471, %4468 ], [ %4537, %4531 ]
  %4543 = icmp slt i32 %4542, %5
  br i1 %4543, label %4546, label %4544

4544:                                             ; preds = %4541
  %4545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4546:                                             ; preds = %4541
  %4547 = sext i32 %4542 to i64
  %4548 = getelementptr inbounds float, ptr %4299, i64 %4547
  %4549 = load float, ptr %4548, align 4, !tbaa !162
  %4550 = fpext float %4469 to double
  %4551 = fpext float %4549 to double
  %4552 = fcmp fast olt float %4549, 0.000000e+00
  %4553 = fneg fast double %4551
  %4554 = select fast i1 %4552, double %4553, double %4551
  %4555 = fadd fast double %4554, %4550
  %4556 = fptrunc double %4555 to float
  store float %4556, ptr %4301, align 4, !tbaa !162
  %4557 = add nuw nsw i32 %4470, 1
  br i1 %4315, label %4558, label %4608

4558:                                             ; preds = %4546
  %4559 = load i32, ptr %4, align 4, !tbaa !5
  %4560 = load i32, ptr %12, align 4, !tbaa !5
  %4561 = add nsw i32 %4560, -1
  %4562 = icmp slt i32 %4559, %4561
  br i1 %4562, label %4585, label %4563

4563:                                             ; preds = %4558
  %4564 = icmp eq i32 %4559, %4561
  br i1 %4564, label %4565, label %4601

4565:                                             ; preds = %4563
  store i32 0, ptr %4, align 4, !tbaa !5
  %4566 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4566, ptr %6, align 4, !tbaa !5
  br i1 %4320, label %4608, label %4567

4567:                                             ; preds = %4565, %4595
  %4568 = phi i64 [ %4599, %4595 ], [ 1, %4565 ]
  %4569 = getelementptr inbounds i32, ptr %4, i64 %4568
  %4570 = load i32, ptr %4569, align 4, !tbaa !5
  %4571 = getelementptr inbounds i32, ptr %12, i64 %4568
  %4572 = load i32, ptr %4571, align 4, !tbaa !5
  %4573 = add nsw i32 %4572, -1
  %4574 = icmp slt i32 %4570, %4573
  br i1 %4574, label %4575, label %4593

4575:                                             ; preds = %4567
  br i1 %4562, label %4585, label %4576

4576:                                             ; preds = %4575
  %4577 = shl i64 %4568, 32
  %4578 = add i64 %4577, -4294967296
  %4579 = ashr exact i64 %4578, 32
  %4580 = getelementptr inbounds i32, ptr %7, i64 %4579
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = getelementptr inbounds i32, ptr %6, i64 %4568
  %4583 = load i32, ptr %4582, align 4, !tbaa !5
  %4584 = add nsw i32 %4583, %4581
  store i32 %4584, ptr %4582, align 4, !tbaa !5
  br label %4603

4585:                                             ; preds = %4558, %4575
  %4586 = phi i32 [ %4570, %4575 ], [ %4559, %4558 ]
  %4587 = phi ptr [ %4569, %4575 ], [ %4, %4558 ]
  %4588 = phi i64 [ %4568, %4575 ], [ 0, %4558 ]
  %4589 = add nsw i32 %4586, 1
  store i32 %4589, ptr %4587, align 4, !tbaa !5
  %4590 = getelementptr inbounds i32, ptr %7, i64 %4588
  %4591 = load i32, ptr %4590, align 4, !tbaa !5
  %4592 = getelementptr inbounds i32, ptr %6, i64 %4588
  br label %4603

4593:                                             ; preds = %4567
  %4594 = icmp eq i32 %4570, %4573
  br i1 %4594, label %4595, label %4601

4595:                                             ; preds = %4593
  store i32 0, ptr %4569, align 4, !tbaa !5
  %4596 = getelementptr inbounds i32, ptr %8, i64 %4568
  %4597 = load i32, ptr %4596, align 4, !tbaa !5
  %4598 = getelementptr inbounds i32, ptr %6, i64 %4568
  store i32 %4597, ptr %4598, align 4, !tbaa !5
  %4599 = add nuw nsw i64 %4568, 1
  %4600 = icmp eq i64 %4599, %4318
  br i1 %4600, label %4608, label %4567, !llvm.loop !1272

4601:                                             ; preds = %4563, %4593
  %4602 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4603:                                             ; preds = %4576, %4585
  %4604 = phi ptr [ %4592, %4585 ], [ %4569, %4576 ]
  %4605 = phi i32 [ %4591, %4585 ], [ 1, %4576 ]
  %4606 = load i32, ptr %4604, align 4, !tbaa !5
  %4607 = add nsw i32 %4606, %4605
  store i32 %4607, ptr %4604, align 4, !tbaa !5
  br label %4608

4608:                                             ; preds = %4595, %4603, %4565, %4546
  %4609 = icmp eq i32 %4557, %5
  br i1 %4609, label %5522, label %4468, !llvm.loop !1273

4610:                                             ; preds = %4306
  %4611 = getelementptr inbounds i32, ptr %3, i64 %19
  %4612 = load i32, ptr %4611, align 4, !tbaa !5
  %4613 = icmp eq i32 %4612, 0
  %4614 = icmp sgt i32 %5, 0
  br i1 %4613, label %4624, label %4615

4615:                                             ; preds = %4610
  br i1 %4614, label %4616, label %5522

4616:                                             ; preds = %4615
  %4617 = icmp sgt i32 %13, 1
  %4618 = icmp sgt i32 %13, 0
  %4619 = add i32 %13, -2
  %4620 = zext i32 %4619 to i64
  %4621 = zext i32 %13 to i64
  %4622 = add nuw i32 %5, 1
  %4623 = icmp eq i32 %13, 1
  br label %4765

4624:                                             ; preds = %4610
  br i1 %4614, label %4625, label %5522

4625:                                             ; preds = %4624
  %4626 = icmp sgt i32 %13, 1
  %4627 = icmp sgt i32 %13, 0
  %4628 = add i32 %13, -2
  %4629 = zext i32 %4628 to i64
  %4630 = zext i32 %13 to i64
  %4631 = add nuw i32 %5, 1
  %4632 = icmp eq i32 %13, 1
  br label %4633

4633:                                             ; preds = %4625, %4763
  %4634 = phi float [ 0.000000e+00, %4625 ], [ %4713, %4763 ]
  %4635 = phi i32 [ 0, %4625 ], [ %4715, %4763 ]
  %4636 = phi double [ 0.000000e+00, %4625 ], [ %4714, %4763 ]
  %4637 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4626, label %4638, label %4707

4638:                                             ; preds = %4633, %4697
  %4639 = phi i32 [ %4706, %4697 ], [ 0, %4633 ]
  %4640 = phi i64 [ %4648, %4697 ], [ %4630, %4633 ]
  %4641 = phi i64 [ %4705, %4697 ], [ %4629, %4633 ]
  %4642 = phi i32 [ %4703, %4697 ], [ %4637, %4633 ]
  %4643 = sub i32 %4628, %4639
  %4644 = tail call i32 @llvm.smin.i32(i32 %4643, i32 0)
  %4645 = sub i32 %4643, %4644
  %4646 = zext i32 %4645 to i64
  %4647 = add nuw nsw i64 %4646, 1
  %4648 = add nsw i64 %4640, -1
  %4649 = icmp ult i32 %4645, 31
  br i1 %4649, label %4685, label %4650

4650:                                             ; preds = %4638
  %4651 = and i64 %4647, 8589934560
  %4652 = sub i64 %4641, %4651
  br label %4653

4653:                                             ; preds = %4653, %4650
  %4654 = phi i64 [ 0, %4650 ], [ %4677, %4653 ]
  %4655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4650 ], [ %4673, %4653 ]
  %4656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4650 ], [ %4674, %4653 ]
  %4657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4650 ], [ %4675, %4653 ]
  %4658 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4650 ], [ %4676, %4653 ]
  %4659 = sub i64 %4641, %4654
  %4660 = getelementptr inbounds i32, ptr %9, i64 %4659
  %4661 = getelementptr inbounds i32, ptr %4660, i64 -7
  %4662 = load <8 x i32>, ptr %4661, align 4, !tbaa !5
  %4663 = shufflevector <8 x i32> %4662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4664 = getelementptr inbounds i32, ptr %4660, i64 -15
  %4665 = load <8 x i32>, ptr %4664, align 4, !tbaa !5
  %4666 = shufflevector <8 x i32> %4665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4667 = getelementptr inbounds i32, ptr %4660, i64 -23
  %4668 = load <8 x i32>, ptr %4667, align 4, !tbaa !5
  %4669 = shufflevector <8 x i32> %4668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4670 = getelementptr inbounds i32, ptr %4660, i64 -31
  %4671 = load <8 x i32>, ptr %4670, align 4, !tbaa !5
  %4672 = shufflevector <8 x i32> %4671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4673 = mul <8 x i32> %4663, %4655
  %4674 = mul <8 x i32> %4666, %4656
  %4675 = mul <8 x i32> %4669, %4657
  %4676 = mul <8 x i32> %4672, %4658
  %4677 = add nuw i64 %4654, 32
  %4678 = icmp eq i64 %4677, %4651
  br i1 %4678, label %4679, label %4653, !llvm.loop !1274

4679:                                             ; preds = %4653
  %4680 = mul <8 x i32> %4674, %4673
  %4681 = mul <8 x i32> %4675, %4680
  %4682 = mul <8 x i32> %4676, %4681
  %4683 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4682)
  %4684 = icmp eq i64 %4647, %4651
  br i1 %4684, label %4697, label %4685

4685:                                             ; preds = %4638, %4679
  %4686 = phi i64 [ %4641, %4638 ], [ %4652, %4679 ]
  %4687 = phi i32 [ 1, %4638 ], [ %4683, %4679 ]
  br label %4688

4688:                                             ; preds = %4685, %4688
  %4689 = phi i64 [ %4694, %4688 ], [ %4686, %4685 ]
  %4690 = phi i32 [ %4693, %4688 ], [ %4687, %4685 ]
  %4691 = getelementptr inbounds i32, ptr %9, i64 %4689
  %4692 = load i32, ptr %4691, align 4, !tbaa !5
  %4693 = mul nsw i32 %4692, %4690
  %4694 = add nsw i64 %4689, -1
  %4695 = trunc i64 %4689 to i32
  %4696 = icmp sgt i32 %4695, 0
  br i1 %4696, label %4688, label %4697, !llvm.loop !1275

4697:                                             ; preds = %4688, %4679
  %4698 = phi i32 [ %4683, %4679 ], [ %4693, %4688 ]
  %4699 = and i64 %4648, 4294967295
  %4700 = getelementptr inbounds i32, ptr %6, i64 %4699
  %4701 = load i32, ptr %4700, align 4, !tbaa !5
  %4702 = mul nsw i32 %4701, %4698
  %4703 = add nsw i32 %4702, %4642
  %4704 = icmp sgt i64 %4640, 2
  %4705 = add nsw i64 %4641, -1
  %4706 = add i32 %4639, 1
  br i1 %4704, label %4638, label %4707, !llvm.loop !1276

4707:                                             ; preds = %4697, %4633
  %4708 = phi i32 [ %4637, %4633 ], [ %4703, %4697 ]
  %4709 = sext i32 %4708 to i64
  %4710 = getelementptr inbounds float, ptr %4299, i64 %4709
  %4711 = load float, ptr %4710, align 4, !tbaa !162
  %4712 = tail call fast float @llvm.fabs.f32(float %4711)
  %4713 = fadd fast float %4634, %4712
  store float %4713, ptr %4301, align 4, !tbaa !162
  %4714 = fadd fast double %4636, 1.000000e+00
  %4715 = add nuw nsw i32 %4635, 1
  br i1 %4627, label %4716, label %4763

4716:                                             ; preds = %4707
  %4717 = load i32, ptr %4, align 4, !tbaa !5
  %4718 = load i32, ptr %12, align 4, !tbaa !5
  %4719 = add nsw i32 %4718, -1
  %4720 = icmp slt i32 %4717, %4719
  br i1 %4720, label %4740, label %4721

4721:                                             ; preds = %4716
  %4722 = icmp eq i32 %4717, %4719
  br i1 %4722, label %4723, label %4756

4723:                                             ; preds = %4721
  store i32 0, ptr %4, align 4, !tbaa !5
  %4724 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4724, ptr %6, align 4, !tbaa !5
  br i1 %4632, label %4763, label %4725

4725:                                             ; preds = %4723, %4750
  %4726 = phi i64 [ %4754, %4750 ], [ 1, %4723 ]
  %4727 = getelementptr inbounds i32, ptr %4, i64 %4726
  %4728 = load i32, ptr %4727, align 4, !tbaa !5
  %4729 = getelementptr inbounds i32, ptr %12, i64 %4726
  %4730 = load i32, ptr %4729, align 4, !tbaa !5
  %4731 = add nsw i32 %4730, -1
  %4732 = icmp slt i32 %4728, %4731
  br i1 %4732, label %4733, label %4748

4733:                                             ; preds = %4725
  br i1 %4720, label %4740, label %4734

4734:                                             ; preds = %4733
  %4735 = getelementptr inbounds i32, ptr %7, i64 %4726
  %4736 = load i32, ptr %4735, align 4, !tbaa !5
  %4737 = getelementptr inbounds i32, ptr %6, i64 %4726
  %4738 = load i32, ptr %4737, align 4, !tbaa !5
  %4739 = add nsw i32 %4738, %4736
  store i32 %4739, ptr %4737, align 4, !tbaa !5
  br label %4758

4740:                                             ; preds = %4716, %4733
  %4741 = phi i32 [ %4728, %4733 ], [ %4717, %4716 ]
  %4742 = phi ptr [ %4727, %4733 ], [ %4, %4716 ]
  %4743 = phi i64 [ %4726, %4733 ], [ 0, %4716 ]
  %4744 = add nsw i32 %4741, 1
  store i32 %4744, ptr %4742, align 4, !tbaa !5
  %4745 = getelementptr inbounds i32, ptr %7, i64 %4743
  %4746 = load i32, ptr %4745, align 4, !tbaa !5
  %4747 = getelementptr inbounds i32, ptr %6, i64 %4743
  br label %4758

4748:                                             ; preds = %4725
  %4749 = icmp eq i32 %4728, %4731
  br i1 %4749, label %4750, label %4756

4750:                                             ; preds = %4748
  store i32 0, ptr %4727, align 4, !tbaa !5
  %4751 = getelementptr inbounds i32, ptr %8, i64 %4726
  %4752 = load i32, ptr %4751, align 4, !tbaa !5
  %4753 = getelementptr inbounds i32, ptr %6, i64 %4726
  store i32 %4752, ptr %4753, align 4, !tbaa !5
  %4754 = add nuw nsw i64 %4726, 1
  %4755 = icmp eq i64 %4754, %4630
  br i1 %4755, label %4763, label %4725, !llvm.loop !1277

4756:                                             ; preds = %4721, %4748
  %4757 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4758:                                             ; preds = %4734, %4740
  %4759 = phi ptr [ %4747, %4740 ], [ %4727, %4734 ]
  %4760 = phi i32 [ %4746, %4740 ], [ 1, %4734 ]
  %4761 = load i32, ptr %4759, align 4, !tbaa !5
  %4762 = add nsw i32 %4761, %4760
  store i32 %4762, ptr %4759, align 4, !tbaa !5
  br label %4763

4763:                                             ; preds = %4750, %4758, %4723, %4707
  %4764 = icmp eq i32 %4715, %5
  br i1 %4764, label %5522, label %4633, !llvm.loop !1278

4765:                                             ; preds = %4616, %4900
  %4766 = phi float [ 0.000000e+00, %4616 ], [ %4848, %4900 ]
  %4767 = phi i32 [ 0, %4616 ], [ %4849, %4900 ]
  %4768 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4617, label %4769, label %4838

4769:                                             ; preds = %4765, %4828
  %4770 = phi i32 [ %4837, %4828 ], [ 0, %4765 ]
  %4771 = phi i64 [ %4779, %4828 ], [ %4621, %4765 ]
  %4772 = phi i64 [ %4836, %4828 ], [ %4620, %4765 ]
  %4773 = phi i32 [ %4834, %4828 ], [ %4768, %4765 ]
  %4774 = sub i32 %4619, %4770
  %4775 = tail call i32 @llvm.smin.i32(i32 %4774, i32 0)
  %4776 = sub i32 %4774, %4775
  %4777 = zext i32 %4776 to i64
  %4778 = add nuw nsw i64 %4777, 1
  %4779 = add nsw i64 %4771, -1
  %4780 = icmp ult i32 %4776, 31
  br i1 %4780, label %4816, label %4781

4781:                                             ; preds = %4769
  %4782 = and i64 %4778, 8589934560
  %4783 = sub i64 %4772, %4782
  br label %4784

4784:                                             ; preds = %4784, %4781
  %4785 = phi i64 [ 0, %4781 ], [ %4808, %4784 ]
  %4786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4781 ], [ %4804, %4784 ]
  %4787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4781 ], [ %4805, %4784 ]
  %4788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4781 ], [ %4806, %4784 ]
  %4789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4781 ], [ %4807, %4784 ]
  %4790 = sub i64 %4772, %4785
  %4791 = getelementptr inbounds i32, ptr %11, i64 %4790
  %4792 = getelementptr inbounds i32, ptr %4791, i64 -7
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !5
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = getelementptr inbounds i32, ptr %4791, i64 -15
  %4796 = load <8 x i32>, ptr %4795, align 4, !tbaa !5
  %4797 = shufflevector <8 x i32> %4796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4798 = getelementptr inbounds i32, ptr %4791, i64 -23
  %4799 = load <8 x i32>, ptr %4798, align 4, !tbaa !5
  %4800 = shufflevector <8 x i32> %4799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4801 = getelementptr inbounds i32, ptr %4791, i64 -31
  %4802 = load <8 x i32>, ptr %4801, align 4, !tbaa !5
  %4803 = shufflevector <8 x i32> %4802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4804 = mul <8 x i32> %4794, %4786
  %4805 = mul <8 x i32> %4797, %4787
  %4806 = mul <8 x i32> %4800, %4788
  %4807 = mul <8 x i32> %4803, %4789
  %4808 = add nuw i64 %4785, 32
  %4809 = icmp eq i64 %4808, %4782
  br i1 %4809, label %4810, label %4784, !llvm.loop !1279

4810:                                             ; preds = %4784
  %4811 = mul <8 x i32> %4805, %4804
  %4812 = mul <8 x i32> %4806, %4811
  %4813 = mul <8 x i32> %4807, %4812
  %4814 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4813)
  %4815 = icmp eq i64 %4778, %4782
  br i1 %4815, label %4828, label %4816

4816:                                             ; preds = %4769, %4810
  %4817 = phi i64 [ %4772, %4769 ], [ %4783, %4810 ]
  %4818 = phi i32 [ 1, %4769 ], [ %4814, %4810 ]
  br label %4819

4819:                                             ; preds = %4816, %4819
  %4820 = phi i64 [ %4825, %4819 ], [ %4817, %4816 ]
  %4821 = phi i32 [ %4824, %4819 ], [ %4818, %4816 ]
  %4822 = getelementptr inbounds i32, ptr %11, i64 %4820
  %4823 = load i32, ptr %4822, align 4, !tbaa !5
  %4824 = mul nsw i32 %4823, %4821
  %4825 = add nsw i64 %4820, -1
  %4826 = trunc i64 %4820 to i32
  %4827 = icmp sgt i32 %4826, 0
  br i1 %4827, label %4819, label %4828, !llvm.loop !1280

4828:                                             ; preds = %4819, %4810
  %4829 = phi i32 [ %4814, %4810 ], [ %4824, %4819 ]
  %4830 = and i64 %4779, 4294967295
  %4831 = getelementptr inbounds i32, ptr %6, i64 %4830
  %4832 = load i32, ptr %4831, align 4, !tbaa !5
  %4833 = mul nsw i32 %4832, %4829
  %4834 = add nsw i32 %4833, %4773
  %4835 = icmp sgt i64 %4771, 2
  %4836 = add nsw i64 %4772, -1
  %4837 = add i32 %4770, 1
  br i1 %4835, label %4769, label %4838, !llvm.loop !1281

4838:                                             ; preds = %4828, %4765
  %4839 = phi i32 [ %4768, %4765 ], [ %4834, %4828 ]
  %4840 = icmp slt i32 %4839, %5
  br i1 %4840, label %4843, label %4841

4841:                                             ; preds = %4838
  %4842 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

4843:                                             ; preds = %4838
  %4844 = sext i32 %4839 to i64
  %4845 = getelementptr inbounds float, ptr %4299, i64 %4844
  %4846 = load float, ptr %4845, align 4, !tbaa !162
  %4847 = tail call fast float @llvm.fabs.f32(float %4846)
  %4848 = fadd fast float %4766, %4847
  store float %4848, ptr %4301, align 4, !tbaa !162
  %4849 = add nuw nsw i32 %4767, 1
  br i1 %4618, label %4850, label %4900

4850:                                             ; preds = %4843
  %4851 = load i32, ptr %4, align 4, !tbaa !5
  %4852 = load i32, ptr %12, align 4, !tbaa !5
  %4853 = add nsw i32 %4852, -1
  %4854 = icmp slt i32 %4851, %4853
  br i1 %4854, label %4877, label %4855

4855:                                             ; preds = %4850
  %4856 = icmp eq i32 %4851, %4853
  br i1 %4856, label %4857, label %4893

4857:                                             ; preds = %4855
  store i32 0, ptr %4, align 4, !tbaa !5
  %4858 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4858, ptr %6, align 4, !tbaa !5
  br i1 %4623, label %4900, label %4859

4859:                                             ; preds = %4857, %4887
  %4860 = phi i64 [ %4891, %4887 ], [ 1, %4857 ]
  %4861 = getelementptr inbounds i32, ptr %4, i64 %4860
  %4862 = load i32, ptr %4861, align 4, !tbaa !5
  %4863 = getelementptr inbounds i32, ptr %12, i64 %4860
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = add nsw i32 %4864, -1
  %4866 = icmp slt i32 %4862, %4865
  br i1 %4866, label %4867, label %4885

4867:                                             ; preds = %4859
  br i1 %4854, label %4877, label %4868

4868:                                             ; preds = %4867
  %4869 = shl i64 %4860, 32
  %4870 = add i64 %4869, -4294967296
  %4871 = ashr exact i64 %4870, 32
  %4872 = getelementptr inbounds i32, ptr %7, i64 %4871
  %4873 = load i32, ptr %4872, align 4, !tbaa !5
  %4874 = getelementptr inbounds i32, ptr %6, i64 %4860
  %4875 = load i32, ptr %4874, align 4, !tbaa !5
  %4876 = add nsw i32 %4875, %4873
  store i32 %4876, ptr %4874, align 4, !tbaa !5
  br label %4895

4877:                                             ; preds = %4850, %4867
  %4878 = phi i32 [ %4862, %4867 ], [ %4851, %4850 ]
  %4879 = phi ptr [ %4861, %4867 ], [ %4, %4850 ]
  %4880 = phi i64 [ %4860, %4867 ], [ 0, %4850 ]
  %4881 = add nsw i32 %4878, 1
  store i32 %4881, ptr %4879, align 4, !tbaa !5
  %4882 = getelementptr inbounds i32, ptr %7, i64 %4880
  %4883 = load i32, ptr %4882, align 4, !tbaa !5
  %4884 = getelementptr inbounds i32, ptr %6, i64 %4880
  br label %4895

4885:                                             ; preds = %4859
  %4886 = icmp eq i32 %4862, %4865
  br i1 %4886, label %4887, label %4893

4887:                                             ; preds = %4885
  store i32 0, ptr %4861, align 4, !tbaa !5
  %4888 = getelementptr inbounds i32, ptr %8, i64 %4860
  %4889 = load i32, ptr %4888, align 4, !tbaa !5
  %4890 = getelementptr inbounds i32, ptr %6, i64 %4860
  store i32 %4889, ptr %4890, align 4, !tbaa !5
  %4891 = add nuw nsw i64 %4860, 1
  %4892 = icmp eq i64 %4891, %4621
  br i1 %4892, label %4900, label %4859, !llvm.loop !1282

4893:                                             ; preds = %4855, %4885
  %4894 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

4895:                                             ; preds = %4868, %4877
  %4896 = phi ptr [ %4884, %4877 ], [ %4861, %4868 ]
  %4897 = phi i32 [ %4883, %4877 ], [ 1, %4868 ]
  %4898 = load i32, ptr %4896, align 4, !tbaa !5
  %4899 = add nsw i32 %4898, %4897
  store i32 %4899, ptr %4896, align 4, !tbaa !5
  br label %4900

4900:                                             ; preds = %4887, %4895, %4857, %4843
  %4901 = icmp eq i32 %4849, %5
  br i1 %4901, label %5522, label %4765, !llvm.loop !1283

4902:                                             ; preds = %4306
  %4903 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

4904:                                             ; preds = %18
  %4905 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4906 = load ptr, ptr %4905, align 8, !tbaa !9
  %4907 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4908 = load ptr, ptr %4907, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4908, align 8, !tbaa !18
  %4909 = icmp eq i32 %13, 0
  br i1 %4909, label %4910, label %4916

4910:                                             ; preds = %4904
  %4911 = load float, ptr %4906, align 4, !tbaa !162
  %4912 = fpext float %4911 to double
  %4913 = fcmp fast olt float %4911, 0.000000e+00
  %4914 = fneg fast double %4912
  %4915 = select fast i1 %4913, double %4914, double %4912
  store double %4915, ptr %4908, align 8, !tbaa !18
  br label %5522

4916:                                             ; preds = %4904
  switch i32 %1, label %5514 [
    i32 1, label %4917
    i32 0, label %5216
  ]

4917:                                             ; preds = %4916
  %4918 = getelementptr inbounds i32, ptr %3, i64 %19
  %4919 = load i32, ptr %4918, align 4, !tbaa !5
  %4920 = icmp eq i32 %4919, 0
  %4921 = icmp sgt i32 %5, 0
  br i1 %4920, label %4931, label %4922

4922:                                             ; preds = %4917
  br i1 %4921, label %4923, label %5522

4923:                                             ; preds = %4922
  %4924 = icmp sgt i32 %13, 1
  %4925 = icmp sgt i32 %13, 0
  %4926 = add i32 %13, -2
  %4927 = zext i32 %4926 to i64
  %4928 = zext i32 %13 to i64
  %4929 = add nuw i32 %5, 1
  %4930 = icmp eq i32 %13, 1
  br label %5076

4931:                                             ; preds = %4917
  br i1 %4921, label %4932, label %5522

4932:                                             ; preds = %4931
  %4933 = icmp sgt i32 %13, 1
  %4934 = icmp sgt i32 %13, 0
  %4935 = add i32 %13, -2
  %4936 = zext i32 %4935 to i64
  %4937 = zext i32 %13 to i64
  %4938 = add nuw i32 %5, 1
  %4939 = icmp eq i32 %13, 1
  br label %4940

4940:                                             ; preds = %4932, %5074
  %4941 = phi double [ 0.000000e+00, %4932 ], [ %5024, %5074 ]
  %4942 = phi i32 [ 0, %4932 ], [ %5026, %5074 ]
  %4943 = phi double [ 0.000000e+00, %4932 ], [ %5025, %5074 ]
  %4944 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4933, label %4945, label %5014

4945:                                             ; preds = %4940, %5004
  %4946 = phi i32 [ %5013, %5004 ], [ 0, %4940 ]
  %4947 = phi i64 [ %4955, %5004 ], [ %4937, %4940 ]
  %4948 = phi i64 [ %5012, %5004 ], [ %4936, %4940 ]
  %4949 = phi i32 [ %5010, %5004 ], [ %4944, %4940 ]
  %4950 = sub i32 %4935, %4946
  %4951 = tail call i32 @llvm.smin.i32(i32 %4950, i32 0)
  %4952 = sub i32 %4950, %4951
  %4953 = zext i32 %4952 to i64
  %4954 = add nuw nsw i64 %4953, 1
  %4955 = add nsw i64 %4947, -1
  %4956 = icmp ult i32 %4952, 31
  br i1 %4956, label %4992, label %4957

4957:                                             ; preds = %4945
  %4958 = and i64 %4954, 8589934560
  %4959 = sub i64 %4948, %4958
  br label %4960

4960:                                             ; preds = %4960, %4957
  %4961 = phi i64 [ 0, %4957 ], [ %4984, %4960 ]
  %4962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4957 ], [ %4980, %4960 ]
  %4963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4957 ], [ %4981, %4960 ]
  %4964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4957 ], [ %4982, %4960 ]
  %4965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4957 ], [ %4983, %4960 ]
  %4966 = sub i64 %4948, %4961
  %4967 = getelementptr inbounds i32, ptr %9, i64 %4966
  %4968 = getelementptr inbounds i32, ptr %4967, i64 -7
  %4969 = load <8 x i32>, ptr %4968, align 4, !tbaa !5
  %4970 = shufflevector <8 x i32> %4969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4971 = getelementptr inbounds i32, ptr %4967, i64 -15
  %4972 = load <8 x i32>, ptr %4971, align 4, !tbaa !5
  %4973 = shufflevector <8 x i32> %4972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4974 = getelementptr inbounds i32, ptr %4967, i64 -23
  %4975 = load <8 x i32>, ptr %4974, align 4, !tbaa !5
  %4976 = shufflevector <8 x i32> %4975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4977 = getelementptr inbounds i32, ptr %4967, i64 -31
  %4978 = load <8 x i32>, ptr %4977, align 4, !tbaa !5
  %4979 = shufflevector <8 x i32> %4978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4980 = mul <8 x i32> %4970, %4962
  %4981 = mul <8 x i32> %4973, %4963
  %4982 = mul <8 x i32> %4976, %4964
  %4983 = mul <8 x i32> %4979, %4965
  %4984 = add nuw i64 %4961, 32
  %4985 = icmp eq i64 %4984, %4958
  br i1 %4985, label %4986, label %4960, !llvm.loop !1284

4986:                                             ; preds = %4960
  %4987 = mul <8 x i32> %4981, %4980
  %4988 = mul <8 x i32> %4982, %4987
  %4989 = mul <8 x i32> %4983, %4988
  %4990 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4989)
  %4991 = icmp eq i64 %4954, %4958
  br i1 %4991, label %5004, label %4992

4992:                                             ; preds = %4945, %4986
  %4993 = phi i64 [ %4948, %4945 ], [ %4959, %4986 ]
  %4994 = phi i32 [ 1, %4945 ], [ %4990, %4986 ]
  br label %4995

4995:                                             ; preds = %4992, %4995
  %4996 = phi i64 [ %5001, %4995 ], [ %4993, %4992 ]
  %4997 = phi i32 [ %5000, %4995 ], [ %4994, %4992 ]
  %4998 = getelementptr inbounds i32, ptr %9, i64 %4996
  %4999 = load i32, ptr %4998, align 4, !tbaa !5
  %5000 = mul nsw i32 %4999, %4997
  %5001 = add nsw i64 %4996, -1
  %5002 = trunc i64 %4996 to i32
  %5003 = icmp sgt i32 %5002, 0
  br i1 %5003, label %4995, label %5004, !llvm.loop !1285

5004:                                             ; preds = %4995, %4986
  %5005 = phi i32 [ %4990, %4986 ], [ %5000, %4995 ]
  %5006 = and i64 %4955, 4294967295
  %5007 = getelementptr inbounds i32, ptr %6, i64 %5006
  %5008 = load i32, ptr %5007, align 4, !tbaa !5
  %5009 = mul nsw i32 %5008, %5005
  %5010 = add nsw i32 %5009, %4949
  %5011 = icmp sgt i64 %4947, 2
  %5012 = add nsw i64 %4948, -1
  %5013 = add i32 %4946, 1
  br i1 %5011, label %4945, label %5014, !llvm.loop !1286

5014:                                             ; preds = %5004, %4940
  %5015 = phi i32 [ %4944, %4940 ], [ %5010, %5004 ]
  %5016 = sext i32 %5015 to i64
  %5017 = getelementptr inbounds double, ptr %2, i64 %5016
  %5018 = load double, ptr %5017, align 8, !tbaa !18
  %5019 = getelementptr inbounds float, ptr %4906, i64 %5016
  %5020 = load float, ptr %5019, align 4, !tbaa !162
  %5021 = fpext float %5020 to double
  %5022 = fmul fast double %5018, %5021
  %5023 = tail call fast double @llvm.fabs.f64(double %5022)
  %5024 = fadd fast double %5023, %4941
  store double %5024, ptr %4908, align 8, !tbaa !18
  %5025 = fadd fast double %5018, %4943
  %5026 = add nuw nsw i32 %4942, 1
  br i1 %4934, label %5027, label %5074

5027:                                             ; preds = %5014
  %5028 = load i32, ptr %4, align 4, !tbaa !5
  %5029 = load i32, ptr %12, align 4, !tbaa !5
  %5030 = add nsw i32 %5029, -1
  %5031 = icmp slt i32 %5028, %5030
  br i1 %5031, label %5051, label %5032

5032:                                             ; preds = %5027
  %5033 = icmp eq i32 %5028, %5030
  br i1 %5033, label %5034, label %5067

5034:                                             ; preds = %5032
  store i32 0, ptr %4, align 4, !tbaa !5
  %5035 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5035, ptr %6, align 4, !tbaa !5
  br i1 %4939, label %5074, label %5036

5036:                                             ; preds = %5034, %5061
  %5037 = phi i64 [ %5065, %5061 ], [ 1, %5034 ]
  %5038 = getelementptr inbounds i32, ptr %4, i64 %5037
  %5039 = load i32, ptr %5038, align 4, !tbaa !5
  %5040 = getelementptr inbounds i32, ptr %12, i64 %5037
  %5041 = load i32, ptr %5040, align 4, !tbaa !5
  %5042 = add nsw i32 %5041, -1
  %5043 = icmp slt i32 %5039, %5042
  br i1 %5043, label %5044, label %5059

5044:                                             ; preds = %5036
  br i1 %5031, label %5051, label %5045

5045:                                             ; preds = %5044
  %5046 = getelementptr inbounds i32, ptr %7, i64 %5037
  %5047 = load i32, ptr %5046, align 4, !tbaa !5
  %5048 = getelementptr inbounds i32, ptr %6, i64 %5037
  %5049 = load i32, ptr %5048, align 4, !tbaa !5
  %5050 = add nsw i32 %5049, %5047
  store i32 %5050, ptr %5048, align 4, !tbaa !5
  br label %5069

5051:                                             ; preds = %5027, %5044
  %5052 = phi i32 [ %5039, %5044 ], [ %5028, %5027 ]
  %5053 = phi ptr [ %5038, %5044 ], [ %4, %5027 ]
  %5054 = phi i64 [ %5037, %5044 ], [ 0, %5027 ]
  %5055 = add nsw i32 %5052, 1
  store i32 %5055, ptr %5053, align 4, !tbaa !5
  %5056 = getelementptr inbounds i32, ptr %7, i64 %5054
  %5057 = load i32, ptr %5056, align 4, !tbaa !5
  %5058 = getelementptr inbounds i32, ptr %6, i64 %5054
  br label %5069

5059:                                             ; preds = %5036
  %5060 = icmp eq i32 %5039, %5042
  br i1 %5060, label %5061, label %5067

5061:                                             ; preds = %5059
  store i32 0, ptr %5038, align 4, !tbaa !5
  %5062 = getelementptr inbounds i32, ptr %8, i64 %5037
  %5063 = load i32, ptr %5062, align 4, !tbaa !5
  %5064 = getelementptr inbounds i32, ptr %6, i64 %5037
  store i32 %5063, ptr %5064, align 4, !tbaa !5
  %5065 = add nuw nsw i64 %5037, 1
  %5066 = icmp eq i64 %5065, %4937
  br i1 %5066, label %5074, label %5036, !llvm.loop !1287

5067:                                             ; preds = %5032, %5059
  %5068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5069:                                             ; preds = %5045, %5051
  %5070 = phi ptr [ %5058, %5051 ], [ %5038, %5045 ]
  %5071 = phi i32 [ %5057, %5051 ], [ 1, %5045 ]
  %5072 = load i32, ptr %5070, align 4, !tbaa !5
  %5073 = add nsw i32 %5072, %5071
  store i32 %5073, ptr %5070, align 4, !tbaa !5
  br label %5074

5074:                                             ; preds = %5061, %5069, %5034, %5014
  %5075 = icmp eq i32 %5026, %5
  br i1 %5075, label %5522, label %4940, !llvm.loop !1288

5076:                                             ; preds = %4923, %5214
  %5077 = phi double [ 0.000000e+00, %4923 ], [ %5162, %5214 ]
  %5078 = phi i32 [ 0, %4923 ], [ %5163, %5214 ]
  %5079 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4924, label %5080, label %5149

5080:                                             ; preds = %5076, %5139
  %5081 = phi i32 [ %5148, %5139 ], [ 0, %5076 ]
  %5082 = phi i64 [ %5090, %5139 ], [ %4928, %5076 ]
  %5083 = phi i64 [ %5147, %5139 ], [ %4927, %5076 ]
  %5084 = phi i32 [ %5145, %5139 ], [ %5079, %5076 ]
  %5085 = sub i32 %4926, %5081
  %5086 = tail call i32 @llvm.smin.i32(i32 %5085, i32 0)
  %5087 = sub i32 %5085, %5086
  %5088 = zext i32 %5087 to i64
  %5089 = add nuw nsw i64 %5088, 1
  %5090 = add nsw i64 %5082, -1
  %5091 = icmp ult i32 %5087, 31
  br i1 %5091, label %5127, label %5092

5092:                                             ; preds = %5080
  %5093 = and i64 %5089, 8589934560
  %5094 = sub i64 %5083, %5093
  br label %5095

5095:                                             ; preds = %5095, %5092
  %5096 = phi i64 [ 0, %5092 ], [ %5119, %5095 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5115, %5095 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5116, %5095 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5117, %5095 ]
  %5100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5118, %5095 ]
  %5101 = sub i64 %5083, %5096
  %5102 = getelementptr inbounds i32, ptr %11, i64 %5101
  %5103 = getelementptr inbounds i32, ptr %5102, i64 -7
  %5104 = load <8 x i32>, ptr %5103, align 4, !tbaa !5
  %5105 = shufflevector <8 x i32> %5104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5106 = getelementptr inbounds i32, ptr %5102, i64 -15
  %5107 = load <8 x i32>, ptr %5106, align 4, !tbaa !5
  %5108 = shufflevector <8 x i32> %5107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5109 = getelementptr inbounds i32, ptr %5102, i64 -23
  %5110 = load <8 x i32>, ptr %5109, align 4, !tbaa !5
  %5111 = shufflevector <8 x i32> %5110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5112 = getelementptr inbounds i32, ptr %5102, i64 -31
  %5113 = load <8 x i32>, ptr %5112, align 4, !tbaa !5
  %5114 = shufflevector <8 x i32> %5113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5115 = mul <8 x i32> %5105, %5097
  %5116 = mul <8 x i32> %5108, %5098
  %5117 = mul <8 x i32> %5111, %5099
  %5118 = mul <8 x i32> %5114, %5100
  %5119 = add nuw i64 %5096, 32
  %5120 = icmp eq i64 %5119, %5093
  br i1 %5120, label %5121, label %5095, !llvm.loop !1289

5121:                                             ; preds = %5095
  %5122 = mul <8 x i32> %5116, %5115
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = mul <8 x i32> %5118, %5123
  %5125 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5124)
  %5126 = icmp eq i64 %5089, %5093
  br i1 %5126, label %5139, label %5127

5127:                                             ; preds = %5080, %5121
  %5128 = phi i64 [ %5083, %5080 ], [ %5094, %5121 ]
  %5129 = phi i32 [ 1, %5080 ], [ %5125, %5121 ]
  br label %5130

5130:                                             ; preds = %5127, %5130
  %5131 = phi i64 [ %5136, %5130 ], [ %5128, %5127 ]
  %5132 = phi i32 [ %5135, %5130 ], [ %5129, %5127 ]
  %5133 = getelementptr inbounds i32, ptr %11, i64 %5131
  %5134 = load i32, ptr %5133, align 4, !tbaa !5
  %5135 = mul nsw i32 %5134, %5132
  %5136 = add nsw i64 %5131, -1
  %5137 = trunc i64 %5131 to i32
  %5138 = icmp sgt i32 %5137, 0
  br i1 %5138, label %5130, label %5139, !llvm.loop !1290

5139:                                             ; preds = %5130, %5121
  %5140 = phi i32 [ %5125, %5121 ], [ %5135, %5130 ]
  %5141 = and i64 %5090, 4294967295
  %5142 = getelementptr inbounds i32, ptr %6, i64 %5141
  %5143 = load i32, ptr %5142, align 4, !tbaa !5
  %5144 = mul nsw i32 %5143, %5140
  %5145 = add nsw i32 %5144, %5084
  %5146 = icmp sgt i64 %5082, 2
  %5147 = add nsw i64 %5083, -1
  %5148 = add i32 %5081, 1
  br i1 %5146, label %5080, label %5149, !llvm.loop !1291

5149:                                             ; preds = %5139, %5076
  %5150 = phi i32 [ %5079, %5076 ], [ %5145, %5139 ]
  %5151 = icmp slt i32 %5150, %5
  br i1 %5151, label %5154, label %5152

5152:                                             ; preds = %5149
  %5153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

5154:                                             ; preds = %5149
  %5155 = sext i32 %5150 to i64
  %5156 = getelementptr inbounds float, ptr %4906, i64 %5155
  %5157 = load float, ptr %5156, align 4, !tbaa !162
  %5158 = fpext float %5157 to double
  %5159 = fcmp fast olt float %5157, 0.000000e+00
  %5160 = fneg fast double %5158
  %5161 = select fast i1 %5159, double %5160, double %5158
  %5162 = fadd fast double %5161, %5077
  store double %5162, ptr %4908, align 8, !tbaa !18
  %5163 = add nuw nsw i32 %5078, 1
  br i1 %4925, label %5164, label %5214

5164:                                             ; preds = %5154
  %5165 = load i32, ptr %4, align 4, !tbaa !5
  %5166 = load i32, ptr %12, align 4, !tbaa !5
  %5167 = add nsw i32 %5166, -1
  %5168 = icmp slt i32 %5165, %5167
  br i1 %5168, label %5191, label %5169

5169:                                             ; preds = %5164
  %5170 = icmp eq i32 %5165, %5167
  br i1 %5170, label %5171, label %5207

5171:                                             ; preds = %5169
  store i32 0, ptr %4, align 4, !tbaa !5
  %5172 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5172, ptr %6, align 4, !tbaa !5
  br i1 %4930, label %5214, label %5173

5173:                                             ; preds = %5171, %5201
  %5174 = phi i64 [ %5205, %5201 ], [ 1, %5171 ]
  %5175 = getelementptr inbounds i32, ptr %4, i64 %5174
  %5176 = load i32, ptr %5175, align 4, !tbaa !5
  %5177 = getelementptr inbounds i32, ptr %12, i64 %5174
  %5178 = load i32, ptr %5177, align 4, !tbaa !5
  %5179 = add nsw i32 %5178, -1
  %5180 = icmp slt i32 %5176, %5179
  br i1 %5180, label %5181, label %5199

5181:                                             ; preds = %5173
  br i1 %5168, label %5191, label %5182

5182:                                             ; preds = %5181
  %5183 = shl i64 %5174, 32
  %5184 = add i64 %5183, -4294967296
  %5185 = ashr exact i64 %5184, 32
  %5186 = getelementptr inbounds i32, ptr %7, i64 %5185
  %5187 = load i32, ptr %5186, align 4, !tbaa !5
  %5188 = getelementptr inbounds i32, ptr %6, i64 %5174
  %5189 = load i32, ptr %5188, align 4, !tbaa !5
  %5190 = add nsw i32 %5189, %5187
  store i32 %5190, ptr %5188, align 4, !tbaa !5
  br label %5209

5191:                                             ; preds = %5164, %5181
  %5192 = phi i32 [ %5176, %5181 ], [ %5165, %5164 ]
  %5193 = phi ptr [ %5175, %5181 ], [ %4, %5164 ]
  %5194 = phi i64 [ %5174, %5181 ], [ 0, %5164 ]
  %5195 = add nsw i32 %5192, 1
  store i32 %5195, ptr %5193, align 4, !tbaa !5
  %5196 = getelementptr inbounds i32, ptr %7, i64 %5194
  %5197 = load i32, ptr %5196, align 4, !tbaa !5
  %5198 = getelementptr inbounds i32, ptr %6, i64 %5194
  br label %5209

5199:                                             ; preds = %5173
  %5200 = icmp eq i32 %5176, %5179
  br i1 %5200, label %5201, label %5207

5201:                                             ; preds = %5199
  store i32 0, ptr %5175, align 4, !tbaa !5
  %5202 = getelementptr inbounds i32, ptr %8, i64 %5174
  %5203 = load i32, ptr %5202, align 4, !tbaa !5
  %5204 = getelementptr inbounds i32, ptr %6, i64 %5174
  store i32 %5203, ptr %5204, align 4, !tbaa !5
  %5205 = add nuw nsw i64 %5174, 1
  %5206 = icmp eq i64 %5205, %4928
  br i1 %5206, label %5214, label %5173, !llvm.loop !1292

5207:                                             ; preds = %5169, %5199
  %5208 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5209:                                             ; preds = %5182, %5191
  %5210 = phi ptr [ %5198, %5191 ], [ %5175, %5182 ]
  %5211 = phi i32 [ %5197, %5191 ], [ 1, %5182 ]
  %5212 = load i32, ptr %5210, align 4, !tbaa !5
  %5213 = add nsw i32 %5212, %5211
  store i32 %5213, ptr %5210, align 4, !tbaa !5
  br label %5214

5214:                                             ; preds = %5201, %5209, %5171, %5154
  %5215 = icmp eq i32 %5163, %5
  br i1 %5215, label %5522, label %5076, !llvm.loop !1293

5216:                                             ; preds = %4916
  %5217 = getelementptr inbounds i32, ptr %3, i64 %19
  %5218 = load i32, ptr %5217, align 4, !tbaa !5
  %5219 = icmp eq i32 %5218, 0
  %5220 = icmp sgt i32 %5, 0
  br i1 %5219, label %5230, label %5221

5221:                                             ; preds = %5216
  br i1 %5220, label %5222, label %5522

5222:                                             ; preds = %5221
  %5223 = icmp sgt i32 %13, 1
  %5224 = icmp sgt i32 %13, 0
  %5225 = add i32 %13, -2
  %5226 = zext i32 %5225 to i64
  %5227 = zext i32 %13 to i64
  %5228 = add nuw i32 %5, 1
  %5229 = icmp eq i32 %13, 1
  br label %5374

5230:                                             ; preds = %5216
  br i1 %5220, label %5231, label %5522

5231:                                             ; preds = %5230
  %5232 = icmp sgt i32 %13, 1
  %5233 = icmp sgt i32 %13, 0
  %5234 = add i32 %13, -2
  %5235 = zext i32 %5234 to i64
  %5236 = zext i32 %13 to i64
  %5237 = add nuw i32 %5, 1
  %5238 = icmp eq i32 %13, 1
  br label %5239

5239:                                             ; preds = %5231, %5372
  %5240 = phi double [ 0.000000e+00, %5231 ], [ %5322, %5372 ]
  %5241 = phi i32 [ 0, %5231 ], [ %5324, %5372 ]
  %5242 = phi double [ 0.000000e+00, %5231 ], [ %5323, %5372 ]
  %5243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5232, label %5244, label %5313

5244:                                             ; preds = %5239, %5303
  %5245 = phi i32 [ %5312, %5303 ], [ 0, %5239 ]
  %5246 = phi i64 [ %5254, %5303 ], [ %5236, %5239 ]
  %5247 = phi i64 [ %5311, %5303 ], [ %5235, %5239 ]
  %5248 = phi i32 [ %5309, %5303 ], [ %5243, %5239 ]
  %5249 = sub i32 %5234, %5245
  %5250 = tail call i32 @llvm.smin.i32(i32 %5249, i32 0)
  %5251 = sub i32 %5249, %5250
  %5252 = zext i32 %5251 to i64
  %5253 = add nuw nsw i64 %5252, 1
  %5254 = add nsw i64 %5246, -1
  %5255 = icmp ult i32 %5251, 31
  br i1 %5255, label %5291, label %5256

5256:                                             ; preds = %5244
  %5257 = and i64 %5253, 8589934560
  %5258 = sub i64 %5247, %5257
  br label %5259

5259:                                             ; preds = %5259, %5256
  %5260 = phi i64 [ 0, %5256 ], [ %5283, %5259 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5256 ], [ %5279, %5259 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5256 ], [ %5280, %5259 ]
  %5263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5256 ], [ %5281, %5259 ]
  %5264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5256 ], [ %5282, %5259 ]
  %5265 = sub i64 %5247, %5260
  %5266 = getelementptr inbounds i32, ptr %9, i64 %5265
  %5267 = getelementptr inbounds i32, ptr %5266, i64 -7
  %5268 = load <8 x i32>, ptr %5267, align 4, !tbaa !5
  %5269 = shufflevector <8 x i32> %5268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5270 = getelementptr inbounds i32, ptr %5266, i64 -15
  %5271 = load <8 x i32>, ptr %5270, align 4, !tbaa !5
  %5272 = shufflevector <8 x i32> %5271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5273 = getelementptr inbounds i32, ptr %5266, i64 -23
  %5274 = load <8 x i32>, ptr %5273, align 4, !tbaa !5
  %5275 = shufflevector <8 x i32> %5274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5276 = getelementptr inbounds i32, ptr %5266, i64 -31
  %5277 = load <8 x i32>, ptr %5276, align 4, !tbaa !5
  %5278 = shufflevector <8 x i32> %5277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5279 = mul <8 x i32> %5269, %5261
  %5280 = mul <8 x i32> %5272, %5262
  %5281 = mul <8 x i32> %5275, %5263
  %5282 = mul <8 x i32> %5278, %5264
  %5283 = add nuw i64 %5260, 32
  %5284 = icmp eq i64 %5283, %5257
  br i1 %5284, label %5285, label %5259, !llvm.loop !1294

5285:                                             ; preds = %5259
  %5286 = mul <8 x i32> %5280, %5279
  %5287 = mul <8 x i32> %5281, %5286
  %5288 = mul <8 x i32> %5282, %5287
  %5289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5288)
  %5290 = icmp eq i64 %5253, %5257
  br i1 %5290, label %5303, label %5291

5291:                                             ; preds = %5244, %5285
  %5292 = phi i64 [ %5247, %5244 ], [ %5258, %5285 ]
  %5293 = phi i32 [ 1, %5244 ], [ %5289, %5285 ]
  br label %5294

5294:                                             ; preds = %5291, %5294
  %5295 = phi i64 [ %5300, %5294 ], [ %5292, %5291 ]
  %5296 = phi i32 [ %5299, %5294 ], [ %5293, %5291 ]
  %5297 = getelementptr inbounds i32, ptr %9, i64 %5295
  %5298 = load i32, ptr %5297, align 4, !tbaa !5
  %5299 = mul nsw i32 %5298, %5296
  %5300 = add nsw i64 %5295, -1
  %5301 = trunc i64 %5295 to i32
  %5302 = icmp sgt i32 %5301, 0
  br i1 %5302, label %5294, label %5303, !llvm.loop !1295

5303:                                             ; preds = %5294, %5285
  %5304 = phi i32 [ %5289, %5285 ], [ %5299, %5294 ]
  %5305 = and i64 %5254, 4294967295
  %5306 = getelementptr inbounds i32, ptr %6, i64 %5305
  %5307 = load i32, ptr %5306, align 4, !tbaa !5
  %5308 = mul nsw i32 %5307, %5304
  %5309 = add nsw i32 %5308, %5248
  %5310 = icmp sgt i64 %5246, 2
  %5311 = add nsw i64 %5247, -1
  %5312 = add i32 %5245, 1
  br i1 %5310, label %5244, label %5313, !llvm.loop !1296

5313:                                             ; preds = %5303, %5239
  %5314 = phi i32 [ %5243, %5239 ], [ %5309, %5303 ]
  %5315 = sext i32 %5314 to i64
  %5316 = getelementptr inbounds float, ptr %4906, i64 %5315
  %5317 = load float, ptr %5316, align 4, !tbaa !162
  %5318 = fpext float %5317 to double
  %5319 = fcmp fast olt float %5317, 0.000000e+00
  %5320 = fneg fast double %5318
  %5321 = select fast i1 %5319, double %5320, double %5318
  %5322 = fadd fast double %5321, %5240
  %5323 = fadd fast double %5242, 1.000000e+00
  %5324 = add nuw nsw i32 %5241, 1
  br i1 %5233, label %5325, label %5372

5325:                                             ; preds = %5313
  %5326 = load i32, ptr %4, align 4, !tbaa !5
  %5327 = load i32, ptr %12, align 4, !tbaa !5
  %5328 = add nsw i32 %5327, -1
  %5329 = icmp slt i32 %5326, %5328
  br i1 %5329, label %5349, label %5330

5330:                                             ; preds = %5325
  %5331 = icmp eq i32 %5326, %5328
  br i1 %5331, label %5332, label %5365

5332:                                             ; preds = %5330
  store i32 0, ptr %4, align 4, !tbaa !5
  %5333 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5333, ptr %6, align 4, !tbaa !5
  br i1 %5238, label %5372, label %5334

5334:                                             ; preds = %5332, %5359
  %5335 = phi i64 [ %5363, %5359 ], [ 1, %5332 ]
  %5336 = getelementptr inbounds i32, ptr %4, i64 %5335
  %5337 = load i32, ptr %5336, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %12, i64 %5335
  %5339 = load i32, ptr %5338, align 4, !tbaa !5
  %5340 = add nsw i32 %5339, -1
  %5341 = icmp slt i32 %5337, %5340
  br i1 %5341, label %5342, label %5357

5342:                                             ; preds = %5334
  br i1 %5329, label %5349, label %5343

5343:                                             ; preds = %5342
  %5344 = getelementptr inbounds i32, ptr %7, i64 %5335
  %5345 = load i32, ptr %5344, align 4, !tbaa !5
  %5346 = getelementptr inbounds i32, ptr %6, i64 %5335
  %5347 = load i32, ptr %5346, align 4, !tbaa !5
  %5348 = add nsw i32 %5347, %5345
  store i32 %5348, ptr %5346, align 4, !tbaa !5
  br label %5367

5349:                                             ; preds = %5325, %5342
  %5350 = phi i32 [ %5337, %5342 ], [ %5326, %5325 ]
  %5351 = phi ptr [ %5336, %5342 ], [ %4, %5325 ]
  %5352 = phi i64 [ %5335, %5342 ], [ 0, %5325 ]
  %5353 = add nsw i32 %5350, 1
  store i32 %5353, ptr %5351, align 4, !tbaa !5
  %5354 = getelementptr inbounds i32, ptr %7, i64 %5352
  %5355 = load i32, ptr %5354, align 4, !tbaa !5
  %5356 = getelementptr inbounds i32, ptr %6, i64 %5352
  br label %5367

5357:                                             ; preds = %5334
  %5358 = icmp eq i32 %5337, %5340
  br i1 %5358, label %5359, label %5365

5359:                                             ; preds = %5357
  store i32 0, ptr %5336, align 4, !tbaa !5
  %5360 = getelementptr inbounds i32, ptr %8, i64 %5335
  %5361 = load i32, ptr %5360, align 4, !tbaa !5
  %5362 = getelementptr inbounds i32, ptr %6, i64 %5335
  store i32 %5361, ptr %5362, align 4, !tbaa !5
  %5363 = add nuw nsw i64 %5335, 1
  %5364 = icmp eq i64 %5363, %5236
  br i1 %5364, label %5372, label %5334, !llvm.loop !1297

5365:                                             ; preds = %5330, %5357
  store double %5322, ptr %4908, align 8, !tbaa !18
  %5366 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5367:                                             ; preds = %5343, %5349
  %5368 = phi ptr [ %5356, %5349 ], [ %5336, %5343 ]
  %5369 = phi i32 [ %5355, %5349 ], [ 1, %5343 ]
  %5370 = load i32, ptr %5368, align 4, !tbaa !5
  %5371 = add nsw i32 %5370, %5369
  store i32 %5371, ptr %5368, align 4, !tbaa !5
  br label %5372

5372:                                             ; preds = %5359, %5367, %5332, %5313
  %5373 = icmp eq i32 %5324, %5
  br i1 %5373, label %5521, label %5239, !llvm.loop !1298

5374:                                             ; preds = %5222, %5512
  %5375 = phi double [ 0.000000e+00, %5222 ], [ %5460, %5512 ]
  %5376 = phi i32 [ 0, %5222 ], [ %5461, %5512 ]
  %5377 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5223, label %5378, label %5447

5378:                                             ; preds = %5374, %5437
  %5379 = phi i32 [ %5446, %5437 ], [ 0, %5374 ]
  %5380 = phi i64 [ %5388, %5437 ], [ %5227, %5374 ]
  %5381 = phi i64 [ %5445, %5437 ], [ %5226, %5374 ]
  %5382 = phi i32 [ %5443, %5437 ], [ %5377, %5374 ]
  %5383 = sub i32 %5225, %5379
  %5384 = tail call i32 @llvm.smin.i32(i32 %5383, i32 0)
  %5385 = sub i32 %5383, %5384
  %5386 = zext i32 %5385 to i64
  %5387 = add nuw nsw i64 %5386, 1
  %5388 = add nsw i64 %5380, -1
  %5389 = icmp ult i32 %5385, 31
  br i1 %5389, label %5425, label %5390

5390:                                             ; preds = %5378
  %5391 = and i64 %5387, 8589934560
  %5392 = sub i64 %5381, %5391
  br label %5393

5393:                                             ; preds = %5393, %5390
  %5394 = phi i64 [ 0, %5390 ], [ %5417, %5393 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5390 ], [ %5413, %5393 ]
  %5396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5390 ], [ %5414, %5393 ]
  %5397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5390 ], [ %5415, %5393 ]
  %5398 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5390 ], [ %5416, %5393 ]
  %5399 = sub i64 %5381, %5394
  %5400 = getelementptr inbounds i32, ptr %11, i64 %5399
  %5401 = getelementptr inbounds i32, ptr %5400, i64 -7
  %5402 = load <8 x i32>, ptr %5401, align 4, !tbaa !5
  %5403 = shufflevector <8 x i32> %5402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5404 = getelementptr inbounds i32, ptr %5400, i64 -15
  %5405 = load <8 x i32>, ptr %5404, align 4, !tbaa !5
  %5406 = shufflevector <8 x i32> %5405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5407 = getelementptr inbounds i32, ptr %5400, i64 -23
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !5
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = getelementptr inbounds i32, ptr %5400, i64 -31
  %5411 = load <8 x i32>, ptr %5410, align 4, !tbaa !5
  %5412 = shufflevector <8 x i32> %5411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5413 = mul <8 x i32> %5403, %5395
  %5414 = mul <8 x i32> %5406, %5396
  %5415 = mul <8 x i32> %5409, %5397
  %5416 = mul <8 x i32> %5412, %5398
  %5417 = add nuw i64 %5394, 32
  %5418 = icmp eq i64 %5417, %5391
  br i1 %5418, label %5419, label %5393, !llvm.loop !1299

5419:                                             ; preds = %5393
  %5420 = mul <8 x i32> %5414, %5413
  %5421 = mul <8 x i32> %5415, %5420
  %5422 = mul <8 x i32> %5416, %5421
  %5423 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5422)
  %5424 = icmp eq i64 %5387, %5391
  br i1 %5424, label %5437, label %5425

5425:                                             ; preds = %5378, %5419
  %5426 = phi i64 [ %5381, %5378 ], [ %5392, %5419 ]
  %5427 = phi i32 [ 1, %5378 ], [ %5423, %5419 ]
  br label %5428

5428:                                             ; preds = %5425, %5428
  %5429 = phi i64 [ %5434, %5428 ], [ %5426, %5425 ]
  %5430 = phi i32 [ %5433, %5428 ], [ %5427, %5425 ]
  %5431 = getelementptr inbounds i32, ptr %11, i64 %5429
  %5432 = load i32, ptr %5431, align 4, !tbaa !5
  %5433 = mul nsw i32 %5432, %5430
  %5434 = add nsw i64 %5429, -1
  %5435 = trunc i64 %5429 to i32
  %5436 = icmp sgt i32 %5435, 0
  br i1 %5436, label %5428, label %5437, !llvm.loop !1300

5437:                                             ; preds = %5428, %5419
  %5438 = phi i32 [ %5423, %5419 ], [ %5433, %5428 ]
  %5439 = and i64 %5388, 4294967295
  %5440 = getelementptr inbounds i32, ptr %6, i64 %5439
  %5441 = load i32, ptr %5440, align 4, !tbaa !5
  %5442 = mul nsw i32 %5441, %5438
  %5443 = add nsw i32 %5442, %5382
  %5444 = icmp sgt i64 %5380, 2
  %5445 = add nsw i64 %5381, -1
  %5446 = add i32 %5379, 1
  br i1 %5444, label %5378, label %5447, !llvm.loop !1301

5447:                                             ; preds = %5437, %5374
  %5448 = phi i32 [ %5377, %5374 ], [ %5443, %5437 ]
  %5449 = icmp slt i32 %5448, %5
  br i1 %5449, label %5452, label %5450

5450:                                             ; preds = %5447
  %5451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5527

5452:                                             ; preds = %5447
  %5453 = sext i32 %5448 to i64
  %5454 = getelementptr inbounds float, ptr %4906, i64 %5453
  %5455 = load float, ptr %5454, align 4, !tbaa !162
  %5456 = fpext float %5455 to double
  %5457 = fcmp fast olt float %5455, 0.000000e+00
  %5458 = fneg fast double %5456
  %5459 = select fast i1 %5457, double %5458, double %5456
  %5460 = fadd fast double %5459, %5375
  store double %5460, ptr %4908, align 8, !tbaa !18
  %5461 = add nuw nsw i32 %5376, 1
  br i1 %5224, label %5462, label %5512

5462:                                             ; preds = %5452
  %5463 = load i32, ptr %4, align 4, !tbaa !5
  %5464 = load i32, ptr %12, align 4, !tbaa !5
  %5465 = add nsw i32 %5464, -1
  %5466 = icmp slt i32 %5463, %5465
  br i1 %5466, label %5489, label %5467

5467:                                             ; preds = %5462
  %5468 = icmp eq i32 %5463, %5465
  br i1 %5468, label %5469, label %5505

5469:                                             ; preds = %5467
  store i32 0, ptr %4, align 4, !tbaa !5
  %5470 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5470, ptr %6, align 4, !tbaa !5
  br i1 %5229, label %5512, label %5471

5471:                                             ; preds = %5469, %5499
  %5472 = phi i64 [ %5503, %5499 ], [ 1, %5469 ]
  %5473 = getelementptr inbounds i32, ptr %4, i64 %5472
  %5474 = load i32, ptr %5473, align 4, !tbaa !5
  %5475 = getelementptr inbounds i32, ptr %12, i64 %5472
  %5476 = load i32, ptr %5475, align 4, !tbaa !5
  %5477 = add nsw i32 %5476, -1
  %5478 = icmp slt i32 %5474, %5477
  br i1 %5478, label %5479, label %5497

5479:                                             ; preds = %5471
  br i1 %5466, label %5489, label %5480

5480:                                             ; preds = %5479
  %5481 = shl i64 %5472, 32
  %5482 = add i64 %5481, -4294967296
  %5483 = ashr exact i64 %5482, 32
  %5484 = getelementptr inbounds i32, ptr %7, i64 %5483
  %5485 = load i32, ptr %5484, align 4, !tbaa !5
  %5486 = getelementptr inbounds i32, ptr %6, i64 %5472
  %5487 = load i32, ptr %5486, align 4, !tbaa !5
  %5488 = add nsw i32 %5487, %5485
  store i32 %5488, ptr %5486, align 4, !tbaa !5
  br label %5507

5489:                                             ; preds = %5462, %5479
  %5490 = phi i32 [ %5474, %5479 ], [ %5463, %5462 ]
  %5491 = phi ptr [ %5473, %5479 ], [ %4, %5462 ]
  %5492 = phi i64 [ %5472, %5479 ], [ 0, %5462 ]
  %5493 = add nsw i32 %5490, 1
  store i32 %5493, ptr %5491, align 4, !tbaa !5
  %5494 = getelementptr inbounds i32, ptr %7, i64 %5492
  %5495 = load i32, ptr %5494, align 4, !tbaa !5
  %5496 = getelementptr inbounds i32, ptr %6, i64 %5492
  br label %5507

5497:                                             ; preds = %5471
  %5498 = icmp eq i32 %5474, %5477
  br i1 %5498, label %5499, label %5505

5499:                                             ; preds = %5497
  store i32 0, ptr %5473, align 4, !tbaa !5
  %5500 = getelementptr inbounds i32, ptr %8, i64 %5472
  %5501 = load i32, ptr %5500, align 4, !tbaa !5
  %5502 = getelementptr inbounds i32, ptr %6, i64 %5472
  store i32 %5501, ptr %5502, align 4, !tbaa !5
  %5503 = add nuw nsw i64 %5472, 1
  %5504 = icmp eq i64 %5503, %5227
  br i1 %5504, label %5512, label %5471, !llvm.loop !1302

5505:                                             ; preds = %5467, %5497
  %5506 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5527

5507:                                             ; preds = %5480, %5489
  %5508 = phi ptr [ %5496, %5489 ], [ %5473, %5480 ]
  %5509 = phi i32 [ %5495, %5489 ], [ 1, %5480 ]
  %5510 = load i32, ptr %5508, align 4, !tbaa !5
  %5511 = add nsw i32 %5510, %5509
  store i32 %5511, ptr %5508, align 4, !tbaa !5
  br label %5512

5512:                                             ; preds = %5499, %5507, %5469, %5452
  %5513 = icmp eq i32 %5461, %5
  br i1 %5513, label %5522, label %5374, !llvm.loop !1303

5514:                                             ; preds = %4916
  %5515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5522

5516:                                             ; preds = %2020
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  br label %5522

5517:                                             ; preds = %2319
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  br label %5522

5518:                                             ; preds = %3244
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  br label %5522

5519:                                             ; preds = %3543
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  br label %5522

5520:                                             ; preds = %4153
  store double %4103, ptr %3689, align 8, !tbaa !18
  br label %5522

5521:                                             ; preds = %5372
  store double %5322, ptr %4908, align 8, !tbaa !18
  br label %5522

5522:                                             ; preds = %5512, %5214, %5074, %4900, %4763, %4608, %4466, %4293, %3995, %3855, %3681, %3387, %3069, %2931, %2775, %2632, %2457, %2163, %1845, %1707, %1551, %1408, %1233, %1095, %939, %796, %621, %484, %329, %192, %5221, %5230, %5521, %4922, %4931, %4615, %4624, %4312, %4321, %4002, %4011, %5520, %3703, %3712, %3394, %3403, %5519, %3089, %3098, %5518, %2782, %2791, %2477, %2486, %2170, %2179, %5517, %1865, %1874, %5516, %1558, %1567, %1253, %1262, %946, %955, %641, %650, %336, %345, %37, %46, %4910, %5514, %4303, %4902, %3691, %4295, %3079, %3683, %2467, %3071, %1855, %2459, %1243, %1847, %631, %1235, %28, %623, %18
  %5523 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1847 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %3079 ], [ 0.000000e+00, %4295 ], [ 0.000000e+00, %3691 ], [ 0.000000e+00, %4902 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %5514 ], [ 0.000000e+00, %4910 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %641 ], [ 0.000000e+00, %955 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1971, %5516 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %5517 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2170 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %2477 ], [ 0.000000e+00, %2791 ], [ 0.000000e+00, %2782 ], [ %3195, %5518 ], [ 0.000000e+00, %3098 ], [ 0.000000e+00, %3089 ], [ %3494, %5519 ], [ 0.000000e+00, %3403 ], [ 0.000000e+00, %3394 ], [ 0.000000e+00, %3712 ], [ 0.000000e+00, %3703 ], [ %4104, %5520 ], [ 0.000000e+00, %4011 ], [ 0.000000e+00, %4002 ], [ 0.000000e+00, %4321 ], [ 0.000000e+00, %4312 ], [ 0.000000e+00, %4624 ], [ 0.000000e+00, %4615 ], [ 0.000000e+00, %4931 ], [ 0.000000e+00, %4922 ], [ %5323, %5521 ], [ 0.000000e+00, %5230 ], [ 0.000000e+00, %5221 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %747, %796 ], [ 0.000000e+00, %939 ], [ %1046, %1095 ], [ 0.000000e+00, %1233 ], [ %1359, %1408 ], [ 0.000000e+00, %1551 ], [ %1658, %1707 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2457 ], [ %2583, %2632 ], [ 0.000000e+00, %2775 ], [ %2882, %2931 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3681 ], [ %3806, %3855 ], [ 0.000000e+00, %3995 ], [ 0.000000e+00, %4293 ], [ %4417, %4466 ], [ 0.000000e+00, %4608 ], [ %4714, %4763 ], [ 0.000000e+00, %4900 ], [ %5025, %5074 ], [ 0.000000e+00, %5214 ], [ 0.000000e+00, %5512 ]
  %5524 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1235 ], [ 1, %631 ], [ 1, %1847 ], [ 1, %1243 ], [ 1, %2459 ], [ 1, %1855 ], [ 1, %3071 ], [ 1, %2467 ], [ 1, %3683 ], [ 1, %3079 ], [ 1, %4295 ], [ 1, %3691 ], [ 1, %4902 ], [ 1, %4303 ], [ 1, %5514 ], [ 1, %4910 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %650 ], [ 1, %641 ], [ 1, %955 ], [ 1, %946 ], [ 1, %1262 ], [ 1, %1253 ], [ 1, %1567 ], [ 1, %1558 ], [ %1881, %5516 ], [ 1, %1874 ], [ 1, %1865 ], [ %2186, %5517 ], [ 1, %2179 ], [ 1, %2170 ], [ 1, %2486 ], [ 1, %2477 ], [ 1, %2791 ], [ 1, %2782 ], [ %3105, %5518 ], [ 1, %3098 ], [ 1, %3089 ], [ %3410, %5519 ], [ 1, %3403 ], [ 1, %3394 ], [ 1, %3712 ], [ 1, %3703 ], [ %4018, %5520 ], [ 1, %4011 ], [ 1, %4002 ], [ 1, %4321 ], [ 1, %4312 ], [ 1, %4624 ], [ 1, %4615 ], [ 1, %4931 ], [ 1, %4922 ], [ %5237, %5521 ], [ 1, %5230 ], [ 1, %5221 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %657, %796 ], [ %648, %939 ], [ %962, %1095 ], [ %953, %1233 ], [ %1269, %1408 ], [ %1260, %1551 ], [ %1574, %1707 ], [ %1565, %1845 ], [ %1872, %2163 ], [ %2177, %2457 ], [ %2493, %2632 ], [ %2484, %2775 ], [ %2798, %2931 ], [ %2789, %3069 ], [ %3096, %3387 ], [ %3401, %3681 ], [ %3719, %3855 ], [ %3710, %3995 ], [ %4009, %4293 ], [ %4328, %4466 ], [ %4319, %4608 ], [ %4631, %4763 ], [ %4622, %4900 ], [ %4938, %5074 ], [ %4929, %5214 ], [ %5228, %5512 ]
  %5525 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5524, ptr noundef nonnull @.str.5) #3
  %5526 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5523, ptr noundef nonnull @.str.6) #3
  br label %5527

5527:                                             ; preds = %5067, %5152, %5207, %5365, %5450, %5505, %4459, %4544, %4601, %4756, %4841, %4893, %3848, %3933, %3988, %4146, %4231, %4286, %3237, %3322, %3380, %3536, %3621, %3674, %2625, %2709, %2768, %2924, %3008, %3062, %2013, %2098, %2156, %2312, %2397, %2450, %1401, %1485, %1544, %1700, %1784, %1838, %789, %873, %932, %1088, %1172, %1226, %185, %269, %322, %477, %561, %614, %5522
  %5528 = phi i32 [ 0, %5522 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1226 ], [ -1, %1172 ], [ -1, %1088 ], [ -1, %932 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1838 ], [ -1, %1784 ], [ -1, %1700 ], [ -1, %1544 ], [ -1, %1485 ], [ -1, %1401 ], [ -1, %2450 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2156 ], [ -1, %2098 ], [ -1, %2013 ], [ -1, %3062 ], [ -1, %3008 ], [ -1, %2924 ], [ -1, %2768 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3674 ], [ -1, %3621 ], [ -1, %3536 ], [ -1, %3380 ], [ -1, %3322 ], [ -1, %3237 ], [ -1, %4286 ], [ -1, %4231 ], [ -1, %4146 ], [ -1, %3988 ], [ -1, %3933 ], [ -1, %3848 ], [ -1, %4893 ], [ -1, %4841 ], [ -1, %4756 ], [ -1, %4601 ], [ -1, %4544 ], [ -1, %4459 ], [ -1, %5505 ], [ -1, %5450 ], [ -1, %5365 ], [ -1, %5207 ], [ -1, %5152 ], [ -1, %5067 ]
  ret i32 %5528
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm1_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5501 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1237
    i32 104, label %1849
    i32 105, label %2461
    i32 106, label %3073
    i32 107, label %3685
    i32 108, label %4284
    i32 109, label %4896
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5501

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5501

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5501

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1304

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1305

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1306

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = tail call fast double @llvm.fabs.f64(double %139)
  %141 = fadd fast double %140, %137
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !1307

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5501, label %55, !llvm.loop !1308

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !1309

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !1310

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !1311

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

271:                                              ; preds = %266
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = sext i32 %267 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = add i8 %272, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !1312

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5501, label %194, !llvm.loop !1313

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5501

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5501

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !1314

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !1315

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !1316

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds double, ptr %24, i64 %429
  %431 = load double, ptr %430, align 8, !tbaa !18
  %432 = fptoui double %431 to i8
  %433 = load i8, ptr %26, align 1, !tbaa !11
  %434 = add i8 %433, %432
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !1317

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5501, label %354, !llvm.loop !1318

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !1319

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !1320

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !1321

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds double, ptr %24, i64 %564
  %566 = load double, ptr %565, align 8, !tbaa !18
  %567 = fptoui double %566 to i8
  %568 = load i8, ptr %26, align 1, !tbaa !11
  %569 = add i8 %568, %567
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !1322

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5501, label %486, !llvm.loop !1323

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %635

631:                                              ; preds = %625
  %632 = load double, ptr %627, align 8, !tbaa !18
  %633 = fptosi double %632 to i32
  %634 = tail call i32 @llvm.abs.i32(i32 %633, i1 true)
  store i32 %634, ptr %629, align 4, !tbaa !5
  br label %5501

635:                                              ; preds = %625
  switch i32 %1, label %1235 [
    i32 1, label %636
    i32 0, label %941
  ]

636:                                              ; preds = %635
  %637 = getelementptr inbounds i32, ptr %3, i64 %19
  %638 = load i32, ptr %637, align 4, !tbaa !5
  %639 = icmp eq i32 %638, 0
  %640 = icmp sgt i32 %5, 0
  br i1 %639, label %650, label %641

641:                                              ; preds = %636
  br i1 %640, label %642, label %5501

642:                                              ; preds = %641
  %643 = icmp sgt i32 %13, 1
  %644 = icmp sgt i32 %13, 0
  %645 = add i32 %13, -2
  %646 = zext i32 %645 to i64
  %647 = zext i32 %13 to i64
  %648 = add nuw i32 %5, 1
  %649 = icmp eq i32 %13, 1
  br label %798

650:                                              ; preds = %636
  br i1 %640, label %651, label %5501

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %659

659:                                              ; preds = %651, %796
  %660 = phi i32 [ 0, %651 ], [ %748, %796 ]
  %661 = phi double [ 0.000000e+00, %651 ], [ %747, %796 ]
  %662 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %663, label %732

663:                                              ; preds = %659, %722
  %664 = phi i32 [ %731, %722 ], [ 0, %659 ]
  %665 = phi i64 [ %673, %722 ], [ %656, %659 ]
  %666 = phi i64 [ %730, %722 ], [ %655, %659 ]
  %667 = phi i32 [ %728, %722 ], [ %662, %659 ]
  %668 = sub i32 %654, %664
  %669 = tail call i32 @llvm.smin.i32(i32 %668, i32 0)
  %670 = sub i32 %668, %669
  %671 = zext i32 %670 to i64
  %672 = add nuw nsw i64 %671, 1
  %673 = add nsw i64 %665, -1
  %674 = icmp ult i32 %670, 31
  br i1 %674, label %710, label %675

675:                                              ; preds = %663
  %676 = and i64 %672, 8589934560
  %677 = sub i64 %666, %676
  br label %678

678:                                              ; preds = %678, %675
  %679 = phi i64 [ 0, %675 ], [ %702, %678 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %698, %678 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %699, %678 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %700, %678 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %675 ], [ %701, %678 ]
  %684 = sub i64 %666, %679
  %685 = getelementptr inbounds i32, ptr %9, i64 %684
  %686 = getelementptr inbounds i32, ptr %685, i64 -7
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %685, i64 -15
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %685, i64 -23
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %685, i64 -31
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = mul <8 x i32> %688, %680
  %699 = mul <8 x i32> %691, %681
  %700 = mul <8 x i32> %694, %682
  %701 = mul <8 x i32> %697, %683
  %702 = add nuw i64 %679, 32
  %703 = icmp eq i64 %702, %676
  br i1 %703, label %704, label %678, !llvm.loop !1324

704:                                              ; preds = %678
  %705 = mul <8 x i32> %699, %698
  %706 = mul <8 x i32> %700, %705
  %707 = mul <8 x i32> %701, %706
  %708 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %707)
  %709 = icmp eq i64 %672, %676
  br i1 %709, label %722, label %710

710:                                              ; preds = %663, %704
  %711 = phi i64 [ %666, %663 ], [ %677, %704 ]
  %712 = phi i32 [ 1, %663 ], [ %708, %704 ]
  br label %713

713:                                              ; preds = %710, %713
  %714 = phi i64 [ %719, %713 ], [ %711, %710 ]
  %715 = phi i32 [ %718, %713 ], [ %712, %710 ]
  %716 = getelementptr inbounds i32, ptr %9, i64 %714
  %717 = load i32, ptr %716, align 4, !tbaa !5
  %718 = mul nsw i32 %717, %715
  %719 = add nsw i64 %714, -1
  %720 = trunc i64 %714 to i32
  %721 = icmp sgt i32 %720, 0
  br i1 %721, label %713, label %722, !llvm.loop !1325

722:                                              ; preds = %713, %704
  %723 = phi i32 [ %708, %704 ], [ %718, %713 ]
  %724 = and i64 %673, 4294967295
  %725 = getelementptr inbounds i32, ptr %6, i64 %724
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %723
  %728 = add nsw i32 %727, %667
  %729 = icmp sgt i64 %665, 2
  %730 = add nsw i64 %666, -1
  %731 = add i32 %664, 1
  br i1 %729, label %663, label %732, !llvm.loop !1326

732:                                              ; preds = %722, %659
  %733 = phi i32 [ %662, %659 ], [ %728, %722 ]
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds double, ptr %2, i64 %734
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = getelementptr inbounds double, ptr %627, i64 %734
  %738 = load double, ptr %737, align 8, !tbaa !18
  %739 = fptosi double %738 to i32
  %740 = load i32, ptr %629, align 4, !tbaa !5
  %741 = sitofp i32 %740 to double
  %742 = sitofp i32 %739 to double
  %743 = fmul fast double %736, %742
  %744 = tail call fast double @llvm.fabs.f64(double %743)
  %745 = fadd fast double %744, %741
  %746 = fptosi double %745 to i32
  store i32 %746, ptr %629, align 4, !tbaa !5
  %747 = fadd fast double %736, %661
  %748 = add nuw nsw i32 %660, 1
  br i1 %653, label %749, label %796

749:                                              ; preds = %732
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %658, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %656
  br i1 %788, label %796, label %758, !llvm.loop !1327

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %732
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5501, label %659, !llvm.loop !1328

798:                                              ; preds = %642, %939
  %799 = phi i32 [ 0, %642 ], [ %888, %939 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %643, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %647, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %646, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %645, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !1329

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !1330

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !1331

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds double, ptr %627, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !18
  %879 = fptosi double %878 to i32
  %880 = load i32, ptr %629, align 4, !tbaa !5
  %881 = sitofp i32 %880 to double
  %882 = sitofp i32 %879 to double
  %883 = icmp slt i32 %879, 0
  %884 = fneg fast double %882
  %885 = select fast i1 %883, double %884, double %882
  %886 = fadd fast double %885, %881
  %887 = fptosi double %886 to i32
  store i32 %887, ptr %629, align 4, !tbaa !5
  %888 = add nuw nsw i32 %799, 1
  br i1 %644, label %889, label %939

889:                                              ; preds = %875
  %890 = load i32, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %12, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %890, %892
  br i1 %893, label %916, label %894

894:                                              ; preds = %889
  %895 = icmp eq i32 %890, %892
  br i1 %895, label %896, label %932

896:                                              ; preds = %894
  store i32 0, ptr %4, align 4, !tbaa !5
  %897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %897, ptr %6, align 4, !tbaa !5
  br i1 %649, label %939, label %898

898:                                              ; preds = %896, %926
  %899 = phi i64 [ %930, %926 ], [ 1, %896 ]
  %900 = getelementptr inbounds i32, ptr %4, i64 %899
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %12, i64 %899
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %901, %904
  br i1 %905, label %906, label %924

906:                                              ; preds = %898
  br i1 %893, label %916, label %907

907:                                              ; preds = %906
  %908 = shl i64 %899, 32
  %909 = add i64 %908, -4294967296
  %910 = ashr exact i64 %909, 32
  %911 = getelementptr inbounds i32, ptr %7, i64 %910
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %899
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = add nsw i32 %914, %912
  store i32 %915, ptr %913, align 4, !tbaa !5
  br label %934

916:                                              ; preds = %889, %906
  %917 = phi i32 [ %901, %906 ], [ %890, %889 ]
  %918 = phi ptr [ %900, %906 ], [ %4, %889 ]
  %919 = phi i64 [ %899, %906 ], [ 0, %889 ]
  %920 = add nsw i32 %917, 1
  store i32 %920, ptr %918, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %7, i64 %919
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %919
  br label %934

924:                                              ; preds = %898
  %925 = icmp eq i32 %901, %904
  br i1 %925, label %926, label %932

926:                                              ; preds = %924
  store i32 0, ptr %900, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %8, i64 %899
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %6, i64 %899
  store i32 %928, ptr %929, align 4, !tbaa !5
  %930 = add nuw nsw i64 %899, 1
  %931 = icmp eq i64 %930, %647
  br i1 %931, label %939, label %898, !llvm.loop !1332

932:                                              ; preds = %894, %924
  %933 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

934:                                              ; preds = %907, %916
  %935 = phi ptr [ %923, %916 ], [ %900, %907 ]
  %936 = phi i32 [ %922, %916 ], [ 1, %907 ]
  %937 = load i32, ptr %935, align 4, !tbaa !5
  %938 = add nsw i32 %937, %936
  store i32 %938, ptr %935, align 4, !tbaa !5
  br label %939

939:                                              ; preds = %926, %934, %896, %875
  %940 = icmp eq i32 %888, %5
  br i1 %940, label %5501, label %798, !llvm.loop !1333

941:                                              ; preds = %635
  %942 = getelementptr inbounds i32, ptr %3, i64 %19
  %943 = load i32, ptr %942, align 4, !tbaa !5
  %944 = icmp eq i32 %943, 0
  %945 = icmp sgt i32 %5, 0
  br i1 %944, label %955, label %946

946:                                              ; preds = %941
  br i1 %945, label %947, label %5501

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %1097

955:                                              ; preds = %941
  br i1 %945, label %956, label %5501

956:                                              ; preds = %955
  %957 = icmp sgt i32 %13, 1
  %958 = icmp sgt i32 %13, 0
  %959 = add i32 %13, -2
  %960 = zext i32 %959 to i64
  %961 = zext i32 %13 to i64
  %962 = add nuw i32 %5, 1
  %963 = icmp eq i32 %13, 1
  br label %964

964:                                              ; preds = %956, %1095
  %965 = phi i32 [ 0, %956 ], [ %1047, %1095 ]
  %966 = phi double [ 0.000000e+00, %956 ], [ %1046, %1095 ]
  %967 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %957, label %968, label %1037

968:                                              ; preds = %964, %1027
  %969 = phi i32 [ %1036, %1027 ], [ 0, %964 ]
  %970 = phi i64 [ %978, %1027 ], [ %961, %964 ]
  %971 = phi i64 [ %1035, %1027 ], [ %960, %964 ]
  %972 = phi i32 [ %1033, %1027 ], [ %967, %964 ]
  %973 = sub i32 %959, %969
  %974 = tail call i32 @llvm.smin.i32(i32 %973, i32 0)
  %975 = sub i32 %973, %974
  %976 = zext i32 %975 to i64
  %977 = add nuw nsw i64 %976, 1
  %978 = add nsw i64 %970, -1
  %979 = icmp ult i32 %975, 31
  br i1 %979, label %1015, label %980

980:                                              ; preds = %968
  %981 = and i64 %977, 8589934560
  %982 = sub i64 %971, %981
  br label %983

983:                                              ; preds = %983, %980
  %984 = phi i64 [ 0, %980 ], [ %1007, %983 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1003, %983 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1004, %983 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1005, %983 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1006, %983 ]
  %989 = sub i64 %971, %984
  %990 = getelementptr inbounds i32, ptr %9, i64 %989
  %991 = getelementptr inbounds i32, ptr %990, i64 -7
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %990, i64 -15
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %990, i64 -23
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %990, i64 -31
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = mul <8 x i32> %993, %985
  %1004 = mul <8 x i32> %996, %986
  %1005 = mul <8 x i32> %999, %987
  %1006 = mul <8 x i32> %1002, %988
  %1007 = add nuw i64 %984, 32
  %1008 = icmp eq i64 %1007, %981
  br i1 %1008, label %1009, label %983, !llvm.loop !1334

1009:                                             ; preds = %983
  %1010 = mul <8 x i32> %1004, %1003
  %1011 = mul <8 x i32> %1005, %1010
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1012)
  %1014 = icmp eq i64 %977, %981
  br i1 %1014, label %1027, label %1015

1015:                                             ; preds = %968, %1009
  %1016 = phi i64 [ %971, %968 ], [ %982, %1009 ]
  %1017 = phi i32 [ 1, %968 ], [ %1013, %1009 ]
  br label %1018

1018:                                             ; preds = %1015, %1018
  %1019 = phi i64 [ %1024, %1018 ], [ %1016, %1015 ]
  %1020 = phi i32 [ %1023, %1018 ], [ %1017, %1015 ]
  %1021 = getelementptr inbounds i32, ptr %9, i64 %1019
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1020
  %1024 = add nsw i64 %1019, -1
  %1025 = trunc i64 %1019 to i32
  %1026 = icmp sgt i32 %1025, 0
  br i1 %1026, label %1018, label %1027, !llvm.loop !1335

1027:                                             ; preds = %1018, %1009
  %1028 = phi i32 [ %1013, %1009 ], [ %1023, %1018 ]
  %1029 = and i64 %978, 4294967295
  %1030 = getelementptr inbounds i32, ptr %6, i64 %1029
  %1031 = load i32, ptr %1030, align 4, !tbaa !5
  %1032 = mul nsw i32 %1031, %1028
  %1033 = add nsw i32 %1032, %972
  %1034 = icmp sgt i64 %970, 2
  %1035 = add nsw i64 %971, -1
  %1036 = add i32 %969, 1
  br i1 %1034, label %968, label %1037, !llvm.loop !1336

1037:                                             ; preds = %1027, %964
  %1038 = phi i32 [ %967, %964 ], [ %1033, %1027 ]
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds double, ptr %627, i64 %1039
  %1041 = load double, ptr %1040, align 8, !tbaa !18
  %1042 = fptosi double %1041 to i32
  %1043 = load i32, ptr %629, align 4, !tbaa !5
  %1044 = tail call i32 @llvm.abs.i32(i32 %1042, i1 true)
  %1045 = add nsw i32 %1044, %1043
  store i32 %1045, ptr %629, align 4, !tbaa !5
  %1046 = fadd fast double %966, 1.000000e+00
  %1047 = add nuw nsw i32 %965, 1
  br i1 %958, label %1048, label %1095

1048:                                             ; preds = %1037
  %1049 = load i32, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %12, align 4, !tbaa !5
  %1051 = add nsw i32 %1050, -1
  %1052 = icmp slt i32 %1049, %1051
  br i1 %1052, label %1072, label %1053

1053:                                             ; preds = %1048
  %1054 = icmp eq i32 %1049, %1051
  br i1 %1054, label %1055, label %1088

1055:                                             ; preds = %1053
  store i32 0, ptr %4, align 4, !tbaa !5
  %1056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1056, ptr %6, align 4, !tbaa !5
  br i1 %963, label %1095, label %1057

1057:                                             ; preds = %1055, %1082
  %1058 = phi i64 [ %1086, %1082 ], [ 1, %1055 ]
  %1059 = getelementptr inbounds i32, ptr %4, i64 %1058
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %12, i64 %1058
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = add nsw i32 %1062, -1
  %1064 = icmp slt i32 %1060, %1063
  br i1 %1064, label %1065, label %1080

1065:                                             ; preds = %1057
  br i1 %1052, label %1072, label %1066

1066:                                             ; preds = %1065
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1058
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1058
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = add nsw i32 %1070, %1068
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  br label %1090

1072:                                             ; preds = %1048, %1065
  %1073 = phi i32 [ %1060, %1065 ], [ %1049, %1048 ]
  %1074 = phi ptr [ %1059, %1065 ], [ %4, %1048 ]
  %1075 = phi i64 [ %1058, %1065 ], [ 0, %1048 ]
  %1076 = add nsw i32 %1073, 1
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %7, i64 %1075
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1075
  br label %1090

1080:                                             ; preds = %1057
  %1081 = icmp eq i32 %1060, %1063
  br i1 %1081, label %1082, label %1088

1082:                                             ; preds = %1080
  store i32 0, ptr %1059, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %8, i64 %1058
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %6, i64 %1058
  store i32 %1084, ptr %1085, align 4, !tbaa !5
  %1086 = add nuw nsw i64 %1058, 1
  %1087 = icmp eq i64 %1086, %961
  br i1 %1087, label %1095, label %1057, !llvm.loop !1337

1088:                                             ; preds = %1053, %1080
  %1089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1090:                                             ; preds = %1066, %1072
  %1091 = phi ptr [ %1079, %1072 ], [ %1059, %1066 ]
  %1092 = phi i32 [ %1078, %1072 ], [ 1, %1066 ]
  %1093 = load i32, ptr %1091, align 4, !tbaa !5
  %1094 = add nsw i32 %1093, %1092
  store i32 %1094, ptr %1091, align 4, !tbaa !5
  br label %1095

1095:                                             ; preds = %1082, %1090, %1055, %1037
  %1096 = icmp eq i32 %1047, %5
  br i1 %1096, label %5501, label %964, !llvm.loop !1338

1097:                                             ; preds = %947, %1233
  %1098 = phi i32 [ 0, %947 ], [ %1182, %1233 ]
  %1099 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1100, label %1169

1100:                                             ; preds = %1097, %1159
  %1101 = phi i32 [ %1168, %1159 ], [ 0, %1097 ]
  %1102 = phi i64 [ %1110, %1159 ], [ %952, %1097 ]
  %1103 = phi i64 [ %1167, %1159 ], [ %951, %1097 ]
  %1104 = phi i32 [ %1165, %1159 ], [ %1099, %1097 ]
  %1105 = sub i32 %950, %1101
  %1106 = tail call i32 @llvm.smin.i32(i32 %1105, i32 0)
  %1107 = sub i32 %1105, %1106
  %1108 = zext i32 %1107 to i64
  %1109 = add nuw nsw i64 %1108, 1
  %1110 = add nsw i64 %1102, -1
  %1111 = icmp ult i32 %1107, 31
  br i1 %1111, label %1147, label %1112

1112:                                             ; preds = %1100
  %1113 = and i64 %1109, 8589934560
  %1114 = sub i64 %1103, %1113
  br label %1115

1115:                                             ; preds = %1115, %1112
  %1116 = phi i64 [ 0, %1112 ], [ %1139, %1115 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1135, %1115 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1136, %1115 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1137, %1115 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1112 ], [ %1138, %1115 ]
  %1121 = sub i64 %1103, %1116
  %1122 = getelementptr inbounds i32, ptr %11, i64 %1121
  %1123 = getelementptr inbounds i32, ptr %1122, i64 -7
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1122, i64 -15
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1122, i64 -23
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !5
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1122, i64 -31
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !5
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = mul <8 x i32> %1125, %1117
  %1136 = mul <8 x i32> %1128, %1118
  %1137 = mul <8 x i32> %1131, %1119
  %1138 = mul <8 x i32> %1134, %1120
  %1139 = add nuw i64 %1116, 32
  %1140 = icmp eq i64 %1139, %1113
  br i1 %1140, label %1141, label %1115, !llvm.loop !1339

1141:                                             ; preds = %1115
  %1142 = mul <8 x i32> %1136, %1135
  %1143 = mul <8 x i32> %1137, %1142
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1144)
  %1146 = icmp eq i64 %1109, %1113
  br i1 %1146, label %1159, label %1147

1147:                                             ; preds = %1100, %1141
  %1148 = phi i64 [ %1103, %1100 ], [ %1114, %1141 ]
  %1149 = phi i32 [ 1, %1100 ], [ %1145, %1141 ]
  br label %1150

1150:                                             ; preds = %1147, %1150
  %1151 = phi i64 [ %1156, %1150 ], [ %1148, %1147 ]
  %1152 = phi i32 [ %1155, %1150 ], [ %1149, %1147 ]
  %1153 = getelementptr inbounds i32, ptr %11, i64 %1151
  %1154 = load i32, ptr %1153, align 4, !tbaa !5
  %1155 = mul nsw i32 %1154, %1152
  %1156 = add nsw i64 %1151, -1
  %1157 = trunc i64 %1151 to i32
  %1158 = icmp sgt i32 %1157, 0
  br i1 %1158, label %1150, label %1159, !llvm.loop !1340

1159:                                             ; preds = %1150, %1141
  %1160 = phi i32 [ %1145, %1141 ], [ %1155, %1150 ]
  %1161 = and i64 %1110, 4294967295
  %1162 = getelementptr inbounds i32, ptr %6, i64 %1161
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = mul nsw i32 %1163, %1160
  %1165 = add nsw i32 %1164, %1104
  %1166 = icmp sgt i64 %1102, 2
  %1167 = add nsw i64 %1103, -1
  %1168 = add i32 %1101, 1
  br i1 %1166, label %1100, label %1169, !llvm.loop !1341

1169:                                             ; preds = %1159, %1097
  %1170 = phi i32 [ %1099, %1097 ], [ %1165, %1159 ]
  %1171 = icmp slt i32 %1170, %5
  br i1 %1171, label %1174, label %1172

1172:                                             ; preds = %1169
  %1173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1174:                                             ; preds = %1169
  %1175 = sext i32 %1170 to i64
  %1176 = getelementptr inbounds double, ptr %627, i64 %1175
  %1177 = load double, ptr %1176, align 8, !tbaa !18
  %1178 = fptosi double %1177 to i32
  %1179 = load i32, ptr %629, align 4, !tbaa !5
  %1180 = tail call i32 @llvm.abs.i32(i32 %1178, i1 true)
  %1181 = add nsw i32 %1180, %1179
  store i32 %1181, ptr %629, align 4, !tbaa !5
  %1182 = add nuw nsw i32 %1098, 1
  br i1 %949, label %1183, label %1233

1183:                                             ; preds = %1174
  %1184 = load i32, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %12, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1184, %1186
  br i1 %1187, label %1210, label %1188

1188:                                             ; preds = %1183
  %1189 = icmp eq i32 %1184, %1186
  br i1 %1189, label %1190, label %1226

1190:                                             ; preds = %1188
  store i32 0, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1191, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1233, label %1192

1192:                                             ; preds = %1190, %1220
  %1193 = phi i64 [ %1224, %1220 ], [ 1, %1190 ]
  %1194 = getelementptr inbounds i32, ptr %4, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %12, i64 %1193
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1195, %1198
  br i1 %1199, label %1200, label %1218

1200:                                             ; preds = %1192
  br i1 %1187, label %1210, label %1201

1201:                                             ; preds = %1200
  %1202 = shl i64 %1193, 32
  %1203 = add i64 %1202, -4294967296
  %1204 = ashr exact i64 %1203, 32
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1193
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, %1206
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  br label %1228

1210:                                             ; preds = %1183, %1200
  %1211 = phi i32 [ %1195, %1200 ], [ %1184, %1183 ]
  %1212 = phi ptr [ %1194, %1200 ], [ %4, %1183 ]
  %1213 = phi i64 [ %1193, %1200 ], [ 0, %1183 ]
  %1214 = add nsw i32 %1211, 1
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1213
  br label %1228

1218:                                             ; preds = %1192
  %1219 = icmp eq i32 %1195, %1198
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1218
  store i32 0, ptr %1194, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %8, i64 %1193
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1193
  store i32 %1222, ptr %1223, align 4, !tbaa !5
  %1224 = add nuw nsw i64 %1193, 1
  %1225 = icmp eq i64 %1224, %952
  br i1 %1225, label %1233, label %1192, !llvm.loop !1342

1226:                                             ; preds = %1188, %1218
  %1227 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1228:                                             ; preds = %1201, %1210
  %1229 = phi ptr [ %1217, %1210 ], [ %1194, %1201 ]
  %1230 = phi i32 [ %1216, %1210 ], [ 1, %1201 ]
  %1231 = load i32, ptr %1229, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1230
  store i32 %1232, ptr %1229, align 4, !tbaa !5
  br label %1233

1233:                                             ; preds = %1220, %1228, %1190, %1174
  %1234 = icmp eq i32 %1182, %5
  br i1 %1234, label %5501, label %1097, !llvm.loop !1343

1235:                                             ; preds = %635
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

1237:                                             ; preds = %18
  %1238 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  %1240 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  store i8 0, ptr %1241, align 1, !tbaa !11
  %1242 = icmp eq i32 %13, 0
  br i1 %1242, label %1243, label %1247

1243:                                             ; preds = %1237
  %1244 = load double, ptr %1239, align 8, !tbaa !18
  %1245 = fptosi double %1244 to i8
  %1246 = tail call i8 @llvm.abs.i8(i8 %1245, i1 false)
  store i8 %1246, ptr %1241, align 1, !tbaa !11
  br label %5501

1247:                                             ; preds = %1237
  switch i32 %1, label %1847 [
    i32 1, label %1248
    i32 0, label %1553
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %5501

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1410

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %5501

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1408
  %1272 = phi i32 [ 0, %1263 ], [ %1360, %1408 ]
  %1273 = phi double [ 0.000000e+00, %1263 ], [ %1359, %1408 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1275, label %1344

1275:                                             ; preds = %1271, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1271 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1268, %1271 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1267, %1271 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1271 ]
  %1280 = sub i32 %1266, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !1344

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !1345

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !1346

1344:                                             ; preds = %1334, %1271
  %1345 = phi i32 [ %1274, %1271 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds double, ptr %1239, i64 %1346
  %1350 = load double, ptr %1349, align 8, !tbaa !18
  %1351 = fptosi double %1350 to i8
  %1352 = load i8, ptr %1241, align 1, !tbaa !11
  %1353 = sitofp i8 %1352 to double
  %1354 = sitofp i8 %1351 to double
  %1355 = fmul fast double %1348, %1354
  %1356 = tail call fast double @llvm.fabs.f64(double %1355)
  %1357 = fadd fast double %1356, %1353
  %1358 = fptosi double %1357 to i8
  store i8 %1358, ptr %1241, align 1, !tbaa !11
  %1359 = fadd fast double %1348, %1273
  %1360 = add nuw nsw i32 %1272, 1
  br i1 %1265, label %1361, label %1408

1361:                                             ; preds = %1344
  %1362 = load i32, ptr %4, align 4, !tbaa !5
  %1363 = load i32, ptr %12, align 4, !tbaa !5
  %1364 = add nsw i32 %1363, -1
  %1365 = icmp slt i32 %1362, %1364
  br i1 %1365, label %1385, label %1366

1366:                                             ; preds = %1361
  %1367 = icmp eq i32 %1362, %1364
  br i1 %1367, label %1368, label %1401

1368:                                             ; preds = %1366
  store i32 0, ptr %4, align 4, !tbaa !5
  %1369 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1369, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1408, label %1370

1370:                                             ; preds = %1368, %1395
  %1371 = phi i64 [ %1399, %1395 ], [ 1, %1368 ]
  %1372 = getelementptr inbounds i32, ptr %4, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %12, i64 %1371
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1373, %1376
  br i1 %1377, label %1378, label %1393

1378:                                             ; preds = %1370
  br i1 %1365, label %1385, label %1379

1379:                                             ; preds = %1378
  %1380 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1381 = load i32, ptr %1380, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1381
  store i32 %1384, ptr %1382, align 4, !tbaa !5
  br label %1403

1385:                                             ; preds = %1361, %1378
  %1386 = phi i32 [ %1373, %1378 ], [ %1362, %1361 ]
  %1387 = phi ptr [ %1372, %1378 ], [ %4, %1361 ]
  %1388 = phi i64 [ %1371, %1378 ], [ 0, %1361 ]
  %1389 = add nsw i32 %1386, 1
  store i32 %1389, ptr %1387, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1388
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1388
  br label %1403

1393:                                             ; preds = %1370
  %1394 = icmp eq i32 %1373, %1376
  br i1 %1394, label %1395, label %1401

1395:                                             ; preds = %1393
  store i32 0, ptr %1372, align 4, !tbaa !5
  %1396 = getelementptr inbounds i32, ptr %8, i64 %1371
  %1397 = load i32, ptr %1396, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1371
  store i32 %1397, ptr %1398, align 4, !tbaa !5
  %1399 = add nuw nsw i64 %1371, 1
  %1400 = icmp eq i64 %1399, %1268
  br i1 %1400, label %1408, label %1370, !llvm.loop !1347

1401:                                             ; preds = %1366, %1393
  %1402 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1403:                                             ; preds = %1379, %1385
  %1404 = phi ptr [ %1392, %1385 ], [ %1372, %1379 ]
  %1405 = phi i32 [ %1391, %1385 ], [ 1, %1379 ]
  %1406 = load i32, ptr %1404, align 4, !tbaa !5
  %1407 = add nsw i32 %1406, %1405
  store i32 %1407, ptr %1404, align 4, !tbaa !5
  br label %1408

1408:                                             ; preds = %1395, %1403, %1368, %1344
  %1409 = icmp eq i32 %1360, %5
  br i1 %1409, label %5501, label %1271, !llvm.loop !1348

1410:                                             ; preds = %1254, %1551
  %1411 = phi i32 [ 0, %1254 ], [ %1500, %1551 ]
  %1412 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1413, label %1482

1413:                                             ; preds = %1410, %1472
  %1414 = phi i32 [ %1481, %1472 ], [ 0, %1410 ]
  %1415 = phi i64 [ %1423, %1472 ], [ %1259, %1410 ]
  %1416 = phi i64 [ %1480, %1472 ], [ %1258, %1410 ]
  %1417 = phi i32 [ %1478, %1472 ], [ %1412, %1410 ]
  %1418 = sub i32 %1257, %1414
  %1419 = tail call i32 @llvm.smin.i32(i32 %1418, i32 0)
  %1420 = sub i32 %1418, %1419
  %1421 = zext i32 %1420 to i64
  %1422 = add nuw nsw i64 %1421, 1
  %1423 = add nsw i64 %1415, -1
  %1424 = icmp ult i32 %1420, 31
  br i1 %1424, label %1460, label %1425

1425:                                             ; preds = %1413
  %1426 = and i64 %1422, 8589934560
  %1427 = sub i64 %1416, %1426
  br label %1428

1428:                                             ; preds = %1428, %1425
  %1429 = phi i64 [ 0, %1425 ], [ %1452, %1428 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1448, %1428 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1449, %1428 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1450, %1428 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1451, %1428 ]
  %1434 = sub i64 %1416, %1429
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1434
  %1436 = getelementptr inbounds i32, ptr %1435, i64 -7
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1435, i64 -15
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1435, i64 -23
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1435, i64 -31
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = mul <8 x i32> %1438, %1430
  %1449 = mul <8 x i32> %1441, %1431
  %1450 = mul <8 x i32> %1444, %1432
  %1451 = mul <8 x i32> %1447, %1433
  %1452 = add nuw i64 %1429, 32
  %1453 = icmp eq i64 %1452, %1426
  br i1 %1453, label %1454, label %1428, !llvm.loop !1349

1454:                                             ; preds = %1428
  %1455 = mul <8 x i32> %1449, %1448
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1457)
  %1459 = icmp eq i64 %1422, %1426
  br i1 %1459, label %1472, label %1460

1460:                                             ; preds = %1413, %1454
  %1461 = phi i64 [ %1416, %1413 ], [ %1427, %1454 ]
  %1462 = phi i32 [ 1, %1413 ], [ %1458, %1454 ]
  br label %1463

1463:                                             ; preds = %1460, %1463
  %1464 = phi i64 [ %1469, %1463 ], [ %1461, %1460 ]
  %1465 = phi i32 [ %1468, %1463 ], [ %1462, %1460 ]
  %1466 = getelementptr inbounds i32, ptr %11, i64 %1464
  %1467 = load i32, ptr %1466, align 4, !tbaa !5
  %1468 = mul nsw i32 %1467, %1465
  %1469 = add nsw i64 %1464, -1
  %1470 = trunc i64 %1464 to i32
  %1471 = icmp sgt i32 %1470, 0
  br i1 %1471, label %1463, label %1472, !llvm.loop !1350

1472:                                             ; preds = %1463, %1454
  %1473 = phi i32 [ %1458, %1454 ], [ %1468, %1463 ]
  %1474 = and i64 %1423, 4294967295
  %1475 = getelementptr inbounds i32, ptr %6, i64 %1474
  %1476 = load i32, ptr %1475, align 4, !tbaa !5
  %1477 = mul nsw i32 %1476, %1473
  %1478 = add nsw i32 %1477, %1417
  %1479 = icmp sgt i64 %1415, 2
  %1480 = add nsw i64 %1416, -1
  %1481 = add i32 %1414, 1
  br i1 %1479, label %1413, label %1482, !llvm.loop !1351

1482:                                             ; preds = %1472, %1410
  %1483 = phi i32 [ %1412, %1410 ], [ %1478, %1472 ]
  %1484 = icmp slt i32 %1483, %5
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1482
  %1486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1487:                                             ; preds = %1482
  %1488 = sext i32 %1483 to i64
  %1489 = getelementptr inbounds double, ptr %1239, i64 %1488
  %1490 = load double, ptr %1489, align 8, !tbaa !18
  %1491 = fptosi double %1490 to i8
  %1492 = load i8, ptr %1241, align 1, !tbaa !11
  %1493 = sitofp i8 %1492 to double
  %1494 = sitofp i8 %1491 to double
  %1495 = icmp slt i8 %1491, 0
  %1496 = fneg fast double %1494
  %1497 = select fast i1 %1495, double %1496, double %1494
  %1498 = fadd fast double %1497, %1493
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1241, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1411, 1
  br i1 %1256, label %1501, label %1551

1501:                                             ; preds = %1487
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1259
  br i1 %1543, label %1551, label %1510, !llvm.loop !1352

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1487
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5501, label %1410, !llvm.loop !1353

1553:                                             ; preds = %1247
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5501

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1709

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5501

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1707
  %1577 = phi i32 [ 0, %1568 ], [ %1659, %1707 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1658, %1707 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !1354

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !1355

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !1356

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds double, ptr %1239, i64 %1651
  %1653 = load double, ptr %1652, align 8, !tbaa !18
  %1654 = fptosi double %1653 to i8
  %1655 = load i8, ptr %1241, align 1, !tbaa !11
  %1656 = tail call i8 @llvm.abs.i8(i8 %1654, i1 false)
  %1657 = add i8 %1656, %1655
  store i8 %1657, ptr %1241, align 1, !tbaa !11
  %1658 = fadd fast double %1578, 1.000000e+00
  %1659 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1660, label %1707

1660:                                             ; preds = %1649
  %1661 = load i32, ptr %4, align 4, !tbaa !5
  %1662 = load i32, ptr %12, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, -1
  %1664 = icmp slt i32 %1661, %1663
  br i1 %1664, label %1684, label %1665

1665:                                             ; preds = %1660
  %1666 = icmp eq i32 %1661, %1663
  br i1 %1666, label %1667, label %1700

1667:                                             ; preds = %1665
  store i32 0, ptr %4, align 4, !tbaa !5
  %1668 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1668, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1707, label %1669

1669:                                             ; preds = %1667, %1694
  %1670 = phi i64 [ %1698, %1694 ], [ 1, %1667 ]
  %1671 = getelementptr inbounds i32, ptr %4, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %12, i64 %1670
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = add nsw i32 %1674, -1
  %1676 = icmp slt i32 %1672, %1675
  br i1 %1676, label %1677, label %1692

1677:                                             ; preds = %1669
  br i1 %1664, label %1684, label %1678

1678:                                             ; preds = %1677
  %1679 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1680 = load i32, ptr %1679, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %6, i64 %1670
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = add nsw i32 %1682, %1680
  store i32 %1683, ptr %1681, align 4, !tbaa !5
  br label %1702

1684:                                             ; preds = %1660, %1677
  %1685 = phi i32 [ %1672, %1677 ], [ %1661, %1660 ]
  %1686 = phi ptr [ %1671, %1677 ], [ %4, %1660 ]
  %1687 = phi i64 [ %1670, %1677 ], [ 0, %1660 ]
  %1688 = add nsw i32 %1685, 1
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  %1689 = getelementptr inbounds i32, ptr %7, i64 %1687
  %1690 = load i32, ptr %1689, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1687
  br label %1702

1692:                                             ; preds = %1669
  %1693 = icmp eq i32 %1672, %1675
  br i1 %1693, label %1694, label %1700

1694:                                             ; preds = %1692
  store i32 0, ptr %1671, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %8, i64 %1670
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %6, i64 %1670
  store i32 %1696, ptr %1697, align 4, !tbaa !5
  %1698 = add nuw nsw i64 %1670, 1
  %1699 = icmp eq i64 %1698, %1573
  br i1 %1699, label %1707, label %1669, !llvm.loop !1357

1700:                                             ; preds = %1665, %1692
  %1701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1702:                                             ; preds = %1678, %1684
  %1703 = phi ptr [ %1691, %1684 ], [ %1671, %1678 ]
  %1704 = phi i32 [ %1690, %1684 ], [ 1, %1678 ]
  %1705 = load i32, ptr %1703, align 4, !tbaa !5
  %1706 = add nsw i32 %1705, %1704
  store i32 %1706, ptr %1703, align 4, !tbaa !5
  br label %1707

1707:                                             ; preds = %1694, %1702, %1667, %1649
  %1708 = icmp eq i32 %1659, %5
  br i1 %1708, label %5501, label %1576, !llvm.loop !1358

1709:                                             ; preds = %1559, %1845
  %1710 = phi i32 [ 0, %1559 ], [ %1794, %1845 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1712, label %1781

1712:                                             ; preds = %1709, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1709 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1564, %1709 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1563, %1709 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1709 ]
  %1717 = sub i32 %1562, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !1359

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !1360

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !1361

1781:                                             ; preds = %1771, %1709
  %1782 = phi i32 [ %1711, %1709 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds double, ptr %1239, i64 %1787
  %1789 = load double, ptr %1788, align 8, !tbaa !18
  %1790 = fptosi double %1789 to i8
  %1791 = load i8, ptr %1241, align 1, !tbaa !11
  %1792 = tail call i8 @llvm.abs.i8(i8 %1790, i1 false)
  %1793 = add i8 %1792, %1791
  store i8 %1793, ptr %1241, align 1, !tbaa !11
  %1794 = add nuw nsw i32 %1710, 1
  br i1 %1561, label %1795, label %1845

1795:                                             ; preds = %1786
  %1796 = load i32, ptr %4, align 4, !tbaa !5
  %1797 = load i32, ptr %12, align 4, !tbaa !5
  %1798 = add nsw i32 %1797, -1
  %1799 = icmp slt i32 %1796, %1798
  br i1 %1799, label %1822, label %1800

1800:                                             ; preds = %1795
  %1801 = icmp eq i32 %1796, %1798
  br i1 %1801, label %1802, label %1838

1802:                                             ; preds = %1800
  store i32 0, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1803, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1845, label %1804

1804:                                             ; preds = %1802, %1832
  %1805 = phi i64 [ %1836, %1832 ], [ 1, %1802 ]
  %1806 = getelementptr inbounds i32, ptr %4, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %12, i64 %1805
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = add nsw i32 %1809, -1
  %1811 = icmp slt i32 %1807, %1810
  br i1 %1811, label %1812, label %1830

1812:                                             ; preds = %1804
  br i1 %1799, label %1822, label %1813

1813:                                             ; preds = %1812
  %1814 = shl i64 %1805, 32
  %1815 = add i64 %1814, -4294967296
  %1816 = ashr exact i64 %1815, 32
  %1817 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = add nsw i32 %1820, %1818
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  br label %1840

1822:                                             ; preds = %1795, %1812
  %1823 = phi i32 [ %1807, %1812 ], [ %1796, %1795 ]
  %1824 = phi ptr [ %1806, %1812 ], [ %4, %1795 ]
  %1825 = phi i64 [ %1805, %1812 ], [ 0, %1795 ]
  %1826 = add nsw i32 %1823, 1
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1825
  br label %1840

1830:                                             ; preds = %1804
  %1831 = icmp eq i32 %1807, %1810
  br i1 %1831, label %1832, label %1838

1832:                                             ; preds = %1830
  store i32 0, ptr %1806, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %8, i64 %1805
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1805
  store i32 %1834, ptr %1835, align 4, !tbaa !5
  %1836 = add nuw nsw i64 %1805, 1
  %1837 = icmp eq i64 %1836, %1564
  br i1 %1837, label %1845, label %1804, !llvm.loop !1362

1838:                                             ; preds = %1800, %1830
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

1840:                                             ; preds = %1813, %1822
  %1841 = phi ptr [ %1829, %1822 ], [ %1806, %1813 ]
  %1842 = phi i32 [ %1828, %1822 ], [ 1, %1813 ]
  %1843 = load i32, ptr %1841, align 4, !tbaa !5
  %1844 = add nsw i32 %1843, %1842
  store i32 %1844, ptr %1841, align 4, !tbaa !5
  br label %1845

1845:                                             ; preds = %1832, %1840, %1802, %1786
  %1846 = icmp eq i32 %1794, %5
  br i1 %1846, label %5501, label %1709, !llvm.loop !1363

1847:                                             ; preds = %1247
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

1849:                                             ; preds = %18
  %1850 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  %1852 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1853 = load ptr, ptr %1852, align 8, !tbaa !9
  store i16 0, ptr %1853, align 2, !tbaa !78
  %1854 = icmp eq i32 %13, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1849
  %1856 = load double, ptr %1851, align 8, !tbaa !18
  %1857 = fptosi double %1856 to i16
  %1858 = tail call i16 @llvm.abs.i16(i16 %1857, i1 false)
  store i16 %1858, ptr %1853, align 2, !tbaa !78
  br label %5501

1859:                                             ; preds = %1849
  switch i32 %1, label %2459 [
    i32 1, label %1860
    i32 0, label %2165
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5501

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2022

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5501

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2020
  %1884 = phi i16 [ 0, %1875 ], [ %1970, %2020 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1972, %2020 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1971, %2020 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !1364

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !1365

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !1366

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds double, ptr %1851, i64 %1959
  %1963 = load double, ptr %1962, align 8, !tbaa !18
  %1964 = fptosi double %1963 to i16
  %1965 = sitofp i16 %1884 to double
  %1966 = sitofp i16 %1964 to double
  %1967 = fmul fast double %1961, %1966
  %1968 = tail call fast double @llvm.fabs.f64(double %1967)
  %1969 = fadd fast double %1968, %1965
  %1970 = fptosi double %1969 to i16
  %1971 = fadd fast double %1961, %1886
  %1972 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1973, label %2020

1973:                                             ; preds = %1957
  %1974 = load i32, ptr %4, align 4, !tbaa !5
  %1975 = load i32, ptr %12, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1974, %1976
  br i1 %1977, label %1997, label %1978

1978:                                             ; preds = %1973
  %1979 = icmp eq i32 %1974, %1976
  br i1 %1979, label %1980, label %2013

1980:                                             ; preds = %1978
  store i32 0, ptr %4, align 4, !tbaa !5
  %1981 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1981, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2020, label %1982

1982:                                             ; preds = %1980, %2007
  %1983 = phi i64 [ %2011, %2007 ], [ 1, %1980 ]
  %1984 = getelementptr inbounds i32, ptr %4, i64 %1983
  %1985 = load i32, ptr %1984, align 4, !tbaa !5
  %1986 = getelementptr inbounds i32, ptr %12, i64 %1983
  %1987 = load i32, ptr %1986, align 4, !tbaa !5
  %1988 = add nsw i32 %1987, -1
  %1989 = icmp slt i32 %1985, %1988
  br i1 %1989, label %1990, label %2005

1990:                                             ; preds = %1982
  br i1 %1977, label %1997, label %1991

1991:                                             ; preds = %1990
  %1992 = getelementptr inbounds i32, ptr %7, i64 %1983
  %1993 = load i32, ptr %1992, align 4, !tbaa !5
  %1994 = getelementptr inbounds i32, ptr %6, i64 %1983
  %1995 = load i32, ptr %1994, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1993
  store i32 %1996, ptr %1994, align 4, !tbaa !5
  br label %2015

1997:                                             ; preds = %1973, %1990
  %1998 = phi i32 [ %1985, %1990 ], [ %1974, %1973 ]
  %1999 = phi ptr [ %1984, %1990 ], [ %4, %1973 ]
  %2000 = phi i64 [ %1983, %1990 ], [ 0, %1973 ]
  %2001 = add nsw i32 %1998, 1
  store i32 %2001, ptr %1999, align 4, !tbaa !5
  %2002 = getelementptr inbounds i32, ptr %7, i64 %2000
  %2003 = load i32, ptr %2002, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %6, i64 %2000
  br label %2015

2005:                                             ; preds = %1982
  %2006 = icmp eq i32 %1985, %1988
  br i1 %2006, label %2007, label %2013

2007:                                             ; preds = %2005
  store i32 0, ptr %1984, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %8, i64 %1983
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = getelementptr inbounds i32, ptr %6, i64 %1983
  store i32 %2009, ptr %2010, align 4, !tbaa !5
  %2011 = add nuw nsw i64 %1983, 1
  %2012 = icmp eq i64 %2011, %1880
  br i1 %2012, label %2020, label %1982, !llvm.loop !1367

2013:                                             ; preds = %1978, %2005
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  %2014 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2015:                                             ; preds = %1991, %1997
  %2016 = phi ptr [ %2004, %1997 ], [ %1984, %1991 ]
  %2017 = phi i32 [ %2003, %1997 ], [ 1, %1991 ]
  %2018 = load i32, ptr %2016, align 4, !tbaa !5
  %2019 = add nsw i32 %2018, %2017
  store i32 %2019, ptr %2016, align 4, !tbaa !5
  br label %2020

2020:                                             ; preds = %2007, %2015, %1980, %1957
  %2021 = icmp eq i32 %1972, %5
  br i1 %2021, label %5495, label %1883, !llvm.loop !1368

2022:                                             ; preds = %1866, %2163
  %2023 = phi i16 [ 0, %1866 ], [ %2111, %2163 ]
  %2024 = phi i32 [ 0, %1866 ], [ %2112, %2163 ]
  %2025 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2026, label %2095

2026:                                             ; preds = %2022, %2085
  %2027 = phi i32 [ %2094, %2085 ], [ 0, %2022 ]
  %2028 = phi i64 [ %2036, %2085 ], [ %1871, %2022 ]
  %2029 = phi i64 [ %2093, %2085 ], [ %1870, %2022 ]
  %2030 = phi i32 [ %2091, %2085 ], [ %2025, %2022 ]
  %2031 = sub i32 %1869, %2027
  %2032 = tail call i32 @llvm.smin.i32(i32 %2031, i32 0)
  %2033 = sub i32 %2031, %2032
  %2034 = zext i32 %2033 to i64
  %2035 = add nuw nsw i64 %2034, 1
  %2036 = add nsw i64 %2028, -1
  %2037 = icmp ult i32 %2033, 31
  br i1 %2037, label %2073, label %2038

2038:                                             ; preds = %2026
  %2039 = and i64 %2035, 8589934560
  %2040 = sub i64 %2029, %2039
  br label %2041

2041:                                             ; preds = %2041, %2038
  %2042 = phi i64 [ 0, %2038 ], [ %2065, %2041 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2061, %2041 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2062, %2041 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2063, %2041 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2038 ], [ %2064, %2041 ]
  %2047 = sub i64 %2029, %2042
  %2048 = getelementptr inbounds i32, ptr %11, i64 %2047
  %2049 = getelementptr inbounds i32, ptr %2048, i64 -7
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2048, i64 -15
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2048, i64 -23
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = getelementptr inbounds i32, ptr %2048, i64 -31
  %2059 = load <8 x i32>, ptr %2058, align 4, !tbaa !5
  %2060 = shufflevector <8 x i32> %2059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2061 = mul <8 x i32> %2051, %2043
  %2062 = mul <8 x i32> %2054, %2044
  %2063 = mul <8 x i32> %2057, %2045
  %2064 = mul <8 x i32> %2060, %2046
  %2065 = add nuw i64 %2042, 32
  %2066 = icmp eq i64 %2065, %2039
  br i1 %2066, label %2067, label %2041, !llvm.loop !1369

2067:                                             ; preds = %2041
  %2068 = mul <8 x i32> %2062, %2061
  %2069 = mul <8 x i32> %2063, %2068
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2070)
  %2072 = icmp eq i64 %2035, %2039
  br i1 %2072, label %2085, label %2073

2073:                                             ; preds = %2026, %2067
  %2074 = phi i64 [ %2029, %2026 ], [ %2040, %2067 ]
  %2075 = phi i32 [ 1, %2026 ], [ %2071, %2067 ]
  br label %2076

2076:                                             ; preds = %2073, %2076
  %2077 = phi i64 [ %2082, %2076 ], [ %2074, %2073 ]
  %2078 = phi i32 [ %2081, %2076 ], [ %2075, %2073 ]
  %2079 = getelementptr inbounds i32, ptr %11, i64 %2077
  %2080 = load i32, ptr %2079, align 4, !tbaa !5
  %2081 = mul nsw i32 %2080, %2078
  %2082 = add nsw i64 %2077, -1
  %2083 = trunc i64 %2077 to i32
  %2084 = icmp sgt i32 %2083, 0
  br i1 %2084, label %2076, label %2085, !llvm.loop !1370

2085:                                             ; preds = %2076, %2067
  %2086 = phi i32 [ %2071, %2067 ], [ %2081, %2076 ]
  %2087 = and i64 %2036, 4294967295
  %2088 = getelementptr inbounds i32, ptr %6, i64 %2087
  %2089 = load i32, ptr %2088, align 4, !tbaa !5
  %2090 = mul nsw i32 %2089, %2086
  %2091 = add nsw i32 %2090, %2030
  %2092 = icmp sgt i64 %2028, 2
  %2093 = add nsw i64 %2029, -1
  %2094 = add i32 %2027, 1
  br i1 %2092, label %2026, label %2095, !llvm.loop !1371

2095:                                             ; preds = %2085, %2022
  %2096 = phi i32 [ %2025, %2022 ], [ %2091, %2085 ]
  %2097 = icmp slt i32 %2096, %5
  br i1 %2097, label %2100, label %2098

2098:                                             ; preds = %2095
  %2099 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2100:                                             ; preds = %2095
  %2101 = sext i32 %2096 to i64
  %2102 = getelementptr inbounds double, ptr %1851, i64 %2101
  %2103 = load double, ptr %2102, align 8, !tbaa !18
  %2104 = fptosi double %2103 to i16
  %2105 = sitofp i16 %2023 to double
  %2106 = sitofp i16 %2104 to double
  %2107 = icmp slt i16 %2104, 0
  %2108 = fneg fast double %2106
  %2109 = select fast i1 %2107, double %2108, double %2106
  %2110 = fadd fast double %2109, %2105
  %2111 = fptosi double %2110 to i16
  store i16 %2111, ptr %1853, align 2, !tbaa !78
  %2112 = add nuw nsw i32 %2024, 1
  br i1 %1868, label %2113, label %2163

2113:                                             ; preds = %2100
  %2114 = load i32, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %12, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, -1
  %2117 = icmp slt i32 %2114, %2116
  br i1 %2117, label %2140, label %2118

2118:                                             ; preds = %2113
  %2119 = icmp eq i32 %2114, %2116
  br i1 %2119, label %2120, label %2156

2120:                                             ; preds = %2118
  store i32 0, ptr %4, align 4, !tbaa !5
  %2121 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2121, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2163, label %2122

2122:                                             ; preds = %2120, %2150
  %2123 = phi i64 [ %2154, %2150 ], [ 1, %2120 ]
  %2124 = getelementptr inbounds i32, ptr %4, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %12, i64 %2123
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, -1
  %2129 = icmp slt i32 %2125, %2128
  br i1 %2129, label %2130, label %2148

2130:                                             ; preds = %2122
  br i1 %2117, label %2140, label %2131

2131:                                             ; preds = %2130
  %2132 = shl i64 %2123, 32
  %2133 = add i64 %2132, -4294967296
  %2134 = ashr exact i64 %2133, 32
  %2135 = getelementptr inbounds i32, ptr %7, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, %2136
  store i32 %2139, ptr %2137, align 4, !tbaa !5
  br label %2158

2140:                                             ; preds = %2113, %2130
  %2141 = phi i32 [ %2125, %2130 ], [ %2114, %2113 ]
  %2142 = phi ptr [ %2124, %2130 ], [ %4, %2113 ]
  %2143 = phi i64 [ %2123, %2130 ], [ 0, %2113 ]
  %2144 = add nsw i32 %2141, 1
  store i32 %2144, ptr %2142, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2143
  br label %2158

2148:                                             ; preds = %2122
  %2149 = icmp eq i32 %2125, %2128
  br i1 %2149, label %2150, label %2156

2150:                                             ; preds = %2148
  store i32 0, ptr %2124, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %8, i64 %2123
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %6, i64 %2123
  store i32 %2152, ptr %2153, align 4, !tbaa !5
  %2154 = add nuw nsw i64 %2123, 1
  %2155 = icmp eq i64 %2154, %1871
  br i1 %2155, label %2163, label %2122, !llvm.loop !1372

2156:                                             ; preds = %2118, %2148
  %2157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2158:                                             ; preds = %2131, %2140
  %2159 = phi ptr [ %2147, %2140 ], [ %2124, %2131 ]
  %2160 = phi i32 [ %2146, %2140 ], [ 1, %2131 ]
  %2161 = load i32, ptr %2159, align 4, !tbaa !5
  %2162 = add nsw i32 %2161, %2160
  store i32 %2162, ptr %2159, align 4, !tbaa !5
  br label %2163

2163:                                             ; preds = %2150, %2158, %2120, %2100
  %2164 = icmp eq i32 %2112, %5
  br i1 %2164, label %5501, label %2022, !llvm.loop !1373

2165:                                             ; preds = %1859
  %2166 = getelementptr inbounds i32, ptr %3, i64 %19
  %2167 = load i32, ptr %2166, align 4, !tbaa !5
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp sgt i32 %5, 0
  br i1 %2168, label %2179, label %2170

2170:                                             ; preds = %2165
  br i1 %2169, label %2171, label %5501

2171:                                             ; preds = %2170
  %2172 = icmp sgt i32 %13, 1
  %2173 = icmp sgt i32 %13, 0
  %2174 = add i32 %13, -2
  %2175 = zext i32 %2174 to i64
  %2176 = zext i32 %13 to i64
  %2177 = add nuw i32 %5, 1
  %2178 = icmp eq i32 %13, 1
  br label %2321

2179:                                             ; preds = %2165
  br i1 %2169, label %2180, label %5501

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2188

2188:                                             ; preds = %2180, %2319
  %2189 = phi i16 [ 0, %2180 ], [ %2269, %2319 ]
  %2190 = phi i32 [ 0, %2180 ], [ %2271, %2319 ]
  %2191 = phi double [ 0.000000e+00, %2180 ], [ %2270, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2193, label %2262

2193:                                             ; preds = %2188, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2188 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2185, %2188 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2184, %2188 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2188 ]
  %2198 = sub i32 %2183, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !1374

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !1375

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !1376

2262:                                             ; preds = %2252, %2188
  %2263 = phi i32 [ %2192, %2188 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds double, ptr %1851, i64 %2264
  %2266 = load double, ptr %2265, align 8, !tbaa !18
  %2267 = fptosi double %2266 to i16
  %2268 = tail call i16 @llvm.abs.i16(i16 %2267, i1 false)
  %2269 = add i16 %2268, %2189
  %2270 = fadd fast double %2191, 1.000000e+00
  %2271 = add nuw nsw i32 %2190, 1
  br i1 %2182, label %2272, label %2319

2272:                                             ; preds = %2262
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2185
  br i1 %2311, label %2319, label %2281, !llvm.loop !1377

2312:                                             ; preds = %2277, %2304
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2262
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %5496, label %2188, !llvm.loop !1378

2321:                                             ; preds = %2171, %2457
  %2322 = phi i16 [ 0, %2171 ], [ %2405, %2457 ]
  %2323 = phi i32 [ 0, %2171 ], [ %2406, %2457 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2176, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2175, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2174, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !1379

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !1380

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !1381

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds double, ptr %1851, i64 %2400
  %2402 = load double, ptr %2401, align 8, !tbaa !18
  %2403 = fptosi double %2402 to i16
  %2404 = tail call i16 @llvm.abs.i16(i16 %2403, i1 false)
  %2405 = add i16 %2404, %2322
  store i16 %2405, ptr %1853, align 2, !tbaa !78
  %2406 = add nuw nsw i32 %2323, 1
  br i1 %2173, label %2407, label %2457

2407:                                             ; preds = %2399
  %2408 = load i32, ptr %4, align 4, !tbaa !5
  %2409 = load i32, ptr %12, align 4, !tbaa !5
  %2410 = add nsw i32 %2409, -1
  %2411 = icmp slt i32 %2408, %2410
  br i1 %2411, label %2434, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp eq i32 %2408, %2410
  br i1 %2413, label %2414, label %2450

2414:                                             ; preds = %2412
  store i32 0, ptr %4, align 4, !tbaa !5
  %2415 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2415, ptr %6, align 4, !tbaa !5
  br i1 %2178, label %2457, label %2416

2416:                                             ; preds = %2414, %2444
  %2417 = phi i64 [ %2448, %2444 ], [ 1, %2414 ]
  %2418 = getelementptr inbounds i32, ptr %4, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %12, i64 %2417
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2419, %2422
  br i1 %2423, label %2424, label %2442

2424:                                             ; preds = %2416
  br i1 %2411, label %2434, label %2425

2425:                                             ; preds = %2424
  %2426 = shl i64 %2417, 32
  %2427 = add i64 %2426, -4294967296
  %2428 = ashr exact i64 %2427, 32
  %2429 = getelementptr inbounds i32, ptr %7, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %6, i64 %2417
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, %2430
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  br label %2452

2434:                                             ; preds = %2407, %2424
  %2435 = phi i32 [ %2419, %2424 ], [ %2408, %2407 ]
  %2436 = phi ptr [ %2418, %2424 ], [ %4, %2407 ]
  %2437 = phi i64 [ %2417, %2424 ], [ 0, %2407 ]
  %2438 = add nsw i32 %2435, 1
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  %2439 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %6, i64 %2437
  br label %2452

2442:                                             ; preds = %2416
  %2443 = icmp eq i32 %2419, %2422
  br i1 %2443, label %2444, label %2450

2444:                                             ; preds = %2442
  store i32 0, ptr %2418, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %8, i64 %2417
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %6, i64 %2417
  store i32 %2446, ptr %2447, align 4, !tbaa !5
  %2448 = add nuw nsw i64 %2417, 1
  %2449 = icmp eq i64 %2448, %2176
  br i1 %2449, label %2457, label %2416, !llvm.loop !1382

2450:                                             ; preds = %2412, %2442
  %2451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2452:                                             ; preds = %2425, %2434
  %2453 = phi ptr [ %2441, %2434 ], [ %2418, %2425 ]
  %2454 = phi i32 [ %2440, %2434 ], [ 1, %2425 ]
  %2455 = load i32, ptr %2453, align 4, !tbaa !5
  %2456 = add nsw i32 %2455, %2454
  store i32 %2456, ptr %2453, align 4, !tbaa !5
  br label %2457

2457:                                             ; preds = %2444, %2452, %2414, %2399
  %2458 = icmp eq i32 %2406, %5
  br i1 %2458, label %5501, label %2321, !llvm.loop !1383

2459:                                             ; preds = %1859
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

2461:                                             ; preds = %18
  %2462 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2463 = load ptr, ptr %2462, align 8, !tbaa !9
  %2464 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  store i32 0, ptr %2465, align 4, !tbaa !5
  %2466 = icmp eq i32 %13, 0
  br i1 %2466, label %2467, label %2471

2467:                                             ; preds = %2461
  %2468 = load double, ptr %2463, align 8, !tbaa !18
  %2469 = fptosi double %2468 to i32
  %2470 = tail call i32 @llvm.abs.i32(i32 %2469, i1 true)
  store i32 %2470, ptr %2465, align 4, !tbaa !5
  br label %5501

2471:                                             ; preds = %2461
  switch i32 %1, label %3071 [
    i32 1, label %2472
    i32 0, label %2777
  ]

2472:                                             ; preds = %2471
  %2473 = getelementptr inbounds i32, ptr %3, i64 %19
  %2474 = load i32, ptr %2473, align 4, !tbaa !5
  %2475 = icmp eq i32 %2474, 0
  %2476 = icmp sgt i32 %5, 0
  br i1 %2475, label %2486, label %2477

2477:                                             ; preds = %2472
  br i1 %2476, label %2478, label %5501

2478:                                             ; preds = %2477
  %2479 = icmp sgt i32 %13, 1
  %2480 = icmp sgt i32 %13, 0
  %2481 = add i32 %13, -2
  %2482 = zext i32 %2481 to i64
  %2483 = zext i32 %13 to i64
  %2484 = add nuw i32 %5, 1
  %2485 = icmp eq i32 %13, 1
  br label %2634

2486:                                             ; preds = %2472
  br i1 %2476, label %2487, label %5501

2487:                                             ; preds = %2486
  %2488 = icmp sgt i32 %13, 1
  %2489 = icmp sgt i32 %13, 0
  %2490 = add i32 %13, -2
  %2491 = zext i32 %2490 to i64
  %2492 = zext i32 %13 to i64
  %2493 = add nuw i32 %5, 1
  %2494 = icmp eq i32 %13, 1
  br label %2495

2495:                                             ; preds = %2487, %2632
  %2496 = phi i32 [ 0, %2487 ], [ %2584, %2632 ]
  %2497 = phi double [ 0.000000e+00, %2487 ], [ %2583, %2632 ]
  %2498 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2499, label %2568

2499:                                             ; preds = %2495, %2558
  %2500 = phi i32 [ %2567, %2558 ], [ 0, %2495 ]
  %2501 = phi i64 [ %2509, %2558 ], [ %2492, %2495 ]
  %2502 = phi i64 [ %2566, %2558 ], [ %2491, %2495 ]
  %2503 = phi i32 [ %2564, %2558 ], [ %2498, %2495 ]
  %2504 = sub i32 %2490, %2500
  %2505 = tail call i32 @llvm.smin.i32(i32 %2504, i32 0)
  %2506 = sub i32 %2504, %2505
  %2507 = zext i32 %2506 to i64
  %2508 = add nuw nsw i64 %2507, 1
  %2509 = add nsw i64 %2501, -1
  %2510 = icmp ult i32 %2506, 31
  br i1 %2510, label %2546, label %2511

2511:                                             ; preds = %2499
  %2512 = and i64 %2508, 8589934560
  %2513 = sub i64 %2502, %2512
  br label %2514

2514:                                             ; preds = %2514, %2511
  %2515 = phi i64 [ 0, %2511 ], [ %2538, %2514 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2534, %2514 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2535, %2514 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2536, %2514 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2537, %2514 ]
  %2520 = sub i64 %2502, %2515
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2520
  %2522 = getelementptr inbounds i32, ptr %2521, i64 -7
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2521, i64 -15
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2521, i64 -23
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2521, i64 -31
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = mul <8 x i32> %2524, %2516
  %2535 = mul <8 x i32> %2527, %2517
  %2536 = mul <8 x i32> %2530, %2518
  %2537 = mul <8 x i32> %2533, %2519
  %2538 = add nuw i64 %2515, 32
  %2539 = icmp eq i64 %2538, %2512
  br i1 %2539, label %2540, label %2514, !llvm.loop !1384

2540:                                             ; preds = %2514
  %2541 = mul <8 x i32> %2535, %2534
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2543)
  %2545 = icmp eq i64 %2508, %2512
  br i1 %2545, label %2558, label %2546

2546:                                             ; preds = %2499, %2540
  %2547 = phi i64 [ %2502, %2499 ], [ %2513, %2540 ]
  %2548 = phi i32 [ 1, %2499 ], [ %2544, %2540 ]
  br label %2549

2549:                                             ; preds = %2546, %2549
  %2550 = phi i64 [ %2555, %2549 ], [ %2547, %2546 ]
  %2551 = phi i32 [ %2554, %2549 ], [ %2548, %2546 ]
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = mul nsw i32 %2553, %2551
  %2555 = add nsw i64 %2550, -1
  %2556 = trunc i64 %2550 to i32
  %2557 = icmp sgt i32 %2556, 0
  br i1 %2557, label %2549, label %2558, !llvm.loop !1385

2558:                                             ; preds = %2549, %2540
  %2559 = phi i32 [ %2544, %2540 ], [ %2554, %2549 ]
  %2560 = and i64 %2509, 4294967295
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2560
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2559
  %2564 = add nsw i32 %2563, %2503
  %2565 = icmp sgt i64 %2501, 2
  %2566 = add nsw i64 %2502, -1
  %2567 = add i32 %2500, 1
  br i1 %2565, label %2499, label %2568, !llvm.loop !1386

2568:                                             ; preds = %2558, %2495
  %2569 = phi i32 [ %2498, %2495 ], [ %2564, %2558 ]
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds double, ptr %2, i64 %2570
  %2572 = load double, ptr %2571, align 8, !tbaa !18
  %2573 = getelementptr inbounds double, ptr %2463, i64 %2570
  %2574 = load double, ptr %2573, align 8, !tbaa !18
  %2575 = fptosi double %2574 to i32
  %2576 = load i32, ptr %2465, align 4, !tbaa !5
  %2577 = sitofp i32 %2576 to double
  %2578 = sitofp i32 %2575 to double
  %2579 = fmul fast double %2572, %2578
  %2580 = tail call fast double @llvm.fabs.f64(double %2579)
  %2581 = fadd fast double %2580, %2577
  %2582 = fptosi double %2581 to i32
  store i32 %2582, ptr %2465, align 4, !tbaa !5
  %2583 = fadd fast double %2572, %2497
  %2584 = add nuw nsw i32 %2496, 1
  br i1 %2489, label %2585, label %2632

2585:                                             ; preds = %2568
  %2586 = load i32, ptr %4, align 4, !tbaa !5
  %2587 = load i32, ptr %12, align 4, !tbaa !5
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !5
  %2593 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2593, ptr %6, align 4, !tbaa !5
  br i1 %2494, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !5
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !5
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !5
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !5
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !5
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2492
  br i1 %2624, label %2632, label %2594, !llvm.loop !1387

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !5
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !5
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2568
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5501, label %2495, !llvm.loop !1388

2634:                                             ; preds = %2478, %2775
  %2635 = phi i32 [ 0, %2478 ], [ %2724, %2775 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2483, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2482, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2481, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !5
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !5
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !5
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1389

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !5
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1390

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1391

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds double, ptr %2463, i64 %2712
  %2714 = load double, ptr %2713, align 8, !tbaa !18
  %2715 = fptosi double %2714 to i32
  %2716 = load i32, ptr %2465, align 4, !tbaa !5
  %2717 = sitofp i32 %2716 to double
  %2718 = sitofp i32 %2715 to double
  %2719 = icmp slt i32 %2715, 0
  %2720 = fneg fast double %2718
  %2721 = select fast i1 %2719, double %2720, double %2718
  %2722 = fadd fast double %2721, %2717
  %2723 = fptosi double %2722 to i32
  store i32 %2723, ptr %2465, align 4, !tbaa !5
  %2724 = add nuw nsw i32 %2635, 1
  br i1 %2480, label %2725, label %2775

2725:                                             ; preds = %2711
  %2726 = load i32, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %12, align 4, !tbaa !5
  %2728 = add nsw i32 %2727, -1
  %2729 = icmp slt i32 %2726, %2728
  br i1 %2729, label %2752, label %2730

2730:                                             ; preds = %2725
  %2731 = icmp eq i32 %2726, %2728
  br i1 %2731, label %2732, label %2768

2732:                                             ; preds = %2730
  store i32 0, ptr %4, align 4, !tbaa !5
  %2733 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2733, ptr %6, align 4, !tbaa !5
  br i1 %2485, label %2775, label %2734

2734:                                             ; preds = %2732, %2762
  %2735 = phi i64 [ %2766, %2762 ], [ 1, %2732 ]
  %2736 = getelementptr inbounds i32, ptr %4, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = getelementptr inbounds i32, ptr %12, i64 %2735
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = add nsw i32 %2739, -1
  %2741 = icmp slt i32 %2737, %2740
  br i1 %2741, label %2742, label %2760

2742:                                             ; preds = %2734
  br i1 %2729, label %2752, label %2743

2743:                                             ; preds = %2742
  %2744 = shl i64 %2735, 32
  %2745 = add i64 %2744, -4294967296
  %2746 = ashr exact i64 %2745, 32
  %2747 = getelementptr inbounds i32, ptr %7, i64 %2746
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = getelementptr inbounds i32, ptr %6, i64 %2735
  %2750 = load i32, ptr %2749, align 4, !tbaa !5
  %2751 = add nsw i32 %2750, %2748
  store i32 %2751, ptr %2749, align 4, !tbaa !5
  br label %2770

2752:                                             ; preds = %2725, %2742
  %2753 = phi i32 [ %2737, %2742 ], [ %2726, %2725 ]
  %2754 = phi ptr [ %2736, %2742 ], [ %4, %2725 ]
  %2755 = phi i64 [ %2735, %2742 ], [ 0, %2725 ]
  %2756 = add nsw i32 %2753, 1
  store i32 %2756, ptr %2754, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %7, i64 %2755
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2755
  br label %2770

2760:                                             ; preds = %2734
  %2761 = icmp eq i32 %2737, %2740
  br i1 %2761, label %2762, label %2768

2762:                                             ; preds = %2760
  store i32 0, ptr %2736, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %8, i64 %2735
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = getelementptr inbounds i32, ptr %6, i64 %2735
  store i32 %2764, ptr %2765, align 4, !tbaa !5
  %2766 = add nuw nsw i64 %2735, 1
  %2767 = icmp eq i64 %2766, %2483
  br i1 %2767, label %2775, label %2734, !llvm.loop !1392

2768:                                             ; preds = %2730, %2760
  %2769 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2770:                                             ; preds = %2743, %2752
  %2771 = phi ptr [ %2759, %2752 ], [ %2736, %2743 ]
  %2772 = phi i32 [ %2758, %2752 ], [ 1, %2743 ]
  %2773 = load i32, ptr %2771, align 4, !tbaa !5
  %2774 = add nsw i32 %2773, %2772
  store i32 %2774, ptr %2771, align 4, !tbaa !5
  br label %2775

2775:                                             ; preds = %2762, %2770, %2732, %2711
  %2776 = icmp eq i32 %2724, %5
  br i1 %2776, label %5501, label %2634, !llvm.loop !1393

2777:                                             ; preds = %2471
  %2778 = getelementptr inbounds i32, ptr %3, i64 %19
  %2779 = load i32, ptr %2778, align 4, !tbaa !5
  %2780 = icmp eq i32 %2779, 0
  %2781 = icmp sgt i32 %5, 0
  br i1 %2780, label %2791, label %2782

2782:                                             ; preds = %2777
  br i1 %2781, label %2783, label %5501

2783:                                             ; preds = %2782
  %2784 = icmp sgt i32 %13, 1
  %2785 = icmp sgt i32 %13, 0
  %2786 = add i32 %13, -2
  %2787 = zext i32 %2786 to i64
  %2788 = zext i32 %13 to i64
  %2789 = add nuw i32 %5, 1
  %2790 = icmp eq i32 %13, 1
  br label %2933

2791:                                             ; preds = %2777
  br i1 %2781, label %2792, label %5501

2792:                                             ; preds = %2791
  %2793 = icmp sgt i32 %13, 1
  %2794 = icmp sgt i32 %13, 0
  %2795 = add i32 %13, -2
  %2796 = zext i32 %2795 to i64
  %2797 = zext i32 %13 to i64
  %2798 = add nuw i32 %5, 1
  %2799 = icmp eq i32 %13, 1
  br label %2800

2800:                                             ; preds = %2792, %2931
  %2801 = phi i32 [ 0, %2792 ], [ %2883, %2931 ]
  %2802 = phi double [ 0.000000e+00, %2792 ], [ %2882, %2931 ]
  %2803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2804, label %2873

2804:                                             ; preds = %2800, %2863
  %2805 = phi i32 [ %2872, %2863 ], [ 0, %2800 ]
  %2806 = phi i64 [ %2814, %2863 ], [ %2797, %2800 ]
  %2807 = phi i64 [ %2871, %2863 ], [ %2796, %2800 ]
  %2808 = phi i32 [ %2869, %2863 ], [ %2803, %2800 ]
  %2809 = sub i32 %2795, %2805
  %2810 = tail call i32 @llvm.smin.i32(i32 %2809, i32 0)
  %2811 = sub i32 %2809, %2810
  %2812 = zext i32 %2811 to i64
  %2813 = add nuw nsw i64 %2812, 1
  %2814 = add nsw i64 %2806, -1
  %2815 = icmp ult i32 %2811, 31
  br i1 %2815, label %2851, label %2816

2816:                                             ; preds = %2804
  %2817 = and i64 %2813, 8589934560
  %2818 = sub i64 %2807, %2817
  br label %2819

2819:                                             ; preds = %2819, %2816
  %2820 = phi i64 [ 0, %2816 ], [ %2843, %2819 ]
  %2821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2839, %2819 ]
  %2822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2840, %2819 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2841, %2819 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2816 ], [ %2842, %2819 ]
  %2825 = sub i64 %2807, %2820
  %2826 = getelementptr inbounds i32, ptr %9, i64 %2825
  %2827 = getelementptr inbounds i32, ptr %2826, i64 -7
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2826, i64 -15
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2826, i64 -23
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !5
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2826, i64 -31
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = mul <8 x i32> %2829, %2821
  %2840 = mul <8 x i32> %2832, %2822
  %2841 = mul <8 x i32> %2835, %2823
  %2842 = mul <8 x i32> %2838, %2824
  %2843 = add nuw i64 %2820, 32
  %2844 = icmp eq i64 %2843, %2817
  br i1 %2844, label %2845, label %2819, !llvm.loop !1394

2845:                                             ; preds = %2819
  %2846 = mul <8 x i32> %2840, %2839
  %2847 = mul <8 x i32> %2841, %2846
  %2848 = mul <8 x i32> %2842, %2847
  %2849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2848)
  %2850 = icmp eq i64 %2813, %2817
  br i1 %2850, label %2863, label %2851

2851:                                             ; preds = %2804, %2845
  %2852 = phi i64 [ %2807, %2804 ], [ %2818, %2845 ]
  %2853 = phi i32 [ 1, %2804 ], [ %2849, %2845 ]
  br label %2854

2854:                                             ; preds = %2851, %2854
  %2855 = phi i64 [ %2860, %2854 ], [ %2852, %2851 ]
  %2856 = phi i32 [ %2859, %2854 ], [ %2853, %2851 ]
  %2857 = getelementptr inbounds i32, ptr %9, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = mul nsw i32 %2858, %2856
  %2860 = add nsw i64 %2855, -1
  %2861 = trunc i64 %2855 to i32
  %2862 = icmp sgt i32 %2861, 0
  br i1 %2862, label %2854, label %2863, !llvm.loop !1395

2863:                                             ; preds = %2854, %2845
  %2864 = phi i32 [ %2849, %2845 ], [ %2859, %2854 ]
  %2865 = and i64 %2814, 4294967295
  %2866 = getelementptr inbounds i32, ptr %6, i64 %2865
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = mul nsw i32 %2867, %2864
  %2869 = add nsw i32 %2868, %2808
  %2870 = icmp sgt i64 %2806, 2
  %2871 = add nsw i64 %2807, -1
  %2872 = add i32 %2805, 1
  br i1 %2870, label %2804, label %2873, !llvm.loop !1396

2873:                                             ; preds = %2863, %2800
  %2874 = phi i32 [ %2803, %2800 ], [ %2869, %2863 ]
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds double, ptr %2463, i64 %2875
  %2877 = load double, ptr %2876, align 8, !tbaa !18
  %2878 = fptosi double %2877 to i32
  %2879 = load i32, ptr %2465, align 4, !tbaa !5
  %2880 = tail call i32 @llvm.abs.i32(i32 %2878, i1 true)
  %2881 = add nsw i32 %2880, %2879
  store i32 %2881, ptr %2465, align 4, !tbaa !5
  %2882 = fadd fast double %2802, 1.000000e+00
  %2883 = add nuw nsw i32 %2801, 1
  br i1 %2794, label %2884, label %2931

2884:                                             ; preds = %2873
  %2885 = load i32, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %12, align 4, !tbaa !5
  %2887 = add nsw i32 %2886, -1
  %2888 = icmp slt i32 %2885, %2887
  br i1 %2888, label %2908, label %2889

2889:                                             ; preds = %2884
  %2890 = icmp eq i32 %2885, %2887
  br i1 %2890, label %2891, label %2924

2891:                                             ; preds = %2889
  store i32 0, ptr %4, align 4, !tbaa !5
  %2892 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2892, ptr %6, align 4, !tbaa !5
  br i1 %2799, label %2931, label %2893

2893:                                             ; preds = %2891, %2918
  %2894 = phi i64 [ %2922, %2918 ], [ 1, %2891 ]
  %2895 = getelementptr inbounds i32, ptr %4, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = getelementptr inbounds i32, ptr %12, i64 %2894
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2896, %2899
  br i1 %2900, label %2901, label %2916

2901:                                             ; preds = %2893
  br i1 %2888, label %2908, label %2902

2902:                                             ; preds = %2901
  %2903 = getelementptr inbounds i32, ptr %7, i64 %2894
  %2904 = load i32, ptr %2903, align 4, !tbaa !5
  %2905 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2906 = load i32, ptr %2905, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2904
  store i32 %2907, ptr %2905, align 4, !tbaa !5
  br label %2926

2908:                                             ; preds = %2884, %2901
  %2909 = phi i32 [ %2896, %2901 ], [ %2885, %2884 ]
  %2910 = phi ptr [ %2895, %2901 ], [ %4, %2884 ]
  %2911 = phi i64 [ %2894, %2901 ], [ 0, %2884 ]
  %2912 = add nsw i32 %2909, 1
  store i32 %2912, ptr %2910, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %7, i64 %2911
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2911
  br label %2926

2916:                                             ; preds = %2893
  %2917 = icmp eq i32 %2896, %2899
  br i1 %2917, label %2918, label %2924

2918:                                             ; preds = %2916
  store i32 0, ptr %2895, align 4, !tbaa !5
  %2919 = getelementptr inbounds i32, ptr %8, i64 %2894
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = getelementptr inbounds i32, ptr %6, i64 %2894
  store i32 %2920, ptr %2921, align 4, !tbaa !5
  %2922 = add nuw nsw i64 %2894, 1
  %2923 = icmp eq i64 %2922, %2797
  br i1 %2923, label %2931, label %2893, !llvm.loop !1397

2924:                                             ; preds = %2889, %2916
  %2925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

2926:                                             ; preds = %2902, %2908
  %2927 = phi ptr [ %2915, %2908 ], [ %2895, %2902 ]
  %2928 = phi i32 [ %2914, %2908 ], [ 1, %2902 ]
  %2929 = load i32, ptr %2927, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, %2928
  store i32 %2930, ptr %2927, align 4, !tbaa !5
  br label %2931

2931:                                             ; preds = %2918, %2926, %2891, %2873
  %2932 = icmp eq i32 %2883, %5
  br i1 %2932, label %5501, label %2800, !llvm.loop !1398

2933:                                             ; preds = %2783, %3069
  %2934 = phi i32 [ 0, %2783 ], [ %3018, %3069 ]
  %2935 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %2936, label %3005

2936:                                             ; preds = %2933, %2995
  %2937 = phi i32 [ %3004, %2995 ], [ 0, %2933 ]
  %2938 = phi i64 [ %2946, %2995 ], [ %2788, %2933 ]
  %2939 = phi i64 [ %3003, %2995 ], [ %2787, %2933 ]
  %2940 = phi i32 [ %3001, %2995 ], [ %2935, %2933 ]
  %2941 = sub i32 %2786, %2937
  %2942 = tail call i32 @llvm.smin.i32(i32 %2941, i32 0)
  %2943 = sub i32 %2941, %2942
  %2944 = zext i32 %2943 to i64
  %2945 = add nuw nsw i64 %2944, 1
  %2946 = add nsw i64 %2938, -1
  %2947 = icmp ult i32 %2943, 31
  br i1 %2947, label %2983, label %2948

2948:                                             ; preds = %2936
  %2949 = and i64 %2945, 8589934560
  %2950 = sub i64 %2939, %2949
  br label %2951

2951:                                             ; preds = %2951, %2948
  %2952 = phi i64 [ 0, %2948 ], [ %2975, %2951 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2971, %2951 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2972, %2951 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2973, %2951 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2948 ], [ %2974, %2951 ]
  %2957 = sub i64 %2939, %2952
  %2958 = getelementptr inbounds i32, ptr %11, i64 %2957
  %2959 = getelementptr inbounds i32, ptr %2958, i64 -7
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2958, i64 -15
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2958, i64 -23
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !5
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = getelementptr inbounds i32, ptr %2958, i64 -31
  %2969 = load <8 x i32>, ptr %2968, align 4, !tbaa !5
  %2970 = shufflevector <8 x i32> %2969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2971 = mul <8 x i32> %2961, %2953
  %2972 = mul <8 x i32> %2964, %2954
  %2973 = mul <8 x i32> %2967, %2955
  %2974 = mul <8 x i32> %2970, %2956
  %2975 = add nuw i64 %2952, 32
  %2976 = icmp eq i64 %2975, %2949
  br i1 %2976, label %2977, label %2951, !llvm.loop !1399

2977:                                             ; preds = %2951
  %2978 = mul <8 x i32> %2972, %2971
  %2979 = mul <8 x i32> %2973, %2978
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2980)
  %2982 = icmp eq i64 %2945, %2949
  br i1 %2982, label %2995, label %2983

2983:                                             ; preds = %2936, %2977
  %2984 = phi i64 [ %2939, %2936 ], [ %2950, %2977 ]
  %2985 = phi i32 [ 1, %2936 ], [ %2981, %2977 ]
  br label %2986

2986:                                             ; preds = %2983, %2986
  %2987 = phi i64 [ %2992, %2986 ], [ %2984, %2983 ]
  %2988 = phi i32 [ %2991, %2986 ], [ %2985, %2983 ]
  %2989 = getelementptr inbounds i32, ptr %11, i64 %2987
  %2990 = load i32, ptr %2989, align 4, !tbaa !5
  %2991 = mul nsw i32 %2990, %2988
  %2992 = add nsw i64 %2987, -1
  %2993 = trunc i64 %2987 to i32
  %2994 = icmp sgt i32 %2993, 0
  br i1 %2994, label %2986, label %2995, !llvm.loop !1400

2995:                                             ; preds = %2986, %2977
  %2996 = phi i32 [ %2981, %2977 ], [ %2991, %2986 ]
  %2997 = and i64 %2946, 4294967295
  %2998 = getelementptr inbounds i32, ptr %6, i64 %2997
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = mul nsw i32 %2999, %2996
  %3001 = add nsw i32 %3000, %2940
  %3002 = icmp sgt i64 %2938, 2
  %3003 = add nsw i64 %2939, -1
  %3004 = add i32 %2937, 1
  br i1 %3002, label %2936, label %3005, !llvm.loop !1401

3005:                                             ; preds = %2995, %2933
  %3006 = phi i32 [ %2935, %2933 ], [ %3001, %2995 ]
  %3007 = icmp slt i32 %3006, %5
  br i1 %3007, label %3010, label %3008

3008:                                             ; preds = %3005
  %3009 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3010:                                             ; preds = %3005
  %3011 = sext i32 %3006 to i64
  %3012 = getelementptr inbounds double, ptr %2463, i64 %3011
  %3013 = load double, ptr %3012, align 8, !tbaa !18
  %3014 = fptosi double %3013 to i32
  %3015 = load i32, ptr %2465, align 4, !tbaa !5
  %3016 = tail call i32 @llvm.abs.i32(i32 %3014, i1 true)
  %3017 = add nsw i32 %3016, %3015
  store i32 %3017, ptr %2465, align 4, !tbaa !5
  %3018 = add nuw nsw i32 %2934, 1
  br i1 %2785, label %3019, label %3069

3019:                                             ; preds = %3010
  %3020 = load i32, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %12, align 4, !tbaa !5
  %3022 = add nsw i32 %3021, -1
  %3023 = icmp slt i32 %3020, %3022
  br i1 %3023, label %3046, label %3024

3024:                                             ; preds = %3019
  %3025 = icmp eq i32 %3020, %3022
  br i1 %3025, label %3026, label %3062

3026:                                             ; preds = %3024
  store i32 0, ptr %4, align 4, !tbaa !5
  %3027 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3027, ptr %6, align 4, !tbaa !5
  br i1 %2790, label %3069, label %3028

3028:                                             ; preds = %3026, %3056
  %3029 = phi i64 [ %3060, %3056 ], [ 1, %3026 ]
  %3030 = getelementptr inbounds i32, ptr %4, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !5
  %3032 = getelementptr inbounds i32, ptr %12, i64 %3029
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3031, %3034
  br i1 %3035, label %3036, label %3054

3036:                                             ; preds = %3028
  br i1 %3023, label %3046, label %3037

3037:                                             ; preds = %3036
  %3038 = shl i64 %3029, 32
  %3039 = add i64 %3038, -4294967296
  %3040 = ashr exact i64 %3039, 32
  %3041 = getelementptr inbounds i32, ptr %7, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = add nsw i32 %3044, %3042
  store i32 %3045, ptr %3043, align 4, !tbaa !5
  br label %3064

3046:                                             ; preds = %3019, %3036
  %3047 = phi i32 [ %3031, %3036 ], [ %3020, %3019 ]
  %3048 = phi ptr [ %3030, %3036 ], [ %4, %3019 ]
  %3049 = phi i64 [ %3029, %3036 ], [ 0, %3019 ]
  %3050 = add nsw i32 %3047, 1
  store i32 %3050, ptr %3048, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3049
  br label %3064

3054:                                             ; preds = %3028
  %3055 = icmp eq i32 %3031, %3034
  br i1 %3055, label %3056, label %3062

3056:                                             ; preds = %3054
  store i32 0, ptr %3030, align 4, !tbaa !5
  %3057 = getelementptr inbounds i32, ptr %8, i64 %3029
  %3058 = load i32, ptr %3057, align 4, !tbaa !5
  %3059 = getelementptr inbounds i32, ptr %6, i64 %3029
  store i32 %3058, ptr %3059, align 4, !tbaa !5
  %3060 = add nuw nsw i64 %3029, 1
  %3061 = icmp eq i64 %3060, %2788
  br i1 %3061, label %3069, label %3028, !llvm.loop !1402

3062:                                             ; preds = %3024, %3054
  %3063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3064:                                             ; preds = %3037, %3046
  %3065 = phi ptr [ %3053, %3046 ], [ %3030, %3037 ]
  %3066 = phi i32 [ %3052, %3046 ], [ 1, %3037 ]
  %3067 = load i32, ptr %3065, align 4, !tbaa !5
  %3068 = add nsw i32 %3067, %3066
  store i32 %3068, ptr %3065, align 4, !tbaa !5
  br label %3069

3069:                                             ; preds = %3056, %3064, %3026, %3010
  %3070 = icmp eq i32 %3018, %5
  br i1 %3070, label %5501, label %2933, !llvm.loop !1403

3071:                                             ; preds = %2471
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

3073:                                             ; preds = %18
  %3074 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !9
  %3076 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3077 = load ptr, ptr %3076, align 8, !tbaa !9
  store i64 0, ptr %3077, align 8, !tbaa !120
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %3079, label %3083

3079:                                             ; preds = %3073
  %3080 = load double, ptr %3075, align 8, !tbaa !18
  %3081 = fptosi double %3080 to i64
  %3082 = tail call i64 @llvm.abs.i64(i64 %3081, i1 true)
  store i64 %3082, ptr %3077, align 8, !tbaa !120
  br label %5501

3083:                                             ; preds = %3073
  switch i32 %1, label %3683 [
    i32 1, label %3084
    i32 0, label %3389
  ]

3084:                                             ; preds = %3083
  %3085 = getelementptr inbounds i32, ptr %3, i64 %19
  %3086 = load i32, ptr %3085, align 4, !tbaa !5
  %3087 = icmp eq i32 %3086, 0
  %3088 = icmp sgt i32 %5, 0
  br i1 %3087, label %3098, label %3089

3089:                                             ; preds = %3084
  br i1 %3088, label %3090, label %5501

3090:                                             ; preds = %3089
  %3091 = icmp sgt i32 %13, 1
  %3092 = icmp sgt i32 %13, 0
  %3093 = add i32 %13, -2
  %3094 = zext i32 %3093 to i64
  %3095 = zext i32 %13 to i64
  %3096 = add nuw i32 %5, 1
  %3097 = icmp eq i32 %13, 1
  br label %3246

3098:                                             ; preds = %3084
  br i1 %3088, label %3099, label %5501

3099:                                             ; preds = %3098
  %3100 = icmp sgt i32 %13, 1
  %3101 = icmp sgt i32 %13, 0
  %3102 = add i32 %13, -2
  %3103 = zext i32 %3102 to i64
  %3104 = zext i32 %13 to i64
  %3105 = add nuw i32 %5, 1
  %3106 = icmp eq i32 %13, 1
  br label %3107

3107:                                             ; preds = %3099, %3244
  %3108 = phi i64 [ 0, %3099 ], [ %3194, %3244 ]
  %3109 = phi i32 [ 0, %3099 ], [ %3196, %3244 ]
  %3110 = phi double [ 0.000000e+00, %3099 ], [ %3195, %3244 ]
  %3111 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3112, label %3181

3112:                                             ; preds = %3107, %3171
  %3113 = phi i32 [ %3180, %3171 ], [ 0, %3107 ]
  %3114 = phi i64 [ %3122, %3171 ], [ %3104, %3107 ]
  %3115 = phi i64 [ %3179, %3171 ], [ %3103, %3107 ]
  %3116 = phi i32 [ %3177, %3171 ], [ %3111, %3107 ]
  %3117 = sub i32 %3102, %3113
  %3118 = tail call i32 @llvm.smin.i32(i32 %3117, i32 0)
  %3119 = sub i32 %3117, %3118
  %3120 = zext i32 %3119 to i64
  %3121 = add nuw nsw i64 %3120, 1
  %3122 = add nsw i64 %3114, -1
  %3123 = icmp ult i32 %3119, 31
  br i1 %3123, label %3159, label %3124

3124:                                             ; preds = %3112
  %3125 = and i64 %3121, 8589934560
  %3126 = sub i64 %3115, %3125
  br label %3127

3127:                                             ; preds = %3127, %3124
  %3128 = phi i64 [ 0, %3124 ], [ %3151, %3127 ]
  %3129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3147, %3127 ]
  %3130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3148, %3127 ]
  %3131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3149, %3127 ]
  %3132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3124 ], [ %3150, %3127 ]
  %3133 = sub i64 %3115, %3128
  %3134 = getelementptr inbounds i32, ptr %9, i64 %3133
  %3135 = getelementptr inbounds i32, ptr %3134, i64 -7
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3134, i64 -15
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = getelementptr inbounds i32, ptr %3134, i64 -23
  %3142 = load <8 x i32>, ptr %3141, align 4, !tbaa !5
  %3143 = shufflevector <8 x i32> %3142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3144 = getelementptr inbounds i32, ptr %3134, i64 -31
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !5
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = mul <8 x i32> %3137, %3129
  %3148 = mul <8 x i32> %3140, %3130
  %3149 = mul <8 x i32> %3143, %3131
  %3150 = mul <8 x i32> %3146, %3132
  %3151 = add nuw i64 %3128, 32
  %3152 = icmp eq i64 %3151, %3125
  br i1 %3152, label %3153, label %3127, !llvm.loop !1404

3153:                                             ; preds = %3127
  %3154 = mul <8 x i32> %3148, %3147
  %3155 = mul <8 x i32> %3149, %3154
  %3156 = mul <8 x i32> %3150, %3155
  %3157 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3156)
  %3158 = icmp eq i64 %3121, %3125
  br i1 %3158, label %3171, label %3159

3159:                                             ; preds = %3112, %3153
  %3160 = phi i64 [ %3115, %3112 ], [ %3126, %3153 ]
  %3161 = phi i32 [ 1, %3112 ], [ %3157, %3153 ]
  br label %3162

3162:                                             ; preds = %3159, %3162
  %3163 = phi i64 [ %3168, %3162 ], [ %3160, %3159 ]
  %3164 = phi i32 [ %3167, %3162 ], [ %3161, %3159 ]
  %3165 = getelementptr inbounds i32, ptr %9, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = mul nsw i32 %3166, %3164
  %3168 = add nsw i64 %3163, -1
  %3169 = trunc i64 %3163 to i32
  %3170 = icmp sgt i32 %3169, 0
  br i1 %3170, label %3162, label %3171, !llvm.loop !1405

3171:                                             ; preds = %3162, %3153
  %3172 = phi i32 [ %3157, %3153 ], [ %3167, %3162 ]
  %3173 = and i64 %3122, 4294967295
  %3174 = getelementptr inbounds i32, ptr %6, i64 %3173
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = mul nsw i32 %3175, %3172
  %3177 = add nsw i32 %3176, %3116
  %3178 = icmp sgt i64 %3114, 2
  %3179 = add nsw i64 %3115, -1
  %3180 = add i32 %3113, 1
  br i1 %3178, label %3112, label %3181, !llvm.loop !1406

3181:                                             ; preds = %3171, %3107
  %3182 = phi i32 [ %3111, %3107 ], [ %3177, %3171 ]
  %3183 = sext i32 %3182 to i64
  %3184 = getelementptr inbounds double, ptr %2, i64 %3183
  %3185 = load double, ptr %3184, align 8, !tbaa !18
  %3186 = getelementptr inbounds double, ptr %3075, i64 %3183
  %3187 = load double, ptr %3186, align 8, !tbaa !18
  %3188 = fptosi double %3187 to i64
  %3189 = sitofp i64 %3108 to double
  %3190 = sitofp i64 %3188 to double
  %3191 = fmul fast double %3185, %3190
  %3192 = tail call fast double @llvm.fabs.f64(double %3191)
  %3193 = fadd fast double %3192, %3189
  %3194 = fptosi double %3193 to i64
  %3195 = fadd fast double %3185, %3110
  %3196 = add nuw nsw i32 %3109, 1
  br i1 %3101, label %3197, label %3244

3197:                                             ; preds = %3181
  %3198 = load i32, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %12, align 4, !tbaa !5
  %3200 = add nsw i32 %3199, -1
  %3201 = icmp slt i32 %3198, %3200
  br i1 %3201, label %3221, label %3202

3202:                                             ; preds = %3197
  %3203 = icmp eq i32 %3198, %3200
  br i1 %3203, label %3204, label %3237

3204:                                             ; preds = %3202
  store i32 0, ptr %4, align 4, !tbaa !5
  %3205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3205, ptr %6, align 4, !tbaa !5
  br i1 %3106, label %3244, label %3206

3206:                                             ; preds = %3204, %3231
  %3207 = phi i64 [ %3235, %3231 ], [ 1, %3204 ]
  %3208 = getelementptr inbounds i32, ptr %4, i64 %3207
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %12, i64 %3207
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, -1
  %3213 = icmp slt i32 %3209, %3212
  br i1 %3213, label %3214, label %3229

3214:                                             ; preds = %3206
  br i1 %3201, label %3221, label %3215

3215:                                             ; preds = %3214
  %3216 = getelementptr inbounds i32, ptr %7, i64 %3207
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %6, i64 %3207
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, %3217
  store i32 %3220, ptr %3218, align 4, !tbaa !5
  br label %3239

3221:                                             ; preds = %3197, %3214
  %3222 = phi i32 [ %3209, %3214 ], [ %3198, %3197 ]
  %3223 = phi ptr [ %3208, %3214 ], [ %4, %3197 ]
  %3224 = phi i64 [ %3207, %3214 ], [ 0, %3197 ]
  %3225 = add nsw i32 %3222, 1
  store i32 %3225, ptr %3223, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %7, i64 %3224
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3224
  br label %3239

3229:                                             ; preds = %3206
  %3230 = icmp eq i32 %3209, %3212
  br i1 %3230, label %3231, label %3237

3231:                                             ; preds = %3229
  store i32 0, ptr %3208, align 4, !tbaa !5
  %3232 = getelementptr inbounds i32, ptr %8, i64 %3207
  %3233 = load i32, ptr %3232, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %6, i64 %3207
  store i32 %3233, ptr %3234, align 4, !tbaa !5
  %3235 = add nuw nsw i64 %3207, 1
  %3236 = icmp eq i64 %3235, %3104
  br i1 %3236, label %3244, label %3206, !llvm.loop !1407

3237:                                             ; preds = %3202, %3229
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  %3238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3239:                                             ; preds = %3215, %3221
  %3240 = phi ptr [ %3228, %3221 ], [ %3208, %3215 ]
  %3241 = phi i32 [ %3227, %3221 ], [ 1, %3215 ]
  %3242 = load i32, ptr %3240, align 4, !tbaa !5
  %3243 = add nsw i32 %3242, %3241
  store i32 %3243, ptr %3240, align 4, !tbaa !5
  br label %3244

3244:                                             ; preds = %3231, %3239, %3204, %3181
  %3245 = icmp eq i32 %3196, %5
  br i1 %3245, label %5497, label %3107, !llvm.loop !1408

3246:                                             ; preds = %3090, %3387
  %3247 = phi i64 [ 0, %3090 ], [ %3335, %3387 ]
  %3248 = phi i32 [ 0, %3090 ], [ %3336, %3387 ]
  %3249 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3250, label %3319

3250:                                             ; preds = %3246, %3309
  %3251 = phi i32 [ %3318, %3309 ], [ 0, %3246 ]
  %3252 = phi i64 [ %3260, %3309 ], [ %3095, %3246 ]
  %3253 = phi i64 [ %3317, %3309 ], [ %3094, %3246 ]
  %3254 = phi i32 [ %3315, %3309 ], [ %3249, %3246 ]
  %3255 = sub i32 %3093, %3251
  %3256 = tail call i32 @llvm.smin.i32(i32 %3255, i32 0)
  %3257 = sub i32 %3255, %3256
  %3258 = zext i32 %3257 to i64
  %3259 = add nuw nsw i64 %3258, 1
  %3260 = add nsw i64 %3252, -1
  %3261 = icmp ult i32 %3257, 31
  br i1 %3261, label %3297, label %3262

3262:                                             ; preds = %3250
  %3263 = and i64 %3259, 8589934560
  %3264 = sub i64 %3253, %3263
  br label %3265

3265:                                             ; preds = %3265, %3262
  %3266 = phi i64 [ 0, %3262 ], [ %3289, %3265 ]
  %3267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3285, %3265 ]
  %3268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3286, %3265 ]
  %3269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3287, %3265 ]
  %3270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3262 ], [ %3288, %3265 ]
  %3271 = sub i64 %3253, %3266
  %3272 = getelementptr inbounds i32, ptr %11, i64 %3271
  %3273 = getelementptr inbounds i32, ptr %3272, i64 -7
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3272, i64 -15
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = getelementptr inbounds i32, ptr %3272, i64 -23
  %3280 = load <8 x i32>, ptr %3279, align 4, !tbaa !5
  %3281 = shufflevector <8 x i32> %3280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3282 = getelementptr inbounds i32, ptr %3272, i64 -31
  %3283 = load <8 x i32>, ptr %3282, align 4, !tbaa !5
  %3284 = shufflevector <8 x i32> %3283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3285 = mul <8 x i32> %3275, %3267
  %3286 = mul <8 x i32> %3278, %3268
  %3287 = mul <8 x i32> %3281, %3269
  %3288 = mul <8 x i32> %3284, %3270
  %3289 = add nuw i64 %3266, 32
  %3290 = icmp eq i64 %3289, %3263
  br i1 %3290, label %3291, label %3265, !llvm.loop !1409

3291:                                             ; preds = %3265
  %3292 = mul <8 x i32> %3286, %3285
  %3293 = mul <8 x i32> %3287, %3292
  %3294 = mul <8 x i32> %3288, %3293
  %3295 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3294)
  %3296 = icmp eq i64 %3259, %3263
  br i1 %3296, label %3309, label %3297

3297:                                             ; preds = %3250, %3291
  %3298 = phi i64 [ %3253, %3250 ], [ %3264, %3291 ]
  %3299 = phi i32 [ 1, %3250 ], [ %3295, %3291 ]
  br label %3300

3300:                                             ; preds = %3297, %3300
  %3301 = phi i64 [ %3306, %3300 ], [ %3298, %3297 ]
  %3302 = phi i32 [ %3305, %3300 ], [ %3299, %3297 ]
  %3303 = getelementptr inbounds i32, ptr %11, i64 %3301
  %3304 = load i32, ptr %3303, align 4, !tbaa !5
  %3305 = mul nsw i32 %3304, %3302
  %3306 = add nsw i64 %3301, -1
  %3307 = trunc i64 %3301 to i32
  %3308 = icmp sgt i32 %3307, 0
  br i1 %3308, label %3300, label %3309, !llvm.loop !1410

3309:                                             ; preds = %3300, %3291
  %3310 = phi i32 [ %3295, %3291 ], [ %3305, %3300 ]
  %3311 = and i64 %3260, 4294967295
  %3312 = getelementptr inbounds i32, ptr %6, i64 %3311
  %3313 = load i32, ptr %3312, align 4, !tbaa !5
  %3314 = mul nsw i32 %3313, %3310
  %3315 = add nsw i32 %3314, %3254
  %3316 = icmp sgt i64 %3252, 2
  %3317 = add nsw i64 %3253, -1
  %3318 = add i32 %3251, 1
  br i1 %3316, label %3250, label %3319, !llvm.loop !1411

3319:                                             ; preds = %3309, %3246
  %3320 = phi i32 [ %3249, %3246 ], [ %3315, %3309 ]
  %3321 = icmp slt i32 %3320, %5
  br i1 %3321, label %3324, label %3322

3322:                                             ; preds = %3319
  %3323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3324:                                             ; preds = %3319
  %3325 = sext i32 %3320 to i64
  %3326 = getelementptr inbounds double, ptr %3075, i64 %3325
  %3327 = load double, ptr %3326, align 8, !tbaa !18
  %3328 = fptosi double %3327 to i64
  %3329 = sitofp i64 %3247 to double
  %3330 = sitofp i64 %3328 to double
  %3331 = icmp slt i64 %3328, 0
  %3332 = fneg fast double %3330
  %3333 = select fast i1 %3331, double %3332, double %3330
  %3334 = fadd fast double %3333, %3329
  %3335 = fptosi double %3334 to i64
  store i64 %3335, ptr %3077, align 8, !tbaa !120
  %3336 = add nuw nsw i32 %3248, 1
  br i1 %3092, label %3337, label %3387

3337:                                             ; preds = %3324
  %3338 = load i32, ptr %4, align 4, !tbaa !5
  %3339 = load i32, ptr %12, align 4, !tbaa !5
  %3340 = add nsw i32 %3339, -1
  %3341 = icmp slt i32 %3338, %3340
  br i1 %3341, label %3364, label %3342

3342:                                             ; preds = %3337
  %3343 = icmp eq i32 %3338, %3340
  br i1 %3343, label %3344, label %3380

3344:                                             ; preds = %3342
  store i32 0, ptr %4, align 4, !tbaa !5
  %3345 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3345, ptr %6, align 4, !tbaa !5
  br i1 %3097, label %3387, label %3346

3346:                                             ; preds = %3344, %3374
  %3347 = phi i64 [ %3378, %3374 ], [ 1, %3344 ]
  %3348 = getelementptr inbounds i32, ptr %4, i64 %3347
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = getelementptr inbounds i32, ptr %12, i64 %3347
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = add nsw i32 %3351, -1
  %3353 = icmp slt i32 %3349, %3352
  br i1 %3353, label %3354, label %3372

3354:                                             ; preds = %3346
  br i1 %3341, label %3364, label %3355

3355:                                             ; preds = %3354
  %3356 = shl i64 %3347, 32
  %3357 = add i64 %3356, -4294967296
  %3358 = ashr exact i64 %3357, 32
  %3359 = getelementptr inbounds i32, ptr %7, i64 %3358
  %3360 = load i32, ptr %3359, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3347
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = add nsw i32 %3362, %3360
  store i32 %3363, ptr %3361, align 4, !tbaa !5
  br label %3382

3364:                                             ; preds = %3337, %3354
  %3365 = phi i32 [ %3349, %3354 ], [ %3338, %3337 ]
  %3366 = phi ptr [ %3348, %3354 ], [ %4, %3337 ]
  %3367 = phi i64 [ %3347, %3354 ], [ 0, %3337 ]
  %3368 = add nsw i32 %3365, 1
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3367
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3367
  br label %3382

3372:                                             ; preds = %3346
  %3373 = icmp eq i32 %3349, %3352
  br i1 %3373, label %3374, label %3380

3374:                                             ; preds = %3372
  store i32 0, ptr %3348, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %8, i64 %3347
  %3376 = load i32, ptr %3375, align 4, !tbaa !5
  %3377 = getelementptr inbounds i32, ptr %6, i64 %3347
  store i32 %3376, ptr %3377, align 4, !tbaa !5
  %3378 = add nuw nsw i64 %3347, 1
  %3379 = icmp eq i64 %3378, %3095
  br i1 %3379, label %3387, label %3346, !llvm.loop !1412

3380:                                             ; preds = %3342, %3372
  %3381 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3382:                                             ; preds = %3355, %3364
  %3383 = phi ptr [ %3371, %3364 ], [ %3348, %3355 ]
  %3384 = phi i32 [ %3370, %3364 ], [ 1, %3355 ]
  %3385 = load i32, ptr %3383, align 4, !tbaa !5
  %3386 = add nsw i32 %3385, %3384
  store i32 %3386, ptr %3383, align 4, !tbaa !5
  br label %3387

3387:                                             ; preds = %3374, %3382, %3344, %3324
  %3388 = icmp eq i32 %3336, %5
  br i1 %3388, label %5501, label %3246, !llvm.loop !1413

3389:                                             ; preds = %3083
  %3390 = getelementptr inbounds i32, ptr %3, i64 %19
  %3391 = load i32, ptr %3390, align 4, !tbaa !5
  %3392 = icmp eq i32 %3391, 0
  %3393 = icmp sgt i32 %5, 0
  br i1 %3392, label %3403, label %3394

3394:                                             ; preds = %3389
  br i1 %3393, label %3395, label %5501

3395:                                             ; preds = %3394
  %3396 = icmp sgt i32 %13, 1
  %3397 = icmp sgt i32 %13, 0
  %3398 = add i32 %13, -2
  %3399 = zext i32 %3398 to i64
  %3400 = zext i32 %13 to i64
  %3401 = add nuw i32 %5, 1
  %3402 = icmp eq i32 %13, 1
  br label %3545

3403:                                             ; preds = %3389
  br i1 %3393, label %3404, label %5501

3404:                                             ; preds = %3403
  %3405 = icmp sgt i32 %13, 1
  %3406 = icmp sgt i32 %13, 0
  %3407 = add i32 %13, -2
  %3408 = zext i32 %3407 to i64
  %3409 = zext i32 %13 to i64
  %3410 = add nuw i32 %5, 1
  %3411 = icmp eq i32 %13, 1
  br label %3412

3412:                                             ; preds = %3404, %3543
  %3413 = phi i64 [ 0, %3404 ], [ %3493, %3543 ]
  %3414 = phi i32 [ 0, %3404 ], [ %3495, %3543 ]
  %3415 = phi double [ 0.000000e+00, %3404 ], [ %3494, %3543 ]
  %3416 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3405, label %3417, label %3486

3417:                                             ; preds = %3412, %3476
  %3418 = phi i32 [ %3485, %3476 ], [ 0, %3412 ]
  %3419 = phi i64 [ %3427, %3476 ], [ %3409, %3412 ]
  %3420 = phi i64 [ %3484, %3476 ], [ %3408, %3412 ]
  %3421 = phi i32 [ %3482, %3476 ], [ %3416, %3412 ]
  %3422 = sub i32 %3407, %3418
  %3423 = tail call i32 @llvm.smin.i32(i32 %3422, i32 0)
  %3424 = sub i32 %3422, %3423
  %3425 = zext i32 %3424 to i64
  %3426 = add nuw nsw i64 %3425, 1
  %3427 = add nsw i64 %3419, -1
  %3428 = icmp ult i32 %3424, 31
  br i1 %3428, label %3464, label %3429

3429:                                             ; preds = %3417
  %3430 = and i64 %3426, 8589934560
  %3431 = sub i64 %3420, %3430
  br label %3432

3432:                                             ; preds = %3432, %3429
  %3433 = phi i64 [ 0, %3429 ], [ %3456, %3432 ]
  %3434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3452, %3432 ]
  %3435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3453, %3432 ]
  %3436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3454, %3432 ]
  %3437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3429 ], [ %3455, %3432 ]
  %3438 = sub i64 %3420, %3433
  %3439 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3440 = getelementptr inbounds i32, ptr %3439, i64 -7
  %3441 = load <8 x i32>, ptr %3440, align 4, !tbaa !5
  %3442 = shufflevector <8 x i32> %3441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3443 = getelementptr inbounds i32, ptr %3439, i64 -15
  %3444 = load <8 x i32>, ptr %3443, align 4, !tbaa !5
  %3445 = shufflevector <8 x i32> %3444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3446 = getelementptr inbounds i32, ptr %3439, i64 -23
  %3447 = load <8 x i32>, ptr %3446, align 4, !tbaa !5
  %3448 = shufflevector <8 x i32> %3447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3449 = getelementptr inbounds i32, ptr %3439, i64 -31
  %3450 = load <8 x i32>, ptr %3449, align 4, !tbaa !5
  %3451 = shufflevector <8 x i32> %3450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3452 = mul <8 x i32> %3442, %3434
  %3453 = mul <8 x i32> %3445, %3435
  %3454 = mul <8 x i32> %3448, %3436
  %3455 = mul <8 x i32> %3451, %3437
  %3456 = add nuw i64 %3433, 32
  %3457 = icmp eq i64 %3456, %3430
  br i1 %3457, label %3458, label %3432, !llvm.loop !1414

3458:                                             ; preds = %3432
  %3459 = mul <8 x i32> %3453, %3452
  %3460 = mul <8 x i32> %3454, %3459
  %3461 = mul <8 x i32> %3455, %3460
  %3462 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3461)
  %3463 = icmp eq i64 %3426, %3430
  br i1 %3463, label %3476, label %3464

3464:                                             ; preds = %3417, %3458
  %3465 = phi i64 [ %3420, %3417 ], [ %3431, %3458 ]
  %3466 = phi i32 [ 1, %3417 ], [ %3462, %3458 ]
  br label %3467

3467:                                             ; preds = %3464, %3467
  %3468 = phi i64 [ %3473, %3467 ], [ %3465, %3464 ]
  %3469 = phi i32 [ %3472, %3467 ], [ %3466, %3464 ]
  %3470 = getelementptr inbounds i32, ptr %9, i64 %3468
  %3471 = load i32, ptr %3470, align 4, !tbaa !5
  %3472 = mul nsw i32 %3471, %3469
  %3473 = add nsw i64 %3468, -1
  %3474 = trunc i64 %3468 to i32
  %3475 = icmp sgt i32 %3474, 0
  br i1 %3475, label %3467, label %3476, !llvm.loop !1415

3476:                                             ; preds = %3467, %3458
  %3477 = phi i32 [ %3462, %3458 ], [ %3472, %3467 ]
  %3478 = and i64 %3427, 4294967295
  %3479 = getelementptr inbounds i32, ptr %6, i64 %3478
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = mul nsw i32 %3480, %3477
  %3482 = add nsw i32 %3481, %3421
  %3483 = icmp sgt i64 %3419, 2
  %3484 = add nsw i64 %3420, -1
  %3485 = add i32 %3418, 1
  br i1 %3483, label %3417, label %3486, !llvm.loop !1416

3486:                                             ; preds = %3476, %3412
  %3487 = phi i32 [ %3416, %3412 ], [ %3482, %3476 ]
  %3488 = sext i32 %3487 to i64
  %3489 = getelementptr inbounds double, ptr %3075, i64 %3488
  %3490 = load double, ptr %3489, align 8, !tbaa !18
  %3491 = fptosi double %3490 to i64
  %3492 = tail call i64 @llvm.abs.i64(i64 %3491, i1 true)
  %3493 = add nuw nsw i64 %3492, %3413
  %3494 = fadd fast double %3415, 1.000000e+00
  %3495 = add nuw nsw i32 %3414, 1
  br i1 %3406, label %3496, label %3543

3496:                                             ; preds = %3486
  %3497 = load i32, ptr %4, align 4, !tbaa !5
  %3498 = load i32, ptr %12, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, -1
  %3500 = icmp slt i32 %3497, %3499
  br i1 %3500, label %3520, label %3501

3501:                                             ; preds = %3496
  %3502 = icmp eq i32 %3497, %3499
  br i1 %3502, label %3503, label %3536

3503:                                             ; preds = %3501
  store i32 0, ptr %4, align 4, !tbaa !5
  %3504 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3504, ptr %6, align 4, !tbaa !5
  br i1 %3411, label %3543, label %3505

3505:                                             ; preds = %3503, %3530
  %3506 = phi i64 [ %3534, %3530 ], [ 1, %3503 ]
  %3507 = getelementptr inbounds i32, ptr %4, i64 %3506
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %12, i64 %3506
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, -1
  %3512 = icmp slt i32 %3508, %3511
  br i1 %3512, label %3513, label %3528

3513:                                             ; preds = %3505
  br i1 %3500, label %3520, label %3514

3514:                                             ; preds = %3513
  %3515 = getelementptr inbounds i32, ptr %7, i64 %3506
  %3516 = load i32, ptr %3515, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %6, i64 %3506
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = add nsw i32 %3518, %3516
  store i32 %3519, ptr %3517, align 4, !tbaa !5
  br label %3538

3520:                                             ; preds = %3496, %3513
  %3521 = phi i32 [ %3508, %3513 ], [ %3497, %3496 ]
  %3522 = phi ptr [ %3507, %3513 ], [ %4, %3496 ]
  %3523 = phi i64 [ %3506, %3513 ], [ 0, %3496 ]
  %3524 = add nsw i32 %3521, 1
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %7, i64 %3523
  %3526 = load i32, ptr %3525, align 4, !tbaa !5
  %3527 = getelementptr inbounds i32, ptr %6, i64 %3523
  br label %3538

3528:                                             ; preds = %3505
  %3529 = icmp eq i32 %3508, %3511
  br i1 %3529, label %3530, label %3536

3530:                                             ; preds = %3528
  store i32 0, ptr %3507, align 4, !tbaa !5
  %3531 = getelementptr inbounds i32, ptr %8, i64 %3506
  %3532 = load i32, ptr %3531, align 4, !tbaa !5
  %3533 = getelementptr inbounds i32, ptr %6, i64 %3506
  store i32 %3532, ptr %3533, align 4, !tbaa !5
  %3534 = add nuw nsw i64 %3506, 1
  %3535 = icmp eq i64 %3534, %3409
  br i1 %3535, label %3543, label %3505, !llvm.loop !1417

3536:                                             ; preds = %3501, %3528
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  %3537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3538:                                             ; preds = %3514, %3520
  %3539 = phi ptr [ %3527, %3520 ], [ %3507, %3514 ]
  %3540 = phi i32 [ %3526, %3520 ], [ 1, %3514 ]
  %3541 = load i32, ptr %3539, align 4, !tbaa !5
  %3542 = add nsw i32 %3541, %3540
  store i32 %3542, ptr %3539, align 4, !tbaa !5
  br label %3543

3543:                                             ; preds = %3530, %3538, %3503, %3486
  %3544 = icmp eq i32 %3495, %5
  br i1 %3544, label %5498, label %3412, !llvm.loop !1418

3545:                                             ; preds = %3395, %3681
  %3546 = phi i64 [ 0, %3395 ], [ %3629, %3681 ]
  %3547 = phi i32 [ 0, %3395 ], [ %3630, %3681 ]
  %3548 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3396, label %3549, label %3618

3549:                                             ; preds = %3545, %3608
  %3550 = phi i32 [ %3617, %3608 ], [ 0, %3545 ]
  %3551 = phi i64 [ %3559, %3608 ], [ %3400, %3545 ]
  %3552 = phi i64 [ %3616, %3608 ], [ %3399, %3545 ]
  %3553 = phi i32 [ %3614, %3608 ], [ %3548, %3545 ]
  %3554 = sub i32 %3398, %3550
  %3555 = tail call i32 @llvm.smin.i32(i32 %3554, i32 0)
  %3556 = sub i32 %3554, %3555
  %3557 = zext i32 %3556 to i64
  %3558 = add nuw nsw i64 %3557, 1
  %3559 = add nsw i64 %3551, -1
  %3560 = icmp ult i32 %3556, 31
  br i1 %3560, label %3596, label %3561

3561:                                             ; preds = %3549
  %3562 = and i64 %3558, 8589934560
  %3563 = sub i64 %3552, %3562
  br label %3564

3564:                                             ; preds = %3564, %3561
  %3565 = phi i64 [ 0, %3561 ], [ %3588, %3564 ]
  %3566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3584, %3564 ]
  %3567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3585, %3564 ]
  %3568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3586, %3564 ]
  %3569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3561 ], [ %3587, %3564 ]
  %3570 = sub i64 %3552, %3565
  %3571 = getelementptr inbounds i32, ptr %11, i64 %3570
  %3572 = getelementptr inbounds i32, ptr %3571, i64 -7
  %3573 = load <8 x i32>, ptr %3572, align 4, !tbaa !5
  %3574 = shufflevector <8 x i32> %3573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3575 = getelementptr inbounds i32, ptr %3571, i64 -15
  %3576 = load <8 x i32>, ptr %3575, align 4, !tbaa !5
  %3577 = shufflevector <8 x i32> %3576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3578 = getelementptr inbounds i32, ptr %3571, i64 -23
  %3579 = load <8 x i32>, ptr %3578, align 4, !tbaa !5
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3581 = getelementptr inbounds i32, ptr %3571, i64 -31
  %3582 = load <8 x i32>, ptr %3581, align 4, !tbaa !5
  %3583 = shufflevector <8 x i32> %3582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3584 = mul <8 x i32> %3574, %3566
  %3585 = mul <8 x i32> %3577, %3567
  %3586 = mul <8 x i32> %3580, %3568
  %3587 = mul <8 x i32> %3583, %3569
  %3588 = add nuw i64 %3565, 32
  %3589 = icmp eq i64 %3588, %3562
  br i1 %3589, label %3590, label %3564, !llvm.loop !1419

3590:                                             ; preds = %3564
  %3591 = mul <8 x i32> %3585, %3584
  %3592 = mul <8 x i32> %3586, %3591
  %3593 = mul <8 x i32> %3587, %3592
  %3594 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3593)
  %3595 = icmp eq i64 %3558, %3562
  br i1 %3595, label %3608, label %3596

3596:                                             ; preds = %3549, %3590
  %3597 = phi i64 [ %3552, %3549 ], [ %3563, %3590 ]
  %3598 = phi i32 [ 1, %3549 ], [ %3594, %3590 ]
  br label %3599

3599:                                             ; preds = %3596, %3599
  %3600 = phi i64 [ %3605, %3599 ], [ %3597, %3596 ]
  %3601 = phi i32 [ %3604, %3599 ], [ %3598, %3596 ]
  %3602 = getelementptr inbounds i32, ptr %11, i64 %3600
  %3603 = load i32, ptr %3602, align 4, !tbaa !5
  %3604 = mul nsw i32 %3603, %3601
  %3605 = add nsw i64 %3600, -1
  %3606 = trunc i64 %3600 to i32
  %3607 = icmp sgt i32 %3606, 0
  br i1 %3607, label %3599, label %3608, !llvm.loop !1420

3608:                                             ; preds = %3599, %3590
  %3609 = phi i32 [ %3594, %3590 ], [ %3604, %3599 ]
  %3610 = and i64 %3559, 4294967295
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3610
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = mul nsw i32 %3612, %3609
  %3614 = add nsw i32 %3613, %3553
  %3615 = icmp sgt i64 %3551, 2
  %3616 = add nsw i64 %3552, -1
  %3617 = add i32 %3550, 1
  br i1 %3615, label %3549, label %3618, !llvm.loop !1421

3618:                                             ; preds = %3608, %3545
  %3619 = phi i32 [ %3548, %3545 ], [ %3614, %3608 ]
  %3620 = icmp slt i32 %3619, %5
  br i1 %3620, label %3623, label %3621

3621:                                             ; preds = %3618
  %3622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3623:                                             ; preds = %3618
  %3624 = sext i32 %3619 to i64
  %3625 = getelementptr inbounds double, ptr %3075, i64 %3624
  %3626 = load double, ptr %3625, align 8, !tbaa !18
  %3627 = fptosi double %3626 to i64
  %3628 = tail call i64 @llvm.abs.i64(i64 %3627, i1 true)
  %3629 = add nuw nsw i64 %3628, %3546
  store i64 %3629, ptr %3077, align 8, !tbaa !120
  %3630 = add nuw nsw i32 %3547, 1
  br i1 %3397, label %3631, label %3681

3631:                                             ; preds = %3623
  %3632 = load i32, ptr %4, align 4, !tbaa !5
  %3633 = load i32, ptr %12, align 4, !tbaa !5
  %3634 = add nsw i32 %3633, -1
  %3635 = icmp slt i32 %3632, %3634
  br i1 %3635, label %3658, label %3636

3636:                                             ; preds = %3631
  %3637 = icmp eq i32 %3632, %3634
  br i1 %3637, label %3638, label %3674

3638:                                             ; preds = %3636
  store i32 0, ptr %4, align 4, !tbaa !5
  %3639 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3639, ptr %6, align 4, !tbaa !5
  br i1 %3402, label %3681, label %3640

3640:                                             ; preds = %3638, %3668
  %3641 = phi i64 [ %3672, %3668 ], [ 1, %3638 ]
  %3642 = getelementptr inbounds i32, ptr %4, i64 %3641
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %12, i64 %3641
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = add nsw i32 %3645, -1
  %3647 = icmp slt i32 %3643, %3646
  br i1 %3647, label %3648, label %3666

3648:                                             ; preds = %3640
  br i1 %3635, label %3658, label %3649

3649:                                             ; preds = %3648
  %3650 = shl i64 %3641, 32
  %3651 = add i64 %3650, -4294967296
  %3652 = ashr exact i64 %3651, 32
  %3653 = getelementptr inbounds i32, ptr %7, i64 %3652
  %3654 = load i32, ptr %3653, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %6, i64 %3641
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = add nsw i32 %3656, %3654
  store i32 %3657, ptr %3655, align 4, !tbaa !5
  br label %3676

3658:                                             ; preds = %3631, %3648
  %3659 = phi i32 [ %3643, %3648 ], [ %3632, %3631 ]
  %3660 = phi ptr [ %3642, %3648 ], [ %4, %3631 ]
  %3661 = phi i64 [ %3641, %3648 ], [ 0, %3631 ]
  %3662 = add nsw i32 %3659, 1
  store i32 %3662, ptr %3660, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %7, i64 %3661
  %3664 = load i32, ptr %3663, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %6, i64 %3661
  br label %3676

3666:                                             ; preds = %3640
  %3667 = icmp eq i32 %3643, %3646
  br i1 %3667, label %3668, label %3674

3668:                                             ; preds = %3666
  store i32 0, ptr %3642, align 4, !tbaa !5
  %3669 = getelementptr inbounds i32, ptr %8, i64 %3641
  %3670 = load i32, ptr %3669, align 4, !tbaa !5
  %3671 = getelementptr inbounds i32, ptr %6, i64 %3641
  store i32 %3670, ptr %3671, align 4, !tbaa !5
  %3672 = add nuw nsw i64 %3641, 1
  %3673 = icmp eq i64 %3672, %3400
  br i1 %3673, label %3681, label %3640, !llvm.loop !1422

3674:                                             ; preds = %3636, %3666
  %3675 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3676:                                             ; preds = %3649, %3658
  %3677 = phi ptr [ %3665, %3658 ], [ %3642, %3649 ]
  %3678 = phi i32 [ %3664, %3658 ], [ 1, %3649 ]
  %3679 = load i32, ptr %3677, align 4, !tbaa !5
  %3680 = add nsw i32 %3679, %3678
  store i32 %3680, ptr %3677, align 4, !tbaa !5
  br label %3681

3681:                                             ; preds = %3668, %3676, %3638, %3623
  %3682 = icmp eq i32 %3630, %5
  br i1 %3682, label %5501, label %3545, !llvm.loop !1423

3683:                                             ; preds = %3083
  %3684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

3685:                                             ; preds = %18
  %3686 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3687 = load ptr, ptr %3686, align 8, !tbaa !9
  %3688 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3689 = load ptr, ptr %3688, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3689, align 8, !tbaa !18
  %3690 = icmp eq i32 %13, 0
  br i1 %3690, label %3691, label %3694

3691:                                             ; preds = %3685
  %3692 = load double, ptr %3687, align 8, !tbaa !18
  %3693 = tail call fast double @llvm.fabs.f64(double %3692)
  store double %3693, ptr %3689, align 8, !tbaa !18
  br label %5501

3694:                                             ; preds = %3685
  switch i32 %1, label %4282 [
    i32 1, label %3695
    i32 0, label %3990
  ]

3695:                                             ; preds = %3694
  %3696 = getelementptr inbounds i32, ptr %3, i64 %19
  %3697 = load i32, ptr %3696, align 4, !tbaa !5
  %3698 = icmp eq i32 %3697, 0
  %3699 = icmp sgt i32 %5, 0
  br i1 %3698, label %3709, label %3700

3700:                                             ; preds = %3695
  br i1 %3699, label %3701, label %5501

3701:                                             ; preds = %3700
  %3702 = icmp sgt i32 %13, 1
  %3703 = icmp sgt i32 %13, 0
  %3704 = add i32 %13, -2
  %3705 = zext i32 %3704 to i64
  %3706 = zext i32 %13 to i64
  %3707 = add nuw i32 %5, 1
  %3708 = icmp eq i32 %13, 1
  br label %3853

3709:                                             ; preds = %3695
  br i1 %3699, label %3710, label %5501

3710:                                             ; preds = %3709
  %3711 = icmp sgt i32 %13, 1
  %3712 = icmp sgt i32 %13, 0
  %3713 = add i32 %13, -2
  %3714 = zext i32 %3713 to i64
  %3715 = zext i32 %13 to i64
  %3716 = add nuw i32 %5, 1
  %3717 = icmp eq i32 %13, 1
  br label %3718

3718:                                             ; preds = %3710, %3851
  %3719 = phi double [ 0.000000e+00, %3710 ], [ %3801, %3851 ]
  %3720 = phi i32 [ 0, %3710 ], [ %3803, %3851 ]
  %3721 = phi double [ 0.000000e+00, %3710 ], [ %3802, %3851 ]
  %3722 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3711, label %3723, label %3792

3723:                                             ; preds = %3718, %3782
  %3724 = phi i32 [ %3791, %3782 ], [ 0, %3718 ]
  %3725 = phi i64 [ %3733, %3782 ], [ %3715, %3718 ]
  %3726 = phi i64 [ %3790, %3782 ], [ %3714, %3718 ]
  %3727 = phi i32 [ %3788, %3782 ], [ %3722, %3718 ]
  %3728 = sub i32 %3713, %3724
  %3729 = tail call i32 @llvm.smin.i32(i32 %3728, i32 0)
  %3730 = sub i32 %3728, %3729
  %3731 = zext i32 %3730 to i64
  %3732 = add nuw nsw i64 %3731, 1
  %3733 = add nsw i64 %3725, -1
  %3734 = icmp ult i32 %3730, 31
  br i1 %3734, label %3770, label %3735

3735:                                             ; preds = %3723
  %3736 = and i64 %3732, 8589934560
  %3737 = sub i64 %3726, %3736
  br label %3738

3738:                                             ; preds = %3738, %3735
  %3739 = phi i64 [ 0, %3735 ], [ %3762, %3738 ]
  %3740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3758, %3738 ]
  %3741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3759, %3738 ]
  %3742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3760, %3738 ]
  %3743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3735 ], [ %3761, %3738 ]
  %3744 = sub i64 %3726, %3739
  %3745 = getelementptr inbounds i32, ptr %9, i64 %3744
  %3746 = getelementptr inbounds i32, ptr %3745, i64 -7
  %3747 = load <8 x i32>, ptr %3746, align 4, !tbaa !5
  %3748 = shufflevector <8 x i32> %3747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3749 = getelementptr inbounds i32, ptr %3745, i64 -15
  %3750 = load <8 x i32>, ptr %3749, align 4, !tbaa !5
  %3751 = shufflevector <8 x i32> %3750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3752 = getelementptr inbounds i32, ptr %3745, i64 -23
  %3753 = load <8 x i32>, ptr %3752, align 4, !tbaa !5
  %3754 = shufflevector <8 x i32> %3753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3755 = getelementptr inbounds i32, ptr %3745, i64 -31
  %3756 = load <8 x i32>, ptr %3755, align 4, !tbaa !5
  %3757 = shufflevector <8 x i32> %3756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3758 = mul <8 x i32> %3748, %3740
  %3759 = mul <8 x i32> %3751, %3741
  %3760 = mul <8 x i32> %3754, %3742
  %3761 = mul <8 x i32> %3757, %3743
  %3762 = add nuw i64 %3739, 32
  %3763 = icmp eq i64 %3762, %3736
  br i1 %3763, label %3764, label %3738, !llvm.loop !1424

3764:                                             ; preds = %3738
  %3765 = mul <8 x i32> %3759, %3758
  %3766 = mul <8 x i32> %3760, %3765
  %3767 = mul <8 x i32> %3761, %3766
  %3768 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3767)
  %3769 = icmp eq i64 %3732, %3736
  br i1 %3769, label %3782, label %3770

3770:                                             ; preds = %3723, %3764
  %3771 = phi i64 [ %3726, %3723 ], [ %3737, %3764 ]
  %3772 = phi i32 [ 1, %3723 ], [ %3768, %3764 ]
  br label %3773

3773:                                             ; preds = %3770, %3773
  %3774 = phi i64 [ %3779, %3773 ], [ %3771, %3770 ]
  %3775 = phi i32 [ %3778, %3773 ], [ %3772, %3770 ]
  %3776 = getelementptr inbounds i32, ptr %9, i64 %3774
  %3777 = load i32, ptr %3776, align 4, !tbaa !5
  %3778 = mul nsw i32 %3777, %3775
  %3779 = add nsw i64 %3774, -1
  %3780 = trunc i64 %3774 to i32
  %3781 = icmp sgt i32 %3780, 0
  br i1 %3781, label %3773, label %3782, !llvm.loop !1425

3782:                                             ; preds = %3773, %3764
  %3783 = phi i32 [ %3768, %3764 ], [ %3778, %3773 ]
  %3784 = and i64 %3733, 4294967295
  %3785 = getelementptr inbounds i32, ptr %6, i64 %3784
  %3786 = load i32, ptr %3785, align 4, !tbaa !5
  %3787 = mul nsw i32 %3786, %3783
  %3788 = add nsw i32 %3787, %3727
  %3789 = icmp sgt i64 %3725, 2
  %3790 = add nsw i64 %3726, -1
  %3791 = add i32 %3724, 1
  br i1 %3789, label %3723, label %3792, !llvm.loop !1426

3792:                                             ; preds = %3782, %3718
  %3793 = phi i32 [ %3722, %3718 ], [ %3788, %3782 ]
  %3794 = sext i32 %3793 to i64
  %3795 = getelementptr inbounds double, ptr %2, i64 %3794
  %3796 = load double, ptr %3795, align 8, !tbaa !18
  %3797 = getelementptr inbounds double, ptr %3687, i64 %3794
  %3798 = load double, ptr %3797, align 8, !tbaa !18
  %3799 = fmul fast double %3798, %3796
  %3800 = tail call fast double @llvm.fabs.f64(double %3799)
  %3801 = fadd fast double %3800, %3719
  store double %3801, ptr %3689, align 8, !tbaa !18
  %3802 = fadd fast double %3796, %3721
  %3803 = add nuw nsw i32 %3720, 1
  br i1 %3712, label %3804, label %3851

3804:                                             ; preds = %3792
  %3805 = load i32, ptr %4, align 4, !tbaa !5
  %3806 = load i32, ptr %12, align 4, !tbaa !5
  %3807 = add nsw i32 %3806, -1
  %3808 = icmp slt i32 %3805, %3807
  br i1 %3808, label %3828, label %3809

3809:                                             ; preds = %3804
  %3810 = icmp eq i32 %3805, %3807
  br i1 %3810, label %3811, label %3844

3811:                                             ; preds = %3809
  store i32 0, ptr %4, align 4, !tbaa !5
  %3812 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3812, ptr %6, align 4, !tbaa !5
  br i1 %3717, label %3851, label %3813

3813:                                             ; preds = %3811, %3838
  %3814 = phi i64 [ %3842, %3838 ], [ 1, %3811 ]
  %3815 = getelementptr inbounds i32, ptr %4, i64 %3814
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %12, i64 %3814
  %3818 = load i32, ptr %3817, align 4, !tbaa !5
  %3819 = add nsw i32 %3818, -1
  %3820 = icmp slt i32 %3816, %3819
  br i1 %3820, label %3821, label %3836

3821:                                             ; preds = %3813
  br i1 %3808, label %3828, label %3822

3822:                                             ; preds = %3821
  %3823 = getelementptr inbounds i32, ptr %7, i64 %3814
  %3824 = load i32, ptr %3823, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %6, i64 %3814
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = add nsw i32 %3826, %3824
  store i32 %3827, ptr %3825, align 4, !tbaa !5
  br label %3846

3828:                                             ; preds = %3804, %3821
  %3829 = phi i32 [ %3816, %3821 ], [ %3805, %3804 ]
  %3830 = phi ptr [ %3815, %3821 ], [ %4, %3804 ]
  %3831 = phi i64 [ %3814, %3821 ], [ 0, %3804 ]
  %3832 = add nsw i32 %3829, 1
  store i32 %3832, ptr %3830, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %7, i64 %3831
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = getelementptr inbounds i32, ptr %6, i64 %3831
  br label %3846

3836:                                             ; preds = %3813
  %3837 = icmp eq i32 %3816, %3819
  br i1 %3837, label %3838, label %3844

3838:                                             ; preds = %3836
  store i32 0, ptr %3815, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %8, i64 %3814
  %3840 = load i32, ptr %3839, align 4, !tbaa !5
  %3841 = getelementptr inbounds i32, ptr %6, i64 %3814
  store i32 %3840, ptr %3841, align 4, !tbaa !5
  %3842 = add nuw nsw i64 %3814, 1
  %3843 = icmp eq i64 %3842, %3715
  br i1 %3843, label %3851, label %3813, !llvm.loop !1427

3844:                                             ; preds = %3809, %3836
  %3845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3846:                                             ; preds = %3822, %3828
  %3847 = phi ptr [ %3835, %3828 ], [ %3815, %3822 ]
  %3848 = phi i32 [ %3834, %3828 ], [ 1, %3822 ]
  %3849 = load i32, ptr %3847, align 4, !tbaa !5
  %3850 = add nsw i32 %3849, %3848
  store i32 %3850, ptr %3847, align 4, !tbaa !5
  br label %3851

3851:                                             ; preds = %3838, %3846, %3811, %3792
  %3852 = icmp eq i32 %3803, %5
  br i1 %3852, label %5501, label %3718, !llvm.loop !1428

3853:                                             ; preds = %3701, %3988
  %3854 = phi double [ 0.000000e+00, %3701 ], [ %3936, %3988 ]
  %3855 = phi i32 [ 0, %3701 ], [ %3937, %3988 ]
  %3856 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3702, label %3857, label %3926

3857:                                             ; preds = %3853, %3916
  %3858 = phi i32 [ %3925, %3916 ], [ 0, %3853 ]
  %3859 = phi i64 [ %3867, %3916 ], [ %3706, %3853 ]
  %3860 = phi i64 [ %3924, %3916 ], [ %3705, %3853 ]
  %3861 = phi i32 [ %3922, %3916 ], [ %3856, %3853 ]
  %3862 = sub i32 %3704, %3858
  %3863 = tail call i32 @llvm.smin.i32(i32 %3862, i32 0)
  %3864 = sub i32 %3862, %3863
  %3865 = zext i32 %3864 to i64
  %3866 = add nuw nsw i64 %3865, 1
  %3867 = add nsw i64 %3859, -1
  %3868 = icmp ult i32 %3864, 31
  br i1 %3868, label %3904, label %3869

3869:                                             ; preds = %3857
  %3870 = and i64 %3866, 8589934560
  %3871 = sub i64 %3860, %3870
  br label %3872

3872:                                             ; preds = %3872, %3869
  %3873 = phi i64 [ 0, %3869 ], [ %3896, %3872 ]
  %3874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3892, %3872 ]
  %3875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3893, %3872 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3894, %3872 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3895, %3872 ]
  %3878 = sub i64 %3860, %3873
  %3879 = getelementptr inbounds i32, ptr %11, i64 %3878
  %3880 = getelementptr inbounds i32, ptr %3879, i64 -7
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !5
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = getelementptr inbounds i32, ptr %3879, i64 -15
  %3884 = load <8 x i32>, ptr %3883, align 4, !tbaa !5
  %3885 = shufflevector <8 x i32> %3884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3886 = getelementptr inbounds i32, ptr %3879, i64 -23
  %3887 = load <8 x i32>, ptr %3886, align 4, !tbaa !5
  %3888 = shufflevector <8 x i32> %3887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3889 = getelementptr inbounds i32, ptr %3879, i64 -31
  %3890 = load <8 x i32>, ptr %3889, align 4, !tbaa !5
  %3891 = shufflevector <8 x i32> %3890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3892 = mul <8 x i32> %3882, %3874
  %3893 = mul <8 x i32> %3885, %3875
  %3894 = mul <8 x i32> %3888, %3876
  %3895 = mul <8 x i32> %3891, %3877
  %3896 = add nuw i64 %3873, 32
  %3897 = icmp eq i64 %3896, %3870
  br i1 %3897, label %3898, label %3872, !llvm.loop !1429

3898:                                             ; preds = %3872
  %3899 = mul <8 x i32> %3893, %3892
  %3900 = mul <8 x i32> %3894, %3899
  %3901 = mul <8 x i32> %3895, %3900
  %3902 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3901)
  %3903 = icmp eq i64 %3866, %3870
  br i1 %3903, label %3916, label %3904

3904:                                             ; preds = %3857, %3898
  %3905 = phi i64 [ %3860, %3857 ], [ %3871, %3898 ]
  %3906 = phi i32 [ 1, %3857 ], [ %3902, %3898 ]
  br label %3907

3907:                                             ; preds = %3904, %3907
  %3908 = phi i64 [ %3913, %3907 ], [ %3905, %3904 ]
  %3909 = phi i32 [ %3912, %3907 ], [ %3906, %3904 ]
  %3910 = getelementptr inbounds i32, ptr %11, i64 %3908
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = mul nsw i32 %3911, %3909
  %3913 = add nsw i64 %3908, -1
  %3914 = trunc i64 %3908 to i32
  %3915 = icmp sgt i32 %3914, 0
  br i1 %3915, label %3907, label %3916, !llvm.loop !1430

3916:                                             ; preds = %3907, %3898
  %3917 = phi i32 [ %3902, %3898 ], [ %3912, %3907 ]
  %3918 = and i64 %3867, 4294967295
  %3919 = getelementptr inbounds i32, ptr %6, i64 %3918
  %3920 = load i32, ptr %3919, align 4, !tbaa !5
  %3921 = mul nsw i32 %3920, %3917
  %3922 = add nsw i32 %3921, %3861
  %3923 = icmp sgt i64 %3859, 2
  %3924 = add nsw i64 %3860, -1
  %3925 = add i32 %3858, 1
  br i1 %3923, label %3857, label %3926, !llvm.loop !1431

3926:                                             ; preds = %3916, %3853
  %3927 = phi i32 [ %3856, %3853 ], [ %3922, %3916 ]
  %3928 = icmp slt i32 %3927, %5
  br i1 %3928, label %3931, label %3929

3929:                                             ; preds = %3926
  %3930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

3931:                                             ; preds = %3926
  %3932 = sext i32 %3927 to i64
  %3933 = getelementptr inbounds double, ptr %3687, i64 %3932
  %3934 = load double, ptr %3933, align 8, !tbaa !18
  %3935 = tail call fast double @llvm.fabs.f64(double %3934)
  %3936 = fadd fast double %3854, %3935
  store double %3936, ptr %3689, align 8, !tbaa !18
  %3937 = add nuw nsw i32 %3855, 1
  br i1 %3703, label %3938, label %3988

3938:                                             ; preds = %3931
  %3939 = load i32, ptr %4, align 4, !tbaa !5
  %3940 = load i32, ptr %12, align 4, !tbaa !5
  %3941 = add nsw i32 %3940, -1
  %3942 = icmp slt i32 %3939, %3941
  br i1 %3942, label %3965, label %3943

3943:                                             ; preds = %3938
  %3944 = icmp eq i32 %3939, %3941
  br i1 %3944, label %3945, label %3981

3945:                                             ; preds = %3943
  store i32 0, ptr %4, align 4, !tbaa !5
  %3946 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3946, ptr %6, align 4, !tbaa !5
  br i1 %3708, label %3988, label %3947

3947:                                             ; preds = %3945, %3975
  %3948 = phi i64 [ %3979, %3975 ], [ 1, %3945 ]
  %3949 = getelementptr inbounds i32, ptr %4, i64 %3948
  %3950 = load i32, ptr %3949, align 4, !tbaa !5
  %3951 = getelementptr inbounds i32, ptr %12, i64 %3948
  %3952 = load i32, ptr %3951, align 4, !tbaa !5
  %3953 = add nsw i32 %3952, -1
  %3954 = icmp slt i32 %3950, %3953
  br i1 %3954, label %3955, label %3973

3955:                                             ; preds = %3947
  br i1 %3942, label %3965, label %3956

3956:                                             ; preds = %3955
  %3957 = shl i64 %3948, 32
  %3958 = add i64 %3957, -4294967296
  %3959 = ashr exact i64 %3958, 32
  %3960 = getelementptr inbounds i32, ptr %7, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %6, i64 %3948
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, %3961
  store i32 %3964, ptr %3962, align 4, !tbaa !5
  br label %3983

3965:                                             ; preds = %3938, %3955
  %3966 = phi i32 [ %3950, %3955 ], [ %3939, %3938 ]
  %3967 = phi ptr [ %3949, %3955 ], [ %4, %3938 ]
  %3968 = phi i64 [ %3948, %3955 ], [ 0, %3938 ]
  %3969 = add nsw i32 %3966, 1
  store i32 %3969, ptr %3967, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %7, i64 %3968
  %3971 = load i32, ptr %3970, align 4, !tbaa !5
  %3972 = getelementptr inbounds i32, ptr %6, i64 %3968
  br label %3983

3973:                                             ; preds = %3947
  %3974 = icmp eq i32 %3950, %3953
  br i1 %3974, label %3975, label %3981

3975:                                             ; preds = %3973
  store i32 0, ptr %3949, align 4, !tbaa !5
  %3976 = getelementptr inbounds i32, ptr %8, i64 %3948
  %3977 = load i32, ptr %3976, align 4, !tbaa !5
  %3978 = getelementptr inbounds i32, ptr %6, i64 %3948
  store i32 %3977, ptr %3978, align 4, !tbaa !5
  %3979 = add nuw nsw i64 %3948, 1
  %3980 = icmp eq i64 %3979, %3706
  br i1 %3980, label %3988, label %3947, !llvm.loop !1432

3981:                                             ; preds = %3943, %3973
  %3982 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

3983:                                             ; preds = %3956, %3965
  %3984 = phi ptr [ %3972, %3965 ], [ %3949, %3956 ]
  %3985 = phi i32 [ %3971, %3965 ], [ 1, %3956 ]
  %3986 = load i32, ptr %3984, align 4, !tbaa !5
  %3987 = add nsw i32 %3986, %3985
  store i32 %3987, ptr %3984, align 4, !tbaa !5
  br label %3988

3988:                                             ; preds = %3975, %3983, %3945, %3931
  %3989 = icmp eq i32 %3937, %5
  br i1 %3989, label %5501, label %3853, !llvm.loop !1433

3990:                                             ; preds = %3694
  %3991 = getelementptr inbounds i32, ptr %3, i64 %19
  %3992 = load i32, ptr %3991, align 4, !tbaa !5
  %3993 = icmp eq i32 %3992, 0
  %3994 = icmp sgt i32 %5, 0
  br i1 %3993, label %4004, label %3995

3995:                                             ; preds = %3990
  br i1 %3994, label %3996, label %5501

3996:                                             ; preds = %3995
  %3997 = icmp sgt i32 %13, 1
  %3998 = icmp sgt i32 %13, 0
  %3999 = add i32 %13, -2
  %4000 = zext i32 %3999 to i64
  %4001 = zext i32 %13 to i64
  %4002 = add nuw i32 %5, 1
  %4003 = icmp eq i32 %13, 1
  br label %4145

4004:                                             ; preds = %3990
  br i1 %3994, label %4005, label %5501

4005:                                             ; preds = %4004
  %4006 = icmp sgt i32 %13, 1
  %4007 = icmp sgt i32 %13, 0
  %4008 = add i32 %13, -2
  %4009 = zext i32 %4008 to i64
  %4010 = zext i32 %13 to i64
  %4011 = add nuw i32 %5, 1
  %4012 = icmp eq i32 %13, 1
  br label %4013

4013:                                             ; preds = %4005, %4143
  %4014 = phi double [ 0.000000e+00, %4005 ], [ %4093, %4143 ]
  %4015 = phi i32 [ 0, %4005 ], [ %4095, %4143 ]
  %4016 = phi double [ 0.000000e+00, %4005 ], [ %4094, %4143 ]
  %4017 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4006, label %4018, label %4087

4018:                                             ; preds = %4013, %4077
  %4019 = phi i32 [ %4086, %4077 ], [ 0, %4013 ]
  %4020 = phi i64 [ %4028, %4077 ], [ %4010, %4013 ]
  %4021 = phi i64 [ %4085, %4077 ], [ %4009, %4013 ]
  %4022 = phi i32 [ %4083, %4077 ], [ %4017, %4013 ]
  %4023 = sub i32 %4008, %4019
  %4024 = tail call i32 @llvm.smin.i32(i32 %4023, i32 0)
  %4025 = sub i32 %4023, %4024
  %4026 = zext i32 %4025 to i64
  %4027 = add nuw nsw i64 %4026, 1
  %4028 = add nsw i64 %4020, -1
  %4029 = icmp ult i32 %4025, 31
  br i1 %4029, label %4065, label %4030

4030:                                             ; preds = %4018
  %4031 = and i64 %4027, 8589934560
  %4032 = sub i64 %4021, %4031
  br label %4033

4033:                                             ; preds = %4033, %4030
  %4034 = phi i64 [ 0, %4030 ], [ %4057, %4033 ]
  %4035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4053, %4033 ]
  %4036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4054, %4033 ]
  %4037 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4055, %4033 ]
  %4038 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4030 ], [ %4056, %4033 ]
  %4039 = sub i64 %4021, %4034
  %4040 = getelementptr inbounds i32, ptr %9, i64 %4039
  %4041 = getelementptr inbounds i32, ptr %4040, i64 -7
  %4042 = load <8 x i32>, ptr %4041, align 4, !tbaa !5
  %4043 = shufflevector <8 x i32> %4042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4044 = getelementptr inbounds i32, ptr %4040, i64 -15
  %4045 = load <8 x i32>, ptr %4044, align 4, !tbaa !5
  %4046 = shufflevector <8 x i32> %4045, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4047 = getelementptr inbounds i32, ptr %4040, i64 -23
  %4048 = load <8 x i32>, ptr %4047, align 4, !tbaa !5
  %4049 = shufflevector <8 x i32> %4048, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4050 = getelementptr inbounds i32, ptr %4040, i64 -31
  %4051 = load <8 x i32>, ptr %4050, align 4, !tbaa !5
  %4052 = shufflevector <8 x i32> %4051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4053 = mul <8 x i32> %4043, %4035
  %4054 = mul <8 x i32> %4046, %4036
  %4055 = mul <8 x i32> %4049, %4037
  %4056 = mul <8 x i32> %4052, %4038
  %4057 = add nuw i64 %4034, 32
  %4058 = icmp eq i64 %4057, %4031
  br i1 %4058, label %4059, label %4033, !llvm.loop !1434

4059:                                             ; preds = %4033
  %4060 = mul <8 x i32> %4054, %4053
  %4061 = mul <8 x i32> %4055, %4060
  %4062 = mul <8 x i32> %4056, %4061
  %4063 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4062)
  %4064 = icmp eq i64 %4027, %4031
  br i1 %4064, label %4077, label %4065

4065:                                             ; preds = %4018, %4059
  %4066 = phi i64 [ %4021, %4018 ], [ %4032, %4059 ]
  %4067 = phi i32 [ 1, %4018 ], [ %4063, %4059 ]
  br label %4068

4068:                                             ; preds = %4065, %4068
  %4069 = phi i64 [ %4074, %4068 ], [ %4066, %4065 ]
  %4070 = phi i32 [ %4073, %4068 ], [ %4067, %4065 ]
  %4071 = getelementptr inbounds i32, ptr %9, i64 %4069
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = mul nsw i32 %4072, %4070
  %4074 = add nsw i64 %4069, -1
  %4075 = trunc i64 %4069 to i32
  %4076 = icmp sgt i32 %4075, 0
  br i1 %4076, label %4068, label %4077, !llvm.loop !1435

4077:                                             ; preds = %4068, %4059
  %4078 = phi i32 [ %4063, %4059 ], [ %4073, %4068 ]
  %4079 = and i64 %4028, 4294967295
  %4080 = getelementptr inbounds i32, ptr %6, i64 %4079
  %4081 = load i32, ptr %4080, align 4, !tbaa !5
  %4082 = mul nsw i32 %4081, %4078
  %4083 = add nsw i32 %4082, %4022
  %4084 = icmp sgt i64 %4020, 2
  %4085 = add nsw i64 %4021, -1
  %4086 = add i32 %4019, 1
  br i1 %4084, label %4018, label %4087, !llvm.loop !1436

4087:                                             ; preds = %4077, %4013
  %4088 = phi i32 [ %4017, %4013 ], [ %4083, %4077 ]
  %4089 = sext i32 %4088 to i64
  %4090 = getelementptr inbounds double, ptr %3687, i64 %4089
  %4091 = load double, ptr %4090, align 8, !tbaa !18
  %4092 = tail call fast double @llvm.fabs.f64(double %4091)
  %4093 = fadd fast double %4014, %4092
  store double %4093, ptr %3689, align 8, !tbaa !18
  %4094 = fadd fast double %4016, 1.000000e+00
  %4095 = add nuw nsw i32 %4015, 1
  br i1 %4007, label %4096, label %4143

4096:                                             ; preds = %4087
  %4097 = load i32, ptr %4, align 4, !tbaa !5
  %4098 = load i32, ptr %12, align 4, !tbaa !5
  %4099 = add nsw i32 %4098, -1
  %4100 = icmp slt i32 %4097, %4099
  br i1 %4100, label %4120, label %4101

4101:                                             ; preds = %4096
  %4102 = icmp eq i32 %4097, %4099
  br i1 %4102, label %4103, label %4136

4103:                                             ; preds = %4101
  store i32 0, ptr %4, align 4, !tbaa !5
  %4104 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4104, ptr %6, align 4, !tbaa !5
  br i1 %4012, label %4143, label %4105

4105:                                             ; preds = %4103, %4130
  %4106 = phi i64 [ %4134, %4130 ], [ 1, %4103 ]
  %4107 = getelementptr inbounds i32, ptr %4, i64 %4106
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %12, i64 %4106
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, -1
  %4112 = icmp slt i32 %4108, %4111
  br i1 %4112, label %4113, label %4128

4113:                                             ; preds = %4105
  br i1 %4100, label %4120, label %4114

4114:                                             ; preds = %4113
  %4115 = getelementptr inbounds i32, ptr %7, i64 %4106
  %4116 = load i32, ptr %4115, align 4, !tbaa !5
  %4117 = getelementptr inbounds i32, ptr %6, i64 %4106
  %4118 = load i32, ptr %4117, align 4, !tbaa !5
  %4119 = add nsw i32 %4118, %4116
  store i32 %4119, ptr %4117, align 4, !tbaa !5
  br label %4138

4120:                                             ; preds = %4096, %4113
  %4121 = phi i32 [ %4108, %4113 ], [ %4097, %4096 ]
  %4122 = phi ptr [ %4107, %4113 ], [ %4, %4096 ]
  %4123 = phi i64 [ %4106, %4113 ], [ 0, %4096 ]
  %4124 = add nsw i32 %4121, 1
  store i32 %4124, ptr %4122, align 4, !tbaa !5
  %4125 = getelementptr inbounds i32, ptr %7, i64 %4123
  %4126 = load i32, ptr %4125, align 4, !tbaa !5
  %4127 = getelementptr inbounds i32, ptr %6, i64 %4123
  br label %4138

4128:                                             ; preds = %4105
  %4129 = icmp eq i32 %4108, %4111
  br i1 %4129, label %4130, label %4136

4130:                                             ; preds = %4128
  store i32 0, ptr %4107, align 4, !tbaa !5
  %4131 = getelementptr inbounds i32, ptr %8, i64 %4106
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4106
  store i32 %4132, ptr %4133, align 4, !tbaa !5
  %4134 = add nuw nsw i64 %4106, 1
  %4135 = icmp eq i64 %4134, %4010
  br i1 %4135, label %4143, label %4105, !llvm.loop !1437

4136:                                             ; preds = %4101, %4128
  %4137 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4138:                                             ; preds = %4114, %4120
  %4139 = phi ptr [ %4127, %4120 ], [ %4107, %4114 ]
  %4140 = phi i32 [ %4126, %4120 ], [ 1, %4114 ]
  %4141 = load i32, ptr %4139, align 4, !tbaa !5
  %4142 = add nsw i32 %4141, %4140
  store i32 %4142, ptr %4139, align 4, !tbaa !5
  br label %4143

4143:                                             ; preds = %4130, %4138, %4103, %4087
  %4144 = icmp eq i32 %4095, %5
  br i1 %4144, label %5501, label %4013, !llvm.loop !1438

4145:                                             ; preds = %3996, %4280
  %4146 = phi double [ 0.000000e+00, %3996 ], [ %4228, %4280 ]
  %4147 = phi i32 [ 0, %3996 ], [ %4229, %4280 ]
  %4148 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3997, label %4149, label %4218

4149:                                             ; preds = %4145, %4208
  %4150 = phi i32 [ %4217, %4208 ], [ 0, %4145 ]
  %4151 = phi i64 [ %4159, %4208 ], [ %4001, %4145 ]
  %4152 = phi i64 [ %4216, %4208 ], [ %4000, %4145 ]
  %4153 = phi i32 [ %4214, %4208 ], [ %4148, %4145 ]
  %4154 = sub i32 %3999, %4150
  %4155 = tail call i32 @llvm.smin.i32(i32 %4154, i32 0)
  %4156 = sub i32 %4154, %4155
  %4157 = zext i32 %4156 to i64
  %4158 = add nuw nsw i64 %4157, 1
  %4159 = add nsw i64 %4151, -1
  %4160 = icmp ult i32 %4156, 31
  br i1 %4160, label %4196, label %4161

4161:                                             ; preds = %4149
  %4162 = and i64 %4158, 8589934560
  %4163 = sub i64 %4152, %4162
  br label %4164

4164:                                             ; preds = %4164, %4161
  %4165 = phi i64 [ 0, %4161 ], [ %4188, %4164 ]
  %4166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4184, %4164 ]
  %4167 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4185, %4164 ]
  %4168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4186, %4164 ]
  %4169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4161 ], [ %4187, %4164 ]
  %4170 = sub i64 %4152, %4165
  %4171 = getelementptr inbounds i32, ptr %11, i64 %4170
  %4172 = getelementptr inbounds i32, ptr %4171, i64 -7
  %4173 = load <8 x i32>, ptr %4172, align 4, !tbaa !5
  %4174 = shufflevector <8 x i32> %4173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4175 = getelementptr inbounds i32, ptr %4171, i64 -15
  %4176 = load <8 x i32>, ptr %4175, align 4, !tbaa !5
  %4177 = shufflevector <8 x i32> %4176, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4178 = getelementptr inbounds i32, ptr %4171, i64 -23
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !5
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4171, i64 -31
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !5
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = mul <8 x i32> %4174, %4166
  %4185 = mul <8 x i32> %4177, %4167
  %4186 = mul <8 x i32> %4180, %4168
  %4187 = mul <8 x i32> %4183, %4169
  %4188 = add nuw i64 %4165, 32
  %4189 = icmp eq i64 %4188, %4162
  br i1 %4189, label %4190, label %4164, !llvm.loop !1439

4190:                                             ; preds = %4164
  %4191 = mul <8 x i32> %4185, %4184
  %4192 = mul <8 x i32> %4186, %4191
  %4193 = mul <8 x i32> %4187, %4192
  %4194 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4193)
  %4195 = icmp eq i64 %4158, %4162
  br i1 %4195, label %4208, label %4196

4196:                                             ; preds = %4149, %4190
  %4197 = phi i64 [ %4152, %4149 ], [ %4163, %4190 ]
  %4198 = phi i32 [ 1, %4149 ], [ %4194, %4190 ]
  br label %4199

4199:                                             ; preds = %4196, %4199
  %4200 = phi i64 [ %4205, %4199 ], [ %4197, %4196 ]
  %4201 = phi i32 [ %4204, %4199 ], [ %4198, %4196 ]
  %4202 = getelementptr inbounds i32, ptr %11, i64 %4200
  %4203 = load i32, ptr %4202, align 4, !tbaa !5
  %4204 = mul nsw i32 %4203, %4201
  %4205 = add nsw i64 %4200, -1
  %4206 = trunc i64 %4200 to i32
  %4207 = icmp sgt i32 %4206, 0
  br i1 %4207, label %4199, label %4208, !llvm.loop !1440

4208:                                             ; preds = %4199, %4190
  %4209 = phi i32 [ %4194, %4190 ], [ %4204, %4199 ]
  %4210 = and i64 %4159, 4294967295
  %4211 = getelementptr inbounds i32, ptr %6, i64 %4210
  %4212 = load i32, ptr %4211, align 4, !tbaa !5
  %4213 = mul nsw i32 %4212, %4209
  %4214 = add nsw i32 %4213, %4153
  %4215 = icmp sgt i64 %4151, 2
  %4216 = add nsw i64 %4152, -1
  %4217 = add i32 %4150, 1
  br i1 %4215, label %4149, label %4218, !llvm.loop !1441

4218:                                             ; preds = %4208, %4145
  %4219 = phi i32 [ %4148, %4145 ], [ %4214, %4208 ]
  %4220 = icmp slt i32 %4219, %5
  br i1 %4220, label %4223, label %4221

4221:                                             ; preds = %4218
  %4222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4223:                                             ; preds = %4218
  %4224 = sext i32 %4219 to i64
  %4225 = getelementptr inbounds double, ptr %3687, i64 %4224
  %4226 = load double, ptr %4225, align 8, !tbaa !18
  %4227 = tail call fast double @llvm.fabs.f64(double %4226)
  %4228 = fadd fast double %4146, %4227
  store double %4228, ptr %3689, align 8, !tbaa !18
  %4229 = add nuw nsw i32 %4147, 1
  br i1 %3998, label %4230, label %4280

4230:                                             ; preds = %4223
  %4231 = load i32, ptr %4, align 4, !tbaa !5
  %4232 = load i32, ptr %12, align 4, !tbaa !5
  %4233 = add nsw i32 %4232, -1
  %4234 = icmp slt i32 %4231, %4233
  br i1 %4234, label %4257, label %4235

4235:                                             ; preds = %4230
  %4236 = icmp eq i32 %4231, %4233
  br i1 %4236, label %4237, label %4273

4237:                                             ; preds = %4235
  store i32 0, ptr %4, align 4, !tbaa !5
  %4238 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4238, ptr %6, align 4, !tbaa !5
  br i1 %4003, label %4280, label %4239

4239:                                             ; preds = %4237, %4267
  %4240 = phi i64 [ %4271, %4267 ], [ 1, %4237 ]
  %4241 = getelementptr inbounds i32, ptr %4, i64 %4240
  %4242 = load i32, ptr %4241, align 4, !tbaa !5
  %4243 = getelementptr inbounds i32, ptr %12, i64 %4240
  %4244 = load i32, ptr %4243, align 4, !tbaa !5
  %4245 = add nsw i32 %4244, -1
  %4246 = icmp slt i32 %4242, %4245
  br i1 %4246, label %4247, label %4265

4247:                                             ; preds = %4239
  br i1 %4234, label %4257, label %4248

4248:                                             ; preds = %4247
  %4249 = shl i64 %4240, 32
  %4250 = add i64 %4249, -4294967296
  %4251 = ashr exact i64 %4250, 32
  %4252 = getelementptr inbounds i32, ptr %7, i64 %4251
  %4253 = load i32, ptr %4252, align 4, !tbaa !5
  %4254 = getelementptr inbounds i32, ptr %6, i64 %4240
  %4255 = load i32, ptr %4254, align 4, !tbaa !5
  %4256 = add nsw i32 %4255, %4253
  store i32 %4256, ptr %4254, align 4, !tbaa !5
  br label %4275

4257:                                             ; preds = %4230, %4247
  %4258 = phi i32 [ %4242, %4247 ], [ %4231, %4230 ]
  %4259 = phi ptr [ %4241, %4247 ], [ %4, %4230 ]
  %4260 = phi i64 [ %4240, %4247 ], [ 0, %4230 ]
  %4261 = add nsw i32 %4258, 1
  store i32 %4261, ptr %4259, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %7, i64 %4260
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = getelementptr inbounds i32, ptr %6, i64 %4260
  br label %4275

4265:                                             ; preds = %4239
  %4266 = icmp eq i32 %4242, %4245
  br i1 %4266, label %4267, label %4273

4267:                                             ; preds = %4265
  store i32 0, ptr %4241, align 4, !tbaa !5
  %4268 = getelementptr inbounds i32, ptr %8, i64 %4240
  %4269 = load i32, ptr %4268, align 4, !tbaa !5
  %4270 = getelementptr inbounds i32, ptr %6, i64 %4240
  store i32 %4269, ptr %4270, align 4, !tbaa !5
  %4271 = add nuw nsw i64 %4240, 1
  %4272 = icmp eq i64 %4271, %4001
  br i1 %4272, label %4280, label %4239, !llvm.loop !1442

4273:                                             ; preds = %4235, %4265
  %4274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4275:                                             ; preds = %4248, %4257
  %4276 = phi ptr [ %4264, %4257 ], [ %4241, %4248 ]
  %4277 = phi i32 [ %4263, %4257 ], [ 1, %4248 ]
  %4278 = load i32, ptr %4276, align 4, !tbaa !5
  %4279 = add nsw i32 %4278, %4277
  store i32 %4279, ptr %4276, align 4, !tbaa !5
  br label %4280

4280:                                             ; preds = %4267, %4275, %4237, %4223
  %4281 = icmp eq i32 %4229, %5
  br i1 %4281, label %5501, label %4145, !llvm.loop !1443

4282:                                             ; preds = %3694
  %4283 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

4284:                                             ; preds = %18
  %4285 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4286 = load ptr, ptr %4285, align 8, !tbaa !9
  %4287 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4288 = load ptr, ptr %4287, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4288, align 4, !tbaa !162
  %4289 = icmp eq i32 %13, 0
  br i1 %4289, label %4290, label %4294

4290:                                             ; preds = %4284
  %4291 = load double, ptr %4286, align 8, !tbaa !18
  %4292 = fptrunc double %4291 to float
  %4293 = tail call fast float @llvm.fabs.f32(float %4292)
  store float %4293, ptr %4288, align 4, !tbaa !162
  br label %5501

4294:                                             ; preds = %4284
  switch i32 %1, label %4894 [
    i32 1, label %4295
    i32 0, label %4600
  ]

4295:                                             ; preds = %4294
  %4296 = getelementptr inbounds i32, ptr %3, i64 %19
  %4297 = load i32, ptr %4296, align 4, !tbaa !5
  %4298 = icmp eq i32 %4297, 0
  %4299 = icmp sgt i32 %5, 0
  br i1 %4298, label %4309, label %4300

4300:                                             ; preds = %4295
  br i1 %4299, label %4301, label %5501

4301:                                             ; preds = %4300
  %4302 = icmp sgt i32 %13, 1
  %4303 = icmp sgt i32 %13, 0
  %4304 = add i32 %13, -2
  %4305 = zext i32 %4304 to i64
  %4306 = zext i32 %13 to i64
  %4307 = add nuw i32 %5, 1
  %4308 = icmp eq i32 %13, 1
  br label %4457

4309:                                             ; preds = %4295
  br i1 %4299, label %4310, label %5501

4310:                                             ; preds = %4309
  %4311 = icmp sgt i32 %13, 1
  %4312 = icmp sgt i32 %13, 0
  %4313 = add i32 %13, -2
  %4314 = zext i32 %4313 to i64
  %4315 = zext i32 %13 to i64
  %4316 = add nuw i32 %5, 1
  %4317 = icmp eq i32 %13, 1
  br label %4318

4318:                                             ; preds = %4310, %4455
  %4319 = phi float [ 0.000000e+00, %4310 ], [ %4405, %4455 ]
  %4320 = phi i32 [ 0, %4310 ], [ %4407, %4455 ]
  %4321 = phi double [ 0.000000e+00, %4310 ], [ %4406, %4455 ]
  %4322 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4323, label %4392

4323:                                             ; preds = %4318, %4382
  %4324 = phi i32 [ %4391, %4382 ], [ 0, %4318 ]
  %4325 = phi i64 [ %4333, %4382 ], [ %4315, %4318 ]
  %4326 = phi i64 [ %4390, %4382 ], [ %4314, %4318 ]
  %4327 = phi i32 [ %4388, %4382 ], [ %4322, %4318 ]
  %4328 = sub i32 %4313, %4324
  %4329 = tail call i32 @llvm.smin.i32(i32 %4328, i32 0)
  %4330 = sub i32 %4328, %4329
  %4331 = zext i32 %4330 to i64
  %4332 = add nuw nsw i64 %4331, 1
  %4333 = add nsw i64 %4325, -1
  %4334 = icmp ult i32 %4330, 31
  br i1 %4334, label %4370, label %4335

4335:                                             ; preds = %4323
  %4336 = and i64 %4332, 8589934560
  %4337 = sub i64 %4326, %4336
  br label %4338

4338:                                             ; preds = %4338, %4335
  %4339 = phi i64 [ 0, %4335 ], [ %4362, %4338 ]
  %4340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4358, %4338 ]
  %4341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4359, %4338 ]
  %4342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4360, %4338 ]
  %4343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4361, %4338 ]
  %4344 = sub i64 %4326, %4339
  %4345 = getelementptr inbounds i32, ptr %9, i64 %4344
  %4346 = getelementptr inbounds i32, ptr %4345, i64 -7
  %4347 = load <8 x i32>, ptr %4346, align 4, !tbaa !5
  %4348 = shufflevector <8 x i32> %4347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4349 = getelementptr inbounds i32, ptr %4345, i64 -15
  %4350 = load <8 x i32>, ptr %4349, align 4, !tbaa !5
  %4351 = shufflevector <8 x i32> %4350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4352 = getelementptr inbounds i32, ptr %4345, i64 -23
  %4353 = load <8 x i32>, ptr %4352, align 4, !tbaa !5
  %4354 = shufflevector <8 x i32> %4353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4355 = getelementptr inbounds i32, ptr %4345, i64 -31
  %4356 = load <8 x i32>, ptr %4355, align 4, !tbaa !5
  %4357 = shufflevector <8 x i32> %4356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4358 = mul <8 x i32> %4348, %4340
  %4359 = mul <8 x i32> %4351, %4341
  %4360 = mul <8 x i32> %4354, %4342
  %4361 = mul <8 x i32> %4357, %4343
  %4362 = add nuw i64 %4339, 32
  %4363 = icmp eq i64 %4362, %4336
  br i1 %4363, label %4364, label %4338, !llvm.loop !1444

4364:                                             ; preds = %4338
  %4365 = mul <8 x i32> %4359, %4358
  %4366 = mul <8 x i32> %4360, %4365
  %4367 = mul <8 x i32> %4361, %4366
  %4368 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4367)
  %4369 = icmp eq i64 %4332, %4336
  br i1 %4369, label %4382, label %4370

4370:                                             ; preds = %4323, %4364
  %4371 = phi i64 [ %4326, %4323 ], [ %4337, %4364 ]
  %4372 = phi i32 [ 1, %4323 ], [ %4368, %4364 ]
  br label %4373

4373:                                             ; preds = %4370, %4373
  %4374 = phi i64 [ %4379, %4373 ], [ %4371, %4370 ]
  %4375 = phi i32 [ %4378, %4373 ], [ %4372, %4370 ]
  %4376 = getelementptr inbounds i32, ptr %9, i64 %4374
  %4377 = load i32, ptr %4376, align 4, !tbaa !5
  %4378 = mul nsw i32 %4377, %4375
  %4379 = add nsw i64 %4374, -1
  %4380 = trunc i64 %4374 to i32
  %4381 = icmp sgt i32 %4380, 0
  br i1 %4381, label %4373, label %4382, !llvm.loop !1445

4382:                                             ; preds = %4373, %4364
  %4383 = phi i32 [ %4368, %4364 ], [ %4378, %4373 ]
  %4384 = and i64 %4333, 4294967295
  %4385 = getelementptr inbounds i32, ptr %6, i64 %4384
  %4386 = load i32, ptr %4385, align 4, !tbaa !5
  %4387 = mul nsw i32 %4386, %4383
  %4388 = add nsw i32 %4387, %4327
  %4389 = icmp sgt i64 %4325, 2
  %4390 = add nsw i64 %4326, -1
  %4391 = add i32 %4324, 1
  br i1 %4389, label %4323, label %4392, !llvm.loop !1446

4392:                                             ; preds = %4382, %4318
  %4393 = phi i32 [ %4322, %4318 ], [ %4388, %4382 ]
  %4394 = sext i32 %4393 to i64
  %4395 = getelementptr inbounds double, ptr %2, i64 %4394
  %4396 = load double, ptr %4395, align 8, !tbaa !18
  %4397 = getelementptr inbounds double, ptr %4286, i64 %4394
  %4398 = load double, ptr %4397, align 8, !tbaa !18
  %4399 = fptrunc double %4398 to float
  %4400 = fpext float %4319 to double
  %4401 = fpext float %4399 to double
  %4402 = fmul fast double %4396, %4401
  %4403 = tail call fast double @llvm.fabs.f64(double %4402)
  %4404 = fadd fast double %4403, %4400
  %4405 = fptrunc double %4404 to float
  %4406 = fadd fast double %4396, %4321
  %4407 = add nuw nsw i32 %4320, 1
  br i1 %4312, label %4408, label %4455

4408:                                             ; preds = %4392
  %4409 = load i32, ptr %4, align 4, !tbaa !5
  %4410 = load i32, ptr %12, align 4, !tbaa !5
  %4411 = add nsw i32 %4410, -1
  %4412 = icmp slt i32 %4409, %4411
  br i1 %4412, label %4432, label %4413

4413:                                             ; preds = %4408
  %4414 = icmp eq i32 %4409, %4411
  br i1 %4414, label %4415, label %4448

4415:                                             ; preds = %4413
  store i32 0, ptr %4, align 4, !tbaa !5
  %4416 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4416, ptr %6, align 4, !tbaa !5
  br i1 %4317, label %4455, label %4417

4417:                                             ; preds = %4415, %4442
  %4418 = phi i64 [ %4446, %4442 ], [ 1, %4415 ]
  %4419 = getelementptr inbounds i32, ptr %4, i64 %4418
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %12, i64 %4418
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = add nsw i32 %4422, -1
  %4424 = icmp slt i32 %4420, %4423
  br i1 %4424, label %4425, label %4440

4425:                                             ; preds = %4417
  br i1 %4412, label %4432, label %4426

4426:                                             ; preds = %4425
  %4427 = getelementptr inbounds i32, ptr %7, i64 %4418
  %4428 = load i32, ptr %4427, align 4, !tbaa !5
  %4429 = getelementptr inbounds i32, ptr %6, i64 %4418
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = add nsw i32 %4430, %4428
  store i32 %4431, ptr %4429, align 4, !tbaa !5
  br label %4450

4432:                                             ; preds = %4408, %4425
  %4433 = phi i32 [ %4420, %4425 ], [ %4409, %4408 ]
  %4434 = phi ptr [ %4419, %4425 ], [ %4, %4408 ]
  %4435 = phi i64 [ %4418, %4425 ], [ 0, %4408 ]
  %4436 = add nsw i32 %4433, 1
  store i32 %4436, ptr %4434, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %7, i64 %4435
  %4438 = load i32, ptr %4437, align 4, !tbaa !5
  %4439 = getelementptr inbounds i32, ptr %6, i64 %4435
  br label %4450

4440:                                             ; preds = %4417
  %4441 = icmp eq i32 %4420, %4423
  br i1 %4441, label %4442, label %4448

4442:                                             ; preds = %4440
  store i32 0, ptr %4419, align 4, !tbaa !5
  %4443 = getelementptr inbounds i32, ptr %8, i64 %4418
  %4444 = load i32, ptr %4443, align 4, !tbaa !5
  %4445 = getelementptr inbounds i32, ptr %6, i64 %4418
  store i32 %4444, ptr %4445, align 4, !tbaa !5
  %4446 = add nuw nsw i64 %4418, 1
  %4447 = icmp eq i64 %4446, %4315
  br i1 %4447, label %4455, label %4417, !llvm.loop !1447

4448:                                             ; preds = %4413, %4440
  store float %4405, ptr %4288, align 4, !tbaa !162
  %4449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4450:                                             ; preds = %4426, %4432
  %4451 = phi ptr [ %4439, %4432 ], [ %4419, %4426 ]
  %4452 = phi i32 [ %4438, %4432 ], [ 1, %4426 ]
  %4453 = load i32, ptr %4451, align 4, !tbaa !5
  %4454 = add nsw i32 %4453, %4452
  store i32 %4454, ptr %4451, align 4, !tbaa !5
  br label %4455

4455:                                             ; preds = %4442, %4450, %4415, %4392
  %4456 = icmp eq i32 %4407, %5
  br i1 %4456, label %5499, label %4318, !llvm.loop !1448

4457:                                             ; preds = %4301, %4598
  %4458 = phi float [ 0.000000e+00, %4301 ], [ %4546, %4598 ]
  %4459 = phi i32 [ 0, %4301 ], [ %4547, %4598 ]
  %4460 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4461, label %4530

4461:                                             ; preds = %4457, %4520
  %4462 = phi i32 [ %4529, %4520 ], [ 0, %4457 ]
  %4463 = phi i64 [ %4471, %4520 ], [ %4306, %4457 ]
  %4464 = phi i64 [ %4528, %4520 ], [ %4305, %4457 ]
  %4465 = phi i32 [ %4526, %4520 ], [ %4460, %4457 ]
  %4466 = sub i32 %4304, %4462
  %4467 = tail call i32 @llvm.smin.i32(i32 %4466, i32 0)
  %4468 = sub i32 %4466, %4467
  %4469 = zext i32 %4468 to i64
  %4470 = add nuw nsw i64 %4469, 1
  %4471 = add nsw i64 %4463, -1
  %4472 = icmp ult i32 %4468, 31
  br i1 %4472, label %4508, label %4473

4473:                                             ; preds = %4461
  %4474 = and i64 %4470, 8589934560
  %4475 = sub i64 %4464, %4474
  br label %4476

4476:                                             ; preds = %4476, %4473
  %4477 = phi i64 [ 0, %4473 ], [ %4500, %4476 ]
  %4478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4496, %4476 ]
  %4479 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4497, %4476 ]
  %4480 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4498, %4476 ]
  %4481 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4473 ], [ %4499, %4476 ]
  %4482 = sub i64 %4464, %4477
  %4483 = getelementptr inbounds i32, ptr %11, i64 %4482
  %4484 = getelementptr inbounds i32, ptr %4483, i64 -7
  %4485 = load <8 x i32>, ptr %4484, align 4, !tbaa !5
  %4486 = shufflevector <8 x i32> %4485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4487 = getelementptr inbounds i32, ptr %4483, i64 -15
  %4488 = load <8 x i32>, ptr %4487, align 4, !tbaa !5
  %4489 = shufflevector <8 x i32> %4488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4490 = getelementptr inbounds i32, ptr %4483, i64 -23
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !5
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4483, i64 -31
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !5
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = mul <8 x i32> %4486, %4478
  %4497 = mul <8 x i32> %4489, %4479
  %4498 = mul <8 x i32> %4492, %4480
  %4499 = mul <8 x i32> %4495, %4481
  %4500 = add nuw i64 %4477, 32
  %4501 = icmp eq i64 %4500, %4474
  br i1 %4501, label %4502, label %4476, !llvm.loop !1449

4502:                                             ; preds = %4476
  %4503 = mul <8 x i32> %4497, %4496
  %4504 = mul <8 x i32> %4498, %4503
  %4505 = mul <8 x i32> %4499, %4504
  %4506 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4505)
  %4507 = icmp eq i64 %4470, %4474
  br i1 %4507, label %4520, label %4508

4508:                                             ; preds = %4461, %4502
  %4509 = phi i64 [ %4464, %4461 ], [ %4475, %4502 ]
  %4510 = phi i32 [ 1, %4461 ], [ %4506, %4502 ]
  br label %4511

4511:                                             ; preds = %4508, %4511
  %4512 = phi i64 [ %4517, %4511 ], [ %4509, %4508 ]
  %4513 = phi i32 [ %4516, %4511 ], [ %4510, %4508 ]
  %4514 = getelementptr inbounds i32, ptr %11, i64 %4512
  %4515 = load i32, ptr %4514, align 4, !tbaa !5
  %4516 = mul nsw i32 %4515, %4513
  %4517 = add nsw i64 %4512, -1
  %4518 = trunc i64 %4512 to i32
  %4519 = icmp sgt i32 %4518, 0
  br i1 %4519, label %4511, label %4520, !llvm.loop !1450

4520:                                             ; preds = %4511, %4502
  %4521 = phi i32 [ %4506, %4502 ], [ %4516, %4511 ]
  %4522 = and i64 %4471, 4294967295
  %4523 = getelementptr inbounds i32, ptr %6, i64 %4522
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = mul nsw i32 %4524, %4521
  %4526 = add nsw i32 %4525, %4465
  %4527 = icmp sgt i64 %4463, 2
  %4528 = add nsw i64 %4464, -1
  %4529 = add i32 %4462, 1
  br i1 %4527, label %4461, label %4530, !llvm.loop !1451

4530:                                             ; preds = %4520, %4457
  %4531 = phi i32 [ %4460, %4457 ], [ %4526, %4520 ]
  %4532 = icmp slt i32 %4531, %5
  br i1 %4532, label %4535, label %4533

4533:                                             ; preds = %4530
  %4534 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4535:                                             ; preds = %4530
  %4536 = sext i32 %4531 to i64
  %4537 = getelementptr inbounds double, ptr %4286, i64 %4536
  %4538 = load double, ptr %4537, align 8, !tbaa !18
  %4539 = fptrunc double %4538 to float
  %4540 = fpext float %4458 to double
  %4541 = fpext float %4539 to double
  %4542 = fcmp fast olt float %4539, 0.000000e+00
  %4543 = fneg fast double %4541
  %4544 = select fast i1 %4542, double %4543, double %4541
  %4545 = fadd fast double %4544, %4540
  %4546 = fptrunc double %4545 to float
  store float %4546, ptr %4288, align 4, !tbaa !162
  %4547 = add nuw nsw i32 %4459, 1
  br i1 %4303, label %4548, label %4598

4548:                                             ; preds = %4535
  %4549 = load i32, ptr %4, align 4, !tbaa !5
  %4550 = load i32, ptr %12, align 4, !tbaa !5
  %4551 = add nsw i32 %4550, -1
  %4552 = icmp slt i32 %4549, %4551
  br i1 %4552, label %4575, label %4553

4553:                                             ; preds = %4548
  %4554 = icmp eq i32 %4549, %4551
  br i1 %4554, label %4555, label %4591

4555:                                             ; preds = %4553
  store i32 0, ptr %4, align 4, !tbaa !5
  %4556 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4556, ptr %6, align 4, !tbaa !5
  br i1 %4308, label %4598, label %4557

4557:                                             ; preds = %4555, %4585
  %4558 = phi i64 [ %4589, %4585 ], [ 1, %4555 ]
  %4559 = getelementptr inbounds i32, ptr %4, i64 %4558
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %12, i64 %4558
  %4562 = load i32, ptr %4561, align 4, !tbaa !5
  %4563 = add nsw i32 %4562, -1
  %4564 = icmp slt i32 %4560, %4563
  br i1 %4564, label %4565, label %4583

4565:                                             ; preds = %4557
  br i1 %4552, label %4575, label %4566

4566:                                             ; preds = %4565
  %4567 = shl i64 %4558, 32
  %4568 = add i64 %4567, -4294967296
  %4569 = ashr exact i64 %4568, 32
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4569
  %4571 = load i32, ptr %4570, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4558
  %4573 = load i32, ptr %4572, align 4, !tbaa !5
  %4574 = add nsw i32 %4573, %4571
  store i32 %4574, ptr %4572, align 4, !tbaa !5
  br label %4593

4575:                                             ; preds = %4548, %4565
  %4576 = phi i32 [ %4560, %4565 ], [ %4549, %4548 ]
  %4577 = phi ptr [ %4559, %4565 ], [ %4, %4548 ]
  %4578 = phi i64 [ %4558, %4565 ], [ 0, %4548 ]
  %4579 = add nsw i32 %4576, 1
  store i32 %4579, ptr %4577, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %7, i64 %4578
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = getelementptr inbounds i32, ptr %6, i64 %4578
  br label %4593

4583:                                             ; preds = %4557
  %4584 = icmp eq i32 %4560, %4563
  br i1 %4584, label %4585, label %4591

4585:                                             ; preds = %4583
  store i32 0, ptr %4559, align 4, !tbaa !5
  %4586 = getelementptr inbounds i32, ptr %8, i64 %4558
  %4587 = load i32, ptr %4586, align 4, !tbaa !5
  %4588 = getelementptr inbounds i32, ptr %6, i64 %4558
  store i32 %4587, ptr %4588, align 4, !tbaa !5
  %4589 = add nuw nsw i64 %4558, 1
  %4590 = icmp eq i64 %4589, %4306
  br i1 %4590, label %4598, label %4557, !llvm.loop !1452

4591:                                             ; preds = %4553, %4583
  %4592 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4593:                                             ; preds = %4566, %4575
  %4594 = phi ptr [ %4582, %4575 ], [ %4559, %4566 ]
  %4595 = phi i32 [ %4581, %4575 ], [ 1, %4566 ]
  %4596 = load i32, ptr %4594, align 4, !tbaa !5
  %4597 = add nsw i32 %4596, %4595
  store i32 %4597, ptr %4594, align 4, !tbaa !5
  br label %4598

4598:                                             ; preds = %4585, %4593, %4555, %4535
  %4599 = icmp eq i32 %4547, %5
  br i1 %4599, label %5501, label %4457, !llvm.loop !1453

4600:                                             ; preds = %4294
  %4601 = getelementptr inbounds i32, ptr %3, i64 %19
  %4602 = load i32, ptr %4601, align 4, !tbaa !5
  %4603 = icmp eq i32 %4602, 0
  %4604 = icmp sgt i32 %5, 0
  br i1 %4603, label %4614, label %4605

4605:                                             ; preds = %4600
  br i1 %4604, label %4606, label %5501

4606:                                             ; preds = %4605
  %4607 = icmp sgt i32 %13, 1
  %4608 = icmp sgt i32 %13, 0
  %4609 = add i32 %13, -2
  %4610 = zext i32 %4609 to i64
  %4611 = zext i32 %13 to i64
  %4612 = add nuw i32 %5, 1
  %4613 = icmp eq i32 %13, 1
  br label %4756

4614:                                             ; preds = %4600
  br i1 %4604, label %4615, label %5501

4615:                                             ; preds = %4614
  %4616 = icmp sgt i32 %13, 1
  %4617 = icmp sgt i32 %13, 0
  %4618 = add i32 %13, -2
  %4619 = zext i32 %4618 to i64
  %4620 = zext i32 %13 to i64
  %4621 = add nuw i32 %5, 1
  %4622 = icmp eq i32 %13, 1
  br label %4623

4623:                                             ; preds = %4615, %4754
  %4624 = phi float [ 0.000000e+00, %4615 ], [ %4704, %4754 ]
  %4625 = phi i32 [ 0, %4615 ], [ %4706, %4754 ]
  %4626 = phi double [ 0.000000e+00, %4615 ], [ %4705, %4754 ]
  %4627 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4616, label %4628, label %4697

4628:                                             ; preds = %4623, %4687
  %4629 = phi i32 [ %4696, %4687 ], [ 0, %4623 ]
  %4630 = phi i64 [ %4638, %4687 ], [ %4620, %4623 ]
  %4631 = phi i64 [ %4695, %4687 ], [ %4619, %4623 ]
  %4632 = phi i32 [ %4693, %4687 ], [ %4627, %4623 ]
  %4633 = sub i32 %4618, %4629
  %4634 = tail call i32 @llvm.smin.i32(i32 %4633, i32 0)
  %4635 = sub i32 %4633, %4634
  %4636 = zext i32 %4635 to i64
  %4637 = add nuw nsw i64 %4636, 1
  %4638 = add nsw i64 %4630, -1
  %4639 = icmp ult i32 %4635, 31
  br i1 %4639, label %4675, label %4640

4640:                                             ; preds = %4628
  %4641 = and i64 %4637, 8589934560
  %4642 = sub i64 %4631, %4641
  br label %4643

4643:                                             ; preds = %4643, %4640
  %4644 = phi i64 [ 0, %4640 ], [ %4667, %4643 ]
  %4645 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4663, %4643 ]
  %4646 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4664, %4643 ]
  %4647 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4665, %4643 ]
  %4648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4640 ], [ %4666, %4643 ]
  %4649 = sub i64 %4631, %4644
  %4650 = getelementptr inbounds i32, ptr %9, i64 %4649
  %4651 = getelementptr inbounds i32, ptr %4650, i64 -7
  %4652 = load <8 x i32>, ptr %4651, align 4, !tbaa !5
  %4653 = shufflevector <8 x i32> %4652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4654 = getelementptr inbounds i32, ptr %4650, i64 -15
  %4655 = load <8 x i32>, ptr %4654, align 4, !tbaa !5
  %4656 = shufflevector <8 x i32> %4655, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4657 = getelementptr inbounds i32, ptr %4650, i64 -23
  %4658 = load <8 x i32>, ptr %4657, align 4, !tbaa !5
  %4659 = shufflevector <8 x i32> %4658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4660 = getelementptr inbounds i32, ptr %4650, i64 -31
  %4661 = load <8 x i32>, ptr %4660, align 4, !tbaa !5
  %4662 = shufflevector <8 x i32> %4661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4663 = mul <8 x i32> %4653, %4645
  %4664 = mul <8 x i32> %4656, %4646
  %4665 = mul <8 x i32> %4659, %4647
  %4666 = mul <8 x i32> %4662, %4648
  %4667 = add nuw i64 %4644, 32
  %4668 = icmp eq i64 %4667, %4641
  br i1 %4668, label %4669, label %4643, !llvm.loop !1454

4669:                                             ; preds = %4643
  %4670 = mul <8 x i32> %4664, %4663
  %4671 = mul <8 x i32> %4665, %4670
  %4672 = mul <8 x i32> %4666, %4671
  %4673 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4672)
  %4674 = icmp eq i64 %4637, %4641
  br i1 %4674, label %4687, label %4675

4675:                                             ; preds = %4628, %4669
  %4676 = phi i64 [ %4631, %4628 ], [ %4642, %4669 ]
  %4677 = phi i32 [ 1, %4628 ], [ %4673, %4669 ]
  br label %4678

4678:                                             ; preds = %4675, %4678
  %4679 = phi i64 [ %4684, %4678 ], [ %4676, %4675 ]
  %4680 = phi i32 [ %4683, %4678 ], [ %4677, %4675 ]
  %4681 = getelementptr inbounds i32, ptr %9, i64 %4679
  %4682 = load i32, ptr %4681, align 4, !tbaa !5
  %4683 = mul nsw i32 %4682, %4680
  %4684 = add nsw i64 %4679, -1
  %4685 = trunc i64 %4679 to i32
  %4686 = icmp sgt i32 %4685, 0
  br i1 %4686, label %4678, label %4687, !llvm.loop !1455

4687:                                             ; preds = %4678, %4669
  %4688 = phi i32 [ %4673, %4669 ], [ %4683, %4678 ]
  %4689 = and i64 %4638, 4294967295
  %4690 = getelementptr inbounds i32, ptr %6, i64 %4689
  %4691 = load i32, ptr %4690, align 4, !tbaa !5
  %4692 = mul nsw i32 %4691, %4688
  %4693 = add nsw i32 %4692, %4632
  %4694 = icmp sgt i64 %4630, 2
  %4695 = add nsw i64 %4631, -1
  %4696 = add i32 %4629, 1
  br i1 %4694, label %4628, label %4697, !llvm.loop !1456

4697:                                             ; preds = %4687, %4623
  %4698 = phi i32 [ %4627, %4623 ], [ %4693, %4687 ]
  %4699 = sext i32 %4698 to i64
  %4700 = getelementptr inbounds double, ptr %4286, i64 %4699
  %4701 = load double, ptr %4700, align 8, !tbaa !18
  %4702 = fptrunc double %4701 to float
  %4703 = tail call fast float @llvm.fabs.f32(float %4702)
  %4704 = fadd fast float %4703, %4624
  %4705 = fadd fast double %4626, 1.000000e+00
  %4706 = add nuw nsw i32 %4625, 1
  br i1 %4617, label %4707, label %4754

4707:                                             ; preds = %4697
  %4708 = load i32, ptr %4, align 4, !tbaa !5
  %4709 = load i32, ptr %12, align 4, !tbaa !5
  %4710 = add nsw i32 %4709, -1
  %4711 = icmp slt i32 %4708, %4710
  br i1 %4711, label %4731, label %4712

4712:                                             ; preds = %4707
  %4713 = icmp eq i32 %4708, %4710
  br i1 %4713, label %4714, label %4747

4714:                                             ; preds = %4712
  store i32 0, ptr %4, align 4, !tbaa !5
  %4715 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4715, ptr %6, align 4, !tbaa !5
  br i1 %4622, label %4754, label %4716

4716:                                             ; preds = %4714, %4741
  %4717 = phi i64 [ %4745, %4741 ], [ 1, %4714 ]
  %4718 = getelementptr inbounds i32, ptr %4, i64 %4717
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = getelementptr inbounds i32, ptr %12, i64 %4717
  %4721 = load i32, ptr %4720, align 4, !tbaa !5
  %4722 = add nsw i32 %4721, -1
  %4723 = icmp slt i32 %4719, %4722
  br i1 %4723, label %4724, label %4739

4724:                                             ; preds = %4716
  br i1 %4711, label %4731, label %4725

4725:                                             ; preds = %4724
  %4726 = getelementptr inbounds i32, ptr %7, i64 %4717
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4717
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = add nsw i32 %4729, %4727
  store i32 %4730, ptr %4728, align 4, !tbaa !5
  br label %4749

4731:                                             ; preds = %4707, %4724
  %4732 = phi i32 [ %4719, %4724 ], [ %4708, %4707 ]
  %4733 = phi ptr [ %4718, %4724 ], [ %4, %4707 ]
  %4734 = phi i64 [ %4717, %4724 ], [ 0, %4707 ]
  %4735 = add nsw i32 %4732, 1
  store i32 %4735, ptr %4733, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %7, i64 %4734
  %4737 = load i32, ptr %4736, align 4, !tbaa !5
  %4738 = getelementptr inbounds i32, ptr %6, i64 %4734
  br label %4749

4739:                                             ; preds = %4716
  %4740 = icmp eq i32 %4719, %4722
  br i1 %4740, label %4741, label %4747

4741:                                             ; preds = %4739
  store i32 0, ptr %4718, align 4, !tbaa !5
  %4742 = getelementptr inbounds i32, ptr %8, i64 %4717
  %4743 = load i32, ptr %4742, align 4, !tbaa !5
  %4744 = getelementptr inbounds i32, ptr %6, i64 %4717
  store i32 %4743, ptr %4744, align 4, !tbaa !5
  %4745 = add nuw nsw i64 %4717, 1
  %4746 = icmp eq i64 %4745, %4620
  br i1 %4746, label %4754, label %4716, !llvm.loop !1457

4747:                                             ; preds = %4712, %4739
  store float %4704, ptr %4288, align 4, !tbaa !162
  %4748 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4749:                                             ; preds = %4725, %4731
  %4750 = phi ptr [ %4738, %4731 ], [ %4718, %4725 ]
  %4751 = phi i32 [ %4737, %4731 ], [ 1, %4725 ]
  %4752 = load i32, ptr %4750, align 4, !tbaa !5
  %4753 = add nsw i32 %4752, %4751
  store i32 %4753, ptr %4750, align 4, !tbaa !5
  br label %4754

4754:                                             ; preds = %4741, %4749, %4714, %4697
  %4755 = icmp eq i32 %4706, %5
  br i1 %4755, label %5500, label %4623, !llvm.loop !1458

4756:                                             ; preds = %4606, %4892
  %4757 = phi float [ 0.000000e+00, %4606 ], [ %4840, %4892 ]
  %4758 = phi i32 [ 0, %4606 ], [ %4841, %4892 ]
  %4759 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4607, label %4760, label %4829

4760:                                             ; preds = %4756, %4819
  %4761 = phi i32 [ %4828, %4819 ], [ 0, %4756 ]
  %4762 = phi i64 [ %4770, %4819 ], [ %4611, %4756 ]
  %4763 = phi i64 [ %4827, %4819 ], [ %4610, %4756 ]
  %4764 = phi i32 [ %4825, %4819 ], [ %4759, %4756 ]
  %4765 = sub i32 %4609, %4761
  %4766 = tail call i32 @llvm.smin.i32(i32 %4765, i32 0)
  %4767 = sub i32 %4765, %4766
  %4768 = zext i32 %4767 to i64
  %4769 = add nuw nsw i64 %4768, 1
  %4770 = add nsw i64 %4762, -1
  %4771 = icmp ult i32 %4767, 31
  br i1 %4771, label %4807, label %4772

4772:                                             ; preds = %4760
  %4773 = and i64 %4769, 8589934560
  %4774 = sub i64 %4763, %4773
  br label %4775

4775:                                             ; preds = %4775, %4772
  %4776 = phi i64 [ 0, %4772 ], [ %4799, %4775 ]
  %4777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4795, %4775 ]
  %4778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4796, %4775 ]
  %4779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4797, %4775 ]
  %4780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4772 ], [ %4798, %4775 ]
  %4781 = sub i64 %4763, %4776
  %4782 = getelementptr inbounds i32, ptr %11, i64 %4781
  %4783 = getelementptr inbounds i32, ptr %4782, i64 -7
  %4784 = load <8 x i32>, ptr %4783, align 4, !tbaa !5
  %4785 = shufflevector <8 x i32> %4784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4786 = getelementptr inbounds i32, ptr %4782, i64 -15
  %4787 = load <8 x i32>, ptr %4786, align 4, !tbaa !5
  %4788 = shufflevector <8 x i32> %4787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4789 = getelementptr inbounds i32, ptr %4782, i64 -23
  %4790 = load <8 x i32>, ptr %4789, align 4, !tbaa !5
  %4791 = shufflevector <8 x i32> %4790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4792 = getelementptr inbounds i32, ptr %4782, i64 -31
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !5
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = mul <8 x i32> %4785, %4777
  %4796 = mul <8 x i32> %4788, %4778
  %4797 = mul <8 x i32> %4791, %4779
  %4798 = mul <8 x i32> %4794, %4780
  %4799 = add nuw i64 %4776, 32
  %4800 = icmp eq i64 %4799, %4773
  br i1 %4800, label %4801, label %4775, !llvm.loop !1459

4801:                                             ; preds = %4775
  %4802 = mul <8 x i32> %4796, %4795
  %4803 = mul <8 x i32> %4797, %4802
  %4804 = mul <8 x i32> %4798, %4803
  %4805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4804)
  %4806 = icmp eq i64 %4769, %4773
  br i1 %4806, label %4819, label %4807

4807:                                             ; preds = %4760, %4801
  %4808 = phi i64 [ %4763, %4760 ], [ %4774, %4801 ]
  %4809 = phi i32 [ 1, %4760 ], [ %4805, %4801 ]
  br label %4810

4810:                                             ; preds = %4807, %4810
  %4811 = phi i64 [ %4816, %4810 ], [ %4808, %4807 ]
  %4812 = phi i32 [ %4815, %4810 ], [ %4809, %4807 ]
  %4813 = getelementptr inbounds i32, ptr %11, i64 %4811
  %4814 = load i32, ptr %4813, align 4, !tbaa !5
  %4815 = mul nsw i32 %4814, %4812
  %4816 = add nsw i64 %4811, -1
  %4817 = trunc i64 %4811 to i32
  %4818 = icmp sgt i32 %4817, 0
  br i1 %4818, label %4810, label %4819, !llvm.loop !1460

4819:                                             ; preds = %4810, %4801
  %4820 = phi i32 [ %4805, %4801 ], [ %4815, %4810 ]
  %4821 = and i64 %4770, 4294967295
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4821
  %4823 = load i32, ptr %4822, align 4, !tbaa !5
  %4824 = mul nsw i32 %4823, %4820
  %4825 = add nsw i32 %4824, %4764
  %4826 = icmp sgt i64 %4762, 2
  %4827 = add nsw i64 %4763, -1
  %4828 = add i32 %4761, 1
  br i1 %4826, label %4760, label %4829, !llvm.loop !1461

4829:                                             ; preds = %4819, %4756
  %4830 = phi i32 [ %4759, %4756 ], [ %4825, %4819 ]
  %4831 = icmp slt i32 %4830, %5
  br i1 %4831, label %4834, label %4832

4832:                                             ; preds = %4829
  %4833 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

4834:                                             ; preds = %4829
  %4835 = sext i32 %4830 to i64
  %4836 = getelementptr inbounds double, ptr %4286, i64 %4835
  %4837 = load double, ptr %4836, align 8, !tbaa !18
  %4838 = fptrunc double %4837 to float
  %4839 = tail call fast float @llvm.fabs.f32(float %4838)
  %4840 = fadd fast float %4839, %4757
  store float %4840, ptr %4288, align 4, !tbaa !162
  %4841 = add nuw nsw i32 %4758, 1
  br i1 %4608, label %4842, label %4892

4842:                                             ; preds = %4834
  %4843 = load i32, ptr %4, align 4, !tbaa !5
  %4844 = load i32, ptr %12, align 4, !tbaa !5
  %4845 = add nsw i32 %4844, -1
  %4846 = icmp slt i32 %4843, %4845
  br i1 %4846, label %4869, label %4847

4847:                                             ; preds = %4842
  %4848 = icmp eq i32 %4843, %4845
  br i1 %4848, label %4849, label %4885

4849:                                             ; preds = %4847
  store i32 0, ptr %4, align 4, !tbaa !5
  %4850 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4850, ptr %6, align 4, !tbaa !5
  br i1 %4613, label %4892, label %4851

4851:                                             ; preds = %4849, %4879
  %4852 = phi i64 [ %4883, %4879 ], [ 1, %4849 ]
  %4853 = getelementptr inbounds i32, ptr %4, i64 %4852
  %4854 = load i32, ptr %4853, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %12, i64 %4852
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = add nsw i32 %4856, -1
  %4858 = icmp slt i32 %4854, %4857
  br i1 %4858, label %4859, label %4877

4859:                                             ; preds = %4851
  br i1 %4846, label %4869, label %4860

4860:                                             ; preds = %4859
  %4861 = shl i64 %4852, 32
  %4862 = add i64 %4861, -4294967296
  %4863 = ashr exact i64 %4862, 32
  %4864 = getelementptr inbounds i32, ptr %7, i64 %4863
  %4865 = load i32, ptr %4864, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4852
  %4867 = load i32, ptr %4866, align 4, !tbaa !5
  %4868 = add nsw i32 %4867, %4865
  store i32 %4868, ptr %4866, align 4, !tbaa !5
  br label %4887

4869:                                             ; preds = %4842, %4859
  %4870 = phi i32 [ %4854, %4859 ], [ %4843, %4842 ]
  %4871 = phi ptr [ %4853, %4859 ], [ %4, %4842 ]
  %4872 = phi i64 [ %4852, %4859 ], [ 0, %4842 ]
  %4873 = add nsw i32 %4870, 1
  store i32 %4873, ptr %4871, align 4, !tbaa !5
  %4874 = getelementptr inbounds i32, ptr %7, i64 %4872
  %4875 = load i32, ptr %4874, align 4, !tbaa !5
  %4876 = getelementptr inbounds i32, ptr %6, i64 %4872
  br label %4887

4877:                                             ; preds = %4851
  %4878 = icmp eq i32 %4854, %4857
  br i1 %4878, label %4879, label %4885

4879:                                             ; preds = %4877
  store i32 0, ptr %4853, align 4, !tbaa !5
  %4880 = getelementptr inbounds i32, ptr %8, i64 %4852
  %4881 = load i32, ptr %4880, align 4, !tbaa !5
  %4882 = getelementptr inbounds i32, ptr %6, i64 %4852
  store i32 %4881, ptr %4882, align 4, !tbaa !5
  %4883 = add nuw nsw i64 %4852, 1
  %4884 = icmp eq i64 %4883, %4611
  br i1 %4884, label %4892, label %4851, !llvm.loop !1462

4885:                                             ; preds = %4847, %4877
  %4886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

4887:                                             ; preds = %4860, %4869
  %4888 = phi ptr [ %4876, %4869 ], [ %4853, %4860 ]
  %4889 = phi i32 [ %4875, %4869 ], [ 1, %4860 ]
  %4890 = load i32, ptr %4888, align 4, !tbaa !5
  %4891 = add nsw i32 %4890, %4889
  store i32 %4891, ptr %4888, align 4, !tbaa !5
  br label %4892

4892:                                             ; preds = %4879, %4887, %4849, %4834
  %4893 = icmp eq i32 %4841, %5
  br i1 %4893, label %5501, label %4756, !llvm.loop !1463

4894:                                             ; preds = %4294
  %4895 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

4896:                                             ; preds = %18
  %4897 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4898 = load ptr, ptr %4897, align 8, !tbaa !9
  %4899 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4900 = load ptr, ptr %4899, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4900, align 8, !tbaa !18
  %4901 = icmp eq i32 %13, 0
  br i1 %4901, label %4902, label %4905

4902:                                             ; preds = %4896
  %4903 = load double, ptr %4898, align 8, !tbaa !18
  %4904 = tail call fast double @llvm.fabs.f64(double %4903)
  store double %4904, ptr %4900, align 8, !tbaa !18
  br label %5501

4905:                                             ; preds = %4896
  switch i32 %1, label %5493 [
    i32 1, label %4906
    i32 0, label %5201
  ]

4906:                                             ; preds = %4905
  %4907 = getelementptr inbounds i32, ptr %3, i64 %19
  %4908 = load i32, ptr %4907, align 4, !tbaa !5
  %4909 = icmp eq i32 %4908, 0
  %4910 = icmp sgt i32 %5, 0
  br i1 %4909, label %4920, label %4911

4911:                                             ; preds = %4906
  br i1 %4910, label %4912, label %5501

4912:                                             ; preds = %4911
  %4913 = icmp sgt i32 %13, 1
  %4914 = icmp sgt i32 %13, 0
  %4915 = add i32 %13, -2
  %4916 = zext i32 %4915 to i64
  %4917 = zext i32 %13 to i64
  %4918 = add nuw i32 %5, 1
  %4919 = icmp eq i32 %13, 1
  br label %5064

4920:                                             ; preds = %4906
  br i1 %4910, label %4921, label %5501

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %4929

4929:                                             ; preds = %4921, %5062
  %4930 = phi double [ 0.000000e+00, %4921 ], [ %5012, %5062 ]
  %4931 = phi i32 [ 0, %4921 ], [ %5014, %5062 ]
  %4932 = phi double [ 0.000000e+00, %4921 ], [ %5013, %5062 ]
  %4933 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4922, label %4934, label %5003

4934:                                             ; preds = %4929, %4993
  %4935 = phi i32 [ %5002, %4993 ], [ 0, %4929 ]
  %4936 = phi i64 [ %4944, %4993 ], [ %4926, %4929 ]
  %4937 = phi i64 [ %5001, %4993 ], [ %4925, %4929 ]
  %4938 = phi i32 [ %4999, %4993 ], [ %4933, %4929 ]
  %4939 = sub i32 %4924, %4935
  %4940 = tail call i32 @llvm.smin.i32(i32 %4939, i32 0)
  %4941 = sub i32 %4939, %4940
  %4942 = zext i32 %4941 to i64
  %4943 = add nuw nsw i64 %4942, 1
  %4944 = add nsw i64 %4936, -1
  %4945 = icmp ult i32 %4941, 31
  br i1 %4945, label %4981, label %4946

4946:                                             ; preds = %4934
  %4947 = and i64 %4943, 8589934560
  %4948 = sub i64 %4937, %4947
  br label %4949

4949:                                             ; preds = %4949, %4946
  %4950 = phi i64 [ 0, %4946 ], [ %4973, %4949 ]
  %4951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4969, %4949 ]
  %4952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4970, %4949 ]
  %4953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4971, %4949 ]
  %4954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4946 ], [ %4972, %4949 ]
  %4955 = sub i64 %4937, %4950
  %4956 = getelementptr inbounds i32, ptr %9, i64 %4955
  %4957 = getelementptr inbounds i32, ptr %4956, i64 -7
  %4958 = load <8 x i32>, ptr %4957, align 4, !tbaa !5
  %4959 = shufflevector <8 x i32> %4958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4960 = getelementptr inbounds i32, ptr %4956, i64 -15
  %4961 = load <8 x i32>, ptr %4960, align 4, !tbaa !5
  %4962 = shufflevector <8 x i32> %4961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4963 = getelementptr inbounds i32, ptr %4956, i64 -23
  %4964 = load <8 x i32>, ptr %4963, align 4, !tbaa !5
  %4965 = shufflevector <8 x i32> %4964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4966 = getelementptr inbounds i32, ptr %4956, i64 -31
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !5
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = mul <8 x i32> %4959, %4951
  %4970 = mul <8 x i32> %4962, %4952
  %4971 = mul <8 x i32> %4965, %4953
  %4972 = mul <8 x i32> %4968, %4954
  %4973 = add nuw i64 %4950, 32
  %4974 = icmp eq i64 %4973, %4947
  br i1 %4974, label %4975, label %4949, !llvm.loop !1464

4975:                                             ; preds = %4949
  %4976 = mul <8 x i32> %4970, %4969
  %4977 = mul <8 x i32> %4971, %4976
  %4978 = mul <8 x i32> %4972, %4977
  %4979 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4978)
  %4980 = icmp eq i64 %4943, %4947
  br i1 %4980, label %4993, label %4981

4981:                                             ; preds = %4934, %4975
  %4982 = phi i64 [ %4937, %4934 ], [ %4948, %4975 ]
  %4983 = phi i32 [ 1, %4934 ], [ %4979, %4975 ]
  br label %4984

4984:                                             ; preds = %4981, %4984
  %4985 = phi i64 [ %4990, %4984 ], [ %4982, %4981 ]
  %4986 = phi i32 [ %4989, %4984 ], [ %4983, %4981 ]
  %4987 = getelementptr inbounds i32, ptr %9, i64 %4985
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = mul nsw i32 %4988, %4986
  %4990 = add nsw i64 %4985, -1
  %4991 = trunc i64 %4985 to i32
  %4992 = icmp sgt i32 %4991, 0
  br i1 %4992, label %4984, label %4993, !llvm.loop !1465

4993:                                             ; preds = %4984, %4975
  %4994 = phi i32 [ %4979, %4975 ], [ %4989, %4984 ]
  %4995 = and i64 %4944, 4294967295
  %4996 = getelementptr inbounds i32, ptr %6, i64 %4995
  %4997 = load i32, ptr %4996, align 4, !tbaa !5
  %4998 = mul nsw i32 %4997, %4994
  %4999 = add nsw i32 %4998, %4938
  %5000 = icmp sgt i64 %4936, 2
  %5001 = add nsw i64 %4937, -1
  %5002 = add i32 %4935, 1
  br i1 %5000, label %4934, label %5003, !llvm.loop !1466

5003:                                             ; preds = %4993, %4929
  %5004 = phi i32 [ %4933, %4929 ], [ %4999, %4993 ]
  %5005 = sext i32 %5004 to i64
  %5006 = getelementptr inbounds double, ptr %2, i64 %5005
  %5007 = load double, ptr %5006, align 8, !tbaa !18
  %5008 = getelementptr inbounds double, ptr %4898, i64 %5005
  %5009 = load double, ptr %5008, align 8, !tbaa !18
  %5010 = fmul fast double %5009, %5007
  %5011 = tail call fast double @llvm.fabs.f64(double %5010)
  %5012 = fadd fast double %5011, %4930
  store double %5012, ptr %4900, align 8, !tbaa !18
  %5013 = fadd fast double %5007, %4932
  %5014 = add nuw nsw i32 %4931, 1
  br i1 %4923, label %5015, label %5062

5015:                                             ; preds = %5003
  %5016 = load i32, ptr %4, align 4, !tbaa !5
  %5017 = load i32, ptr %12, align 4, !tbaa !5
  %5018 = add nsw i32 %5017, -1
  %5019 = icmp slt i32 %5016, %5018
  br i1 %5019, label %5039, label %5020

5020:                                             ; preds = %5015
  %5021 = icmp eq i32 %5016, %5018
  br i1 %5021, label %5022, label %5055

5022:                                             ; preds = %5020
  store i32 0, ptr %4, align 4, !tbaa !5
  %5023 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5023, ptr %6, align 4, !tbaa !5
  br i1 %4928, label %5062, label %5024

5024:                                             ; preds = %5022, %5049
  %5025 = phi i64 [ %5053, %5049 ], [ 1, %5022 ]
  %5026 = getelementptr inbounds i32, ptr %4, i64 %5025
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %12, i64 %5025
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = add nsw i32 %5029, -1
  %5031 = icmp slt i32 %5027, %5030
  br i1 %5031, label %5032, label %5047

5032:                                             ; preds = %5024
  br i1 %5019, label %5039, label %5033

5033:                                             ; preds = %5032
  %5034 = getelementptr inbounds i32, ptr %7, i64 %5025
  %5035 = load i32, ptr %5034, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %6, i64 %5025
  %5037 = load i32, ptr %5036, align 4, !tbaa !5
  %5038 = add nsw i32 %5037, %5035
  store i32 %5038, ptr %5036, align 4, !tbaa !5
  br label %5057

5039:                                             ; preds = %5015, %5032
  %5040 = phi i32 [ %5027, %5032 ], [ %5016, %5015 ]
  %5041 = phi ptr [ %5026, %5032 ], [ %4, %5015 ]
  %5042 = phi i64 [ %5025, %5032 ], [ 0, %5015 ]
  %5043 = add nsw i32 %5040, 1
  store i32 %5043, ptr %5041, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %7, i64 %5042
  %5045 = load i32, ptr %5044, align 4, !tbaa !5
  %5046 = getelementptr inbounds i32, ptr %6, i64 %5042
  br label %5057

5047:                                             ; preds = %5024
  %5048 = icmp eq i32 %5027, %5030
  br i1 %5048, label %5049, label %5055

5049:                                             ; preds = %5047
  store i32 0, ptr %5026, align 4, !tbaa !5
  %5050 = getelementptr inbounds i32, ptr %8, i64 %5025
  %5051 = load i32, ptr %5050, align 4, !tbaa !5
  %5052 = getelementptr inbounds i32, ptr %6, i64 %5025
  store i32 %5051, ptr %5052, align 4, !tbaa !5
  %5053 = add nuw nsw i64 %5025, 1
  %5054 = icmp eq i64 %5053, %4926
  br i1 %5054, label %5062, label %5024, !llvm.loop !1467

5055:                                             ; preds = %5020, %5047
  %5056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5057:                                             ; preds = %5033, %5039
  %5058 = phi ptr [ %5046, %5039 ], [ %5026, %5033 ]
  %5059 = phi i32 [ %5045, %5039 ], [ 1, %5033 ]
  %5060 = load i32, ptr %5058, align 4, !tbaa !5
  %5061 = add nsw i32 %5060, %5059
  store i32 %5061, ptr %5058, align 4, !tbaa !5
  br label %5062

5062:                                             ; preds = %5049, %5057, %5022, %5003
  %5063 = icmp eq i32 %5014, %5
  br i1 %5063, label %5501, label %4929, !llvm.loop !1468

5064:                                             ; preds = %4912, %5199
  %5065 = phi double [ 0.000000e+00, %4912 ], [ %5147, %5199 ]
  %5066 = phi i32 [ 0, %4912 ], [ %5148, %5199 ]
  %5067 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4913, label %5068, label %5137

5068:                                             ; preds = %5064, %5127
  %5069 = phi i32 [ %5136, %5127 ], [ 0, %5064 ]
  %5070 = phi i64 [ %5078, %5127 ], [ %4917, %5064 ]
  %5071 = phi i64 [ %5135, %5127 ], [ %4916, %5064 ]
  %5072 = phi i32 [ %5133, %5127 ], [ %5067, %5064 ]
  %5073 = sub i32 %4915, %5069
  %5074 = tail call i32 @llvm.smin.i32(i32 %5073, i32 0)
  %5075 = sub i32 %5073, %5074
  %5076 = zext i32 %5075 to i64
  %5077 = add nuw nsw i64 %5076, 1
  %5078 = add nsw i64 %5070, -1
  %5079 = icmp ult i32 %5075, 31
  br i1 %5079, label %5115, label %5080

5080:                                             ; preds = %5068
  %5081 = and i64 %5077, 8589934560
  %5082 = sub i64 %5071, %5081
  br label %5083

5083:                                             ; preds = %5083, %5080
  %5084 = phi i64 [ 0, %5080 ], [ %5107, %5083 ]
  %5085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5103, %5083 ]
  %5086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5104, %5083 ]
  %5087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5105, %5083 ]
  %5088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5080 ], [ %5106, %5083 ]
  %5089 = sub i64 %5071, %5084
  %5090 = getelementptr inbounds i32, ptr %11, i64 %5089
  %5091 = getelementptr inbounds i32, ptr %5090, i64 -7
  %5092 = load <8 x i32>, ptr %5091, align 4, !tbaa !5
  %5093 = shufflevector <8 x i32> %5092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5094 = getelementptr inbounds i32, ptr %5090, i64 -15
  %5095 = load <8 x i32>, ptr %5094, align 4, !tbaa !5
  %5096 = shufflevector <8 x i32> %5095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5097 = getelementptr inbounds i32, ptr %5090, i64 -23
  %5098 = load <8 x i32>, ptr %5097, align 4, !tbaa !5
  %5099 = shufflevector <8 x i32> %5098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5100 = getelementptr inbounds i32, ptr %5090, i64 -31
  %5101 = load <8 x i32>, ptr %5100, align 4, !tbaa !5
  %5102 = shufflevector <8 x i32> %5101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5103 = mul <8 x i32> %5093, %5085
  %5104 = mul <8 x i32> %5096, %5086
  %5105 = mul <8 x i32> %5099, %5087
  %5106 = mul <8 x i32> %5102, %5088
  %5107 = add nuw i64 %5084, 32
  %5108 = icmp eq i64 %5107, %5081
  br i1 %5108, label %5109, label %5083, !llvm.loop !1469

5109:                                             ; preds = %5083
  %5110 = mul <8 x i32> %5104, %5103
  %5111 = mul <8 x i32> %5105, %5110
  %5112 = mul <8 x i32> %5106, %5111
  %5113 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5112)
  %5114 = icmp eq i64 %5077, %5081
  br i1 %5114, label %5127, label %5115

5115:                                             ; preds = %5068, %5109
  %5116 = phi i64 [ %5071, %5068 ], [ %5082, %5109 ]
  %5117 = phi i32 [ 1, %5068 ], [ %5113, %5109 ]
  br label %5118

5118:                                             ; preds = %5115, %5118
  %5119 = phi i64 [ %5124, %5118 ], [ %5116, %5115 ]
  %5120 = phi i32 [ %5123, %5118 ], [ %5117, %5115 ]
  %5121 = getelementptr inbounds i32, ptr %11, i64 %5119
  %5122 = load i32, ptr %5121, align 4, !tbaa !5
  %5123 = mul nsw i32 %5122, %5120
  %5124 = add nsw i64 %5119, -1
  %5125 = trunc i64 %5119 to i32
  %5126 = icmp sgt i32 %5125, 0
  br i1 %5126, label %5118, label %5127, !llvm.loop !1470

5127:                                             ; preds = %5118, %5109
  %5128 = phi i32 [ %5113, %5109 ], [ %5123, %5118 ]
  %5129 = and i64 %5078, 4294967295
  %5130 = getelementptr inbounds i32, ptr %6, i64 %5129
  %5131 = load i32, ptr %5130, align 4, !tbaa !5
  %5132 = mul nsw i32 %5131, %5128
  %5133 = add nsw i32 %5132, %5072
  %5134 = icmp sgt i64 %5070, 2
  %5135 = add nsw i64 %5071, -1
  %5136 = add i32 %5069, 1
  br i1 %5134, label %5068, label %5137, !llvm.loop !1471

5137:                                             ; preds = %5127, %5064
  %5138 = phi i32 [ %5067, %5064 ], [ %5133, %5127 ]
  %5139 = icmp slt i32 %5138, %5
  br i1 %5139, label %5142, label %5140

5140:                                             ; preds = %5137
  %5141 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

5142:                                             ; preds = %5137
  %5143 = sext i32 %5138 to i64
  %5144 = getelementptr inbounds double, ptr %4898, i64 %5143
  %5145 = load double, ptr %5144, align 8, !tbaa !18
  %5146 = tail call fast double @llvm.fabs.f64(double %5145)
  %5147 = fadd fast double %5065, %5146
  store double %5147, ptr %4900, align 8, !tbaa !18
  %5148 = add nuw nsw i32 %5066, 1
  br i1 %4914, label %5149, label %5199

5149:                                             ; preds = %5142
  %5150 = load i32, ptr %4, align 4, !tbaa !5
  %5151 = load i32, ptr %12, align 4, !tbaa !5
  %5152 = add nsw i32 %5151, -1
  %5153 = icmp slt i32 %5150, %5152
  br i1 %5153, label %5176, label %5154

5154:                                             ; preds = %5149
  %5155 = icmp eq i32 %5150, %5152
  br i1 %5155, label %5156, label %5192

5156:                                             ; preds = %5154
  store i32 0, ptr %4, align 4, !tbaa !5
  %5157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5157, ptr %6, align 4, !tbaa !5
  br i1 %4919, label %5199, label %5158

5158:                                             ; preds = %5156, %5186
  %5159 = phi i64 [ %5190, %5186 ], [ 1, %5156 ]
  %5160 = getelementptr inbounds i32, ptr %4, i64 %5159
  %5161 = load i32, ptr %5160, align 4, !tbaa !5
  %5162 = getelementptr inbounds i32, ptr %12, i64 %5159
  %5163 = load i32, ptr %5162, align 4, !tbaa !5
  %5164 = add nsw i32 %5163, -1
  %5165 = icmp slt i32 %5161, %5164
  br i1 %5165, label %5166, label %5184

5166:                                             ; preds = %5158
  br i1 %5153, label %5176, label %5167

5167:                                             ; preds = %5166
  %5168 = shl i64 %5159, 32
  %5169 = add i64 %5168, -4294967296
  %5170 = ashr exact i64 %5169, 32
  %5171 = getelementptr inbounds i32, ptr %7, i64 %5170
  %5172 = load i32, ptr %5171, align 4, !tbaa !5
  %5173 = getelementptr inbounds i32, ptr %6, i64 %5159
  %5174 = load i32, ptr %5173, align 4, !tbaa !5
  %5175 = add nsw i32 %5174, %5172
  store i32 %5175, ptr %5173, align 4, !tbaa !5
  br label %5194

5176:                                             ; preds = %5149, %5166
  %5177 = phi i32 [ %5161, %5166 ], [ %5150, %5149 ]
  %5178 = phi ptr [ %5160, %5166 ], [ %4, %5149 ]
  %5179 = phi i64 [ %5159, %5166 ], [ 0, %5149 ]
  %5180 = add nsw i32 %5177, 1
  store i32 %5180, ptr %5178, align 4, !tbaa !5
  %5181 = getelementptr inbounds i32, ptr %7, i64 %5179
  %5182 = load i32, ptr %5181, align 4, !tbaa !5
  %5183 = getelementptr inbounds i32, ptr %6, i64 %5179
  br label %5194

5184:                                             ; preds = %5158
  %5185 = icmp eq i32 %5161, %5164
  br i1 %5185, label %5186, label %5192

5186:                                             ; preds = %5184
  store i32 0, ptr %5160, align 4, !tbaa !5
  %5187 = getelementptr inbounds i32, ptr %8, i64 %5159
  %5188 = load i32, ptr %5187, align 4, !tbaa !5
  %5189 = getelementptr inbounds i32, ptr %6, i64 %5159
  store i32 %5188, ptr %5189, align 4, !tbaa !5
  %5190 = add nuw nsw i64 %5159, 1
  %5191 = icmp eq i64 %5190, %4917
  br i1 %5191, label %5199, label %5158, !llvm.loop !1472

5192:                                             ; preds = %5154, %5184
  %5193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5194:                                             ; preds = %5167, %5176
  %5195 = phi ptr [ %5183, %5176 ], [ %5160, %5167 ]
  %5196 = phi i32 [ %5182, %5176 ], [ 1, %5167 ]
  %5197 = load i32, ptr %5195, align 4, !tbaa !5
  %5198 = add nsw i32 %5197, %5196
  store i32 %5198, ptr %5195, align 4, !tbaa !5
  br label %5199

5199:                                             ; preds = %5186, %5194, %5156, %5142
  %5200 = icmp eq i32 %5148, %5
  br i1 %5200, label %5501, label %5064, !llvm.loop !1473

5201:                                             ; preds = %4905
  %5202 = getelementptr inbounds i32, ptr %3, i64 %19
  %5203 = load i32, ptr %5202, align 4, !tbaa !5
  %5204 = icmp eq i32 %5203, 0
  %5205 = icmp sgt i32 %5, 0
  br i1 %5204, label %5215, label %5206

5206:                                             ; preds = %5201
  br i1 %5205, label %5207, label %5501

5207:                                             ; preds = %5206
  %5208 = icmp sgt i32 %13, 1
  %5209 = icmp sgt i32 %13, 0
  %5210 = add i32 %13, -2
  %5211 = zext i32 %5210 to i64
  %5212 = zext i32 %13 to i64
  %5213 = add nuw i32 %5, 1
  %5214 = icmp eq i32 %13, 1
  br label %5356

5215:                                             ; preds = %5201
  br i1 %5205, label %5216, label %5501

5216:                                             ; preds = %5215
  %5217 = icmp sgt i32 %13, 1
  %5218 = icmp sgt i32 %13, 0
  %5219 = add i32 %13, -2
  %5220 = zext i32 %5219 to i64
  %5221 = zext i32 %13 to i64
  %5222 = add nuw i32 %5, 1
  %5223 = icmp eq i32 %13, 1
  br label %5224

5224:                                             ; preds = %5216, %5354
  %5225 = phi double [ 0.000000e+00, %5216 ], [ %5304, %5354 ]
  %5226 = phi i32 [ 0, %5216 ], [ %5306, %5354 ]
  %5227 = phi double [ 0.000000e+00, %5216 ], [ %5305, %5354 ]
  %5228 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5217, label %5229, label %5298

5229:                                             ; preds = %5224, %5288
  %5230 = phi i32 [ %5297, %5288 ], [ 0, %5224 ]
  %5231 = phi i64 [ %5239, %5288 ], [ %5221, %5224 ]
  %5232 = phi i64 [ %5296, %5288 ], [ %5220, %5224 ]
  %5233 = phi i32 [ %5294, %5288 ], [ %5228, %5224 ]
  %5234 = sub i32 %5219, %5230
  %5235 = tail call i32 @llvm.smin.i32(i32 %5234, i32 0)
  %5236 = sub i32 %5234, %5235
  %5237 = zext i32 %5236 to i64
  %5238 = add nuw nsw i64 %5237, 1
  %5239 = add nsw i64 %5231, -1
  %5240 = icmp ult i32 %5236, 31
  br i1 %5240, label %5276, label %5241

5241:                                             ; preds = %5229
  %5242 = and i64 %5238, 8589934560
  %5243 = sub i64 %5232, %5242
  br label %5244

5244:                                             ; preds = %5244, %5241
  %5245 = phi i64 [ 0, %5241 ], [ %5268, %5244 ]
  %5246 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5264, %5244 ]
  %5247 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5265, %5244 ]
  %5248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5266, %5244 ]
  %5249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5241 ], [ %5267, %5244 ]
  %5250 = sub i64 %5232, %5245
  %5251 = getelementptr inbounds i32, ptr %9, i64 %5250
  %5252 = getelementptr inbounds i32, ptr %5251, i64 -7
  %5253 = load <8 x i32>, ptr %5252, align 4, !tbaa !5
  %5254 = shufflevector <8 x i32> %5253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5255 = getelementptr inbounds i32, ptr %5251, i64 -15
  %5256 = load <8 x i32>, ptr %5255, align 4, !tbaa !5
  %5257 = shufflevector <8 x i32> %5256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5258 = getelementptr inbounds i32, ptr %5251, i64 -23
  %5259 = load <8 x i32>, ptr %5258, align 4, !tbaa !5
  %5260 = shufflevector <8 x i32> %5259, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5261 = getelementptr inbounds i32, ptr %5251, i64 -31
  %5262 = load <8 x i32>, ptr %5261, align 4, !tbaa !5
  %5263 = shufflevector <8 x i32> %5262, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5264 = mul <8 x i32> %5254, %5246
  %5265 = mul <8 x i32> %5257, %5247
  %5266 = mul <8 x i32> %5260, %5248
  %5267 = mul <8 x i32> %5263, %5249
  %5268 = add nuw i64 %5245, 32
  %5269 = icmp eq i64 %5268, %5242
  br i1 %5269, label %5270, label %5244, !llvm.loop !1474

5270:                                             ; preds = %5244
  %5271 = mul <8 x i32> %5265, %5264
  %5272 = mul <8 x i32> %5266, %5271
  %5273 = mul <8 x i32> %5267, %5272
  %5274 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5273)
  %5275 = icmp eq i64 %5238, %5242
  br i1 %5275, label %5288, label %5276

5276:                                             ; preds = %5229, %5270
  %5277 = phi i64 [ %5232, %5229 ], [ %5243, %5270 ]
  %5278 = phi i32 [ 1, %5229 ], [ %5274, %5270 ]
  br label %5279

5279:                                             ; preds = %5276, %5279
  %5280 = phi i64 [ %5285, %5279 ], [ %5277, %5276 ]
  %5281 = phi i32 [ %5284, %5279 ], [ %5278, %5276 ]
  %5282 = getelementptr inbounds i32, ptr %9, i64 %5280
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = mul nsw i32 %5283, %5281
  %5285 = add nsw i64 %5280, -1
  %5286 = trunc i64 %5280 to i32
  %5287 = icmp sgt i32 %5286, 0
  br i1 %5287, label %5279, label %5288, !llvm.loop !1475

5288:                                             ; preds = %5279, %5270
  %5289 = phi i32 [ %5274, %5270 ], [ %5284, %5279 ]
  %5290 = and i64 %5239, 4294967295
  %5291 = getelementptr inbounds i32, ptr %6, i64 %5290
  %5292 = load i32, ptr %5291, align 4, !tbaa !5
  %5293 = mul nsw i32 %5292, %5289
  %5294 = add nsw i32 %5293, %5233
  %5295 = icmp sgt i64 %5231, 2
  %5296 = add nsw i64 %5232, -1
  %5297 = add i32 %5230, 1
  br i1 %5295, label %5229, label %5298, !llvm.loop !1476

5298:                                             ; preds = %5288, %5224
  %5299 = phi i32 [ %5228, %5224 ], [ %5294, %5288 ]
  %5300 = sext i32 %5299 to i64
  %5301 = getelementptr inbounds double, ptr %4898, i64 %5300
  %5302 = load double, ptr %5301, align 8, !tbaa !18
  %5303 = tail call fast double @llvm.fabs.f64(double %5302)
  %5304 = fadd fast double %5225, %5303
  store double %5304, ptr %4900, align 8, !tbaa !18
  %5305 = fadd fast double %5227, 1.000000e+00
  %5306 = add nuw nsw i32 %5226, 1
  br i1 %5218, label %5307, label %5354

5307:                                             ; preds = %5298
  %5308 = load i32, ptr %4, align 4, !tbaa !5
  %5309 = load i32, ptr %12, align 4, !tbaa !5
  %5310 = add nsw i32 %5309, -1
  %5311 = icmp slt i32 %5308, %5310
  br i1 %5311, label %5331, label %5312

5312:                                             ; preds = %5307
  %5313 = icmp eq i32 %5308, %5310
  br i1 %5313, label %5314, label %5347

5314:                                             ; preds = %5312
  store i32 0, ptr %4, align 4, !tbaa !5
  %5315 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5315, ptr %6, align 4, !tbaa !5
  br i1 %5223, label %5354, label %5316

5316:                                             ; preds = %5314, %5341
  %5317 = phi i64 [ %5345, %5341 ], [ 1, %5314 ]
  %5318 = getelementptr inbounds i32, ptr %4, i64 %5317
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = getelementptr inbounds i32, ptr %12, i64 %5317
  %5321 = load i32, ptr %5320, align 4, !tbaa !5
  %5322 = add nsw i32 %5321, -1
  %5323 = icmp slt i32 %5319, %5322
  br i1 %5323, label %5324, label %5339

5324:                                             ; preds = %5316
  br i1 %5311, label %5331, label %5325

5325:                                             ; preds = %5324
  %5326 = getelementptr inbounds i32, ptr %7, i64 %5317
  %5327 = load i32, ptr %5326, align 4, !tbaa !5
  %5328 = getelementptr inbounds i32, ptr %6, i64 %5317
  %5329 = load i32, ptr %5328, align 4, !tbaa !5
  %5330 = add nsw i32 %5329, %5327
  store i32 %5330, ptr %5328, align 4, !tbaa !5
  br label %5349

5331:                                             ; preds = %5307, %5324
  %5332 = phi i32 [ %5319, %5324 ], [ %5308, %5307 ]
  %5333 = phi ptr [ %5318, %5324 ], [ %4, %5307 ]
  %5334 = phi i64 [ %5317, %5324 ], [ 0, %5307 ]
  %5335 = add nsw i32 %5332, 1
  store i32 %5335, ptr %5333, align 4, !tbaa !5
  %5336 = getelementptr inbounds i32, ptr %7, i64 %5334
  %5337 = load i32, ptr %5336, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %6, i64 %5334
  br label %5349

5339:                                             ; preds = %5316
  %5340 = icmp eq i32 %5319, %5322
  br i1 %5340, label %5341, label %5347

5341:                                             ; preds = %5339
  store i32 0, ptr %5318, align 4, !tbaa !5
  %5342 = getelementptr inbounds i32, ptr %8, i64 %5317
  %5343 = load i32, ptr %5342, align 4, !tbaa !5
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5317
  store i32 %5343, ptr %5344, align 4, !tbaa !5
  %5345 = add nuw nsw i64 %5317, 1
  %5346 = icmp eq i64 %5345, %5221
  br i1 %5346, label %5354, label %5316, !llvm.loop !1477

5347:                                             ; preds = %5312, %5339
  %5348 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5349:                                             ; preds = %5325, %5331
  %5350 = phi ptr [ %5338, %5331 ], [ %5318, %5325 ]
  %5351 = phi i32 [ %5337, %5331 ], [ 1, %5325 ]
  %5352 = load i32, ptr %5350, align 4, !tbaa !5
  %5353 = add nsw i32 %5352, %5351
  store i32 %5353, ptr %5350, align 4, !tbaa !5
  br label %5354

5354:                                             ; preds = %5341, %5349, %5314, %5298
  %5355 = icmp eq i32 %5306, %5
  br i1 %5355, label %5501, label %5224, !llvm.loop !1478

5356:                                             ; preds = %5207, %5491
  %5357 = phi double [ 0.000000e+00, %5207 ], [ %5439, %5491 ]
  %5358 = phi i32 [ 0, %5207 ], [ %5440, %5491 ]
  %5359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5208, label %5360, label %5429

5360:                                             ; preds = %5356, %5419
  %5361 = phi i32 [ %5428, %5419 ], [ 0, %5356 ]
  %5362 = phi i64 [ %5370, %5419 ], [ %5212, %5356 ]
  %5363 = phi i64 [ %5427, %5419 ], [ %5211, %5356 ]
  %5364 = phi i32 [ %5425, %5419 ], [ %5359, %5356 ]
  %5365 = sub i32 %5210, %5361
  %5366 = tail call i32 @llvm.smin.i32(i32 %5365, i32 0)
  %5367 = sub i32 %5365, %5366
  %5368 = zext i32 %5367 to i64
  %5369 = add nuw nsw i64 %5368, 1
  %5370 = add nsw i64 %5362, -1
  %5371 = icmp ult i32 %5367, 31
  br i1 %5371, label %5407, label %5372

5372:                                             ; preds = %5360
  %5373 = and i64 %5369, 8589934560
  %5374 = sub i64 %5363, %5373
  br label %5375

5375:                                             ; preds = %5375, %5372
  %5376 = phi i64 [ 0, %5372 ], [ %5399, %5375 ]
  %5377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5395, %5375 ]
  %5378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5396, %5375 ]
  %5379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5397, %5375 ]
  %5380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5372 ], [ %5398, %5375 ]
  %5381 = sub i64 %5363, %5376
  %5382 = getelementptr inbounds i32, ptr %11, i64 %5381
  %5383 = getelementptr inbounds i32, ptr %5382, i64 -7
  %5384 = load <8 x i32>, ptr %5383, align 4, !tbaa !5
  %5385 = shufflevector <8 x i32> %5384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5386 = getelementptr inbounds i32, ptr %5382, i64 -15
  %5387 = load <8 x i32>, ptr %5386, align 4, !tbaa !5
  %5388 = shufflevector <8 x i32> %5387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5389 = getelementptr inbounds i32, ptr %5382, i64 -23
  %5390 = load <8 x i32>, ptr %5389, align 4, !tbaa !5
  %5391 = shufflevector <8 x i32> %5390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5392 = getelementptr inbounds i32, ptr %5382, i64 -31
  %5393 = load <8 x i32>, ptr %5392, align 4, !tbaa !5
  %5394 = shufflevector <8 x i32> %5393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5395 = mul <8 x i32> %5385, %5377
  %5396 = mul <8 x i32> %5388, %5378
  %5397 = mul <8 x i32> %5391, %5379
  %5398 = mul <8 x i32> %5394, %5380
  %5399 = add nuw i64 %5376, 32
  %5400 = icmp eq i64 %5399, %5373
  br i1 %5400, label %5401, label %5375, !llvm.loop !1479

5401:                                             ; preds = %5375
  %5402 = mul <8 x i32> %5396, %5395
  %5403 = mul <8 x i32> %5397, %5402
  %5404 = mul <8 x i32> %5398, %5403
  %5405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5404)
  %5406 = icmp eq i64 %5369, %5373
  br i1 %5406, label %5419, label %5407

5407:                                             ; preds = %5360, %5401
  %5408 = phi i64 [ %5363, %5360 ], [ %5374, %5401 ]
  %5409 = phi i32 [ 1, %5360 ], [ %5405, %5401 ]
  br label %5410

5410:                                             ; preds = %5407, %5410
  %5411 = phi i64 [ %5416, %5410 ], [ %5408, %5407 ]
  %5412 = phi i32 [ %5415, %5410 ], [ %5409, %5407 ]
  %5413 = getelementptr inbounds i32, ptr %11, i64 %5411
  %5414 = load i32, ptr %5413, align 4, !tbaa !5
  %5415 = mul nsw i32 %5414, %5412
  %5416 = add nsw i64 %5411, -1
  %5417 = trunc i64 %5411 to i32
  %5418 = icmp sgt i32 %5417, 0
  br i1 %5418, label %5410, label %5419, !llvm.loop !1480

5419:                                             ; preds = %5410, %5401
  %5420 = phi i32 [ %5405, %5401 ], [ %5415, %5410 ]
  %5421 = and i64 %5370, 4294967295
  %5422 = getelementptr inbounds i32, ptr %6, i64 %5421
  %5423 = load i32, ptr %5422, align 4, !tbaa !5
  %5424 = mul nsw i32 %5423, %5420
  %5425 = add nsw i32 %5424, %5364
  %5426 = icmp sgt i64 %5362, 2
  %5427 = add nsw i64 %5363, -1
  %5428 = add i32 %5361, 1
  br i1 %5426, label %5360, label %5429, !llvm.loop !1481

5429:                                             ; preds = %5419, %5356
  %5430 = phi i32 [ %5359, %5356 ], [ %5425, %5419 ]
  %5431 = icmp slt i32 %5430, %5
  br i1 %5431, label %5434, label %5432

5432:                                             ; preds = %5429
  %5433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5506

5434:                                             ; preds = %5429
  %5435 = sext i32 %5430 to i64
  %5436 = getelementptr inbounds double, ptr %4898, i64 %5435
  %5437 = load double, ptr %5436, align 8, !tbaa !18
  %5438 = tail call fast double @llvm.fabs.f64(double %5437)
  %5439 = fadd fast double %5357, %5438
  store double %5439, ptr %4900, align 8, !tbaa !18
  %5440 = add nuw nsw i32 %5358, 1
  br i1 %5209, label %5441, label %5491

5441:                                             ; preds = %5434
  %5442 = load i32, ptr %4, align 4, !tbaa !5
  %5443 = load i32, ptr %12, align 4, !tbaa !5
  %5444 = add nsw i32 %5443, -1
  %5445 = icmp slt i32 %5442, %5444
  br i1 %5445, label %5468, label %5446

5446:                                             ; preds = %5441
  %5447 = icmp eq i32 %5442, %5444
  br i1 %5447, label %5448, label %5484

5448:                                             ; preds = %5446
  store i32 0, ptr %4, align 4, !tbaa !5
  %5449 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5449, ptr %6, align 4, !tbaa !5
  br i1 %5214, label %5491, label %5450

5450:                                             ; preds = %5448, %5478
  %5451 = phi i64 [ %5482, %5478 ], [ 1, %5448 ]
  %5452 = getelementptr inbounds i32, ptr %4, i64 %5451
  %5453 = load i32, ptr %5452, align 4, !tbaa !5
  %5454 = getelementptr inbounds i32, ptr %12, i64 %5451
  %5455 = load i32, ptr %5454, align 4, !tbaa !5
  %5456 = add nsw i32 %5455, -1
  %5457 = icmp slt i32 %5453, %5456
  br i1 %5457, label %5458, label %5476

5458:                                             ; preds = %5450
  br i1 %5445, label %5468, label %5459

5459:                                             ; preds = %5458
  %5460 = shl i64 %5451, 32
  %5461 = add i64 %5460, -4294967296
  %5462 = ashr exact i64 %5461, 32
  %5463 = getelementptr inbounds i32, ptr %7, i64 %5462
  %5464 = load i32, ptr %5463, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %6, i64 %5451
  %5466 = load i32, ptr %5465, align 4, !tbaa !5
  %5467 = add nsw i32 %5466, %5464
  store i32 %5467, ptr %5465, align 4, !tbaa !5
  br label %5486

5468:                                             ; preds = %5441, %5458
  %5469 = phi i32 [ %5453, %5458 ], [ %5442, %5441 ]
  %5470 = phi ptr [ %5452, %5458 ], [ %4, %5441 ]
  %5471 = phi i64 [ %5451, %5458 ], [ 0, %5441 ]
  %5472 = add nsw i32 %5469, 1
  store i32 %5472, ptr %5470, align 4, !tbaa !5
  %5473 = getelementptr inbounds i32, ptr %7, i64 %5471
  %5474 = load i32, ptr %5473, align 4, !tbaa !5
  %5475 = getelementptr inbounds i32, ptr %6, i64 %5471
  br label %5486

5476:                                             ; preds = %5450
  %5477 = icmp eq i32 %5453, %5456
  br i1 %5477, label %5478, label %5484

5478:                                             ; preds = %5476
  store i32 0, ptr %5452, align 4, !tbaa !5
  %5479 = getelementptr inbounds i32, ptr %8, i64 %5451
  %5480 = load i32, ptr %5479, align 4, !tbaa !5
  %5481 = getelementptr inbounds i32, ptr %6, i64 %5451
  store i32 %5480, ptr %5481, align 4, !tbaa !5
  %5482 = add nuw nsw i64 %5451, 1
  %5483 = icmp eq i64 %5482, %5212
  br i1 %5483, label %5491, label %5450, !llvm.loop !1482

5484:                                             ; preds = %5446, %5476
  %5485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5506

5486:                                             ; preds = %5459, %5468
  %5487 = phi ptr [ %5475, %5468 ], [ %5452, %5459 ]
  %5488 = phi i32 [ %5474, %5468 ], [ 1, %5459 ]
  %5489 = load i32, ptr %5487, align 4, !tbaa !5
  %5490 = add nsw i32 %5489, %5488
  store i32 %5490, ptr %5487, align 4, !tbaa !5
  br label %5491

5491:                                             ; preds = %5478, %5486, %5448, %5434
  %5492 = icmp eq i32 %5440, %5
  br i1 %5492, label %5501, label %5356, !llvm.loop !1483

5493:                                             ; preds = %4905
  %5494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5501

5495:                                             ; preds = %2020
  store i16 %1970, ptr %1853, align 2, !tbaa !78
  br label %5501

5496:                                             ; preds = %2319
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  br label %5501

5497:                                             ; preds = %3244
  store i64 %3194, ptr %3077, align 8, !tbaa !120
  br label %5501

5498:                                             ; preds = %3543
  store i64 %3493, ptr %3077, align 8, !tbaa !120
  br label %5501

5499:                                             ; preds = %4455
  store float %4405, ptr %4288, align 4, !tbaa !162
  br label %5501

5500:                                             ; preds = %4754
  store float %4704, ptr %4288, align 4, !tbaa !162
  br label %5501

5501:                                             ; preds = %5491, %5354, %5199, %5062, %4892, %4598, %4280, %4143, %3988, %3851, %3681, %3387, %3069, %2931, %2775, %2632, %2457, %2163, %1845, %1707, %1551, %1408, %1233, %1095, %939, %796, %621, %484, %329, %192, %5206, %5215, %4911, %4920, %4605, %4614, %5500, %4300, %4309, %5499, %3995, %4004, %3700, %3709, %3394, %3403, %5498, %3089, %3098, %5497, %2782, %2791, %2477, %2486, %2170, %2179, %5496, %1865, %1874, %5495, %1558, %1567, %1253, %1262, %946, %955, %641, %650, %336, %345, %37, %46, %4902, %5493, %4290, %4894, %3691, %4282, %3079, %3683, %2467, %3071, %1855, %2459, %1243, %1847, %631, %1235, %28, %623, %18
  %5502 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1847 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %3079 ], [ 0.000000e+00, %4282 ], [ 0.000000e+00, %3691 ], [ 0.000000e+00, %4894 ], [ 0.000000e+00, %4290 ], [ 0.000000e+00, %5493 ], [ 0.000000e+00, %4902 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %641 ], [ 0.000000e+00, %955 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1971, %5495 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %5496 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2170 ], [ 0.000000e+00, %2486 ], [ 0.000000e+00, %2477 ], [ 0.000000e+00, %2791 ], [ 0.000000e+00, %2782 ], [ %3195, %5497 ], [ 0.000000e+00, %3098 ], [ 0.000000e+00, %3089 ], [ %3494, %5498 ], [ 0.000000e+00, %3403 ], [ 0.000000e+00, %3394 ], [ 0.000000e+00, %3709 ], [ 0.000000e+00, %3700 ], [ 0.000000e+00, %4004 ], [ 0.000000e+00, %3995 ], [ %4406, %5499 ], [ 0.000000e+00, %4309 ], [ 0.000000e+00, %4300 ], [ %4705, %5500 ], [ 0.000000e+00, %4614 ], [ 0.000000e+00, %4605 ], [ 0.000000e+00, %4920 ], [ 0.000000e+00, %4911 ], [ 0.000000e+00, %5215 ], [ 0.000000e+00, %5206 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %747, %796 ], [ 0.000000e+00, %939 ], [ %1046, %1095 ], [ 0.000000e+00, %1233 ], [ %1359, %1408 ], [ 0.000000e+00, %1551 ], [ %1658, %1707 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2457 ], [ %2583, %2632 ], [ 0.000000e+00, %2775 ], [ %2882, %2931 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3681 ], [ %3802, %3851 ], [ 0.000000e+00, %3988 ], [ %4094, %4143 ], [ 0.000000e+00, %4280 ], [ 0.000000e+00, %4598 ], [ 0.000000e+00, %4892 ], [ %5013, %5062 ], [ 0.000000e+00, %5199 ], [ %5305, %5354 ], [ 0.000000e+00, %5491 ]
  %5503 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1235 ], [ 1, %631 ], [ 1, %1847 ], [ 1, %1243 ], [ 1, %2459 ], [ 1, %1855 ], [ 1, %3071 ], [ 1, %2467 ], [ 1, %3683 ], [ 1, %3079 ], [ 1, %4282 ], [ 1, %3691 ], [ 1, %4894 ], [ 1, %4290 ], [ 1, %5493 ], [ 1, %4902 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %650 ], [ 1, %641 ], [ 1, %955 ], [ 1, %946 ], [ 1, %1262 ], [ 1, %1253 ], [ 1, %1567 ], [ 1, %1558 ], [ %1881, %5495 ], [ 1, %1874 ], [ 1, %1865 ], [ %2186, %5496 ], [ 1, %2179 ], [ 1, %2170 ], [ 1, %2486 ], [ 1, %2477 ], [ 1, %2791 ], [ 1, %2782 ], [ %3105, %5497 ], [ 1, %3098 ], [ 1, %3089 ], [ %3410, %5498 ], [ 1, %3403 ], [ 1, %3394 ], [ 1, %3709 ], [ 1, %3700 ], [ 1, %4004 ], [ 1, %3995 ], [ %4316, %5499 ], [ 1, %4309 ], [ 1, %4300 ], [ %4621, %5500 ], [ 1, %4614 ], [ 1, %4605 ], [ 1, %4920 ], [ 1, %4911 ], [ 1, %5215 ], [ 1, %5206 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %657, %796 ], [ %648, %939 ], [ %962, %1095 ], [ %953, %1233 ], [ %1269, %1408 ], [ %1260, %1551 ], [ %1574, %1707 ], [ %1565, %1845 ], [ %1872, %2163 ], [ %2177, %2457 ], [ %2493, %2632 ], [ %2484, %2775 ], [ %2798, %2931 ], [ %2789, %3069 ], [ %3096, %3387 ], [ %3401, %3681 ], [ %3716, %3851 ], [ %3707, %3988 ], [ %4011, %4143 ], [ %4002, %4280 ], [ %4307, %4598 ], [ %4612, %4892 ], [ %4927, %5062 ], [ %4918, %5199 ], [ %5222, %5354 ], [ %5213, %5491 ]
  %5504 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5503, ptr noundef nonnull @.str.5) #3
  %5505 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5502, ptr noundef nonnull @.str.6) #3
  br label %5506

5506:                                             ; preds = %5055, %5140, %5192, %5347, %5432, %5484, %4448, %4533, %4591, %4747, %4832, %4885, %3844, %3929, %3981, %4136, %4221, %4273, %3237, %3322, %3380, %3536, %3621, %3674, %2625, %2709, %2768, %2924, %3008, %3062, %2013, %2098, %2156, %2312, %2397, %2450, %1401, %1485, %1544, %1700, %1784, %1838, %789, %873, %932, %1088, %1172, %1226, %185, %269, %322, %477, %561, %614, %5501
  %5507 = phi i32 [ 0, %5501 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1226 ], [ -1, %1172 ], [ -1, %1088 ], [ -1, %932 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1838 ], [ -1, %1784 ], [ -1, %1700 ], [ -1, %1544 ], [ -1, %1485 ], [ -1, %1401 ], [ -1, %2450 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2156 ], [ -1, %2098 ], [ -1, %2013 ], [ -1, %3062 ], [ -1, %3008 ], [ -1, %2924 ], [ -1, %2768 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3674 ], [ -1, %3621 ], [ -1, %3536 ], [ -1, %3380 ], [ -1, %3322 ], [ -1, %3237 ], [ -1, %4273 ], [ -1, %4221 ], [ -1, %4136 ], [ -1, %3981 ], [ -1, %3929 ], [ -1, %3844 ], [ -1, %4885 ], [ -1, %4832 ], [ -1, %4747 ], [ -1, %4591 ], [ -1, %4533 ], [ -1, %4448 ], [ -1, %5484 ], [ -1, %5432 ], [ -1, %5347 ], [ -1, %5192 ], [ -1, %5140 ], [ -1, %5055 ]
  ret i32 %5507
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.abs.i8(i8, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.abs.i64(i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
