; ModuleID = 'LocalReduce/AvgFunctions.c'
source_filename = "LocalReduce/AvgFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"LocalReduce/AvgFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5426 [
    i32 101, label %22
    i32 102, label %619
    i32 103, label %1220
    i32 104, label %1817
    i32 105, label %2421
    i32 106, label %3022
    i32 107, label %3625
    i32 108, label %4224
    i32 109, label %4827
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %5426

30:                                               ; preds = %22
  switch i32 %1, label %617 [
    i32 1, label %31
    i32 0, label %327
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %5426

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %191

45:                                               ; preds = %31
  br i1 %35, label %46, label %5426

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %189
  %55 = phi i32 [ 0, %46 ], [ %141, %189 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %140, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !12

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !16

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !17

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = fadd fast double %137, %135
  %139 = fptoui double %138 to i8
  store i8 %139, ptr %26, align 1, !tbaa !11
  %140 = fadd fast double %131, %56
  %141 = add nuw nsw i32 %55, 1
  br i1 %48, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %53, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %51
  br i1 %181, label %189, label %151, !llvm.loop !20

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5426, label %54, !llvm.loop !22

191:                                              ; preds = %37, %325
  %192 = phi i32 [ 0, %37 ], [ %274, %325 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %42, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %41, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %40, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !23

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !24

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !25

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds i8, ptr %24, i64 %269
  %271 = load i8, ptr %270, align 1, !tbaa !11
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = add i8 %272, %271
  store i8 %273, ptr %26, align 1, !tbaa !11
  %274 = add nuw nsw i32 %192, 1
  br i1 %39, label %275, label %325

275:                                              ; preds = %268
  %276 = load i32, ptr %4, align 4, !tbaa !5
  %277 = load i32, ptr %12, align 4, !tbaa !5
  %278 = add nsw i32 %277, -1
  %279 = icmp slt i32 %276, %278
  br i1 %279, label %302, label %280

280:                                              ; preds = %275
  %281 = icmp eq i32 %276, %278
  br i1 %281, label %282, label %318

282:                                              ; preds = %280
  store i32 0, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %283, ptr %6, align 4, !tbaa !5
  br i1 %44, label %325, label %284

284:                                              ; preds = %282, %312
  %285 = phi i64 [ %316, %312 ], [ 1, %282 ]
  %286 = getelementptr inbounds i32, ptr %4, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !5
  %288 = getelementptr inbounds i32, ptr %12, i64 %285
  %289 = load i32, ptr %288, align 4, !tbaa !5
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %287, %290
  br i1 %291, label %292, label %310

292:                                              ; preds = %284
  br i1 %279, label %302, label %293

293:                                              ; preds = %292
  %294 = shl i64 %285, 32
  %295 = add i64 %294, -4294967296
  %296 = ashr exact i64 %295, 32
  %297 = getelementptr inbounds i32, ptr %7, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %6, i64 %285
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, %298
  store i32 %301, ptr %299, align 4, !tbaa !5
  br label %320

302:                                              ; preds = %275, %292
  %303 = phi i32 [ %287, %292 ], [ %276, %275 ]
  %304 = phi ptr [ %286, %292 ], [ %4, %275 ]
  %305 = phi i64 [ %285, %292 ], [ 0, %275 ]
  %306 = add nsw i32 %303, 1
  store i32 %306, ptr %304, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %7, i64 %305
  %308 = load i32, ptr %307, align 4, !tbaa !5
  %309 = getelementptr inbounds i32, ptr %6, i64 %305
  br label %320

310:                                              ; preds = %284
  %311 = icmp eq i32 %287, %290
  br i1 %311, label %312, label %318

312:                                              ; preds = %310
  store i32 0, ptr %286, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %8, i64 %285
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %285
  store i32 %314, ptr %315, align 4, !tbaa !5
  %316 = add nuw nsw i64 %285, 1
  %317 = icmp eq i64 %316, %42
  br i1 %317, label %325, label %284, !llvm.loop !26

318:                                              ; preds = %280, %310
  %319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

320:                                              ; preds = %293, %302
  %321 = phi ptr [ %309, %302 ], [ %286, %293 ]
  %322 = phi i32 [ %308, %302 ], [ 1, %293 ]
  %323 = load i32, ptr %321, align 4, !tbaa !5
  %324 = add nsw i32 %323, %322
  store i32 %324, ptr %321, align 4, !tbaa !5
  br label %325

325:                                              ; preds = %312, %320, %282, %268
  %326 = icmp eq i32 %274, %5
  br i1 %326, label %5426, label %191, !llvm.loop !27

327:                                              ; preds = %30
  %328 = getelementptr inbounds i32, ptr %3, i64 %19
  %329 = load i32, ptr %328, align 4, !tbaa !5
  %330 = icmp eq i32 %329, 0
  %331 = icmp sgt i32 %5, 0
  br i1 %330, label %341, label %332

332:                                              ; preds = %327
  br i1 %331, label %333, label %5426

333:                                              ; preds = %332
  %334 = icmp sgt i32 %13, 1
  %335 = icmp sgt i32 %13, 0
  %336 = add i32 %13, -2
  %337 = zext i32 %336 to i64
  %338 = zext i32 %13 to i64
  %339 = add nuw i32 %5, 1
  %340 = icmp eq i32 %13, 1
  br label %481

341:                                              ; preds = %327
  br i1 %331, label %342, label %5426

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %350

350:                                              ; preds = %342, %479
  %351 = phi i32 [ 0, %342 ], [ %431, %479 ]
  %352 = phi double [ 0.000000e+00, %342 ], [ %430, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %343, label %354, label %423

354:                                              ; preds = %350, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %350 ]
  %356 = phi i64 [ %364, %413 ], [ %347, %350 ]
  %357 = phi i64 [ %421, %413 ], [ %346, %350 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %350 ]
  %359 = sub i32 %345, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !28

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !29

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !30

423:                                              ; preds = %413, %350
  %424 = phi i32 [ %353, %350 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i8, ptr %24, i64 %425
  %427 = load i8, ptr %426, align 1, !tbaa !11
  %428 = load i8, ptr %26, align 1, !tbaa !11
  %429 = add i8 %428, %427
  store i8 %429, ptr %26, align 1, !tbaa !11
  %430 = fadd fast double %352, 1.000000e+00
  %431 = add nuw nsw i32 %351, 1
  br i1 %344, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %349, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %347
  br i1 %471, label %479, label %441, !llvm.loop !31

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5426, label %350, !llvm.loop !32

481:                                              ; preds = %333, %615
  %482 = phi i32 [ 0, %333 ], [ %564, %615 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %334, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %338, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %337, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %336, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !33

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !34

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !35

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds i8, ptr %24, i64 %559
  %561 = load i8, ptr %560, align 1, !tbaa !11
  %562 = load i8, ptr %26, align 1, !tbaa !11
  %563 = add i8 %562, %561
  store i8 %563, ptr %26, align 1, !tbaa !11
  %564 = add nuw nsw i32 %482, 1
  br i1 %335, label %565, label %615

565:                                              ; preds = %558
  %566 = load i32, ptr %4, align 4, !tbaa !5
  %567 = load i32, ptr %12, align 4, !tbaa !5
  %568 = add nsw i32 %567, -1
  %569 = icmp slt i32 %566, %568
  br i1 %569, label %592, label %570

570:                                              ; preds = %565
  %571 = icmp eq i32 %566, %568
  br i1 %571, label %572, label %608

572:                                              ; preds = %570
  store i32 0, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %573, ptr %6, align 4, !tbaa !5
  br i1 %340, label %615, label %574

574:                                              ; preds = %572, %602
  %575 = phi i64 [ %606, %602 ], [ 1, %572 ]
  %576 = getelementptr inbounds i32, ptr %4, i64 %575
  %577 = load i32, ptr %576, align 4, !tbaa !5
  %578 = getelementptr inbounds i32, ptr %12, i64 %575
  %579 = load i32, ptr %578, align 4, !tbaa !5
  %580 = add nsw i32 %579, -1
  %581 = icmp slt i32 %577, %580
  br i1 %581, label %582, label %600

582:                                              ; preds = %574
  br i1 %569, label %592, label %583

583:                                              ; preds = %582
  %584 = shl i64 %575, 32
  %585 = add i64 %584, -4294967296
  %586 = ashr exact i64 %585, 32
  %587 = getelementptr inbounds i32, ptr %7, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = getelementptr inbounds i32, ptr %6, i64 %575
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = add nsw i32 %590, %588
  store i32 %591, ptr %589, align 4, !tbaa !5
  br label %610

592:                                              ; preds = %565, %582
  %593 = phi i32 [ %577, %582 ], [ %566, %565 ]
  %594 = phi ptr [ %576, %582 ], [ %4, %565 ]
  %595 = phi i64 [ %575, %582 ], [ 0, %565 ]
  %596 = add nsw i32 %593, 1
  store i32 %596, ptr %594, align 4, !tbaa !5
  %597 = getelementptr inbounds i32, ptr %7, i64 %595
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %595
  br label %610

600:                                              ; preds = %574
  %601 = icmp eq i32 %577, %580
  br i1 %601, label %602, label %608

602:                                              ; preds = %600
  store i32 0, ptr %576, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %8, i64 %575
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %575
  store i32 %604, ptr %605, align 4, !tbaa !5
  %606 = add nuw nsw i64 %575, 1
  %607 = icmp eq i64 %606, %338
  br i1 %607, label %615, label %574, !llvm.loop !36

608:                                              ; preds = %570, %600
  %609 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

610:                                              ; preds = %583, %592
  %611 = phi ptr [ %599, %592 ], [ %576, %583 ]
  %612 = phi i32 [ %598, %592 ], [ 1, %583 ]
  %613 = load i32, ptr %611, align 4, !tbaa !5
  %614 = add nsw i32 %613, %612
  store i32 %614, ptr %611, align 4, !tbaa !5
  br label %615

615:                                              ; preds = %602, %610, %572, %558
  %616 = icmp eq i32 %564, %5
  br i1 %616, label %5426, label %481, !llvm.loop !37

617:                                              ; preds = %30
  %618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

619:                                              ; preds = %18
  %620 = getelementptr inbounds ptr, ptr %14, i64 %19
  %621 = load ptr, ptr %620, align 8, !tbaa !9
  %622 = getelementptr inbounds ptr, ptr %16, i64 %19
  %623 = load ptr, ptr %622, align 8, !tbaa !9
  store i32 0, ptr %623, align 4, !tbaa !5
  %624 = icmp eq i32 %13, 0
  br i1 %624, label %625, label %628

625:                                              ; preds = %619
  %626 = load i8, ptr %621, align 1, !tbaa !11
  %627 = zext i8 %626 to i32
  store i32 %627, ptr %623, align 4, !tbaa !5
  br label %5426

628:                                              ; preds = %619
  switch i32 %1, label %1218 [
    i32 1, label %629
    i32 0, label %926
  ]

629:                                              ; preds = %628
  %630 = getelementptr inbounds i32, ptr %3, i64 %19
  %631 = load i32, ptr %630, align 4, !tbaa !5
  %632 = icmp eq i32 %631, 0
  %633 = icmp sgt i32 %5, 0
  br i1 %632, label %643, label %634

634:                                              ; preds = %629
  br i1 %633, label %635, label %5426

635:                                              ; preds = %634
  %636 = icmp sgt i32 %13, 1
  %637 = icmp sgt i32 %13, 0
  %638 = add i32 %13, -2
  %639 = zext i32 %638 to i64
  %640 = zext i32 %13 to i64
  %641 = add nuw i32 %5, 1
  %642 = icmp eq i32 %13, 1
  br label %789

643:                                              ; preds = %629
  br i1 %633, label %644, label %5426

644:                                              ; preds = %643
  %645 = icmp sgt i32 %13, 1
  %646 = icmp sgt i32 %13, 0
  %647 = add i32 %13, -2
  %648 = zext i32 %647 to i64
  %649 = zext i32 %13 to i64
  %650 = add nuw i32 %5, 1
  %651 = icmp eq i32 %13, 1
  br label %652

652:                                              ; preds = %644, %787
  %653 = phi i32 [ 0, %644 ], [ %739, %787 ]
  %654 = phi double [ 0.000000e+00, %644 ], [ %738, %787 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %645, label %656, label %725

656:                                              ; preds = %652, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %652 ]
  %658 = phi i64 [ %666, %715 ], [ %649, %652 ]
  %659 = phi i64 [ %723, %715 ], [ %648, %652 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %652 ]
  %661 = sub i32 %647, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !38

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !39

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !40

725:                                              ; preds = %715, %652
  %726 = phi i32 [ %655, %652 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds i8, ptr %621, i64 %727
  %731 = load i8, ptr %730, align 1, !tbaa !11
  %732 = load i32, ptr %623, align 4, !tbaa !5
  %733 = sitofp i32 %732 to double
  %734 = uitofp i8 %731 to double
  %735 = fmul fast double %729, %734
  %736 = fadd fast double %735, %733
  %737 = fptosi double %736 to i32
  store i32 %737, ptr %623, align 4, !tbaa !5
  %738 = fadd fast double %729, %654
  %739 = add nuw nsw i32 %653, 1
  br i1 %646, label %740, label %787

740:                                              ; preds = %725
  %741 = load i32, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %12, align 4, !tbaa !5
  %743 = add nsw i32 %742, -1
  %744 = icmp slt i32 %741, %743
  br i1 %744, label %764, label %745

745:                                              ; preds = %740
  %746 = icmp eq i32 %741, %743
  br i1 %746, label %747, label %780

747:                                              ; preds = %745
  store i32 0, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %748, ptr %6, align 4, !tbaa !5
  br i1 %651, label %787, label %749

749:                                              ; preds = %747, %774
  %750 = phi i64 [ %778, %774 ], [ 1, %747 ]
  %751 = getelementptr inbounds i32, ptr %4, i64 %750
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = getelementptr inbounds i32, ptr %12, i64 %750
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %752, %755
  br i1 %756, label %757, label %772

757:                                              ; preds = %749
  br i1 %744, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, ptr %7, i64 %750
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %6, i64 %750
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, %760
  store i32 %763, ptr %761, align 4, !tbaa !5
  br label %782

764:                                              ; preds = %740, %757
  %765 = phi i32 [ %752, %757 ], [ %741, %740 ]
  %766 = phi ptr [ %751, %757 ], [ %4, %740 ]
  %767 = phi i64 [ %750, %757 ], [ 0, %740 ]
  %768 = add nsw i32 %765, 1
  store i32 %768, ptr %766, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %7, i64 %767
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %767
  br label %782

772:                                              ; preds = %749
  %773 = icmp eq i32 %752, %755
  br i1 %773, label %774, label %780

774:                                              ; preds = %772
  store i32 0, ptr %751, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %8, i64 %750
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %750
  store i32 %776, ptr %777, align 4, !tbaa !5
  %778 = add nuw nsw i64 %750, 1
  %779 = icmp eq i64 %778, %649
  br i1 %779, label %787, label %749, !llvm.loop !41

780:                                              ; preds = %745, %772
  %781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

782:                                              ; preds = %758, %764
  %783 = phi ptr [ %771, %764 ], [ %751, %758 ]
  %784 = phi i32 [ %770, %764 ], [ 1, %758 ]
  %785 = load i32, ptr %783, align 4, !tbaa !5
  %786 = add nsw i32 %785, %784
  store i32 %786, ptr %783, align 4, !tbaa !5
  br label %787

787:                                              ; preds = %774, %782, %747, %725
  %788 = icmp eq i32 %739, %5
  br i1 %788, label %5426, label %652, !llvm.loop !42

789:                                              ; preds = %635, %924
  %790 = phi i32 [ 0, %635 ], [ %873, %924 ]
  %791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %636, label %792, label %861

792:                                              ; preds = %789, %851
  %793 = phi i32 [ %860, %851 ], [ 0, %789 ]
  %794 = phi i64 [ %802, %851 ], [ %640, %789 ]
  %795 = phi i64 [ %859, %851 ], [ %639, %789 ]
  %796 = phi i32 [ %857, %851 ], [ %791, %789 ]
  %797 = sub i32 %638, %793
  %798 = tail call i32 @llvm.smin.i32(i32 %797, i32 0)
  %799 = sub i32 %797, %798
  %800 = zext i32 %799 to i64
  %801 = add nuw nsw i64 %800, 1
  %802 = add nsw i64 %794, -1
  %803 = icmp ult i32 %799, 31
  br i1 %803, label %839, label %804

804:                                              ; preds = %792
  %805 = and i64 %801, 8589934560
  %806 = sub i64 %795, %805
  br label %807

807:                                              ; preds = %807, %804
  %808 = phi i64 [ 0, %804 ], [ %831, %807 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %827, %807 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %828, %807 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %829, %807 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %830, %807 ]
  %813 = sub i64 %795, %808
  %814 = getelementptr inbounds i32, ptr %11, i64 %813
  %815 = getelementptr inbounds i32, ptr %814, i64 -7
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %814, i64 -15
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %814, i64 -23
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %814, i64 -31
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = mul <8 x i32> %817, %809
  %828 = mul <8 x i32> %820, %810
  %829 = mul <8 x i32> %823, %811
  %830 = mul <8 x i32> %826, %812
  %831 = add nuw i64 %808, 32
  %832 = icmp eq i64 %831, %805
  br i1 %832, label %833, label %807, !llvm.loop !43

833:                                              ; preds = %807
  %834 = mul <8 x i32> %828, %827
  %835 = mul <8 x i32> %829, %834
  %836 = mul <8 x i32> %830, %835
  %837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %836)
  %838 = icmp eq i64 %801, %805
  br i1 %838, label %851, label %839

839:                                              ; preds = %792, %833
  %840 = phi i64 [ %795, %792 ], [ %806, %833 ]
  %841 = phi i32 [ 1, %792 ], [ %837, %833 ]
  br label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %848, %842 ], [ %840, %839 ]
  %844 = phi i32 [ %847, %842 ], [ %841, %839 ]
  %845 = getelementptr inbounds i32, ptr %11, i64 %843
  %846 = load i32, ptr %845, align 4, !tbaa !5
  %847 = mul nsw i32 %846, %844
  %848 = add nsw i64 %843, -1
  %849 = trunc i64 %843 to i32
  %850 = icmp sgt i32 %849, 0
  br i1 %850, label %842, label %851, !llvm.loop !44

851:                                              ; preds = %842, %833
  %852 = phi i32 [ %837, %833 ], [ %847, %842 ]
  %853 = and i64 %802, 4294967295
  %854 = getelementptr inbounds i32, ptr %6, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %852
  %857 = add nsw i32 %856, %796
  %858 = icmp sgt i64 %794, 2
  %859 = add nsw i64 %795, -1
  %860 = add i32 %793, 1
  br i1 %858, label %792, label %861, !llvm.loop !45

861:                                              ; preds = %851, %789
  %862 = phi i32 [ %791, %789 ], [ %857, %851 ]
  %863 = icmp slt i32 %862, %5
  br i1 %863, label %866, label %864

864:                                              ; preds = %861
  %865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

866:                                              ; preds = %861
  %867 = sext i32 %862 to i64
  %868 = getelementptr inbounds i8, ptr %621, i64 %867
  %869 = load i8, ptr %868, align 1, !tbaa !11
  %870 = load i32, ptr %623, align 4, !tbaa !5
  %871 = zext i8 %869 to i32
  %872 = add i32 %870, %871
  store i32 %872, ptr %623, align 4, !tbaa !5
  %873 = add nuw nsw i32 %790, 1
  br i1 %637, label %874, label %924

874:                                              ; preds = %866
  %875 = load i32, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %12, align 4, !tbaa !5
  %877 = add nsw i32 %876, -1
  %878 = icmp slt i32 %875, %877
  br i1 %878, label %901, label %879

879:                                              ; preds = %874
  %880 = icmp eq i32 %875, %877
  br i1 %880, label %881, label %917

881:                                              ; preds = %879
  store i32 0, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %882, ptr %6, align 4, !tbaa !5
  br i1 %642, label %924, label %883

883:                                              ; preds = %881, %911
  %884 = phi i64 [ %915, %911 ], [ 1, %881 ]
  %885 = getelementptr inbounds i32, ptr %4, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !5
  %887 = getelementptr inbounds i32, ptr %12, i64 %884
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %886, %889
  br i1 %890, label %891, label %909

891:                                              ; preds = %883
  br i1 %878, label %901, label %892

892:                                              ; preds = %891
  %893 = shl i64 %884, 32
  %894 = add i64 %893, -4294967296
  %895 = ashr exact i64 %894, 32
  %896 = getelementptr inbounds i32, ptr %7, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %6, i64 %884
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, %897
  store i32 %900, ptr %898, align 4, !tbaa !5
  br label %919

901:                                              ; preds = %874, %891
  %902 = phi i32 [ %886, %891 ], [ %875, %874 ]
  %903 = phi ptr [ %885, %891 ], [ %4, %874 ]
  %904 = phi i64 [ %884, %891 ], [ 0, %874 ]
  %905 = add nsw i32 %902, 1
  store i32 %905, ptr %903, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %7, i64 %904
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %904
  br label %919

909:                                              ; preds = %883
  %910 = icmp eq i32 %886, %889
  br i1 %910, label %911, label %917

911:                                              ; preds = %909
  store i32 0, ptr %885, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %8, i64 %884
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %884
  store i32 %913, ptr %914, align 4, !tbaa !5
  %915 = add nuw nsw i64 %884, 1
  %916 = icmp eq i64 %915, %640
  br i1 %916, label %924, label %883, !llvm.loop !46

917:                                              ; preds = %879, %909
  %918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

919:                                              ; preds = %892, %901
  %920 = phi ptr [ %908, %901 ], [ %885, %892 ]
  %921 = phi i32 [ %907, %901 ], [ 1, %892 ]
  %922 = load i32, ptr %920, align 4, !tbaa !5
  %923 = add nsw i32 %922, %921
  store i32 %923, ptr %920, align 4, !tbaa !5
  br label %924

924:                                              ; preds = %911, %919, %881, %866
  %925 = icmp eq i32 %873, %5
  br i1 %925, label %5426, label %789, !llvm.loop !47

926:                                              ; preds = %628
  %927 = getelementptr inbounds i32, ptr %3, i64 %19
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = icmp eq i32 %928, 0
  %930 = icmp sgt i32 %5, 0
  br i1 %929, label %940, label %931

931:                                              ; preds = %926
  br i1 %930, label %932, label %5426

932:                                              ; preds = %931
  %933 = icmp sgt i32 %13, 1
  %934 = icmp sgt i32 %13, 0
  %935 = add i32 %13, -2
  %936 = zext i32 %935 to i64
  %937 = zext i32 %13 to i64
  %938 = add nuw i32 %5, 1
  %939 = icmp eq i32 %13, 1
  br label %1081

940:                                              ; preds = %926
  br i1 %930, label %941, label %5426

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %949

949:                                              ; preds = %941, %1079
  %950 = phi i32 [ 0, %941 ], [ %1031, %1079 ]
  %951 = phi double [ 0.000000e+00, %941 ], [ %1030, %1079 ]
  %952 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %953, label %1022

953:                                              ; preds = %949, %1012
  %954 = phi i32 [ %1021, %1012 ], [ 0, %949 ]
  %955 = phi i64 [ %963, %1012 ], [ %946, %949 ]
  %956 = phi i64 [ %1020, %1012 ], [ %945, %949 ]
  %957 = phi i32 [ %1018, %1012 ], [ %952, %949 ]
  %958 = sub i32 %944, %954
  %959 = tail call i32 @llvm.smin.i32(i32 %958, i32 0)
  %960 = sub i32 %958, %959
  %961 = zext i32 %960 to i64
  %962 = add nuw nsw i64 %961, 1
  %963 = add nsw i64 %955, -1
  %964 = icmp ult i32 %960, 31
  br i1 %964, label %1000, label %965

965:                                              ; preds = %953
  %966 = and i64 %962, 8589934560
  %967 = sub i64 %956, %966
  br label %968

968:                                              ; preds = %968, %965
  %969 = phi i64 [ 0, %965 ], [ %992, %968 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %988, %968 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %989, %968 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %990, %968 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %991, %968 ]
  %974 = sub i64 %956, %969
  %975 = getelementptr inbounds i32, ptr %9, i64 %974
  %976 = getelementptr inbounds i32, ptr %975, i64 -7
  %977 = load <8 x i32>, ptr %976, align 4, !tbaa !5
  %978 = shufflevector <8 x i32> %977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %979 = getelementptr inbounds i32, ptr %975, i64 -15
  %980 = load <8 x i32>, ptr %979, align 4, !tbaa !5
  %981 = shufflevector <8 x i32> %980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %982 = getelementptr inbounds i32, ptr %975, i64 -23
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %975, i64 -31
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = mul <8 x i32> %978, %970
  %989 = mul <8 x i32> %981, %971
  %990 = mul <8 x i32> %984, %972
  %991 = mul <8 x i32> %987, %973
  %992 = add nuw i64 %969, 32
  %993 = icmp eq i64 %992, %966
  br i1 %993, label %994, label %968, !llvm.loop !48

994:                                              ; preds = %968
  %995 = mul <8 x i32> %989, %988
  %996 = mul <8 x i32> %990, %995
  %997 = mul <8 x i32> %991, %996
  %998 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %997)
  %999 = icmp eq i64 %962, %966
  br i1 %999, label %1012, label %1000

1000:                                             ; preds = %953, %994
  %1001 = phi i64 [ %956, %953 ], [ %967, %994 ]
  %1002 = phi i32 [ 1, %953 ], [ %998, %994 ]
  br label %1003

1003:                                             ; preds = %1000, %1003
  %1004 = phi i64 [ %1009, %1003 ], [ %1001, %1000 ]
  %1005 = phi i32 [ %1008, %1003 ], [ %1002, %1000 ]
  %1006 = getelementptr inbounds i32, ptr %9, i64 %1004
  %1007 = load i32, ptr %1006, align 4, !tbaa !5
  %1008 = mul nsw i32 %1007, %1005
  %1009 = add nsw i64 %1004, -1
  %1010 = trunc i64 %1004 to i32
  %1011 = icmp sgt i32 %1010, 0
  br i1 %1011, label %1003, label %1012, !llvm.loop !49

1012:                                             ; preds = %1003, %994
  %1013 = phi i32 [ %998, %994 ], [ %1008, %1003 ]
  %1014 = and i64 %963, 4294967295
  %1015 = getelementptr inbounds i32, ptr %6, i64 %1014
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1013
  %1018 = add nsw i32 %1017, %957
  %1019 = icmp sgt i64 %955, 2
  %1020 = add nsw i64 %956, -1
  %1021 = add i32 %954, 1
  br i1 %1019, label %953, label %1022, !llvm.loop !50

1022:                                             ; preds = %1012, %949
  %1023 = phi i32 [ %952, %949 ], [ %1018, %1012 ]
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i8, ptr %621, i64 %1024
  %1026 = load i8, ptr %1025, align 1, !tbaa !11
  %1027 = zext i8 %1026 to i32
  %1028 = load i32, ptr %623, align 4, !tbaa !5
  %1029 = add nsw i32 %1028, %1027
  store i32 %1029, ptr %623, align 4, !tbaa !5
  %1030 = fadd fast double %951, 1.000000e+00
  %1031 = add nuw nsw i32 %950, 1
  br i1 %943, label %1032, label %1079

1032:                                             ; preds = %1022
  %1033 = load i32, ptr %4, align 4, !tbaa !5
  %1034 = load i32, ptr %12, align 4, !tbaa !5
  %1035 = add nsw i32 %1034, -1
  %1036 = icmp slt i32 %1033, %1035
  br i1 %1036, label %1056, label %1037

1037:                                             ; preds = %1032
  %1038 = icmp eq i32 %1033, %1035
  br i1 %1038, label %1039, label %1072

1039:                                             ; preds = %1037
  store i32 0, ptr %4, align 4, !tbaa !5
  %1040 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1040, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1079, label %1041

1041:                                             ; preds = %1039, %1066
  %1042 = phi i64 [ %1070, %1066 ], [ 1, %1039 ]
  %1043 = getelementptr inbounds i32, ptr %4, i64 %1042
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = getelementptr inbounds i32, ptr %12, i64 %1042
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, -1
  %1048 = icmp slt i32 %1044, %1047
  br i1 %1048, label %1049, label %1064

1049:                                             ; preds = %1041
  br i1 %1036, label %1056, label %1050

1050:                                             ; preds = %1049
  %1051 = getelementptr inbounds i32, ptr %7, i64 %1042
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1042
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = add nsw i32 %1054, %1052
  store i32 %1055, ptr %1053, align 4, !tbaa !5
  br label %1074

1056:                                             ; preds = %1032, %1049
  %1057 = phi i32 [ %1044, %1049 ], [ %1033, %1032 ]
  %1058 = phi ptr [ %1043, %1049 ], [ %4, %1032 ]
  %1059 = phi i64 [ %1042, %1049 ], [ 0, %1032 ]
  %1060 = add nsw i32 %1057, 1
  store i32 %1060, ptr %1058, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %7, i64 %1059
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1059
  br label %1074

1064:                                             ; preds = %1041
  %1065 = icmp eq i32 %1044, %1047
  br i1 %1065, label %1066, label %1072

1066:                                             ; preds = %1064
  store i32 0, ptr %1043, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %8, i64 %1042
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1042
  store i32 %1068, ptr %1069, align 4, !tbaa !5
  %1070 = add nuw nsw i64 %1042, 1
  %1071 = icmp eq i64 %1070, %946
  br i1 %1071, label %1079, label %1041, !llvm.loop !51

1072:                                             ; preds = %1037, %1064
  %1073 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1074:                                             ; preds = %1050, %1056
  %1075 = phi ptr [ %1063, %1056 ], [ %1043, %1050 ]
  %1076 = phi i32 [ %1062, %1056 ], [ 1, %1050 ]
  %1077 = load i32, ptr %1075, align 4, !tbaa !5
  %1078 = add nsw i32 %1077, %1076
  store i32 %1078, ptr %1075, align 4, !tbaa !5
  br label %1079

1079:                                             ; preds = %1066, %1074, %1039, %1022
  %1080 = icmp eq i32 %1031, %5
  br i1 %1080, label %5426, label %949, !llvm.loop !52

1081:                                             ; preds = %932, %1216
  %1082 = phi i32 [ 0, %932 ], [ %1165, %1216 ]
  %1083 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1084, label %1153

1084:                                             ; preds = %1081, %1143
  %1085 = phi i32 [ %1152, %1143 ], [ 0, %1081 ]
  %1086 = phi i64 [ %1094, %1143 ], [ %937, %1081 ]
  %1087 = phi i64 [ %1151, %1143 ], [ %936, %1081 ]
  %1088 = phi i32 [ %1149, %1143 ], [ %1083, %1081 ]
  %1089 = sub i32 %935, %1085
  %1090 = tail call i32 @llvm.smin.i32(i32 %1089, i32 0)
  %1091 = sub i32 %1089, %1090
  %1092 = zext i32 %1091 to i64
  %1093 = add nuw nsw i64 %1092, 1
  %1094 = add nsw i64 %1086, -1
  %1095 = icmp ult i32 %1091, 31
  br i1 %1095, label %1131, label %1096

1096:                                             ; preds = %1084
  %1097 = and i64 %1093, 8589934560
  %1098 = sub i64 %1087, %1097
  br label %1099

1099:                                             ; preds = %1099, %1096
  %1100 = phi i64 [ 0, %1096 ], [ %1123, %1099 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1119, %1099 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1120, %1099 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1121, %1099 ]
  %1104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1122, %1099 ]
  %1105 = sub i64 %1087, %1100
  %1106 = getelementptr inbounds i32, ptr %11, i64 %1105
  %1107 = getelementptr inbounds i32, ptr %1106, i64 -7
  %1108 = load <8 x i32>, ptr %1107, align 4, !tbaa !5
  %1109 = shufflevector <8 x i32> %1108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1110 = getelementptr inbounds i32, ptr %1106, i64 -15
  %1111 = load <8 x i32>, ptr %1110, align 4, !tbaa !5
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1113 = getelementptr inbounds i32, ptr %1106, i64 -23
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = getelementptr inbounds i32, ptr %1106, i64 -31
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = mul <8 x i32> %1109, %1101
  %1120 = mul <8 x i32> %1112, %1102
  %1121 = mul <8 x i32> %1115, %1103
  %1122 = mul <8 x i32> %1118, %1104
  %1123 = add nuw i64 %1100, 32
  %1124 = icmp eq i64 %1123, %1097
  br i1 %1124, label %1125, label %1099, !llvm.loop !53

1125:                                             ; preds = %1099
  %1126 = mul <8 x i32> %1120, %1119
  %1127 = mul <8 x i32> %1121, %1126
  %1128 = mul <8 x i32> %1122, %1127
  %1129 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1128)
  %1130 = icmp eq i64 %1093, %1097
  br i1 %1130, label %1143, label %1131

1131:                                             ; preds = %1084, %1125
  %1132 = phi i64 [ %1087, %1084 ], [ %1098, %1125 ]
  %1133 = phi i32 [ 1, %1084 ], [ %1129, %1125 ]
  br label %1134

1134:                                             ; preds = %1131, %1134
  %1135 = phi i64 [ %1140, %1134 ], [ %1132, %1131 ]
  %1136 = phi i32 [ %1139, %1134 ], [ %1133, %1131 ]
  %1137 = getelementptr inbounds i32, ptr %11, i64 %1135
  %1138 = load i32, ptr %1137, align 4, !tbaa !5
  %1139 = mul nsw i32 %1138, %1136
  %1140 = add nsw i64 %1135, -1
  %1141 = trunc i64 %1135 to i32
  %1142 = icmp sgt i32 %1141, 0
  br i1 %1142, label %1134, label %1143, !llvm.loop !54

1143:                                             ; preds = %1134, %1125
  %1144 = phi i32 [ %1129, %1125 ], [ %1139, %1134 ]
  %1145 = and i64 %1094, 4294967295
  %1146 = getelementptr inbounds i32, ptr %6, i64 %1145
  %1147 = load i32, ptr %1146, align 4, !tbaa !5
  %1148 = mul nsw i32 %1147, %1144
  %1149 = add nsw i32 %1148, %1088
  %1150 = icmp sgt i64 %1086, 2
  %1151 = add nsw i64 %1087, -1
  %1152 = add i32 %1085, 1
  br i1 %1150, label %1084, label %1153, !llvm.loop !55

1153:                                             ; preds = %1143, %1081
  %1154 = phi i32 [ %1083, %1081 ], [ %1149, %1143 ]
  %1155 = icmp slt i32 %1154, %5
  br i1 %1155, label %1158, label %1156

1156:                                             ; preds = %1153
  %1157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

1158:                                             ; preds = %1153
  %1159 = sext i32 %1154 to i64
  %1160 = getelementptr inbounds i8, ptr %621, i64 %1159
  %1161 = load i8, ptr %1160, align 1, !tbaa !11
  %1162 = zext i8 %1161 to i32
  %1163 = load i32, ptr %623, align 4, !tbaa !5
  %1164 = add nsw i32 %1163, %1162
  store i32 %1164, ptr %623, align 4, !tbaa !5
  %1165 = add nuw nsw i32 %1082, 1
  br i1 %934, label %1166, label %1216

1166:                                             ; preds = %1158
  %1167 = load i32, ptr %4, align 4, !tbaa !5
  %1168 = load i32, ptr %12, align 4, !tbaa !5
  %1169 = add nsw i32 %1168, -1
  %1170 = icmp slt i32 %1167, %1169
  br i1 %1170, label %1193, label %1171

1171:                                             ; preds = %1166
  %1172 = icmp eq i32 %1167, %1169
  br i1 %1172, label %1173, label %1209

1173:                                             ; preds = %1171
  store i32 0, ptr %4, align 4, !tbaa !5
  %1174 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1174, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1216, label %1175

1175:                                             ; preds = %1173, %1203
  %1176 = phi i64 [ %1207, %1203 ], [ 1, %1173 ]
  %1177 = getelementptr inbounds i32, ptr %4, i64 %1176
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = getelementptr inbounds i32, ptr %12, i64 %1176
  %1180 = load i32, ptr %1179, align 4, !tbaa !5
  %1181 = add nsw i32 %1180, -1
  %1182 = icmp slt i32 %1178, %1181
  br i1 %1182, label %1183, label %1201

1183:                                             ; preds = %1175
  br i1 %1170, label %1193, label %1184

1184:                                             ; preds = %1183
  %1185 = shl i64 %1176, 32
  %1186 = add i64 %1185, -4294967296
  %1187 = ashr exact i64 %1186, 32
  %1188 = getelementptr inbounds i32, ptr %7, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %6, i64 %1176
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = add nsw i32 %1191, %1189
  store i32 %1192, ptr %1190, align 4, !tbaa !5
  br label %1211

1193:                                             ; preds = %1166, %1183
  %1194 = phi i32 [ %1178, %1183 ], [ %1167, %1166 ]
  %1195 = phi ptr [ %1177, %1183 ], [ %4, %1166 ]
  %1196 = phi i64 [ %1176, %1183 ], [ 0, %1166 ]
  %1197 = add nsw i32 %1194, 1
  store i32 %1197, ptr %1195, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %7, i64 %1196
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = getelementptr inbounds i32, ptr %6, i64 %1196
  br label %1211

1201:                                             ; preds = %1175
  %1202 = icmp eq i32 %1178, %1181
  br i1 %1202, label %1203, label %1209

1203:                                             ; preds = %1201
  store i32 0, ptr %1177, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %8, i64 %1176
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1176
  store i32 %1205, ptr %1206, align 4, !tbaa !5
  %1207 = add nuw nsw i64 %1176, 1
  %1208 = icmp eq i64 %1207, %937
  br i1 %1208, label %1216, label %1175, !llvm.loop !56

1209:                                             ; preds = %1171, %1201
  %1210 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1211:                                             ; preds = %1184, %1193
  %1212 = phi ptr [ %1200, %1193 ], [ %1177, %1184 ]
  %1213 = phi i32 [ %1199, %1193 ], [ 1, %1184 ]
  %1214 = load i32, ptr %1212, align 4, !tbaa !5
  %1215 = add nsw i32 %1214, %1213
  store i32 %1215, ptr %1212, align 4, !tbaa !5
  br label %1216

1216:                                             ; preds = %1203, %1211, %1173, %1158
  %1217 = icmp eq i32 %1165, %5
  br i1 %1217, label %5426, label %1081, !llvm.loop !57

1218:                                             ; preds = %628
  %1219 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

1220:                                             ; preds = %18
  %1221 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1222 = load ptr, ptr %1221, align 8, !tbaa !9
  %1223 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1224 = load ptr, ptr %1223, align 8, !tbaa !9
  store i8 0, ptr %1224, align 1, !tbaa !11
  %1225 = icmp eq i32 %13, 0
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1220
  %1227 = load i8, ptr %1222, align 1, !tbaa !11
  store i8 %1227, ptr %1224, align 1, !tbaa !11
  br label %5426

1228:                                             ; preds = %1220
  switch i32 %1, label %1815 [
    i32 1, label %1229
    i32 0, label %1525
  ]

1229:                                             ; preds = %1228
  %1230 = getelementptr inbounds i32, ptr %3, i64 %19
  %1231 = load i32, ptr %1230, align 4, !tbaa !5
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp sgt i32 %5, 0
  br i1 %1232, label %1243, label %1234

1234:                                             ; preds = %1229
  br i1 %1233, label %1235, label %5426

1235:                                             ; preds = %1234
  %1236 = icmp sgt i32 %13, 1
  %1237 = icmp sgt i32 %13, 0
  %1238 = add i32 %13, -2
  %1239 = zext i32 %1238 to i64
  %1240 = zext i32 %13 to i64
  %1241 = add nuw i32 %5, 1
  %1242 = icmp eq i32 %13, 1
  br label %1389

1243:                                             ; preds = %1229
  br i1 %1233, label %1244, label %5426

1244:                                             ; preds = %1243
  %1245 = icmp sgt i32 %13, 1
  %1246 = icmp sgt i32 %13, 0
  %1247 = add i32 %13, -2
  %1248 = zext i32 %1247 to i64
  %1249 = zext i32 %13 to i64
  %1250 = add nuw i32 %5, 1
  %1251 = icmp eq i32 %13, 1
  br label %1252

1252:                                             ; preds = %1244, %1387
  %1253 = phi i32 [ 0, %1244 ], [ %1339, %1387 ]
  %1254 = phi double [ 0.000000e+00, %1244 ], [ %1338, %1387 ]
  %1255 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1245, label %1256, label %1325

1256:                                             ; preds = %1252, %1315
  %1257 = phi i32 [ %1324, %1315 ], [ 0, %1252 ]
  %1258 = phi i64 [ %1266, %1315 ], [ %1249, %1252 ]
  %1259 = phi i64 [ %1323, %1315 ], [ %1248, %1252 ]
  %1260 = phi i32 [ %1321, %1315 ], [ %1255, %1252 ]
  %1261 = sub i32 %1247, %1257
  %1262 = tail call i32 @llvm.smin.i32(i32 %1261, i32 0)
  %1263 = sub i32 %1261, %1262
  %1264 = zext i32 %1263 to i64
  %1265 = add nuw nsw i64 %1264, 1
  %1266 = add nsw i64 %1258, -1
  %1267 = icmp ult i32 %1263, 31
  br i1 %1267, label %1303, label %1268

1268:                                             ; preds = %1256
  %1269 = and i64 %1265, 8589934560
  %1270 = sub i64 %1259, %1269
  br label %1271

1271:                                             ; preds = %1271, %1268
  %1272 = phi i64 [ 0, %1268 ], [ %1295, %1271 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1291, %1271 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1292, %1271 ]
  %1275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1293, %1271 ]
  %1276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1268 ], [ %1294, %1271 ]
  %1277 = sub i64 %1259, %1272
  %1278 = getelementptr inbounds i32, ptr %9, i64 %1277
  %1279 = getelementptr inbounds i32, ptr %1278, i64 -7
  %1280 = load <8 x i32>, ptr %1279, align 4, !tbaa !5
  %1281 = shufflevector <8 x i32> %1280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1282 = getelementptr inbounds i32, ptr %1278, i64 -15
  %1283 = load <8 x i32>, ptr %1282, align 4, !tbaa !5
  %1284 = shufflevector <8 x i32> %1283, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1285 = getelementptr inbounds i32, ptr %1278, i64 -23
  %1286 = load <8 x i32>, ptr %1285, align 4, !tbaa !5
  %1287 = shufflevector <8 x i32> %1286, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1288 = getelementptr inbounds i32, ptr %1278, i64 -31
  %1289 = load <8 x i32>, ptr %1288, align 4, !tbaa !5
  %1290 = shufflevector <8 x i32> %1289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1291 = mul <8 x i32> %1281, %1273
  %1292 = mul <8 x i32> %1284, %1274
  %1293 = mul <8 x i32> %1287, %1275
  %1294 = mul <8 x i32> %1290, %1276
  %1295 = add nuw i64 %1272, 32
  %1296 = icmp eq i64 %1295, %1269
  br i1 %1296, label %1297, label %1271, !llvm.loop !58

1297:                                             ; preds = %1271
  %1298 = mul <8 x i32> %1292, %1291
  %1299 = mul <8 x i32> %1293, %1298
  %1300 = mul <8 x i32> %1294, %1299
  %1301 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1300)
  %1302 = icmp eq i64 %1265, %1269
  br i1 %1302, label %1315, label %1303

1303:                                             ; preds = %1256, %1297
  %1304 = phi i64 [ %1259, %1256 ], [ %1270, %1297 ]
  %1305 = phi i32 [ 1, %1256 ], [ %1301, %1297 ]
  br label %1306

1306:                                             ; preds = %1303, %1306
  %1307 = phi i64 [ %1312, %1306 ], [ %1304, %1303 ]
  %1308 = phi i32 [ %1311, %1306 ], [ %1305, %1303 ]
  %1309 = getelementptr inbounds i32, ptr %9, i64 %1307
  %1310 = load i32, ptr %1309, align 4, !tbaa !5
  %1311 = mul nsw i32 %1310, %1308
  %1312 = add nsw i64 %1307, -1
  %1313 = trunc i64 %1307 to i32
  %1314 = icmp sgt i32 %1313, 0
  br i1 %1314, label %1306, label %1315, !llvm.loop !59

1315:                                             ; preds = %1306, %1297
  %1316 = phi i32 [ %1301, %1297 ], [ %1311, %1306 ]
  %1317 = and i64 %1266, 4294967295
  %1318 = getelementptr inbounds i32, ptr %6, i64 %1317
  %1319 = load i32, ptr %1318, align 4, !tbaa !5
  %1320 = mul nsw i32 %1319, %1316
  %1321 = add nsw i32 %1320, %1260
  %1322 = icmp sgt i64 %1258, 2
  %1323 = add nsw i64 %1259, -1
  %1324 = add i32 %1257, 1
  br i1 %1322, label %1256, label %1325, !llvm.loop !60

1325:                                             ; preds = %1315, %1252
  %1326 = phi i32 [ %1255, %1252 ], [ %1321, %1315 ]
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds double, ptr %2, i64 %1327
  %1329 = load double, ptr %1328, align 8, !tbaa !18
  %1330 = getelementptr inbounds i8, ptr %1222, i64 %1327
  %1331 = load i8, ptr %1330, align 1, !tbaa !11
  %1332 = load i8, ptr %1224, align 1, !tbaa !11
  %1333 = sitofp i8 %1332 to double
  %1334 = sitofp i8 %1331 to double
  %1335 = fmul fast double %1329, %1334
  %1336 = fadd fast double %1335, %1333
  %1337 = fptosi double %1336 to i8
  store i8 %1337, ptr %1224, align 1, !tbaa !11
  %1338 = fadd fast double %1329, %1254
  %1339 = add nuw nsw i32 %1253, 1
  br i1 %1246, label %1340, label %1387

1340:                                             ; preds = %1325
  %1341 = load i32, ptr %4, align 4, !tbaa !5
  %1342 = load i32, ptr %12, align 4, !tbaa !5
  %1343 = add nsw i32 %1342, -1
  %1344 = icmp slt i32 %1341, %1343
  br i1 %1344, label %1364, label %1345

1345:                                             ; preds = %1340
  %1346 = icmp eq i32 %1341, %1343
  br i1 %1346, label %1347, label %1380

1347:                                             ; preds = %1345
  store i32 0, ptr %4, align 4, !tbaa !5
  %1348 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1348, ptr %6, align 4, !tbaa !5
  br i1 %1251, label %1387, label %1349

1349:                                             ; preds = %1347, %1374
  %1350 = phi i64 [ %1378, %1374 ], [ 1, %1347 ]
  %1351 = getelementptr inbounds i32, ptr %4, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = getelementptr inbounds i32, ptr %12, i64 %1350
  %1354 = load i32, ptr %1353, align 4, !tbaa !5
  %1355 = add nsw i32 %1354, -1
  %1356 = icmp slt i32 %1352, %1355
  br i1 %1356, label %1357, label %1372

1357:                                             ; preds = %1349
  br i1 %1344, label %1364, label %1358

1358:                                             ; preds = %1357
  %1359 = getelementptr inbounds i32, ptr %7, i64 %1350
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1362 = load i32, ptr %1361, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, %1360
  store i32 %1363, ptr %1361, align 4, !tbaa !5
  br label %1382

1364:                                             ; preds = %1340, %1357
  %1365 = phi i32 [ %1352, %1357 ], [ %1341, %1340 ]
  %1366 = phi ptr [ %1351, %1357 ], [ %4, %1340 ]
  %1367 = phi i64 [ %1350, %1357 ], [ 0, %1340 ]
  %1368 = add nsw i32 %1365, 1
  store i32 %1368, ptr %1366, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1367
  br label %1382

1372:                                             ; preds = %1349
  %1373 = icmp eq i32 %1352, %1355
  br i1 %1373, label %1374, label %1380

1374:                                             ; preds = %1372
  store i32 0, ptr %1351, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %8, i64 %1350
  %1376 = load i32, ptr %1375, align 4, !tbaa !5
  %1377 = getelementptr inbounds i32, ptr %6, i64 %1350
  store i32 %1376, ptr %1377, align 4, !tbaa !5
  %1378 = add nuw nsw i64 %1350, 1
  %1379 = icmp eq i64 %1378, %1249
  br i1 %1379, label %1387, label %1349, !llvm.loop !61

1380:                                             ; preds = %1345, %1372
  %1381 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1382:                                             ; preds = %1358, %1364
  %1383 = phi ptr [ %1371, %1364 ], [ %1351, %1358 ]
  %1384 = phi i32 [ %1370, %1364 ], [ 1, %1358 ]
  %1385 = load i32, ptr %1383, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1384
  store i32 %1386, ptr %1383, align 4, !tbaa !5
  br label %1387

1387:                                             ; preds = %1374, %1382, %1347, %1325
  %1388 = icmp eq i32 %1339, %5
  br i1 %1388, label %5426, label %1252, !llvm.loop !62

1389:                                             ; preds = %1235, %1523
  %1390 = phi i32 [ 0, %1235 ], [ %1472, %1523 ]
  %1391 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1236, label %1392, label %1461

1392:                                             ; preds = %1389, %1451
  %1393 = phi i32 [ %1460, %1451 ], [ 0, %1389 ]
  %1394 = phi i64 [ %1402, %1451 ], [ %1240, %1389 ]
  %1395 = phi i64 [ %1459, %1451 ], [ %1239, %1389 ]
  %1396 = phi i32 [ %1457, %1451 ], [ %1391, %1389 ]
  %1397 = sub i32 %1238, %1393
  %1398 = tail call i32 @llvm.smin.i32(i32 %1397, i32 0)
  %1399 = sub i32 %1397, %1398
  %1400 = zext i32 %1399 to i64
  %1401 = add nuw nsw i64 %1400, 1
  %1402 = add nsw i64 %1394, -1
  %1403 = icmp ult i32 %1399, 31
  br i1 %1403, label %1439, label %1404

1404:                                             ; preds = %1392
  %1405 = and i64 %1401, 8589934560
  %1406 = sub i64 %1395, %1405
  br label %1407

1407:                                             ; preds = %1407, %1404
  %1408 = phi i64 [ 0, %1404 ], [ %1431, %1407 ]
  %1409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1427, %1407 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1428, %1407 ]
  %1411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1429, %1407 ]
  %1412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1430, %1407 ]
  %1413 = sub i64 %1395, %1408
  %1414 = getelementptr inbounds i32, ptr %11, i64 %1413
  %1415 = getelementptr inbounds i32, ptr %1414, i64 -7
  %1416 = load <8 x i32>, ptr %1415, align 4, !tbaa !5
  %1417 = shufflevector <8 x i32> %1416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1418 = getelementptr inbounds i32, ptr %1414, i64 -15
  %1419 = load <8 x i32>, ptr %1418, align 4, !tbaa !5
  %1420 = shufflevector <8 x i32> %1419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1421 = getelementptr inbounds i32, ptr %1414, i64 -23
  %1422 = load <8 x i32>, ptr %1421, align 4, !tbaa !5
  %1423 = shufflevector <8 x i32> %1422, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1424 = getelementptr inbounds i32, ptr %1414, i64 -31
  %1425 = load <8 x i32>, ptr %1424, align 4, !tbaa !5
  %1426 = shufflevector <8 x i32> %1425, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1427 = mul <8 x i32> %1417, %1409
  %1428 = mul <8 x i32> %1420, %1410
  %1429 = mul <8 x i32> %1423, %1411
  %1430 = mul <8 x i32> %1426, %1412
  %1431 = add nuw i64 %1408, 32
  %1432 = icmp eq i64 %1431, %1405
  br i1 %1432, label %1433, label %1407, !llvm.loop !63

1433:                                             ; preds = %1407
  %1434 = mul <8 x i32> %1428, %1427
  %1435 = mul <8 x i32> %1429, %1434
  %1436 = mul <8 x i32> %1430, %1435
  %1437 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1436)
  %1438 = icmp eq i64 %1401, %1405
  br i1 %1438, label %1451, label %1439

1439:                                             ; preds = %1392, %1433
  %1440 = phi i64 [ %1395, %1392 ], [ %1406, %1433 ]
  %1441 = phi i32 [ 1, %1392 ], [ %1437, %1433 ]
  br label %1442

1442:                                             ; preds = %1439, %1442
  %1443 = phi i64 [ %1448, %1442 ], [ %1440, %1439 ]
  %1444 = phi i32 [ %1447, %1442 ], [ %1441, %1439 ]
  %1445 = getelementptr inbounds i32, ptr %11, i64 %1443
  %1446 = load i32, ptr %1445, align 4, !tbaa !5
  %1447 = mul nsw i32 %1446, %1444
  %1448 = add nsw i64 %1443, -1
  %1449 = trunc i64 %1443 to i32
  %1450 = icmp sgt i32 %1449, 0
  br i1 %1450, label %1442, label %1451, !llvm.loop !64

1451:                                             ; preds = %1442, %1433
  %1452 = phi i32 [ %1437, %1433 ], [ %1447, %1442 ]
  %1453 = and i64 %1402, 4294967295
  %1454 = getelementptr inbounds i32, ptr %6, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !5
  %1456 = mul nsw i32 %1455, %1452
  %1457 = add nsw i32 %1456, %1396
  %1458 = icmp sgt i64 %1394, 2
  %1459 = add nsw i64 %1395, -1
  %1460 = add i32 %1393, 1
  br i1 %1458, label %1392, label %1461, !llvm.loop !65

1461:                                             ; preds = %1451, %1389
  %1462 = phi i32 [ %1391, %1389 ], [ %1457, %1451 ]
  %1463 = icmp slt i32 %1462, %5
  br i1 %1463, label %1466, label %1464

1464:                                             ; preds = %1461
  %1465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

1466:                                             ; preds = %1461
  %1467 = sext i32 %1462 to i64
  %1468 = getelementptr inbounds i8, ptr %1222, i64 %1467
  %1469 = load i8, ptr %1468, align 1, !tbaa !11
  %1470 = load i8, ptr %1224, align 1, !tbaa !11
  %1471 = add i8 %1470, %1469
  store i8 %1471, ptr %1224, align 1, !tbaa !11
  %1472 = add nuw nsw i32 %1390, 1
  br i1 %1237, label %1473, label %1523

1473:                                             ; preds = %1466
  %1474 = load i32, ptr %4, align 4, !tbaa !5
  %1475 = load i32, ptr %12, align 4, !tbaa !5
  %1476 = add nsw i32 %1475, -1
  %1477 = icmp slt i32 %1474, %1476
  br i1 %1477, label %1500, label %1478

1478:                                             ; preds = %1473
  %1479 = icmp eq i32 %1474, %1476
  br i1 %1479, label %1480, label %1516

1480:                                             ; preds = %1478
  store i32 0, ptr %4, align 4, !tbaa !5
  %1481 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1481, ptr %6, align 4, !tbaa !5
  br i1 %1242, label %1523, label %1482

1482:                                             ; preds = %1480, %1510
  %1483 = phi i64 [ %1514, %1510 ], [ 1, %1480 ]
  %1484 = getelementptr inbounds i32, ptr %4, i64 %1483
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = getelementptr inbounds i32, ptr %12, i64 %1483
  %1487 = load i32, ptr %1486, align 4, !tbaa !5
  %1488 = add nsw i32 %1487, -1
  %1489 = icmp slt i32 %1485, %1488
  br i1 %1489, label %1490, label %1508

1490:                                             ; preds = %1482
  br i1 %1477, label %1500, label %1491

1491:                                             ; preds = %1490
  %1492 = shl i64 %1483, 32
  %1493 = add i64 %1492, -4294967296
  %1494 = ashr exact i64 %1493, 32
  %1495 = getelementptr inbounds i32, ptr %7, i64 %1494
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = getelementptr inbounds i32, ptr %6, i64 %1483
  %1498 = load i32, ptr %1497, align 4, !tbaa !5
  %1499 = add nsw i32 %1498, %1496
  store i32 %1499, ptr %1497, align 4, !tbaa !5
  br label %1518

1500:                                             ; preds = %1473, %1490
  %1501 = phi i32 [ %1485, %1490 ], [ %1474, %1473 ]
  %1502 = phi ptr [ %1484, %1490 ], [ %4, %1473 ]
  %1503 = phi i64 [ %1483, %1490 ], [ 0, %1473 ]
  %1504 = add nsw i32 %1501, 1
  store i32 %1504, ptr %1502, align 4, !tbaa !5
  %1505 = getelementptr inbounds i32, ptr %7, i64 %1503
  %1506 = load i32, ptr %1505, align 4, !tbaa !5
  %1507 = getelementptr inbounds i32, ptr %6, i64 %1503
  br label %1518

1508:                                             ; preds = %1482
  %1509 = icmp eq i32 %1485, %1488
  br i1 %1509, label %1510, label %1516

1510:                                             ; preds = %1508
  store i32 0, ptr %1484, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %8, i64 %1483
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = getelementptr inbounds i32, ptr %6, i64 %1483
  store i32 %1512, ptr %1513, align 4, !tbaa !5
  %1514 = add nuw nsw i64 %1483, 1
  %1515 = icmp eq i64 %1514, %1240
  br i1 %1515, label %1523, label %1482, !llvm.loop !66

1516:                                             ; preds = %1478, %1508
  %1517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1518:                                             ; preds = %1491, %1500
  %1519 = phi ptr [ %1507, %1500 ], [ %1484, %1491 ]
  %1520 = phi i32 [ %1506, %1500 ], [ 1, %1491 ]
  %1521 = load i32, ptr %1519, align 4, !tbaa !5
  %1522 = add nsw i32 %1521, %1520
  store i32 %1522, ptr %1519, align 4, !tbaa !5
  br label %1523

1523:                                             ; preds = %1510, %1518, %1480, %1466
  %1524 = icmp eq i32 %1472, %5
  br i1 %1524, label %5426, label %1389, !llvm.loop !67

1525:                                             ; preds = %1228
  %1526 = getelementptr inbounds i32, ptr %3, i64 %19
  %1527 = load i32, ptr %1526, align 4, !tbaa !5
  %1528 = icmp eq i32 %1527, 0
  %1529 = icmp sgt i32 %5, 0
  br i1 %1528, label %1539, label %1530

1530:                                             ; preds = %1525
  br i1 %1529, label %1531, label %5426

1531:                                             ; preds = %1530
  %1532 = icmp sgt i32 %13, 1
  %1533 = icmp sgt i32 %13, 0
  %1534 = add i32 %13, -2
  %1535 = zext i32 %1534 to i64
  %1536 = zext i32 %13 to i64
  %1537 = add nuw i32 %5, 1
  %1538 = icmp eq i32 %13, 1
  br label %1679

1539:                                             ; preds = %1525
  br i1 %1529, label %1540, label %5426

1540:                                             ; preds = %1539
  %1541 = icmp sgt i32 %13, 1
  %1542 = icmp sgt i32 %13, 0
  %1543 = add i32 %13, -2
  %1544 = zext i32 %1543 to i64
  %1545 = zext i32 %13 to i64
  %1546 = add nuw i32 %5, 1
  %1547 = icmp eq i32 %13, 1
  br label %1548

1548:                                             ; preds = %1540, %1677
  %1549 = phi i32 [ 0, %1540 ], [ %1629, %1677 ]
  %1550 = phi double [ 0.000000e+00, %1540 ], [ %1628, %1677 ]
  %1551 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1541, label %1552, label %1621

1552:                                             ; preds = %1548, %1611
  %1553 = phi i32 [ %1620, %1611 ], [ 0, %1548 ]
  %1554 = phi i64 [ %1562, %1611 ], [ %1545, %1548 ]
  %1555 = phi i64 [ %1619, %1611 ], [ %1544, %1548 ]
  %1556 = phi i32 [ %1617, %1611 ], [ %1551, %1548 ]
  %1557 = sub i32 %1543, %1553
  %1558 = tail call i32 @llvm.smin.i32(i32 %1557, i32 0)
  %1559 = sub i32 %1557, %1558
  %1560 = zext i32 %1559 to i64
  %1561 = add nuw nsw i64 %1560, 1
  %1562 = add nsw i64 %1554, -1
  %1563 = icmp ult i32 %1559, 31
  br i1 %1563, label %1599, label %1564

1564:                                             ; preds = %1552
  %1565 = and i64 %1561, 8589934560
  %1566 = sub i64 %1555, %1565
  br label %1567

1567:                                             ; preds = %1567, %1564
  %1568 = phi i64 [ 0, %1564 ], [ %1591, %1567 ]
  %1569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1564 ], [ %1587, %1567 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1564 ], [ %1588, %1567 ]
  %1571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1564 ], [ %1589, %1567 ]
  %1572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1564 ], [ %1590, %1567 ]
  %1573 = sub i64 %1555, %1568
  %1574 = getelementptr inbounds i32, ptr %9, i64 %1573
  %1575 = getelementptr inbounds i32, ptr %1574, i64 -7
  %1576 = load <8 x i32>, ptr %1575, align 4, !tbaa !5
  %1577 = shufflevector <8 x i32> %1576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1578 = getelementptr inbounds i32, ptr %1574, i64 -15
  %1579 = load <8 x i32>, ptr %1578, align 4, !tbaa !5
  %1580 = shufflevector <8 x i32> %1579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1581 = getelementptr inbounds i32, ptr %1574, i64 -23
  %1582 = load <8 x i32>, ptr %1581, align 4, !tbaa !5
  %1583 = shufflevector <8 x i32> %1582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1584 = getelementptr inbounds i32, ptr %1574, i64 -31
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !5
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = mul <8 x i32> %1577, %1569
  %1588 = mul <8 x i32> %1580, %1570
  %1589 = mul <8 x i32> %1583, %1571
  %1590 = mul <8 x i32> %1586, %1572
  %1591 = add nuw i64 %1568, 32
  %1592 = icmp eq i64 %1591, %1565
  br i1 %1592, label %1593, label %1567, !llvm.loop !68

1593:                                             ; preds = %1567
  %1594 = mul <8 x i32> %1588, %1587
  %1595 = mul <8 x i32> %1589, %1594
  %1596 = mul <8 x i32> %1590, %1595
  %1597 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1596)
  %1598 = icmp eq i64 %1561, %1565
  br i1 %1598, label %1611, label %1599

1599:                                             ; preds = %1552, %1593
  %1600 = phi i64 [ %1555, %1552 ], [ %1566, %1593 ]
  %1601 = phi i32 [ 1, %1552 ], [ %1597, %1593 ]
  br label %1602

1602:                                             ; preds = %1599, %1602
  %1603 = phi i64 [ %1608, %1602 ], [ %1600, %1599 ]
  %1604 = phi i32 [ %1607, %1602 ], [ %1601, %1599 ]
  %1605 = getelementptr inbounds i32, ptr %9, i64 %1603
  %1606 = load i32, ptr %1605, align 4, !tbaa !5
  %1607 = mul nsw i32 %1606, %1604
  %1608 = add nsw i64 %1603, -1
  %1609 = trunc i64 %1603 to i32
  %1610 = icmp sgt i32 %1609, 0
  br i1 %1610, label %1602, label %1611, !llvm.loop !69

1611:                                             ; preds = %1602, %1593
  %1612 = phi i32 [ %1597, %1593 ], [ %1607, %1602 ]
  %1613 = and i64 %1562, 4294967295
  %1614 = getelementptr inbounds i32, ptr %6, i64 %1613
  %1615 = load i32, ptr %1614, align 4, !tbaa !5
  %1616 = mul nsw i32 %1615, %1612
  %1617 = add nsw i32 %1616, %1556
  %1618 = icmp sgt i64 %1554, 2
  %1619 = add nsw i64 %1555, -1
  %1620 = add i32 %1553, 1
  br i1 %1618, label %1552, label %1621, !llvm.loop !70

1621:                                             ; preds = %1611, %1548
  %1622 = phi i32 [ %1551, %1548 ], [ %1617, %1611 ]
  %1623 = sext i32 %1622 to i64
  %1624 = getelementptr inbounds i8, ptr %1222, i64 %1623
  %1625 = load i8, ptr %1624, align 1, !tbaa !11
  %1626 = load i8, ptr %1224, align 1, !tbaa !11
  %1627 = add i8 %1626, %1625
  store i8 %1627, ptr %1224, align 1, !tbaa !11
  %1628 = fadd fast double %1550, 1.000000e+00
  %1629 = add nuw nsw i32 %1549, 1
  br i1 %1542, label %1630, label %1677

1630:                                             ; preds = %1621
  %1631 = load i32, ptr %4, align 4, !tbaa !5
  %1632 = load i32, ptr %12, align 4, !tbaa !5
  %1633 = add nsw i32 %1632, -1
  %1634 = icmp slt i32 %1631, %1633
  br i1 %1634, label %1654, label %1635

1635:                                             ; preds = %1630
  %1636 = icmp eq i32 %1631, %1633
  br i1 %1636, label %1637, label %1670

1637:                                             ; preds = %1635
  store i32 0, ptr %4, align 4, !tbaa !5
  %1638 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1638, ptr %6, align 4, !tbaa !5
  br i1 %1547, label %1677, label %1639

1639:                                             ; preds = %1637, %1664
  %1640 = phi i64 [ %1668, %1664 ], [ 1, %1637 ]
  %1641 = getelementptr inbounds i32, ptr %4, i64 %1640
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = getelementptr inbounds i32, ptr %12, i64 %1640
  %1644 = load i32, ptr %1643, align 4, !tbaa !5
  %1645 = add nsw i32 %1644, -1
  %1646 = icmp slt i32 %1642, %1645
  br i1 %1646, label %1647, label %1662

1647:                                             ; preds = %1639
  br i1 %1634, label %1654, label %1648

1648:                                             ; preds = %1647
  %1649 = getelementptr inbounds i32, ptr %7, i64 %1640
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = getelementptr inbounds i32, ptr %6, i64 %1640
  %1652 = load i32, ptr %1651, align 4, !tbaa !5
  %1653 = add nsw i32 %1652, %1650
  store i32 %1653, ptr %1651, align 4, !tbaa !5
  br label %1672

1654:                                             ; preds = %1630, %1647
  %1655 = phi i32 [ %1642, %1647 ], [ %1631, %1630 ]
  %1656 = phi ptr [ %1641, %1647 ], [ %4, %1630 ]
  %1657 = phi i64 [ %1640, %1647 ], [ 0, %1630 ]
  %1658 = add nsw i32 %1655, 1
  store i32 %1658, ptr %1656, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %7, i64 %1657
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1657
  br label %1672

1662:                                             ; preds = %1639
  %1663 = icmp eq i32 %1642, %1645
  br i1 %1663, label %1664, label %1670

1664:                                             ; preds = %1662
  store i32 0, ptr %1641, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %8, i64 %1640
  %1666 = load i32, ptr %1665, align 4, !tbaa !5
  %1667 = getelementptr inbounds i32, ptr %6, i64 %1640
  store i32 %1666, ptr %1667, align 4, !tbaa !5
  %1668 = add nuw nsw i64 %1640, 1
  %1669 = icmp eq i64 %1668, %1545
  br i1 %1669, label %1677, label %1639, !llvm.loop !71

1670:                                             ; preds = %1635, %1662
  %1671 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1672:                                             ; preds = %1648, %1654
  %1673 = phi ptr [ %1661, %1654 ], [ %1641, %1648 ]
  %1674 = phi i32 [ %1660, %1654 ], [ 1, %1648 ]
  %1675 = load i32, ptr %1673, align 4, !tbaa !5
  %1676 = add nsw i32 %1675, %1674
  store i32 %1676, ptr %1673, align 4, !tbaa !5
  br label %1677

1677:                                             ; preds = %1664, %1672, %1637, %1621
  %1678 = icmp eq i32 %1629, %5
  br i1 %1678, label %5426, label %1548, !llvm.loop !72

1679:                                             ; preds = %1531, %1813
  %1680 = phi i32 [ 0, %1531 ], [ %1762, %1813 ]
  %1681 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1532, label %1682, label %1751

1682:                                             ; preds = %1679, %1741
  %1683 = phi i32 [ %1750, %1741 ], [ 0, %1679 ]
  %1684 = phi i64 [ %1692, %1741 ], [ %1536, %1679 ]
  %1685 = phi i64 [ %1749, %1741 ], [ %1535, %1679 ]
  %1686 = phi i32 [ %1747, %1741 ], [ %1681, %1679 ]
  %1687 = sub i32 %1534, %1683
  %1688 = tail call i32 @llvm.smin.i32(i32 %1687, i32 0)
  %1689 = sub i32 %1687, %1688
  %1690 = zext i32 %1689 to i64
  %1691 = add nuw nsw i64 %1690, 1
  %1692 = add nsw i64 %1684, -1
  %1693 = icmp ult i32 %1689, 31
  br i1 %1693, label %1729, label %1694

1694:                                             ; preds = %1682
  %1695 = and i64 %1691, 8589934560
  %1696 = sub i64 %1685, %1695
  br label %1697

1697:                                             ; preds = %1697, %1694
  %1698 = phi i64 [ 0, %1694 ], [ %1721, %1697 ]
  %1699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1694 ], [ %1717, %1697 ]
  %1700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1694 ], [ %1718, %1697 ]
  %1701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1694 ], [ %1719, %1697 ]
  %1702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1694 ], [ %1720, %1697 ]
  %1703 = sub i64 %1685, %1698
  %1704 = getelementptr inbounds i32, ptr %11, i64 %1703
  %1705 = getelementptr inbounds i32, ptr %1704, i64 -7
  %1706 = load <8 x i32>, ptr %1705, align 4, !tbaa !5
  %1707 = shufflevector <8 x i32> %1706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1708 = getelementptr inbounds i32, ptr %1704, i64 -15
  %1709 = load <8 x i32>, ptr %1708, align 4, !tbaa !5
  %1710 = shufflevector <8 x i32> %1709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1711 = getelementptr inbounds i32, ptr %1704, i64 -23
  %1712 = load <8 x i32>, ptr %1711, align 4, !tbaa !5
  %1713 = shufflevector <8 x i32> %1712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1714 = getelementptr inbounds i32, ptr %1704, i64 -31
  %1715 = load <8 x i32>, ptr %1714, align 4, !tbaa !5
  %1716 = shufflevector <8 x i32> %1715, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1717 = mul <8 x i32> %1707, %1699
  %1718 = mul <8 x i32> %1710, %1700
  %1719 = mul <8 x i32> %1713, %1701
  %1720 = mul <8 x i32> %1716, %1702
  %1721 = add nuw i64 %1698, 32
  %1722 = icmp eq i64 %1721, %1695
  br i1 %1722, label %1723, label %1697, !llvm.loop !73

1723:                                             ; preds = %1697
  %1724 = mul <8 x i32> %1718, %1717
  %1725 = mul <8 x i32> %1719, %1724
  %1726 = mul <8 x i32> %1720, %1725
  %1727 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1726)
  %1728 = icmp eq i64 %1691, %1695
  br i1 %1728, label %1741, label %1729

1729:                                             ; preds = %1682, %1723
  %1730 = phi i64 [ %1685, %1682 ], [ %1696, %1723 ]
  %1731 = phi i32 [ 1, %1682 ], [ %1727, %1723 ]
  br label %1732

1732:                                             ; preds = %1729, %1732
  %1733 = phi i64 [ %1738, %1732 ], [ %1730, %1729 ]
  %1734 = phi i32 [ %1737, %1732 ], [ %1731, %1729 ]
  %1735 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1736 = load i32, ptr %1735, align 4, !tbaa !5
  %1737 = mul nsw i32 %1736, %1734
  %1738 = add nsw i64 %1733, -1
  %1739 = trunc i64 %1733 to i32
  %1740 = icmp sgt i32 %1739, 0
  br i1 %1740, label %1732, label %1741, !llvm.loop !74

1741:                                             ; preds = %1732, %1723
  %1742 = phi i32 [ %1727, %1723 ], [ %1737, %1732 ]
  %1743 = and i64 %1692, 4294967295
  %1744 = getelementptr inbounds i32, ptr %6, i64 %1743
  %1745 = load i32, ptr %1744, align 4, !tbaa !5
  %1746 = mul nsw i32 %1745, %1742
  %1747 = add nsw i32 %1746, %1686
  %1748 = icmp sgt i64 %1684, 2
  %1749 = add nsw i64 %1685, -1
  %1750 = add i32 %1683, 1
  br i1 %1748, label %1682, label %1751, !llvm.loop !75

1751:                                             ; preds = %1741, %1679
  %1752 = phi i32 [ %1681, %1679 ], [ %1747, %1741 ]
  %1753 = icmp slt i32 %1752, %5
  br i1 %1753, label %1756, label %1754

1754:                                             ; preds = %1751
  %1755 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

1756:                                             ; preds = %1751
  %1757 = sext i32 %1752 to i64
  %1758 = getelementptr inbounds i8, ptr %1222, i64 %1757
  %1759 = load i8, ptr %1758, align 1, !tbaa !11
  %1760 = load i8, ptr %1224, align 1, !tbaa !11
  %1761 = add i8 %1760, %1759
  store i8 %1761, ptr %1224, align 1, !tbaa !11
  %1762 = add nuw nsw i32 %1680, 1
  br i1 %1533, label %1763, label %1813

1763:                                             ; preds = %1756
  %1764 = load i32, ptr %4, align 4, !tbaa !5
  %1765 = load i32, ptr %12, align 4, !tbaa !5
  %1766 = add nsw i32 %1765, -1
  %1767 = icmp slt i32 %1764, %1766
  br i1 %1767, label %1790, label %1768

1768:                                             ; preds = %1763
  %1769 = icmp eq i32 %1764, %1766
  br i1 %1769, label %1770, label %1806

1770:                                             ; preds = %1768
  store i32 0, ptr %4, align 4, !tbaa !5
  %1771 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1771, ptr %6, align 4, !tbaa !5
  br i1 %1538, label %1813, label %1772

1772:                                             ; preds = %1770, %1800
  %1773 = phi i64 [ %1804, %1800 ], [ 1, %1770 ]
  %1774 = getelementptr inbounds i32, ptr %4, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = getelementptr inbounds i32, ptr %12, i64 %1773
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = add nsw i32 %1777, -1
  %1779 = icmp slt i32 %1775, %1778
  br i1 %1779, label %1780, label %1798

1780:                                             ; preds = %1772
  br i1 %1767, label %1790, label %1781

1781:                                             ; preds = %1780
  %1782 = shl i64 %1773, 32
  %1783 = add i64 %1782, -4294967296
  %1784 = ashr exact i64 %1783, 32
  %1785 = getelementptr inbounds i32, ptr %7, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = add nsw i32 %1788, %1786
  store i32 %1789, ptr %1787, align 4, !tbaa !5
  br label %1808

1790:                                             ; preds = %1763, %1780
  %1791 = phi i32 [ %1775, %1780 ], [ %1764, %1763 ]
  %1792 = phi ptr [ %1774, %1780 ], [ %4, %1763 ]
  %1793 = phi i64 [ %1773, %1780 ], [ 0, %1763 ]
  %1794 = add nsw i32 %1791, 1
  store i32 %1794, ptr %1792, align 4, !tbaa !5
  %1795 = getelementptr inbounds i32, ptr %7, i64 %1793
  %1796 = load i32, ptr %1795, align 4, !tbaa !5
  %1797 = getelementptr inbounds i32, ptr %6, i64 %1793
  br label %1808

1798:                                             ; preds = %1772
  %1799 = icmp eq i32 %1775, %1778
  br i1 %1799, label %1800, label %1806

1800:                                             ; preds = %1798
  store i32 0, ptr %1774, align 4, !tbaa !5
  %1801 = getelementptr inbounds i32, ptr %8, i64 %1773
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = getelementptr inbounds i32, ptr %6, i64 %1773
  store i32 %1802, ptr %1803, align 4, !tbaa !5
  %1804 = add nuw nsw i64 %1773, 1
  %1805 = icmp eq i64 %1804, %1536
  br i1 %1805, label %1813, label %1772, !llvm.loop !76

1806:                                             ; preds = %1768, %1798
  %1807 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1808:                                             ; preds = %1781, %1790
  %1809 = phi ptr [ %1797, %1790 ], [ %1774, %1781 ]
  %1810 = phi i32 [ %1796, %1790 ], [ 1, %1781 ]
  %1811 = load i32, ptr %1809, align 4, !tbaa !5
  %1812 = add nsw i32 %1811, %1810
  store i32 %1812, ptr %1809, align 4, !tbaa !5
  br label %1813

1813:                                             ; preds = %1800, %1808, %1770, %1756
  %1814 = icmp eq i32 %1762, %5
  br i1 %1814, label %5426, label %1679, !llvm.loop !77

1815:                                             ; preds = %1228
  %1816 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

1817:                                             ; preds = %18
  %1818 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1819 = load ptr, ptr %1818, align 8, !tbaa !9
  %1820 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1821 = load ptr, ptr %1820, align 8, !tbaa !9
  store i16 0, ptr %1821, align 2, !tbaa !78
  %1822 = icmp eq i32 %13, 0
  br i1 %1822, label %1823, label %1826

1823:                                             ; preds = %1817
  %1824 = load i8, ptr %1819, align 1, !tbaa !11
  %1825 = zext i8 %1824 to i16
  store i16 %1825, ptr %1821, align 2, !tbaa !78
  br label %5426

1826:                                             ; preds = %1817
  switch i32 %1, label %2419 [
    i32 1, label %1827
    i32 0, label %2127
  ]

1827:                                             ; preds = %1826
  %1828 = getelementptr inbounds i32, ptr %3, i64 %19
  %1829 = load i32, ptr %1828, align 4, !tbaa !5
  %1830 = icmp eq i32 %1829, 0
  %1831 = icmp sgt i32 %5, 0
  br i1 %1830, label %1841, label %1832

1832:                                             ; preds = %1827
  br i1 %1831, label %1833, label %5426

1833:                                             ; preds = %1832
  %1834 = icmp sgt i32 %13, 1
  %1835 = icmp sgt i32 %13, 0
  %1836 = add i32 %13, -2
  %1837 = zext i32 %1836 to i64
  %1838 = zext i32 %13 to i64
  %1839 = add nuw i32 %5, 1
  %1840 = icmp eq i32 %13, 1
  br label %1987

1841:                                             ; preds = %1827
  br i1 %1831, label %1842, label %5426

1842:                                             ; preds = %1841
  %1843 = icmp sgt i32 %13, 1
  %1844 = icmp sgt i32 %13, 0
  %1845 = add i32 %13, -2
  %1846 = zext i32 %1845 to i64
  %1847 = zext i32 %13 to i64
  %1848 = add nuw i32 %5, 1
  %1849 = icmp eq i32 %13, 1
  br label %1850

1850:                                             ; preds = %1842, %1985
  %1851 = phi i16 [ 0, %1842 ], [ %1935, %1985 ]
  %1852 = phi i32 [ 0, %1842 ], [ %1937, %1985 ]
  %1853 = phi double [ 0.000000e+00, %1842 ], [ %1936, %1985 ]
  %1854 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1843, label %1855, label %1924

1855:                                             ; preds = %1850, %1914
  %1856 = phi i32 [ %1923, %1914 ], [ 0, %1850 ]
  %1857 = phi i64 [ %1865, %1914 ], [ %1847, %1850 ]
  %1858 = phi i64 [ %1922, %1914 ], [ %1846, %1850 ]
  %1859 = phi i32 [ %1920, %1914 ], [ %1854, %1850 ]
  %1860 = sub i32 %1845, %1856
  %1861 = tail call i32 @llvm.smin.i32(i32 %1860, i32 0)
  %1862 = sub i32 %1860, %1861
  %1863 = zext i32 %1862 to i64
  %1864 = add nuw nsw i64 %1863, 1
  %1865 = add nsw i64 %1857, -1
  %1866 = icmp ult i32 %1862, 31
  br i1 %1866, label %1902, label %1867

1867:                                             ; preds = %1855
  %1868 = and i64 %1864, 8589934560
  %1869 = sub i64 %1858, %1868
  br label %1870

1870:                                             ; preds = %1870, %1867
  %1871 = phi i64 [ 0, %1867 ], [ %1894, %1870 ]
  %1872 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1867 ], [ %1890, %1870 ]
  %1873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1867 ], [ %1891, %1870 ]
  %1874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1867 ], [ %1892, %1870 ]
  %1875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1867 ], [ %1893, %1870 ]
  %1876 = sub i64 %1858, %1871
  %1877 = getelementptr inbounds i32, ptr %9, i64 %1876
  %1878 = getelementptr inbounds i32, ptr %1877, i64 -7
  %1879 = load <8 x i32>, ptr %1878, align 4, !tbaa !5
  %1880 = shufflevector <8 x i32> %1879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1881 = getelementptr inbounds i32, ptr %1877, i64 -15
  %1882 = load <8 x i32>, ptr %1881, align 4, !tbaa !5
  %1883 = shufflevector <8 x i32> %1882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1884 = getelementptr inbounds i32, ptr %1877, i64 -23
  %1885 = load <8 x i32>, ptr %1884, align 4, !tbaa !5
  %1886 = shufflevector <8 x i32> %1885, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1887 = getelementptr inbounds i32, ptr %1877, i64 -31
  %1888 = load <8 x i32>, ptr %1887, align 4, !tbaa !5
  %1889 = shufflevector <8 x i32> %1888, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1890 = mul <8 x i32> %1880, %1872
  %1891 = mul <8 x i32> %1883, %1873
  %1892 = mul <8 x i32> %1886, %1874
  %1893 = mul <8 x i32> %1889, %1875
  %1894 = add nuw i64 %1871, 32
  %1895 = icmp eq i64 %1894, %1868
  br i1 %1895, label %1896, label %1870, !llvm.loop !80

1896:                                             ; preds = %1870
  %1897 = mul <8 x i32> %1891, %1890
  %1898 = mul <8 x i32> %1892, %1897
  %1899 = mul <8 x i32> %1893, %1898
  %1900 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1899)
  %1901 = icmp eq i64 %1864, %1868
  br i1 %1901, label %1914, label %1902

1902:                                             ; preds = %1855, %1896
  %1903 = phi i64 [ %1858, %1855 ], [ %1869, %1896 ]
  %1904 = phi i32 [ 1, %1855 ], [ %1900, %1896 ]
  br label %1905

1905:                                             ; preds = %1902, %1905
  %1906 = phi i64 [ %1911, %1905 ], [ %1903, %1902 ]
  %1907 = phi i32 [ %1910, %1905 ], [ %1904, %1902 ]
  %1908 = getelementptr inbounds i32, ptr %9, i64 %1906
  %1909 = load i32, ptr %1908, align 4, !tbaa !5
  %1910 = mul nsw i32 %1909, %1907
  %1911 = add nsw i64 %1906, -1
  %1912 = trunc i64 %1906 to i32
  %1913 = icmp sgt i32 %1912, 0
  br i1 %1913, label %1905, label %1914, !llvm.loop !81

1914:                                             ; preds = %1905, %1896
  %1915 = phi i32 [ %1900, %1896 ], [ %1910, %1905 ]
  %1916 = and i64 %1865, 4294967295
  %1917 = getelementptr inbounds i32, ptr %6, i64 %1916
  %1918 = load i32, ptr %1917, align 4, !tbaa !5
  %1919 = mul nsw i32 %1918, %1915
  %1920 = add nsw i32 %1919, %1859
  %1921 = icmp sgt i64 %1857, 2
  %1922 = add nsw i64 %1858, -1
  %1923 = add i32 %1856, 1
  br i1 %1921, label %1855, label %1924, !llvm.loop !82

1924:                                             ; preds = %1914, %1850
  %1925 = phi i32 [ %1854, %1850 ], [ %1920, %1914 ]
  %1926 = sext i32 %1925 to i64
  %1927 = getelementptr inbounds double, ptr %2, i64 %1926
  %1928 = load double, ptr %1927, align 8, !tbaa !18
  %1929 = getelementptr inbounds i8, ptr %1819, i64 %1926
  %1930 = load i8, ptr %1929, align 1, !tbaa !11
  %1931 = sitofp i16 %1851 to double
  %1932 = uitofp i8 %1930 to double
  %1933 = fmul fast double %1928, %1932
  %1934 = fadd fast double %1933, %1931
  %1935 = fptosi double %1934 to i16
  store i16 %1935, ptr %1821, align 2, !tbaa !78
  %1936 = fadd fast double %1928, %1853
  %1937 = add nuw nsw i32 %1852, 1
  br i1 %1844, label %1938, label %1985

1938:                                             ; preds = %1924
  %1939 = load i32, ptr %4, align 4, !tbaa !5
  %1940 = load i32, ptr %12, align 4, !tbaa !5
  %1941 = add nsw i32 %1940, -1
  %1942 = icmp slt i32 %1939, %1941
  br i1 %1942, label %1962, label %1943

1943:                                             ; preds = %1938
  %1944 = icmp eq i32 %1939, %1941
  br i1 %1944, label %1945, label %1978

1945:                                             ; preds = %1943
  store i32 0, ptr %4, align 4, !tbaa !5
  %1946 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1946, ptr %6, align 4, !tbaa !5
  br i1 %1849, label %1985, label %1947

1947:                                             ; preds = %1945, %1972
  %1948 = phi i64 [ %1976, %1972 ], [ 1, %1945 ]
  %1949 = getelementptr inbounds i32, ptr %4, i64 %1948
  %1950 = load i32, ptr %1949, align 4, !tbaa !5
  %1951 = getelementptr inbounds i32, ptr %12, i64 %1948
  %1952 = load i32, ptr %1951, align 4, !tbaa !5
  %1953 = add nsw i32 %1952, -1
  %1954 = icmp slt i32 %1950, %1953
  br i1 %1954, label %1955, label %1970

1955:                                             ; preds = %1947
  br i1 %1942, label %1962, label %1956

1956:                                             ; preds = %1955
  %1957 = getelementptr inbounds i32, ptr %7, i64 %1948
  %1958 = load i32, ptr %1957, align 4, !tbaa !5
  %1959 = getelementptr inbounds i32, ptr %6, i64 %1948
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = add nsw i32 %1960, %1958
  store i32 %1961, ptr %1959, align 4, !tbaa !5
  br label %1980

1962:                                             ; preds = %1938, %1955
  %1963 = phi i32 [ %1950, %1955 ], [ %1939, %1938 ]
  %1964 = phi ptr [ %1949, %1955 ], [ %4, %1938 ]
  %1965 = phi i64 [ %1948, %1955 ], [ 0, %1938 ]
  %1966 = add nsw i32 %1963, 1
  store i32 %1966, ptr %1964, align 4, !tbaa !5
  %1967 = getelementptr inbounds i32, ptr %7, i64 %1965
  %1968 = load i32, ptr %1967, align 4, !tbaa !5
  %1969 = getelementptr inbounds i32, ptr %6, i64 %1965
  br label %1980

1970:                                             ; preds = %1947
  %1971 = icmp eq i32 %1950, %1953
  br i1 %1971, label %1972, label %1978

1972:                                             ; preds = %1970
  store i32 0, ptr %1949, align 4, !tbaa !5
  %1973 = getelementptr inbounds i32, ptr %8, i64 %1948
  %1974 = load i32, ptr %1973, align 4, !tbaa !5
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1948
  store i32 %1974, ptr %1975, align 4, !tbaa !5
  %1976 = add nuw nsw i64 %1948, 1
  %1977 = icmp eq i64 %1976, %1847
  br i1 %1977, label %1985, label %1947, !llvm.loop !83

1978:                                             ; preds = %1943, %1970
  %1979 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

1980:                                             ; preds = %1956, %1962
  %1981 = phi ptr [ %1969, %1962 ], [ %1949, %1956 ]
  %1982 = phi i32 [ %1968, %1962 ], [ 1, %1956 ]
  %1983 = load i32, ptr %1981, align 4, !tbaa !5
  %1984 = add nsw i32 %1983, %1982
  store i32 %1984, ptr %1981, align 4, !tbaa !5
  br label %1985

1985:                                             ; preds = %1972, %1980, %1945, %1924
  %1986 = icmp eq i32 %1937, %5
  br i1 %1986, label %5426, label %1850, !llvm.loop !84

1987:                                             ; preds = %1833, %2125
  %1988 = phi i32 [ 0, %1833 ], [ %2072, %2125 ]
  %1989 = phi i32 [ 0, %1833 ], [ %2074, %2125 ]
  %1990 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1834, label %1991, label %2060

1991:                                             ; preds = %1987, %2050
  %1992 = phi i32 [ %2059, %2050 ], [ 0, %1987 ]
  %1993 = phi i64 [ %2001, %2050 ], [ %1838, %1987 ]
  %1994 = phi i64 [ %2058, %2050 ], [ %1837, %1987 ]
  %1995 = phi i32 [ %2056, %2050 ], [ %1990, %1987 ]
  %1996 = sub i32 %1836, %1992
  %1997 = tail call i32 @llvm.smin.i32(i32 %1996, i32 0)
  %1998 = sub i32 %1996, %1997
  %1999 = zext i32 %1998 to i64
  %2000 = add nuw nsw i64 %1999, 1
  %2001 = add nsw i64 %1993, -1
  %2002 = icmp ult i32 %1998, 31
  br i1 %2002, label %2038, label %2003

2003:                                             ; preds = %1991
  %2004 = and i64 %2000, 8589934560
  %2005 = sub i64 %1994, %2004
  br label %2006

2006:                                             ; preds = %2006, %2003
  %2007 = phi i64 [ 0, %2003 ], [ %2030, %2006 ]
  %2008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2003 ], [ %2026, %2006 ]
  %2009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2003 ], [ %2027, %2006 ]
  %2010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2003 ], [ %2028, %2006 ]
  %2011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2003 ], [ %2029, %2006 ]
  %2012 = sub i64 %1994, %2007
  %2013 = getelementptr inbounds i32, ptr %11, i64 %2012
  %2014 = getelementptr inbounds i32, ptr %2013, i64 -7
  %2015 = load <8 x i32>, ptr %2014, align 4, !tbaa !5
  %2016 = shufflevector <8 x i32> %2015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2017 = getelementptr inbounds i32, ptr %2013, i64 -15
  %2018 = load <8 x i32>, ptr %2017, align 4, !tbaa !5
  %2019 = shufflevector <8 x i32> %2018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2020 = getelementptr inbounds i32, ptr %2013, i64 -23
  %2021 = load <8 x i32>, ptr %2020, align 4, !tbaa !5
  %2022 = shufflevector <8 x i32> %2021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2023 = getelementptr inbounds i32, ptr %2013, i64 -31
  %2024 = load <8 x i32>, ptr %2023, align 4, !tbaa !5
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2026 = mul <8 x i32> %2016, %2008
  %2027 = mul <8 x i32> %2019, %2009
  %2028 = mul <8 x i32> %2022, %2010
  %2029 = mul <8 x i32> %2025, %2011
  %2030 = add nuw i64 %2007, 32
  %2031 = icmp eq i64 %2030, %2004
  br i1 %2031, label %2032, label %2006, !llvm.loop !85

2032:                                             ; preds = %2006
  %2033 = mul <8 x i32> %2027, %2026
  %2034 = mul <8 x i32> %2028, %2033
  %2035 = mul <8 x i32> %2029, %2034
  %2036 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2035)
  %2037 = icmp eq i64 %2000, %2004
  br i1 %2037, label %2050, label %2038

2038:                                             ; preds = %1991, %2032
  %2039 = phi i64 [ %1994, %1991 ], [ %2005, %2032 ]
  %2040 = phi i32 [ 1, %1991 ], [ %2036, %2032 ]
  br label %2041

2041:                                             ; preds = %2038, %2041
  %2042 = phi i64 [ %2047, %2041 ], [ %2039, %2038 ]
  %2043 = phi i32 [ %2046, %2041 ], [ %2040, %2038 ]
  %2044 = getelementptr inbounds i32, ptr %11, i64 %2042
  %2045 = load i32, ptr %2044, align 4, !tbaa !5
  %2046 = mul nsw i32 %2045, %2043
  %2047 = add nsw i64 %2042, -1
  %2048 = trunc i64 %2042 to i32
  %2049 = icmp sgt i32 %2048, 0
  br i1 %2049, label %2041, label %2050, !llvm.loop !86

2050:                                             ; preds = %2041, %2032
  %2051 = phi i32 [ %2036, %2032 ], [ %2046, %2041 ]
  %2052 = and i64 %2001, 4294967295
  %2053 = getelementptr inbounds i32, ptr %6, i64 %2052
  %2054 = load i32, ptr %2053, align 4, !tbaa !5
  %2055 = mul nsw i32 %2054, %2051
  %2056 = add nsw i32 %2055, %1995
  %2057 = icmp sgt i64 %1993, 2
  %2058 = add nsw i64 %1994, -1
  %2059 = add i32 %1992, 1
  br i1 %2057, label %1991, label %2060, !llvm.loop !87

2060:                                             ; preds = %2050, %1987
  %2061 = phi i32 [ %1990, %1987 ], [ %2056, %2050 ]
  %2062 = icmp slt i32 %2061, %5
  br i1 %2062, label %2065, label %2063

2063:                                             ; preds = %2060
  %2064 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

2065:                                             ; preds = %2060
  %2066 = sext i32 %2061 to i64
  %2067 = getelementptr inbounds i8, ptr %1819, i64 %2066
  %2068 = load i8, ptr %2067, align 1, !tbaa !11
  %2069 = shl i32 %1988, 16
  %2070 = ashr exact i32 %2069, 16
  %2071 = zext i8 %2068 to i32
  %2072 = add nsw i32 %2070, %2071
  %2073 = trunc i32 %2072 to i16
  store i16 %2073, ptr %1821, align 2, !tbaa !78
  %2074 = add nuw nsw i32 %1989, 1
  br i1 %1835, label %2075, label %2125

2075:                                             ; preds = %2065
  %2076 = load i32, ptr %4, align 4, !tbaa !5
  %2077 = load i32, ptr %12, align 4, !tbaa !5
  %2078 = add nsw i32 %2077, -1
  %2079 = icmp slt i32 %2076, %2078
  br i1 %2079, label %2102, label %2080

2080:                                             ; preds = %2075
  %2081 = icmp eq i32 %2076, %2078
  br i1 %2081, label %2082, label %2118

2082:                                             ; preds = %2080
  store i32 0, ptr %4, align 4, !tbaa !5
  %2083 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2083, ptr %6, align 4, !tbaa !5
  br i1 %1840, label %2125, label %2084

2084:                                             ; preds = %2082, %2112
  %2085 = phi i64 [ %2116, %2112 ], [ 1, %2082 ]
  %2086 = getelementptr inbounds i32, ptr %4, i64 %2085
  %2087 = load i32, ptr %2086, align 4, !tbaa !5
  %2088 = getelementptr inbounds i32, ptr %12, i64 %2085
  %2089 = load i32, ptr %2088, align 4, !tbaa !5
  %2090 = add nsw i32 %2089, -1
  %2091 = icmp slt i32 %2087, %2090
  br i1 %2091, label %2092, label %2110

2092:                                             ; preds = %2084
  br i1 %2079, label %2102, label %2093

2093:                                             ; preds = %2092
  %2094 = shl i64 %2085, 32
  %2095 = add i64 %2094, -4294967296
  %2096 = ashr exact i64 %2095, 32
  %2097 = getelementptr inbounds i32, ptr %7, i64 %2096
  %2098 = load i32, ptr %2097, align 4, !tbaa !5
  %2099 = getelementptr inbounds i32, ptr %6, i64 %2085
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, %2098
  store i32 %2101, ptr %2099, align 4, !tbaa !5
  br label %2120

2102:                                             ; preds = %2075, %2092
  %2103 = phi i32 [ %2087, %2092 ], [ %2076, %2075 ]
  %2104 = phi ptr [ %2086, %2092 ], [ %4, %2075 ]
  %2105 = phi i64 [ %2085, %2092 ], [ 0, %2075 ]
  %2106 = add nsw i32 %2103, 1
  store i32 %2106, ptr %2104, align 4, !tbaa !5
  %2107 = getelementptr inbounds i32, ptr %7, i64 %2105
  %2108 = load i32, ptr %2107, align 4, !tbaa !5
  %2109 = getelementptr inbounds i32, ptr %6, i64 %2105
  br label %2120

2110:                                             ; preds = %2084
  %2111 = icmp eq i32 %2087, %2090
  br i1 %2111, label %2112, label %2118

2112:                                             ; preds = %2110
  store i32 0, ptr %2086, align 4, !tbaa !5
  %2113 = getelementptr inbounds i32, ptr %8, i64 %2085
  %2114 = load i32, ptr %2113, align 4, !tbaa !5
  %2115 = getelementptr inbounds i32, ptr %6, i64 %2085
  store i32 %2114, ptr %2115, align 4, !tbaa !5
  %2116 = add nuw nsw i64 %2085, 1
  %2117 = icmp eq i64 %2116, %1838
  br i1 %2117, label %2125, label %2084, !llvm.loop !88

2118:                                             ; preds = %2080, %2110
  %2119 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2120:                                             ; preds = %2093, %2102
  %2121 = phi ptr [ %2109, %2102 ], [ %2086, %2093 ]
  %2122 = phi i32 [ %2108, %2102 ], [ 1, %2093 ]
  %2123 = load i32, ptr %2121, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, %2122
  store i32 %2124, ptr %2121, align 4, !tbaa !5
  br label %2125

2125:                                             ; preds = %2112, %2120, %2082, %2065
  %2126 = icmp eq i32 %2074, %5
  br i1 %2126, label %5426, label %1987, !llvm.loop !89

2127:                                             ; preds = %1826
  %2128 = getelementptr inbounds i32, ptr %3, i64 %19
  %2129 = load i32, ptr %2128, align 4, !tbaa !5
  %2130 = icmp eq i32 %2129, 0
  %2131 = icmp sgt i32 %5, 0
  br i1 %2130, label %2141, label %2132

2132:                                             ; preds = %2127
  br i1 %2131, label %2133, label %5426

2133:                                             ; preds = %2132
  %2134 = icmp sgt i32 %13, 1
  %2135 = icmp sgt i32 %13, 0
  %2136 = add i32 %13, -2
  %2137 = zext i32 %2136 to i64
  %2138 = zext i32 %13 to i64
  %2139 = add nuw i32 %5, 1
  %2140 = icmp eq i32 %13, 1
  br label %2282

2141:                                             ; preds = %2127
  br i1 %2131, label %2142, label %5426

2142:                                             ; preds = %2141
  %2143 = icmp sgt i32 %13, 1
  %2144 = icmp sgt i32 %13, 0
  %2145 = add i32 %13, -2
  %2146 = zext i32 %2145 to i64
  %2147 = zext i32 %13 to i64
  %2148 = add nuw i32 %5, 1
  %2149 = icmp eq i32 %13, 1
  br label %2150

2150:                                             ; preds = %2142, %2280
  %2151 = phi i16 [ 0, %2142 ], [ %2230, %2280 ]
  %2152 = phi i32 [ 0, %2142 ], [ %2232, %2280 ]
  %2153 = phi double [ 0.000000e+00, %2142 ], [ %2231, %2280 ]
  %2154 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2143, label %2155, label %2224

2155:                                             ; preds = %2150, %2214
  %2156 = phi i32 [ %2223, %2214 ], [ 0, %2150 ]
  %2157 = phi i64 [ %2165, %2214 ], [ %2147, %2150 ]
  %2158 = phi i64 [ %2222, %2214 ], [ %2146, %2150 ]
  %2159 = phi i32 [ %2220, %2214 ], [ %2154, %2150 ]
  %2160 = sub i32 %2145, %2156
  %2161 = tail call i32 @llvm.smin.i32(i32 %2160, i32 0)
  %2162 = sub i32 %2160, %2161
  %2163 = zext i32 %2162 to i64
  %2164 = add nuw nsw i64 %2163, 1
  %2165 = add nsw i64 %2157, -1
  %2166 = icmp ult i32 %2162, 31
  br i1 %2166, label %2202, label %2167

2167:                                             ; preds = %2155
  %2168 = and i64 %2164, 8589934560
  %2169 = sub i64 %2158, %2168
  br label %2170

2170:                                             ; preds = %2170, %2167
  %2171 = phi i64 [ 0, %2167 ], [ %2194, %2170 ]
  %2172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2167 ], [ %2190, %2170 ]
  %2173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2167 ], [ %2191, %2170 ]
  %2174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2167 ], [ %2192, %2170 ]
  %2175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2167 ], [ %2193, %2170 ]
  %2176 = sub i64 %2158, %2171
  %2177 = getelementptr inbounds i32, ptr %9, i64 %2176
  %2178 = getelementptr inbounds i32, ptr %2177, i64 -7
  %2179 = load <8 x i32>, ptr %2178, align 4, !tbaa !5
  %2180 = shufflevector <8 x i32> %2179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2181 = getelementptr inbounds i32, ptr %2177, i64 -15
  %2182 = load <8 x i32>, ptr %2181, align 4, !tbaa !5
  %2183 = shufflevector <8 x i32> %2182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2184 = getelementptr inbounds i32, ptr %2177, i64 -23
  %2185 = load <8 x i32>, ptr %2184, align 4, !tbaa !5
  %2186 = shufflevector <8 x i32> %2185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2187 = getelementptr inbounds i32, ptr %2177, i64 -31
  %2188 = load <8 x i32>, ptr %2187, align 4, !tbaa !5
  %2189 = shufflevector <8 x i32> %2188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2190 = mul <8 x i32> %2180, %2172
  %2191 = mul <8 x i32> %2183, %2173
  %2192 = mul <8 x i32> %2186, %2174
  %2193 = mul <8 x i32> %2189, %2175
  %2194 = add nuw i64 %2171, 32
  %2195 = icmp eq i64 %2194, %2168
  br i1 %2195, label %2196, label %2170, !llvm.loop !90

2196:                                             ; preds = %2170
  %2197 = mul <8 x i32> %2191, %2190
  %2198 = mul <8 x i32> %2192, %2197
  %2199 = mul <8 x i32> %2193, %2198
  %2200 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2199)
  %2201 = icmp eq i64 %2164, %2168
  br i1 %2201, label %2214, label %2202

2202:                                             ; preds = %2155, %2196
  %2203 = phi i64 [ %2158, %2155 ], [ %2169, %2196 ]
  %2204 = phi i32 [ 1, %2155 ], [ %2200, %2196 ]
  br label %2205

2205:                                             ; preds = %2202, %2205
  %2206 = phi i64 [ %2211, %2205 ], [ %2203, %2202 ]
  %2207 = phi i32 [ %2210, %2205 ], [ %2204, %2202 ]
  %2208 = getelementptr inbounds i32, ptr %9, i64 %2206
  %2209 = load i32, ptr %2208, align 4, !tbaa !5
  %2210 = mul nsw i32 %2209, %2207
  %2211 = add nsw i64 %2206, -1
  %2212 = trunc i64 %2206 to i32
  %2213 = icmp sgt i32 %2212, 0
  br i1 %2213, label %2205, label %2214, !llvm.loop !91

2214:                                             ; preds = %2205, %2196
  %2215 = phi i32 [ %2200, %2196 ], [ %2210, %2205 ]
  %2216 = and i64 %2165, 4294967295
  %2217 = getelementptr inbounds i32, ptr %6, i64 %2216
  %2218 = load i32, ptr %2217, align 4, !tbaa !5
  %2219 = mul nsw i32 %2218, %2215
  %2220 = add nsw i32 %2219, %2159
  %2221 = icmp sgt i64 %2157, 2
  %2222 = add nsw i64 %2158, -1
  %2223 = add i32 %2156, 1
  br i1 %2221, label %2155, label %2224, !llvm.loop !92

2224:                                             ; preds = %2214, %2150
  %2225 = phi i32 [ %2154, %2150 ], [ %2220, %2214 ]
  %2226 = sext i32 %2225 to i64
  %2227 = getelementptr inbounds i8, ptr %1819, i64 %2226
  %2228 = load i8, ptr %2227, align 1, !tbaa !11
  %2229 = zext i8 %2228 to i16
  %2230 = add i16 %2151, %2229
  store i16 %2230, ptr %1821, align 2, !tbaa !78
  %2231 = fadd fast double %2153, 1.000000e+00
  %2232 = add nuw nsw i32 %2152, 1
  br i1 %2144, label %2233, label %2280

2233:                                             ; preds = %2224
  %2234 = load i32, ptr %4, align 4, !tbaa !5
  %2235 = load i32, ptr %12, align 4, !tbaa !5
  %2236 = add nsw i32 %2235, -1
  %2237 = icmp slt i32 %2234, %2236
  br i1 %2237, label %2257, label %2238

2238:                                             ; preds = %2233
  %2239 = icmp eq i32 %2234, %2236
  br i1 %2239, label %2240, label %2273

2240:                                             ; preds = %2238
  store i32 0, ptr %4, align 4, !tbaa !5
  %2241 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2241, ptr %6, align 4, !tbaa !5
  br i1 %2149, label %2280, label %2242

2242:                                             ; preds = %2240, %2267
  %2243 = phi i64 [ %2271, %2267 ], [ 1, %2240 ]
  %2244 = getelementptr inbounds i32, ptr %4, i64 %2243
  %2245 = load i32, ptr %2244, align 4, !tbaa !5
  %2246 = getelementptr inbounds i32, ptr %12, i64 %2243
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = add nsw i32 %2247, -1
  %2249 = icmp slt i32 %2245, %2248
  br i1 %2249, label %2250, label %2265

2250:                                             ; preds = %2242
  br i1 %2237, label %2257, label %2251

2251:                                             ; preds = %2250
  %2252 = getelementptr inbounds i32, ptr %7, i64 %2243
  %2253 = load i32, ptr %2252, align 4, !tbaa !5
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2243
  %2255 = load i32, ptr %2254, align 4, !tbaa !5
  %2256 = add nsw i32 %2255, %2253
  store i32 %2256, ptr %2254, align 4, !tbaa !5
  br label %2275

2257:                                             ; preds = %2233, %2250
  %2258 = phi i32 [ %2245, %2250 ], [ %2234, %2233 ]
  %2259 = phi ptr [ %2244, %2250 ], [ %4, %2233 ]
  %2260 = phi i64 [ %2243, %2250 ], [ 0, %2233 ]
  %2261 = add nsw i32 %2258, 1
  store i32 %2261, ptr %2259, align 4, !tbaa !5
  %2262 = getelementptr inbounds i32, ptr %7, i64 %2260
  %2263 = load i32, ptr %2262, align 4, !tbaa !5
  %2264 = getelementptr inbounds i32, ptr %6, i64 %2260
  br label %2275

2265:                                             ; preds = %2242
  %2266 = icmp eq i32 %2245, %2248
  br i1 %2266, label %2267, label %2273

2267:                                             ; preds = %2265
  store i32 0, ptr %2244, align 4, !tbaa !5
  %2268 = getelementptr inbounds i32, ptr %8, i64 %2243
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %6, i64 %2243
  store i32 %2269, ptr %2270, align 4, !tbaa !5
  %2271 = add nuw nsw i64 %2243, 1
  %2272 = icmp eq i64 %2271, %2147
  br i1 %2272, label %2280, label %2242, !llvm.loop !93

2273:                                             ; preds = %2238, %2265
  %2274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2275:                                             ; preds = %2251, %2257
  %2276 = phi ptr [ %2264, %2257 ], [ %2244, %2251 ]
  %2277 = phi i32 [ %2263, %2257 ], [ 1, %2251 ]
  %2278 = load i32, ptr %2276, align 4, !tbaa !5
  %2279 = add nsw i32 %2278, %2277
  store i32 %2279, ptr %2276, align 4, !tbaa !5
  br label %2280

2280:                                             ; preds = %2267, %2275, %2240, %2224
  %2281 = icmp eq i32 %2232, %5
  br i1 %2281, label %5426, label %2150, !llvm.loop !94

2282:                                             ; preds = %2133, %2417
  %2283 = phi i16 [ 0, %2133 ], [ %2365, %2417 ]
  %2284 = phi i32 [ 0, %2133 ], [ %2366, %2417 ]
  %2285 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2134, label %2286, label %2355

2286:                                             ; preds = %2282, %2345
  %2287 = phi i32 [ %2354, %2345 ], [ 0, %2282 ]
  %2288 = phi i64 [ %2296, %2345 ], [ %2138, %2282 ]
  %2289 = phi i64 [ %2353, %2345 ], [ %2137, %2282 ]
  %2290 = phi i32 [ %2351, %2345 ], [ %2285, %2282 ]
  %2291 = sub i32 %2136, %2287
  %2292 = tail call i32 @llvm.smin.i32(i32 %2291, i32 0)
  %2293 = sub i32 %2291, %2292
  %2294 = zext i32 %2293 to i64
  %2295 = add nuw nsw i64 %2294, 1
  %2296 = add nsw i64 %2288, -1
  %2297 = icmp ult i32 %2293, 31
  br i1 %2297, label %2333, label %2298

2298:                                             ; preds = %2286
  %2299 = and i64 %2295, 8589934560
  %2300 = sub i64 %2289, %2299
  br label %2301

2301:                                             ; preds = %2301, %2298
  %2302 = phi i64 [ 0, %2298 ], [ %2325, %2301 ]
  %2303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2298 ], [ %2321, %2301 ]
  %2304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2298 ], [ %2322, %2301 ]
  %2305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2298 ], [ %2323, %2301 ]
  %2306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2298 ], [ %2324, %2301 ]
  %2307 = sub i64 %2289, %2302
  %2308 = getelementptr inbounds i32, ptr %11, i64 %2307
  %2309 = getelementptr inbounds i32, ptr %2308, i64 -7
  %2310 = load <8 x i32>, ptr %2309, align 4, !tbaa !5
  %2311 = shufflevector <8 x i32> %2310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2312 = getelementptr inbounds i32, ptr %2308, i64 -15
  %2313 = load <8 x i32>, ptr %2312, align 4, !tbaa !5
  %2314 = shufflevector <8 x i32> %2313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2315 = getelementptr inbounds i32, ptr %2308, i64 -23
  %2316 = load <8 x i32>, ptr %2315, align 4, !tbaa !5
  %2317 = shufflevector <8 x i32> %2316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2318 = getelementptr inbounds i32, ptr %2308, i64 -31
  %2319 = load <8 x i32>, ptr %2318, align 4, !tbaa !5
  %2320 = shufflevector <8 x i32> %2319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2321 = mul <8 x i32> %2311, %2303
  %2322 = mul <8 x i32> %2314, %2304
  %2323 = mul <8 x i32> %2317, %2305
  %2324 = mul <8 x i32> %2320, %2306
  %2325 = add nuw i64 %2302, 32
  %2326 = icmp eq i64 %2325, %2299
  br i1 %2326, label %2327, label %2301, !llvm.loop !95

2327:                                             ; preds = %2301
  %2328 = mul <8 x i32> %2322, %2321
  %2329 = mul <8 x i32> %2323, %2328
  %2330 = mul <8 x i32> %2324, %2329
  %2331 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2330)
  %2332 = icmp eq i64 %2295, %2299
  br i1 %2332, label %2345, label %2333

2333:                                             ; preds = %2286, %2327
  %2334 = phi i64 [ %2289, %2286 ], [ %2300, %2327 ]
  %2335 = phi i32 [ 1, %2286 ], [ %2331, %2327 ]
  br label %2336

2336:                                             ; preds = %2333, %2336
  %2337 = phi i64 [ %2342, %2336 ], [ %2334, %2333 ]
  %2338 = phi i32 [ %2341, %2336 ], [ %2335, %2333 ]
  %2339 = getelementptr inbounds i32, ptr %11, i64 %2337
  %2340 = load i32, ptr %2339, align 4, !tbaa !5
  %2341 = mul nsw i32 %2340, %2338
  %2342 = add nsw i64 %2337, -1
  %2343 = trunc i64 %2337 to i32
  %2344 = icmp sgt i32 %2343, 0
  br i1 %2344, label %2336, label %2345, !llvm.loop !96

2345:                                             ; preds = %2336, %2327
  %2346 = phi i32 [ %2331, %2327 ], [ %2341, %2336 ]
  %2347 = and i64 %2296, 4294967295
  %2348 = getelementptr inbounds i32, ptr %6, i64 %2347
  %2349 = load i32, ptr %2348, align 4, !tbaa !5
  %2350 = mul nsw i32 %2349, %2346
  %2351 = add nsw i32 %2350, %2290
  %2352 = icmp sgt i64 %2288, 2
  %2353 = add nsw i64 %2289, -1
  %2354 = add i32 %2287, 1
  br i1 %2352, label %2286, label %2355, !llvm.loop !97

2355:                                             ; preds = %2345, %2282
  %2356 = phi i32 [ %2285, %2282 ], [ %2351, %2345 ]
  %2357 = icmp slt i32 %2356, %5
  br i1 %2357, label %2360, label %2358

2358:                                             ; preds = %2355
  %2359 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

2360:                                             ; preds = %2355
  %2361 = sext i32 %2356 to i64
  %2362 = getelementptr inbounds i8, ptr %1819, i64 %2361
  %2363 = load i8, ptr %2362, align 1, !tbaa !11
  %2364 = zext i8 %2363 to i16
  %2365 = add i16 %2283, %2364
  store i16 %2365, ptr %1821, align 2, !tbaa !78
  %2366 = add nuw nsw i32 %2284, 1
  br i1 %2135, label %2367, label %2417

2367:                                             ; preds = %2360
  %2368 = load i32, ptr %4, align 4, !tbaa !5
  %2369 = load i32, ptr %12, align 4, !tbaa !5
  %2370 = add nsw i32 %2369, -1
  %2371 = icmp slt i32 %2368, %2370
  br i1 %2371, label %2394, label %2372

2372:                                             ; preds = %2367
  %2373 = icmp eq i32 %2368, %2370
  br i1 %2373, label %2374, label %2410

2374:                                             ; preds = %2372
  store i32 0, ptr %4, align 4, !tbaa !5
  %2375 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2375, ptr %6, align 4, !tbaa !5
  br i1 %2140, label %2417, label %2376

2376:                                             ; preds = %2374, %2404
  %2377 = phi i64 [ %2408, %2404 ], [ 1, %2374 ]
  %2378 = getelementptr inbounds i32, ptr %4, i64 %2377
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = getelementptr inbounds i32, ptr %12, i64 %2377
  %2381 = load i32, ptr %2380, align 4, !tbaa !5
  %2382 = add nsw i32 %2381, -1
  %2383 = icmp slt i32 %2379, %2382
  br i1 %2383, label %2384, label %2402

2384:                                             ; preds = %2376
  br i1 %2371, label %2394, label %2385

2385:                                             ; preds = %2384
  %2386 = shl i64 %2377, 32
  %2387 = add i64 %2386, -4294967296
  %2388 = ashr exact i64 %2387, 32
  %2389 = getelementptr inbounds i32, ptr %7, i64 %2388
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = getelementptr inbounds i32, ptr %6, i64 %2377
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = add nsw i32 %2392, %2390
  store i32 %2393, ptr %2391, align 4, !tbaa !5
  br label %2412

2394:                                             ; preds = %2367, %2384
  %2395 = phi i32 [ %2379, %2384 ], [ %2368, %2367 ]
  %2396 = phi ptr [ %2378, %2384 ], [ %4, %2367 ]
  %2397 = phi i64 [ %2377, %2384 ], [ 0, %2367 ]
  %2398 = add nsw i32 %2395, 1
  store i32 %2398, ptr %2396, align 4, !tbaa !5
  %2399 = getelementptr inbounds i32, ptr %7, i64 %2397
  %2400 = load i32, ptr %2399, align 4, !tbaa !5
  %2401 = getelementptr inbounds i32, ptr %6, i64 %2397
  br label %2412

2402:                                             ; preds = %2376
  %2403 = icmp eq i32 %2379, %2382
  br i1 %2403, label %2404, label %2410

2404:                                             ; preds = %2402
  store i32 0, ptr %2378, align 4, !tbaa !5
  %2405 = getelementptr inbounds i32, ptr %8, i64 %2377
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %6, i64 %2377
  store i32 %2406, ptr %2407, align 4, !tbaa !5
  %2408 = add nuw nsw i64 %2377, 1
  %2409 = icmp eq i64 %2408, %2138
  br i1 %2409, label %2417, label %2376, !llvm.loop !98

2410:                                             ; preds = %2372, %2402
  %2411 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2412:                                             ; preds = %2385, %2394
  %2413 = phi ptr [ %2401, %2394 ], [ %2378, %2385 ]
  %2414 = phi i32 [ %2400, %2394 ], [ 1, %2385 ]
  %2415 = load i32, ptr %2413, align 4, !tbaa !5
  %2416 = add nsw i32 %2415, %2414
  store i32 %2416, ptr %2413, align 4, !tbaa !5
  br label %2417

2417:                                             ; preds = %2404, %2412, %2374, %2360
  %2418 = icmp eq i32 %2366, %5
  br i1 %2418, label %5426, label %2282, !llvm.loop !99

2419:                                             ; preds = %1826
  %2420 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

2421:                                             ; preds = %18
  %2422 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2423 = load ptr, ptr %2422, align 8, !tbaa !9
  %2424 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2425 = load ptr, ptr %2424, align 8, !tbaa !9
  store i32 0, ptr %2425, align 4, !tbaa !5
  %2426 = icmp eq i32 %13, 0
  br i1 %2426, label %2427, label %2430

2427:                                             ; preds = %2421
  %2428 = load i8, ptr %2423, align 1, !tbaa !11
  %2429 = zext i8 %2428 to i32
  store i32 %2429, ptr %2425, align 4, !tbaa !5
  br label %5426

2430:                                             ; preds = %2421
  switch i32 %1, label %3020 [
    i32 1, label %2431
    i32 0, label %2728
  ]

2431:                                             ; preds = %2430
  %2432 = getelementptr inbounds i32, ptr %3, i64 %19
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = icmp eq i32 %2433, 0
  %2435 = icmp sgt i32 %5, 0
  br i1 %2434, label %2445, label %2436

2436:                                             ; preds = %2431
  br i1 %2435, label %2437, label %5426

2437:                                             ; preds = %2436
  %2438 = icmp sgt i32 %13, 1
  %2439 = icmp sgt i32 %13, 0
  %2440 = add i32 %13, -2
  %2441 = zext i32 %2440 to i64
  %2442 = zext i32 %13 to i64
  %2443 = add nuw i32 %5, 1
  %2444 = icmp eq i32 %13, 1
  br label %2591

2445:                                             ; preds = %2431
  br i1 %2435, label %2446, label %5426

2446:                                             ; preds = %2445
  %2447 = icmp sgt i32 %13, 1
  %2448 = icmp sgt i32 %13, 0
  %2449 = add i32 %13, -2
  %2450 = zext i32 %2449 to i64
  %2451 = zext i32 %13 to i64
  %2452 = add nuw i32 %5, 1
  %2453 = icmp eq i32 %13, 1
  br label %2454

2454:                                             ; preds = %2446, %2589
  %2455 = phi i32 [ 0, %2446 ], [ %2541, %2589 ]
  %2456 = phi double [ 0.000000e+00, %2446 ], [ %2540, %2589 ]
  %2457 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2447, label %2458, label %2527

2458:                                             ; preds = %2454, %2517
  %2459 = phi i32 [ %2526, %2517 ], [ 0, %2454 ]
  %2460 = phi i64 [ %2468, %2517 ], [ %2451, %2454 ]
  %2461 = phi i64 [ %2525, %2517 ], [ %2450, %2454 ]
  %2462 = phi i32 [ %2523, %2517 ], [ %2457, %2454 ]
  %2463 = sub i32 %2449, %2459
  %2464 = tail call i32 @llvm.smin.i32(i32 %2463, i32 0)
  %2465 = sub i32 %2463, %2464
  %2466 = zext i32 %2465 to i64
  %2467 = add nuw nsw i64 %2466, 1
  %2468 = add nsw i64 %2460, -1
  %2469 = icmp ult i32 %2465, 31
  br i1 %2469, label %2505, label %2470

2470:                                             ; preds = %2458
  %2471 = and i64 %2467, 8589934560
  %2472 = sub i64 %2461, %2471
  br label %2473

2473:                                             ; preds = %2473, %2470
  %2474 = phi i64 [ 0, %2470 ], [ %2497, %2473 ]
  %2475 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2470 ], [ %2493, %2473 ]
  %2476 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2470 ], [ %2494, %2473 ]
  %2477 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2470 ], [ %2495, %2473 ]
  %2478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2470 ], [ %2496, %2473 ]
  %2479 = sub i64 %2461, %2474
  %2480 = getelementptr inbounds i32, ptr %9, i64 %2479
  %2481 = getelementptr inbounds i32, ptr %2480, i64 -7
  %2482 = load <8 x i32>, ptr %2481, align 4, !tbaa !5
  %2483 = shufflevector <8 x i32> %2482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2484 = getelementptr inbounds i32, ptr %2480, i64 -15
  %2485 = load <8 x i32>, ptr %2484, align 4, !tbaa !5
  %2486 = shufflevector <8 x i32> %2485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2487 = getelementptr inbounds i32, ptr %2480, i64 -23
  %2488 = load <8 x i32>, ptr %2487, align 4, !tbaa !5
  %2489 = shufflevector <8 x i32> %2488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2490 = getelementptr inbounds i32, ptr %2480, i64 -31
  %2491 = load <8 x i32>, ptr %2490, align 4, !tbaa !5
  %2492 = shufflevector <8 x i32> %2491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2493 = mul <8 x i32> %2483, %2475
  %2494 = mul <8 x i32> %2486, %2476
  %2495 = mul <8 x i32> %2489, %2477
  %2496 = mul <8 x i32> %2492, %2478
  %2497 = add nuw i64 %2474, 32
  %2498 = icmp eq i64 %2497, %2471
  br i1 %2498, label %2499, label %2473, !llvm.loop !100

2499:                                             ; preds = %2473
  %2500 = mul <8 x i32> %2494, %2493
  %2501 = mul <8 x i32> %2495, %2500
  %2502 = mul <8 x i32> %2496, %2501
  %2503 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2502)
  %2504 = icmp eq i64 %2467, %2471
  br i1 %2504, label %2517, label %2505

2505:                                             ; preds = %2458, %2499
  %2506 = phi i64 [ %2461, %2458 ], [ %2472, %2499 ]
  %2507 = phi i32 [ 1, %2458 ], [ %2503, %2499 ]
  br label %2508

2508:                                             ; preds = %2505, %2508
  %2509 = phi i64 [ %2514, %2508 ], [ %2506, %2505 ]
  %2510 = phi i32 [ %2513, %2508 ], [ %2507, %2505 ]
  %2511 = getelementptr inbounds i32, ptr %9, i64 %2509
  %2512 = load i32, ptr %2511, align 4, !tbaa !5
  %2513 = mul nsw i32 %2512, %2510
  %2514 = add nsw i64 %2509, -1
  %2515 = trunc i64 %2509 to i32
  %2516 = icmp sgt i32 %2515, 0
  br i1 %2516, label %2508, label %2517, !llvm.loop !101

2517:                                             ; preds = %2508, %2499
  %2518 = phi i32 [ %2503, %2499 ], [ %2513, %2508 ]
  %2519 = and i64 %2468, 4294967295
  %2520 = getelementptr inbounds i32, ptr %6, i64 %2519
  %2521 = load i32, ptr %2520, align 4, !tbaa !5
  %2522 = mul nsw i32 %2521, %2518
  %2523 = add nsw i32 %2522, %2462
  %2524 = icmp sgt i64 %2460, 2
  %2525 = add nsw i64 %2461, -1
  %2526 = add i32 %2459, 1
  br i1 %2524, label %2458, label %2527, !llvm.loop !102

2527:                                             ; preds = %2517, %2454
  %2528 = phi i32 [ %2457, %2454 ], [ %2523, %2517 ]
  %2529 = sext i32 %2528 to i64
  %2530 = getelementptr inbounds double, ptr %2, i64 %2529
  %2531 = load double, ptr %2530, align 8, !tbaa !18
  %2532 = getelementptr inbounds i8, ptr %2423, i64 %2529
  %2533 = load i8, ptr %2532, align 1, !tbaa !11
  %2534 = load i32, ptr %2425, align 4, !tbaa !5
  %2535 = sitofp i32 %2534 to double
  %2536 = uitofp i8 %2533 to double
  %2537 = fmul fast double %2531, %2536
  %2538 = fadd fast double %2537, %2535
  %2539 = fptosi double %2538 to i32
  store i32 %2539, ptr %2425, align 4, !tbaa !5
  %2540 = fadd fast double %2531, %2456
  %2541 = add nuw nsw i32 %2455, 1
  br i1 %2448, label %2542, label %2589

2542:                                             ; preds = %2527
  %2543 = load i32, ptr %4, align 4, !tbaa !5
  %2544 = load i32, ptr %12, align 4, !tbaa !5
  %2545 = add nsw i32 %2544, -1
  %2546 = icmp slt i32 %2543, %2545
  br i1 %2546, label %2566, label %2547

2547:                                             ; preds = %2542
  %2548 = icmp eq i32 %2543, %2545
  br i1 %2548, label %2549, label %2582

2549:                                             ; preds = %2547
  store i32 0, ptr %4, align 4, !tbaa !5
  %2550 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2550, ptr %6, align 4, !tbaa !5
  br i1 %2453, label %2589, label %2551

2551:                                             ; preds = %2549, %2576
  %2552 = phi i64 [ %2580, %2576 ], [ 1, %2549 ]
  %2553 = getelementptr inbounds i32, ptr %4, i64 %2552
  %2554 = load i32, ptr %2553, align 4, !tbaa !5
  %2555 = getelementptr inbounds i32, ptr %12, i64 %2552
  %2556 = load i32, ptr %2555, align 4, !tbaa !5
  %2557 = add nsw i32 %2556, -1
  %2558 = icmp slt i32 %2554, %2557
  br i1 %2558, label %2559, label %2574

2559:                                             ; preds = %2551
  br i1 %2546, label %2566, label %2560

2560:                                             ; preds = %2559
  %2561 = getelementptr inbounds i32, ptr %7, i64 %2552
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = getelementptr inbounds i32, ptr %6, i64 %2552
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = add nsw i32 %2564, %2562
  store i32 %2565, ptr %2563, align 4, !tbaa !5
  br label %2584

2566:                                             ; preds = %2542, %2559
  %2567 = phi i32 [ %2554, %2559 ], [ %2543, %2542 ]
  %2568 = phi ptr [ %2553, %2559 ], [ %4, %2542 ]
  %2569 = phi i64 [ %2552, %2559 ], [ 0, %2542 ]
  %2570 = add nsw i32 %2567, 1
  store i32 %2570, ptr %2568, align 4, !tbaa !5
  %2571 = getelementptr inbounds i32, ptr %7, i64 %2569
  %2572 = load i32, ptr %2571, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %6, i64 %2569
  br label %2584

2574:                                             ; preds = %2551
  %2575 = icmp eq i32 %2554, %2557
  br i1 %2575, label %2576, label %2582

2576:                                             ; preds = %2574
  store i32 0, ptr %2553, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %8, i64 %2552
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = getelementptr inbounds i32, ptr %6, i64 %2552
  store i32 %2578, ptr %2579, align 4, !tbaa !5
  %2580 = add nuw nsw i64 %2552, 1
  %2581 = icmp eq i64 %2580, %2451
  br i1 %2581, label %2589, label %2551, !llvm.loop !103

2582:                                             ; preds = %2547, %2574
  %2583 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2584:                                             ; preds = %2560, %2566
  %2585 = phi ptr [ %2573, %2566 ], [ %2553, %2560 ]
  %2586 = phi i32 [ %2572, %2566 ], [ 1, %2560 ]
  %2587 = load i32, ptr %2585, align 4, !tbaa !5
  %2588 = add nsw i32 %2587, %2586
  store i32 %2588, ptr %2585, align 4, !tbaa !5
  br label %2589

2589:                                             ; preds = %2576, %2584, %2549, %2527
  %2590 = icmp eq i32 %2541, %5
  br i1 %2590, label %5426, label %2454, !llvm.loop !104

2591:                                             ; preds = %2437, %2726
  %2592 = phi i32 [ 0, %2437 ], [ %2675, %2726 ]
  %2593 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2438, label %2594, label %2663

2594:                                             ; preds = %2591, %2653
  %2595 = phi i32 [ %2662, %2653 ], [ 0, %2591 ]
  %2596 = phi i64 [ %2604, %2653 ], [ %2442, %2591 ]
  %2597 = phi i64 [ %2661, %2653 ], [ %2441, %2591 ]
  %2598 = phi i32 [ %2659, %2653 ], [ %2593, %2591 ]
  %2599 = sub i32 %2440, %2595
  %2600 = tail call i32 @llvm.smin.i32(i32 %2599, i32 0)
  %2601 = sub i32 %2599, %2600
  %2602 = zext i32 %2601 to i64
  %2603 = add nuw nsw i64 %2602, 1
  %2604 = add nsw i64 %2596, -1
  %2605 = icmp ult i32 %2601, 31
  br i1 %2605, label %2641, label %2606

2606:                                             ; preds = %2594
  %2607 = and i64 %2603, 8589934560
  %2608 = sub i64 %2597, %2607
  br label %2609

2609:                                             ; preds = %2609, %2606
  %2610 = phi i64 [ 0, %2606 ], [ %2633, %2609 ]
  %2611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2629, %2609 ]
  %2612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2630, %2609 ]
  %2613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2631, %2609 ]
  %2614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2632, %2609 ]
  %2615 = sub i64 %2597, %2610
  %2616 = getelementptr inbounds i32, ptr %11, i64 %2615
  %2617 = getelementptr inbounds i32, ptr %2616, i64 -7
  %2618 = load <8 x i32>, ptr %2617, align 4, !tbaa !5
  %2619 = shufflevector <8 x i32> %2618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2620 = getelementptr inbounds i32, ptr %2616, i64 -15
  %2621 = load <8 x i32>, ptr %2620, align 4, !tbaa !5
  %2622 = shufflevector <8 x i32> %2621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2623 = getelementptr inbounds i32, ptr %2616, i64 -23
  %2624 = load <8 x i32>, ptr %2623, align 4, !tbaa !5
  %2625 = shufflevector <8 x i32> %2624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2626 = getelementptr inbounds i32, ptr %2616, i64 -31
  %2627 = load <8 x i32>, ptr %2626, align 4, !tbaa !5
  %2628 = shufflevector <8 x i32> %2627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2629 = mul <8 x i32> %2619, %2611
  %2630 = mul <8 x i32> %2622, %2612
  %2631 = mul <8 x i32> %2625, %2613
  %2632 = mul <8 x i32> %2628, %2614
  %2633 = add nuw i64 %2610, 32
  %2634 = icmp eq i64 %2633, %2607
  br i1 %2634, label %2635, label %2609, !llvm.loop !105

2635:                                             ; preds = %2609
  %2636 = mul <8 x i32> %2630, %2629
  %2637 = mul <8 x i32> %2631, %2636
  %2638 = mul <8 x i32> %2632, %2637
  %2639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2638)
  %2640 = icmp eq i64 %2603, %2607
  br i1 %2640, label %2653, label %2641

2641:                                             ; preds = %2594, %2635
  %2642 = phi i64 [ %2597, %2594 ], [ %2608, %2635 ]
  %2643 = phi i32 [ 1, %2594 ], [ %2639, %2635 ]
  br label %2644

2644:                                             ; preds = %2641, %2644
  %2645 = phi i64 [ %2650, %2644 ], [ %2642, %2641 ]
  %2646 = phi i32 [ %2649, %2644 ], [ %2643, %2641 ]
  %2647 = getelementptr inbounds i32, ptr %11, i64 %2645
  %2648 = load i32, ptr %2647, align 4, !tbaa !5
  %2649 = mul nsw i32 %2648, %2646
  %2650 = add nsw i64 %2645, -1
  %2651 = trunc i64 %2645 to i32
  %2652 = icmp sgt i32 %2651, 0
  br i1 %2652, label %2644, label %2653, !llvm.loop !106

2653:                                             ; preds = %2644, %2635
  %2654 = phi i32 [ %2639, %2635 ], [ %2649, %2644 ]
  %2655 = and i64 %2604, 4294967295
  %2656 = getelementptr inbounds i32, ptr %6, i64 %2655
  %2657 = load i32, ptr %2656, align 4, !tbaa !5
  %2658 = mul nsw i32 %2657, %2654
  %2659 = add nsw i32 %2658, %2598
  %2660 = icmp sgt i64 %2596, 2
  %2661 = add nsw i64 %2597, -1
  %2662 = add i32 %2595, 1
  br i1 %2660, label %2594, label %2663, !llvm.loop !107

2663:                                             ; preds = %2653, %2591
  %2664 = phi i32 [ %2593, %2591 ], [ %2659, %2653 ]
  %2665 = icmp slt i32 %2664, %5
  br i1 %2665, label %2668, label %2666

2666:                                             ; preds = %2663
  %2667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

2668:                                             ; preds = %2663
  %2669 = sext i32 %2664 to i64
  %2670 = getelementptr inbounds i8, ptr %2423, i64 %2669
  %2671 = load i8, ptr %2670, align 1, !tbaa !11
  %2672 = load i32, ptr %2425, align 4, !tbaa !5
  %2673 = zext i8 %2671 to i32
  %2674 = add i32 %2672, %2673
  store i32 %2674, ptr %2425, align 4, !tbaa !5
  %2675 = add nuw nsw i32 %2592, 1
  br i1 %2439, label %2676, label %2726

2676:                                             ; preds = %2668
  %2677 = load i32, ptr %4, align 4, !tbaa !5
  %2678 = load i32, ptr %12, align 4, !tbaa !5
  %2679 = add nsw i32 %2678, -1
  %2680 = icmp slt i32 %2677, %2679
  br i1 %2680, label %2703, label %2681

2681:                                             ; preds = %2676
  %2682 = icmp eq i32 %2677, %2679
  br i1 %2682, label %2683, label %2719

2683:                                             ; preds = %2681
  store i32 0, ptr %4, align 4, !tbaa !5
  %2684 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2684, ptr %6, align 4, !tbaa !5
  br i1 %2444, label %2726, label %2685

2685:                                             ; preds = %2683, %2713
  %2686 = phi i64 [ %2717, %2713 ], [ 1, %2683 ]
  %2687 = getelementptr inbounds i32, ptr %4, i64 %2686
  %2688 = load i32, ptr %2687, align 4, !tbaa !5
  %2689 = getelementptr inbounds i32, ptr %12, i64 %2686
  %2690 = load i32, ptr %2689, align 4, !tbaa !5
  %2691 = add nsw i32 %2690, -1
  %2692 = icmp slt i32 %2688, %2691
  br i1 %2692, label %2693, label %2711

2693:                                             ; preds = %2685
  br i1 %2680, label %2703, label %2694

2694:                                             ; preds = %2693
  %2695 = shl i64 %2686, 32
  %2696 = add i64 %2695, -4294967296
  %2697 = ashr exact i64 %2696, 32
  %2698 = getelementptr inbounds i32, ptr %7, i64 %2697
  %2699 = load i32, ptr %2698, align 4, !tbaa !5
  %2700 = getelementptr inbounds i32, ptr %6, i64 %2686
  %2701 = load i32, ptr %2700, align 4, !tbaa !5
  %2702 = add nsw i32 %2701, %2699
  store i32 %2702, ptr %2700, align 4, !tbaa !5
  br label %2721

2703:                                             ; preds = %2676, %2693
  %2704 = phi i32 [ %2688, %2693 ], [ %2677, %2676 ]
  %2705 = phi ptr [ %2687, %2693 ], [ %4, %2676 ]
  %2706 = phi i64 [ %2686, %2693 ], [ 0, %2676 ]
  %2707 = add nsw i32 %2704, 1
  store i32 %2707, ptr %2705, align 4, !tbaa !5
  %2708 = getelementptr inbounds i32, ptr %7, i64 %2706
  %2709 = load i32, ptr %2708, align 4, !tbaa !5
  %2710 = getelementptr inbounds i32, ptr %6, i64 %2706
  br label %2721

2711:                                             ; preds = %2685
  %2712 = icmp eq i32 %2688, %2691
  br i1 %2712, label %2713, label %2719

2713:                                             ; preds = %2711
  store i32 0, ptr %2687, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %8, i64 %2686
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = getelementptr inbounds i32, ptr %6, i64 %2686
  store i32 %2715, ptr %2716, align 4, !tbaa !5
  %2717 = add nuw nsw i64 %2686, 1
  %2718 = icmp eq i64 %2717, %2442
  br i1 %2718, label %2726, label %2685, !llvm.loop !108

2719:                                             ; preds = %2681, %2711
  %2720 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2721:                                             ; preds = %2694, %2703
  %2722 = phi ptr [ %2710, %2703 ], [ %2687, %2694 ]
  %2723 = phi i32 [ %2709, %2703 ], [ 1, %2694 ]
  %2724 = load i32, ptr %2722, align 4, !tbaa !5
  %2725 = add nsw i32 %2724, %2723
  store i32 %2725, ptr %2722, align 4, !tbaa !5
  br label %2726

2726:                                             ; preds = %2713, %2721, %2683, %2668
  %2727 = icmp eq i32 %2675, %5
  br i1 %2727, label %5426, label %2591, !llvm.loop !109

2728:                                             ; preds = %2430
  %2729 = getelementptr inbounds i32, ptr %3, i64 %19
  %2730 = load i32, ptr %2729, align 4, !tbaa !5
  %2731 = icmp eq i32 %2730, 0
  %2732 = icmp sgt i32 %5, 0
  br i1 %2731, label %2742, label %2733

2733:                                             ; preds = %2728
  br i1 %2732, label %2734, label %5426

2734:                                             ; preds = %2733
  %2735 = icmp sgt i32 %13, 1
  %2736 = icmp sgt i32 %13, 0
  %2737 = add i32 %13, -2
  %2738 = zext i32 %2737 to i64
  %2739 = zext i32 %13 to i64
  %2740 = add nuw i32 %5, 1
  %2741 = icmp eq i32 %13, 1
  br label %2883

2742:                                             ; preds = %2728
  br i1 %2732, label %2743, label %5426

2743:                                             ; preds = %2742
  %2744 = icmp sgt i32 %13, 1
  %2745 = icmp sgt i32 %13, 0
  %2746 = add i32 %13, -2
  %2747 = zext i32 %2746 to i64
  %2748 = zext i32 %13 to i64
  %2749 = add nuw i32 %5, 1
  %2750 = icmp eq i32 %13, 1
  br label %2751

2751:                                             ; preds = %2743, %2881
  %2752 = phi i32 [ 0, %2743 ], [ %2833, %2881 ]
  %2753 = phi double [ 0.000000e+00, %2743 ], [ %2832, %2881 ]
  %2754 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2744, label %2755, label %2824

2755:                                             ; preds = %2751, %2814
  %2756 = phi i32 [ %2823, %2814 ], [ 0, %2751 ]
  %2757 = phi i64 [ %2765, %2814 ], [ %2748, %2751 ]
  %2758 = phi i64 [ %2822, %2814 ], [ %2747, %2751 ]
  %2759 = phi i32 [ %2820, %2814 ], [ %2754, %2751 ]
  %2760 = sub i32 %2746, %2756
  %2761 = tail call i32 @llvm.smin.i32(i32 %2760, i32 0)
  %2762 = sub i32 %2760, %2761
  %2763 = zext i32 %2762 to i64
  %2764 = add nuw nsw i64 %2763, 1
  %2765 = add nsw i64 %2757, -1
  %2766 = icmp ult i32 %2762, 31
  br i1 %2766, label %2802, label %2767

2767:                                             ; preds = %2755
  %2768 = and i64 %2764, 8589934560
  %2769 = sub i64 %2758, %2768
  br label %2770

2770:                                             ; preds = %2770, %2767
  %2771 = phi i64 [ 0, %2767 ], [ %2794, %2770 ]
  %2772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2790, %2770 ]
  %2773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2791, %2770 ]
  %2774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2792, %2770 ]
  %2775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2793, %2770 ]
  %2776 = sub i64 %2758, %2771
  %2777 = getelementptr inbounds i32, ptr %9, i64 %2776
  %2778 = getelementptr inbounds i32, ptr %2777, i64 -7
  %2779 = load <8 x i32>, ptr %2778, align 4, !tbaa !5
  %2780 = shufflevector <8 x i32> %2779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2781 = getelementptr inbounds i32, ptr %2777, i64 -15
  %2782 = load <8 x i32>, ptr %2781, align 4, !tbaa !5
  %2783 = shufflevector <8 x i32> %2782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2784 = getelementptr inbounds i32, ptr %2777, i64 -23
  %2785 = load <8 x i32>, ptr %2784, align 4, !tbaa !5
  %2786 = shufflevector <8 x i32> %2785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2787 = getelementptr inbounds i32, ptr %2777, i64 -31
  %2788 = load <8 x i32>, ptr %2787, align 4, !tbaa !5
  %2789 = shufflevector <8 x i32> %2788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2790 = mul <8 x i32> %2780, %2772
  %2791 = mul <8 x i32> %2783, %2773
  %2792 = mul <8 x i32> %2786, %2774
  %2793 = mul <8 x i32> %2789, %2775
  %2794 = add nuw i64 %2771, 32
  %2795 = icmp eq i64 %2794, %2768
  br i1 %2795, label %2796, label %2770, !llvm.loop !110

2796:                                             ; preds = %2770
  %2797 = mul <8 x i32> %2791, %2790
  %2798 = mul <8 x i32> %2792, %2797
  %2799 = mul <8 x i32> %2793, %2798
  %2800 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2799)
  %2801 = icmp eq i64 %2764, %2768
  br i1 %2801, label %2814, label %2802

2802:                                             ; preds = %2755, %2796
  %2803 = phi i64 [ %2758, %2755 ], [ %2769, %2796 ]
  %2804 = phi i32 [ 1, %2755 ], [ %2800, %2796 ]
  br label %2805

2805:                                             ; preds = %2802, %2805
  %2806 = phi i64 [ %2811, %2805 ], [ %2803, %2802 ]
  %2807 = phi i32 [ %2810, %2805 ], [ %2804, %2802 ]
  %2808 = getelementptr inbounds i32, ptr %9, i64 %2806
  %2809 = load i32, ptr %2808, align 4, !tbaa !5
  %2810 = mul nsw i32 %2809, %2807
  %2811 = add nsw i64 %2806, -1
  %2812 = trunc i64 %2806 to i32
  %2813 = icmp sgt i32 %2812, 0
  br i1 %2813, label %2805, label %2814, !llvm.loop !111

2814:                                             ; preds = %2805, %2796
  %2815 = phi i32 [ %2800, %2796 ], [ %2810, %2805 ]
  %2816 = and i64 %2765, 4294967295
  %2817 = getelementptr inbounds i32, ptr %6, i64 %2816
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = mul nsw i32 %2818, %2815
  %2820 = add nsw i32 %2819, %2759
  %2821 = icmp sgt i64 %2757, 2
  %2822 = add nsw i64 %2758, -1
  %2823 = add i32 %2756, 1
  br i1 %2821, label %2755, label %2824, !llvm.loop !112

2824:                                             ; preds = %2814, %2751
  %2825 = phi i32 [ %2754, %2751 ], [ %2820, %2814 ]
  %2826 = sext i32 %2825 to i64
  %2827 = getelementptr inbounds i8, ptr %2423, i64 %2826
  %2828 = load i8, ptr %2827, align 1, !tbaa !11
  %2829 = zext i8 %2828 to i32
  %2830 = load i32, ptr %2425, align 4, !tbaa !5
  %2831 = add nsw i32 %2830, %2829
  store i32 %2831, ptr %2425, align 4, !tbaa !5
  %2832 = fadd fast double %2753, 1.000000e+00
  %2833 = add nuw nsw i32 %2752, 1
  br i1 %2745, label %2834, label %2881

2834:                                             ; preds = %2824
  %2835 = load i32, ptr %4, align 4, !tbaa !5
  %2836 = load i32, ptr %12, align 4, !tbaa !5
  %2837 = add nsw i32 %2836, -1
  %2838 = icmp slt i32 %2835, %2837
  br i1 %2838, label %2858, label %2839

2839:                                             ; preds = %2834
  %2840 = icmp eq i32 %2835, %2837
  br i1 %2840, label %2841, label %2874

2841:                                             ; preds = %2839
  store i32 0, ptr %4, align 4, !tbaa !5
  %2842 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2842, ptr %6, align 4, !tbaa !5
  br i1 %2750, label %2881, label %2843

2843:                                             ; preds = %2841, %2868
  %2844 = phi i64 [ %2872, %2868 ], [ 1, %2841 ]
  %2845 = getelementptr inbounds i32, ptr %4, i64 %2844
  %2846 = load i32, ptr %2845, align 4, !tbaa !5
  %2847 = getelementptr inbounds i32, ptr %12, i64 %2844
  %2848 = load i32, ptr %2847, align 4, !tbaa !5
  %2849 = add nsw i32 %2848, -1
  %2850 = icmp slt i32 %2846, %2849
  br i1 %2850, label %2851, label %2866

2851:                                             ; preds = %2843
  br i1 %2838, label %2858, label %2852

2852:                                             ; preds = %2851
  %2853 = getelementptr inbounds i32, ptr %7, i64 %2844
  %2854 = load i32, ptr %2853, align 4, !tbaa !5
  %2855 = getelementptr inbounds i32, ptr %6, i64 %2844
  %2856 = load i32, ptr %2855, align 4, !tbaa !5
  %2857 = add nsw i32 %2856, %2854
  store i32 %2857, ptr %2855, align 4, !tbaa !5
  br label %2876

2858:                                             ; preds = %2834, %2851
  %2859 = phi i32 [ %2846, %2851 ], [ %2835, %2834 ]
  %2860 = phi ptr [ %2845, %2851 ], [ %4, %2834 ]
  %2861 = phi i64 [ %2844, %2851 ], [ 0, %2834 ]
  %2862 = add nsw i32 %2859, 1
  store i32 %2862, ptr %2860, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %7, i64 %2861
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = getelementptr inbounds i32, ptr %6, i64 %2861
  br label %2876

2866:                                             ; preds = %2843
  %2867 = icmp eq i32 %2846, %2849
  br i1 %2867, label %2868, label %2874

2868:                                             ; preds = %2866
  store i32 0, ptr %2845, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %8, i64 %2844
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = getelementptr inbounds i32, ptr %6, i64 %2844
  store i32 %2870, ptr %2871, align 4, !tbaa !5
  %2872 = add nuw nsw i64 %2844, 1
  %2873 = icmp eq i64 %2872, %2748
  br i1 %2873, label %2881, label %2843, !llvm.loop !113

2874:                                             ; preds = %2839, %2866
  %2875 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

2876:                                             ; preds = %2852, %2858
  %2877 = phi ptr [ %2865, %2858 ], [ %2845, %2852 ]
  %2878 = phi i32 [ %2864, %2858 ], [ 1, %2852 ]
  %2879 = load i32, ptr %2877, align 4, !tbaa !5
  %2880 = add nsw i32 %2879, %2878
  store i32 %2880, ptr %2877, align 4, !tbaa !5
  br label %2881

2881:                                             ; preds = %2868, %2876, %2841, %2824
  %2882 = icmp eq i32 %2833, %5
  br i1 %2882, label %5426, label %2751, !llvm.loop !114

2883:                                             ; preds = %2734, %3018
  %2884 = phi i32 [ 0, %2734 ], [ %2967, %3018 ]
  %2885 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2735, label %2886, label %2955

2886:                                             ; preds = %2883, %2945
  %2887 = phi i32 [ %2954, %2945 ], [ 0, %2883 ]
  %2888 = phi i64 [ %2896, %2945 ], [ %2739, %2883 ]
  %2889 = phi i64 [ %2953, %2945 ], [ %2738, %2883 ]
  %2890 = phi i32 [ %2951, %2945 ], [ %2885, %2883 ]
  %2891 = sub i32 %2737, %2887
  %2892 = tail call i32 @llvm.smin.i32(i32 %2891, i32 0)
  %2893 = sub i32 %2891, %2892
  %2894 = zext i32 %2893 to i64
  %2895 = add nuw nsw i64 %2894, 1
  %2896 = add nsw i64 %2888, -1
  %2897 = icmp ult i32 %2893, 31
  br i1 %2897, label %2933, label %2898

2898:                                             ; preds = %2886
  %2899 = and i64 %2895, 8589934560
  %2900 = sub i64 %2889, %2899
  br label %2901

2901:                                             ; preds = %2901, %2898
  %2902 = phi i64 [ 0, %2898 ], [ %2925, %2901 ]
  %2903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2921, %2901 ]
  %2904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2922, %2901 ]
  %2905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2923, %2901 ]
  %2906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2924, %2901 ]
  %2907 = sub i64 %2889, %2902
  %2908 = getelementptr inbounds i32, ptr %11, i64 %2907
  %2909 = getelementptr inbounds i32, ptr %2908, i64 -7
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !5
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2908, i64 -15
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !5
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = getelementptr inbounds i32, ptr %2908, i64 -23
  %2916 = load <8 x i32>, ptr %2915, align 4, !tbaa !5
  %2917 = shufflevector <8 x i32> %2916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2918 = getelementptr inbounds i32, ptr %2908, i64 -31
  %2919 = load <8 x i32>, ptr %2918, align 4, !tbaa !5
  %2920 = shufflevector <8 x i32> %2919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2921 = mul <8 x i32> %2911, %2903
  %2922 = mul <8 x i32> %2914, %2904
  %2923 = mul <8 x i32> %2917, %2905
  %2924 = mul <8 x i32> %2920, %2906
  %2925 = add nuw i64 %2902, 32
  %2926 = icmp eq i64 %2925, %2899
  br i1 %2926, label %2927, label %2901, !llvm.loop !115

2927:                                             ; preds = %2901
  %2928 = mul <8 x i32> %2922, %2921
  %2929 = mul <8 x i32> %2923, %2928
  %2930 = mul <8 x i32> %2924, %2929
  %2931 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2930)
  %2932 = icmp eq i64 %2895, %2899
  br i1 %2932, label %2945, label %2933

2933:                                             ; preds = %2886, %2927
  %2934 = phi i64 [ %2889, %2886 ], [ %2900, %2927 ]
  %2935 = phi i32 [ 1, %2886 ], [ %2931, %2927 ]
  br label %2936

2936:                                             ; preds = %2933, %2936
  %2937 = phi i64 [ %2942, %2936 ], [ %2934, %2933 ]
  %2938 = phi i32 [ %2941, %2936 ], [ %2935, %2933 ]
  %2939 = getelementptr inbounds i32, ptr %11, i64 %2937
  %2940 = load i32, ptr %2939, align 4, !tbaa !5
  %2941 = mul nsw i32 %2940, %2938
  %2942 = add nsw i64 %2937, -1
  %2943 = trunc i64 %2937 to i32
  %2944 = icmp sgt i32 %2943, 0
  br i1 %2944, label %2936, label %2945, !llvm.loop !116

2945:                                             ; preds = %2936, %2927
  %2946 = phi i32 [ %2931, %2927 ], [ %2941, %2936 ]
  %2947 = and i64 %2896, 4294967295
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2947
  %2949 = load i32, ptr %2948, align 4, !tbaa !5
  %2950 = mul nsw i32 %2949, %2946
  %2951 = add nsw i32 %2950, %2890
  %2952 = icmp sgt i64 %2888, 2
  %2953 = add nsw i64 %2889, -1
  %2954 = add i32 %2887, 1
  br i1 %2952, label %2886, label %2955, !llvm.loop !117

2955:                                             ; preds = %2945, %2883
  %2956 = phi i32 [ %2885, %2883 ], [ %2951, %2945 ]
  %2957 = icmp slt i32 %2956, %5
  br i1 %2957, label %2960, label %2958

2958:                                             ; preds = %2955
  %2959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

2960:                                             ; preds = %2955
  %2961 = sext i32 %2956 to i64
  %2962 = getelementptr inbounds i8, ptr %2423, i64 %2961
  %2963 = load i8, ptr %2962, align 1, !tbaa !11
  %2964 = zext i8 %2963 to i32
  %2965 = load i32, ptr %2425, align 4, !tbaa !5
  %2966 = add nsw i32 %2965, %2964
  store i32 %2966, ptr %2425, align 4, !tbaa !5
  %2967 = add nuw nsw i32 %2884, 1
  br i1 %2736, label %2968, label %3018

2968:                                             ; preds = %2960
  %2969 = load i32, ptr %4, align 4, !tbaa !5
  %2970 = load i32, ptr %12, align 4, !tbaa !5
  %2971 = add nsw i32 %2970, -1
  %2972 = icmp slt i32 %2969, %2971
  br i1 %2972, label %2995, label %2973

2973:                                             ; preds = %2968
  %2974 = icmp eq i32 %2969, %2971
  br i1 %2974, label %2975, label %3011

2975:                                             ; preds = %2973
  store i32 0, ptr %4, align 4, !tbaa !5
  %2976 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2976, ptr %6, align 4, !tbaa !5
  br i1 %2741, label %3018, label %2977

2977:                                             ; preds = %2975, %3005
  %2978 = phi i64 [ %3009, %3005 ], [ 1, %2975 ]
  %2979 = getelementptr inbounds i32, ptr %4, i64 %2978
  %2980 = load i32, ptr %2979, align 4, !tbaa !5
  %2981 = getelementptr inbounds i32, ptr %12, i64 %2978
  %2982 = load i32, ptr %2981, align 4, !tbaa !5
  %2983 = add nsw i32 %2982, -1
  %2984 = icmp slt i32 %2980, %2983
  br i1 %2984, label %2985, label %3003

2985:                                             ; preds = %2977
  br i1 %2972, label %2995, label %2986

2986:                                             ; preds = %2985
  %2987 = shl i64 %2978, 32
  %2988 = add i64 %2987, -4294967296
  %2989 = ashr exact i64 %2988, 32
  %2990 = getelementptr inbounds i32, ptr %7, i64 %2989
  %2991 = load i32, ptr %2990, align 4, !tbaa !5
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2978
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = add nsw i32 %2993, %2991
  store i32 %2994, ptr %2992, align 4, !tbaa !5
  br label %3013

2995:                                             ; preds = %2968, %2985
  %2996 = phi i32 [ %2980, %2985 ], [ %2969, %2968 ]
  %2997 = phi ptr [ %2979, %2985 ], [ %4, %2968 ]
  %2998 = phi i64 [ %2978, %2985 ], [ 0, %2968 ]
  %2999 = add nsw i32 %2996, 1
  store i32 %2999, ptr %2997, align 4, !tbaa !5
  %3000 = getelementptr inbounds i32, ptr %7, i64 %2998
  %3001 = load i32, ptr %3000, align 4, !tbaa !5
  %3002 = getelementptr inbounds i32, ptr %6, i64 %2998
  br label %3013

3003:                                             ; preds = %2977
  %3004 = icmp eq i32 %2980, %2983
  br i1 %3004, label %3005, label %3011

3005:                                             ; preds = %3003
  store i32 0, ptr %2979, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %8, i64 %2978
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = getelementptr inbounds i32, ptr %6, i64 %2978
  store i32 %3007, ptr %3008, align 4, !tbaa !5
  %3009 = add nuw nsw i64 %2978, 1
  %3010 = icmp eq i64 %3009, %2739
  br i1 %3010, label %3018, label %2977, !llvm.loop !118

3011:                                             ; preds = %2973, %3003
  %3012 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3013:                                             ; preds = %2986, %2995
  %3014 = phi ptr [ %3002, %2995 ], [ %2979, %2986 ]
  %3015 = phi i32 [ %3001, %2995 ], [ 1, %2986 ]
  %3016 = load i32, ptr %3014, align 4, !tbaa !5
  %3017 = add nsw i32 %3016, %3015
  store i32 %3017, ptr %3014, align 4, !tbaa !5
  br label %3018

3018:                                             ; preds = %3005, %3013, %2975, %2960
  %3019 = icmp eq i32 %2967, %5
  br i1 %3019, label %5426, label %2883, !llvm.loop !119

3020:                                             ; preds = %2430
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

3022:                                             ; preds = %18
  %3023 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3024 = load ptr, ptr %3023, align 8, !tbaa !9
  %3025 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3026 = load ptr, ptr %3025, align 8, !tbaa !9
  store i64 0, ptr %3026, align 8, !tbaa !120
  %3027 = icmp eq i32 %13, 0
  br i1 %3027, label %3028, label %3031

3028:                                             ; preds = %3022
  %3029 = load i8, ptr %3024, align 1, !tbaa !11
  %3030 = zext i8 %3029 to i64
  store i64 %3030, ptr %3026, align 8, !tbaa !120
  br label %5426

3031:                                             ; preds = %3022
  switch i32 %1, label %3623 [
    i32 1, label %3032
    i32 0, label %3331
  ]

3032:                                             ; preds = %3031
  %3033 = getelementptr inbounds i32, ptr %3, i64 %19
  %3034 = load i32, ptr %3033, align 4, !tbaa !5
  %3035 = icmp eq i32 %3034, 0
  %3036 = icmp sgt i32 %5, 0
  br i1 %3035, label %3046, label %3037

3037:                                             ; preds = %3032
  br i1 %3036, label %3038, label %5426

3038:                                             ; preds = %3037
  %3039 = icmp sgt i32 %13, 1
  %3040 = icmp sgt i32 %13, 0
  %3041 = add i32 %13, -2
  %3042 = zext i32 %3041 to i64
  %3043 = zext i32 %13 to i64
  %3044 = add nuw i32 %5, 1
  %3045 = icmp eq i32 %13, 1
  br label %3192

3046:                                             ; preds = %3032
  br i1 %3036, label %3047, label %5426

3047:                                             ; preds = %3046
  %3048 = icmp sgt i32 %13, 1
  %3049 = icmp sgt i32 %13, 0
  %3050 = add i32 %13, -2
  %3051 = zext i32 %3050 to i64
  %3052 = zext i32 %13 to i64
  %3053 = add nuw i32 %5, 1
  %3054 = icmp eq i32 %13, 1
  br label %3055

3055:                                             ; preds = %3047, %3190
  %3056 = phi i64 [ 0, %3047 ], [ %3140, %3190 ]
  %3057 = phi i32 [ 0, %3047 ], [ %3142, %3190 ]
  %3058 = phi double [ 0.000000e+00, %3047 ], [ %3141, %3190 ]
  %3059 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3048, label %3060, label %3129

3060:                                             ; preds = %3055, %3119
  %3061 = phi i32 [ %3128, %3119 ], [ 0, %3055 ]
  %3062 = phi i64 [ %3070, %3119 ], [ %3052, %3055 ]
  %3063 = phi i64 [ %3127, %3119 ], [ %3051, %3055 ]
  %3064 = phi i32 [ %3125, %3119 ], [ %3059, %3055 ]
  %3065 = sub i32 %3050, %3061
  %3066 = tail call i32 @llvm.smin.i32(i32 %3065, i32 0)
  %3067 = sub i32 %3065, %3066
  %3068 = zext i32 %3067 to i64
  %3069 = add nuw nsw i64 %3068, 1
  %3070 = add nsw i64 %3062, -1
  %3071 = icmp ult i32 %3067, 31
  br i1 %3071, label %3107, label %3072

3072:                                             ; preds = %3060
  %3073 = and i64 %3069, 8589934560
  %3074 = sub i64 %3063, %3073
  br label %3075

3075:                                             ; preds = %3075, %3072
  %3076 = phi i64 [ 0, %3072 ], [ %3099, %3075 ]
  %3077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3072 ], [ %3095, %3075 ]
  %3078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3072 ], [ %3096, %3075 ]
  %3079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3072 ], [ %3097, %3075 ]
  %3080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3072 ], [ %3098, %3075 ]
  %3081 = sub i64 %3063, %3076
  %3082 = getelementptr inbounds i32, ptr %9, i64 %3081
  %3083 = getelementptr inbounds i32, ptr %3082, i64 -7
  %3084 = load <8 x i32>, ptr %3083, align 4, !tbaa !5
  %3085 = shufflevector <8 x i32> %3084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3086 = getelementptr inbounds i32, ptr %3082, i64 -15
  %3087 = load <8 x i32>, ptr %3086, align 4, !tbaa !5
  %3088 = shufflevector <8 x i32> %3087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3089 = getelementptr inbounds i32, ptr %3082, i64 -23
  %3090 = load <8 x i32>, ptr %3089, align 4, !tbaa !5
  %3091 = shufflevector <8 x i32> %3090, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3092 = getelementptr inbounds i32, ptr %3082, i64 -31
  %3093 = load <8 x i32>, ptr %3092, align 4, !tbaa !5
  %3094 = shufflevector <8 x i32> %3093, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3095 = mul <8 x i32> %3085, %3077
  %3096 = mul <8 x i32> %3088, %3078
  %3097 = mul <8 x i32> %3091, %3079
  %3098 = mul <8 x i32> %3094, %3080
  %3099 = add nuw i64 %3076, 32
  %3100 = icmp eq i64 %3099, %3073
  br i1 %3100, label %3101, label %3075, !llvm.loop !122

3101:                                             ; preds = %3075
  %3102 = mul <8 x i32> %3096, %3095
  %3103 = mul <8 x i32> %3097, %3102
  %3104 = mul <8 x i32> %3098, %3103
  %3105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3104)
  %3106 = icmp eq i64 %3069, %3073
  br i1 %3106, label %3119, label %3107

3107:                                             ; preds = %3060, %3101
  %3108 = phi i64 [ %3063, %3060 ], [ %3074, %3101 ]
  %3109 = phi i32 [ 1, %3060 ], [ %3105, %3101 ]
  br label %3110

3110:                                             ; preds = %3107, %3110
  %3111 = phi i64 [ %3116, %3110 ], [ %3108, %3107 ]
  %3112 = phi i32 [ %3115, %3110 ], [ %3109, %3107 ]
  %3113 = getelementptr inbounds i32, ptr %9, i64 %3111
  %3114 = load i32, ptr %3113, align 4, !tbaa !5
  %3115 = mul nsw i32 %3114, %3112
  %3116 = add nsw i64 %3111, -1
  %3117 = trunc i64 %3111 to i32
  %3118 = icmp sgt i32 %3117, 0
  br i1 %3118, label %3110, label %3119, !llvm.loop !123

3119:                                             ; preds = %3110, %3101
  %3120 = phi i32 [ %3105, %3101 ], [ %3115, %3110 ]
  %3121 = and i64 %3070, 4294967295
  %3122 = getelementptr inbounds i32, ptr %6, i64 %3121
  %3123 = load i32, ptr %3122, align 4, !tbaa !5
  %3124 = mul nsw i32 %3123, %3120
  %3125 = add nsw i32 %3124, %3064
  %3126 = icmp sgt i64 %3062, 2
  %3127 = add nsw i64 %3063, -1
  %3128 = add i32 %3061, 1
  br i1 %3126, label %3060, label %3129, !llvm.loop !124

3129:                                             ; preds = %3119, %3055
  %3130 = phi i32 [ %3059, %3055 ], [ %3125, %3119 ]
  %3131 = sext i32 %3130 to i64
  %3132 = getelementptr inbounds double, ptr %2, i64 %3131
  %3133 = load double, ptr %3132, align 8, !tbaa !18
  %3134 = getelementptr inbounds i8, ptr %3024, i64 %3131
  %3135 = load i8, ptr %3134, align 1, !tbaa !11
  %3136 = sitofp i64 %3056 to double
  %3137 = uitofp i8 %3135 to double
  %3138 = fmul fast double %3133, %3137
  %3139 = fadd fast double %3138, %3136
  %3140 = fptosi double %3139 to i64
  store i64 %3140, ptr %3026, align 8, !tbaa !120
  %3141 = fadd fast double %3133, %3058
  %3142 = add nuw nsw i32 %3057, 1
  br i1 %3049, label %3143, label %3190

3143:                                             ; preds = %3129
  %3144 = load i32, ptr %4, align 4, !tbaa !5
  %3145 = load i32, ptr %12, align 4, !tbaa !5
  %3146 = add nsw i32 %3145, -1
  %3147 = icmp slt i32 %3144, %3146
  br i1 %3147, label %3167, label %3148

3148:                                             ; preds = %3143
  %3149 = icmp eq i32 %3144, %3146
  br i1 %3149, label %3150, label %3183

3150:                                             ; preds = %3148
  store i32 0, ptr %4, align 4, !tbaa !5
  %3151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3151, ptr %6, align 4, !tbaa !5
  br i1 %3054, label %3190, label %3152

3152:                                             ; preds = %3150, %3177
  %3153 = phi i64 [ %3181, %3177 ], [ 1, %3150 ]
  %3154 = getelementptr inbounds i32, ptr %4, i64 %3153
  %3155 = load i32, ptr %3154, align 4, !tbaa !5
  %3156 = getelementptr inbounds i32, ptr %12, i64 %3153
  %3157 = load i32, ptr %3156, align 4, !tbaa !5
  %3158 = add nsw i32 %3157, -1
  %3159 = icmp slt i32 %3155, %3158
  br i1 %3159, label %3160, label %3175

3160:                                             ; preds = %3152
  br i1 %3147, label %3167, label %3161

3161:                                             ; preds = %3160
  %3162 = getelementptr inbounds i32, ptr %7, i64 %3153
  %3163 = load i32, ptr %3162, align 4, !tbaa !5
  %3164 = getelementptr inbounds i32, ptr %6, i64 %3153
  %3165 = load i32, ptr %3164, align 4, !tbaa !5
  %3166 = add nsw i32 %3165, %3163
  store i32 %3166, ptr %3164, align 4, !tbaa !5
  br label %3185

3167:                                             ; preds = %3143, %3160
  %3168 = phi i32 [ %3155, %3160 ], [ %3144, %3143 ]
  %3169 = phi ptr [ %3154, %3160 ], [ %4, %3143 ]
  %3170 = phi i64 [ %3153, %3160 ], [ 0, %3143 ]
  %3171 = add nsw i32 %3168, 1
  store i32 %3171, ptr %3169, align 4, !tbaa !5
  %3172 = getelementptr inbounds i32, ptr %7, i64 %3170
  %3173 = load i32, ptr %3172, align 4, !tbaa !5
  %3174 = getelementptr inbounds i32, ptr %6, i64 %3170
  br label %3185

3175:                                             ; preds = %3152
  %3176 = icmp eq i32 %3155, %3158
  br i1 %3176, label %3177, label %3183

3177:                                             ; preds = %3175
  store i32 0, ptr %3154, align 4, !tbaa !5
  %3178 = getelementptr inbounds i32, ptr %8, i64 %3153
  %3179 = load i32, ptr %3178, align 4, !tbaa !5
  %3180 = getelementptr inbounds i32, ptr %6, i64 %3153
  store i32 %3179, ptr %3180, align 4, !tbaa !5
  %3181 = add nuw nsw i64 %3153, 1
  %3182 = icmp eq i64 %3181, %3052
  br i1 %3182, label %3190, label %3152, !llvm.loop !125

3183:                                             ; preds = %3148, %3175
  %3184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3185:                                             ; preds = %3161, %3167
  %3186 = phi ptr [ %3174, %3167 ], [ %3154, %3161 ]
  %3187 = phi i32 [ %3173, %3167 ], [ 1, %3161 ]
  %3188 = load i32, ptr %3186, align 4, !tbaa !5
  %3189 = add nsw i32 %3188, %3187
  store i32 %3189, ptr %3186, align 4, !tbaa !5
  br label %3190

3190:                                             ; preds = %3177, %3185, %3150, %3129
  %3191 = icmp eq i32 %3142, %5
  br i1 %3191, label %5426, label %3055, !llvm.loop !126

3192:                                             ; preds = %3038, %3329
  %3193 = phi i64 [ 0, %3038 ], [ %3277, %3329 ]
  %3194 = phi i32 [ 0, %3038 ], [ %3278, %3329 ]
  %3195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3039, label %3196, label %3265

3196:                                             ; preds = %3192, %3255
  %3197 = phi i32 [ %3264, %3255 ], [ 0, %3192 ]
  %3198 = phi i64 [ %3206, %3255 ], [ %3043, %3192 ]
  %3199 = phi i64 [ %3263, %3255 ], [ %3042, %3192 ]
  %3200 = phi i32 [ %3261, %3255 ], [ %3195, %3192 ]
  %3201 = sub i32 %3041, %3197
  %3202 = tail call i32 @llvm.smin.i32(i32 %3201, i32 0)
  %3203 = sub i32 %3201, %3202
  %3204 = zext i32 %3203 to i64
  %3205 = add nuw nsw i64 %3204, 1
  %3206 = add nsw i64 %3198, -1
  %3207 = icmp ult i32 %3203, 31
  br i1 %3207, label %3243, label %3208

3208:                                             ; preds = %3196
  %3209 = and i64 %3205, 8589934560
  %3210 = sub i64 %3199, %3209
  br label %3211

3211:                                             ; preds = %3211, %3208
  %3212 = phi i64 [ 0, %3208 ], [ %3235, %3211 ]
  %3213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3208 ], [ %3231, %3211 ]
  %3214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3208 ], [ %3232, %3211 ]
  %3215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3208 ], [ %3233, %3211 ]
  %3216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3208 ], [ %3234, %3211 ]
  %3217 = sub i64 %3199, %3212
  %3218 = getelementptr inbounds i32, ptr %11, i64 %3217
  %3219 = getelementptr inbounds i32, ptr %3218, i64 -7
  %3220 = load <8 x i32>, ptr %3219, align 4, !tbaa !5
  %3221 = shufflevector <8 x i32> %3220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3222 = getelementptr inbounds i32, ptr %3218, i64 -15
  %3223 = load <8 x i32>, ptr %3222, align 4, !tbaa !5
  %3224 = shufflevector <8 x i32> %3223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3225 = getelementptr inbounds i32, ptr %3218, i64 -23
  %3226 = load <8 x i32>, ptr %3225, align 4, !tbaa !5
  %3227 = shufflevector <8 x i32> %3226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3228 = getelementptr inbounds i32, ptr %3218, i64 -31
  %3229 = load <8 x i32>, ptr %3228, align 4, !tbaa !5
  %3230 = shufflevector <8 x i32> %3229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3231 = mul <8 x i32> %3221, %3213
  %3232 = mul <8 x i32> %3224, %3214
  %3233 = mul <8 x i32> %3227, %3215
  %3234 = mul <8 x i32> %3230, %3216
  %3235 = add nuw i64 %3212, 32
  %3236 = icmp eq i64 %3235, %3209
  br i1 %3236, label %3237, label %3211, !llvm.loop !127

3237:                                             ; preds = %3211
  %3238 = mul <8 x i32> %3232, %3231
  %3239 = mul <8 x i32> %3233, %3238
  %3240 = mul <8 x i32> %3234, %3239
  %3241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3240)
  %3242 = icmp eq i64 %3205, %3209
  br i1 %3242, label %3255, label %3243

3243:                                             ; preds = %3196, %3237
  %3244 = phi i64 [ %3199, %3196 ], [ %3210, %3237 ]
  %3245 = phi i32 [ 1, %3196 ], [ %3241, %3237 ]
  br label %3246

3246:                                             ; preds = %3243, %3246
  %3247 = phi i64 [ %3252, %3246 ], [ %3244, %3243 ]
  %3248 = phi i32 [ %3251, %3246 ], [ %3245, %3243 ]
  %3249 = getelementptr inbounds i32, ptr %11, i64 %3247
  %3250 = load i32, ptr %3249, align 4, !tbaa !5
  %3251 = mul nsw i32 %3250, %3248
  %3252 = add nsw i64 %3247, -1
  %3253 = trunc i64 %3247 to i32
  %3254 = icmp sgt i32 %3253, 0
  br i1 %3254, label %3246, label %3255, !llvm.loop !128

3255:                                             ; preds = %3246, %3237
  %3256 = phi i32 [ %3241, %3237 ], [ %3251, %3246 ]
  %3257 = and i64 %3206, 4294967295
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3257
  %3259 = load i32, ptr %3258, align 4, !tbaa !5
  %3260 = mul nsw i32 %3259, %3256
  %3261 = add nsw i32 %3260, %3200
  %3262 = icmp sgt i64 %3198, 2
  %3263 = add nsw i64 %3199, -1
  %3264 = add i32 %3197, 1
  br i1 %3262, label %3196, label %3265, !llvm.loop !129

3265:                                             ; preds = %3255, %3192
  %3266 = phi i32 [ %3195, %3192 ], [ %3261, %3255 ]
  %3267 = icmp slt i32 %3266, %5
  br i1 %3267, label %3270, label %3268

3268:                                             ; preds = %3265
  %3269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

3270:                                             ; preds = %3265
  %3271 = sext i32 %3266 to i64
  %3272 = getelementptr inbounds i8, ptr %3024, i64 %3271
  %3273 = load i8, ptr %3272, align 1, !tbaa !11
  %3274 = sitofp i64 %3193 to double
  %3275 = uitofp i8 %3273 to double
  %3276 = fadd fast double %3274, %3275
  %3277 = fptosi double %3276 to i64
  store i64 %3277, ptr %3026, align 8, !tbaa !120
  %3278 = add nuw nsw i32 %3194, 1
  br i1 %3040, label %3279, label %3329

3279:                                             ; preds = %3270
  %3280 = load i32, ptr %4, align 4, !tbaa !5
  %3281 = load i32, ptr %12, align 4, !tbaa !5
  %3282 = add nsw i32 %3281, -1
  %3283 = icmp slt i32 %3280, %3282
  br i1 %3283, label %3306, label %3284

3284:                                             ; preds = %3279
  %3285 = icmp eq i32 %3280, %3282
  br i1 %3285, label %3286, label %3322

3286:                                             ; preds = %3284
  store i32 0, ptr %4, align 4, !tbaa !5
  %3287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3287, ptr %6, align 4, !tbaa !5
  br i1 %3045, label %3329, label %3288

3288:                                             ; preds = %3286, %3316
  %3289 = phi i64 [ %3320, %3316 ], [ 1, %3286 ]
  %3290 = getelementptr inbounds i32, ptr %4, i64 %3289
  %3291 = load i32, ptr %3290, align 4, !tbaa !5
  %3292 = getelementptr inbounds i32, ptr %12, i64 %3289
  %3293 = load i32, ptr %3292, align 4, !tbaa !5
  %3294 = add nsw i32 %3293, -1
  %3295 = icmp slt i32 %3291, %3294
  br i1 %3295, label %3296, label %3314

3296:                                             ; preds = %3288
  br i1 %3283, label %3306, label %3297

3297:                                             ; preds = %3296
  %3298 = shl i64 %3289, 32
  %3299 = add i64 %3298, -4294967296
  %3300 = ashr exact i64 %3299, 32
  %3301 = getelementptr inbounds i32, ptr %7, i64 %3300
  %3302 = load i32, ptr %3301, align 4, !tbaa !5
  %3303 = getelementptr inbounds i32, ptr %6, i64 %3289
  %3304 = load i32, ptr %3303, align 4, !tbaa !5
  %3305 = add nsw i32 %3304, %3302
  store i32 %3305, ptr %3303, align 4, !tbaa !5
  br label %3324

3306:                                             ; preds = %3279, %3296
  %3307 = phi i32 [ %3291, %3296 ], [ %3280, %3279 ]
  %3308 = phi ptr [ %3290, %3296 ], [ %4, %3279 ]
  %3309 = phi i64 [ %3289, %3296 ], [ 0, %3279 ]
  %3310 = add nsw i32 %3307, 1
  store i32 %3310, ptr %3308, align 4, !tbaa !5
  %3311 = getelementptr inbounds i32, ptr %7, i64 %3309
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = getelementptr inbounds i32, ptr %6, i64 %3309
  br label %3324

3314:                                             ; preds = %3288
  %3315 = icmp eq i32 %3291, %3294
  br i1 %3315, label %3316, label %3322

3316:                                             ; preds = %3314
  store i32 0, ptr %3290, align 4, !tbaa !5
  %3317 = getelementptr inbounds i32, ptr %8, i64 %3289
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3289
  store i32 %3318, ptr %3319, align 4, !tbaa !5
  %3320 = add nuw nsw i64 %3289, 1
  %3321 = icmp eq i64 %3320, %3043
  br i1 %3321, label %3329, label %3288, !llvm.loop !130

3322:                                             ; preds = %3284, %3314
  %3323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3324:                                             ; preds = %3297, %3306
  %3325 = phi ptr [ %3313, %3306 ], [ %3290, %3297 ]
  %3326 = phi i32 [ %3312, %3306 ], [ 1, %3297 ]
  %3327 = load i32, ptr %3325, align 4, !tbaa !5
  %3328 = add nsw i32 %3327, %3326
  store i32 %3328, ptr %3325, align 4, !tbaa !5
  br label %3329

3329:                                             ; preds = %3316, %3324, %3286, %3270
  %3330 = icmp eq i32 %3278, %5
  br i1 %3330, label %5426, label %3192, !llvm.loop !131

3331:                                             ; preds = %3031
  %3332 = getelementptr inbounds i32, ptr %3, i64 %19
  %3333 = load i32, ptr %3332, align 4, !tbaa !5
  %3334 = icmp eq i32 %3333, 0
  %3335 = icmp sgt i32 %5, 0
  br i1 %3334, label %3345, label %3336

3336:                                             ; preds = %3331
  br i1 %3335, label %3337, label %5426

3337:                                             ; preds = %3336
  %3338 = icmp sgt i32 %13, 1
  %3339 = icmp sgt i32 %13, 0
  %3340 = add i32 %13, -2
  %3341 = zext i32 %3340 to i64
  %3342 = zext i32 %13 to i64
  %3343 = add nuw i32 %5, 1
  %3344 = icmp eq i32 %13, 1
  br label %3486

3345:                                             ; preds = %3331
  br i1 %3335, label %3346, label %5426

3346:                                             ; preds = %3345
  %3347 = icmp sgt i32 %13, 1
  %3348 = icmp sgt i32 %13, 0
  %3349 = add i32 %13, -2
  %3350 = zext i32 %3349 to i64
  %3351 = zext i32 %13 to i64
  %3352 = add nuw i32 %5, 1
  %3353 = icmp eq i32 %13, 1
  br label %3354

3354:                                             ; preds = %3346, %3484
  %3355 = phi i64 [ 0, %3346 ], [ %3434, %3484 ]
  %3356 = phi i32 [ 0, %3346 ], [ %3436, %3484 ]
  %3357 = phi double [ 0.000000e+00, %3346 ], [ %3435, %3484 ]
  %3358 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3347, label %3359, label %3428

3359:                                             ; preds = %3354, %3418
  %3360 = phi i32 [ %3427, %3418 ], [ 0, %3354 ]
  %3361 = phi i64 [ %3369, %3418 ], [ %3351, %3354 ]
  %3362 = phi i64 [ %3426, %3418 ], [ %3350, %3354 ]
  %3363 = phi i32 [ %3424, %3418 ], [ %3358, %3354 ]
  %3364 = sub i32 %3349, %3360
  %3365 = tail call i32 @llvm.smin.i32(i32 %3364, i32 0)
  %3366 = sub i32 %3364, %3365
  %3367 = zext i32 %3366 to i64
  %3368 = add nuw nsw i64 %3367, 1
  %3369 = add nsw i64 %3361, -1
  %3370 = icmp ult i32 %3366, 31
  br i1 %3370, label %3406, label %3371

3371:                                             ; preds = %3359
  %3372 = and i64 %3368, 8589934560
  %3373 = sub i64 %3362, %3372
  br label %3374

3374:                                             ; preds = %3374, %3371
  %3375 = phi i64 [ 0, %3371 ], [ %3398, %3374 ]
  %3376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3371 ], [ %3394, %3374 ]
  %3377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3371 ], [ %3395, %3374 ]
  %3378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3371 ], [ %3396, %3374 ]
  %3379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3371 ], [ %3397, %3374 ]
  %3380 = sub i64 %3362, %3375
  %3381 = getelementptr inbounds i32, ptr %9, i64 %3380
  %3382 = getelementptr inbounds i32, ptr %3381, i64 -7
  %3383 = load <8 x i32>, ptr %3382, align 4, !tbaa !5
  %3384 = shufflevector <8 x i32> %3383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3385 = getelementptr inbounds i32, ptr %3381, i64 -15
  %3386 = load <8 x i32>, ptr %3385, align 4, !tbaa !5
  %3387 = shufflevector <8 x i32> %3386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3388 = getelementptr inbounds i32, ptr %3381, i64 -23
  %3389 = load <8 x i32>, ptr %3388, align 4, !tbaa !5
  %3390 = shufflevector <8 x i32> %3389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3391 = getelementptr inbounds i32, ptr %3381, i64 -31
  %3392 = load <8 x i32>, ptr %3391, align 4, !tbaa !5
  %3393 = shufflevector <8 x i32> %3392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3394 = mul <8 x i32> %3384, %3376
  %3395 = mul <8 x i32> %3387, %3377
  %3396 = mul <8 x i32> %3390, %3378
  %3397 = mul <8 x i32> %3393, %3379
  %3398 = add nuw i64 %3375, 32
  %3399 = icmp eq i64 %3398, %3372
  br i1 %3399, label %3400, label %3374, !llvm.loop !132

3400:                                             ; preds = %3374
  %3401 = mul <8 x i32> %3395, %3394
  %3402 = mul <8 x i32> %3396, %3401
  %3403 = mul <8 x i32> %3397, %3402
  %3404 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3403)
  %3405 = icmp eq i64 %3368, %3372
  br i1 %3405, label %3418, label %3406

3406:                                             ; preds = %3359, %3400
  %3407 = phi i64 [ %3362, %3359 ], [ %3373, %3400 ]
  %3408 = phi i32 [ 1, %3359 ], [ %3404, %3400 ]
  br label %3409

3409:                                             ; preds = %3406, %3409
  %3410 = phi i64 [ %3415, %3409 ], [ %3407, %3406 ]
  %3411 = phi i32 [ %3414, %3409 ], [ %3408, %3406 ]
  %3412 = getelementptr inbounds i32, ptr %9, i64 %3410
  %3413 = load i32, ptr %3412, align 4, !tbaa !5
  %3414 = mul nsw i32 %3413, %3411
  %3415 = add nsw i64 %3410, -1
  %3416 = trunc i64 %3410 to i32
  %3417 = icmp sgt i32 %3416, 0
  br i1 %3417, label %3409, label %3418, !llvm.loop !133

3418:                                             ; preds = %3409, %3400
  %3419 = phi i32 [ %3404, %3400 ], [ %3414, %3409 ]
  %3420 = and i64 %3369, 4294967295
  %3421 = getelementptr inbounds i32, ptr %6, i64 %3420
  %3422 = load i32, ptr %3421, align 4, !tbaa !5
  %3423 = mul nsw i32 %3422, %3419
  %3424 = add nsw i32 %3423, %3363
  %3425 = icmp sgt i64 %3361, 2
  %3426 = add nsw i64 %3362, -1
  %3427 = add i32 %3360, 1
  br i1 %3425, label %3359, label %3428, !llvm.loop !134

3428:                                             ; preds = %3418, %3354
  %3429 = phi i32 [ %3358, %3354 ], [ %3424, %3418 ]
  %3430 = sext i32 %3429 to i64
  %3431 = getelementptr inbounds i8, ptr %3024, i64 %3430
  %3432 = load i8, ptr %3431, align 1, !tbaa !11
  %3433 = zext i8 %3432 to i64
  %3434 = add nuw nsw i64 %3355, %3433
  store i64 %3434, ptr %3026, align 8, !tbaa !120
  %3435 = fadd fast double %3357, 1.000000e+00
  %3436 = add nuw nsw i32 %3356, 1
  br i1 %3348, label %3437, label %3484

3437:                                             ; preds = %3428
  %3438 = load i32, ptr %4, align 4, !tbaa !5
  %3439 = load i32, ptr %12, align 4, !tbaa !5
  %3440 = add nsw i32 %3439, -1
  %3441 = icmp slt i32 %3438, %3440
  br i1 %3441, label %3461, label %3442

3442:                                             ; preds = %3437
  %3443 = icmp eq i32 %3438, %3440
  br i1 %3443, label %3444, label %3477

3444:                                             ; preds = %3442
  store i32 0, ptr %4, align 4, !tbaa !5
  %3445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3445, ptr %6, align 4, !tbaa !5
  br i1 %3353, label %3484, label %3446

3446:                                             ; preds = %3444, %3471
  %3447 = phi i64 [ %3475, %3471 ], [ 1, %3444 ]
  %3448 = getelementptr inbounds i32, ptr %4, i64 %3447
  %3449 = load i32, ptr %3448, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %12, i64 %3447
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = add nsw i32 %3451, -1
  %3453 = icmp slt i32 %3449, %3452
  br i1 %3453, label %3454, label %3469

3454:                                             ; preds = %3446
  br i1 %3441, label %3461, label %3455

3455:                                             ; preds = %3454
  %3456 = getelementptr inbounds i32, ptr %7, i64 %3447
  %3457 = load i32, ptr %3456, align 4, !tbaa !5
  %3458 = getelementptr inbounds i32, ptr %6, i64 %3447
  %3459 = load i32, ptr %3458, align 4, !tbaa !5
  %3460 = add nsw i32 %3459, %3457
  store i32 %3460, ptr %3458, align 4, !tbaa !5
  br label %3479

3461:                                             ; preds = %3437, %3454
  %3462 = phi i32 [ %3449, %3454 ], [ %3438, %3437 ]
  %3463 = phi ptr [ %3448, %3454 ], [ %4, %3437 ]
  %3464 = phi i64 [ %3447, %3454 ], [ 0, %3437 ]
  %3465 = add nsw i32 %3462, 1
  store i32 %3465, ptr %3463, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %7, i64 %3464
  %3467 = load i32, ptr %3466, align 4, !tbaa !5
  %3468 = getelementptr inbounds i32, ptr %6, i64 %3464
  br label %3479

3469:                                             ; preds = %3446
  %3470 = icmp eq i32 %3449, %3452
  br i1 %3470, label %3471, label %3477

3471:                                             ; preds = %3469
  store i32 0, ptr %3448, align 4, !tbaa !5
  %3472 = getelementptr inbounds i32, ptr %8, i64 %3447
  %3473 = load i32, ptr %3472, align 4, !tbaa !5
  %3474 = getelementptr inbounds i32, ptr %6, i64 %3447
  store i32 %3473, ptr %3474, align 4, !tbaa !5
  %3475 = add nuw nsw i64 %3447, 1
  %3476 = icmp eq i64 %3475, %3351
  br i1 %3476, label %3484, label %3446, !llvm.loop !135

3477:                                             ; preds = %3442, %3469
  %3478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3479:                                             ; preds = %3455, %3461
  %3480 = phi ptr [ %3468, %3461 ], [ %3448, %3455 ]
  %3481 = phi i32 [ %3467, %3461 ], [ 1, %3455 ]
  %3482 = load i32, ptr %3480, align 4, !tbaa !5
  %3483 = add nsw i32 %3482, %3481
  store i32 %3483, ptr %3480, align 4, !tbaa !5
  br label %3484

3484:                                             ; preds = %3471, %3479, %3444, %3428
  %3485 = icmp eq i32 %3436, %5
  br i1 %3485, label %5426, label %3354, !llvm.loop !136

3486:                                             ; preds = %3337, %3621
  %3487 = phi i64 [ 0, %3337 ], [ %3569, %3621 ]
  %3488 = phi i32 [ 0, %3337 ], [ %3570, %3621 ]
  %3489 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3490, label %3559

3490:                                             ; preds = %3486, %3549
  %3491 = phi i32 [ %3558, %3549 ], [ 0, %3486 ]
  %3492 = phi i64 [ %3500, %3549 ], [ %3342, %3486 ]
  %3493 = phi i64 [ %3557, %3549 ], [ %3341, %3486 ]
  %3494 = phi i32 [ %3555, %3549 ], [ %3489, %3486 ]
  %3495 = sub i32 %3340, %3491
  %3496 = tail call i32 @llvm.smin.i32(i32 %3495, i32 0)
  %3497 = sub i32 %3495, %3496
  %3498 = zext i32 %3497 to i64
  %3499 = add nuw nsw i64 %3498, 1
  %3500 = add nsw i64 %3492, -1
  %3501 = icmp ult i32 %3497, 31
  br i1 %3501, label %3537, label %3502

3502:                                             ; preds = %3490
  %3503 = and i64 %3499, 8589934560
  %3504 = sub i64 %3493, %3503
  br label %3505

3505:                                             ; preds = %3505, %3502
  %3506 = phi i64 [ 0, %3502 ], [ %3529, %3505 ]
  %3507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3502 ], [ %3525, %3505 ]
  %3508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3502 ], [ %3526, %3505 ]
  %3509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3502 ], [ %3527, %3505 ]
  %3510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3502 ], [ %3528, %3505 ]
  %3511 = sub i64 %3493, %3506
  %3512 = getelementptr inbounds i32, ptr %11, i64 %3511
  %3513 = getelementptr inbounds i32, ptr %3512, i64 -7
  %3514 = load <8 x i32>, ptr %3513, align 4, !tbaa !5
  %3515 = shufflevector <8 x i32> %3514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3516 = getelementptr inbounds i32, ptr %3512, i64 -15
  %3517 = load <8 x i32>, ptr %3516, align 4, !tbaa !5
  %3518 = shufflevector <8 x i32> %3517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3519 = getelementptr inbounds i32, ptr %3512, i64 -23
  %3520 = load <8 x i32>, ptr %3519, align 4, !tbaa !5
  %3521 = shufflevector <8 x i32> %3520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3522 = getelementptr inbounds i32, ptr %3512, i64 -31
  %3523 = load <8 x i32>, ptr %3522, align 4, !tbaa !5
  %3524 = shufflevector <8 x i32> %3523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3525 = mul <8 x i32> %3515, %3507
  %3526 = mul <8 x i32> %3518, %3508
  %3527 = mul <8 x i32> %3521, %3509
  %3528 = mul <8 x i32> %3524, %3510
  %3529 = add nuw i64 %3506, 32
  %3530 = icmp eq i64 %3529, %3503
  br i1 %3530, label %3531, label %3505, !llvm.loop !137

3531:                                             ; preds = %3505
  %3532 = mul <8 x i32> %3526, %3525
  %3533 = mul <8 x i32> %3527, %3532
  %3534 = mul <8 x i32> %3528, %3533
  %3535 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3534)
  %3536 = icmp eq i64 %3499, %3503
  br i1 %3536, label %3549, label %3537

3537:                                             ; preds = %3490, %3531
  %3538 = phi i64 [ %3493, %3490 ], [ %3504, %3531 ]
  %3539 = phi i32 [ 1, %3490 ], [ %3535, %3531 ]
  br label %3540

3540:                                             ; preds = %3537, %3540
  %3541 = phi i64 [ %3546, %3540 ], [ %3538, %3537 ]
  %3542 = phi i32 [ %3545, %3540 ], [ %3539, %3537 ]
  %3543 = getelementptr inbounds i32, ptr %11, i64 %3541
  %3544 = load i32, ptr %3543, align 4, !tbaa !5
  %3545 = mul nsw i32 %3544, %3542
  %3546 = add nsw i64 %3541, -1
  %3547 = trunc i64 %3541 to i32
  %3548 = icmp sgt i32 %3547, 0
  br i1 %3548, label %3540, label %3549, !llvm.loop !138

3549:                                             ; preds = %3540, %3531
  %3550 = phi i32 [ %3535, %3531 ], [ %3545, %3540 ]
  %3551 = and i64 %3500, 4294967295
  %3552 = getelementptr inbounds i32, ptr %6, i64 %3551
  %3553 = load i32, ptr %3552, align 4, !tbaa !5
  %3554 = mul nsw i32 %3553, %3550
  %3555 = add nsw i32 %3554, %3494
  %3556 = icmp sgt i64 %3492, 2
  %3557 = add nsw i64 %3493, -1
  %3558 = add i32 %3491, 1
  br i1 %3556, label %3490, label %3559, !llvm.loop !139

3559:                                             ; preds = %3549, %3486
  %3560 = phi i32 [ %3489, %3486 ], [ %3555, %3549 ]
  %3561 = icmp slt i32 %3560, %5
  br i1 %3561, label %3564, label %3562

3562:                                             ; preds = %3559
  %3563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

3564:                                             ; preds = %3559
  %3565 = sext i32 %3560 to i64
  %3566 = getelementptr inbounds i8, ptr %3024, i64 %3565
  %3567 = load i8, ptr %3566, align 1, !tbaa !11
  %3568 = zext i8 %3567 to i64
  %3569 = add nuw nsw i64 %3487, %3568
  store i64 %3569, ptr %3026, align 8, !tbaa !120
  %3570 = add nuw nsw i32 %3488, 1
  br i1 %3339, label %3571, label %3621

3571:                                             ; preds = %3564
  %3572 = load i32, ptr %4, align 4, !tbaa !5
  %3573 = load i32, ptr %12, align 4, !tbaa !5
  %3574 = add nsw i32 %3573, -1
  %3575 = icmp slt i32 %3572, %3574
  br i1 %3575, label %3598, label %3576

3576:                                             ; preds = %3571
  %3577 = icmp eq i32 %3572, %3574
  br i1 %3577, label %3578, label %3614

3578:                                             ; preds = %3576
  store i32 0, ptr %4, align 4, !tbaa !5
  %3579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3579, ptr %6, align 4, !tbaa !5
  br i1 %3344, label %3621, label %3580

3580:                                             ; preds = %3578, %3608
  %3581 = phi i64 [ %3612, %3608 ], [ 1, %3578 ]
  %3582 = getelementptr inbounds i32, ptr %4, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = getelementptr inbounds i32, ptr %12, i64 %3581
  %3585 = load i32, ptr %3584, align 4, !tbaa !5
  %3586 = add nsw i32 %3585, -1
  %3587 = icmp slt i32 %3583, %3586
  br i1 %3587, label %3588, label %3606

3588:                                             ; preds = %3580
  br i1 %3575, label %3598, label %3589

3589:                                             ; preds = %3588
  %3590 = shl i64 %3581, 32
  %3591 = add i64 %3590, -4294967296
  %3592 = ashr exact i64 %3591, 32
  %3593 = getelementptr inbounds i32, ptr %7, i64 %3592
  %3594 = load i32, ptr %3593, align 4, !tbaa !5
  %3595 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3596 = load i32, ptr %3595, align 4, !tbaa !5
  %3597 = add nsw i32 %3596, %3594
  store i32 %3597, ptr %3595, align 4, !tbaa !5
  br label %3616

3598:                                             ; preds = %3571, %3588
  %3599 = phi i32 [ %3583, %3588 ], [ %3572, %3571 ]
  %3600 = phi ptr [ %3582, %3588 ], [ %4, %3571 ]
  %3601 = phi i64 [ %3581, %3588 ], [ 0, %3571 ]
  %3602 = add nsw i32 %3599, 1
  store i32 %3602, ptr %3600, align 4, !tbaa !5
  %3603 = getelementptr inbounds i32, ptr %7, i64 %3601
  %3604 = load i32, ptr %3603, align 4, !tbaa !5
  %3605 = getelementptr inbounds i32, ptr %6, i64 %3601
  br label %3616

3606:                                             ; preds = %3580
  %3607 = icmp eq i32 %3583, %3586
  br i1 %3607, label %3608, label %3614

3608:                                             ; preds = %3606
  store i32 0, ptr %3582, align 4, !tbaa !5
  %3609 = getelementptr inbounds i32, ptr %8, i64 %3581
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3581
  store i32 %3610, ptr %3611, align 4, !tbaa !5
  %3612 = add nuw nsw i64 %3581, 1
  %3613 = icmp eq i64 %3612, %3342
  br i1 %3613, label %3621, label %3580, !llvm.loop !140

3614:                                             ; preds = %3576, %3606
  %3615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3616:                                             ; preds = %3589, %3598
  %3617 = phi ptr [ %3605, %3598 ], [ %3582, %3589 ]
  %3618 = phi i32 [ %3604, %3598 ], [ 1, %3589 ]
  %3619 = load i32, ptr %3617, align 4, !tbaa !5
  %3620 = add nsw i32 %3619, %3618
  store i32 %3620, ptr %3617, align 4, !tbaa !5
  br label %3621

3621:                                             ; preds = %3608, %3616, %3578, %3564
  %3622 = icmp eq i32 %3570, %5
  br i1 %3622, label %5426, label %3486, !llvm.loop !141

3623:                                             ; preds = %3031
  %3624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

3625:                                             ; preds = %18
  %3626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3627 = load ptr, ptr %3626, align 8, !tbaa !9
  %3628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3629 = load ptr, ptr %3628, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3629, align 8, !tbaa !18
  %3630 = icmp eq i32 %13, 0
  br i1 %3630, label %3631, label %3634

3631:                                             ; preds = %3625
  %3632 = load i8, ptr %3627, align 1, !tbaa !11
  %3633 = uitofp i8 %3632 to double
  store double %3633, ptr %3629, align 8, !tbaa !18
  br label %5426

3634:                                             ; preds = %3625
  switch i32 %1, label %4222 [
    i32 1, label %3635
    i32 0, label %3930
  ]

3635:                                             ; preds = %3634
  %3636 = getelementptr inbounds i32, ptr %3, i64 %19
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = icmp eq i32 %3637, 0
  %3639 = icmp sgt i32 %5, 0
  br i1 %3638, label %3649, label %3640

3640:                                             ; preds = %3635
  br i1 %3639, label %3641, label %5426

3641:                                             ; preds = %3640
  %3642 = icmp sgt i32 %13, 1
  %3643 = icmp sgt i32 %13, 0
  %3644 = add i32 %13, -2
  %3645 = zext i32 %3644 to i64
  %3646 = zext i32 %13 to i64
  %3647 = add nuw i32 %5, 1
  %3648 = icmp eq i32 %13, 1
  br label %3793

3649:                                             ; preds = %3635
  br i1 %3639, label %3650, label %5426

3650:                                             ; preds = %3649
  %3651 = icmp sgt i32 %13, 1
  %3652 = icmp sgt i32 %13, 0
  %3653 = add i32 %13, -2
  %3654 = zext i32 %3653 to i64
  %3655 = zext i32 %13 to i64
  %3656 = add nuw i32 %5, 1
  %3657 = icmp eq i32 %13, 1
  br label %3658

3658:                                             ; preds = %3650, %3791
  %3659 = phi double [ 0.000000e+00, %3650 ], [ %3741, %3791 ]
  %3660 = phi i32 [ 0, %3650 ], [ %3743, %3791 ]
  %3661 = phi double [ 0.000000e+00, %3650 ], [ %3742, %3791 ]
  %3662 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3651, label %3663, label %3732

3663:                                             ; preds = %3658, %3722
  %3664 = phi i32 [ %3731, %3722 ], [ 0, %3658 ]
  %3665 = phi i64 [ %3673, %3722 ], [ %3655, %3658 ]
  %3666 = phi i64 [ %3730, %3722 ], [ %3654, %3658 ]
  %3667 = phi i32 [ %3728, %3722 ], [ %3662, %3658 ]
  %3668 = sub i32 %3653, %3664
  %3669 = tail call i32 @llvm.smin.i32(i32 %3668, i32 0)
  %3670 = sub i32 %3668, %3669
  %3671 = zext i32 %3670 to i64
  %3672 = add nuw nsw i64 %3671, 1
  %3673 = add nsw i64 %3665, -1
  %3674 = icmp ult i32 %3670, 31
  br i1 %3674, label %3710, label %3675

3675:                                             ; preds = %3663
  %3676 = and i64 %3672, 8589934560
  %3677 = sub i64 %3666, %3676
  br label %3678

3678:                                             ; preds = %3678, %3675
  %3679 = phi i64 [ 0, %3675 ], [ %3702, %3678 ]
  %3680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3675 ], [ %3698, %3678 ]
  %3681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3675 ], [ %3699, %3678 ]
  %3682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3675 ], [ %3700, %3678 ]
  %3683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3675 ], [ %3701, %3678 ]
  %3684 = sub i64 %3666, %3679
  %3685 = getelementptr inbounds i32, ptr %9, i64 %3684
  %3686 = getelementptr inbounds i32, ptr %3685, i64 -7
  %3687 = load <8 x i32>, ptr %3686, align 4, !tbaa !5
  %3688 = shufflevector <8 x i32> %3687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3689 = getelementptr inbounds i32, ptr %3685, i64 -15
  %3690 = load <8 x i32>, ptr %3689, align 4, !tbaa !5
  %3691 = shufflevector <8 x i32> %3690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3692 = getelementptr inbounds i32, ptr %3685, i64 -23
  %3693 = load <8 x i32>, ptr %3692, align 4, !tbaa !5
  %3694 = shufflevector <8 x i32> %3693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3695 = getelementptr inbounds i32, ptr %3685, i64 -31
  %3696 = load <8 x i32>, ptr %3695, align 4, !tbaa !5
  %3697 = shufflevector <8 x i32> %3696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3698 = mul <8 x i32> %3688, %3680
  %3699 = mul <8 x i32> %3691, %3681
  %3700 = mul <8 x i32> %3694, %3682
  %3701 = mul <8 x i32> %3697, %3683
  %3702 = add nuw i64 %3679, 32
  %3703 = icmp eq i64 %3702, %3676
  br i1 %3703, label %3704, label %3678, !llvm.loop !142

3704:                                             ; preds = %3678
  %3705 = mul <8 x i32> %3699, %3698
  %3706 = mul <8 x i32> %3700, %3705
  %3707 = mul <8 x i32> %3701, %3706
  %3708 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3707)
  %3709 = icmp eq i64 %3672, %3676
  br i1 %3709, label %3722, label %3710

3710:                                             ; preds = %3663, %3704
  %3711 = phi i64 [ %3666, %3663 ], [ %3677, %3704 ]
  %3712 = phi i32 [ 1, %3663 ], [ %3708, %3704 ]
  br label %3713

3713:                                             ; preds = %3710, %3713
  %3714 = phi i64 [ %3719, %3713 ], [ %3711, %3710 ]
  %3715 = phi i32 [ %3718, %3713 ], [ %3712, %3710 ]
  %3716 = getelementptr inbounds i32, ptr %9, i64 %3714
  %3717 = load i32, ptr %3716, align 4, !tbaa !5
  %3718 = mul nsw i32 %3717, %3715
  %3719 = add nsw i64 %3714, -1
  %3720 = trunc i64 %3714 to i32
  %3721 = icmp sgt i32 %3720, 0
  br i1 %3721, label %3713, label %3722, !llvm.loop !143

3722:                                             ; preds = %3713, %3704
  %3723 = phi i32 [ %3708, %3704 ], [ %3718, %3713 ]
  %3724 = and i64 %3673, 4294967295
  %3725 = getelementptr inbounds i32, ptr %6, i64 %3724
  %3726 = load i32, ptr %3725, align 4, !tbaa !5
  %3727 = mul nsw i32 %3726, %3723
  %3728 = add nsw i32 %3727, %3667
  %3729 = icmp sgt i64 %3665, 2
  %3730 = add nsw i64 %3666, -1
  %3731 = add i32 %3664, 1
  br i1 %3729, label %3663, label %3732, !llvm.loop !144

3732:                                             ; preds = %3722, %3658
  %3733 = phi i32 [ %3662, %3658 ], [ %3728, %3722 ]
  %3734 = sext i32 %3733 to i64
  %3735 = getelementptr inbounds double, ptr %2, i64 %3734
  %3736 = load double, ptr %3735, align 8, !tbaa !18
  %3737 = getelementptr inbounds i8, ptr %3627, i64 %3734
  %3738 = load i8, ptr %3737, align 1, !tbaa !11
  %3739 = uitofp i8 %3738 to double
  %3740 = fmul fast double %3736, %3739
  %3741 = fadd fast double %3740, %3659
  store double %3741, ptr %3629, align 8, !tbaa !18
  %3742 = fadd fast double %3736, %3661
  %3743 = add nuw nsw i32 %3660, 1
  br i1 %3652, label %3744, label %3791

3744:                                             ; preds = %3732
  %3745 = load i32, ptr %4, align 4, !tbaa !5
  %3746 = load i32, ptr %12, align 4, !tbaa !5
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3745, %3747
  br i1 %3748, label %3768, label %3749

3749:                                             ; preds = %3744
  %3750 = icmp eq i32 %3745, %3747
  br i1 %3750, label %3751, label %3784

3751:                                             ; preds = %3749
  store i32 0, ptr %4, align 4, !tbaa !5
  %3752 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3752, ptr %6, align 4, !tbaa !5
  br i1 %3657, label %3791, label %3753

3753:                                             ; preds = %3751, %3778
  %3754 = phi i64 [ %3782, %3778 ], [ 1, %3751 ]
  %3755 = getelementptr inbounds i32, ptr %4, i64 %3754
  %3756 = load i32, ptr %3755, align 4, !tbaa !5
  %3757 = getelementptr inbounds i32, ptr %12, i64 %3754
  %3758 = load i32, ptr %3757, align 4, !tbaa !5
  %3759 = add nsw i32 %3758, -1
  %3760 = icmp slt i32 %3756, %3759
  br i1 %3760, label %3761, label %3776

3761:                                             ; preds = %3753
  br i1 %3748, label %3768, label %3762

3762:                                             ; preds = %3761
  %3763 = getelementptr inbounds i32, ptr %7, i64 %3754
  %3764 = load i32, ptr %3763, align 4, !tbaa !5
  %3765 = getelementptr inbounds i32, ptr %6, i64 %3754
  %3766 = load i32, ptr %3765, align 4, !tbaa !5
  %3767 = add nsw i32 %3766, %3764
  store i32 %3767, ptr %3765, align 4, !tbaa !5
  br label %3786

3768:                                             ; preds = %3744, %3761
  %3769 = phi i32 [ %3756, %3761 ], [ %3745, %3744 ]
  %3770 = phi ptr [ %3755, %3761 ], [ %4, %3744 ]
  %3771 = phi i64 [ %3754, %3761 ], [ 0, %3744 ]
  %3772 = add nsw i32 %3769, 1
  store i32 %3772, ptr %3770, align 4, !tbaa !5
  %3773 = getelementptr inbounds i32, ptr %7, i64 %3771
  %3774 = load i32, ptr %3773, align 4, !tbaa !5
  %3775 = getelementptr inbounds i32, ptr %6, i64 %3771
  br label %3786

3776:                                             ; preds = %3753
  %3777 = icmp eq i32 %3756, %3759
  br i1 %3777, label %3778, label %3784

3778:                                             ; preds = %3776
  store i32 0, ptr %3755, align 4, !tbaa !5
  %3779 = getelementptr inbounds i32, ptr %8, i64 %3754
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3754
  store i32 %3780, ptr %3781, align 4, !tbaa !5
  %3782 = add nuw nsw i64 %3754, 1
  %3783 = icmp eq i64 %3782, %3655
  br i1 %3783, label %3791, label %3753, !llvm.loop !145

3784:                                             ; preds = %3749, %3776
  %3785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3786:                                             ; preds = %3762, %3768
  %3787 = phi ptr [ %3775, %3768 ], [ %3755, %3762 ]
  %3788 = phi i32 [ %3774, %3768 ], [ 1, %3762 ]
  %3789 = load i32, ptr %3787, align 4, !tbaa !5
  %3790 = add nsw i32 %3789, %3788
  store i32 %3790, ptr %3787, align 4, !tbaa !5
  br label %3791

3791:                                             ; preds = %3778, %3786, %3751, %3732
  %3792 = icmp eq i32 %3743, %5
  br i1 %3792, label %5426, label %3658, !llvm.loop !146

3793:                                             ; preds = %3641, %3928
  %3794 = phi double [ 0.000000e+00, %3641 ], [ %3876, %3928 ]
  %3795 = phi i32 [ 0, %3641 ], [ %3877, %3928 ]
  %3796 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3642, label %3797, label %3866

3797:                                             ; preds = %3793, %3856
  %3798 = phi i32 [ %3865, %3856 ], [ 0, %3793 ]
  %3799 = phi i64 [ %3807, %3856 ], [ %3646, %3793 ]
  %3800 = phi i64 [ %3864, %3856 ], [ %3645, %3793 ]
  %3801 = phi i32 [ %3862, %3856 ], [ %3796, %3793 ]
  %3802 = sub i32 %3644, %3798
  %3803 = tail call i32 @llvm.smin.i32(i32 %3802, i32 0)
  %3804 = sub i32 %3802, %3803
  %3805 = zext i32 %3804 to i64
  %3806 = add nuw nsw i64 %3805, 1
  %3807 = add nsw i64 %3799, -1
  %3808 = icmp ult i32 %3804, 31
  br i1 %3808, label %3844, label %3809

3809:                                             ; preds = %3797
  %3810 = and i64 %3806, 8589934560
  %3811 = sub i64 %3800, %3810
  br label %3812

3812:                                             ; preds = %3812, %3809
  %3813 = phi i64 [ 0, %3809 ], [ %3836, %3812 ]
  %3814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3809 ], [ %3832, %3812 ]
  %3815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3809 ], [ %3833, %3812 ]
  %3816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3809 ], [ %3834, %3812 ]
  %3817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3809 ], [ %3835, %3812 ]
  %3818 = sub i64 %3800, %3813
  %3819 = getelementptr inbounds i32, ptr %11, i64 %3818
  %3820 = getelementptr inbounds i32, ptr %3819, i64 -7
  %3821 = load <8 x i32>, ptr %3820, align 4, !tbaa !5
  %3822 = shufflevector <8 x i32> %3821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3823 = getelementptr inbounds i32, ptr %3819, i64 -15
  %3824 = load <8 x i32>, ptr %3823, align 4, !tbaa !5
  %3825 = shufflevector <8 x i32> %3824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3826 = getelementptr inbounds i32, ptr %3819, i64 -23
  %3827 = load <8 x i32>, ptr %3826, align 4, !tbaa !5
  %3828 = shufflevector <8 x i32> %3827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3829 = getelementptr inbounds i32, ptr %3819, i64 -31
  %3830 = load <8 x i32>, ptr %3829, align 4, !tbaa !5
  %3831 = shufflevector <8 x i32> %3830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3832 = mul <8 x i32> %3822, %3814
  %3833 = mul <8 x i32> %3825, %3815
  %3834 = mul <8 x i32> %3828, %3816
  %3835 = mul <8 x i32> %3831, %3817
  %3836 = add nuw i64 %3813, 32
  %3837 = icmp eq i64 %3836, %3810
  br i1 %3837, label %3838, label %3812, !llvm.loop !147

3838:                                             ; preds = %3812
  %3839 = mul <8 x i32> %3833, %3832
  %3840 = mul <8 x i32> %3834, %3839
  %3841 = mul <8 x i32> %3835, %3840
  %3842 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3841)
  %3843 = icmp eq i64 %3806, %3810
  br i1 %3843, label %3856, label %3844

3844:                                             ; preds = %3797, %3838
  %3845 = phi i64 [ %3800, %3797 ], [ %3811, %3838 ]
  %3846 = phi i32 [ 1, %3797 ], [ %3842, %3838 ]
  br label %3847

3847:                                             ; preds = %3844, %3847
  %3848 = phi i64 [ %3853, %3847 ], [ %3845, %3844 ]
  %3849 = phi i32 [ %3852, %3847 ], [ %3846, %3844 ]
  %3850 = getelementptr inbounds i32, ptr %11, i64 %3848
  %3851 = load i32, ptr %3850, align 4, !tbaa !5
  %3852 = mul nsw i32 %3851, %3849
  %3853 = add nsw i64 %3848, -1
  %3854 = trunc i64 %3848 to i32
  %3855 = icmp sgt i32 %3854, 0
  br i1 %3855, label %3847, label %3856, !llvm.loop !148

3856:                                             ; preds = %3847, %3838
  %3857 = phi i32 [ %3842, %3838 ], [ %3852, %3847 ]
  %3858 = and i64 %3807, 4294967295
  %3859 = getelementptr inbounds i32, ptr %6, i64 %3858
  %3860 = load i32, ptr %3859, align 4, !tbaa !5
  %3861 = mul nsw i32 %3860, %3857
  %3862 = add nsw i32 %3861, %3801
  %3863 = icmp sgt i64 %3799, 2
  %3864 = add nsw i64 %3800, -1
  %3865 = add i32 %3798, 1
  br i1 %3863, label %3797, label %3866, !llvm.loop !149

3866:                                             ; preds = %3856, %3793
  %3867 = phi i32 [ %3796, %3793 ], [ %3862, %3856 ]
  %3868 = icmp slt i32 %3867, %5
  br i1 %3868, label %3871, label %3869

3869:                                             ; preds = %3866
  %3870 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

3871:                                             ; preds = %3866
  %3872 = sext i32 %3867 to i64
  %3873 = getelementptr inbounds i8, ptr %3627, i64 %3872
  %3874 = load i8, ptr %3873, align 1, !tbaa !11
  %3875 = uitofp i8 %3874 to double
  %3876 = fadd fast double %3794, %3875
  store double %3876, ptr %3629, align 8, !tbaa !18
  %3877 = add nuw nsw i32 %3795, 1
  br i1 %3643, label %3878, label %3928

3878:                                             ; preds = %3871
  %3879 = load i32, ptr %4, align 4, !tbaa !5
  %3880 = load i32, ptr %12, align 4, !tbaa !5
  %3881 = add nsw i32 %3880, -1
  %3882 = icmp slt i32 %3879, %3881
  br i1 %3882, label %3905, label %3883

3883:                                             ; preds = %3878
  %3884 = icmp eq i32 %3879, %3881
  br i1 %3884, label %3885, label %3921

3885:                                             ; preds = %3883
  store i32 0, ptr %4, align 4, !tbaa !5
  %3886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3886, ptr %6, align 4, !tbaa !5
  br i1 %3648, label %3928, label %3887

3887:                                             ; preds = %3885, %3915
  %3888 = phi i64 [ %3919, %3915 ], [ 1, %3885 ]
  %3889 = getelementptr inbounds i32, ptr %4, i64 %3888
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %12, i64 %3888
  %3892 = load i32, ptr %3891, align 4, !tbaa !5
  %3893 = add nsw i32 %3892, -1
  %3894 = icmp slt i32 %3890, %3893
  br i1 %3894, label %3895, label %3913

3895:                                             ; preds = %3887
  br i1 %3882, label %3905, label %3896

3896:                                             ; preds = %3895
  %3897 = shl i64 %3888, 32
  %3898 = add i64 %3897, -4294967296
  %3899 = ashr exact i64 %3898, 32
  %3900 = getelementptr inbounds i32, ptr %7, i64 %3899
  %3901 = load i32, ptr %3900, align 4, !tbaa !5
  %3902 = getelementptr inbounds i32, ptr %6, i64 %3888
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = add nsw i32 %3903, %3901
  store i32 %3904, ptr %3902, align 4, !tbaa !5
  br label %3923

3905:                                             ; preds = %3878, %3895
  %3906 = phi i32 [ %3890, %3895 ], [ %3879, %3878 ]
  %3907 = phi ptr [ %3889, %3895 ], [ %4, %3878 ]
  %3908 = phi i64 [ %3888, %3895 ], [ 0, %3878 ]
  %3909 = add nsw i32 %3906, 1
  store i32 %3909, ptr %3907, align 4, !tbaa !5
  %3910 = getelementptr inbounds i32, ptr %7, i64 %3908
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = getelementptr inbounds i32, ptr %6, i64 %3908
  br label %3923

3913:                                             ; preds = %3887
  %3914 = icmp eq i32 %3890, %3893
  br i1 %3914, label %3915, label %3921

3915:                                             ; preds = %3913
  store i32 0, ptr %3889, align 4, !tbaa !5
  %3916 = getelementptr inbounds i32, ptr %8, i64 %3888
  %3917 = load i32, ptr %3916, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %6, i64 %3888
  store i32 %3917, ptr %3918, align 4, !tbaa !5
  %3919 = add nuw nsw i64 %3888, 1
  %3920 = icmp eq i64 %3919, %3646
  br i1 %3920, label %3928, label %3887, !llvm.loop !150

3921:                                             ; preds = %3883, %3913
  %3922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

3923:                                             ; preds = %3896, %3905
  %3924 = phi ptr [ %3912, %3905 ], [ %3889, %3896 ]
  %3925 = phi i32 [ %3911, %3905 ], [ 1, %3896 ]
  %3926 = load i32, ptr %3924, align 4, !tbaa !5
  %3927 = add nsw i32 %3926, %3925
  store i32 %3927, ptr %3924, align 4, !tbaa !5
  br label %3928

3928:                                             ; preds = %3915, %3923, %3885, %3871
  %3929 = icmp eq i32 %3877, %5
  br i1 %3929, label %5426, label %3793, !llvm.loop !151

3930:                                             ; preds = %3634
  %3931 = getelementptr inbounds i32, ptr %3, i64 %19
  %3932 = load i32, ptr %3931, align 4, !tbaa !5
  %3933 = icmp eq i32 %3932, 0
  %3934 = icmp sgt i32 %5, 0
  br i1 %3933, label %3944, label %3935

3935:                                             ; preds = %3930
  br i1 %3934, label %3936, label %5426

3936:                                             ; preds = %3935
  %3937 = icmp sgt i32 %13, 1
  %3938 = icmp sgt i32 %13, 0
  %3939 = add i32 %13, -2
  %3940 = zext i32 %3939 to i64
  %3941 = zext i32 %13 to i64
  %3942 = add nuw i32 %5, 1
  %3943 = icmp eq i32 %13, 1
  br label %4085

3944:                                             ; preds = %3930
  br i1 %3934, label %3945, label %5426

3945:                                             ; preds = %3944
  %3946 = icmp sgt i32 %13, 1
  %3947 = icmp sgt i32 %13, 0
  %3948 = add i32 %13, -2
  %3949 = zext i32 %3948 to i64
  %3950 = zext i32 %13 to i64
  %3951 = add nuw i32 %5, 1
  %3952 = icmp eq i32 %13, 1
  br label %3953

3953:                                             ; preds = %3945, %4083
  %3954 = phi double [ 0.000000e+00, %3945 ], [ %4033, %4083 ]
  %3955 = phi i32 [ 0, %3945 ], [ %4035, %4083 ]
  %3956 = phi double [ 0.000000e+00, %3945 ], [ %4034, %4083 ]
  %3957 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3946, label %3958, label %4027

3958:                                             ; preds = %3953, %4017
  %3959 = phi i32 [ %4026, %4017 ], [ 0, %3953 ]
  %3960 = phi i64 [ %3968, %4017 ], [ %3950, %3953 ]
  %3961 = phi i64 [ %4025, %4017 ], [ %3949, %3953 ]
  %3962 = phi i32 [ %4023, %4017 ], [ %3957, %3953 ]
  %3963 = sub i32 %3948, %3959
  %3964 = tail call i32 @llvm.smin.i32(i32 %3963, i32 0)
  %3965 = sub i32 %3963, %3964
  %3966 = zext i32 %3965 to i64
  %3967 = add nuw nsw i64 %3966, 1
  %3968 = add nsw i64 %3960, -1
  %3969 = icmp ult i32 %3965, 31
  br i1 %3969, label %4005, label %3970

3970:                                             ; preds = %3958
  %3971 = and i64 %3967, 8589934560
  %3972 = sub i64 %3961, %3971
  br label %3973

3973:                                             ; preds = %3973, %3970
  %3974 = phi i64 [ 0, %3970 ], [ %3997, %3973 ]
  %3975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3970 ], [ %3993, %3973 ]
  %3976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3970 ], [ %3994, %3973 ]
  %3977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3970 ], [ %3995, %3973 ]
  %3978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3970 ], [ %3996, %3973 ]
  %3979 = sub i64 %3961, %3974
  %3980 = getelementptr inbounds i32, ptr %9, i64 %3979
  %3981 = getelementptr inbounds i32, ptr %3980, i64 -7
  %3982 = load <8 x i32>, ptr %3981, align 4, !tbaa !5
  %3983 = shufflevector <8 x i32> %3982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3984 = getelementptr inbounds i32, ptr %3980, i64 -15
  %3985 = load <8 x i32>, ptr %3984, align 4, !tbaa !5
  %3986 = shufflevector <8 x i32> %3985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3987 = getelementptr inbounds i32, ptr %3980, i64 -23
  %3988 = load <8 x i32>, ptr %3987, align 4, !tbaa !5
  %3989 = shufflevector <8 x i32> %3988, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3990 = getelementptr inbounds i32, ptr %3980, i64 -31
  %3991 = load <8 x i32>, ptr %3990, align 4, !tbaa !5
  %3992 = shufflevector <8 x i32> %3991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3993 = mul <8 x i32> %3983, %3975
  %3994 = mul <8 x i32> %3986, %3976
  %3995 = mul <8 x i32> %3989, %3977
  %3996 = mul <8 x i32> %3992, %3978
  %3997 = add nuw i64 %3974, 32
  %3998 = icmp eq i64 %3997, %3971
  br i1 %3998, label %3999, label %3973, !llvm.loop !152

3999:                                             ; preds = %3973
  %4000 = mul <8 x i32> %3994, %3993
  %4001 = mul <8 x i32> %3995, %4000
  %4002 = mul <8 x i32> %3996, %4001
  %4003 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4002)
  %4004 = icmp eq i64 %3967, %3971
  br i1 %4004, label %4017, label %4005

4005:                                             ; preds = %3958, %3999
  %4006 = phi i64 [ %3961, %3958 ], [ %3972, %3999 ]
  %4007 = phi i32 [ 1, %3958 ], [ %4003, %3999 ]
  br label %4008

4008:                                             ; preds = %4005, %4008
  %4009 = phi i64 [ %4014, %4008 ], [ %4006, %4005 ]
  %4010 = phi i32 [ %4013, %4008 ], [ %4007, %4005 ]
  %4011 = getelementptr inbounds i32, ptr %9, i64 %4009
  %4012 = load i32, ptr %4011, align 4, !tbaa !5
  %4013 = mul nsw i32 %4012, %4010
  %4014 = add nsw i64 %4009, -1
  %4015 = trunc i64 %4009 to i32
  %4016 = icmp sgt i32 %4015, 0
  br i1 %4016, label %4008, label %4017, !llvm.loop !153

4017:                                             ; preds = %4008, %3999
  %4018 = phi i32 [ %4003, %3999 ], [ %4013, %4008 ]
  %4019 = and i64 %3968, 4294967295
  %4020 = getelementptr inbounds i32, ptr %6, i64 %4019
  %4021 = load i32, ptr %4020, align 4, !tbaa !5
  %4022 = mul nsw i32 %4021, %4018
  %4023 = add nsw i32 %4022, %3962
  %4024 = icmp sgt i64 %3960, 2
  %4025 = add nsw i64 %3961, -1
  %4026 = add i32 %3959, 1
  br i1 %4024, label %3958, label %4027, !llvm.loop !154

4027:                                             ; preds = %4017, %3953
  %4028 = phi i32 [ %3957, %3953 ], [ %4023, %4017 ]
  %4029 = sext i32 %4028 to i64
  %4030 = getelementptr inbounds i8, ptr %3627, i64 %4029
  %4031 = load i8, ptr %4030, align 1, !tbaa !11
  %4032 = uitofp i8 %4031 to double
  %4033 = fadd fast double %3954, %4032
  store double %4033, ptr %3629, align 8, !tbaa !18
  %4034 = fadd fast double %3956, 1.000000e+00
  %4035 = add nuw nsw i32 %3955, 1
  br i1 %3947, label %4036, label %4083

4036:                                             ; preds = %4027
  %4037 = load i32, ptr %4, align 4, !tbaa !5
  %4038 = load i32, ptr %12, align 4, !tbaa !5
  %4039 = add nsw i32 %4038, -1
  %4040 = icmp slt i32 %4037, %4039
  br i1 %4040, label %4060, label %4041

4041:                                             ; preds = %4036
  %4042 = icmp eq i32 %4037, %4039
  br i1 %4042, label %4043, label %4076

4043:                                             ; preds = %4041
  store i32 0, ptr %4, align 4, !tbaa !5
  %4044 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4044, ptr %6, align 4, !tbaa !5
  br i1 %3952, label %4083, label %4045

4045:                                             ; preds = %4043, %4070
  %4046 = phi i64 [ %4074, %4070 ], [ 1, %4043 ]
  %4047 = getelementptr inbounds i32, ptr %4, i64 %4046
  %4048 = load i32, ptr %4047, align 4, !tbaa !5
  %4049 = getelementptr inbounds i32, ptr %12, i64 %4046
  %4050 = load i32, ptr %4049, align 4, !tbaa !5
  %4051 = add nsw i32 %4050, -1
  %4052 = icmp slt i32 %4048, %4051
  br i1 %4052, label %4053, label %4068

4053:                                             ; preds = %4045
  br i1 %4040, label %4060, label %4054

4054:                                             ; preds = %4053
  %4055 = getelementptr inbounds i32, ptr %7, i64 %4046
  %4056 = load i32, ptr %4055, align 4, !tbaa !5
  %4057 = getelementptr inbounds i32, ptr %6, i64 %4046
  %4058 = load i32, ptr %4057, align 4, !tbaa !5
  %4059 = add nsw i32 %4058, %4056
  store i32 %4059, ptr %4057, align 4, !tbaa !5
  br label %4078

4060:                                             ; preds = %4036, %4053
  %4061 = phi i32 [ %4048, %4053 ], [ %4037, %4036 ]
  %4062 = phi ptr [ %4047, %4053 ], [ %4, %4036 ]
  %4063 = phi i64 [ %4046, %4053 ], [ 0, %4036 ]
  %4064 = add nsw i32 %4061, 1
  store i32 %4064, ptr %4062, align 4, !tbaa !5
  %4065 = getelementptr inbounds i32, ptr %7, i64 %4063
  %4066 = load i32, ptr %4065, align 4, !tbaa !5
  %4067 = getelementptr inbounds i32, ptr %6, i64 %4063
  br label %4078

4068:                                             ; preds = %4045
  %4069 = icmp eq i32 %4048, %4051
  br i1 %4069, label %4070, label %4076

4070:                                             ; preds = %4068
  store i32 0, ptr %4047, align 4, !tbaa !5
  %4071 = getelementptr inbounds i32, ptr %8, i64 %4046
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = getelementptr inbounds i32, ptr %6, i64 %4046
  store i32 %4072, ptr %4073, align 4, !tbaa !5
  %4074 = add nuw nsw i64 %4046, 1
  %4075 = icmp eq i64 %4074, %3950
  br i1 %4075, label %4083, label %4045, !llvm.loop !155

4076:                                             ; preds = %4041, %4068
  %4077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4078:                                             ; preds = %4054, %4060
  %4079 = phi ptr [ %4067, %4060 ], [ %4047, %4054 ]
  %4080 = phi i32 [ %4066, %4060 ], [ 1, %4054 ]
  %4081 = load i32, ptr %4079, align 4, !tbaa !5
  %4082 = add nsw i32 %4081, %4080
  store i32 %4082, ptr %4079, align 4, !tbaa !5
  br label %4083

4083:                                             ; preds = %4070, %4078, %4043, %4027
  %4084 = icmp eq i32 %4035, %5
  br i1 %4084, label %5426, label %3953, !llvm.loop !156

4085:                                             ; preds = %3936, %4220
  %4086 = phi double [ 0.000000e+00, %3936 ], [ %4168, %4220 ]
  %4087 = phi i32 [ 0, %3936 ], [ %4169, %4220 ]
  %4088 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3937, label %4089, label %4158

4089:                                             ; preds = %4085, %4148
  %4090 = phi i32 [ %4157, %4148 ], [ 0, %4085 ]
  %4091 = phi i64 [ %4099, %4148 ], [ %3941, %4085 ]
  %4092 = phi i64 [ %4156, %4148 ], [ %3940, %4085 ]
  %4093 = phi i32 [ %4154, %4148 ], [ %4088, %4085 ]
  %4094 = sub i32 %3939, %4090
  %4095 = tail call i32 @llvm.smin.i32(i32 %4094, i32 0)
  %4096 = sub i32 %4094, %4095
  %4097 = zext i32 %4096 to i64
  %4098 = add nuw nsw i64 %4097, 1
  %4099 = add nsw i64 %4091, -1
  %4100 = icmp ult i32 %4096, 31
  br i1 %4100, label %4136, label %4101

4101:                                             ; preds = %4089
  %4102 = and i64 %4098, 8589934560
  %4103 = sub i64 %4092, %4102
  br label %4104

4104:                                             ; preds = %4104, %4101
  %4105 = phi i64 [ 0, %4101 ], [ %4128, %4104 ]
  %4106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4101 ], [ %4124, %4104 ]
  %4107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4101 ], [ %4125, %4104 ]
  %4108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4101 ], [ %4126, %4104 ]
  %4109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4101 ], [ %4127, %4104 ]
  %4110 = sub i64 %4092, %4105
  %4111 = getelementptr inbounds i32, ptr %11, i64 %4110
  %4112 = getelementptr inbounds i32, ptr %4111, i64 -7
  %4113 = load <8 x i32>, ptr %4112, align 4, !tbaa !5
  %4114 = shufflevector <8 x i32> %4113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4115 = getelementptr inbounds i32, ptr %4111, i64 -15
  %4116 = load <8 x i32>, ptr %4115, align 4, !tbaa !5
  %4117 = shufflevector <8 x i32> %4116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4118 = getelementptr inbounds i32, ptr %4111, i64 -23
  %4119 = load <8 x i32>, ptr %4118, align 4, !tbaa !5
  %4120 = shufflevector <8 x i32> %4119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4121 = getelementptr inbounds i32, ptr %4111, i64 -31
  %4122 = load <8 x i32>, ptr %4121, align 4, !tbaa !5
  %4123 = shufflevector <8 x i32> %4122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4124 = mul <8 x i32> %4114, %4106
  %4125 = mul <8 x i32> %4117, %4107
  %4126 = mul <8 x i32> %4120, %4108
  %4127 = mul <8 x i32> %4123, %4109
  %4128 = add nuw i64 %4105, 32
  %4129 = icmp eq i64 %4128, %4102
  br i1 %4129, label %4130, label %4104, !llvm.loop !157

4130:                                             ; preds = %4104
  %4131 = mul <8 x i32> %4125, %4124
  %4132 = mul <8 x i32> %4126, %4131
  %4133 = mul <8 x i32> %4127, %4132
  %4134 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4133)
  %4135 = icmp eq i64 %4098, %4102
  br i1 %4135, label %4148, label %4136

4136:                                             ; preds = %4089, %4130
  %4137 = phi i64 [ %4092, %4089 ], [ %4103, %4130 ]
  %4138 = phi i32 [ 1, %4089 ], [ %4134, %4130 ]
  br label %4139

4139:                                             ; preds = %4136, %4139
  %4140 = phi i64 [ %4145, %4139 ], [ %4137, %4136 ]
  %4141 = phi i32 [ %4144, %4139 ], [ %4138, %4136 ]
  %4142 = getelementptr inbounds i32, ptr %11, i64 %4140
  %4143 = load i32, ptr %4142, align 4, !tbaa !5
  %4144 = mul nsw i32 %4143, %4141
  %4145 = add nsw i64 %4140, -1
  %4146 = trunc i64 %4140 to i32
  %4147 = icmp sgt i32 %4146, 0
  br i1 %4147, label %4139, label %4148, !llvm.loop !158

4148:                                             ; preds = %4139, %4130
  %4149 = phi i32 [ %4134, %4130 ], [ %4144, %4139 ]
  %4150 = and i64 %4099, 4294967295
  %4151 = getelementptr inbounds i32, ptr %6, i64 %4150
  %4152 = load i32, ptr %4151, align 4, !tbaa !5
  %4153 = mul nsw i32 %4152, %4149
  %4154 = add nsw i32 %4153, %4093
  %4155 = icmp sgt i64 %4091, 2
  %4156 = add nsw i64 %4092, -1
  %4157 = add i32 %4090, 1
  br i1 %4155, label %4089, label %4158, !llvm.loop !159

4158:                                             ; preds = %4148, %4085
  %4159 = phi i32 [ %4088, %4085 ], [ %4154, %4148 ]
  %4160 = icmp slt i32 %4159, %5
  br i1 %4160, label %4163, label %4161

4161:                                             ; preds = %4158
  %4162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

4163:                                             ; preds = %4158
  %4164 = sext i32 %4159 to i64
  %4165 = getelementptr inbounds i8, ptr %3627, i64 %4164
  %4166 = load i8, ptr %4165, align 1, !tbaa !11
  %4167 = uitofp i8 %4166 to double
  %4168 = fadd fast double %4086, %4167
  store double %4168, ptr %3629, align 8, !tbaa !18
  %4169 = add nuw nsw i32 %4087, 1
  br i1 %3938, label %4170, label %4220

4170:                                             ; preds = %4163
  %4171 = load i32, ptr %4, align 4, !tbaa !5
  %4172 = load i32, ptr %12, align 4, !tbaa !5
  %4173 = add nsw i32 %4172, -1
  %4174 = icmp slt i32 %4171, %4173
  br i1 %4174, label %4197, label %4175

4175:                                             ; preds = %4170
  %4176 = icmp eq i32 %4171, %4173
  br i1 %4176, label %4177, label %4213

4177:                                             ; preds = %4175
  store i32 0, ptr %4, align 4, !tbaa !5
  %4178 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4178, ptr %6, align 4, !tbaa !5
  br i1 %3943, label %4220, label %4179

4179:                                             ; preds = %4177, %4207
  %4180 = phi i64 [ %4211, %4207 ], [ 1, %4177 ]
  %4181 = getelementptr inbounds i32, ptr %4, i64 %4180
  %4182 = load i32, ptr %4181, align 4, !tbaa !5
  %4183 = getelementptr inbounds i32, ptr %12, i64 %4180
  %4184 = load i32, ptr %4183, align 4, !tbaa !5
  %4185 = add nsw i32 %4184, -1
  %4186 = icmp slt i32 %4182, %4185
  br i1 %4186, label %4187, label %4205

4187:                                             ; preds = %4179
  br i1 %4174, label %4197, label %4188

4188:                                             ; preds = %4187
  %4189 = shl i64 %4180, 32
  %4190 = add i64 %4189, -4294967296
  %4191 = ashr exact i64 %4190, 32
  %4192 = getelementptr inbounds i32, ptr %7, i64 %4191
  %4193 = load i32, ptr %4192, align 4, !tbaa !5
  %4194 = getelementptr inbounds i32, ptr %6, i64 %4180
  %4195 = load i32, ptr %4194, align 4, !tbaa !5
  %4196 = add nsw i32 %4195, %4193
  store i32 %4196, ptr %4194, align 4, !tbaa !5
  br label %4215

4197:                                             ; preds = %4170, %4187
  %4198 = phi i32 [ %4182, %4187 ], [ %4171, %4170 ]
  %4199 = phi ptr [ %4181, %4187 ], [ %4, %4170 ]
  %4200 = phi i64 [ %4180, %4187 ], [ 0, %4170 ]
  %4201 = add nsw i32 %4198, 1
  store i32 %4201, ptr %4199, align 4, !tbaa !5
  %4202 = getelementptr inbounds i32, ptr %7, i64 %4200
  %4203 = load i32, ptr %4202, align 4, !tbaa !5
  %4204 = getelementptr inbounds i32, ptr %6, i64 %4200
  br label %4215

4205:                                             ; preds = %4179
  %4206 = icmp eq i32 %4182, %4185
  br i1 %4206, label %4207, label %4213

4207:                                             ; preds = %4205
  store i32 0, ptr %4181, align 4, !tbaa !5
  %4208 = getelementptr inbounds i32, ptr %8, i64 %4180
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4180
  store i32 %4209, ptr %4210, align 4, !tbaa !5
  %4211 = add nuw nsw i64 %4180, 1
  %4212 = icmp eq i64 %4211, %3941
  br i1 %4212, label %4220, label %4179, !llvm.loop !160

4213:                                             ; preds = %4175, %4205
  %4214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4215:                                             ; preds = %4188, %4197
  %4216 = phi ptr [ %4204, %4197 ], [ %4181, %4188 ]
  %4217 = phi i32 [ %4203, %4197 ], [ 1, %4188 ]
  %4218 = load i32, ptr %4216, align 4, !tbaa !5
  %4219 = add nsw i32 %4218, %4217
  store i32 %4219, ptr %4216, align 4, !tbaa !5
  br label %4220

4220:                                             ; preds = %4207, %4215, %4177, %4163
  %4221 = icmp eq i32 %4169, %5
  br i1 %4221, label %5426, label %4085, !llvm.loop !161

4222:                                             ; preds = %3634
  %4223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

4224:                                             ; preds = %18
  %4225 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4226 = load ptr, ptr %4225, align 8, !tbaa !9
  %4227 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4228 = load ptr, ptr %4227, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4228, align 4, !tbaa !162
  %4229 = icmp eq i32 %13, 0
  br i1 %4229, label %4230, label %4233

4230:                                             ; preds = %4224
  %4231 = load i8, ptr %4226, align 1, !tbaa !11
  %4232 = uitofp i8 %4231 to float
  store float %4232, ptr %4228, align 4, !tbaa !162
  br label %5426

4233:                                             ; preds = %4224
  switch i32 %1, label %4825 [
    i32 1, label %4234
    i32 0, label %4533
  ]

4234:                                             ; preds = %4233
  %4235 = getelementptr inbounds i32, ptr %3, i64 %19
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = icmp eq i32 %4236, 0
  %4238 = icmp sgt i32 %5, 0
  br i1 %4237, label %4248, label %4239

4239:                                             ; preds = %4234
  br i1 %4238, label %4240, label %5426

4240:                                             ; preds = %4239
  %4241 = icmp sgt i32 %13, 1
  %4242 = icmp sgt i32 %13, 0
  %4243 = add i32 %13, -2
  %4244 = zext i32 %4243 to i64
  %4245 = zext i32 %13 to i64
  %4246 = add nuw i32 %5, 1
  %4247 = icmp eq i32 %13, 1
  br label %4394

4248:                                             ; preds = %4234
  br i1 %4238, label %4249, label %5426

4249:                                             ; preds = %4248
  %4250 = icmp sgt i32 %13, 1
  %4251 = icmp sgt i32 %13, 0
  %4252 = add i32 %13, -2
  %4253 = zext i32 %4252 to i64
  %4254 = zext i32 %13 to i64
  %4255 = add nuw i32 %5, 1
  %4256 = icmp eq i32 %13, 1
  br label %4257

4257:                                             ; preds = %4249, %4392
  %4258 = phi float [ 0.000000e+00, %4249 ], [ %4342, %4392 ]
  %4259 = phi i32 [ 0, %4249 ], [ %4344, %4392 ]
  %4260 = phi double [ 0.000000e+00, %4249 ], [ %4343, %4392 ]
  %4261 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4250, label %4262, label %4331

4262:                                             ; preds = %4257, %4321
  %4263 = phi i32 [ %4330, %4321 ], [ 0, %4257 ]
  %4264 = phi i64 [ %4272, %4321 ], [ %4254, %4257 ]
  %4265 = phi i64 [ %4329, %4321 ], [ %4253, %4257 ]
  %4266 = phi i32 [ %4327, %4321 ], [ %4261, %4257 ]
  %4267 = sub i32 %4252, %4263
  %4268 = tail call i32 @llvm.smin.i32(i32 %4267, i32 0)
  %4269 = sub i32 %4267, %4268
  %4270 = zext i32 %4269 to i64
  %4271 = add nuw nsw i64 %4270, 1
  %4272 = add nsw i64 %4264, -1
  %4273 = icmp ult i32 %4269, 31
  br i1 %4273, label %4309, label %4274

4274:                                             ; preds = %4262
  %4275 = and i64 %4271, 8589934560
  %4276 = sub i64 %4265, %4275
  br label %4277

4277:                                             ; preds = %4277, %4274
  %4278 = phi i64 [ 0, %4274 ], [ %4301, %4277 ]
  %4279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4274 ], [ %4297, %4277 ]
  %4280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4274 ], [ %4298, %4277 ]
  %4281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4274 ], [ %4299, %4277 ]
  %4282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4274 ], [ %4300, %4277 ]
  %4283 = sub i64 %4265, %4278
  %4284 = getelementptr inbounds i32, ptr %9, i64 %4283
  %4285 = getelementptr inbounds i32, ptr %4284, i64 -7
  %4286 = load <8 x i32>, ptr %4285, align 4, !tbaa !5
  %4287 = shufflevector <8 x i32> %4286, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4288 = getelementptr inbounds i32, ptr %4284, i64 -15
  %4289 = load <8 x i32>, ptr %4288, align 4, !tbaa !5
  %4290 = shufflevector <8 x i32> %4289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4291 = getelementptr inbounds i32, ptr %4284, i64 -23
  %4292 = load <8 x i32>, ptr %4291, align 4, !tbaa !5
  %4293 = shufflevector <8 x i32> %4292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4294 = getelementptr inbounds i32, ptr %4284, i64 -31
  %4295 = load <8 x i32>, ptr %4294, align 4, !tbaa !5
  %4296 = shufflevector <8 x i32> %4295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4297 = mul <8 x i32> %4287, %4279
  %4298 = mul <8 x i32> %4290, %4280
  %4299 = mul <8 x i32> %4293, %4281
  %4300 = mul <8 x i32> %4296, %4282
  %4301 = add nuw i64 %4278, 32
  %4302 = icmp eq i64 %4301, %4275
  br i1 %4302, label %4303, label %4277, !llvm.loop !164

4303:                                             ; preds = %4277
  %4304 = mul <8 x i32> %4298, %4297
  %4305 = mul <8 x i32> %4299, %4304
  %4306 = mul <8 x i32> %4300, %4305
  %4307 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4306)
  %4308 = icmp eq i64 %4271, %4275
  br i1 %4308, label %4321, label %4309

4309:                                             ; preds = %4262, %4303
  %4310 = phi i64 [ %4265, %4262 ], [ %4276, %4303 ]
  %4311 = phi i32 [ 1, %4262 ], [ %4307, %4303 ]
  br label %4312

4312:                                             ; preds = %4309, %4312
  %4313 = phi i64 [ %4318, %4312 ], [ %4310, %4309 ]
  %4314 = phi i32 [ %4317, %4312 ], [ %4311, %4309 ]
  %4315 = getelementptr inbounds i32, ptr %9, i64 %4313
  %4316 = load i32, ptr %4315, align 4, !tbaa !5
  %4317 = mul nsw i32 %4316, %4314
  %4318 = add nsw i64 %4313, -1
  %4319 = trunc i64 %4313 to i32
  %4320 = icmp sgt i32 %4319, 0
  br i1 %4320, label %4312, label %4321, !llvm.loop !165

4321:                                             ; preds = %4312, %4303
  %4322 = phi i32 [ %4307, %4303 ], [ %4317, %4312 ]
  %4323 = and i64 %4272, 4294967295
  %4324 = getelementptr inbounds i32, ptr %6, i64 %4323
  %4325 = load i32, ptr %4324, align 4, !tbaa !5
  %4326 = mul nsw i32 %4325, %4322
  %4327 = add nsw i32 %4326, %4266
  %4328 = icmp sgt i64 %4264, 2
  %4329 = add nsw i64 %4265, -1
  %4330 = add i32 %4263, 1
  br i1 %4328, label %4262, label %4331, !llvm.loop !166

4331:                                             ; preds = %4321, %4257
  %4332 = phi i32 [ %4261, %4257 ], [ %4327, %4321 ]
  %4333 = sext i32 %4332 to i64
  %4334 = getelementptr inbounds double, ptr %2, i64 %4333
  %4335 = load double, ptr %4334, align 8, !tbaa !18
  %4336 = getelementptr inbounds i8, ptr %4226, i64 %4333
  %4337 = load i8, ptr %4336, align 1, !tbaa !11
  %4338 = fpext float %4258 to double
  %4339 = uitofp i8 %4337 to double
  %4340 = fmul fast double %4335, %4339
  %4341 = fadd fast double %4340, %4338
  %4342 = fptrunc double %4341 to float
  store float %4342, ptr %4228, align 4, !tbaa !162
  %4343 = fadd fast double %4335, %4260
  %4344 = add nuw nsw i32 %4259, 1
  br i1 %4251, label %4345, label %4392

4345:                                             ; preds = %4331
  %4346 = load i32, ptr %4, align 4, !tbaa !5
  %4347 = load i32, ptr %12, align 4, !tbaa !5
  %4348 = add nsw i32 %4347, -1
  %4349 = icmp slt i32 %4346, %4348
  br i1 %4349, label %4369, label %4350

4350:                                             ; preds = %4345
  %4351 = icmp eq i32 %4346, %4348
  br i1 %4351, label %4352, label %4385

4352:                                             ; preds = %4350
  store i32 0, ptr %4, align 4, !tbaa !5
  %4353 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4353, ptr %6, align 4, !tbaa !5
  br i1 %4256, label %4392, label %4354

4354:                                             ; preds = %4352, %4379
  %4355 = phi i64 [ %4383, %4379 ], [ 1, %4352 ]
  %4356 = getelementptr inbounds i32, ptr %4, i64 %4355
  %4357 = load i32, ptr %4356, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %12, i64 %4355
  %4359 = load i32, ptr %4358, align 4, !tbaa !5
  %4360 = add nsw i32 %4359, -1
  %4361 = icmp slt i32 %4357, %4360
  br i1 %4361, label %4362, label %4377

4362:                                             ; preds = %4354
  br i1 %4349, label %4369, label %4363

4363:                                             ; preds = %4362
  %4364 = getelementptr inbounds i32, ptr %7, i64 %4355
  %4365 = load i32, ptr %4364, align 4, !tbaa !5
  %4366 = getelementptr inbounds i32, ptr %6, i64 %4355
  %4367 = load i32, ptr %4366, align 4, !tbaa !5
  %4368 = add nsw i32 %4367, %4365
  store i32 %4368, ptr %4366, align 4, !tbaa !5
  br label %4387

4369:                                             ; preds = %4345, %4362
  %4370 = phi i32 [ %4357, %4362 ], [ %4346, %4345 ]
  %4371 = phi ptr [ %4356, %4362 ], [ %4, %4345 ]
  %4372 = phi i64 [ %4355, %4362 ], [ 0, %4345 ]
  %4373 = add nsw i32 %4370, 1
  store i32 %4373, ptr %4371, align 4, !tbaa !5
  %4374 = getelementptr inbounds i32, ptr %7, i64 %4372
  %4375 = load i32, ptr %4374, align 4, !tbaa !5
  %4376 = getelementptr inbounds i32, ptr %6, i64 %4372
  br label %4387

4377:                                             ; preds = %4354
  %4378 = icmp eq i32 %4357, %4360
  br i1 %4378, label %4379, label %4385

4379:                                             ; preds = %4377
  store i32 0, ptr %4356, align 4, !tbaa !5
  %4380 = getelementptr inbounds i32, ptr %8, i64 %4355
  %4381 = load i32, ptr %4380, align 4, !tbaa !5
  %4382 = getelementptr inbounds i32, ptr %6, i64 %4355
  store i32 %4381, ptr %4382, align 4, !tbaa !5
  %4383 = add nuw nsw i64 %4355, 1
  %4384 = icmp eq i64 %4383, %4254
  br i1 %4384, label %4392, label %4354, !llvm.loop !167

4385:                                             ; preds = %4350, %4377
  %4386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4387:                                             ; preds = %4363, %4369
  %4388 = phi ptr [ %4376, %4369 ], [ %4356, %4363 ]
  %4389 = phi i32 [ %4375, %4369 ], [ 1, %4363 ]
  %4390 = load i32, ptr %4388, align 4, !tbaa !5
  %4391 = add nsw i32 %4390, %4389
  store i32 %4391, ptr %4388, align 4, !tbaa !5
  br label %4392

4392:                                             ; preds = %4379, %4387, %4352, %4331
  %4393 = icmp eq i32 %4344, %5
  br i1 %4393, label %5426, label %4257, !llvm.loop !168

4394:                                             ; preds = %4240, %4531
  %4395 = phi float [ 0.000000e+00, %4240 ], [ %4479, %4531 ]
  %4396 = phi i32 [ 0, %4240 ], [ %4480, %4531 ]
  %4397 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4241, label %4398, label %4467

4398:                                             ; preds = %4394, %4457
  %4399 = phi i32 [ %4466, %4457 ], [ 0, %4394 ]
  %4400 = phi i64 [ %4408, %4457 ], [ %4245, %4394 ]
  %4401 = phi i64 [ %4465, %4457 ], [ %4244, %4394 ]
  %4402 = phi i32 [ %4463, %4457 ], [ %4397, %4394 ]
  %4403 = sub i32 %4243, %4399
  %4404 = tail call i32 @llvm.smin.i32(i32 %4403, i32 0)
  %4405 = sub i32 %4403, %4404
  %4406 = zext i32 %4405 to i64
  %4407 = add nuw nsw i64 %4406, 1
  %4408 = add nsw i64 %4400, -1
  %4409 = icmp ult i32 %4405, 31
  br i1 %4409, label %4445, label %4410

4410:                                             ; preds = %4398
  %4411 = and i64 %4407, 8589934560
  %4412 = sub i64 %4401, %4411
  br label %4413

4413:                                             ; preds = %4413, %4410
  %4414 = phi i64 [ 0, %4410 ], [ %4437, %4413 ]
  %4415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4410 ], [ %4433, %4413 ]
  %4416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4410 ], [ %4434, %4413 ]
  %4417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4410 ], [ %4435, %4413 ]
  %4418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4410 ], [ %4436, %4413 ]
  %4419 = sub i64 %4401, %4414
  %4420 = getelementptr inbounds i32, ptr %11, i64 %4419
  %4421 = getelementptr inbounds i32, ptr %4420, i64 -7
  %4422 = load <8 x i32>, ptr %4421, align 4, !tbaa !5
  %4423 = shufflevector <8 x i32> %4422, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4424 = getelementptr inbounds i32, ptr %4420, i64 -15
  %4425 = load <8 x i32>, ptr %4424, align 4, !tbaa !5
  %4426 = shufflevector <8 x i32> %4425, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4427 = getelementptr inbounds i32, ptr %4420, i64 -23
  %4428 = load <8 x i32>, ptr %4427, align 4, !tbaa !5
  %4429 = shufflevector <8 x i32> %4428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4430 = getelementptr inbounds i32, ptr %4420, i64 -31
  %4431 = load <8 x i32>, ptr %4430, align 4, !tbaa !5
  %4432 = shufflevector <8 x i32> %4431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4433 = mul <8 x i32> %4423, %4415
  %4434 = mul <8 x i32> %4426, %4416
  %4435 = mul <8 x i32> %4429, %4417
  %4436 = mul <8 x i32> %4432, %4418
  %4437 = add nuw i64 %4414, 32
  %4438 = icmp eq i64 %4437, %4411
  br i1 %4438, label %4439, label %4413, !llvm.loop !169

4439:                                             ; preds = %4413
  %4440 = mul <8 x i32> %4434, %4433
  %4441 = mul <8 x i32> %4435, %4440
  %4442 = mul <8 x i32> %4436, %4441
  %4443 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4442)
  %4444 = icmp eq i64 %4407, %4411
  br i1 %4444, label %4457, label %4445

4445:                                             ; preds = %4398, %4439
  %4446 = phi i64 [ %4401, %4398 ], [ %4412, %4439 ]
  %4447 = phi i32 [ 1, %4398 ], [ %4443, %4439 ]
  br label %4448

4448:                                             ; preds = %4445, %4448
  %4449 = phi i64 [ %4454, %4448 ], [ %4446, %4445 ]
  %4450 = phi i32 [ %4453, %4448 ], [ %4447, %4445 ]
  %4451 = getelementptr inbounds i32, ptr %11, i64 %4449
  %4452 = load i32, ptr %4451, align 4, !tbaa !5
  %4453 = mul nsw i32 %4452, %4450
  %4454 = add nsw i64 %4449, -1
  %4455 = trunc i64 %4449 to i32
  %4456 = icmp sgt i32 %4455, 0
  br i1 %4456, label %4448, label %4457, !llvm.loop !170

4457:                                             ; preds = %4448, %4439
  %4458 = phi i32 [ %4443, %4439 ], [ %4453, %4448 ]
  %4459 = and i64 %4408, 4294967295
  %4460 = getelementptr inbounds i32, ptr %6, i64 %4459
  %4461 = load i32, ptr %4460, align 4, !tbaa !5
  %4462 = mul nsw i32 %4461, %4458
  %4463 = add nsw i32 %4462, %4402
  %4464 = icmp sgt i64 %4400, 2
  %4465 = add nsw i64 %4401, -1
  %4466 = add i32 %4399, 1
  br i1 %4464, label %4398, label %4467, !llvm.loop !171

4467:                                             ; preds = %4457, %4394
  %4468 = phi i32 [ %4397, %4394 ], [ %4463, %4457 ]
  %4469 = icmp slt i32 %4468, %5
  br i1 %4469, label %4472, label %4470

4470:                                             ; preds = %4467
  %4471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

4472:                                             ; preds = %4467
  %4473 = sext i32 %4468 to i64
  %4474 = getelementptr inbounds i8, ptr %4226, i64 %4473
  %4475 = load i8, ptr %4474, align 1, !tbaa !11
  %4476 = fpext float %4395 to double
  %4477 = uitofp i8 %4475 to double
  %4478 = fadd fast double %4476, %4477
  %4479 = fptrunc double %4478 to float
  store float %4479, ptr %4228, align 4, !tbaa !162
  %4480 = add nuw nsw i32 %4396, 1
  br i1 %4242, label %4481, label %4531

4481:                                             ; preds = %4472
  %4482 = load i32, ptr %4, align 4, !tbaa !5
  %4483 = load i32, ptr %12, align 4, !tbaa !5
  %4484 = add nsw i32 %4483, -1
  %4485 = icmp slt i32 %4482, %4484
  br i1 %4485, label %4508, label %4486

4486:                                             ; preds = %4481
  %4487 = icmp eq i32 %4482, %4484
  br i1 %4487, label %4488, label %4524

4488:                                             ; preds = %4486
  store i32 0, ptr %4, align 4, !tbaa !5
  %4489 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4489, ptr %6, align 4, !tbaa !5
  br i1 %4247, label %4531, label %4490

4490:                                             ; preds = %4488, %4518
  %4491 = phi i64 [ %4522, %4518 ], [ 1, %4488 ]
  %4492 = getelementptr inbounds i32, ptr %4, i64 %4491
  %4493 = load i32, ptr %4492, align 4, !tbaa !5
  %4494 = getelementptr inbounds i32, ptr %12, i64 %4491
  %4495 = load i32, ptr %4494, align 4, !tbaa !5
  %4496 = add nsw i32 %4495, -1
  %4497 = icmp slt i32 %4493, %4496
  br i1 %4497, label %4498, label %4516

4498:                                             ; preds = %4490
  br i1 %4485, label %4508, label %4499

4499:                                             ; preds = %4498
  %4500 = shl i64 %4491, 32
  %4501 = add i64 %4500, -4294967296
  %4502 = ashr exact i64 %4501, 32
  %4503 = getelementptr inbounds i32, ptr %7, i64 %4502
  %4504 = load i32, ptr %4503, align 4, !tbaa !5
  %4505 = getelementptr inbounds i32, ptr %6, i64 %4491
  %4506 = load i32, ptr %4505, align 4, !tbaa !5
  %4507 = add nsw i32 %4506, %4504
  store i32 %4507, ptr %4505, align 4, !tbaa !5
  br label %4526

4508:                                             ; preds = %4481, %4498
  %4509 = phi i32 [ %4493, %4498 ], [ %4482, %4481 ]
  %4510 = phi ptr [ %4492, %4498 ], [ %4, %4481 ]
  %4511 = phi i64 [ %4491, %4498 ], [ 0, %4481 ]
  %4512 = add nsw i32 %4509, 1
  store i32 %4512, ptr %4510, align 4, !tbaa !5
  %4513 = getelementptr inbounds i32, ptr %7, i64 %4511
  %4514 = load i32, ptr %4513, align 4, !tbaa !5
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4511
  br label %4526

4516:                                             ; preds = %4490
  %4517 = icmp eq i32 %4493, %4496
  br i1 %4517, label %4518, label %4524

4518:                                             ; preds = %4516
  store i32 0, ptr %4492, align 4, !tbaa !5
  %4519 = getelementptr inbounds i32, ptr %8, i64 %4491
  %4520 = load i32, ptr %4519, align 4, !tbaa !5
  %4521 = getelementptr inbounds i32, ptr %6, i64 %4491
  store i32 %4520, ptr %4521, align 4, !tbaa !5
  %4522 = add nuw nsw i64 %4491, 1
  %4523 = icmp eq i64 %4522, %4245
  br i1 %4523, label %4531, label %4490, !llvm.loop !172

4524:                                             ; preds = %4486, %4516
  %4525 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4526:                                             ; preds = %4499, %4508
  %4527 = phi ptr [ %4515, %4508 ], [ %4492, %4499 ]
  %4528 = phi i32 [ %4514, %4508 ], [ 1, %4499 ]
  %4529 = load i32, ptr %4527, align 4, !tbaa !5
  %4530 = add nsw i32 %4529, %4528
  store i32 %4530, ptr %4527, align 4, !tbaa !5
  br label %4531

4531:                                             ; preds = %4518, %4526, %4488, %4472
  %4532 = icmp eq i32 %4480, %5
  br i1 %4532, label %5426, label %4394, !llvm.loop !173

4533:                                             ; preds = %4233
  %4534 = getelementptr inbounds i32, ptr %3, i64 %19
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = icmp eq i32 %4535, 0
  %4537 = icmp sgt i32 %5, 0
  br i1 %4536, label %4547, label %4538

4538:                                             ; preds = %4533
  br i1 %4537, label %4539, label %5426

4539:                                             ; preds = %4538
  %4540 = icmp sgt i32 %13, 1
  %4541 = icmp sgt i32 %13, 0
  %4542 = add i32 %13, -2
  %4543 = zext i32 %4542 to i64
  %4544 = zext i32 %13 to i64
  %4545 = add nuw i32 %5, 1
  %4546 = icmp eq i32 %13, 1
  br label %4688

4547:                                             ; preds = %4533
  br i1 %4537, label %4548, label %5426

4548:                                             ; preds = %4547
  %4549 = icmp sgt i32 %13, 1
  %4550 = icmp sgt i32 %13, 0
  %4551 = add i32 %13, -2
  %4552 = zext i32 %4551 to i64
  %4553 = zext i32 %13 to i64
  %4554 = add nuw i32 %5, 1
  %4555 = icmp eq i32 %13, 1
  br label %4556

4556:                                             ; preds = %4548, %4686
  %4557 = phi float [ 0.000000e+00, %4548 ], [ %4636, %4686 ]
  %4558 = phi i32 [ 0, %4548 ], [ %4638, %4686 ]
  %4559 = phi double [ 0.000000e+00, %4548 ], [ %4637, %4686 ]
  %4560 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4549, label %4561, label %4630

4561:                                             ; preds = %4556, %4620
  %4562 = phi i32 [ %4629, %4620 ], [ 0, %4556 ]
  %4563 = phi i64 [ %4571, %4620 ], [ %4553, %4556 ]
  %4564 = phi i64 [ %4628, %4620 ], [ %4552, %4556 ]
  %4565 = phi i32 [ %4626, %4620 ], [ %4560, %4556 ]
  %4566 = sub i32 %4551, %4562
  %4567 = tail call i32 @llvm.smin.i32(i32 %4566, i32 0)
  %4568 = sub i32 %4566, %4567
  %4569 = zext i32 %4568 to i64
  %4570 = add nuw nsw i64 %4569, 1
  %4571 = add nsw i64 %4563, -1
  %4572 = icmp ult i32 %4568, 31
  br i1 %4572, label %4608, label %4573

4573:                                             ; preds = %4561
  %4574 = and i64 %4570, 8589934560
  %4575 = sub i64 %4564, %4574
  br label %4576

4576:                                             ; preds = %4576, %4573
  %4577 = phi i64 [ 0, %4573 ], [ %4600, %4576 ]
  %4578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4573 ], [ %4596, %4576 ]
  %4579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4573 ], [ %4597, %4576 ]
  %4580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4573 ], [ %4598, %4576 ]
  %4581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4573 ], [ %4599, %4576 ]
  %4582 = sub i64 %4564, %4577
  %4583 = getelementptr inbounds i32, ptr %9, i64 %4582
  %4584 = getelementptr inbounds i32, ptr %4583, i64 -7
  %4585 = load <8 x i32>, ptr %4584, align 4, !tbaa !5
  %4586 = shufflevector <8 x i32> %4585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4587 = getelementptr inbounds i32, ptr %4583, i64 -15
  %4588 = load <8 x i32>, ptr %4587, align 4, !tbaa !5
  %4589 = shufflevector <8 x i32> %4588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4590 = getelementptr inbounds i32, ptr %4583, i64 -23
  %4591 = load <8 x i32>, ptr %4590, align 4, !tbaa !5
  %4592 = shufflevector <8 x i32> %4591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4593 = getelementptr inbounds i32, ptr %4583, i64 -31
  %4594 = load <8 x i32>, ptr %4593, align 4, !tbaa !5
  %4595 = shufflevector <8 x i32> %4594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4596 = mul <8 x i32> %4586, %4578
  %4597 = mul <8 x i32> %4589, %4579
  %4598 = mul <8 x i32> %4592, %4580
  %4599 = mul <8 x i32> %4595, %4581
  %4600 = add nuw i64 %4577, 32
  %4601 = icmp eq i64 %4600, %4574
  br i1 %4601, label %4602, label %4576, !llvm.loop !174

4602:                                             ; preds = %4576
  %4603 = mul <8 x i32> %4597, %4596
  %4604 = mul <8 x i32> %4598, %4603
  %4605 = mul <8 x i32> %4599, %4604
  %4606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4605)
  %4607 = icmp eq i64 %4570, %4574
  br i1 %4607, label %4620, label %4608

4608:                                             ; preds = %4561, %4602
  %4609 = phi i64 [ %4564, %4561 ], [ %4575, %4602 ]
  %4610 = phi i32 [ 1, %4561 ], [ %4606, %4602 ]
  br label %4611

4611:                                             ; preds = %4608, %4611
  %4612 = phi i64 [ %4617, %4611 ], [ %4609, %4608 ]
  %4613 = phi i32 [ %4616, %4611 ], [ %4610, %4608 ]
  %4614 = getelementptr inbounds i32, ptr %9, i64 %4612
  %4615 = load i32, ptr %4614, align 4, !tbaa !5
  %4616 = mul nsw i32 %4615, %4613
  %4617 = add nsw i64 %4612, -1
  %4618 = trunc i64 %4612 to i32
  %4619 = icmp sgt i32 %4618, 0
  br i1 %4619, label %4611, label %4620, !llvm.loop !175

4620:                                             ; preds = %4611, %4602
  %4621 = phi i32 [ %4606, %4602 ], [ %4616, %4611 ]
  %4622 = and i64 %4571, 4294967295
  %4623 = getelementptr inbounds i32, ptr %6, i64 %4622
  %4624 = load i32, ptr %4623, align 4, !tbaa !5
  %4625 = mul nsw i32 %4624, %4621
  %4626 = add nsw i32 %4625, %4565
  %4627 = icmp sgt i64 %4563, 2
  %4628 = add nsw i64 %4564, -1
  %4629 = add i32 %4562, 1
  br i1 %4627, label %4561, label %4630, !llvm.loop !176

4630:                                             ; preds = %4620, %4556
  %4631 = phi i32 [ %4560, %4556 ], [ %4626, %4620 ]
  %4632 = sext i32 %4631 to i64
  %4633 = getelementptr inbounds i8, ptr %4226, i64 %4632
  %4634 = load i8, ptr %4633, align 1, !tbaa !11
  %4635 = uitofp i8 %4634 to float
  %4636 = fadd fast float %4557, %4635
  store float %4636, ptr %4228, align 4, !tbaa !162
  %4637 = fadd fast double %4559, 1.000000e+00
  %4638 = add nuw nsw i32 %4558, 1
  br i1 %4550, label %4639, label %4686

4639:                                             ; preds = %4630
  %4640 = load i32, ptr %4, align 4, !tbaa !5
  %4641 = load i32, ptr %12, align 4, !tbaa !5
  %4642 = add nsw i32 %4641, -1
  %4643 = icmp slt i32 %4640, %4642
  br i1 %4643, label %4663, label %4644

4644:                                             ; preds = %4639
  %4645 = icmp eq i32 %4640, %4642
  br i1 %4645, label %4646, label %4679

4646:                                             ; preds = %4644
  store i32 0, ptr %4, align 4, !tbaa !5
  %4647 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4647, ptr %6, align 4, !tbaa !5
  br i1 %4555, label %4686, label %4648

4648:                                             ; preds = %4646, %4673
  %4649 = phi i64 [ %4677, %4673 ], [ 1, %4646 ]
  %4650 = getelementptr inbounds i32, ptr %4, i64 %4649
  %4651 = load i32, ptr %4650, align 4, !tbaa !5
  %4652 = getelementptr inbounds i32, ptr %12, i64 %4649
  %4653 = load i32, ptr %4652, align 4, !tbaa !5
  %4654 = add nsw i32 %4653, -1
  %4655 = icmp slt i32 %4651, %4654
  br i1 %4655, label %4656, label %4671

4656:                                             ; preds = %4648
  br i1 %4643, label %4663, label %4657

4657:                                             ; preds = %4656
  %4658 = getelementptr inbounds i32, ptr %7, i64 %4649
  %4659 = load i32, ptr %4658, align 4, !tbaa !5
  %4660 = getelementptr inbounds i32, ptr %6, i64 %4649
  %4661 = load i32, ptr %4660, align 4, !tbaa !5
  %4662 = add nsw i32 %4661, %4659
  store i32 %4662, ptr %4660, align 4, !tbaa !5
  br label %4681

4663:                                             ; preds = %4639, %4656
  %4664 = phi i32 [ %4651, %4656 ], [ %4640, %4639 ]
  %4665 = phi ptr [ %4650, %4656 ], [ %4, %4639 ]
  %4666 = phi i64 [ %4649, %4656 ], [ 0, %4639 ]
  %4667 = add nsw i32 %4664, 1
  store i32 %4667, ptr %4665, align 4, !tbaa !5
  %4668 = getelementptr inbounds i32, ptr %7, i64 %4666
  %4669 = load i32, ptr %4668, align 4, !tbaa !5
  %4670 = getelementptr inbounds i32, ptr %6, i64 %4666
  br label %4681

4671:                                             ; preds = %4648
  %4672 = icmp eq i32 %4651, %4654
  br i1 %4672, label %4673, label %4679

4673:                                             ; preds = %4671
  store i32 0, ptr %4650, align 4, !tbaa !5
  %4674 = getelementptr inbounds i32, ptr %8, i64 %4649
  %4675 = load i32, ptr %4674, align 4, !tbaa !5
  %4676 = getelementptr inbounds i32, ptr %6, i64 %4649
  store i32 %4675, ptr %4676, align 4, !tbaa !5
  %4677 = add nuw nsw i64 %4649, 1
  %4678 = icmp eq i64 %4677, %4553
  br i1 %4678, label %4686, label %4648, !llvm.loop !177

4679:                                             ; preds = %4644, %4671
  %4680 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4681:                                             ; preds = %4657, %4663
  %4682 = phi ptr [ %4670, %4663 ], [ %4650, %4657 ]
  %4683 = phi i32 [ %4669, %4663 ], [ 1, %4657 ]
  %4684 = load i32, ptr %4682, align 4, !tbaa !5
  %4685 = add nsw i32 %4684, %4683
  store i32 %4685, ptr %4682, align 4, !tbaa !5
  br label %4686

4686:                                             ; preds = %4673, %4681, %4646, %4630
  %4687 = icmp eq i32 %4638, %5
  br i1 %4687, label %5426, label %4556, !llvm.loop !178

4688:                                             ; preds = %4539, %4823
  %4689 = phi float [ 0.000000e+00, %4539 ], [ %4771, %4823 ]
  %4690 = phi i32 [ 0, %4539 ], [ %4772, %4823 ]
  %4691 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4540, label %4692, label %4761

4692:                                             ; preds = %4688, %4751
  %4693 = phi i32 [ %4760, %4751 ], [ 0, %4688 ]
  %4694 = phi i64 [ %4702, %4751 ], [ %4544, %4688 ]
  %4695 = phi i64 [ %4759, %4751 ], [ %4543, %4688 ]
  %4696 = phi i32 [ %4757, %4751 ], [ %4691, %4688 ]
  %4697 = sub i32 %4542, %4693
  %4698 = tail call i32 @llvm.smin.i32(i32 %4697, i32 0)
  %4699 = sub i32 %4697, %4698
  %4700 = zext i32 %4699 to i64
  %4701 = add nuw nsw i64 %4700, 1
  %4702 = add nsw i64 %4694, -1
  %4703 = icmp ult i32 %4699, 31
  br i1 %4703, label %4739, label %4704

4704:                                             ; preds = %4692
  %4705 = and i64 %4701, 8589934560
  %4706 = sub i64 %4695, %4705
  br label %4707

4707:                                             ; preds = %4707, %4704
  %4708 = phi i64 [ 0, %4704 ], [ %4731, %4707 ]
  %4709 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4704 ], [ %4727, %4707 ]
  %4710 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4704 ], [ %4728, %4707 ]
  %4711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4704 ], [ %4729, %4707 ]
  %4712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4704 ], [ %4730, %4707 ]
  %4713 = sub i64 %4695, %4708
  %4714 = getelementptr inbounds i32, ptr %11, i64 %4713
  %4715 = getelementptr inbounds i32, ptr %4714, i64 -7
  %4716 = load <8 x i32>, ptr %4715, align 4, !tbaa !5
  %4717 = shufflevector <8 x i32> %4716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4718 = getelementptr inbounds i32, ptr %4714, i64 -15
  %4719 = load <8 x i32>, ptr %4718, align 4, !tbaa !5
  %4720 = shufflevector <8 x i32> %4719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4721 = getelementptr inbounds i32, ptr %4714, i64 -23
  %4722 = load <8 x i32>, ptr %4721, align 4, !tbaa !5
  %4723 = shufflevector <8 x i32> %4722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4724 = getelementptr inbounds i32, ptr %4714, i64 -31
  %4725 = load <8 x i32>, ptr %4724, align 4, !tbaa !5
  %4726 = shufflevector <8 x i32> %4725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4727 = mul <8 x i32> %4717, %4709
  %4728 = mul <8 x i32> %4720, %4710
  %4729 = mul <8 x i32> %4723, %4711
  %4730 = mul <8 x i32> %4726, %4712
  %4731 = add nuw i64 %4708, 32
  %4732 = icmp eq i64 %4731, %4705
  br i1 %4732, label %4733, label %4707, !llvm.loop !179

4733:                                             ; preds = %4707
  %4734 = mul <8 x i32> %4728, %4727
  %4735 = mul <8 x i32> %4729, %4734
  %4736 = mul <8 x i32> %4730, %4735
  %4737 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4736)
  %4738 = icmp eq i64 %4701, %4705
  br i1 %4738, label %4751, label %4739

4739:                                             ; preds = %4692, %4733
  %4740 = phi i64 [ %4695, %4692 ], [ %4706, %4733 ]
  %4741 = phi i32 [ 1, %4692 ], [ %4737, %4733 ]
  br label %4742

4742:                                             ; preds = %4739, %4742
  %4743 = phi i64 [ %4748, %4742 ], [ %4740, %4739 ]
  %4744 = phi i32 [ %4747, %4742 ], [ %4741, %4739 ]
  %4745 = getelementptr inbounds i32, ptr %11, i64 %4743
  %4746 = load i32, ptr %4745, align 4, !tbaa !5
  %4747 = mul nsw i32 %4746, %4744
  %4748 = add nsw i64 %4743, -1
  %4749 = trunc i64 %4743 to i32
  %4750 = icmp sgt i32 %4749, 0
  br i1 %4750, label %4742, label %4751, !llvm.loop !180

4751:                                             ; preds = %4742, %4733
  %4752 = phi i32 [ %4737, %4733 ], [ %4747, %4742 ]
  %4753 = and i64 %4702, 4294967295
  %4754 = getelementptr inbounds i32, ptr %6, i64 %4753
  %4755 = load i32, ptr %4754, align 4, !tbaa !5
  %4756 = mul nsw i32 %4755, %4752
  %4757 = add nsw i32 %4756, %4696
  %4758 = icmp sgt i64 %4694, 2
  %4759 = add nsw i64 %4695, -1
  %4760 = add i32 %4693, 1
  br i1 %4758, label %4692, label %4761, !llvm.loop !181

4761:                                             ; preds = %4751, %4688
  %4762 = phi i32 [ %4691, %4688 ], [ %4757, %4751 ]
  %4763 = icmp slt i32 %4762, %5
  br i1 %4763, label %4766, label %4764

4764:                                             ; preds = %4761
  %4765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

4766:                                             ; preds = %4761
  %4767 = sext i32 %4762 to i64
  %4768 = getelementptr inbounds i8, ptr %4226, i64 %4767
  %4769 = load i8, ptr %4768, align 1, !tbaa !11
  %4770 = uitofp i8 %4769 to float
  %4771 = fadd fast float %4689, %4770
  store float %4771, ptr %4228, align 4, !tbaa !162
  %4772 = add nuw nsw i32 %4690, 1
  br i1 %4541, label %4773, label %4823

4773:                                             ; preds = %4766
  %4774 = load i32, ptr %4, align 4, !tbaa !5
  %4775 = load i32, ptr %12, align 4, !tbaa !5
  %4776 = add nsw i32 %4775, -1
  %4777 = icmp slt i32 %4774, %4776
  br i1 %4777, label %4800, label %4778

4778:                                             ; preds = %4773
  %4779 = icmp eq i32 %4774, %4776
  br i1 %4779, label %4780, label %4816

4780:                                             ; preds = %4778
  store i32 0, ptr %4, align 4, !tbaa !5
  %4781 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4781, ptr %6, align 4, !tbaa !5
  br i1 %4546, label %4823, label %4782

4782:                                             ; preds = %4780, %4810
  %4783 = phi i64 [ %4814, %4810 ], [ 1, %4780 ]
  %4784 = getelementptr inbounds i32, ptr %4, i64 %4783
  %4785 = load i32, ptr %4784, align 4, !tbaa !5
  %4786 = getelementptr inbounds i32, ptr %12, i64 %4783
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = add nsw i32 %4787, -1
  %4789 = icmp slt i32 %4785, %4788
  br i1 %4789, label %4790, label %4808

4790:                                             ; preds = %4782
  br i1 %4777, label %4800, label %4791

4791:                                             ; preds = %4790
  %4792 = shl i64 %4783, 32
  %4793 = add i64 %4792, -4294967296
  %4794 = ashr exact i64 %4793, 32
  %4795 = getelementptr inbounds i32, ptr %7, i64 %4794
  %4796 = load i32, ptr %4795, align 4, !tbaa !5
  %4797 = getelementptr inbounds i32, ptr %6, i64 %4783
  %4798 = load i32, ptr %4797, align 4, !tbaa !5
  %4799 = add nsw i32 %4798, %4796
  store i32 %4799, ptr %4797, align 4, !tbaa !5
  br label %4818

4800:                                             ; preds = %4773, %4790
  %4801 = phi i32 [ %4785, %4790 ], [ %4774, %4773 ]
  %4802 = phi ptr [ %4784, %4790 ], [ %4, %4773 ]
  %4803 = phi i64 [ %4783, %4790 ], [ 0, %4773 ]
  %4804 = add nsw i32 %4801, 1
  store i32 %4804, ptr %4802, align 4, !tbaa !5
  %4805 = getelementptr inbounds i32, ptr %7, i64 %4803
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = getelementptr inbounds i32, ptr %6, i64 %4803
  br label %4818

4808:                                             ; preds = %4782
  %4809 = icmp eq i32 %4785, %4788
  br i1 %4809, label %4810, label %4816

4810:                                             ; preds = %4808
  store i32 0, ptr %4784, align 4, !tbaa !5
  %4811 = getelementptr inbounds i32, ptr %8, i64 %4783
  %4812 = load i32, ptr %4811, align 4, !tbaa !5
  %4813 = getelementptr inbounds i32, ptr %6, i64 %4783
  store i32 %4812, ptr %4813, align 4, !tbaa !5
  %4814 = add nuw nsw i64 %4783, 1
  %4815 = icmp eq i64 %4814, %4544
  br i1 %4815, label %4823, label %4782, !llvm.loop !182

4816:                                             ; preds = %4778, %4808
  %4817 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4818:                                             ; preds = %4791, %4800
  %4819 = phi ptr [ %4807, %4800 ], [ %4784, %4791 ]
  %4820 = phi i32 [ %4806, %4800 ], [ 1, %4791 ]
  %4821 = load i32, ptr %4819, align 4, !tbaa !5
  %4822 = add nsw i32 %4821, %4820
  store i32 %4822, ptr %4819, align 4, !tbaa !5
  br label %4823

4823:                                             ; preds = %4810, %4818, %4780, %4766
  %4824 = icmp eq i32 %4772, %5
  br i1 %4824, label %5426, label %4688, !llvm.loop !183

4825:                                             ; preds = %4233
  %4826 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

4827:                                             ; preds = %18
  %4828 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4829 = load ptr, ptr %4828, align 8, !tbaa !9
  %4830 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4831 = load ptr, ptr %4830, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4831, align 8, !tbaa !18
  %4832 = icmp eq i32 %13, 0
  br i1 %4832, label %4833, label %4836

4833:                                             ; preds = %4827
  %4834 = load i8, ptr %4829, align 1, !tbaa !11
  %4835 = uitofp i8 %4834 to double
  store double %4835, ptr %4831, align 8, !tbaa !18
  br label %5426

4836:                                             ; preds = %4827
  switch i32 %1, label %5424 [
    i32 1, label %4837
    i32 0, label %5132
  ]

4837:                                             ; preds = %4836
  %4838 = getelementptr inbounds i32, ptr %3, i64 %19
  %4839 = load i32, ptr %4838, align 4, !tbaa !5
  %4840 = icmp eq i32 %4839, 0
  %4841 = icmp sgt i32 %5, 0
  br i1 %4840, label %4851, label %4842

4842:                                             ; preds = %4837
  br i1 %4841, label %4843, label %5426

4843:                                             ; preds = %4842
  %4844 = icmp sgt i32 %13, 1
  %4845 = icmp sgt i32 %13, 0
  %4846 = add i32 %13, -2
  %4847 = zext i32 %4846 to i64
  %4848 = zext i32 %13 to i64
  %4849 = add nuw i32 %5, 1
  %4850 = icmp eq i32 %13, 1
  br label %4995

4851:                                             ; preds = %4837
  br i1 %4841, label %4852, label %5426

4852:                                             ; preds = %4851
  %4853 = icmp sgt i32 %13, 1
  %4854 = icmp sgt i32 %13, 0
  %4855 = add i32 %13, -2
  %4856 = zext i32 %4855 to i64
  %4857 = zext i32 %13 to i64
  %4858 = add nuw i32 %5, 1
  %4859 = icmp eq i32 %13, 1
  br label %4860

4860:                                             ; preds = %4852, %4993
  %4861 = phi double [ 0.000000e+00, %4852 ], [ %4943, %4993 ]
  %4862 = phi i32 [ 0, %4852 ], [ %4945, %4993 ]
  %4863 = phi double [ 0.000000e+00, %4852 ], [ %4944, %4993 ]
  %4864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4853, label %4865, label %4934

4865:                                             ; preds = %4860, %4924
  %4866 = phi i32 [ %4933, %4924 ], [ 0, %4860 ]
  %4867 = phi i64 [ %4875, %4924 ], [ %4857, %4860 ]
  %4868 = phi i64 [ %4932, %4924 ], [ %4856, %4860 ]
  %4869 = phi i32 [ %4930, %4924 ], [ %4864, %4860 ]
  %4870 = sub i32 %4855, %4866
  %4871 = tail call i32 @llvm.smin.i32(i32 %4870, i32 0)
  %4872 = sub i32 %4870, %4871
  %4873 = zext i32 %4872 to i64
  %4874 = add nuw nsw i64 %4873, 1
  %4875 = add nsw i64 %4867, -1
  %4876 = icmp ult i32 %4872, 31
  br i1 %4876, label %4912, label %4877

4877:                                             ; preds = %4865
  %4878 = and i64 %4874, 8589934560
  %4879 = sub i64 %4868, %4878
  br label %4880

4880:                                             ; preds = %4880, %4877
  %4881 = phi i64 [ 0, %4877 ], [ %4904, %4880 ]
  %4882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4900, %4880 ]
  %4883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4901, %4880 ]
  %4884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4902, %4880 ]
  %4885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4903, %4880 ]
  %4886 = sub i64 %4868, %4881
  %4887 = getelementptr inbounds i32, ptr %9, i64 %4886
  %4888 = getelementptr inbounds i32, ptr %4887, i64 -7
  %4889 = load <8 x i32>, ptr %4888, align 4, !tbaa !5
  %4890 = shufflevector <8 x i32> %4889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4891 = getelementptr inbounds i32, ptr %4887, i64 -15
  %4892 = load <8 x i32>, ptr %4891, align 4, !tbaa !5
  %4893 = shufflevector <8 x i32> %4892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4894 = getelementptr inbounds i32, ptr %4887, i64 -23
  %4895 = load <8 x i32>, ptr %4894, align 4, !tbaa !5
  %4896 = shufflevector <8 x i32> %4895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4897 = getelementptr inbounds i32, ptr %4887, i64 -31
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = mul <8 x i32> %4890, %4882
  %4901 = mul <8 x i32> %4893, %4883
  %4902 = mul <8 x i32> %4896, %4884
  %4903 = mul <8 x i32> %4899, %4885
  %4904 = add nuw i64 %4881, 32
  %4905 = icmp eq i64 %4904, %4878
  br i1 %4905, label %4906, label %4880, !llvm.loop !184

4906:                                             ; preds = %4880
  %4907 = mul <8 x i32> %4901, %4900
  %4908 = mul <8 x i32> %4902, %4907
  %4909 = mul <8 x i32> %4903, %4908
  %4910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4909)
  %4911 = icmp eq i64 %4874, %4878
  br i1 %4911, label %4924, label %4912

4912:                                             ; preds = %4865, %4906
  %4913 = phi i64 [ %4868, %4865 ], [ %4879, %4906 ]
  %4914 = phi i32 [ 1, %4865 ], [ %4910, %4906 ]
  br label %4915

4915:                                             ; preds = %4912, %4915
  %4916 = phi i64 [ %4921, %4915 ], [ %4913, %4912 ]
  %4917 = phi i32 [ %4920, %4915 ], [ %4914, %4912 ]
  %4918 = getelementptr inbounds i32, ptr %9, i64 %4916
  %4919 = load i32, ptr %4918, align 4, !tbaa !5
  %4920 = mul nsw i32 %4919, %4917
  %4921 = add nsw i64 %4916, -1
  %4922 = trunc i64 %4916 to i32
  %4923 = icmp sgt i32 %4922, 0
  br i1 %4923, label %4915, label %4924, !llvm.loop !185

4924:                                             ; preds = %4915, %4906
  %4925 = phi i32 [ %4910, %4906 ], [ %4920, %4915 ]
  %4926 = and i64 %4875, 4294967295
  %4927 = getelementptr inbounds i32, ptr %6, i64 %4926
  %4928 = load i32, ptr %4927, align 4, !tbaa !5
  %4929 = mul nsw i32 %4928, %4925
  %4930 = add nsw i32 %4929, %4869
  %4931 = icmp sgt i64 %4867, 2
  %4932 = add nsw i64 %4868, -1
  %4933 = add i32 %4866, 1
  br i1 %4931, label %4865, label %4934, !llvm.loop !186

4934:                                             ; preds = %4924, %4860
  %4935 = phi i32 [ %4864, %4860 ], [ %4930, %4924 ]
  %4936 = sext i32 %4935 to i64
  %4937 = getelementptr inbounds double, ptr %2, i64 %4936
  %4938 = load double, ptr %4937, align 8, !tbaa !18
  %4939 = getelementptr inbounds i8, ptr %4829, i64 %4936
  %4940 = load i8, ptr %4939, align 1, !tbaa !11
  %4941 = uitofp i8 %4940 to double
  %4942 = fmul fast double %4938, %4941
  %4943 = fadd fast double %4942, %4861
  store double %4943, ptr %4831, align 8, !tbaa !18
  %4944 = fadd fast double %4938, %4863
  %4945 = add nuw nsw i32 %4862, 1
  br i1 %4854, label %4946, label %4993

4946:                                             ; preds = %4934
  %4947 = load i32, ptr %4, align 4, !tbaa !5
  %4948 = load i32, ptr %12, align 4, !tbaa !5
  %4949 = add nsw i32 %4948, -1
  %4950 = icmp slt i32 %4947, %4949
  br i1 %4950, label %4970, label %4951

4951:                                             ; preds = %4946
  %4952 = icmp eq i32 %4947, %4949
  br i1 %4952, label %4953, label %4986

4953:                                             ; preds = %4951
  store i32 0, ptr %4, align 4, !tbaa !5
  %4954 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4954, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %4993, label %4955

4955:                                             ; preds = %4953, %4980
  %4956 = phi i64 [ %4984, %4980 ], [ 1, %4953 ]
  %4957 = getelementptr inbounds i32, ptr %4, i64 %4956
  %4958 = load i32, ptr %4957, align 4, !tbaa !5
  %4959 = getelementptr inbounds i32, ptr %12, i64 %4956
  %4960 = load i32, ptr %4959, align 4, !tbaa !5
  %4961 = add nsw i32 %4960, -1
  %4962 = icmp slt i32 %4958, %4961
  br i1 %4962, label %4963, label %4978

4963:                                             ; preds = %4955
  br i1 %4950, label %4970, label %4964

4964:                                             ; preds = %4963
  %4965 = getelementptr inbounds i32, ptr %7, i64 %4956
  %4966 = load i32, ptr %4965, align 4, !tbaa !5
  %4967 = getelementptr inbounds i32, ptr %6, i64 %4956
  %4968 = load i32, ptr %4967, align 4, !tbaa !5
  %4969 = add nsw i32 %4968, %4966
  store i32 %4969, ptr %4967, align 4, !tbaa !5
  br label %4988

4970:                                             ; preds = %4946, %4963
  %4971 = phi i32 [ %4958, %4963 ], [ %4947, %4946 ]
  %4972 = phi ptr [ %4957, %4963 ], [ %4, %4946 ]
  %4973 = phi i64 [ %4956, %4963 ], [ 0, %4946 ]
  %4974 = add nsw i32 %4971, 1
  store i32 %4974, ptr %4972, align 4, !tbaa !5
  %4975 = getelementptr inbounds i32, ptr %7, i64 %4973
  %4976 = load i32, ptr %4975, align 4, !tbaa !5
  %4977 = getelementptr inbounds i32, ptr %6, i64 %4973
  br label %4988

4978:                                             ; preds = %4955
  %4979 = icmp eq i32 %4958, %4961
  br i1 %4979, label %4980, label %4986

4980:                                             ; preds = %4978
  store i32 0, ptr %4957, align 4, !tbaa !5
  %4981 = getelementptr inbounds i32, ptr %8, i64 %4956
  %4982 = load i32, ptr %4981, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %6, i64 %4956
  store i32 %4982, ptr %4983, align 4, !tbaa !5
  %4984 = add nuw nsw i64 %4956, 1
  %4985 = icmp eq i64 %4984, %4857
  br i1 %4985, label %4993, label %4955, !llvm.loop !187

4986:                                             ; preds = %4951, %4978
  %4987 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

4988:                                             ; preds = %4964, %4970
  %4989 = phi ptr [ %4977, %4970 ], [ %4957, %4964 ]
  %4990 = phi i32 [ %4976, %4970 ], [ 1, %4964 ]
  %4991 = load i32, ptr %4989, align 4, !tbaa !5
  %4992 = add nsw i32 %4991, %4990
  store i32 %4992, ptr %4989, align 4, !tbaa !5
  br label %4993

4993:                                             ; preds = %4980, %4988, %4953, %4934
  %4994 = icmp eq i32 %4945, %5
  br i1 %4994, label %5426, label %4860, !llvm.loop !188

4995:                                             ; preds = %4843, %5130
  %4996 = phi double [ 0.000000e+00, %4843 ], [ %5078, %5130 ]
  %4997 = phi i32 [ 0, %4843 ], [ %5079, %5130 ]
  %4998 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4844, label %4999, label %5068

4999:                                             ; preds = %4995, %5058
  %5000 = phi i32 [ %5067, %5058 ], [ 0, %4995 ]
  %5001 = phi i64 [ %5009, %5058 ], [ %4848, %4995 ]
  %5002 = phi i64 [ %5066, %5058 ], [ %4847, %4995 ]
  %5003 = phi i32 [ %5064, %5058 ], [ %4998, %4995 ]
  %5004 = sub i32 %4846, %5000
  %5005 = tail call i32 @llvm.smin.i32(i32 %5004, i32 0)
  %5006 = sub i32 %5004, %5005
  %5007 = zext i32 %5006 to i64
  %5008 = add nuw nsw i64 %5007, 1
  %5009 = add nsw i64 %5001, -1
  %5010 = icmp ult i32 %5006, 31
  br i1 %5010, label %5046, label %5011

5011:                                             ; preds = %4999
  %5012 = and i64 %5008, 8589934560
  %5013 = sub i64 %5002, %5012
  br label %5014

5014:                                             ; preds = %5014, %5011
  %5015 = phi i64 [ 0, %5011 ], [ %5038, %5014 ]
  %5016 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5011 ], [ %5034, %5014 ]
  %5017 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5011 ], [ %5035, %5014 ]
  %5018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5011 ], [ %5036, %5014 ]
  %5019 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5011 ], [ %5037, %5014 ]
  %5020 = sub i64 %5002, %5015
  %5021 = getelementptr inbounds i32, ptr %11, i64 %5020
  %5022 = getelementptr inbounds i32, ptr %5021, i64 -7
  %5023 = load <8 x i32>, ptr %5022, align 4, !tbaa !5
  %5024 = shufflevector <8 x i32> %5023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5025 = getelementptr inbounds i32, ptr %5021, i64 -15
  %5026 = load <8 x i32>, ptr %5025, align 4, !tbaa !5
  %5027 = shufflevector <8 x i32> %5026, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5028 = getelementptr inbounds i32, ptr %5021, i64 -23
  %5029 = load <8 x i32>, ptr %5028, align 4, !tbaa !5
  %5030 = shufflevector <8 x i32> %5029, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5031 = getelementptr inbounds i32, ptr %5021, i64 -31
  %5032 = load <8 x i32>, ptr %5031, align 4, !tbaa !5
  %5033 = shufflevector <8 x i32> %5032, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5034 = mul <8 x i32> %5024, %5016
  %5035 = mul <8 x i32> %5027, %5017
  %5036 = mul <8 x i32> %5030, %5018
  %5037 = mul <8 x i32> %5033, %5019
  %5038 = add nuw i64 %5015, 32
  %5039 = icmp eq i64 %5038, %5012
  br i1 %5039, label %5040, label %5014, !llvm.loop !189

5040:                                             ; preds = %5014
  %5041 = mul <8 x i32> %5035, %5034
  %5042 = mul <8 x i32> %5036, %5041
  %5043 = mul <8 x i32> %5037, %5042
  %5044 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5043)
  %5045 = icmp eq i64 %5008, %5012
  br i1 %5045, label %5058, label %5046

5046:                                             ; preds = %4999, %5040
  %5047 = phi i64 [ %5002, %4999 ], [ %5013, %5040 ]
  %5048 = phi i32 [ 1, %4999 ], [ %5044, %5040 ]
  br label %5049

5049:                                             ; preds = %5046, %5049
  %5050 = phi i64 [ %5055, %5049 ], [ %5047, %5046 ]
  %5051 = phi i32 [ %5054, %5049 ], [ %5048, %5046 ]
  %5052 = getelementptr inbounds i32, ptr %11, i64 %5050
  %5053 = load i32, ptr %5052, align 4, !tbaa !5
  %5054 = mul nsw i32 %5053, %5051
  %5055 = add nsw i64 %5050, -1
  %5056 = trunc i64 %5050 to i32
  %5057 = icmp sgt i32 %5056, 0
  br i1 %5057, label %5049, label %5058, !llvm.loop !190

5058:                                             ; preds = %5049, %5040
  %5059 = phi i32 [ %5044, %5040 ], [ %5054, %5049 ]
  %5060 = and i64 %5009, 4294967295
  %5061 = getelementptr inbounds i32, ptr %6, i64 %5060
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = mul nsw i32 %5062, %5059
  %5064 = add nsw i32 %5063, %5003
  %5065 = icmp sgt i64 %5001, 2
  %5066 = add nsw i64 %5002, -1
  %5067 = add i32 %5000, 1
  br i1 %5065, label %4999, label %5068, !llvm.loop !191

5068:                                             ; preds = %5058, %4995
  %5069 = phi i32 [ %4998, %4995 ], [ %5064, %5058 ]
  %5070 = icmp slt i32 %5069, %5
  br i1 %5070, label %5073, label %5071

5071:                                             ; preds = %5068
  %5072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

5073:                                             ; preds = %5068
  %5074 = sext i32 %5069 to i64
  %5075 = getelementptr inbounds i8, ptr %4829, i64 %5074
  %5076 = load i8, ptr %5075, align 1, !tbaa !11
  %5077 = uitofp i8 %5076 to double
  %5078 = fadd fast double %4996, %5077
  store double %5078, ptr %4831, align 8, !tbaa !18
  %5079 = add nuw nsw i32 %4997, 1
  br i1 %4845, label %5080, label %5130

5080:                                             ; preds = %5073
  %5081 = load i32, ptr %4, align 4, !tbaa !5
  %5082 = load i32, ptr %12, align 4, !tbaa !5
  %5083 = add nsw i32 %5082, -1
  %5084 = icmp slt i32 %5081, %5083
  br i1 %5084, label %5107, label %5085

5085:                                             ; preds = %5080
  %5086 = icmp eq i32 %5081, %5083
  br i1 %5086, label %5087, label %5123

5087:                                             ; preds = %5085
  store i32 0, ptr %4, align 4, !tbaa !5
  %5088 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5088, ptr %6, align 4, !tbaa !5
  br i1 %4850, label %5130, label %5089

5089:                                             ; preds = %5087, %5117
  %5090 = phi i64 [ %5121, %5117 ], [ 1, %5087 ]
  %5091 = getelementptr inbounds i32, ptr %4, i64 %5090
  %5092 = load i32, ptr %5091, align 4, !tbaa !5
  %5093 = getelementptr inbounds i32, ptr %12, i64 %5090
  %5094 = load i32, ptr %5093, align 4, !tbaa !5
  %5095 = add nsw i32 %5094, -1
  %5096 = icmp slt i32 %5092, %5095
  br i1 %5096, label %5097, label %5115

5097:                                             ; preds = %5089
  br i1 %5084, label %5107, label %5098

5098:                                             ; preds = %5097
  %5099 = shl i64 %5090, 32
  %5100 = add i64 %5099, -4294967296
  %5101 = ashr exact i64 %5100, 32
  %5102 = getelementptr inbounds i32, ptr %7, i64 %5101
  %5103 = load i32, ptr %5102, align 4, !tbaa !5
  %5104 = getelementptr inbounds i32, ptr %6, i64 %5090
  %5105 = load i32, ptr %5104, align 4, !tbaa !5
  %5106 = add nsw i32 %5105, %5103
  store i32 %5106, ptr %5104, align 4, !tbaa !5
  br label %5125

5107:                                             ; preds = %5080, %5097
  %5108 = phi i32 [ %5092, %5097 ], [ %5081, %5080 ]
  %5109 = phi ptr [ %5091, %5097 ], [ %4, %5080 ]
  %5110 = phi i64 [ %5090, %5097 ], [ 0, %5080 ]
  %5111 = add nsw i32 %5108, 1
  store i32 %5111, ptr %5109, align 4, !tbaa !5
  %5112 = getelementptr inbounds i32, ptr %7, i64 %5110
  %5113 = load i32, ptr %5112, align 4, !tbaa !5
  %5114 = getelementptr inbounds i32, ptr %6, i64 %5110
  br label %5125

5115:                                             ; preds = %5089
  %5116 = icmp eq i32 %5092, %5095
  br i1 %5116, label %5117, label %5123

5117:                                             ; preds = %5115
  store i32 0, ptr %5091, align 4, !tbaa !5
  %5118 = getelementptr inbounds i32, ptr %8, i64 %5090
  %5119 = load i32, ptr %5118, align 4, !tbaa !5
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5090
  store i32 %5119, ptr %5120, align 4, !tbaa !5
  %5121 = add nuw nsw i64 %5090, 1
  %5122 = icmp eq i64 %5121, %4848
  br i1 %5122, label %5130, label %5089, !llvm.loop !192

5123:                                             ; preds = %5085, %5115
  %5124 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

5125:                                             ; preds = %5098, %5107
  %5126 = phi ptr [ %5114, %5107 ], [ %5091, %5098 ]
  %5127 = phi i32 [ %5113, %5107 ], [ 1, %5098 ]
  %5128 = load i32, ptr %5126, align 4, !tbaa !5
  %5129 = add nsw i32 %5128, %5127
  store i32 %5129, ptr %5126, align 4, !tbaa !5
  br label %5130

5130:                                             ; preds = %5117, %5125, %5087, %5073
  %5131 = icmp eq i32 %5079, %5
  br i1 %5131, label %5426, label %4995, !llvm.loop !193

5132:                                             ; preds = %4836
  %5133 = getelementptr inbounds i32, ptr %3, i64 %19
  %5134 = load i32, ptr %5133, align 4, !tbaa !5
  %5135 = icmp eq i32 %5134, 0
  %5136 = icmp sgt i32 %5, 0
  br i1 %5135, label %5146, label %5137

5137:                                             ; preds = %5132
  br i1 %5136, label %5138, label %5426

5138:                                             ; preds = %5137
  %5139 = icmp sgt i32 %13, 1
  %5140 = icmp sgt i32 %13, 0
  %5141 = add i32 %13, -2
  %5142 = zext i32 %5141 to i64
  %5143 = zext i32 %13 to i64
  %5144 = add nuw i32 %5, 1
  %5145 = icmp eq i32 %13, 1
  br label %5287

5146:                                             ; preds = %5132
  br i1 %5136, label %5147, label %5426

5147:                                             ; preds = %5146
  %5148 = icmp sgt i32 %13, 1
  %5149 = icmp sgt i32 %13, 0
  %5150 = add i32 %13, -2
  %5151 = zext i32 %5150 to i64
  %5152 = zext i32 %13 to i64
  %5153 = add nuw i32 %5, 1
  %5154 = icmp eq i32 %13, 1
  br label %5155

5155:                                             ; preds = %5147, %5285
  %5156 = phi double [ 0.000000e+00, %5147 ], [ %5235, %5285 ]
  %5157 = phi i32 [ 0, %5147 ], [ %5237, %5285 ]
  %5158 = phi double [ 0.000000e+00, %5147 ], [ %5236, %5285 ]
  %5159 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5148, label %5160, label %5229

5160:                                             ; preds = %5155, %5219
  %5161 = phi i32 [ %5228, %5219 ], [ 0, %5155 ]
  %5162 = phi i64 [ %5170, %5219 ], [ %5152, %5155 ]
  %5163 = phi i64 [ %5227, %5219 ], [ %5151, %5155 ]
  %5164 = phi i32 [ %5225, %5219 ], [ %5159, %5155 ]
  %5165 = sub i32 %5150, %5161
  %5166 = tail call i32 @llvm.smin.i32(i32 %5165, i32 0)
  %5167 = sub i32 %5165, %5166
  %5168 = zext i32 %5167 to i64
  %5169 = add nuw nsw i64 %5168, 1
  %5170 = add nsw i64 %5162, -1
  %5171 = icmp ult i32 %5167, 31
  br i1 %5171, label %5207, label %5172

5172:                                             ; preds = %5160
  %5173 = and i64 %5169, 8589934560
  %5174 = sub i64 %5163, %5173
  br label %5175

5175:                                             ; preds = %5175, %5172
  %5176 = phi i64 [ 0, %5172 ], [ %5199, %5175 ]
  %5177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5172 ], [ %5195, %5175 ]
  %5178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5172 ], [ %5196, %5175 ]
  %5179 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5172 ], [ %5197, %5175 ]
  %5180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5172 ], [ %5198, %5175 ]
  %5181 = sub i64 %5163, %5176
  %5182 = getelementptr inbounds i32, ptr %9, i64 %5181
  %5183 = getelementptr inbounds i32, ptr %5182, i64 -7
  %5184 = load <8 x i32>, ptr %5183, align 4, !tbaa !5
  %5185 = shufflevector <8 x i32> %5184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5186 = getelementptr inbounds i32, ptr %5182, i64 -15
  %5187 = load <8 x i32>, ptr %5186, align 4, !tbaa !5
  %5188 = shufflevector <8 x i32> %5187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5189 = getelementptr inbounds i32, ptr %5182, i64 -23
  %5190 = load <8 x i32>, ptr %5189, align 4, !tbaa !5
  %5191 = shufflevector <8 x i32> %5190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5192 = getelementptr inbounds i32, ptr %5182, i64 -31
  %5193 = load <8 x i32>, ptr %5192, align 4, !tbaa !5
  %5194 = shufflevector <8 x i32> %5193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5195 = mul <8 x i32> %5185, %5177
  %5196 = mul <8 x i32> %5188, %5178
  %5197 = mul <8 x i32> %5191, %5179
  %5198 = mul <8 x i32> %5194, %5180
  %5199 = add nuw i64 %5176, 32
  %5200 = icmp eq i64 %5199, %5173
  br i1 %5200, label %5201, label %5175, !llvm.loop !194

5201:                                             ; preds = %5175
  %5202 = mul <8 x i32> %5196, %5195
  %5203 = mul <8 x i32> %5197, %5202
  %5204 = mul <8 x i32> %5198, %5203
  %5205 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5204)
  %5206 = icmp eq i64 %5169, %5173
  br i1 %5206, label %5219, label %5207

5207:                                             ; preds = %5160, %5201
  %5208 = phi i64 [ %5163, %5160 ], [ %5174, %5201 ]
  %5209 = phi i32 [ 1, %5160 ], [ %5205, %5201 ]
  br label %5210

5210:                                             ; preds = %5207, %5210
  %5211 = phi i64 [ %5216, %5210 ], [ %5208, %5207 ]
  %5212 = phi i32 [ %5215, %5210 ], [ %5209, %5207 ]
  %5213 = getelementptr inbounds i32, ptr %9, i64 %5211
  %5214 = load i32, ptr %5213, align 4, !tbaa !5
  %5215 = mul nsw i32 %5214, %5212
  %5216 = add nsw i64 %5211, -1
  %5217 = trunc i64 %5211 to i32
  %5218 = icmp sgt i32 %5217, 0
  br i1 %5218, label %5210, label %5219, !llvm.loop !195

5219:                                             ; preds = %5210, %5201
  %5220 = phi i32 [ %5205, %5201 ], [ %5215, %5210 ]
  %5221 = and i64 %5170, 4294967295
  %5222 = getelementptr inbounds i32, ptr %6, i64 %5221
  %5223 = load i32, ptr %5222, align 4, !tbaa !5
  %5224 = mul nsw i32 %5223, %5220
  %5225 = add nsw i32 %5224, %5164
  %5226 = icmp sgt i64 %5162, 2
  %5227 = add nsw i64 %5163, -1
  %5228 = add i32 %5161, 1
  br i1 %5226, label %5160, label %5229, !llvm.loop !196

5229:                                             ; preds = %5219, %5155
  %5230 = phi i32 [ %5159, %5155 ], [ %5225, %5219 ]
  %5231 = sext i32 %5230 to i64
  %5232 = getelementptr inbounds i8, ptr %4829, i64 %5231
  %5233 = load i8, ptr %5232, align 1, !tbaa !11
  %5234 = uitofp i8 %5233 to double
  %5235 = fadd fast double %5156, %5234
  store double %5235, ptr %4831, align 8, !tbaa !18
  %5236 = fadd fast double %5158, 1.000000e+00
  %5237 = add nuw nsw i32 %5157, 1
  br i1 %5149, label %5238, label %5285

5238:                                             ; preds = %5229
  %5239 = load i32, ptr %4, align 4, !tbaa !5
  %5240 = load i32, ptr %12, align 4, !tbaa !5
  %5241 = add nsw i32 %5240, -1
  %5242 = icmp slt i32 %5239, %5241
  br i1 %5242, label %5262, label %5243

5243:                                             ; preds = %5238
  %5244 = icmp eq i32 %5239, %5241
  br i1 %5244, label %5245, label %5278

5245:                                             ; preds = %5243
  store i32 0, ptr %4, align 4, !tbaa !5
  %5246 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5246, ptr %6, align 4, !tbaa !5
  br i1 %5154, label %5285, label %5247

5247:                                             ; preds = %5245, %5272
  %5248 = phi i64 [ %5276, %5272 ], [ 1, %5245 ]
  %5249 = getelementptr inbounds i32, ptr %4, i64 %5248
  %5250 = load i32, ptr %5249, align 4, !tbaa !5
  %5251 = getelementptr inbounds i32, ptr %12, i64 %5248
  %5252 = load i32, ptr %5251, align 4, !tbaa !5
  %5253 = add nsw i32 %5252, -1
  %5254 = icmp slt i32 %5250, %5253
  br i1 %5254, label %5255, label %5270

5255:                                             ; preds = %5247
  br i1 %5242, label %5262, label %5256

5256:                                             ; preds = %5255
  %5257 = getelementptr inbounds i32, ptr %7, i64 %5248
  %5258 = load i32, ptr %5257, align 4, !tbaa !5
  %5259 = getelementptr inbounds i32, ptr %6, i64 %5248
  %5260 = load i32, ptr %5259, align 4, !tbaa !5
  %5261 = add nsw i32 %5260, %5258
  store i32 %5261, ptr %5259, align 4, !tbaa !5
  br label %5280

5262:                                             ; preds = %5238, %5255
  %5263 = phi i32 [ %5250, %5255 ], [ %5239, %5238 ]
  %5264 = phi ptr [ %5249, %5255 ], [ %4, %5238 ]
  %5265 = phi i64 [ %5248, %5255 ], [ 0, %5238 ]
  %5266 = add nsw i32 %5263, 1
  store i32 %5266, ptr %5264, align 4, !tbaa !5
  %5267 = getelementptr inbounds i32, ptr %7, i64 %5265
  %5268 = load i32, ptr %5267, align 4, !tbaa !5
  %5269 = getelementptr inbounds i32, ptr %6, i64 %5265
  br label %5280

5270:                                             ; preds = %5247
  %5271 = icmp eq i32 %5250, %5253
  br i1 %5271, label %5272, label %5278

5272:                                             ; preds = %5270
  store i32 0, ptr %5249, align 4, !tbaa !5
  %5273 = getelementptr inbounds i32, ptr %8, i64 %5248
  %5274 = load i32, ptr %5273, align 4, !tbaa !5
  %5275 = getelementptr inbounds i32, ptr %6, i64 %5248
  store i32 %5274, ptr %5275, align 4, !tbaa !5
  %5276 = add nuw nsw i64 %5248, 1
  %5277 = icmp eq i64 %5276, %5152
  br i1 %5277, label %5285, label %5247, !llvm.loop !197

5278:                                             ; preds = %5243, %5270
  %5279 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

5280:                                             ; preds = %5256, %5262
  %5281 = phi ptr [ %5269, %5262 ], [ %5249, %5256 ]
  %5282 = phi i32 [ %5268, %5262 ], [ 1, %5256 ]
  %5283 = load i32, ptr %5281, align 4, !tbaa !5
  %5284 = add nsw i32 %5283, %5282
  store i32 %5284, ptr %5281, align 4, !tbaa !5
  br label %5285

5285:                                             ; preds = %5272, %5280, %5245, %5229
  %5286 = icmp eq i32 %5237, %5
  br i1 %5286, label %5426, label %5155, !llvm.loop !198

5287:                                             ; preds = %5138, %5422
  %5288 = phi double [ 0.000000e+00, %5138 ], [ %5370, %5422 ]
  %5289 = phi i32 [ 0, %5138 ], [ %5371, %5422 ]
  %5290 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5139, label %5291, label %5360

5291:                                             ; preds = %5287, %5350
  %5292 = phi i32 [ %5359, %5350 ], [ 0, %5287 ]
  %5293 = phi i64 [ %5301, %5350 ], [ %5143, %5287 ]
  %5294 = phi i64 [ %5358, %5350 ], [ %5142, %5287 ]
  %5295 = phi i32 [ %5356, %5350 ], [ %5290, %5287 ]
  %5296 = sub i32 %5141, %5292
  %5297 = tail call i32 @llvm.smin.i32(i32 %5296, i32 0)
  %5298 = sub i32 %5296, %5297
  %5299 = zext i32 %5298 to i64
  %5300 = add nuw nsw i64 %5299, 1
  %5301 = add nsw i64 %5293, -1
  %5302 = icmp ult i32 %5298, 31
  br i1 %5302, label %5338, label %5303

5303:                                             ; preds = %5291
  %5304 = and i64 %5300, 8589934560
  %5305 = sub i64 %5294, %5304
  br label %5306

5306:                                             ; preds = %5306, %5303
  %5307 = phi i64 [ 0, %5303 ], [ %5330, %5306 ]
  %5308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5303 ], [ %5326, %5306 ]
  %5309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5303 ], [ %5327, %5306 ]
  %5310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5303 ], [ %5328, %5306 ]
  %5311 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5303 ], [ %5329, %5306 ]
  %5312 = sub i64 %5294, %5307
  %5313 = getelementptr inbounds i32, ptr %11, i64 %5312
  %5314 = getelementptr inbounds i32, ptr %5313, i64 -7
  %5315 = load <8 x i32>, ptr %5314, align 4, !tbaa !5
  %5316 = shufflevector <8 x i32> %5315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5317 = getelementptr inbounds i32, ptr %5313, i64 -15
  %5318 = load <8 x i32>, ptr %5317, align 4, !tbaa !5
  %5319 = shufflevector <8 x i32> %5318, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5320 = getelementptr inbounds i32, ptr %5313, i64 -23
  %5321 = load <8 x i32>, ptr %5320, align 4, !tbaa !5
  %5322 = shufflevector <8 x i32> %5321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5323 = getelementptr inbounds i32, ptr %5313, i64 -31
  %5324 = load <8 x i32>, ptr %5323, align 4, !tbaa !5
  %5325 = shufflevector <8 x i32> %5324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5326 = mul <8 x i32> %5316, %5308
  %5327 = mul <8 x i32> %5319, %5309
  %5328 = mul <8 x i32> %5322, %5310
  %5329 = mul <8 x i32> %5325, %5311
  %5330 = add nuw i64 %5307, 32
  %5331 = icmp eq i64 %5330, %5304
  br i1 %5331, label %5332, label %5306, !llvm.loop !199

5332:                                             ; preds = %5306
  %5333 = mul <8 x i32> %5327, %5326
  %5334 = mul <8 x i32> %5328, %5333
  %5335 = mul <8 x i32> %5329, %5334
  %5336 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5335)
  %5337 = icmp eq i64 %5300, %5304
  br i1 %5337, label %5350, label %5338

5338:                                             ; preds = %5291, %5332
  %5339 = phi i64 [ %5294, %5291 ], [ %5305, %5332 ]
  %5340 = phi i32 [ 1, %5291 ], [ %5336, %5332 ]
  br label %5341

5341:                                             ; preds = %5338, %5341
  %5342 = phi i64 [ %5347, %5341 ], [ %5339, %5338 ]
  %5343 = phi i32 [ %5346, %5341 ], [ %5340, %5338 ]
  %5344 = getelementptr inbounds i32, ptr %11, i64 %5342
  %5345 = load i32, ptr %5344, align 4, !tbaa !5
  %5346 = mul nsw i32 %5345, %5343
  %5347 = add nsw i64 %5342, -1
  %5348 = trunc i64 %5342 to i32
  %5349 = icmp sgt i32 %5348, 0
  br i1 %5349, label %5341, label %5350, !llvm.loop !200

5350:                                             ; preds = %5341, %5332
  %5351 = phi i32 [ %5336, %5332 ], [ %5346, %5341 ]
  %5352 = and i64 %5301, 4294967295
  %5353 = getelementptr inbounds i32, ptr %6, i64 %5352
  %5354 = load i32, ptr %5353, align 4, !tbaa !5
  %5355 = mul nsw i32 %5354, %5351
  %5356 = add nsw i32 %5355, %5295
  %5357 = icmp sgt i64 %5293, 2
  %5358 = add nsw i64 %5294, -1
  %5359 = add i32 %5292, 1
  br i1 %5357, label %5291, label %5360, !llvm.loop !201

5360:                                             ; preds = %5350, %5287
  %5361 = phi i32 [ %5290, %5287 ], [ %5356, %5350 ]
  %5362 = icmp slt i32 %5361, %5
  br i1 %5362, label %5365, label %5363

5363:                                             ; preds = %5360
  %5364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5431

5365:                                             ; preds = %5360
  %5366 = sext i32 %5361 to i64
  %5367 = getelementptr inbounds i8, ptr %4829, i64 %5366
  %5368 = load i8, ptr %5367, align 1, !tbaa !11
  %5369 = uitofp i8 %5368 to double
  %5370 = fadd fast double %5288, %5369
  store double %5370, ptr %4831, align 8, !tbaa !18
  %5371 = add nuw nsw i32 %5289, 1
  br i1 %5140, label %5372, label %5422

5372:                                             ; preds = %5365
  %5373 = load i32, ptr %4, align 4, !tbaa !5
  %5374 = load i32, ptr %12, align 4, !tbaa !5
  %5375 = add nsw i32 %5374, -1
  %5376 = icmp slt i32 %5373, %5375
  br i1 %5376, label %5399, label %5377

5377:                                             ; preds = %5372
  %5378 = icmp eq i32 %5373, %5375
  br i1 %5378, label %5379, label %5415

5379:                                             ; preds = %5377
  store i32 0, ptr %4, align 4, !tbaa !5
  %5380 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5380, ptr %6, align 4, !tbaa !5
  br i1 %5145, label %5422, label %5381

5381:                                             ; preds = %5379, %5409
  %5382 = phi i64 [ %5413, %5409 ], [ 1, %5379 ]
  %5383 = getelementptr inbounds i32, ptr %4, i64 %5382
  %5384 = load i32, ptr %5383, align 4, !tbaa !5
  %5385 = getelementptr inbounds i32, ptr %12, i64 %5382
  %5386 = load i32, ptr %5385, align 4, !tbaa !5
  %5387 = add nsw i32 %5386, -1
  %5388 = icmp slt i32 %5384, %5387
  br i1 %5388, label %5389, label %5407

5389:                                             ; preds = %5381
  br i1 %5376, label %5399, label %5390

5390:                                             ; preds = %5389
  %5391 = shl i64 %5382, 32
  %5392 = add i64 %5391, -4294967296
  %5393 = ashr exact i64 %5392, 32
  %5394 = getelementptr inbounds i32, ptr %7, i64 %5393
  %5395 = load i32, ptr %5394, align 4, !tbaa !5
  %5396 = getelementptr inbounds i32, ptr %6, i64 %5382
  %5397 = load i32, ptr %5396, align 4, !tbaa !5
  %5398 = add nsw i32 %5397, %5395
  store i32 %5398, ptr %5396, align 4, !tbaa !5
  br label %5417

5399:                                             ; preds = %5372, %5389
  %5400 = phi i32 [ %5384, %5389 ], [ %5373, %5372 ]
  %5401 = phi ptr [ %5383, %5389 ], [ %4, %5372 ]
  %5402 = phi i64 [ %5382, %5389 ], [ 0, %5372 ]
  %5403 = add nsw i32 %5400, 1
  store i32 %5403, ptr %5401, align 4, !tbaa !5
  %5404 = getelementptr inbounds i32, ptr %7, i64 %5402
  %5405 = load i32, ptr %5404, align 4, !tbaa !5
  %5406 = getelementptr inbounds i32, ptr %6, i64 %5402
  br label %5417

5407:                                             ; preds = %5381
  %5408 = icmp eq i32 %5384, %5387
  br i1 %5408, label %5409, label %5415

5409:                                             ; preds = %5407
  store i32 0, ptr %5383, align 4, !tbaa !5
  %5410 = getelementptr inbounds i32, ptr %8, i64 %5382
  %5411 = load i32, ptr %5410, align 4, !tbaa !5
  %5412 = getelementptr inbounds i32, ptr %6, i64 %5382
  store i32 %5411, ptr %5412, align 4, !tbaa !5
  %5413 = add nuw nsw i64 %5382, 1
  %5414 = icmp eq i64 %5413, %5143
  br i1 %5414, label %5422, label %5381, !llvm.loop !202

5415:                                             ; preds = %5377, %5407
  %5416 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5431

5417:                                             ; preds = %5390, %5399
  %5418 = phi ptr [ %5406, %5399 ], [ %5383, %5390 ]
  %5419 = phi i32 [ %5405, %5399 ], [ 1, %5390 ]
  %5420 = load i32, ptr %5418, align 4, !tbaa !5
  %5421 = add nsw i32 %5420, %5419
  store i32 %5421, ptr %5418, align 4, !tbaa !5
  br label %5422

5422:                                             ; preds = %5409, %5417, %5379, %5365
  %5423 = icmp eq i32 %5371, %5
  br i1 %5423, label %5426, label %5287, !llvm.loop !203

5424:                                             ; preds = %4836
  %5425 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5426

5426:                                             ; preds = %5422, %5285, %5130, %4993, %4823, %4686, %4531, %4392, %4220, %4083, %3928, %3791, %3621, %3484, %3329, %3190, %3018, %2881, %2726, %2589, %2417, %2280, %2125, %1985, %1813, %1677, %1523, %1387, %1216, %1079, %924, %787, %615, %479, %325, %189, %5137, %5146, %4842, %4851, %4538, %4547, %4239, %4248, %3935, %3944, %3640, %3649, %3336, %3345, %3037, %3046, %2733, %2742, %2436, %2445, %2132, %2141, %1832, %1841, %1530, %1539, %1234, %1243, %931, %940, %634, %643, %332, %341, %36, %45, %4833, %5424, %4230, %4825, %3631, %4222, %3028, %3623, %2427, %3020, %1823, %2419, %1226, %1815, %625, %1218, %28, %617, %18
  %5427 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %617 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1218 ], [ 0.000000e+00, %625 ], [ 0.000000e+00, %1815 ], [ 0.000000e+00, %1226 ], [ 0.000000e+00, %2419 ], [ 0.000000e+00, %1823 ], [ 0.000000e+00, %3020 ], [ 0.000000e+00, %2427 ], [ 0.000000e+00, %3623 ], [ 0.000000e+00, %3028 ], [ 0.000000e+00, %4222 ], [ 0.000000e+00, %3631 ], [ 0.000000e+00, %4825 ], [ 0.000000e+00, %4230 ], [ 0.000000e+00, %5424 ], [ 0.000000e+00, %4833 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %332 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %940 ], [ 0.000000e+00, %931 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %1234 ], [ 0.000000e+00, %1539 ], [ 0.000000e+00, %1530 ], [ 0.000000e+00, %1841 ], [ 0.000000e+00, %1832 ], [ 0.000000e+00, %2141 ], [ 0.000000e+00, %2132 ], [ 0.000000e+00, %2445 ], [ 0.000000e+00, %2436 ], [ 0.000000e+00, %2742 ], [ 0.000000e+00, %2733 ], [ 0.000000e+00, %3046 ], [ 0.000000e+00, %3037 ], [ 0.000000e+00, %3345 ], [ 0.000000e+00, %3336 ], [ 0.000000e+00, %3649 ], [ 0.000000e+00, %3640 ], [ 0.000000e+00, %3944 ], [ 0.000000e+00, %3935 ], [ 0.000000e+00, %4248 ], [ 0.000000e+00, %4239 ], [ 0.000000e+00, %4547 ], [ 0.000000e+00, %4538 ], [ 0.000000e+00, %4851 ], [ 0.000000e+00, %4842 ], [ 0.000000e+00, %5146 ], [ 0.000000e+00, %5137 ], [ %140, %189 ], [ 0.000000e+00, %325 ], [ %430, %479 ], [ 0.000000e+00, %615 ], [ %738, %787 ], [ 0.000000e+00, %924 ], [ %1030, %1079 ], [ 0.000000e+00, %1216 ], [ %1338, %1387 ], [ 0.000000e+00, %1523 ], [ %1628, %1677 ], [ 0.000000e+00, %1813 ], [ %1936, %1985 ], [ 0.000000e+00, %2125 ], [ %2231, %2280 ], [ 0.000000e+00, %2417 ], [ %2540, %2589 ], [ 0.000000e+00, %2726 ], [ %2832, %2881 ], [ 0.000000e+00, %3018 ], [ %3141, %3190 ], [ 0.000000e+00, %3329 ], [ %3435, %3484 ], [ 0.000000e+00, %3621 ], [ %3742, %3791 ], [ 0.000000e+00, %3928 ], [ %4034, %4083 ], [ 0.000000e+00, %4220 ], [ %4343, %4392 ], [ 0.000000e+00, %4531 ], [ %4637, %4686 ], [ 0.000000e+00, %4823 ], [ %4944, %4993 ], [ 0.000000e+00, %5130 ], [ %5236, %5285 ], [ 0.000000e+00, %5422 ]
  %5428 = phi i32 [ %10, %18 ], [ 1, %617 ], [ 1, %28 ], [ 1, %1218 ], [ 1, %625 ], [ 1, %1815 ], [ 1, %1226 ], [ 1, %2419 ], [ 1, %1823 ], [ 1, %3020 ], [ 1, %2427 ], [ 1, %3623 ], [ 1, %3028 ], [ 1, %4222 ], [ 1, %3631 ], [ 1, %4825 ], [ 1, %4230 ], [ 1, %5424 ], [ 1, %4833 ], [ 1, %45 ], [ 1, %36 ], [ 1, %341 ], [ 1, %332 ], [ 1, %643 ], [ 1, %634 ], [ 1, %940 ], [ 1, %931 ], [ 1, %1243 ], [ 1, %1234 ], [ 1, %1539 ], [ 1, %1530 ], [ 1, %1841 ], [ 1, %1832 ], [ 1, %2141 ], [ 1, %2132 ], [ 1, %2445 ], [ 1, %2436 ], [ 1, %2742 ], [ 1, %2733 ], [ 1, %3046 ], [ 1, %3037 ], [ 1, %3345 ], [ 1, %3336 ], [ 1, %3649 ], [ 1, %3640 ], [ 1, %3944 ], [ 1, %3935 ], [ 1, %4248 ], [ 1, %4239 ], [ 1, %4547 ], [ 1, %4538 ], [ 1, %4851 ], [ 1, %4842 ], [ 1, %5146 ], [ 1, %5137 ], [ %52, %189 ], [ %43, %325 ], [ %348, %479 ], [ %339, %615 ], [ %650, %787 ], [ %641, %924 ], [ %947, %1079 ], [ %938, %1216 ], [ %1250, %1387 ], [ %1241, %1523 ], [ %1546, %1677 ], [ %1537, %1813 ], [ %1848, %1985 ], [ %1839, %2125 ], [ %2148, %2280 ], [ %2139, %2417 ], [ %2452, %2589 ], [ %2443, %2726 ], [ %2749, %2881 ], [ %2740, %3018 ], [ %3053, %3190 ], [ %3044, %3329 ], [ %3352, %3484 ], [ %3343, %3621 ], [ %3656, %3791 ], [ %3647, %3928 ], [ %3951, %4083 ], [ %3942, %4220 ], [ %4255, %4392 ], [ %4246, %4531 ], [ %4554, %4686 ], [ %4545, %4823 ], [ %4858, %4993 ], [ %4849, %5130 ], [ %5153, %5285 ], [ %5144, %5422 ]
  %5429 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5428, ptr noundef nonnull @.str.5) #3
  %5430 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5427, ptr noundef nonnull @.str.6) #3
  br label %5431

5431:                                             ; preds = %4986, %5071, %5123, %5278, %5363, %5415, %4385, %4470, %4524, %4679, %4764, %4816, %3784, %3869, %3921, %4076, %4161, %4213, %3183, %3268, %3322, %3477, %3562, %3614, %2582, %2666, %2719, %2874, %2958, %3011, %1978, %2063, %2118, %2273, %2358, %2410, %1380, %1464, %1516, %1670, %1754, %1806, %780, %864, %917, %1072, %1156, %1209, %182, %266, %318, %472, %556, %608, %5426
  %5432 = phi i32 [ 0, %5426 ], [ -1, %608 ], [ -1, %556 ], [ -1, %472 ], [ -1, %318 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1209 ], [ -1, %1156 ], [ -1, %1072 ], [ -1, %917 ], [ -1, %864 ], [ -1, %780 ], [ -1, %1806 ], [ -1, %1754 ], [ -1, %1670 ], [ -1, %1516 ], [ -1, %1464 ], [ -1, %1380 ], [ -1, %2410 ], [ -1, %2358 ], [ -1, %2273 ], [ -1, %2118 ], [ -1, %2063 ], [ -1, %1978 ], [ -1, %3011 ], [ -1, %2958 ], [ -1, %2874 ], [ -1, %2719 ], [ -1, %2666 ], [ -1, %2582 ], [ -1, %3614 ], [ -1, %3562 ], [ -1, %3477 ], [ -1, %3322 ], [ -1, %3268 ], [ -1, %3183 ], [ -1, %4213 ], [ -1, %4161 ], [ -1, %4076 ], [ -1, %3921 ], [ -1, %3869 ], [ -1, %3784 ], [ -1, %4816 ], [ -1, %4764 ], [ -1, %4679 ], [ -1, %4524 ], [ -1, %4470 ], [ -1, %4385 ], [ -1, %5415 ], [ -1, %5363 ], [ -1, %5278 ], [ -1, %5123 ], [ -1, %5071 ], [ -1, %4986 ]
  ret i32 %5432
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5440 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1221
    i32 104, label %1824
    i32 105, label %2432
    i32 106, label %3029
    i32 107, label %3632
    i32 108, label %4231
    i32 109, label %4833
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5440

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5440

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5440

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !204

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !205

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !206

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i32, ptr %24, i64 %130
  %134 = load i32, ptr %133, align 4, !tbaa !5
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i32 %134, 255
  %138 = sitofp i32 %137 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !207

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5440, label %55, !llvm.loop !208

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !209

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !210

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !211

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i32, ptr %24, i64 %271
  %273 = load i32, ptr %272, align 4, !tbaa !5
  %274 = load i8, ptr %26, align 1, !tbaa !11
  %275 = trunc i32 %273 to i8
  %276 = add i8 %274, %275
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !212

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5440, label %193, !llvm.loop !213

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5440

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5440

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !214

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !215

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !216

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i32, ptr %24, i64 %428
  %430 = load i32, ptr %429, align 4, !tbaa !5
  %431 = load i8, ptr %26, align 1, !tbaa !11
  %432 = trunc i32 %430 to i8
  %433 = add i8 %431, %432
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !217

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5440, label %353, !llvm.loop !218

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !219

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !220

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !221

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds i32, ptr %24, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !5
  %566 = load i8, ptr %26, align 1, !tbaa !11
  %567 = trunc i32 %565 to i8
  %568 = add i8 %566, %567
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !222

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5440, label %485, !llvm.loop !223

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %632

630:                                              ; preds = %624
  %631 = load i32, ptr %626, align 4, !tbaa !5
  store i32 %631, ptr %628, align 4, !tbaa !5
  br label %5440

632:                                              ; preds = %624
  switch i32 %1, label %1219 [
    i32 1, label %633
    i32 0, label %929
  ]

633:                                              ; preds = %632
  %634 = getelementptr inbounds i32, ptr %3, i64 %19
  %635 = load i32, ptr %634, align 4, !tbaa !5
  %636 = icmp eq i32 %635, 0
  %637 = icmp sgt i32 %5, 0
  br i1 %636, label %647, label %638

638:                                              ; preds = %633
  br i1 %637, label %639, label %5440

639:                                              ; preds = %638
  %640 = icmp sgt i32 %13, 1
  %641 = icmp sgt i32 %13, 0
  %642 = add i32 %13, -2
  %643 = zext i32 %642 to i64
  %644 = zext i32 %13 to i64
  %645 = add nuw i32 %5, 1
  %646 = icmp eq i32 %13, 1
  br label %793

647:                                              ; preds = %633
  br i1 %637, label %648, label %5440

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %656

656:                                              ; preds = %648, %791
  %657 = phi i32 [ 0, %648 ], [ %743, %791 ]
  %658 = phi double [ 0.000000e+00, %648 ], [ %742, %791 ]
  %659 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %660, label %729

660:                                              ; preds = %656, %719
  %661 = phi i32 [ %728, %719 ], [ 0, %656 ]
  %662 = phi i64 [ %670, %719 ], [ %653, %656 ]
  %663 = phi i64 [ %727, %719 ], [ %652, %656 ]
  %664 = phi i32 [ %725, %719 ], [ %659, %656 ]
  %665 = sub i32 %651, %661
  %666 = tail call i32 @llvm.smin.i32(i32 %665, i32 0)
  %667 = sub i32 %665, %666
  %668 = zext i32 %667 to i64
  %669 = add nuw nsw i64 %668, 1
  %670 = add nsw i64 %662, -1
  %671 = icmp ult i32 %667, 31
  br i1 %671, label %707, label %672

672:                                              ; preds = %660
  %673 = and i64 %669, 8589934560
  %674 = sub i64 %663, %673
  br label %675

675:                                              ; preds = %675, %672
  %676 = phi i64 [ 0, %672 ], [ %699, %675 ]
  %677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %695, %675 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %696, %675 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %697, %675 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %698, %675 ]
  %681 = sub i64 %663, %676
  %682 = getelementptr inbounds i32, ptr %9, i64 %681
  %683 = getelementptr inbounds i32, ptr %682, i64 -7
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = getelementptr inbounds i32, ptr %682, i64 -15
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %682, i64 -23
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %682, i64 -31
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = mul <8 x i32> %685, %677
  %696 = mul <8 x i32> %688, %678
  %697 = mul <8 x i32> %691, %679
  %698 = mul <8 x i32> %694, %680
  %699 = add nuw i64 %676, 32
  %700 = icmp eq i64 %699, %673
  br i1 %700, label %701, label %675, !llvm.loop !224

701:                                              ; preds = %675
  %702 = mul <8 x i32> %696, %695
  %703 = mul <8 x i32> %697, %702
  %704 = mul <8 x i32> %698, %703
  %705 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %704)
  %706 = icmp eq i64 %669, %673
  br i1 %706, label %719, label %707

707:                                              ; preds = %660, %701
  %708 = phi i64 [ %663, %660 ], [ %674, %701 ]
  %709 = phi i32 [ 1, %660 ], [ %705, %701 ]
  br label %710

710:                                              ; preds = %707, %710
  %711 = phi i64 [ %716, %710 ], [ %708, %707 ]
  %712 = phi i32 [ %715, %710 ], [ %709, %707 ]
  %713 = getelementptr inbounds i32, ptr %9, i64 %711
  %714 = load i32, ptr %713, align 4, !tbaa !5
  %715 = mul nsw i32 %714, %712
  %716 = add nsw i64 %711, -1
  %717 = trunc i64 %711 to i32
  %718 = icmp sgt i32 %717, 0
  br i1 %718, label %710, label %719, !llvm.loop !225

719:                                              ; preds = %710, %701
  %720 = phi i32 [ %705, %701 ], [ %715, %710 ]
  %721 = and i64 %670, 4294967295
  %722 = getelementptr inbounds i32, ptr %6, i64 %721
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %720
  %725 = add nsw i32 %724, %664
  %726 = icmp sgt i64 %662, 2
  %727 = add nsw i64 %663, -1
  %728 = add i32 %661, 1
  br i1 %726, label %660, label %729, !llvm.loop !226

729:                                              ; preds = %719, %656
  %730 = phi i32 [ %659, %656 ], [ %725, %719 ]
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds double, ptr %2, i64 %731
  %733 = load double, ptr %732, align 8, !tbaa !18
  %734 = getelementptr inbounds i32, ptr %626, i64 %731
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = load i32, ptr %628, align 4, !tbaa !5
  %737 = sitofp i32 %736 to double
  %738 = sitofp i32 %735 to double
  %739 = fmul fast double %733, %738
  %740 = fadd fast double %739, %737
  %741 = fptosi double %740 to i32
  store i32 %741, ptr %628, align 4, !tbaa !5
  %742 = fadd fast double %733, %658
  %743 = add nuw nsw i32 %657, 1
  br i1 %650, label %744, label %791

744:                                              ; preds = %729
  %745 = load i32, ptr %4, align 4, !tbaa !5
  %746 = load i32, ptr %12, align 4, !tbaa !5
  %747 = add nsw i32 %746, -1
  %748 = icmp slt i32 %745, %747
  br i1 %748, label %768, label %749

749:                                              ; preds = %744
  %750 = icmp eq i32 %745, %747
  br i1 %750, label %751, label %784

751:                                              ; preds = %749
  store i32 0, ptr %4, align 4, !tbaa !5
  %752 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %752, ptr %6, align 4, !tbaa !5
  br i1 %655, label %791, label %753

753:                                              ; preds = %751, %778
  %754 = phi i64 [ %782, %778 ], [ 1, %751 ]
  %755 = getelementptr inbounds i32, ptr %4, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !5
  %757 = getelementptr inbounds i32, ptr %12, i64 %754
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = add nsw i32 %758, -1
  %760 = icmp slt i32 %756, %759
  br i1 %760, label %761, label %776

761:                                              ; preds = %753
  br i1 %748, label %768, label %762

762:                                              ; preds = %761
  %763 = getelementptr inbounds i32, ptr %7, i64 %754
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = getelementptr inbounds i32, ptr %6, i64 %754
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = add nsw i32 %766, %764
  store i32 %767, ptr %765, align 4, !tbaa !5
  br label %786

768:                                              ; preds = %744, %761
  %769 = phi i32 [ %756, %761 ], [ %745, %744 ]
  %770 = phi ptr [ %755, %761 ], [ %4, %744 ]
  %771 = phi i64 [ %754, %761 ], [ 0, %744 ]
  %772 = add nsw i32 %769, 1
  store i32 %772, ptr %770, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %7, i64 %771
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %771
  br label %786

776:                                              ; preds = %753
  %777 = icmp eq i32 %756, %759
  br i1 %777, label %778, label %784

778:                                              ; preds = %776
  store i32 0, ptr %755, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %8, i64 %754
  %780 = load i32, ptr %779, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %6, i64 %754
  store i32 %780, ptr %781, align 4, !tbaa !5
  %782 = add nuw nsw i64 %754, 1
  %783 = icmp eq i64 %782, %653
  br i1 %783, label %791, label %753, !llvm.loop !227

784:                                              ; preds = %749, %776
  %785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

786:                                              ; preds = %762, %768
  %787 = phi ptr [ %775, %768 ], [ %755, %762 ]
  %788 = phi i32 [ %774, %768 ], [ 1, %762 ]
  %789 = load i32, ptr %787, align 4, !tbaa !5
  %790 = add nsw i32 %789, %788
  store i32 %790, ptr %787, align 4, !tbaa !5
  br label %791

791:                                              ; preds = %778, %786, %751, %729
  %792 = icmp eq i32 %743, %5
  br i1 %792, label %5440, label %656, !llvm.loop !228

793:                                              ; preds = %639, %927
  %794 = phi i32 [ 0, %639 ], [ %876, %927 ]
  %795 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %640, label %796, label %865

796:                                              ; preds = %793, %855
  %797 = phi i32 [ %864, %855 ], [ 0, %793 ]
  %798 = phi i64 [ %806, %855 ], [ %644, %793 ]
  %799 = phi i64 [ %863, %855 ], [ %643, %793 ]
  %800 = phi i32 [ %861, %855 ], [ %795, %793 ]
  %801 = sub i32 %642, %797
  %802 = tail call i32 @llvm.smin.i32(i32 %801, i32 0)
  %803 = sub i32 %801, %802
  %804 = zext i32 %803 to i64
  %805 = add nuw nsw i64 %804, 1
  %806 = add nsw i64 %798, -1
  %807 = icmp ult i32 %803, 31
  br i1 %807, label %843, label %808

808:                                              ; preds = %796
  %809 = and i64 %805, 8589934560
  %810 = sub i64 %799, %809
  br label %811

811:                                              ; preds = %811, %808
  %812 = phi i64 [ 0, %808 ], [ %835, %811 ]
  %813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %831, %811 ]
  %814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %832, %811 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %833, %811 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %834, %811 ]
  %817 = sub i64 %799, %812
  %818 = getelementptr inbounds i32, ptr %11, i64 %817
  %819 = getelementptr inbounds i32, ptr %818, i64 -7
  %820 = load <8 x i32>, ptr %819, align 4, !tbaa !5
  %821 = shufflevector <8 x i32> %820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %822 = getelementptr inbounds i32, ptr %818, i64 -15
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %818, i64 -23
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %818, i64 -31
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = mul <8 x i32> %821, %813
  %832 = mul <8 x i32> %824, %814
  %833 = mul <8 x i32> %827, %815
  %834 = mul <8 x i32> %830, %816
  %835 = add nuw i64 %812, 32
  %836 = icmp eq i64 %835, %809
  br i1 %836, label %837, label %811, !llvm.loop !229

837:                                              ; preds = %811
  %838 = mul <8 x i32> %832, %831
  %839 = mul <8 x i32> %833, %838
  %840 = mul <8 x i32> %834, %839
  %841 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %840)
  %842 = icmp eq i64 %805, %809
  br i1 %842, label %855, label %843

843:                                              ; preds = %796, %837
  %844 = phi i64 [ %799, %796 ], [ %810, %837 ]
  %845 = phi i32 [ 1, %796 ], [ %841, %837 ]
  br label %846

846:                                              ; preds = %843, %846
  %847 = phi i64 [ %852, %846 ], [ %844, %843 ]
  %848 = phi i32 [ %851, %846 ], [ %845, %843 ]
  %849 = getelementptr inbounds i32, ptr %11, i64 %847
  %850 = load i32, ptr %849, align 4, !tbaa !5
  %851 = mul nsw i32 %850, %848
  %852 = add nsw i64 %847, -1
  %853 = trunc i64 %847 to i32
  %854 = icmp sgt i32 %853, 0
  br i1 %854, label %846, label %855, !llvm.loop !230

855:                                              ; preds = %846, %837
  %856 = phi i32 [ %841, %837 ], [ %851, %846 ]
  %857 = and i64 %806, 4294967295
  %858 = getelementptr inbounds i32, ptr %6, i64 %857
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %856
  %861 = add nsw i32 %860, %800
  %862 = icmp sgt i64 %798, 2
  %863 = add nsw i64 %799, -1
  %864 = add i32 %797, 1
  br i1 %862, label %796, label %865, !llvm.loop !231

865:                                              ; preds = %855, %793
  %866 = phi i32 [ %795, %793 ], [ %861, %855 ]
  %867 = icmp slt i32 %866, %5
  br i1 %867, label %870, label %868

868:                                              ; preds = %865
  %869 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

870:                                              ; preds = %865
  %871 = sext i32 %866 to i64
  %872 = getelementptr inbounds i32, ptr %626, i64 %871
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = load i32, ptr %628, align 4, !tbaa !5
  %875 = add i32 %874, %873
  store i32 %875, ptr %628, align 4, !tbaa !5
  %876 = add nuw nsw i32 %794, 1
  br i1 %641, label %877, label %927

877:                                              ; preds = %870
  %878 = load i32, ptr %4, align 4, !tbaa !5
  %879 = load i32, ptr %12, align 4, !tbaa !5
  %880 = add nsw i32 %879, -1
  %881 = icmp slt i32 %878, %880
  br i1 %881, label %904, label %882

882:                                              ; preds = %877
  %883 = icmp eq i32 %878, %880
  br i1 %883, label %884, label %920

884:                                              ; preds = %882
  store i32 0, ptr %4, align 4, !tbaa !5
  %885 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %885, ptr %6, align 4, !tbaa !5
  br i1 %646, label %927, label %886

886:                                              ; preds = %884, %914
  %887 = phi i64 [ %918, %914 ], [ 1, %884 ]
  %888 = getelementptr inbounds i32, ptr %4, i64 %887
  %889 = load i32, ptr %888, align 4, !tbaa !5
  %890 = getelementptr inbounds i32, ptr %12, i64 %887
  %891 = load i32, ptr %890, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %889, %892
  br i1 %893, label %894, label %912

894:                                              ; preds = %886
  br i1 %881, label %904, label %895

895:                                              ; preds = %894
  %896 = shl i64 %887, 32
  %897 = add i64 %896, -4294967296
  %898 = ashr exact i64 %897, 32
  %899 = getelementptr inbounds i32, ptr %7, i64 %898
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = getelementptr inbounds i32, ptr %6, i64 %887
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = add nsw i32 %902, %900
  store i32 %903, ptr %901, align 4, !tbaa !5
  br label %922

904:                                              ; preds = %877, %894
  %905 = phi i32 [ %889, %894 ], [ %878, %877 ]
  %906 = phi ptr [ %888, %894 ], [ %4, %877 ]
  %907 = phi i64 [ %887, %894 ], [ 0, %877 ]
  %908 = add nsw i32 %905, 1
  store i32 %908, ptr %906, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %7, i64 %907
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %6, i64 %907
  br label %922

912:                                              ; preds = %886
  %913 = icmp eq i32 %889, %892
  br i1 %913, label %914, label %920

914:                                              ; preds = %912
  store i32 0, ptr %888, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %8, i64 %887
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %6, i64 %887
  store i32 %916, ptr %917, align 4, !tbaa !5
  %918 = add nuw nsw i64 %887, 1
  %919 = icmp eq i64 %918, %644
  br i1 %919, label %927, label %886, !llvm.loop !232

920:                                              ; preds = %882, %912
  %921 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

922:                                              ; preds = %895, %904
  %923 = phi ptr [ %911, %904 ], [ %888, %895 ]
  %924 = phi i32 [ %910, %904 ], [ 1, %895 ]
  %925 = load i32, ptr %923, align 4, !tbaa !5
  %926 = add nsw i32 %925, %924
  store i32 %926, ptr %923, align 4, !tbaa !5
  br label %927

927:                                              ; preds = %914, %922, %884, %870
  %928 = icmp eq i32 %876, %5
  br i1 %928, label %5440, label %793, !llvm.loop !233

929:                                              ; preds = %632
  %930 = getelementptr inbounds i32, ptr %3, i64 %19
  %931 = load i32, ptr %930, align 4, !tbaa !5
  %932 = icmp eq i32 %931, 0
  %933 = icmp sgt i32 %5, 0
  br i1 %932, label %943, label %934

934:                                              ; preds = %929
  br i1 %933, label %935, label %5440

935:                                              ; preds = %934
  %936 = icmp sgt i32 %13, 1
  %937 = icmp sgt i32 %13, 0
  %938 = add i32 %13, -2
  %939 = zext i32 %938 to i64
  %940 = zext i32 %13 to i64
  %941 = add nuw i32 %5, 1
  %942 = icmp eq i32 %13, 1
  br label %1083

943:                                              ; preds = %929
  br i1 %933, label %944, label %5440

944:                                              ; preds = %943
  %945 = icmp sgt i32 %13, 1
  %946 = icmp sgt i32 %13, 0
  %947 = add i32 %13, -2
  %948 = zext i32 %947 to i64
  %949 = zext i32 %13 to i64
  %950 = add nuw i32 %5, 1
  %951 = icmp eq i32 %13, 1
  br label %952

952:                                              ; preds = %944, %1081
  %953 = phi i32 [ 0, %944 ], [ %1033, %1081 ]
  %954 = phi double [ 0.000000e+00, %944 ], [ %1032, %1081 ]
  %955 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %945, label %956, label %1025

956:                                              ; preds = %952, %1015
  %957 = phi i32 [ %1024, %1015 ], [ 0, %952 ]
  %958 = phi i64 [ %966, %1015 ], [ %949, %952 ]
  %959 = phi i64 [ %1023, %1015 ], [ %948, %952 ]
  %960 = phi i32 [ %1021, %1015 ], [ %955, %952 ]
  %961 = sub i32 %947, %957
  %962 = tail call i32 @llvm.smin.i32(i32 %961, i32 0)
  %963 = sub i32 %961, %962
  %964 = zext i32 %963 to i64
  %965 = add nuw nsw i64 %964, 1
  %966 = add nsw i64 %958, -1
  %967 = icmp ult i32 %963, 31
  br i1 %967, label %1003, label %968

968:                                              ; preds = %956
  %969 = and i64 %965, 8589934560
  %970 = sub i64 %959, %969
  br label %971

971:                                              ; preds = %971, %968
  %972 = phi i64 [ 0, %968 ], [ %995, %971 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %991, %971 ]
  %974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %992, %971 ]
  %975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %993, %971 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %994, %971 ]
  %977 = sub i64 %959, %972
  %978 = getelementptr inbounds i32, ptr %9, i64 %977
  %979 = getelementptr inbounds i32, ptr %978, i64 -7
  %980 = load <8 x i32>, ptr %979, align 4, !tbaa !5
  %981 = shufflevector <8 x i32> %980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %982 = getelementptr inbounds i32, ptr %978, i64 -15
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %978, i64 -23
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %978, i64 -31
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = mul <8 x i32> %981, %973
  %992 = mul <8 x i32> %984, %974
  %993 = mul <8 x i32> %987, %975
  %994 = mul <8 x i32> %990, %976
  %995 = add nuw i64 %972, 32
  %996 = icmp eq i64 %995, %969
  br i1 %996, label %997, label %971, !llvm.loop !234

997:                                              ; preds = %971
  %998 = mul <8 x i32> %992, %991
  %999 = mul <8 x i32> %993, %998
  %1000 = mul <8 x i32> %994, %999
  %1001 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1000)
  %1002 = icmp eq i64 %965, %969
  br i1 %1002, label %1015, label %1003

1003:                                             ; preds = %956, %997
  %1004 = phi i64 [ %959, %956 ], [ %970, %997 ]
  %1005 = phi i32 [ 1, %956 ], [ %1001, %997 ]
  br label %1006

1006:                                             ; preds = %1003, %1006
  %1007 = phi i64 [ %1012, %1006 ], [ %1004, %1003 ]
  %1008 = phi i32 [ %1011, %1006 ], [ %1005, %1003 ]
  %1009 = getelementptr inbounds i32, ptr %9, i64 %1007
  %1010 = load i32, ptr %1009, align 4, !tbaa !5
  %1011 = mul nsw i32 %1010, %1008
  %1012 = add nsw i64 %1007, -1
  %1013 = trunc i64 %1007 to i32
  %1014 = icmp sgt i32 %1013, 0
  br i1 %1014, label %1006, label %1015, !llvm.loop !235

1015:                                             ; preds = %1006, %997
  %1016 = phi i32 [ %1001, %997 ], [ %1011, %1006 ]
  %1017 = and i64 %966, 4294967295
  %1018 = getelementptr inbounds i32, ptr %6, i64 %1017
  %1019 = load i32, ptr %1018, align 4, !tbaa !5
  %1020 = mul nsw i32 %1019, %1016
  %1021 = add nsw i32 %1020, %960
  %1022 = icmp sgt i64 %958, 2
  %1023 = add nsw i64 %959, -1
  %1024 = add i32 %957, 1
  br i1 %1022, label %956, label %1025, !llvm.loop !236

1025:                                             ; preds = %1015, %952
  %1026 = phi i32 [ %955, %952 ], [ %1021, %1015 ]
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds i32, ptr %626, i64 %1027
  %1029 = load i32, ptr %1028, align 4, !tbaa !5
  %1030 = load i32, ptr %628, align 4, !tbaa !5
  %1031 = add nsw i32 %1030, %1029
  store i32 %1031, ptr %628, align 4, !tbaa !5
  %1032 = fadd fast double %954, 1.000000e+00
  %1033 = add nuw nsw i32 %953, 1
  br i1 %946, label %1034, label %1081

1034:                                             ; preds = %1025
  %1035 = load i32, ptr %4, align 4, !tbaa !5
  %1036 = load i32, ptr %12, align 4, !tbaa !5
  %1037 = add nsw i32 %1036, -1
  %1038 = icmp slt i32 %1035, %1037
  br i1 %1038, label %1058, label %1039

1039:                                             ; preds = %1034
  %1040 = icmp eq i32 %1035, %1037
  br i1 %1040, label %1041, label %1074

1041:                                             ; preds = %1039
  store i32 0, ptr %4, align 4, !tbaa !5
  %1042 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1042, ptr %6, align 4, !tbaa !5
  br i1 %951, label %1081, label %1043

1043:                                             ; preds = %1041, %1068
  %1044 = phi i64 [ %1072, %1068 ], [ 1, %1041 ]
  %1045 = getelementptr inbounds i32, ptr %4, i64 %1044
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = getelementptr inbounds i32, ptr %12, i64 %1044
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, -1
  %1050 = icmp slt i32 %1046, %1049
  br i1 %1050, label %1051, label %1066

1051:                                             ; preds = %1043
  br i1 %1038, label %1058, label %1052

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds i32, ptr %7, i64 %1044
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1044
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, %1054
  store i32 %1057, ptr %1055, align 4, !tbaa !5
  br label %1076

1058:                                             ; preds = %1034, %1051
  %1059 = phi i32 [ %1046, %1051 ], [ %1035, %1034 ]
  %1060 = phi ptr [ %1045, %1051 ], [ %4, %1034 ]
  %1061 = phi i64 [ %1044, %1051 ], [ 0, %1034 ]
  %1062 = add nsw i32 %1059, 1
  store i32 %1062, ptr %1060, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %6, i64 %1061
  br label %1076

1066:                                             ; preds = %1043
  %1067 = icmp eq i32 %1046, %1049
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1066
  store i32 0, ptr %1045, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %8, i64 %1044
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1044
  store i32 %1070, ptr %1071, align 4, !tbaa !5
  %1072 = add nuw nsw i64 %1044, 1
  %1073 = icmp eq i64 %1072, %949
  br i1 %1073, label %1081, label %1043, !llvm.loop !237

1074:                                             ; preds = %1039, %1066
  %1075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1076:                                             ; preds = %1052, %1058
  %1077 = phi ptr [ %1065, %1058 ], [ %1045, %1052 ]
  %1078 = phi i32 [ %1064, %1058 ], [ 1, %1052 ]
  %1079 = load i32, ptr %1077, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, %1078
  store i32 %1080, ptr %1077, align 4, !tbaa !5
  br label %1081

1081:                                             ; preds = %1068, %1076, %1041, %1025
  %1082 = icmp eq i32 %1033, %5
  br i1 %1082, label %5440, label %952, !llvm.loop !238

1083:                                             ; preds = %935, %1217
  %1084 = phi i32 [ 0, %935 ], [ %1166, %1217 ]
  %1085 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %936, label %1086, label %1155

1086:                                             ; preds = %1083, %1145
  %1087 = phi i32 [ %1154, %1145 ], [ 0, %1083 ]
  %1088 = phi i64 [ %1096, %1145 ], [ %940, %1083 ]
  %1089 = phi i64 [ %1153, %1145 ], [ %939, %1083 ]
  %1090 = phi i32 [ %1151, %1145 ], [ %1085, %1083 ]
  %1091 = sub i32 %938, %1087
  %1092 = tail call i32 @llvm.smin.i32(i32 %1091, i32 0)
  %1093 = sub i32 %1091, %1092
  %1094 = zext i32 %1093 to i64
  %1095 = add nuw nsw i64 %1094, 1
  %1096 = add nsw i64 %1088, -1
  %1097 = icmp ult i32 %1093, 31
  br i1 %1097, label %1133, label %1098

1098:                                             ; preds = %1086
  %1099 = and i64 %1095, 8589934560
  %1100 = sub i64 %1089, %1099
  br label %1101

1101:                                             ; preds = %1101, %1098
  %1102 = phi i64 [ 0, %1098 ], [ %1125, %1101 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1121, %1101 ]
  %1104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1122, %1101 ]
  %1105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1123, %1101 ]
  %1106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1124, %1101 ]
  %1107 = sub i64 %1089, %1102
  %1108 = getelementptr inbounds i32, ptr %11, i64 %1107
  %1109 = getelementptr inbounds i32, ptr %1108, i64 -7
  %1110 = load <8 x i32>, ptr %1109, align 4, !tbaa !5
  %1111 = shufflevector <8 x i32> %1110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1112 = getelementptr inbounds i32, ptr %1108, i64 -15
  %1113 = load <8 x i32>, ptr %1112, align 4, !tbaa !5
  %1114 = shufflevector <8 x i32> %1113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1115 = getelementptr inbounds i32, ptr %1108, i64 -23
  %1116 = load <8 x i32>, ptr %1115, align 4, !tbaa !5
  %1117 = shufflevector <8 x i32> %1116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1118 = getelementptr inbounds i32, ptr %1108, i64 -31
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = mul <8 x i32> %1111, %1103
  %1122 = mul <8 x i32> %1114, %1104
  %1123 = mul <8 x i32> %1117, %1105
  %1124 = mul <8 x i32> %1120, %1106
  %1125 = add nuw i64 %1102, 32
  %1126 = icmp eq i64 %1125, %1099
  br i1 %1126, label %1127, label %1101, !llvm.loop !239

1127:                                             ; preds = %1101
  %1128 = mul <8 x i32> %1122, %1121
  %1129 = mul <8 x i32> %1123, %1128
  %1130 = mul <8 x i32> %1124, %1129
  %1131 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1130)
  %1132 = icmp eq i64 %1095, %1099
  br i1 %1132, label %1145, label %1133

1133:                                             ; preds = %1086, %1127
  %1134 = phi i64 [ %1089, %1086 ], [ %1100, %1127 ]
  %1135 = phi i32 [ 1, %1086 ], [ %1131, %1127 ]
  br label %1136

1136:                                             ; preds = %1133, %1136
  %1137 = phi i64 [ %1142, %1136 ], [ %1134, %1133 ]
  %1138 = phi i32 [ %1141, %1136 ], [ %1135, %1133 ]
  %1139 = getelementptr inbounds i32, ptr %11, i64 %1137
  %1140 = load i32, ptr %1139, align 4, !tbaa !5
  %1141 = mul nsw i32 %1140, %1138
  %1142 = add nsw i64 %1137, -1
  %1143 = trunc i64 %1137 to i32
  %1144 = icmp sgt i32 %1143, 0
  br i1 %1144, label %1136, label %1145, !llvm.loop !240

1145:                                             ; preds = %1136, %1127
  %1146 = phi i32 [ %1131, %1127 ], [ %1141, %1136 ]
  %1147 = and i64 %1096, 4294967295
  %1148 = getelementptr inbounds i32, ptr %6, i64 %1147
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1146
  %1151 = add nsw i32 %1150, %1090
  %1152 = icmp sgt i64 %1088, 2
  %1153 = add nsw i64 %1089, -1
  %1154 = add i32 %1087, 1
  br i1 %1152, label %1086, label %1155, !llvm.loop !241

1155:                                             ; preds = %1145, %1083
  %1156 = phi i32 [ %1085, %1083 ], [ %1151, %1145 ]
  %1157 = icmp slt i32 %1156, %5
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1155
  %1159 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1160:                                             ; preds = %1155
  %1161 = sext i32 %1156 to i64
  %1162 = getelementptr inbounds i32, ptr %626, i64 %1161
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = load i32, ptr %628, align 4, !tbaa !5
  %1165 = add nsw i32 %1164, %1163
  store i32 %1165, ptr %628, align 4, !tbaa !5
  %1166 = add nuw nsw i32 %1084, 1
  br i1 %937, label %1167, label %1217

1167:                                             ; preds = %1160
  %1168 = load i32, ptr %4, align 4, !tbaa !5
  %1169 = load i32, ptr %12, align 4, !tbaa !5
  %1170 = add nsw i32 %1169, -1
  %1171 = icmp slt i32 %1168, %1170
  br i1 %1171, label %1194, label %1172

1172:                                             ; preds = %1167
  %1173 = icmp eq i32 %1168, %1170
  br i1 %1173, label %1174, label %1210

1174:                                             ; preds = %1172
  store i32 0, ptr %4, align 4, !tbaa !5
  %1175 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1175, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1217, label %1176

1176:                                             ; preds = %1174, %1204
  %1177 = phi i64 [ %1208, %1204 ], [ 1, %1174 ]
  %1178 = getelementptr inbounds i32, ptr %4, i64 %1177
  %1179 = load i32, ptr %1178, align 4, !tbaa !5
  %1180 = getelementptr inbounds i32, ptr %12, i64 %1177
  %1181 = load i32, ptr %1180, align 4, !tbaa !5
  %1182 = add nsw i32 %1181, -1
  %1183 = icmp slt i32 %1179, %1182
  br i1 %1183, label %1184, label %1202

1184:                                             ; preds = %1176
  br i1 %1171, label %1194, label %1185

1185:                                             ; preds = %1184
  %1186 = shl i64 %1177, 32
  %1187 = add i64 %1186, -4294967296
  %1188 = ashr exact i64 %1187, 32
  %1189 = getelementptr inbounds i32, ptr %7, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %6, i64 %1177
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, %1190
  store i32 %1193, ptr %1191, align 4, !tbaa !5
  br label %1212

1194:                                             ; preds = %1167, %1184
  %1195 = phi i32 [ %1179, %1184 ], [ %1168, %1167 ]
  %1196 = phi ptr [ %1178, %1184 ], [ %4, %1167 ]
  %1197 = phi i64 [ %1177, %1184 ], [ 0, %1167 ]
  %1198 = add nsw i32 %1195, 1
  store i32 %1198, ptr %1196, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %7, i64 %1197
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %6, i64 %1197
  br label %1212

1202:                                             ; preds = %1176
  %1203 = icmp eq i32 %1179, %1182
  br i1 %1203, label %1204, label %1210

1204:                                             ; preds = %1202
  store i32 0, ptr %1178, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %8, i64 %1177
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1177
  store i32 %1206, ptr %1207, align 4, !tbaa !5
  %1208 = add nuw nsw i64 %1177, 1
  %1209 = icmp eq i64 %1208, %940
  br i1 %1209, label %1217, label %1176, !llvm.loop !242

1210:                                             ; preds = %1172, %1202
  %1211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1212:                                             ; preds = %1185, %1194
  %1213 = phi ptr [ %1201, %1194 ], [ %1178, %1185 ]
  %1214 = phi i32 [ %1200, %1194 ], [ 1, %1185 ]
  %1215 = load i32, ptr %1213, align 4, !tbaa !5
  %1216 = add nsw i32 %1215, %1214
  store i32 %1216, ptr %1213, align 4, !tbaa !5
  br label %1217

1217:                                             ; preds = %1204, %1212, %1174, %1160
  %1218 = icmp eq i32 %1166, %5
  br i1 %1218, label %5440, label %1083, !llvm.loop !243

1219:                                             ; preds = %632
  %1220 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

1221:                                             ; preds = %18
  %1222 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1223 = load ptr, ptr %1222, align 8, !tbaa !9
  %1224 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1225 = load ptr, ptr %1224, align 8, !tbaa !9
  store i8 0, ptr %1225, align 1, !tbaa !11
  %1226 = icmp eq i32 %13, 0
  br i1 %1226, label %1227, label %1230

1227:                                             ; preds = %1221
  %1228 = load i32, ptr %1223, align 4, !tbaa !5
  %1229 = trunc i32 %1228 to i8
  store i8 %1229, ptr %1225, align 1, !tbaa !11
  br label %5440

1230:                                             ; preds = %1221
  switch i32 %1, label %1822 [
    i32 1, label %1231
    i32 0, label %1530
  ]

1231:                                             ; preds = %1230
  %1232 = getelementptr inbounds i32, ptr %3, i64 %19
  %1233 = load i32, ptr %1232, align 4, !tbaa !5
  %1234 = icmp eq i32 %1233, 0
  %1235 = icmp sgt i32 %5, 0
  br i1 %1234, label %1245, label %1236

1236:                                             ; preds = %1231
  br i1 %1235, label %1237, label %5440

1237:                                             ; preds = %1236
  %1238 = icmp sgt i32 %13, 1
  %1239 = icmp sgt i32 %13, 0
  %1240 = add i32 %13, -2
  %1241 = zext i32 %1240 to i64
  %1242 = zext i32 %13 to i64
  %1243 = add nuw i32 %5, 1
  %1244 = icmp eq i32 %13, 1
  br label %1393

1245:                                             ; preds = %1231
  br i1 %1235, label %1246, label %5440

1246:                                             ; preds = %1245
  %1247 = icmp sgt i32 %13, 1
  %1248 = icmp sgt i32 %13, 0
  %1249 = add i32 %13, -2
  %1250 = zext i32 %1249 to i64
  %1251 = zext i32 %13 to i64
  %1252 = add nuw i32 %5, 1
  %1253 = icmp eq i32 %13, 1
  br label %1254

1254:                                             ; preds = %1246, %1391
  %1255 = phi i32 [ 0, %1246 ], [ %1343, %1391 ]
  %1256 = phi double [ 0.000000e+00, %1246 ], [ %1342, %1391 ]
  %1257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1247, label %1258, label %1327

1258:                                             ; preds = %1254, %1317
  %1259 = phi i32 [ %1326, %1317 ], [ 0, %1254 ]
  %1260 = phi i64 [ %1268, %1317 ], [ %1251, %1254 ]
  %1261 = phi i64 [ %1325, %1317 ], [ %1250, %1254 ]
  %1262 = phi i32 [ %1323, %1317 ], [ %1257, %1254 ]
  %1263 = sub i32 %1249, %1259
  %1264 = tail call i32 @llvm.smin.i32(i32 %1263, i32 0)
  %1265 = sub i32 %1263, %1264
  %1266 = zext i32 %1265 to i64
  %1267 = add nuw nsw i64 %1266, 1
  %1268 = add nsw i64 %1260, -1
  %1269 = icmp ult i32 %1265, 31
  br i1 %1269, label %1305, label %1270

1270:                                             ; preds = %1258
  %1271 = and i64 %1267, 8589934560
  %1272 = sub i64 %1261, %1271
  br label %1273

1273:                                             ; preds = %1273, %1270
  %1274 = phi i64 [ 0, %1270 ], [ %1297, %1273 ]
  %1275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1293, %1273 ]
  %1276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1294, %1273 ]
  %1277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1295, %1273 ]
  %1278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1296, %1273 ]
  %1279 = sub i64 %1261, %1274
  %1280 = getelementptr inbounds i32, ptr %9, i64 %1279
  %1281 = getelementptr inbounds i32, ptr %1280, i64 -7
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = getelementptr inbounds i32, ptr %1280, i64 -15
  %1285 = load <8 x i32>, ptr %1284, align 4, !tbaa !5
  %1286 = shufflevector <8 x i32> %1285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1287 = getelementptr inbounds i32, ptr %1280, i64 -23
  %1288 = load <8 x i32>, ptr %1287, align 4, !tbaa !5
  %1289 = shufflevector <8 x i32> %1288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1290 = getelementptr inbounds i32, ptr %1280, i64 -31
  %1291 = load <8 x i32>, ptr %1290, align 4, !tbaa !5
  %1292 = shufflevector <8 x i32> %1291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1293 = mul <8 x i32> %1283, %1275
  %1294 = mul <8 x i32> %1286, %1276
  %1295 = mul <8 x i32> %1289, %1277
  %1296 = mul <8 x i32> %1292, %1278
  %1297 = add nuw i64 %1274, 32
  %1298 = icmp eq i64 %1297, %1271
  br i1 %1298, label %1299, label %1273, !llvm.loop !244

1299:                                             ; preds = %1273
  %1300 = mul <8 x i32> %1294, %1293
  %1301 = mul <8 x i32> %1295, %1300
  %1302 = mul <8 x i32> %1296, %1301
  %1303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1302)
  %1304 = icmp eq i64 %1267, %1271
  br i1 %1304, label %1317, label %1305

1305:                                             ; preds = %1258, %1299
  %1306 = phi i64 [ %1261, %1258 ], [ %1272, %1299 ]
  %1307 = phi i32 [ 1, %1258 ], [ %1303, %1299 ]
  br label %1308

1308:                                             ; preds = %1305, %1308
  %1309 = phi i64 [ %1314, %1308 ], [ %1306, %1305 ]
  %1310 = phi i32 [ %1313, %1308 ], [ %1307, %1305 ]
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1309
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1310
  %1314 = add nsw i64 %1309, -1
  %1315 = trunc i64 %1309 to i32
  %1316 = icmp sgt i32 %1315, 0
  br i1 %1316, label %1308, label %1317, !llvm.loop !245

1317:                                             ; preds = %1308, %1299
  %1318 = phi i32 [ %1303, %1299 ], [ %1313, %1308 ]
  %1319 = and i64 %1268, 4294967295
  %1320 = getelementptr inbounds i32, ptr %6, i64 %1319
  %1321 = load i32, ptr %1320, align 4, !tbaa !5
  %1322 = mul nsw i32 %1321, %1318
  %1323 = add nsw i32 %1322, %1262
  %1324 = icmp sgt i64 %1260, 2
  %1325 = add nsw i64 %1261, -1
  %1326 = add i32 %1259, 1
  br i1 %1324, label %1258, label %1327, !llvm.loop !246

1327:                                             ; preds = %1317, %1254
  %1328 = phi i32 [ %1257, %1254 ], [ %1323, %1317 ]
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds double, ptr %2, i64 %1329
  %1331 = load double, ptr %1330, align 8, !tbaa !18
  %1332 = getelementptr inbounds i32, ptr %1223, i64 %1329
  %1333 = load i32, ptr %1332, align 4, !tbaa !5
  %1334 = load i8, ptr %1225, align 1, !tbaa !11
  %1335 = sitofp i8 %1334 to double
  %1336 = shl i32 %1333, 24
  %1337 = ashr exact i32 %1336, 24
  %1338 = sitofp i32 %1337 to double
  %1339 = fmul fast double %1331, %1338
  %1340 = fadd fast double %1339, %1335
  %1341 = fptosi double %1340 to i8
  store i8 %1341, ptr %1225, align 1, !tbaa !11
  %1342 = fadd fast double %1331, %1256
  %1343 = add nuw nsw i32 %1255, 1
  br i1 %1248, label %1344, label %1391

1344:                                             ; preds = %1327
  %1345 = load i32, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %12, align 4, !tbaa !5
  %1347 = add nsw i32 %1346, -1
  %1348 = icmp slt i32 %1345, %1347
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1344
  %1350 = icmp eq i32 %1345, %1347
  br i1 %1350, label %1351, label %1384

1351:                                             ; preds = %1349
  store i32 0, ptr %4, align 4, !tbaa !5
  %1352 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1352, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1391, label %1353

1353:                                             ; preds = %1351, %1378
  %1354 = phi i64 [ %1382, %1378 ], [ 1, %1351 ]
  %1355 = getelementptr inbounds i32, ptr %4, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = getelementptr inbounds i32, ptr %12, i64 %1354
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = add nsw i32 %1358, -1
  %1360 = icmp slt i32 %1356, %1359
  br i1 %1360, label %1361, label %1376

1361:                                             ; preds = %1353
  br i1 %1348, label %1368, label %1362

1362:                                             ; preds = %1361
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1354
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, %1364
  store i32 %1367, ptr %1365, align 4, !tbaa !5
  br label %1386

1368:                                             ; preds = %1344, %1361
  %1369 = phi i32 [ %1356, %1361 ], [ %1345, %1344 ]
  %1370 = phi ptr [ %1355, %1361 ], [ %4, %1344 ]
  %1371 = phi i64 [ %1354, %1361 ], [ 0, %1344 ]
  %1372 = add nsw i32 %1369, 1
  store i32 %1372, ptr %1370, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1371
  br label %1386

1376:                                             ; preds = %1353
  %1377 = icmp eq i32 %1356, %1359
  br i1 %1377, label %1378, label %1384

1378:                                             ; preds = %1376
  store i32 0, ptr %1355, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %8, i64 %1354
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1354
  store i32 %1380, ptr %1381, align 4, !tbaa !5
  %1382 = add nuw nsw i64 %1354, 1
  %1383 = icmp eq i64 %1382, %1251
  br i1 %1383, label %1391, label %1353, !llvm.loop !247

1384:                                             ; preds = %1349, %1376
  %1385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1386:                                             ; preds = %1362, %1368
  %1387 = phi ptr [ %1375, %1368 ], [ %1355, %1362 ]
  %1388 = phi i32 [ %1374, %1368 ], [ 1, %1362 ]
  %1389 = load i32, ptr %1387, align 4, !tbaa !5
  %1390 = add nsw i32 %1389, %1388
  store i32 %1390, ptr %1387, align 4, !tbaa !5
  br label %1391

1391:                                             ; preds = %1378, %1386, %1351, %1327
  %1392 = icmp eq i32 %1343, %5
  br i1 %1392, label %5440, label %1254, !llvm.loop !248

1393:                                             ; preds = %1237, %1528
  %1394 = phi i32 [ 0, %1237 ], [ %1477, %1528 ]
  %1395 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1238, label %1396, label %1465

1396:                                             ; preds = %1393, %1455
  %1397 = phi i32 [ %1464, %1455 ], [ 0, %1393 ]
  %1398 = phi i64 [ %1406, %1455 ], [ %1242, %1393 ]
  %1399 = phi i64 [ %1463, %1455 ], [ %1241, %1393 ]
  %1400 = phi i32 [ %1461, %1455 ], [ %1395, %1393 ]
  %1401 = sub i32 %1240, %1397
  %1402 = tail call i32 @llvm.smin.i32(i32 %1401, i32 0)
  %1403 = sub i32 %1401, %1402
  %1404 = zext i32 %1403 to i64
  %1405 = add nuw nsw i64 %1404, 1
  %1406 = add nsw i64 %1398, -1
  %1407 = icmp ult i32 %1403, 31
  br i1 %1407, label %1443, label %1408

1408:                                             ; preds = %1396
  %1409 = and i64 %1405, 8589934560
  %1410 = sub i64 %1399, %1409
  br label %1411

1411:                                             ; preds = %1411, %1408
  %1412 = phi i64 [ 0, %1408 ], [ %1435, %1411 ]
  %1413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1431, %1411 ]
  %1414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1432, %1411 ]
  %1415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1433, %1411 ]
  %1416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1434, %1411 ]
  %1417 = sub i64 %1399, %1412
  %1418 = getelementptr inbounds i32, ptr %11, i64 %1417
  %1419 = getelementptr inbounds i32, ptr %1418, i64 -7
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1418, i64 -15
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = getelementptr inbounds i32, ptr %1418, i64 -23
  %1426 = load <8 x i32>, ptr %1425, align 4, !tbaa !5
  %1427 = shufflevector <8 x i32> %1426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1428 = getelementptr inbounds i32, ptr %1418, i64 -31
  %1429 = load <8 x i32>, ptr %1428, align 4, !tbaa !5
  %1430 = shufflevector <8 x i32> %1429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1431 = mul <8 x i32> %1421, %1413
  %1432 = mul <8 x i32> %1424, %1414
  %1433 = mul <8 x i32> %1427, %1415
  %1434 = mul <8 x i32> %1430, %1416
  %1435 = add nuw i64 %1412, 32
  %1436 = icmp eq i64 %1435, %1409
  br i1 %1436, label %1437, label %1411, !llvm.loop !249

1437:                                             ; preds = %1411
  %1438 = mul <8 x i32> %1432, %1431
  %1439 = mul <8 x i32> %1433, %1438
  %1440 = mul <8 x i32> %1434, %1439
  %1441 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1440)
  %1442 = icmp eq i64 %1405, %1409
  br i1 %1442, label %1455, label %1443

1443:                                             ; preds = %1396, %1437
  %1444 = phi i64 [ %1399, %1396 ], [ %1410, %1437 ]
  %1445 = phi i32 [ 1, %1396 ], [ %1441, %1437 ]
  br label %1446

1446:                                             ; preds = %1443, %1446
  %1447 = phi i64 [ %1452, %1446 ], [ %1444, %1443 ]
  %1448 = phi i32 [ %1451, %1446 ], [ %1445, %1443 ]
  %1449 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1450 = load i32, ptr %1449, align 4, !tbaa !5
  %1451 = mul nsw i32 %1450, %1448
  %1452 = add nsw i64 %1447, -1
  %1453 = trunc i64 %1447 to i32
  %1454 = icmp sgt i32 %1453, 0
  br i1 %1454, label %1446, label %1455, !llvm.loop !250

1455:                                             ; preds = %1446, %1437
  %1456 = phi i32 [ %1441, %1437 ], [ %1451, %1446 ]
  %1457 = and i64 %1406, 4294967295
  %1458 = getelementptr inbounds i32, ptr %6, i64 %1457
  %1459 = load i32, ptr %1458, align 4, !tbaa !5
  %1460 = mul nsw i32 %1459, %1456
  %1461 = add nsw i32 %1460, %1400
  %1462 = icmp sgt i64 %1398, 2
  %1463 = add nsw i64 %1399, -1
  %1464 = add i32 %1397, 1
  br i1 %1462, label %1396, label %1465, !llvm.loop !251

1465:                                             ; preds = %1455, %1393
  %1466 = phi i32 [ %1395, %1393 ], [ %1461, %1455 ]
  %1467 = icmp slt i32 %1466, %5
  br i1 %1467, label %1470, label %1468

1468:                                             ; preds = %1465
  %1469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1470:                                             ; preds = %1465
  %1471 = sext i32 %1466 to i64
  %1472 = getelementptr inbounds i32, ptr %1223, i64 %1471
  %1473 = load i32, ptr %1472, align 4, !tbaa !5
  %1474 = load i8, ptr %1225, align 1, !tbaa !11
  %1475 = trunc i32 %1473 to i8
  %1476 = add i8 %1474, %1475
  store i8 %1476, ptr %1225, align 1, !tbaa !11
  %1477 = add nuw nsw i32 %1394, 1
  br i1 %1239, label %1478, label %1528

1478:                                             ; preds = %1470
  %1479 = load i32, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %12, align 4, !tbaa !5
  %1481 = add nsw i32 %1480, -1
  %1482 = icmp slt i32 %1479, %1481
  br i1 %1482, label %1505, label %1483

1483:                                             ; preds = %1478
  %1484 = icmp eq i32 %1479, %1481
  br i1 %1484, label %1485, label %1521

1485:                                             ; preds = %1483
  store i32 0, ptr %4, align 4, !tbaa !5
  %1486 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1486, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1528, label %1487

1487:                                             ; preds = %1485, %1515
  %1488 = phi i64 [ %1519, %1515 ], [ 1, %1485 ]
  %1489 = getelementptr inbounds i32, ptr %4, i64 %1488
  %1490 = load i32, ptr %1489, align 4, !tbaa !5
  %1491 = getelementptr inbounds i32, ptr %12, i64 %1488
  %1492 = load i32, ptr %1491, align 4, !tbaa !5
  %1493 = add nsw i32 %1492, -1
  %1494 = icmp slt i32 %1490, %1493
  br i1 %1494, label %1495, label %1513

1495:                                             ; preds = %1487
  br i1 %1482, label %1505, label %1496

1496:                                             ; preds = %1495
  %1497 = shl i64 %1488, 32
  %1498 = add i64 %1497, -4294967296
  %1499 = ashr exact i64 %1498, 32
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1499
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1488
  %1503 = load i32, ptr %1502, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, %1501
  store i32 %1504, ptr %1502, align 4, !tbaa !5
  br label %1523

1505:                                             ; preds = %1478, %1495
  %1506 = phi i32 [ %1490, %1495 ], [ %1479, %1478 ]
  %1507 = phi ptr [ %1489, %1495 ], [ %4, %1478 ]
  %1508 = phi i64 [ %1488, %1495 ], [ 0, %1478 ]
  %1509 = add nsw i32 %1506, 1
  store i32 %1509, ptr %1507, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %7, i64 %1508
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1508
  br label %1523

1513:                                             ; preds = %1487
  %1514 = icmp eq i32 %1490, %1493
  br i1 %1514, label %1515, label %1521

1515:                                             ; preds = %1513
  store i32 0, ptr %1489, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %8, i64 %1488
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = getelementptr inbounds i32, ptr %6, i64 %1488
  store i32 %1517, ptr %1518, align 4, !tbaa !5
  %1519 = add nuw nsw i64 %1488, 1
  %1520 = icmp eq i64 %1519, %1242
  br i1 %1520, label %1528, label %1487, !llvm.loop !252

1521:                                             ; preds = %1483, %1513
  %1522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1523:                                             ; preds = %1496, %1505
  %1524 = phi ptr [ %1512, %1505 ], [ %1489, %1496 ]
  %1525 = phi i32 [ %1511, %1505 ], [ 1, %1496 ]
  %1526 = load i32, ptr %1524, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1525
  store i32 %1527, ptr %1524, align 4, !tbaa !5
  br label %1528

1528:                                             ; preds = %1515, %1523, %1485, %1470
  %1529 = icmp eq i32 %1477, %5
  br i1 %1529, label %5440, label %1393, !llvm.loop !253

1530:                                             ; preds = %1230
  %1531 = getelementptr inbounds i32, ptr %3, i64 %19
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp sgt i32 %5, 0
  br i1 %1533, label %1544, label %1535

1535:                                             ; preds = %1530
  br i1 %1534, label %1536, label %5440

1536:                                             ; preds = %1535
  %1537 = icmp sgt i32 %13, 1
  %1538 = icmp sgt i32 %13, 0
  %1539 = add i32 %13, -2
  %1540 = zext i32 %1539 to i64
  %1541 = zext i32 %13 to i64
  %1542 = add nuw i32 %5, 1
  %1543 = icmp eq i32 %13, 1
  br label %1685

1544:                                             ; preds = %1530
  br i1 %1534, label %1545, label %5440

1545:                                             ; preds = %1544
  %1546 = icmp sgt i32 %13, 1
  %1547 = icmp sgt i32 %13, 0
  %1548 = add i32 %13, -2
  %1549 = zext i32 %1548 to i64
  %1550 = zext i32 %13 to i64
  %1551 = add nuw i32 %5, 1
  %1552 = icmp eq i32 %13, 1
  br label %1553

1553:                                             ; preds = %1545, %1683
  %1554 = phi i32 [ 0, %1545 ], [ %1635, %1683 ]
  %1555 = phi double [ 0.000000e+00, %1545 ], [ %1634, %1683 ]
  %1556 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1557, label %1626

1557:                                             ; preds = %1553, %1616
  %1558 = phi i32 [ %1625, %1616 ], [ 0, %1553 ]
  %1559 = phi i64 [ %1567, %1616 ], [ %1550, %1553 ]
  %1560 = phi i64 [ %1624, %1616 ], [ %1549, %1553 ]
  %1561 = phi i32 [ %1622, %1616 ], [ %1556, %1553 ]
  %1562 = sub i32 %1548, %1558
  %1563 = tail call i32 @llvm.smin.i32(i32 %1562, i32 0)
  %1564 = sub i32 %1562, %1563
  %1565 = zext i32 %1564 to i64
  %1566 = add nuw nsw i64 %1565, 1
  %1567 = add nsw i64 %1559, -1
  %1568 = icmp ult i32 %1564, 31
  br i1 %1568, label %1604, label %1569

1569:                                             ; preds = %1557
  %1570 = and i64 %1566, 8589934560
  %1571 = sub i64 %1560, %1570
  br label %1572

1572:                                             ; preds = %1572, %1569
  %1573 = phi i64 [ 0, %1569 ], [ %1596, %1572 ]
  %1574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1592, %1572 ]
  %1575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1593, %1572 ]
  %1576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1594, %1572 ]
  %1577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1595, %1572 ]
  %1578 = sub i64 %1560, %1573
  %1579 = getelementptr inbounds i32, ptr %9, i64 %1578
  %1580 = getelementptr inbounds i32, ptr %1579, i64 -7
  %1581 = load <8 x i32>, ptr %1580, align 4, !tbaa !5
  %1582 = shufflevector <8 x i32> %1581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1583 = getelementptr inbounds i32, ptr %1579, i64 -15
  %1584 = load <8 x i32>, ptr %1583, align 4, !tbaa !5
  %1585 = shufflevector <8 x i32> %1584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1586 = getelementptr inbounds i32, ptr %1579, i64 -23
  %1587 = load <8 x i32>, ptr %1586, align 4, !tbaa !5
  %1588 = shufflevector <8 x i32> %1587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1589 = getelementptr inbounds i32, ptr %1579, i64 -31
  %1590 = load <8 x i32>, ptr %1589, align 4, !tbaa !5
  %1591 = shufflevector <8 x i32> %1590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1592 = mul <8 x i32> %1582, %1574
  %1593 = mul <8 x i32> %1585, %1575
  %1594 = mul <8 x i32> %1588, %1576
  %1595 = mul <8 x i32> %1591, %1577
  %1596 = add nuw i64 %1573, 32
  %1597 = icmp eq i64 %1596, %1570
  br i1 %1597, label %1598, label %1572, !llvm.loop !254

1598:                                             ; preds = %1572
  %1599 = mul <8 x i32> %1593, %1592
  %1600 = mul <8 x i32> %1594, %1599
  %1601 = mul <8 x i32> %1595, %1600
  %1602 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1601)
  %1603 = icmp eq i64 %1566, %1570
  br i1 %1603, label %1616, label %1604

1604:                                             ; preds = %1557, %1598
  %1605 = phi i64 [ %1560, %1557 ], [ %1571, %1598 ]
  %1606 = phi i32 [ 1, %1557 ], [ %1602, %1598 ]
  br label %1607

1607:                                             ; preds = %1604, %1607
  %1608 = phi i64 [ %1613, %1607 ], [ %1605, %1604 ]
  %1609 = phi i32 [ %1612, %1607 ], [ %1606, %1604 ]
  %1610 = getelementptr inbounds i32, ptr %9, i64 %1608
  %1611 = load i32, ptr %1610, align 4, !tbaa !5
  %1612 = mul nsw i32 %1611, %1609
  %1613 = add nsw i64 %1608, -1
  %1614 = trunc i64 %1608 to i32
  %1615 = icmp sgt i32 %1614, 0
  br i1 %1615, label %1607, label %1616, !llvm.loop !255

1616:                                             ; preds = %1607, %1598
  %1617 = phi i32 [ %1602, %1598 ], [ %1612, %1607 ]
  %1618 = and i64 %1567, 4294967295
  %1619 = getelementptr inbounds i32, ptr %6, i64 %1618
  %1620 = load i32, ptr %1619, align 4, !tbaa !5
  %1621 = mul nsw i32 %1620, %1617
  %1622 = add nsw i32 %1621, %1561
  %1623 = icmp sgt i64 %1559, 2
  %1624 = add nsw i64 %1560, -1
  %1625 = add i32 %1558, 1
  br i1 %1623, label %1557, label %1626, !llvm.loop !256

1626:                                             ; preds = %1616, %1553
  %1627 = phi i32 [ %1556, %1553 ], [ %1622, %1616 ]
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i32, ptr %1223, i64 %1628
  %1630 = load i32, ptr %1629, align 4, !tbaa !5
  %1631 = load i8, ptr %1225, align 1, !tbaa !11
  %1632 = trunc i32 %1630 to i8
  %1633 = add i8 %1631, %1632
  store i8 %1633, ptr %1225, align 1, !tbaa !11
  %1634 = fadd fast double %1555, 1.000000e+00
  %1635 = add nuw nsw i32 %1554, 1
  br i1 %1547, label %1636, label %1683

1636:                                             ; preds = %1626
  %1637 = load i32, ptr %4, align 4, !tbaa !5
  %1638 = load i32, ptr %12, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1637, %1639
  br i1 %1640, label %1660, label %1641

1641:                                             ; preds = %1636
  %1642 = icmp eq i32 %1637, %1639
  br i1 %1642, label %1643, label %1676

1643:                                             ; preds = %1641
  store i32 0, ptr %4, align 4, !tbaa !5
  %1644 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1644, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1683, label %1645

1645:                                             ; preds = %1643, %1670
  %1646 = phi i64 [ %1674, %1670 ], [ 1, %1643 ]
  %1647 = getelementptr inbounds i32, ptr %4, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %12, i64 %1646
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, -1
  %1652 = icmp slt i32 %1648, %1651
  br i1 %1652, label %1653, label %1668

1653:                                             ; preds = %1645
  br i1 %1640, label %1660, label %1654

1654:                                             ; preds = %1653
  %1655 = getelementptr inbounds i32, ptr %7, i64 %1646
  %1656 = load i32, ptr %1655, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = add nsw i32 %1658, %1656
  store i32 %1659, ptr %1657, align 4, !tbaa !5
  br label %1678

1660:                                             ; preds = %1636, %1653
  %1661 = phi i32 [ %1648, %1653 ], [ %1637, %1636 ]
  %1662 = phi ptr [ %1647, %1653 ], [ %4, %1636 ]
  %1663 = phi i64 [ %1646, %1653 ], [ 0, %1636 ]
  %1664 = add nsw i32 %1661, 1
  store i32 %1664, ptr %1662, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %7, i64 %1663
  %1666 = load i32, ptr %1665, align 4, !tbaa !5
  %1667 = getelementptr inbounds i32, ptr %6, i64 %1663
  br label %1678

1668:                                             ; preds = %1645
  %1669 = icmp eq i32 %1648, %1651
  br i1 %1669, label %1670, label %1676

1670:                                             ; preds = %1668
  store i32 0, ptr %1647, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %8, i64 %1646
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %6, i64 %1646
  store i32 %1672, ptr %1673, align 4, !tbaa !5
  %1674 = add nuw nsw i64 %1646, 1
  %1675 = icmp eq i64 %1674, %1550
  br i1 %1675, label %1683, label %1645, !llvm.loop !257

1676:                                             ; preds = %1641, %1668
  %1677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1678:                                             ; preds = %1654, %1660
  %1679 = phi ptr [ %1667, %1660 ], [ %1647, %1654 ]
  %1680 = phi i32 [ %1666, %1660 ], [ 1, %1654 ]
  %1681 = load i32, ptr %1679, align 4, !tbaa !5
  %1682 = add nsw i32 %1681, %1680
  store i32 %1682, ptr %1679, align 4, !tbaa !5
  br label %1683

1683:                                             ; preds = %1670, %1678, %1643, %1626
  %1684 = icmp eq i32 %1635, %5
  br i1 %1684, label %5440, label %1553, !llvm.loop !258

1685:                                             ; preds = %1536, %1820
  %1686 = phi i32 [ 0, %1536 ], [ %1769, %1820 ]
  %1687 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1688, label %1757

1688:                                             ; preds = %1685, %1747
  %1689 = phi i32 [ %1756, %1747 ], [ 0, %1685 ]
  %1690 = phi i64 [ %1698, %1747 ], [ %1541, %1685 ]
  %1691 = phi i64 [ %1755, %1747 ], [ %1540, %1685 ]
  %1692 = phi i32 [ %1753, %1747 ], [ %1687, %1685 ]
  %1693 = sub i32 %1539, %1689
  %1694 = tail call i32 @llvm.smin.i32(i32 %1693, i32 0)
  %1695 = sub i32 %1693, %1694
  %1696 = zext i32 %1695 to i64
  %1697 = add nuw nsw i64 %1696, 1
  %1698 = add nsw i64 %1690, -1
  %1699 = icmp ult i32 %1695, 31
  br i1 %1699, label %1735, label %1700

1700:                                             ; preds = %1688
  %1701 = and i64 %1697, 8589934560
  %1702 = sub i64 %1691, %1701
  br label %1703

1703:                                             ; preds = %1703, %1700
  %1704 = phi i64 [ 0, %1700 ], [ %1727, %1703 ]
  %1705 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1723, %1703 ]
  %1706 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1724, %1703 ]
  %1707 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1725, %1703 ]
  %1708 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1726, %1703 ]
  %1709 = sub i64 %1691, %1704
  %1710 = getelementptr inbounds i32, ptr %11, i64 %1709
  %1711 = getelementptr inbounds i32, ptr %1710, i64 -7
  %1712 = load <8 x i32>, ptr %1711, align 4, !tbaa !5
  %1713 = shufflevector <8 x i32> %1712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1714 = getelementptr inbounds i32, ptr %1710, i64 -15
  %1715 = load <8 x i32>, ptr %1714, align 4, !tbaa !5
  %1716 = shufflevector <8 x i32> %1715, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1717 = getelementptr inbounds i32, ptr %1710, i64 -23
  %1718 = load <8 x i32>, ptr %1717, align 4, !tbaa !5
  %1719 = shufflevector <8 x i32> %1718, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1720 = getelementptr inbounds i32, ptr %1710, i64 -31
  %1721 = load <8 x i32>, ptr %1720, align 4, !tbaa !5
  %1722 = shufflevector <8 x i32> %1721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1723 = mul <8 x i32> %1713, %1705
  %1724 = mul <8 x i32> %1716, %1706
  %1725 = mul <8 x i32> %1719, %1707
  %1726 = mul <8 x i32> %1722, %1708
  %1727 = add nuw i64 %1704, 32
  %1728 = icmp eq i64 %1727, %1701
  br i1 %1728, label %1729, label %1703, !llvm.loop !259

1729:                                             ; preds = %1703
  %1730 = mul <8 x i32> %1724, %1723
  %1731 = mul <8 x i32> %1725, %1730
  %1732 = mul <8 x i32> %1726, %1731
  %1733 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1732)
  %1734 = icmp eq i64 %1697, %1701
  br i1 %1734, label %1747, label %1735

1735:                                             ; preds = %1688, %1729
  %1736 = phi i64 [ %1691, %1688 ], [ %1702, %1729 ]
  %1737 = phi i32 [ 1, %1688 ], [ %1733, %1729 ]
  br label %1738

1738:                                             ; preds = %1735, %1738
  %1739 = phi i64 [ %1744, %1738 ], [ %1736, %1735 ]
  %1740 = phi i32 [ %1743, %1738 ], [ %1737, %1735 ]
  %1741 = getelementptr inbounds i32, ptr %11, i64 %1739
  %1742 = load i32, ptr %1741, align 4, !tbaa !5
  %1743 = mul nsw i32 %1742, %1740
  %1744 = add nsw i64 %1739, -1
  %1745 = trunc i64 %1739 to i32
  %1746 = icmp sgt i32 %1745, 0
  br i1 %1746, label %1738, label %1747, !llvm.loop !260

1747:                                             ; preds = %1738, %1729
  %1748 = phi i32 [ %1733, %1729 ], [ %1743, %1738 ]
  %1749 = and i64 %1698, 4294967295
  %1750 = getelementptr inbounds i32, ptr %6, i64 %1749
  %1751 = load i32, ptr %1750, align 4, !tbaa !5
  %1752 = mul nsw i32 %1751, %1748
  %1753 = add nsw i32 %1752, %1692
  %1754 = icmp sgt i64 %1690, 2
  %1755 = add nsw i64 %1691, -1
  %1756 = add i32 %1689, 1
  br i1 %1754, label %1688, label %1757, !llvm.loop !261

1757:                                             ; preds = %1747, %1685
  %1758 = phi i32 [ %1687, %1685 ], [ %1753, %1747 ]
  %1759 = icmp slt i32 %1758, %5
  br i1 %1759, label %1762, label %1760

1760:                                             ; preds = %1757
  %1761 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1762:                                             ; preds = %1757
  %1763 = sext i32 %1758 to i64
  %1764 = getelementptr inbounds i32, ptr %1223, i64 %1763
  %1765 = load i32, ptr %1764, align 4, !tbaa !5
  %1766 = load i8, ptr %1225, align 1, !tbaa !11
  %1767 = trunc i32 %1765 to i8
  %1768 = add i8 %1766, %1767
  store i8 %1768, ptr %1225, align 1, !tbaa !11
  %1769 = add nuw nsw i32 %1686, 1
  br i1 %1538, label %1770, label %1820

1770:                                             ; preds = %1762
  %1771 = load i32, ptr %4, align 4, !tbaa !5
  %1772 = load i32, ptr %12, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1771, %1773
  br i1 %1774, label %1797, label %1775

1775:                                             ; preds = %1770
  %1776 = icmp eq i32 %1771, %1773
  br i1 %1776, label %1777, label %1813

1777:                                             ; preds = %1775
  store i32 0, ptr %4, align 4, !tbaa !5
  %1778 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1778, ptr %6, align 4, !tbaa !5
  br i1 %1543, label %1820, label %1779

1779:                                             ; preds = %1777, %1807
  %1780 = phi i64 [ %1811, %1807 ], [ 1, %1777 ]
  %1781 = getelementptr inbounds i32, ptr %4, i64 %1780
  %1782 = load i32, ptr %1781, align 4, !tbaa !5
  %1783 = getelementptr inbounds i32, ptr %12, i64 %1780
  %1784 = load i32, ptr %1783, align 4, !tbaa !5
  %1785 = add nsw i32 %1784, -1
  %1786 = icmp slt i32 %1782, %1785
  br i1 %1786, label %1787, label %1805

1787:                                             ; preds = %1779
  br i1 %1774, label %1797, label %1788

1788:                                             ; preds = %1787
  %1789 = shl i64 %1780, 32
  %1790 = add i64 %1789, -4294967296
  %1791 = ashr exact i64 %1790, 32
  %1792 = getelementptr inbounds i32, ptr %7, i64 %1791
  %1793 = load i32, ptr %1792, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %6, i64 %1780
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = add nsw i32 %1795, %1793
  store i32 %1796, ptr %1794, align 4, !tbaa !5
  br label %1815

1797:                                             ; preds = %1770, %1787
  %1798 = phi i32 [ %1782, %1787 ], [ %1771, %1770 ]
  %1799 = phi ptr [ %1781, %1787 ], [ %4, %1770 ]
  %1800 = phi i64 [ %1780, %1787 ], [ 0, %1770 ]
  %1801 = add nsw i32 %1798, 1
  store i32 %1801, ptr %1799, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %7, i64 %1800
  %1803 = load i32, ptr %1802, align 4, !tbaa !5
  %1804 = getelementptr inbounds i32, ptr %6, i64 %1800
  br label %1815

1805:                                             ; preds = %1779
  %1806 = icmp eq i32 %1782, %1785
  br i1 %1806, label %1807, label %1813

1807:                                             ; preds = %1805
  store i32 0, ptr %1781, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %8, i64 %1780
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1780
  store i32 %1809, ptr %1810, align 4, !tbaa !5
  %1811 = add nuw nsw i64 %1780, 1
  %1812 = icmp eq i64 %1811, %1541
  br i1 %1812, label %1820, label %1779, !llvm.loop !262

1813:                                             ; preds = %1775, %1805
  %1814 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1815:                                             ; preds = %1788, %1797
  %1816 = phi ptr [ %1804, %1797 ], [ %1781, %1788 ]
  %1817 = phi i32 [ %1803, %1797 ], [ 1, %1788 ]
  %1818 = load i32, ptr %1816, align 4, !tbaa !5
  %1819 = add nsw i32 %1818, %1817
  store i32 %1819, ptr %1816, align 4, !tbaa !5
  br label %1820

1820:                                             ; preds = %1807, %1815, %1777, %1762
  %1821 = icmp eq i32 %1769, %5
  br i1 %1821, label %5440, label %1685, !llvm.loop !263

1822:                                             ; preds = %1230
  %1823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

1824:                                             ; preds = %18
  %1825 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1826 = load ptr, ptr %1825, align 8, !tbaa !9
  %1827 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1828 = load ptr, ptr %1827, align 8, !tbaa !9
  store i16 0, ptr %1828, align 2, !tbaa !78
  %1829 = icmp eq i32 %13, 0
  br i1 %1829, label %1830, label %1833

1830:                                             ; preds = %1824
  %1831 = load i32, ptr %1826, align 4, !tbaa !5
  %1832 = trunc i32 %1831 to i16
  store i16 %1832, ptr %1828, align 2, !tbaa !78
  br label %5440

1833:                                             ; preds = %1824
  switch i32 %1, label %2430 [
    i32 1, label %1834
    i32 0, label %2138
  ]

1834:                                             ; preds = %1833
  %1835 = getelementptr inbounds i32, ptr %3, i64 %19
  %1836 = load i32, ptr %1835, align 4, !tbaa !5
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp sgt i32 %5, 0
  br i1 %1837, label %1848, label %1839

1839:                                             ; preds = %1834
  br i1 %1838, label %1840, label %5440

1840:                                             ; preds = %1839
  %1841 = icmp sgt i32 %13, 1
  %1842 = icmp sgt i32 %13, 0
  %1843 = add i32 %13, -2
  %1844 = zext i32 %1843 to i64
  %1845 = zext i32 %13 to i64
  %1846 = add nuw i32 %5, 1
  %1847 = icmp eq i32 %13, 1
  br label %1996

1848:                                             ; preds = %1834
  br i1 %1838, label %1849, label %5440

1849:                                             ; preds = %1848
  %1850 = icmp sgt i32 %13, 1
  %1851 = icmp sgt i32 %13, 0
  %1852 = add i32 %13, -2
  %1853 = zext i32 %1852 to i64
  %1854 = zext i32 %13 to i64
  %1855 = add nuw i32 %5, 1
  %1856 = icmp eq i32 %13, 1
  br label %1857

1857:                                             ; preds = %1849, %1994
  %1858 = phi i16 [ 0, %1849 ], [ %1944, %1994 ]
  %1859 = phi i32 [ 0, %1849 ], [ %1946, %1994 ]
  %1860 = phi double [ 0.000000e+00, %1849 ], [ %1945, %1994 ]
  %1861 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1850, label %1862, label %1931

1862:                                             ; preds = %1857, %1921
  %1863 = phi i32 [ %1930, %1921 ], [ 0, %1857 ]
  %1864 = phi i64 [ %1872, %1921 ], [ %1854, %1857 ]
  %1865 = phi i64 [ %1929, %1921 ], [ %1853, %1857 ]
  %1866 = phi i32 [ %1927, %1921 ], [ %1861, %1857 ]
  %1867 = sub i32 %1852, %1863
  %1868 = tail call i32 @llvm.smin.i32(i32 %1867, i32 0)
  %1869 = sub i32 %1867, %1868
  %1870 = zext i32 %1869 to i64
  %1871 = add nuw nsw i64 %1870, 1
  %1872 = add nsw i64 %1864, -1
  %1873 = icmp ult i32 %1869, 31
  br i1 %1873, label %1909, label %1874

1874:                                             ; preds = %1862
  %1875 = and i64 %1871, 8589934560
  %1876 = sub i64 %1865, %1875
  br label %1877

1877:                                             ; preds = %1877, %1874
  %1878 = phi i64 [ 0, %1874 ], [ %1901, %1877 ]
  %1879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1897, %1877 ]
  %1880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1898, %1877 ]
  %1881 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1899, %1877 ]
  %1882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1900, %1877 ]
  %1883 = sub i64 %1865, %1878
  %1884 = getelementptr inbounds i32, ptr %9, i64 %1883
  %1885 = getelementptr inbounds i32, ptr %1884, i64 -7
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = getelementptr inbounds i32, ptr %1884, i64 -15
  %1889 = load <8 x i32>, ptr %1888, align 4, !tbaa !5
  %1890 = shufflevector <8 x i32> %1889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1891 = getelementptr inbounds i32, ptr %1884, i64 -23
  %1892 = load <8 x i32>, ptr %1891, align 4, !tbaa !5
  %1893 = shufflevector <8 x i32> %1892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1894 = getelementptr inbounds i32, ptr %1884, i64 -31
  %1895 = load <8 x i32>, ptr %1894, align 4, !tbaa !5
  %1896 = shufflevector <8 x i32> %1895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1897 = mul <8 x i32> %1887, %1879
  %1898 = mul <8 x i32> %1890, %1880
  %1899 = mul <8 x i32> %1893, %1881
  %1900 = mul <8 x i32> %1896, %1882
  %1901 = add nuw i64 %1878, 32
  %1902 = icmp eq i64 %1901, %1875
  br i1 %1902, label %1903, label %1877, !llvm.loop !264

1903:                                             ; preds = %1877
  %1904 = mul <8 x i32> %1898, %1897
  %1905 = mul <8 x i32> %1899, %1904
  %1906 = mul <8 x i32> %1900, %1905
  %1907 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1906)
  %1908 = icmp eq i64 %1871, %1875
  br i1 %1908, label %1921, label %1909

1909:                                             ; preds = %1862, %1903
  %1910 = phi i64 [ %1865, %1862 ], [ %1876, %1903 ]
  %1911 = phi i32 [ 1, %1862 ], [ %1907, %1903 ]
  br label %1912

1912:                                             ; preds = %1909, %1912
  %1913 = phi i64 [ %1918, %1912 ], [ %1910, %1909 ]
  %1914 = phi i32 [ %1917, %1912 ], [ %1911, %1909 ]
  %1915 = getelementptr inbounds i32, ptr %9, i64 %1913
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1914
  %1918 = add nsw i64 %1913, -1
  %1919 = trunc i64 %1913 to i32
  %1920 = icmp sgt i32 %1919, 0
  br i1 %1920, label %1912, label %1921, !llvm.loop !265

1921:                                             ; preds = %1912, %1903
  %1922 = phi i32 [ %1907, %1903 ], [ %1917, %1912 ]
  %1923 = and i64 %1872, 4294967295
  %1924 = getelementptr inbounds i32, ptr %6, i64 %1923
  %1925 = load i32, ptr %1924, align 4, !tbaa !5
  %1926 = mul nsw i32 %1925, %1922
  %1927 = add nsw i32 %1926, %1866
  %1928 = icmp sgt i64 %1864, 2
  %1929 = add nsw i64 %1865, -1
  %1930 = add i32 %1863, 1
  br i1 %1928, label %1862, label %1931, !llvm.loop !266

1931:                                             ; preds = %1921, %1857
  %1932 = phi i32 [ %1861, %1857 ], [ %1927, %1921 ]
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds double, ptr %2, i64 %1933
  %1935 = load double, ptr %1934, align 8, !tbaa !18
  %1936 = getelementptr inbounds i32, ptr %1826, i64 %1933
  %1937 = load i32, ptr %1936, align 4, !tbaa !5
  %1938 = sitofp i16 %1858 to double
  %1939 = shl i32 %1937, 16
  %1940 = ashr exact i32 %1939, 16
  %1941 = sitofp i32 %1940 to double
  %1942 = fmul fast double %1935, %1941
  %1943 = fadd fast double %1942, %1938
  %1944 = fptosi double %1943 to i16
  %1945 = fadd fast double %1935, %1860
  %1946 = add nuw nsw i32 %1859, 1
  br i1 %1851, label %1947, label %1994

1947:                                             ; preds = %1931
  %1948 = load i32, ptr %4, align 4, !tbaa !5
  %1949 = load i32, ptr %12, align 4, !tbaa !5
  %1950 = add nsw i32 %1949, -1
  %1951 = icmp slt i32 %1948, %1950
  br i1 %1951, label %1971, label %1952

1952:                                             ; preds = %1947
  %1953 = icmp eq i32 %1948, %1950
  br i1 %1953, label %1954, label %1987

1954:                                             ; preds = %1952
  store i32 0, ptr %4, align 4, !tbaa !5
  %1955 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1955, ptr %6, align 4, !tbaa !5
  br i1 %1856, label %1994, label %1956

1956:                                             ; preds = %1954, %1981
  %1957 = phi i64 [ %1985, %1981 ], [ 1, %1954 ]
  %1958 = getelementptr inbounds i32, ptr %4, i64 %1957
  %1959 = load i32, ptr %1958, align 4, !tbaa !5
  %1960 = getelementptr inbounds i32, ptr %12, i64 %1957
  %1961 = load i32, ptr %1960, align 4, !tbaa !5
  %1962 = add nsw i32 %1961, -1
  %1963 = icmp slt i32 %1959, %1962
  br i1 %1963, label %1964, label %1979

1964:                                             ; preds = %1956
  br i1 %1951, label %1971, label %1965

1965:                                             ; preds = %1964
  %1966 = getelementptr inbounds i32, ptr %7, i64 %1957
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %6, i64 %1957
  %1969 = load i32, ptr %1968, align 4, !tbaa !5
  %1970 = add nsw i32 %1969, %1967
  store i32 %1970, ptr %1968, align 4, !tbaa !5
  br label %1989

1971:                                             ; preds = %1947, %1964
  %1972 = phi i32 [ %1959, %1964 ], [ %1948, %1947 ]
  %1973 = phi ptr [ %1958, %1964 ], [ %4, %1947 ]
  %1974 = phi i64 [ %1957, %1964 ], [ 0, %1947 ]
  %1975 = add nsw i32 %1972, 1
  store i32 %1975, ptr %1973, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %7, i64 %1974
  %1977 = load i32, ptr %1976, align 4, !tbaa !5
  %1978 = getelementptr inbounds i32, ptr %6, i64 %1974
  br label %1989

1979:                                             ; preds = %1956
  %1980 = icmp eq i32 %1959, %1962
  br i1 %1980, label %1981, label %1987

1981:                                             ; preds = %1979
  store i32 0, ptr %1958, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %8, i64 %1957
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = getelementptr inbounds i32, ptr %6, i64 %1957
  store i32 %1983, ptr %1984, align 4, !tbaa !5
  %1985 = add nuw nsw i64 %1957, 1
  %1986 = icmp eq i64 %1985, %1854
  br i1 %1986, label %1994, label %1956, !llvm.loop !267

1987:                                             ; preds = %1952, %1979
  store i16 %1944, ptr %1828, align 2, !tbaa !78
  %1988 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1989:                                             ; preds = %1965, %1971
  %1990 = phi ptr [ %1978, %1971 ], [ %1958, %1965 ]
  %1991 = phi i32 [ %1977, %1971 ], [ 1, %1965 ]
  %1992 = load i32, ptr %1990, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1991
  store i32 %1993, ptr %1990, align 4, !tbaa !5
  br label %1994

1994:                                             ; preds = %1981, %1989, %1954, %1931
  %1995 = icmp eq i32 %1946, %5
  br i1 %1995, label %5432, label %1857, !llvm.loop !268

1996:                                             ; preds = %1840, %2136
  %1997 = phi i64 [ 0, %1840 ], [ %2083, %2136 ]
  %1998 = phi i32 [ 0, %1840 ], [ %2085, %2136 ]
  %1999 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1841, label %2000, label %2069

2000:                                             ; preds = %1996, %2059
  %2001 = phi i32 [ %2068, %2059 ], [ 0, %1996 ]
  %2002 = phi i64 [ %2010, %2059 ], [ %1845, %1996 ]
  %2003 = phi i64 [ %2067, %2059 ], [ %1844, %1996 ]
  %2004 = phi i32 [ %2065, %2059 ], [ %1999, %1996 ]
  %2005 = sub i32 %1843, %2001
  %2006 = tail call i32 @llvm.smin.i32(i32 %2005, i32 0)
  %2007 = sub i32 %2005, %2006
  %2008 = zext i32 %2007 to i64
  %2009 = add nuw nsw i64 %2008, 1
  %2010 = add nsw i64 %2002, -1
  %2011 = icmp ult i32 %2007, 31
  br i1 %2011, label %2047, label %2012

2012:                                             ; preds = %2000
  %2013 = and i64 %2009, 8589934560
  %2014 = sub i64 %2003, %2013
  br label %2015

2015:                                             ; preds = %2015, %2012
  %2016 = phi i64 [ 0, %2012 ], [ %2039, %2015 ]
  %2017 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2035, %2015 ]
  %2018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2036, %2015 ]
  %2019 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2037, %2015 ]
  %2020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2038, %2015 ]
  %2021 = sub i64 %2003, %2016
  %2022 = getelementptr inbounds i32, ptr %11, i64 %2021
  %2023 = getelementptr inbounds i32, ptr %2022, i64 -7
  %2024 = load <8 x i32>, ptr %2023, align 4, !tbaa !5
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2026 = getelementptr inbounds i32, ptr %2022, i64 -15
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = getelementptr inbounds i32, ptr %2022, i64 -23
  %2030 = load <8 x i32>, ptr %2029, align 4, !tbaa !5
  %2031 = shufflevector <8 x i32> %2030, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2032 = getelementptr inbounds i32, ptr %2022, i64 -31
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = mul <8 x i32> %2025, %2017
  %2036 = mul <8 x i32> %2028, %2018
  %2037 = mul <8 x i32> %2031, %2019
  %2038 = mul <8 x i32> %2034, %2020
  %2039 = add nuw i64 %2016, 32
  %2040 = icmp eq i64 %2039, %2013
  br i1 %2040, label %2041, label %2015, !llvm.loop !269

2041:                                             ; preds = %2015
  %2042 = mul <8 x i32> %2036, %2035
  %2043 = mul <8 x i32> %2037, %2042
  %2044 = mul <8 x i32> %2038, %2043
  %2045 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2044)
  %2046 = icmp eq i64 %2009, %2013
  br i1 %2046, label %2059, label %2047

2047:                                             ; preds = %2000, %2041
  %2048 = phi i64 [ %2003, %2000 ], [ %2014, %2041 ]
  %2049 = phi i32 [ 1, %2000 ], [ %2045, %2041 ]
  br label %2050

2050:                                             ; preds = %2047, %2050
  %2051 = phi i64 [ %2056, %2050 ], [ %2048, %2047 ]
  %2052 = phi i32 [ %2055, %2050 ], [ %2049, %2047 ]
  %2053 = getelementptr inbounds i32, ptr %11, i64 %2051
  %2054 = load i32, ptr %2053, align 4, !tbaa !5
  %2055 = mul nsw i32 %2054, %2052
  %2056 = add nsw i64 %2051, -1
  %2057 = trunc i64 %2051 to i32
  %2058 = icmp sgt i32 %2057, 0
  br i1 %2058, label %2050, label %2059, !llvm.loop !270

2059:                                             ; preds = %2050, %2041
  %2060 = phi i32 [ %2045, %2041 ], [ %2055, %2050 ]
  %2061 = and i64 %2010, 4294967295
  %2062 = getelementptr inbounds i32, ptr %6, i64 %2061
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = mul nsw i32 %2063, %2060
  %2065 = add nsw i32 %2064, %2004
  %2066 = icmp sgt i64 %2002, 2
  %2067 = add nsw i64 %2003, -1
  %2068 = add i32 %2001, 1
  br i1 %2066, label %2000, label %2069, !llvm.loop !271

2069:                                             ; preds = %2059, %1996
  %2070 = phi i32 [ %1999, %1996 ], [ %2065, %2059 ]
  %2071 = icmp slt i32 %2070, %5
  br i1 %2071, label %2074, label %2072

2072:                                             ; preds = %2069
  %2073 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2074:                                             ; preds = %2069
  %2075 = sext i32 %2070 to i64
  %2076 = getelementptr inbounds i32, ptr %1826, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = shl i64 %1997, 48
  %2079 = ashr exact i64 %2078, 48
  %2080 = shl i32 %2077, 16
  %2081 = ashr exact i32 %2080, 16
  %2082 = sext i32 %2081 to i64
  %2083 = add nsw i64 %2079, %2082
  %2084 = trunc i64 %2083 to i16
  store i16 %2084, ptr %1828, align 2, !tbaa !78
  %2085 = add nuw nsw i32 %1998, 1
  br i1 %1842, label %2086, label %2136

2086:                                             ; preds = %2074
  %2087 = load i32, ptr %4, align 4, !tbaa !5
  %2088 = load i32, ptr %12, align 4, !tbaa !5
  %2089 = add nsw i32 %2088, -1
  %2090 = icmp slt i32 %2087, %2089
  br i1 %2090, label %2113, label %2091

2091:                                             ; preds = %2086
  %2092 = icmp eq i32 %2087, %2089
  br i1 %2092, label %2093, label %2129

2093:                                             ; preds = %2091
  store i32 0, ptr %4, align 4, !tbaa !5
  %2094 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2094, ptr %6, align 4, !tbaa !5
  br i1 %1847, label %2136, label %2095

2095:                                             ; preds = %2093, %2123
  %2096 = phi i64 [ %2127, %2123 ], [ 1, %2093 ]
  %2097 = getelementptr inbounds i32, ptr %4, i64 %2096
  %2098 = load i32, ptr %2097, align 4, !tbaa !5
  %2099 = getelementptr inbounds i32, ptr %12, i64 %2096
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, -1
  %2102 = icmp slt i32 %2098, %2101
  br i1 %2102, label %2103, label %2121

2103:                                             ; preds = %2095
  br i1 %2090, label %2113, label %2104

2104:                                             ; preds = %2103
  %2105 = shl i64 %2096, 32
  %2106 = add i64 %2105, -4294967296
  %2107 = ashr exact i64 %2106, 32
  %2108 = getelementptr inbounds i32, ptr %7, i64 %2107
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = getelementptr inbounds i32, ptr %6, i64 %2096
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = add nsw i32 %2111, %2109
  store i32 %2112, ptr %2110, align 4, !tbaa !5
  br label %2131

2113:                                             ; preds = %2086, %2103
  %2114 = phi i32 [ %2098, %2103 ], [ %2087, %2086 ]
  %2115 = phi ptr [ %2097, %2103 ], [ %4, %2086 ]
  %2116 = phi i64 [ %2096, %2103 ], [ 0, %2086 ]
  %2117 = add nsw i32 %2114, 1
  store i32 %2117, ptr %2115, align 4, !tbaa !5
  %2118 = getelementptr inbounds i32, ptr %7, i64 %2116
  %2119 = load i32, ptr %2118, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %6, i64 %2116
  br label %2131

2121:                                             ; preds = %2095
  %2122 = icmp eq i32 %2098, %2101
  br i1 %2122, label %2123, label %2129

2123:                                             ; preds = %2121
  store i32 0, ptr %2097, align 4, !tbaa !5
  %2124 = getelementptr inbounds i32, ptr %8, i64 %2096
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %6, i64 %2096
  store i32 %2125, ptr %2126, align 4, !tbaa !5
  %2127 = add nuw nsw i64 %2096, 1
  %2128 = icmp eq i64 %2127, %1845
  br i1 %2128, label %2136, label %2095, !llvm.loop !272

2129:                                             ; preds = %2091, %2121
  %2130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2131:                                             ; preds = %2104, %2113
  %2132 = phi ptr [ %2120, %2113 ], [ %2097, %2104 ]
  %2133 = phi i32 [ %2119, %2113 ], [ 1, %2104 ]
  %2134 = load i32, ptr %2132, align 4, !tbaa !5
  %2135 = add nsw i32 %2134, %2133
  store i32 %2135, ptr %2132, align 4, !tbaa !5
  br label %2136

2136:                                             ; preds = %2123, %2131, %2093, %2074
  %2137 = icmp eq i32 %2085, %5
  br i1 %2137, label %5440, label %1996, !llvm.loop !273

2138:                                             ; preds = %1833
  %2139 = getelementptr inbounds i32, ptr %3, i64 %19
  %2140 = load i32, ptr %2139, align 4, !tbaa !5
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp sgt i32 %5, 0
  br i1 %2141, label %2152, label %2143

2143:                                             ; preds = %2138
  br i1 %2142, label %2144, label %5440

2144:                                             ; preds = %2143
  %2145 = icmp sgt i32 %13, 1
  %2146 = icmp sgt i32 %13, 0
  %2147 = add i32 %13, -2
  %2148 = zext i32 %2147 to i64
  %2149 = zext i32 %13 to i64
  %2150 = add nuw i32 %5, 1
  %2151 = icmp eq i32 %13, 1
  br label %2293

2152:                                             ; preds = %2138
  br i1 %2142, label %2153, label %5440

2153:                                             ; preds = %2152
  %2154 = icmp sgt i32 %13, 1
  %2155 = icmp sgt i32 %13, 0
  %2156 = add i32 %13, -2
  %2157 = zext i32 %2156 to i64
  %2158 = zext i32 %13 to i64
  %2159 = add nuw i32 %5, 1
  %2160 = icmp eq i32 %13, 1
  br label %2161

2161:                                             ; preds = %2153, %2291
  %2162 = phi i16 [ 0, %2153 ], [ %2241, %2291 ]
  %2163 = phi i32 [ 0, %2153 ], [ %2243, %2291 ]
  %2164 = phi double [ 0.000000e+00, %2153 ], [ %2242, %2291 ]
  %2165 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2154, label %2166, label %2235

2166:                                             ; preds = %2161, %2225
  %2167 = phi i32 [ %2234, %2225 ], [ 0, %2161 ]
  %2168 = phi i64 [ %2176, %2225 ], [ %2158, %2161 ]
  %2169 = phi i64 [ %2233, %2225 ], [ %2157, %2161 ]
  %2170 = phi i32 [ %2231, %2225 ], [ %2165, %2161 ]
  %2171 = sub i32 %2156, %2167
  %2172 = tail call i32 @llvm.smin.i32(i32 %2171, i32 0)
  %2173 = sub i32 %2171, %2172
  %2174 = zext i32 %2173 to i64
  %2175 = add nuw nsw i64 %2174, 1
  %2176 = add nsw i64 %2168, -1
  %2177 = icmp ult i32 %2173, 31
  br i1 %2177, label %2213, label %2178

2178:                                             ; preds = %2166
  %2179 = and i64 %2175, 8589934560
  %2180 = sub i64 %2169, %2179
  br label %2181

2181:                                             ; preds = %2181, %2178
  %2182 = phi i64 [ 0, %2178 ], [ %2205, %2181 ]
  %2183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2201, %2181 ]
  %2184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2202, %2181 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2203, %2181 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2204, %2181 ]
  %2187 = sub i64 %2169, %2182
  %2188 = getelementptr inbounds i32, ptr %9, i64 %2187
  %2189 = getelementptr inbounds i32, ptr %2188, i64 -7
  %2190 = load <8 x i32>, ptr %2189, align 4, !tbaa !5
  %2191 = shufflevector <8 x i32> %2190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2192 = getelementptr inbounds i32, ptr %2188, i64 -15
  %2193 = load <8 x i32>, ptr %2192, align 4, !tbaa !5
  %2194 = shufflevector <8 x i32> %2193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2195 = getelementptr inbounds i32, ptr %2188, i64 -23
  %2196 = load <8 x i32>, ptr %2195, align 4, !tbaa !5
  %2197 = shufflevector <8 x i32> %2196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2198 = getelementptr inbounds i32, ptr %2188, i64 -31
  %2199 = load <8 x i32>, ptr %2198, align 4, !tbaa !5
  %2200 = shufflevector <8 x i32> %2199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2201 = mul <8 x i32> %2191, %2183
  %2202 = mul <8 x i32> %2194, %2184
  %2203 = mul <8 x i32> %2197, %2185
  %2204 = mul <8 x i32> %2200, %2186
  %2205 = add nuw i64 %2182, 32
  %2206 = icmp eq i64 %2205, %2179
  br i1 %2206, label %2207, label %2181, !llvm.loop !274

2207:                                             ; preds = %2181
  %2208 = mul <8 x i32> %2202, %2201
  %2209 = mul <8 x i32> %2203, %2208
  %2210 = mul <8 x i32> %2204, %2209
  %2211 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2210)
  %2212 = icmp eq i64 %2175, %2179
  br i1 %2212, label %2225, label %2213

2213:                                             ; preds = %2166, %2207
  %2214 = phi i64 [ %2169, %2166 ], [ %2180, %2207 ]
  %2215 = phi i32 [ 1, %2166 ], [ %2211, %2207 ]
  br label %2216

2216:                                             ; preds = %2213, %2216
  %2217 = phi i64 [ %2222, %2216 ], [ %2214, %2213 ]
  %2218 = phi i32 [ %2221, %2216 ], [ %2215, %2213 ]
  %2219 = getelementptr inbounds i32, ptr %9, i64 %2217
  %2220 = load i32, ptr %2219, align 4, !tbaa !5
  %2221 = mul nsw i32 %2220, %2218
  %2222 = add nsw i64 %2217, -1
  %2223 = trunc i64 %2217 to i32
  %2224 = icmp sgt i32 %2223, 0
  br i1 %2224, label %2216, label %2225, !llvm.loop !275

2225:                                             ; preds = %2216, %2207
  %2226 = phi i32 [ %2211, %2207 ], [ %2221, %2216 ]
  %2227 = and i64 %2176, 4294967295
  %2228 = getelementptr inbounds i32, ptr %6, i64 %2227
  %2229 = load i32, ptr %2228, align 4, !tbaa !5
  %2230 = mul nsw i32 %2229, %2226
  %2231 = add nsw i32 %2230, %2170
  %2232 = icmp sgt i64 %2168, 2
  %2233 = add nsw i64 %2169, -1
  %2234 = add i32 %2167, 1
  br i1 %2232, label %2166, label %2235, !llvm.loop !276

2235:                                             ; preds = %2225, %2161
  %2236 = phi i32 [ %2165, %2161 ], [ %2231, %2225 ]
  %2237 = sext i32 %2236 to i64
  %2238 = getelementptr inbounds i32, ptr %1826, i64 %2237
  %2239 = load i32, ptr %2238, align 4, !tbaa !5
  %2240 = trunc i32 %2239 to i16
  %2241 = add i16 %2162, %2240
  %2242 = fadd fast double %2164, 1.000000e+00
  %2243 = add nuw nsw i32 %2163, 1
  br i1 %2155, label %2244, label %2291

2244:                                             ; preds = %2235
  %2245 = load i32, ptr %4, align 4, !tbaa !5
  %2246 = load i32, ptr %12, align 4, !tbaa !5
  %2247 = add nsw i32 %2246, -1
  %2248 = icmp slt i32 %2245, %2247
  br i1 %2248, label %2268, label %2249

2249:                                             ; preds = %2244
  %2250 = icmp eq i32 %2245, %2247
  br i1 %2250, label %2251, label %2284

2251:                                             ; preds = %2249
  store i32 0, ptr %4, align 4, !tbaa !5
  %2252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2252, ptr %6, align 4, !tbaa !5
  br i1 %2160, label %2291, label %2253

2253:                                             ; preds = %2251, %2278
  %2254 = phi i64 [ %2282, %2278 ], [ 1, %2251 ]
  %2255 = getelementptr inbounds i32, ptr %4, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = getelementptr inbounds i32, ptr %12, i64 %2254
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = add nsw i32 %2258, -1
  %2260 = icmp slt i32 %2256, %2259
  br i1 %2260, label %2261, label %2276

2261:                                             ; preds = %2253
  br i1 %2248, label %2268, label %2262

2262:                                             ; preds = %2261
  %2263 = getelementptr inbounds i32, ptr %7, i64 %2254
  %2264 = load i32, ptr %2263, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = add nsw i32 %2266, %2264
  store i32 %2267, ptr %2265, align 4, !tbaa !5
  br label %2286

2268:                                             ; preds = %2244, %2261
  %2269 = phi i32 [ %2256, %2261 ], [ %2245, %2244 ]
  %2270 = phi ptr [ %2255, %2261 ], [ %4, %2244 ]
  %2271 = phi i64 [ %2254, %2261 ], [ 0, %2244 ]
  %2272 = add nsw i32 %2269, 1
  store i32 %2272, ptr %2270, align 4, !tbaa !5
  %2273 = getelementptr inbounds i32, ptr %7, i64 %2271
  %2274 = load i32, ptr %2273, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %6, i64 %2271
  br label %2286

2276:                                             ; preds = %2253
  %2277 = icmp eq i32 %2256, %2259
  br i1 %2277, label %2278, label %2284

2278:                                             ; preds = %2276
  store i32 0, ptr %2255, align 4, !tbaa !5
  %2279 = getelementptr inbounds i32, ptr %8, i64 %2254
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %6, i64 %2254
  store i32 %2280, ptr %2281, align 4, !tbaa !5
  %2282 = add nuw nsw i64 %2254, 1
  %2283 = icmp eq i64 %2282, %2158
  br i1 %2283, label %2291, label %2253, !llvm.loop !277

2284:                                             ; preds = %2249, %2276
  store i16 %2241, ptr %1828, align 2, !tbaa !78
  %2285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2286:                                             ; preds = %2262, %2268
  %2287 = phi ptr [ %2275, %2268 ], [ %2255, %2262 ]
  %2288 = phi i32 [ %2274, %2268 ], [ 1, %2262 ]
  %2289 = load i32, ptr %2287, align 4, !tbaa !5
  %2290 = add nsw i32 %2289, %2288
  store i32 %2290, ptr %2287, align 4, !tbaa !5
  br label %2291

2291:                                             ; preds = %2278, %2286, %2251, %2235
  %2292 = icmp eq i32 %2243, %5
  br i1 %2292, label %5433, label %2161, !llvm.loop !278

2293:                                             ; preds = %2144, %2428
  %2294 = phi i16 [ 0, %2144 ], [ %2376, %2428 ]
  %2295 = phi i32 [ 0, %2144 ], [ %2377, %2428 ]
  %2296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2145, label %2297, label %2366

2297:                                             ; preds = %2293, %2356
  %2298 = phi i32 [ %2365, %2356 ], [ 0, %2293 ]
  %2299 = phi i64 [ %2307, %2356 ], [ %2149, %2293 ]
  %2300 = phi i64 [ %2364, %2356 ], [ %2148, %2293 ]
  %2301 = phi i32 [ %2362, %2356 ], [ %2296, %2293 ]
  %2302 = sub i32 %2147, %2298
  %2303 = tail call i32 @llvm.smin.i32(i32 %2302, i32 0)
  %2304 = sub i32 %2302, %2303
  %2305 = zext i32 %2304 to i64
  %2306 = add nuw nsw i64 %2305, 1
  %2307 = add nsw i64 %2299, -1
  %2308 = icmp ult i32 %2304, 31
  br i1 %2308, label %2344, label %2309

2309:                                             ; preds = %2297
  %2310 = and i64 %2306, 8589934560
  %2311 = sub i64 %2300, %2310
  br label %2312

2312:                                             ; preds = %2312, %2309
  %2313 = phi i64 [ 0, %2309 ], [ %2336, %2312 ]
  %2314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2332, %2312 ]
  %2315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2333, %2312 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2334, %2312 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2335, %2312 ]
  %2318 = sub i64 %2300, %2313
  %2319 = getelementptr inbounds i32, ptr %11, i64 %2318
  %2320 = getelementptr inbounds i32, ptr %2319, i64 -7
  %2321 = load <8 x i32>, ptr %2320, align 4, !tbaa !5
  %2322 = shufflevector <8 x i32> %2321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2323 = getelementptr inbounds i32, ptr %2319, i64 -15
  %2324 = load <8 x i32>, ptr %2323, align 4, !tbaa !5
  %2325 = shufflevector <8 x i32> %2324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2326 = getelementptr inbounds i32, ptr %2319, i64 -23
  %2327 = load <8 x i32>, ptr %2326, align 4, !tbaa !5
  %2328 = shufflevector <8 x i32> %2327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2329 = getelementptr inbounds i32, ptr %2319, i64 -31
  %2330 = load <8 x i32>, ptr %2329, align 4, !tbaa !5
  %2331 = shufflevector <8 x i32> %2330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2332 = mul <8 x i32> %2322, %2314
  %2333 = mul <8 x i32> %2325, %2315
  %2334 = mul <8 x i32> %2328, %2316
  %2335 = mul <8 x i32> %2331, %2317
  %2336 = add nuw i64 %2313, 32
  %2337 = icmp eq i64 %2336, %2310
  br i1 %2337, label %2338, label %2312, !llvm.loop !279

2338:                                             ; preds = %2312
  %2339 = mul <8 x i32> %2333, %2332
  %2340 = mul <8 x i32> %2334, %2339
  %2341 = mul <8 x i32> %2335, %2340
  %2342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2341)
  %2343 = icmp eq i64 %2306, %2310
  br i1 %2343, label %2356, label %2344

2344:                                             ; preds = %2297, %2338
  %2345 = phi i64 [ %2300, %2297 ], [ %2311, %2338 ]
  %2346 = phi i32 [ 1, %2297 ], [ %2342, %2338 ]
  br label %2347

2347:                                             ; preds = %2344, %2347
  %2348 = phi i64 [ %2353, %2347 ], [ %2345, %2344 ]
  %2349 = phi i32 [ %2352, %2347 ], [ %2346, %2344 ]
  %2350 = getelementptr inbounds i32, ptr %11, i64 %2348
  %2351 = load i32, ptr %2350, align 4, !tbaa !5
  %2352 = mul nsw i32 %2351, %2349
  %2353 = add nsw i64 %2348, -1
  %2354 = trunc i64 %2348 to i32
  %2355 = icmp sgt i32 %2354, 0
  br i1 %2355, label %2347, label %2356, !llvm.loop !280

2356:                                             ; preds = %2347, %2338
  %2357 = phi i32 [ %2342, %2338 ], [ %2352, %2347 ]
  %2358 = and i64 %2307, 4294967295
  %2359 = getelementptr inbounds i32, ptr %6, i64 %2358
  %2360 = load i32, ptr %2359, align 4, !tbaa !5
  %2361 = mul nsw i32 %2360, %2357
  %2362 = add nsw i32 %2361, %2301
  %2363 = icmp sgt i64 %2299, 2
  %2364 = add nsw i64 %2300, -1
  %2365 = add i32 %2298, 1
  br i1 %2363, label %2297, label %2366, !llvm.loop !281

2366:                                             ; preds = %2356, %2293
  %2367 = phi i32 [ %2296, %2293 ], [ %2362, %2356 ]
  %2368 = icmp slt i32 %2367, %5
  br i1 %2368, label %2371, label %2369

2369:                                             ; preds = %2366
  %2370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2371:                                             ; preds = %2366
  %2372 = sext i32 %2367 to i64
  %2373 = getelementptr inbounds i32, ptr %1826, i64 %2372
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = trunc i32 %2374 to i16
  %2376 = add i16 %2294, %2375
  store i16 %2376, ptr %1828, align 2, !tbaa !78
  %2377 = add nuw nsw i32 %2295, 1
  br i1 %2146, label %2378, label %2428

2378:                                             ; preds = %2371
  %2379 = load i32, ptr %4, align 4, !tbaa !5
  %2380 = load i32, ptr %12, align 4, !tbaa !5
  %2381 = add nsw i32 %2380, -1
  %2382 = icmp slt i32 %2379, %2381
  br i1 %2382, label %2405, label %2383

2383:                                             ; preds = %2378
  %2384 = icmp eq i32 %2379, %2381
  br i1 %2384, label %2385, label %2421

2385:                                             ; preds = %2383
  store i32 0, ptr %4, align 4, !tbaa !5
  %2386 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2386, ptr %6, align 4, !tbaa !5
  br i1 %2151, label %2428, label %2387

2387:                                             ; preds = %2385, %2415
  %2388 = phi i64 [ %2419, %2415 ], [ 1, %2385 ]
  %2389 = getelementptr inbounds i32, ptr %4, i64 %2388
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = getelementptr inbounds i32, ptr %12, i64 %2388
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = add nsw i32 %2392, -1
  %2394 = icmp slt i32 %2390, %2393
  br i1 %2394, label %2395, label %2413

2395:                                             ; preds = %2387
  br i1 %2382, label %2405, label %2396

2396:                                             ; preds = %2395
  %2397 = shl i64 %2388, 32
  %2398 = add i64 %2397, -4294967296
  %2399 = ashr exact i64 %2398, 32
  %2400 = getelementptr inbounds i32, ptr %7, i64 %2399
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %6, i64 %2388
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = add nsw i32 %2403, %2401
  store i32 %2404, ptr %2402, align 4, !tbaa !5
  br label %2423

2405:                                             ; preds = %2378, %2395
  %2406 = phi i32 [ %2390, %2395 ], [ %2379, %2378 ]
  %2407 = phi ptr [ %2389, %2395 ], [ %4, %2378 ]
  %2408 = phi i64 [ %2388, %2395 ], [ 0, %2378 ]
  %2409 = add nsw i32 %2406, 1
  store i32 %2409, ptr %2407, align 4, !tbaa !5
  %2410 = getelementptr inbounds i32, ptr %7, i64 %2408
  %2411 = load i32, ptr %2410, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %6, i64 %2408
  br label %2423

2413:                                             ; preds = %2387
  %2414 = icmp eq i32 %2390, %2393
  br i1 %2414, label %2415, label %2421

2415:                                             ; preds = %2413
  store i32 0, ptr %2389, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %8, i64 %2388
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2388
  store i32 %2417, ptr %2418, align 4, !tbaa !5
  %2419 = add nuw nsw i64 %2388, 1
  %2420 = icmp eq i64 %2419, %2149
  br i1 %2420, label %2428, label %2387, !llvm.loop !282

2421:                                             ; preds = %2383, %2413
  %2422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2423:                                             ; preds = %2396, %2405
  %2424 = phi ptr [ %2412, %2405 ], [ %2389, %2396 ]
  %2425 = phi i32 [ %2411, %2405 ], [ 1, %2396 ]
  %2426 = load i32, ptr %2424, align 4, !tbaa !5
  %2427 = add nsw i32 %2426, %2425
  store i32 %2427, ptr %2424, align 4, !tbaa !5
  br label %2428

2428:                                             ; preds = %2415, %2423, %2385, %2371
  %2429 = icmp eq i32 %2377, %5
  br i1 %2429, label %5440, label %2293, !llvm.loop !283

2430:                                             ; preds = %1833
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

2432:                                             ; preds = %18
  %2433 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2434 = load ptr, ptr %2433, align 8, !tbaa !9
  %2435 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  store i32 0, ptr %2436, align 4, !tbaa !5
  %2437 = icmp eq i32 %13, 0
  br i1 %2437, label %2438, label %2440

2438:                                             ; preds = %2432
  %2439 = load i32, ptr %2434, align 4, !tbaa !5
  store i32 %2439, ptr %2436, align 4, !tbaa !5
  br label %5440

2440:                                             ; preds = %2432
  switch i32 %1, label %3027 [
    i32 1, label %2441
    i32 0, label %2737
  ]

2441:                                             ; preds = %2440
  %2442 = getelementptr inbounds i32, ptr %3, i64 %19
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp sgt i32 %5, 0
  br i1 %2444, label %2455, label %2446

2446:                                             ; preds = %2441
  br i1 %2445, label %2447, label %5440

2447:                                             ; preds = %2446
  %2448 = icmp sgt i32 %13, 1
  %2449 = icmp sgt i32 %13, 0
  %2450 = add i32 %13, -2
  %2451 = zext i32 %2450 to i64
  %2452 = zext i32 %13 to i64
  %2453 = add nuw i32 %5, 1
  %2454 = icmp eq i32 %13, 1
  br label %2601

2455:                                             ; preds = %2441
  br i1 %2445, label %2456, label %5440

2456:                                             ; preds = %2455
  %2457 = icmp sgt i32 %13, 1
  %2458 = icmp sgt i32 %13, 0
  %2459 = add i32 %13, -2
  %2460 = zext i32 %2459 to i64
  %2461 = zext i32 %13 to i64
  %2462 = add nuw i32 %5, 1
  %2463 = icmp eq i32 %13, 1
  br label %2464

2464:                                             ; preds = %2456, %2599
  %2465 = phi i32 [ 0, %2456 ], [ %2551, %2599 ]
  %2466 = phi double [ 0.000000e+00, %2456 ], [ %2550, %2599 ]
  %2467 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2468, label %2537

2468:                                             ; preds = %2464, %2527
  %2469 = phi i32 [ %2536, %2527 ], [ 0, %2464 ]
  %2470 = phi i64 [ %2478, %2527 ], [ %2461, %2464 ]
  %2471 = phi i64 [ %2535, %2527 ], [ %2460, %2464 ]
  %2472 = phi i32 [ %2533, %2527 ], [ %2467, %2464 ]
  %2473 = sub i32 %2459, %2469
  %2474 = tail call i32 @llvm.smin.i32(i32 %2473, i32 0)
  %2475 = sub i32 %2473, %2474
  %2476 = zext i32 %2475 to i64
  %2477 = add nuw nsw i64 %2476, 1
  %2478 = add nsw i64 %2470, -1
  %2479 = icmp ult i32 %2475, 31
  br i1 %2479, label %2515, label %2480

2480:                                             ; preds = %2468
  %2481 = and i64 %2477, 8589934560
  %2482 = sub i64 %2471, %2481
  br label %2483

2483:                                             ; preds = %2483, %2480
  %2484 = phi i64 [ 0, %2480 ], [ %2507, %2483 ]
  %2485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2503, %2483 ]
  %2486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2504, %2483 ]
  %2487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2505, %2483 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2506, %2483 ]
  %2489 = sub i64 %2471, %2484
  %2490 = getelementptr inbounds i32, ptr %9, i64 %2489
  %2491 = getelementptr inbounds i32, ptr %2490, i64 -7
  %2492 = load <8 x i32>, ptr %2491, align 4, !tbaa !5
  %2493 = shufflevector <8 x i32> %2492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2494 = getelementptr inbounds i32, ptr %2490, i64 -15
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2490, i64 -23
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2490, i64 -31
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = mul <8 x i32> %2493, %2485
  %2504 = mul <8 x i32> %2496, %2486
  %2505 = mul <8 x i32> %2499, %2487
  %2506 = mul <8 x i32> %2502, %2488
  %2507 = add nuw i64 %2484, 32
  %2508 = icmp eq i64 %2507, %2481
  br i1 %2508, label %2509, label %2483, !llvm.loop !284

2509:                                             ; preds = %2483
  %2510 = mul <8 x i32> %2504, %2503
  %2511 = mul <8 x i32> %2505, %2510
  %2512 = mul <8 x i32> %2506, %2511
  %2513 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2512)
  %2514 = icmp eq i64 %2477, %2481
  br i1 %2514, label %2527, label %2515

2515:                                             ; preds = %2468, %2509
  %2516 = phi i64 [ %2471, %2468 ], [ %2482, %2509 ]
  %2517 = phi i32 [ 1, %2468 ], [ %2513, %2509 ]
  br label %2518

2518:                                             ; preds = %2515, %2518
  %2519 = phi i64 [ %2524, %2518 ], [ %2516, %2515 ]
  %2520 = phi i32 [ %2523, %2518 ], [ %2517, %2515 ]
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2519
  %2522 = load i32, ptr %2521, align 4, !tbaa !5
  %2523 = mul nsw i32 %2522, %2520
  %2524 = add nsw i64 %2519, -1
  %2525 = trunc i64 %2519 to i32
  %2526 = icmp sgt i32 %2525, 0
  br i1 %2526, label %2518, label %2527, !llvm.loop !285

2527:                                             ; preds = %2518, %2509
  %2528 = phi i32 [ %2513, %2509 ], [ %2523, %2518 ]
  %2529 = and i64 %2478, 4294967295
  %2530 = getelementptr inbounds i32, ptr %6, i64 %2529
  %2531 = load i32, ptr %2530, align 4, !tbaa !5
  %2532 = mul nsw i32 %2531, %2528
  %2533 = add nsw i32 %2532, %2472
  %2534 = icmp sgt i64 %2470, 2
  %2535 = add nsw i64 %2471, -1
  %2536 = add i32 %2469, 1
  br i1 %2534, label %2468, label %2537, !llvm.loop !286

2537:                                             ; preds = %2527, %2464
  %2538 = phi i32 [ %2467, %2464 ], [ %2533, %2527 ]
  %2539 = sext i32 %2538 to i64
  %2540 = getelementptr inbounds double, ptr %2, i64 %2539
  %2541 = load double, ptr %2540, align 8, !tbaa !18
  %2542 = getelementptr inbounds i32, ptr %2434, i64 %2539
  %2543 = load i32, ptr %2542, align 4, !tbaa !5
  %2544 = load i32, ptr %2436, align 4, !tbaa !5
  %2545 = sitofp i32 %2544 to double
  %2546 = sitofp i32 %2543 to double
  %2547 = fmul fast double %2541, %2546
  %2548 = fadd fast double %2547, %2545
  %2549 = fptosi double %2548 to i32
  store i32 %2549, ptr %2436, align 4, !tbaa !5
  %2550 = fadd fast double %2541, %2466
  %2551 = add nuw nsw i32 %2465, 1
  br i1 %2458, label %2552, label %2599

2552:                                             ; preds = %2537
  %2553 = load i32, ptr %4, align 4, !tbaa !5
  %2554 = load i32, ptr %12, align 4, !tbaa !5
  %2555 = add nsw i32 %2554, -1
  %2556 = icmp slt i32 %2553, %2555
  br i1 %2556, label %2576, label %2557

2557:                                             ; preds = %2552
  %2558 = icmp eq i32 %2553, %2555
  br i1 %2558, label %2559, label %2592

2559:                                             ; preds = %2557
  store i32 0, ptr %4, align 4, !tbaa !5
  %2560 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2560, ptr %6, align 4, !tbaa !5
  br i1 %2463, label %2599, label %2561

2561:                                             ; preds = %2559, %2586
  %2562 = phi i64 [ %2590, %2586 ], [ 1, %2559 ]
  %2563 = getelementptr inbounds i32, ptr %4, i64 %2562
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = getelementptr inbounds i32, ptr %12, i64 %2562
  %2566 = load i32, ptr %2565, align 4, !tbaa !5
  %2567 = add nsw i32 %2566, -1
  %2568 = icmp slt i32 %2564, %2567
  br i1 %2568, label %2569, label %2584

2569:                                             ; preds = %2561
  br i1 %2556, label %2576, label %2570

2570:                                             ; preds = %2569
  %2571 = getelementptr inbounds i32, ptr %7, i64 %2562
  %2572 = load i32, ptr %2571, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %6, i64 %2562
  %2574 = load i32, ptr %2573, align 4, !tbaa !5
  %2575 = add nsw i32 %2574, %2572
  store i32 %2575, ptr %2573, align 4, !tbaa !5
  br label %2594

2576:                                             ; preds = %2552, %2569
  %2577 = phi i32 [ %2564, %2569 ], [ %2553, %2552 ]
  %2578 = phi ptr [ %2563, %2569 ], [ %4, %2552 ]
  %2579 = phi i64 [ %2562, %2569 ], [ 0, %2552 ]
  %2580 = add nsw i32 %2577, 1
  store i32 %2580, ptr %2578, align 4, !tbaa !5
  %2581 = getelementptr inbounds i32, ptr %7, i64 %2579
  %2582 = load i32, ptr %2581, align 4, !tbaa !5
  %2583 = getelementptr inbounds i32, ptr %6, i64 %2579
  br label %2594

2584:                                             ; preds = %2561
  %2585 = icmp eq i32 %2564, %2567
  br i1 %2585, label %2586, label %2592

2586:                                             ; preds = %2584
  store i32 0, ptr %2563, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %8, i64 %2562
  %2588 = load i32, ptr %2587, align 4, !tbaa !5
  %2589 = getelementptr inbounds i32, ptr %6, i64 %2562
  store i32 %2588, ptr %2589, align 4, !tbaa !5
  %2590 = add nuw nsw i64 %2562, 1
  %2591 = icmp eq i64 %2590, %2461
  br i1 %2591, label %2599, label %2561, !llvm.loop !287

2592:                                             ; preds = %2557, %2584
  %2593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2594:                                             ; preds = %2570, %2576
  %2595 = phi ptr [ %2583, %2576 ], [ %2563, %2570 ]
  %2596 = phi i32 [ %2582, %2576 ], [ 1, %2570 ]
  %2597 = load i32, ptr %2595, align 4, !tbaa !5
  %2598 = add nsw i32 %2597, %2596
  store i32 %2598, ptr %2595, align 4, !tbaa !5
  br label %2599

2599:                                             ; preds = %2586, %2594, %2559, %2537
  %2600 = icmp eq i32 %2551, %5
  br i1 %2600, label %5440, label %2464, !llvm.loop !288

2601:                                             ; preds = %2447, %2735
  %2602 = phi i32 [ 0, %2447 ], [ %2684, %2735 ]
  %2603 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2448, label %2604, label %2673

2604:                                             ; preds = %2601, %2663
  %2605 = phi i32 [ %2672, %2663 ], [ 0, %2601 ]
  %2606 = phi i64 [ %2614, %2663 ], [ %2452, %2601 ]
  %2607 = phi i64 [ %2671, %2663 ], [ %2451, %2601 ]
  %2608 = phi i32 [ %2669, %2663 ], [ %2603, %2601 ]
  %2609 = sub i32 %2450, %2605
  %2610 = tail call i32 @llvm.smin.i32(i32 %2609, i32 0)
  %2611 = sub i32 %2609, %2610
  %2612 = zext i32 %2611 to i64
  %2613 = add nuw nsw i64 %2612, 1
  %2614 = add nsw i64 %2606, -1
  %2615 = icmp ult i32 %2611, 31
  br i1 %2615, label %2651, label %2616

2616:                                             ; preds = %2604
  %2617 = and i64 %2613, 8589934560
  %2618 = sub i64 %2607, %2617
  br label %2619

2619:                                             ; preds = %2619, %2616
  %2620 = phi i64 [ 0, %2616 ], [ %2643, %2619 ]
  %2621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2639, %2619 ]
  %2622 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2640, %2619 ]
  %2623 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2641, %2619 ]
  %2624 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2642, %2619 ]
  %2625 = sub i64 %2607, %2620
  %2626 = getelementptr inbounds i32, ptr %11, i64 %2625
  %2627 = getelementptr inbounds i32, ptr %2626, i64 -7
  %2628 = load <8 x i32>, ptr %2627, align 4, !tbaa !5
  %2629 = shufflevector <8 x i32> %2628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2630 = getelementptr inbounds i32, ptr %2626, i64 -15
  %2631 = load <8 x i32>, ptr %2630, align 4, !tbaa !5
  %2632 = shufflevector <8 x i32> %2631, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2633 = getelementptr inbounds i32, ptr %2626, i64 -23
  %2634 = load <8 x i32>, ptr %2633, align 4, !tbaa !5
  %2635 = shufflevector <8 x i32> %2634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2636 = getelementptr inbounds i32, ptr %2626, i64 -31
  %2637 = load <8 x i32>, ptr %2636, align 4, !tbaa !5
  %2638 = shufflevector <8 x i32> %2637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2639 = mul <8 x i32> %2629, %2621
  %2640 = mul <8 x i32> %2632, %2622
  %2641 = mul <8 x i32> %2635, %2623
  %2642 = mul <8 x i32> %2638, %2624
  %2643 = add nuw i64 %2620, 32
  %2644 = icmp eq i64 %2643, %2617
  br i1 %2644, label %2645, label %2619, !llvm.loop !289

2645:                                             ; preds = %2619
  %2646 = mul <8 x i32> %2640, %2639
  %2647 = mul <8 x i32> %2641, %2646
  %2648 = mul <8 x i32> %2642, %2647
  %2649 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2648)
  %2650 = icmp eq i64 %2613, %2617
  br i1 %2650, label %2663, label %2651

2651:                                             ; preds = %2604, %2645
  %2652 = phi i64 [ %2607, %2604 ], [ %2618, %2645 ]
  %2653 = phi i32 [ 1, %2604 ], [ %2649, %2645 ]
  br label %2654

2654:                                             ; preds = %2651, %2654
  %2655 = phi i64 [ %2660, %2654 ], [ %2652, %2651 ]
  %2656 = phi i32 [ %2659, %2654 ], [ %2653, %2651 ]
  %2657 = getelementptr inbounds i32, ptr %11, i64 %2655
  %2658 = load i32, ptr %2657, align 4, !tbaa !5
  %2659 = mul nsw i32 %2658, %2656
  %2660 = add nsw i64 %2655, -1
  %2661 = trunc i64 %2655 to i32
  %2662 = icmp sgt i32 %2661, 0
  br i1 %2662, label %2654, label %2663, !llvm.loop !290

2663:                                             ; preds = %2654, %2645
  %2664 = phi i32 [ %2649, %2645 ], [ %2659, %2654 ]
  %2665 = and i64 %2614, 4294967295
  %2666 = getelementptr inbounds i32, ptr %6, i64 %2665
  %2667 = load i32, ptr %2666, align 4, !tbaa !5
  %2668 = mul nsw i32 %2667, %2664
  %2669 = add nsw i32 %2668, %2608
  %2670 = icmp sgt i64 %2606, 2
  %2671 = add nsw i64 %2607, -1
  %2672 = add i32 %2605, 1
  br i1 %2670, label %2604, label %2673, !llvm.loop !291

2673:                                             ; preds = %2663, %2601
  %2674 = phi i32 [ %2603, %2601 ], [ %2669, %2663 ]
  %2675 = icmp slt i32 %2674, %5
  br i1 %2675, label %2678, label %2676

2676:                                             ; preds = %2673
  %2677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2678:                                             ; preds = %2673
  %2679 = sext i32 %2674 to i64
  %2680 = getelementptr inbounds i32, ptr %2434, i64 %2679
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = load i32, ptr %2436, align 4, !tbaa !5
  %2683 = add i32 %2682, %2681
  store i32 %2683, ptr %2436, align 4, !tbaa !5
  %2684 = add nuw nsw i32 %2602, 1
  br i1 %2449, label %2685, label %2735

2685:                                             ; preds = %2678
  %2686 = load i32, ptr %4, align 4, !tbaa !5
  %2687 = load i32, ptr %12, align 4, !tbaa !5
  %2688 = add nsw i32 %2687, -1
  %2689 = icmp slt i32 %2686, %2688
  br i1 %2689, label %2712, label %2690

2690:                                             ; preds = %2685
  %2691 = icmp eq i32 %2686, %2688
  br i1 %2691, label %2692, label %2728

2692:                                             ; preds = %2690
  store i32 0, ptr %4, align 4, !tbaa !5
  %2693 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2693, ptr %6, align 4, !tbaa !5
  br i1 %2454, label %2735, label %2694

2694:                                             ; preds = %2692, %2722
  %2695 = phi i64 [ %2726, %2722 ], [ 1, %2692 ]
  %2696 = getelementptr inbounds i32, ptr %4, i64 %2695
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = getelementptr inbounds i32, ptr %12, i64 %2695
  %2699 = load i32, ptr %2698, align 4, !tbaa !5
  %2700 = add nsw i32 %2699, -1
  %2701 = icmp slt i32 %2697, %2700
  br i1 %2701, label %2702, label %2720

2702:                                             ; preds = %2694
  br i1 %2689, label %2712, label %2703

2703:                                             ; preds = %2702
  %2704 = shl i64 %2695, 32
  %2705 = add i64 %2704, -4294967296
  %2706 = ashr exact i64 %2705, 32
  %2707 = getelementptr inbounds i32, ptr %7, i64 %2706
  %2708 = load i32, ptr %2707, align 4, !tbaa !5
  %2709 = getelementptr inbounds i32, ptr %6, i64 %2695
  %2710 = load i32, ptr %2709, align 4, !tbaa !5
  %2711 = add nsw i32 %2710, %2708
  store i32 %2711, ptr %2709, align 4, !tbaa !5
  br label %2730

2712:                                             ; preds = %2685, %2702
  %2713 = phi i32 [ %2697, %2702 ], [ %2686, %2685 ]
  %2714 = phi ptr [ %2696, %2702 ], [ %4, %2685 ]
  %2715 = phi i64 [ %2695, %2702 ], [ 0, %2685 ]
  %2716 = add nsw i32 %2713, 1
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  %2717 = getelementptr inbounds i32, ptr %7, i64 %2715
  %2718 = load i32, ptr %2717, align 4, !tbaa !5
  %2719 = getelementptr inbounds i32, ptr %6, i64 %2715
  br label %2730

2720:                                             ; preds = %2694
  %2721 = icmp eq i32 %2697, %2700
  br i1 %2721, label %2722, label %2728

2722:                                             ; preds = %2720
  store i32 0, ptr %2696, align 4, !tbaa !5
  %2723 = getelementptr inbounds i32, ptr %8, i64 %2695
  %2724 = load i32, ptr %2723, align 4, !tbaa !5
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2695
  store i32 %2724, ptr %2725, align 4, !tbaa !5
  %2726 = add nuw nsw i64 %2695, 1
  %2727 = icmp eq i64 %2726, %2452
  br i1 %2727, label %2735, label %2694, !llvm.loop !292

2728:                                             ; preds = %2690, %2720
  %2729 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2730:                                             ; preds = %2703, %2712
  %2731 = phi ptr [ %2719, %2712 ], [ %2696, %2703 ]
  %2732 = phi i32 [ %2718, %2712 ], [ 1, %2703 ]
  %2733 = load i32, ptr %2731, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, %2732
  store i32 %2734, ptr %2731, align 4, !tbaa !5
  br label %2735

2735:                                             ; preds = %2722, %2730, %2692, %2678
  %2736 = icmp eq i32 %2684, %5
  br i1 %2736, label %5440, label %2601, !llvm.loop !293

2737:                                             ; preds = %2440
  %2738 = getelementptr inbounds i32, ptr %3, i64 %19
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = icmp eq i32 %2739, 0
  %2741 = icmp sgt i32 %5, 0
  br i1 %2740, label %2751, label %2742

2742:                                             ; preds = %2737
  br i1 %2741, label %2743, label %5440

2743:                                             ; preds = %2742
  %2744 = icmp sgt i32 %13, 1
  %2745 = icmp sgt i32 %13, 0
  %2746 = add i32 %13, -2
  %2747 = zext i32 %2746 to i64
  %2748 = zext i32 %13 to i64
  %2749 = add nuw i32 %5, 1
  %2750 = icmp eq i32 %13, 1
  br label %2891

2751:                                             ; preds = %2737
  br i1 %2741, label %2752, label %5440

2752:                                             ; preds = %2751
  %2753 = icmp sgt i32 %13, 1
  %2754 = icmp sgt i32 %13, 0
  %2755 = add i32 %13, -2
  %2756 = zext i32 %2755 to i64
  %2757 = zext i32 %13 to i64
  %2758 = add nuw i32 %5, 1
  %2759 = icmp eq i32 %13, 1
  br label %2760

2760:                                             ; preds = %2752, %2889
  %2761 = phi i32 [ 0, %2752 ], [ %2841, %2889 ]
  %2762 = phi double [ 0.000000e+00, %2752 ], [ %2840, %2889 ]
  %2763 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2753, label %2764, label %2833

2764:                                             ; preds = %2760, %2823
  %2765 = phi i32 [ %2832, %2823 ], [ 0, %2760 ]
  %2766 = phi i64 [ %2774, %2823 ], [ %2757, %2760 ]
  %2767 = phi i64 [ %2831, %2823 ], [ %2756, %2760 ]
  %2768 = phi i32 [ %2829, %2823 ], [ %2763, %2760 ]
  %2769 = sub i32 %2755, %2765
  %2770 = tail call i32 @llvm.smin.i32(i32 %2769, i32 0)
  %2771 = sub i32 %2769, %2770
  %2772 = zext i32 %2771 to i64
  %2773 = add nuw nsw i64 %2772, 1
  %2774 = add nsw i64 %2766, -1
  %2775 = icmp ult i32 %2771, 31
  br i1 %2775, label %2811, label %2776

2776:                                             ; preds = %2764
  %2777 = and i64 %2773, 8589934560
  %2778 = sub i64 %2767, %2777
  br label %2779

2779:                                             ; preds = %2779, %2776
  %2780 = phi i64 [ 0, %2776 ], [ %2803, %2779 ]
  %2781 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2799, %2779 ]
  %2782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2800, %2779 ]
  %2783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2801, %2779 ]
  %2784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2802, %2779 ]
  %2785 = sub i64 %2767, %2780
  %2786 = getelementptr inbounds i32, ptr %9, i64 %2785
  %2787 = getelementptr inbounds i32, ptr %2786, i64 -7
  %2788 = load <8 x i32>, ptr %2787, align 4, !tbaa !5
  %2789 = shufflevector <8 x i32> %2788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2790 = getelementptr inbounds i32, ptr %2786, i64 -15
  %2791 = load <8 x i32>, ptr %2790, align 4, !tbaa !5
  %2792 = shufflevector <8 x i32> %2791, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2793 = getelementptr inbounds i32, ptr %2786, i64 -23
  %2794 = load <8 x i32>, ptr %2793, align 4, !tbaa !5
  %2795 = shufflevector <8 x i32> %2794, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2796 = getelementptr inbounds i32, ptr %2786, i64 -31
  %2797 = load <8 x i32>, ptr %2796, align 4, !tbaa !5
  %2798 = shufflevector <8 x i32> %2797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2799 = mul <8 x i32> %2789, %2781
  %2800 = mul <8 x i32> %2792, %2782
  %2801 = mul <8 x i32> %2795, %2783
  %2802 = mul <8 x i32> %2798, %2784
  %2803 = add nuw i64 %2780, 32
  %2804 = icmp eq i64 %2803, %2777
  br i1 %2804, label %2805, label %2779, !llvm.loop !294

2805:                                             ; preds = %2779
  %2806 = mul <8 x i32> %2800, %2799
  %2807 = mul <8 x i32> %2801, %2806
  %2808 = mul <8 x i32> %2802, %2807
  %2809 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2808)
  %2810 = icmp eq i64 %2773, %2777
  br i1 %2810, label %2823, label %2811

2811:                                             ; preds = %2764, %2805
  %2812 = phi i64 [ %2767, %2764 ], [ %2778, %2805 ]
  %2813 = phi i32 [ 1, %2764 ], [ %2809, %2805 ]
  br label %2814

2814:                                             ; preds = %2811, %2814
  %2815 = phi i64 [ %2820, %2814 ], [ %2812, %2811 ]
  %2816 = phi i32 [ %2819, %2814 ], [ %2813, %2811 ]
  %2817 = getelementptr inbounds i32, ptr %9, i64 %2815
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = mul nsw i32 %2818, %2816
  %2820 = add nsw i64 %2815, -1
  %2821 = trunc i64 %2815 to i32
  %2822 = icmp sgt i32 %2821, 0
  br i1 %2822, label %2814, label %2823, !llvm.loop !295

2823:                                             ; preds = %2814, %2805
  %2824 = phi i32 [ %2809, %2805 ], [ %2819, %2814 ]
  %2825 = and i64 %2774, 4294967295
  %2826 = getelementptr inbounds i32, ptr %6, i64 %2825
  %2827 = load i32, ptr %2826, align 4, !tbaa !5
  %2828 = mul nsw i32 %2827, %2824
  %2829 = add nsw i32 %2828, %2768
  %2830 = icmp sgt i64 %2766, 2
  %2831 = add nsw i64 %2767, -1
  %2832 = add i32 %2765, 1
  br i1 %2830, label %2764, label %2833, !llvm.loop !296

2833:                                             ; preds = %2823, %2760
  %2834 = phi i32 [ %2763, %2760 ], [ %2829, %2823 ]
  %2835 = sext i32 %2834 to i64
  %2836 = getelementptr inbounds i32, ptr %2434, i64 %2835
  %2837 = load i32, ptr %2836, align 4, !tbaa !5
  %2838 = load i32, ptr %2436, align 4, !tbaa !5
  %2839 = add nsw i32 %2838, %2837
  store i32 %2839, ptr %2436, align 4, !tbaa !5
  %2840 = fadd fast double %2762, 1.000000e+00
  %2841 = add nuw nsw i32 %2761, 1
  br i1 %2754, label %2842, label %2889

2842:                                             ; preds = %2833
  %2843 = load i32, ptr %4, align 4, !tbaa !5
  %2844 = load i32, ptr %12, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, -1
  %2846 = icmp slt i32 %2843, %2845
  br i1 %2846, label %2866, label %2847

2847:                                             ; preds = %2842
  %2848 = icmp eq i32 %2843, %2845
  br i1 %2848, label %2849, label %2882

2849:                                             ; preds = %2847
  store i32 0, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2850, ptr %6, align 4, !tbaa !5
  br i1 %2759, label %2889, label %2851

2851:                                             ; preds = %2849, %2876
  %2852 = phi i64 [ %2880, %2876 ], [ 1, %2849 ]
  %2853 = getelementptr inbounds i32, ptr %4, i64 %2852
  %2854 = load i32, ptr %2853, align 4, !tbaa !5
  %2855 = getelementptr inbounds i32, ptr %12, i64 %2852
  %2856 = load i32, ptr %2855, align 4, !tbaa !5
  %2857 = add nsw i32 %2856, -1
  %2858 = icmp slt i32 %2854, %2857
  br i1 %2858, label %2859, label %2874

2859:                                             ; preds = %2851
  br i1 %2846, label %2866, label %2860

2860:                                             ; preds = %2859
  %2861 = getelementptr inbounds i32, ptr %7, i64 %2852
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %6, i64 %2852
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = add nsw i32 %2864, %2862
  store i32 %2865, ptr %2863, align 4, !tbaa !5
  br label %2884

2866:                                             ; preds = %2842, %2859
  %2867 = phi i32 [ %2854, %2859 ], [ %2843, %2842 ]
  %2868 = phi ptr [ %2853, %2859 ], [ %4, %2842 ]
  %2869 = phi i64 [ %2852, %2859 ], [ 0, %2842 ]
  %2870 = add nsw i32 %2867, 1
  store i32 %2870, ptr %2868, align 4, !tbaa !5
  %2871 = getelementptr inbounds i32, ptr %7, i64 %2869
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = getelementptr inbounds i32, ptr %6, i64 %2869
  br label %2884

2874:                                             ; preds = %2851
  %2875 = icmp eq i32 %2854, %2857
  br i1 %2875, label %2876, label %2882

2876:                                             ; preds = %2874
  store i32 0, ptr %2853, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %8, i64 %2852
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2852
  store i32 %2878, ptr %2879, align 4, !tbaa !5
  %2880 = add nuw nsw i64 %2852, 1
  %2881 = icmp eq i64 %2880, %2757
  br i1 %2881, label %2889, label %2851, !llvm.loop !297

2882:                                             ; preds = %2847, %2874
  %2883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2884:                                             ; preds = %2860, %2866
  %2885 = phi ptr [ %2873, %2866 ], [ %2853, %2860 ]
  %2886 = phi i32 [ %2872, %2866 ], [ 1, %2860 ]
  %2887 = load i32, ptr %2885, align 4, !tbaa !5
  %2888 = add nsw i32 %2887, %2886
  store i32 %2888, ptr %2885, align 4, !tbaa !5
  br label %2889

2889:                                             ; preds = %2876, %2884, %2849, %2833
  %2890 = icmp eq i32 %2841, %5
  br i1 %2890, label %5440, label %2760, !llvm.loop !298

2891:                                             ; preds = %2743, %3025
  %2892 = phi i32 [ 0, %2743 ], [ %2974, %3025 ]
  %2893 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2744, label %2894, label %2963

2894:                                             ; preds = %2891, %2953
  %2895 = phi i32 [ %2962, %2953 ], [ 0, %2891 ]
  %2896 = phi i64 [ %2904, %2953 ], [ %2748, %2891 ]
  %2897 = phi i64 [ %2961, %2953 ], [ %2747, %2891 ]
  %2898 = phi i32 [ %2959, %2953 ], [ %2893, %2891 ]
  %2899 = sub i32 %2746, %2895
  %2900 = tail call i32 @llvm.smin.i32(i32 %2899, i32 0)
  %2901 = sub i32 %2899, %2900
  %2902 = zext i32 %2901 to i64
  %2903 = add nuw nsw i64 %2902, 1
  %2904 = add nsw i64 %2896, -1
  %2905 = icmp ult i32 %2901, 31
  br i1 %2905, label %2941, label %2906

2906:                                             ; preds = %2894
  %2907 = and i64 %2903, 8589934560
  %2908 = sub i64 %2897, %2907
  br label %2909

2909:                                             ; preds = %2909, %2906
  %2910 = phi i64 [ 0, %2906 ], [ %2933, %2909 ]
  %2911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2929, %2909 ]
  %2912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2930, %2909 ]
  %2913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2931, %2909 ]
  %2914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2932, %2909 ]
  %2915 = sub i64 %2897, %2910
  %2916 = getelementptr inbounds i32, ptr %11, i64 %2915
  %2917 = getelementptr inbounds i32, ptr %2916, i64 -7
  %2918 = load <8 x i32>, ptr %2917, align 4, !tbaa !5
  %2919 = shufflevector <8 x i32> %2918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2920 = getelementptr inbounds i32, ptr %2916, i64 -15
  %2921 = load <8 x i32>, ptr %2920, align 4, !tbaa !5
  %2922 = shufflevector <8 x i32> %2921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2923 = getelementptr inbounds i32, ptr %2916, i64 -23
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2916, i64 -31
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = mul <8 x i32> %2919, %2911
  %2930 = mul <8 x i32> %2922, %2912
  %2931 = mul <8 x i32> %2925, %2913
  %2932 = mul <8 x i32> %2928, %2914
  %2933 = add nuw i64 %2910, 32
  %2934 = icmp eq i64 %2933, %2907
  br i1 %2934, label %2935, label %2909, !llvm.loop !299

2935:                                             ; preds = %2909
  %2936 = mul <8 x i32> %2930, %2929
  %2937 = mul <8 x i32> %2931, %2936
  %2938 = mul <8 x i32> %2932, %2937
  %2939 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2938)
  %2940 = icmp eq i64 %2903, %2907
  br i1 %2940, label %2953, label %2941

2941:                                             ; preds = %2894, %2935
  %2942 = phi i64 [ %2897, %2894 ], [ %2908, %2935 ]
  %2943 = phi i32 [ 1, %2894 ], [ %2939, %2935 ]
  br label %2944

2944:                                             ; preds = %2941, %2944
  %2945 = phi i64 [ %2950, %2944 ], [ %2942, %2941 ]
  %2946 = phi i32 [ %2949, %2944 ], [ %2943, %2941 ]
  %2947 = getelementptr inbounds i32, ptr %11, i64 %2945
  %2948 = load i32, ptr %2947, align 4, !tbaa !5
  %2949 = mul nsw i32 %2948, %2946
  %2950 = add nsw i64 %2945, -1
  %2951 = trunc i64 %2945 to i32
  %2952 = icmp sgt i32 %2951, 0
  br i1 %2952, label %2944, label %2953, !llvm.loop !300

2953:                                             ; preds = %2944, %2935
  %2954 = phi i32 [ %2939, %2935 ], [ %2949, %2944 ]
  %2955 = and i64 %2904, 4294967295
  %2956 = getelementptr inbounds i32, ptr %6, i64 %2955
  %2957 = load i32, ptr %2956, align 4, !tbaa !5
  %2958 = mul nsw i32 %2957, %2954
  %2959 = add nsw i32 %2958, %2898
  %2960 = icmp sgt i64 %2896, 2
  %2961 = add nsw i64 %2897, -1
  %2962 = add i32 %2895, 1
  br i1 %2960, label %2894, label %2963, !llvm.loop !301

2963:                                             ; preds = %2953, %2891
  %2964 = phi i32 [ %2893, %2891 ], [ %2959, %2953 ]
  %2965 = icmp slt i32 %2964, %5
  br i1 %2965, label %2968, label %2966

2966:                                             ; preds = %2963
  %2967 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2968:                                             ; preds = %2963
  %2969 = sext i32 %2964 to i64
  %2970 = getelementptr inbounds i32, ptr %2434, i64 %2969
  %2971 = load i32, ptr %2970, align 4, !tbaa !5
  %2972 = load i32, ptr %2436, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2971
  store i32 %2973, ptr %2436, align 4, !tbaa !5
  %2974 = add nuw nsw i32 %2892, 1
  br i1 %2745, label %2975, label %3025

2975:                                             ; preds = %2968
  %2976 = load i32, ptr %4, align 4, !tbaa !5
  %2977 = load i32, ptr %12, align 4, !tbaa !5
  %2978 = add nsw i32 %2977, -1
  %2979 = icmp slt i32 %2976, %2978
  br i1 %2979, label %3002, label %2980

2980:                                             ; preds = %2975
  %2981 = icmp eq i32 %2976, %2978
  br i1 %2981, label %2982, label %3018

2982:                                             ; preds = %2980
  store i32 0, ptr %4, align 4, !tbaa !5
  %2983 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2983, ptr %6, align 4, !tbaa !5
  br i1 %2750, label %3025, label %2984

2984:                                             ; preds = %2982, %3012
  %2985 = phi i64 [ %3016, %3012 ], [ 1, %2982 ]
  %2986 = getelementptr inbounds i32, ptr %4, i64 %2985
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = getelementptr inbounds i32, ptr %12, i64 %2985
  %2989 = load i32, ptr %2988, align 4, !tbaa !5
  %2990 = add nsw i32 %2989, -1
  %2991 = icmp slt i32 %2987, %2990
  br i1 %2991, label %2992, label %3010

2992:                                             ; preds = %2984
  br i1 %2979, label %3002, label %2993

2993:                                             ; preds = %2992
  %2994 = shl i64 %2985, 32
  %2995 = add i64 %2994, -4294967296
  %2996 = ashr exact i64 %2995, 32
  %2997 = getelementptr inbounds i32, ptr %7, i64 %2996
  %2998 = load i32, ptr %2997, align 4, !tbaa !5
  %2999 = getelementptr inbounds i32, ptr %6, i64 %2985
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = add nsw i32 %3000, %2998
  store i32 %3001, ptr %2999, align 4, !tbaa !5
  br label %3020

3002:                                             ; preds = %2975, %2992
  %3003 = phi i32 [ %2987, %2992 ], [ %2976, %2975 ]
  %3004 = phi ptr [ %2986, %2992 ], [ %4, %2975 ]
  %3005 = phi i64 [ %2985, %2992 ], [ 0, %2975 ]
  %3006 = add nsw i32 %3003, 1
  store i32 %3006, ptr %3004, align 4, !tbaa !5
  %3007 = getelementptr inbounds i32, ptr %7, i64 %3005
  %3008 = load i32, ptr %3007, align 4, !tbaa !5
  %3009 = getelementptr inbounds i32, ptr %6, i64 %3005
  br label %3020

3010:                                             ; preds = %2984
  %3011 = icmp eq i32 %2987, %2990
  br i1 %3011, label %3012, label %3018

3012:                                             ; preds = %3010
  store i32 0, ptr %2986, align 4, !tbaa !5
  %3013 = getelementptr inbounds i32, ptr %8, i64 %2985
  %3014 = load i32, ptr %3013, align 4, !tbaa !5
  %3015 = getelementptr inbounds i32, ptr %6, i64 %2985
  store i32 %3014, ptr %3015, align 4, !tbaa !5
  %3016 = add nuw nsw i64 %2985, 1
  %3017 = icmp eq i64 %3016, %2748
  br i1 %3017, label %3025, label %2984, !llvm.loop !302

3018:                                             ; preds = %2980, %3010
  %3019 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3020:                                             ; preds = %2993, %3002
  %3021 = phi ptr [ %3009, %3002 ], [ %2986, %2993 ]
  %3022 = phi i32 [ %3008, %3002 ], [ 1, %2993 ]
  %3023 = load i32, ptr %3021, align 4, !tbaa !5
  %3024 = add nsw i32 %3023, %3022
  store i32 %3024, ptr %3021, align 4, !tbaa !5
  br label %3025

3025:                                             ; preds = %3012, %3020, %2982, %2968
  %3026 = icmp eq i32 %2974, %5
  br i1 %3026, label %5440, label %2891, !llvm.loop !303

3027:                                             ; preds = %2440
  %3028 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

3029:                                             ; preds = %18
  %3030 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3031 = load ptr, ptr %3030, align 8, !tbaa !9
  %3032 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3033 = load ptr, ptr %3032, align 8, !tbaa !9
  store i64 0, ptr %3033, align 8, !tbaa !120
  %3034 = icmp eq i32 %13, 0
  br i1 %3034, label %3035, label %3038

3035:                                             ; preds = %3029
  %3036 = load i32, ptr %3031, align 4, !tbaa !5
  %3037 = sext i32 %3036 to i64
  store i64 %3037, ptr %3033, align 8, !tbaa !120
  br label %5440

3038:                                             ; preds = %3029
  switch i32 %1, label %3630 [
    i32 1, label %3039
    i32 0, label %3338
  ]

3039:                                             ; preds = %3038
  %3040 = getelementptr inbounds i32, ptr %3, i64 %19
  %3041 = load i32, ptr %3040, align 4, !tbaa !5
  %3042 = icmp eq i32 %3041, 0
  %3043 = icmp sgt i32 %5, 0
  br i1 %3042, label %3053, label %3044

3044:                                             ; preds = %3039
  br i1 %3043, label %3045, label %5440

3045:                                             ; preds = %3044
  %3046 = icmp sgt i32 %13, 1
  %3047 = icmp sgt i32 %13, 0
  %3048 = add i32 %13, -2
  %3049 = zext i32 %3048 to i64
  %3050 = zext i32 %13 to i64
  %3051 = add nuw i32 %5, 1
  %3052 = icmp eq i32 %13, 1
  br label %3199

3053:                                             ; preds = %3039
  br i1 %3043, label %3054, label %5440

3054:                                             ; preds = %3053
  %3055 = icmp sgt i32 %13, 1
  %3056 = icmp sgt i32 %13, 0
  %3057 = add i32 %13, -2
  %3058 = zext i32 %3057 to i64
  %3059 = zext i32 %13 to i64
  %3060 = add nuw i32 %5, 1
  %3061 = icmp eq i32 %13, 1
  br label %3062

3062:                                             ; preds = %3054, %3197
  %3063 = phi i64 [ 0, %3054 ], [ %3147, %3197 ]
  %3064 = phi i32 [ 0, %3054 ], [ %3149, %3197 ]
  %3065 = phi double [ 0.000000e+00, %3054 ], [ %3148, %3197 ]
  %3066 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3055, label %3067, label %3136

3067:                                             ; preds = %3062, %3126
  %3068 = phi i32 [ %3135, %3126 ], [ 0, %3062 ]
  %3069 = phi i64 [ %3077, %3126 ], [ %3059, %3062 ]
  %3070 = phi i64 [ %3134, %3126 ], [ %3058, %3062 ]
  %3071 = phi i32 [ %3132, %3126 ], [ %3066, %3062 ]
  %3072 = sub i32 %3057, %3068
  %3073 = tail call i32 @llvm.smin.i32(i32 %3072, i32 0)
  %3074 = sub i32 %3072, %3073
  %3075 = zext i32 %3074 to i64
  %3076 = add nuw nsw i64 %3075, 1
  %3077 = add nsw i64 %3069, -1
  %3078 = icmp ult i32 %3074, 31
  br i1 %3078, label %3114, label %3079

3079:                                             ; preds = %3067
  %3080 = and i64 %3076, 8589934560
  %3081 = sub i64 %3070, %3080
  br label %3082

3082:                                             ; preds = %3082, %3079
  %3083 = phi i64 [ 0, %3079 ], [ %3106, %3082 ]
  %3084 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3102, %3082 ]
  %3085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3103, %3082 ]
  %3086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3104, %3082 ]
  %3087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3105, %3082 ]
  %3088 = sub i64 %3070, %3083
  %3089 = getelementptr inbounds i32, ptr %9, i64 %3088
  %3090 = getelementptr inbounds i32, ptr %3089, i64 -7
  %3091 = load <8 x i32>, ptr %3090, align 4, !tbaa !5
  %3092 = shufflevector <8 x i32> %3091, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3093 = getelementptr inbounds i32, ptr %3089, i64 -15
  %3094 = load <8 x i32>, ptr %3093, align 4, !tbaa !5
  %3095 = shufflevector <8 x i32> %3094, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3096 = getelementptr inbounds i32, ptr %3089, i64 -23
  %3097 = load <8 x i32>, ptr %3096, align 4, !tbaa !5
  %3098 = shufflevector <8 x i32> %3097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3099 = getelementptr inbounds i32, ptr %3089, i64 -31
  %3100 = load <8 x i32>, ptr %3099, align 4, !tbaa !5
  %3101 = shufflevector <8 x i32> %3100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3102 = mul <8 x i32> %3092, %3084
  %3103 = mul <8 x i32> %3095, %3085
  %3104 = mul <8 x i32> %3098, %3086
  %3105 = mul <8 x i32> %3101, %3087
  %3106 = add nuw i64 %3083, 32
  %3107 = icmp eq i64 %3106, %3080
  br i1 %3107, label %3108, label %3082, !llvm.loop !304

3108:                                             ; preds = %3082
  %3109 = mul <8 x i32> %3103, %3102
  %3110 = mul <8 x i32> %3104, %3109
  %3111 = mul <8 x i32> %3105, %3110
  %3112 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3111)
  %3113 = icmp eq i64 %3076, %3080
  br i1 %3113, label %3126, label %3114

3114:                                             ; preds = %3067, %3108
  %3115 = phi i64 [ %3070, %3067 ], [ %3081, %3108 ]
  %3116 = phi i32 [ 1, %3067 ], [ %3112, %3108 ]
  br label %3117

3117:                                             ; preds = %3114, %3117
  %3118 = phi i64 [ %3123, %3117 ], [ %3115, %3114 ]
  %3119 = phi i32 [ %3122, %3117 ], [ %3116, %3114 ]
  %3120 = getelementptr inbounds i32, ptr %9, i64 %3118
  %3121 = load i32, ptr %3120, align 4, !tbaa !5
  %3122 = mul nsw i32 %3121, %3119
  %3123 = add nsw i64 %3118, -1
  %3124 = trunc i64 %3118 to i32
  %3125 = icmp sgt i32 %3124, 0
  br i1 %3125, label %3117, label %3126, !llvm.loop !305

3126:                                             ; preds = %3117, %3108
  %3127 = phi i32 [ %3112, %3108 ], [ %3122, %3117 ]
  %3128 = and i64 %3077, 4294967295
  %3129 = getelementptr inbounds i32, ptr %6, i64 %3128
  %3130 = load i32, ptr %3129, align 4, !tbaa !5
  %3131 = mul nsw i32 %3130, %3127
  %3132 = add nsw i32 %3131, %3071
  %3133 = icmp sgt i64 %3069, 2
  %3134 = add nsw i64 %3070, -1
  %3135 = add i32 %3068, 1
  br i1 %3133, label %3067, label %3136, !llvm.loop !306

3136:                                             ; preds = %3126, %3062
  %3137 = phi i32 [ %3066, %3062 ], [ %3132, %3126 ]
  %3138 = sext i32 %3137 to i64
  %3139 = getelementptr inbounds double, ptr %2, i64 %3138
  %3140 = load double, ptr %3139, align 8, !tbaa !18
  %3141 = getelementptr inbounds i32, ptr %3031, i64 %3138
  %3142 = load i32, ptr %3141, align 4, !tbaa !5
  %3143 = sitofp i64 %3063 to double
  %3144 = sitofp i32 %3142 to double
  %3145 = fmul fast double %3140, %3144
  %3146 = fadd fast double %3145, %3143
  %3147 = fptosi double %3146 to i64
  %3148 = fadd fast double %3140, %3065
  %3149 = add nuw nsw i32 %3064, 1
  br i1 %3056, label %3150, label %3197

3150:                                             ; preds = %3136
  %3151 = load i32, ptr %4, align 4, !tbaa !5
  %3152 = load i32, ptr %12, align 4, !tbaa !5
  %3153 = add nsw i32 %3152, -1
  %3154 = icmp slt i32 %3151, %3153
  br i1 %3154, label %3174, label %3155

3155:                                             ; preds = %3150
  %3156 = icmp eq i32 %3151, %3153
  br i1 %3156, label %3157, label %3190

3157:                                             ; preds = %3155
  store i32 0, ptr %4, align 4, !tbaa !5
  %3158 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3158, ptr %6, align 4, !tbaa !5
  br i1 %3061, label %3197, label %3159

3159:                                             ; preds = %3157, %3184
  %3160 = phi i64 [ %3188, %3184 ], [ 1, %3157 ]
  %3161 = getelementptr inbounds i32, ptr %4, i64 %3160
  %3162 = load i32, ptr %3161, align 4, !tbaa !5
  %3163 = getelementptr inbounds i32, ptr %12, i64 %3160
  %3164 = load i32, ptr %3163, align 4, !tbaa !5
  %3165 = add nsw i32 %3164, -1
  %3166 = icmp slt i32 %3162, %3165
  br i1 %3166, label %3167, label %3182

3167:                                             ; preds = %3159
  br i1 %3154, label %3174, label %3168

3168:                                             ; preds = %3167
  %3169 = getelementptr inbounds i32, ptr %7, i64 %3160
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %6, i64 %3160
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, %3170
  store i32 %3173, ptr %3171, align 4, !tbaa !5
  br label %3192

3174:                                             ; preds = %3150, %3167
  %3175 = phi i32 [ %3162, %3167 ], [ %3151, %3150 ]
  %3176 = phi ptr [ %3161, %3167 ], [ %4, %3150 ]
  %3177 = phi i64 [ %3160, %3167 ], [ 0, %3150 ]
  %3178 = add nsw i32 %3175, 1
  store i32 %3178, ptr %3176, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %7, i64 %3177
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = getelementptr inbounds i32, ptr %6, i64 %3177
  br label %3192

3182:                                             ; preds = %3159
  %3183 = icmp eq i32 %3162, %3165
  br i1 %3183, label %3184, label %3190

3184:                                             ; preds = %3182
  store i32 0, ptr %3161, align 4, !tbaa !5
  %3185 = getelementptr inbounds i32, ptr %8, i64 %3160
  %3186 = load i32, ptr %3185, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %6, i64 %3160
  store i32 %3186, ptr %3187, align 4, !tbaa !5
  %3188 = add nuw nsw i64 %3160, 1
  %3189 = icmp eq i64 %3188, %3059
  br i1 %3189, label %3197, label %3159, !llvm.loop !307

3190:                                             ; preds = %3155, %3182
  store i64 %3147, ptr %3033, align 8, !tbaa !120
  %3191 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3192:                                             ; preds = %3168, %3174
  %3193 = phi ptr [ %3181, %3174 ], [ %3161, %3168 ]
  %3194 = phi i32 [ %3180, %3174 ], [ 1, %3168 ]
  %3195 = load i32, ptr %3193, align 4, !tbaa !5
  %3196 = add nsw i32 %3195, %3194
  store i32 %3196, ptr %3193, align 4, !tbaa !5
  br label %3197

3197:                                             ; preds = %3184, %3192, %3157, %3136
  %3198 = icmp eq i32 %3149, %5
  br i1 %3198, label %5434, label %3062, !llvm.loop !308

3199:                                             ; preds = %3045, %3336
  %3200 = phi i64 [ 0, %3045 ], [ %3284, %3336 ]
  %3201 = phi i32 [ 0, %3045 ], [ %3285, %3336 ]
  %3202 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3046, label %3203, label %3272

3203:                                             ; preds = %3199, %3262
  %3204 = phi i32 [ %3271, %3262 ], [ 0, %3199 ]
  %3205 = phi i64 [ %3213, %3262 ], [ %3050, %3199 ]
  %3206 = phi i64 [ %3270, %3262 ], [ %3049, %3199 ]
  %3207 = phi i32 [ %3268, %3262 ], [ %3202, %3199 ]
  %3208 = sub i32 %3048, %3204
  %3209 = tail call i32 @llvm.smin.i32(i32 %3208, i32 0)
  %3210 = sub i32 %3208, %3209
  %3211 = zext i32 %3210 to i64
  %3212 = add nuw nsw i64 %3211, 1
  %3213 = add nsw i64 %3205, -1
  %3214 = icmp ult i32 %3210, 31
  br i1 %3214, label %3250, label %3215

3215:                                             ; preds = %3203
  %3216 = and i64 %3212, 8589934560
  %3217 = sub i64 %3206, %3216
  br label %3218

3218:                                             ; preds = %3218, %3215
  %3219 = phi i64 [ 0, %3215 ], [ %3242, %3218 ]
  %3220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3238, %3218 ]
  %3221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3239, %3218 ]
  %3222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3240, %3218 ]
  %3223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3241, %3218 ]
  %3224 = sub i64 %3206, %3219
  %3225 = getelementptr inbounds i32, ptr %11, i64 %3224
  %3226 = getelementptr inbounds i32, ptr %3225, i64 -7
  %3227 = load <8 x i32>, ptr %3226, align 4, !tbaa !5
  %3228 = shufflevector <8 x i32> %3227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3229 = getelementptr inbounds i32, ptr %3225, i64 -15
  %3230 = load <8 x i32>, ptr %3229, align 4, !tbaa !5
  %3231 = shufflevector <8 x i32> %3230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3232 = getelementptr inbounds i32, ptr %3225, i64 -23
  %3233 = load <8 x i32>, ptr %3232, align 4, !tbaa !5
  %3234 = shufflevector <8 x i32> %3233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3235 = getelementptr inbounds i32, ptr %3225, i64 -31
  %3236 = load <8 x i32>, ptr %3235, align 4, !tbaa !5
  %3237 = shufflevector <8 x i32> %3236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3238 = mul <8 x i32> %3228, %3220
  %3239 = mul <8 x i32> %3231, %3221
  %3240 = mul <8 x i32> %3234, %3222
  %3241 = mul <8 x i32> %3237, %3223
  %3242 = add nuw i64 %3219, 32
  %3243 = icmp eq i64 %3242, %3216
  br i1 %3243, label %3244, label %3218, !llvm.loop !309

3244:                                             ; preds = %3218
  %3245 = mul <8 x i32> %3239, %3238
  %3246 = mul <8 x i32> %3240, %3245
  %3247 = mul <8 x i32> %3241, %3246
  %3248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3247)
  %3249 = icmp eq i64 %3212, %3216
  br i1 %3249, label %3262, label %3250

3250:                                             ; preds = %3203, %3244
  %3251 = phi i64 [ %3206, %3203 ], [ %3217, %3244 ]
  %3252 = phi i32 [ 1, %3203 ], [ %3248, %3244 ]
  br label %3253

3253:                                             ; preds = %3250, %3253
  %3254 = phi i64 [ %3259, %3253 ], [ %3251, %3250 ]
  %3255 = phi i32 [ %3258, %3253 ], [ %3252, %3250 ]
  %3256 = getelementptr inbounds i32, ptr %11, i64 %3254
  %3257 = load i32, ptr %3256, align 4, !tbaa !5
  %3258 = mul nsw i32 %3257, %3255
  %3259 = add nsw i64 %3254, -1
  %3260 = trunc i64 %3254 to i32
  %3261 = icmp sgt i32 %3260, 0
  br i1 %3261, label %3253, label %3262, !llvm.loop !310

3262:                                             ; preds = %3253, %3244
  %3263 = phi i32 [ %3248, %3244 ], [ %3258, %3253 ]
  %3264 = and i64 %3213, 4294967295
  %3265 = getelementptr inbounds i32, ptr %6, i64 %3264
  %3266 = load i32, ptr %3265, align 4, !tbaa !5
  %3267 = mul nsw i32 %3266, %3263
  %3268 = add nsw i32 %3267, %3207
  %3269 = icmp sgt i64 %3205, 2
  %3270 = add nsw i64 %3206, -1
  %3271 = add i32 %3204, 1
  br i1 %3269, label %3203, label %3272, !llvm.loop !311

3272:                                             ; preds = %3262, %3199
  %3273 = phi i32 [ %3202, %3199 ], [ %3268, %3262 ]
  %3274 = icmp slt i32 %3273, %5
  br i1 %3274, label %3277, label %3275

3275:                                             ; preds = %3272
  %3276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3277:                                             ; preds = %3272
  %3278 = sext i32 %3273 to i64
  %3279 = getelementptr inbounds i32, ptr %3031, i64 %3278
  %3280 = load i32, ptr %3279, align 4, !tbaa !5
  %3281 = sitofp i64 %3200 to double
  %3282 = sitofp i32 %3280 to double
  %3283 = fadd fast double %3281, %3282
  %3284 = fptosi double %3283 to i64
  store i64 %3284, ptr %3033, align 8, !tbaa !120
  %3285 = add nuw nsw i32 %3201, 1
  br i1 %3047, label %3286, label %3336

3286:                                             ; preds = %3277
  %3287 = load i32, ptr %4, align 4, !tbaa !5
  %3288 = load i32, ptr %12, align 4, !tbaa !5
  %3289 = add nsw i32 %3288, -1
  %3290 = icmp slt i32 %3287, %3289
  br i1 %3290, label %3313, label %3291

3291:                                             ; preds = %3286
  %3292 = icmp eq i32 %3287, %3289
  br i1 %3292, label %3293, label %3329

3293:                                             ; preds = %3291
  store i32 0, ptr %4, align 4, !tbaa !5
  %3294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3294, ptr %6, align 4, !tbaa !5
  br i1 %3052, label %3336, label %3295

3295:                                             ; preds = %3293, %3323
  %3296 = phi i64 [ %3327, %3323 ], [ 1, %3293 ]
  %3297 = getelementptr inbounds i32, ptr %4, i64 %3296
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = getelementptr inbounds i32, ptr %12, i64 %3296
  %3300 = load i32, ptr %3299, align 4, !tbaa !5
  %3301 = add nsw i32 %3300, -1
  %3302 = icmp slt i32 %3298, %3301
  br i1 %3302, label %3303, label %3321

3303:                                             ; preds = %3295
  br i1 %3290, label %3313, label %3304

3304:                                             ; preds = %3303
  %3305 = shl i64 %3296, 32
  %3306 = add i64 %3305, -4294967296
  %3307 = ashr exact i64 %3306, 32
  %3308 = getelementptr inbounds i32, ptr %7, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = getelementptr inbounds i32, ptr %6, i64 %3296
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = add nsw i32 %3311, %3309
  store i32 %3312, ptr %3310, align 4, !tbaa !5
  br label %3331

3313:                                             ; preds = %3286, %3303
  %3314 = phi i32 [ %3298, %3303 ], [ %3287, %3286 ]
  %3315 = phi ptr [ %3297, %3303 ], [ %4, %3286 ]
  %3316 = phi i64 [ %3296, %3303 ], [ 0, %3286 ]
  %3317 = add nsw i32 %3314, 1
  store i32 %3317, ptr %3315, align 4, !tbaa !5
  %3318 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3319 = load i32, ptr %3318, align 4, !tbaa !5
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3316
  br label %3331

3321:                                             ; preds = %3295
  %3322 = icmp eq i32 %3298, %3301
  br i1 %3322, label %3323, label %3329

3323:                                             ; preds = %3321
  store i32 0, ptr %3297, align 4, !tbaa !5
  %3324 = getelementptr inbounds i32, ptr %8, i64 %3296
  %3325 = load i32, ptr %3324, align 4, !tbaa !5
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3296
  store i32 %3325, ptr %3326, align 4, !tbaa !5
  %3327 = add nuw nsw i64 %3296, 1
  %3328 = icmp eq i64 %3327, %3050
  br i1 %3328, label %3336, label %3295, !llvm.loop !312

3329:                                             ; preds = %3291, %3321
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3331:                                             ; preds = %3304, %3313
  %3332 = phi ptr [ %3320, %3313 ], [ %3297, %3304 ]
  %3333 = phi i32 [ %3319, %3313 ], [ 1, %3304 ]
  %3334 = load i32, ptr %3332, align 4, !tbaa !5
  %3335 = add nsw i32 %3334, %3333
  store i32 %3335, ptr %3332, align 4, !tbaa !5
  br label %3336

3336:                                             ; preds = %3323, %3331, %3293, %3277
  %3337 = icmp eq i32 %3285, %5
  br i1 %3337, label %5440, label %3199, !llvm.loop !313

3338:                                             ; preds = %3038
  %3339 = getelementptr inbounds i32, ptr %3, i64 %19
  %3340 = load i32, ptr %3339, align 4, !tbaa !5
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp sgt i32 %5, 0
  br i1 %3341, label %3352, label %3343

3343:                                             ; preds = %3338
  br i1 %3342, label %3344, label %5440

3344:                                             ; preds = %3343
  %3345 = icmp sgt i32 %13, 1
  %3346 = icmp sgt i32 %13, 0
  %3347 = add i32 %13, -2
  %3348 = zext i32 %3347 to i64
  %3349 = zext i32 %13 to i64
  %3350 = add nuw i32 %5, 1
  %3351 = icmp eq i32 %13, 1
  br label %3493

3352:                                             ; preds = %3338
  br i1 %3342, label %3353, label %5440

3353:                                             ; preds = %3352
  %3354 = icmp sgt i32 %13, 1
  %3355 = icmp sgt i32 %13, 0
  %3356 = add i32 %13, -2
  %3357 = zext i32 %3356 to i64
  %3358 = zext i32 %13 to i64
  %3359 = add nuw i32 %5, 1
  %3360 = icmp eq i32 %13, 1
  br label %3361

3361:                                             ; preds = %3353, %3491
  %3362 = phi i64 [ 0, %3353 ], [ %3441, %3491 ]
  %3363 = phi i32 [ 0, %3353 ], [ %3443, %3491 ]
  %3364 = phi double [ 0.000000e+00, %3353 ], [ %3442, %3491 ]
  %3365 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3354, label %3366, label %3435

3366:                                             ; preds = %3361, %3425
  %3367 = phi i32 [ %3434, %3425 ], [ 0, %3361 ]
  %3368 = phi i64 [ %3376, %3425 ], [ %3358, %3361 ]
  %3369 = phi i64 [ %3433, %3425 ], [ %3357, %3361 ]
  %3370 = phi i32 [ %3431, %3425 ], [ %3365, %3361 ]
  %3371 = sub i32 %3356, %3367
  %3372 = tail call i32 @llvm.smin.i32(i32 %3371, i32 0)
  %3373 = sub i32 %3371, %3372
  %3374 = zext i32 %3373 to i64
  %3375 = add nuw nsw i64 %3374, 1
  %3376 = add nsw i64 %3368, -1
  %3377 = icmp ult i32 %3373, 31
  br i1 %3377, label %3413, label %3378

3378:                                             ; preds = %3366
  %3379 = and i64 %3375, 8589934560
  %3380 = sub i64 %3369, %3379
  br label %3381

3381:                                             ; preds = %3381, %3378
  %3382 = phi i64 [ 0, %3378 ], [ %3405, %3381 ]
  %3383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3401, %3381 ]
  %3384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3402, %3381 ]
  %3385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3403, %3381 ]
  %3386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3404, %3381 ]
  %3387 = sub i64 %3369, %3382
  %3388 = getelementptr inbounds i32, ptr %9, i64 %3387
  %3389 = getelementptr inbounds i32, ptr %3388, i64 -7
  %3390 = load <8 x i32>, ptr %3389, align 4, !tbaa !5
  %3391 = shufflevector <8 x i32> %3390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3392 = getelementptr inbounds i32, ptr %3388, i64 -15
  %3393 = load <8 x i32>, ptr %3392, align 4, !tbaa !5
  %3394 = shufflevector <8 x i32> %3393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3395 = getelementptr inbounds i32, ptr %3388, i64 -23
  %3396 = load <8 x i32>, ptr %3395, align 4, !tbaa !5
  %3397 = shufflevector <8 x i32> %3396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3398 = getelementptr inbounds i32, ptr %3388, i64 -31
  %3399 = load <8 x i32>, ptr %3398, align 4, !tbaa !5
  %3400 = shufflevector <8 x i32> %3399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3401 = mul <8 x i32> %3391, %3383
  %3402 = mul <8 x i32> %3394, %3384
  %3403 = mul <8 x i32> %3397, %3385
  %3404 = mul <8 x i32> %3400, %3386
  %3405 = add nuw i64 %3382, 32
  %3406 = icmp eq i64 %3405, %3379
  br i1 %3406, label %3407, label %3381, !llvm.loop !314

3407:                                             ; preds = %3381
  %3408 = mul <8 x i32> %3402, %3401
  %3409 = mul <8 x i32> %3403, %3408
  %3410 = mul <8 x i32> %3404, %3409
  %3411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3410)
  %3412 = icmp eq i64 %3375, %3379
  br i1 %3412, label %3425, label %3413

3413:                                             ; preds = %3366, %3407
  %3414 = phi i64 [ %3369, %3366 ], [ %3380, %3407 ]
  %3415 = phi i32 [ 1, %3366 ], [ %3411, %3407 ]
  br label %3416

3416:                                             ; preds = %3413, %3416
  %3417 = phi i64 [ %3422, %3416 ], [ %3414, %3413 ]
  %3418 = phi i32 [ %3421, %3416 ], [ %3415, %3413 ]
  %3419 = getelementptr inbounds i32, ptr %9, i64 %3417
  %3420 = load i32, ptr %3419, align 4, !tbaa !5
  %3421 = mul nsw i32 %3420, %3418
  %3422 = add nsw i64 %3417, -1
  %3423 = trunc i64 %3417 to i32
  %3424 = icmp sgt i32 %3423, 0
  br i1 %3424, label %3416, label %3425, !llvm.loop !315

3425:                                             ; preds = %3416, %3407
  %3426 = phi i32 [ %3411, %3407 ], [ %3421, %3416 ]
  %3427 = and i64 %3376, 4294967295
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3427
  %3429 = load i32, ptr %3428, align 4, !tbaa !5
  %3430 = mul nsw i32 %3429, %3426
  %3431 = add nsw i32 %3430, %3370
  %3432 = icmp sgt i64 %3368, 2
  %3433 = add nsw i64 %3369, -1
  %3434 = add i32 %3367, 1
  br i1 %3432, label %3366, label %3435, !llvm.loop !316

3435:                                             ; preds = %3425, %3361
  %3436 = phi i32 [ %3365, %3361 ], [ %3431, %3425 ]
  %3437 = sext i32 %3436 to i64
  %3438 = getelementptr inbounds i32, ptr %3031, i64 %3437
  %3439 = load i32, ptr %3438, align 4, !tbaa !5
  %3440 = sext i32 %3439 to i64
  %3441 = add nsw i64 %3362, %3440
  %3442 = fadd fast double %3364, 1.000000e+00
  %3443 = add nuw nsw i32 %3363, 1
  br i1 %3355, label %3444, label %3491

3444:                                             ; preds = %3435
  %3445 = load i32, ptr %4, align 4, !tbaa !5
  %3446 = load i32, ptr %12, align 4, !tbaa !5
  %3447 = add nsw i32 %3446, -1
  %3448 = icmp slt i32 %3445, %3447
  br i1 %3448, label %3468, label %3449

3449:                                             ; preds = %3444
  %3450 = icmp eq i32 %3445, %3447
  br i1 %3450, label %3451, label %3484

3451:                                             ; preds = %3449
  store i32 0, ptr %4, align 4, !tbaa !5
  %3452 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3452, ptr %6, align 4, !tbaa !5
  br i1 %3360, label %3491, label %3453

3453:                                             ; preds = %3451, %3478
  %3454 = phi i64 [ %3482, %3478 ], [ 1, %3451 ]
  %3455 = getelementptr inbounds i32, ptr %4, i64 %3454
  %3456 = load i32, ptr %3455, align 4, !tbaa !5
  %3457 = getelementptr inbounds i32, ptr %12, i64 %3454
  %3458 = load i32, ptr %3457, align 4, !tbaa !5
  %3459 = add nsw i32 %3458, -1
  %3460 = icmp slt i32 %3456, %3459
  br i1 %3460, label %3461, label %3476

3461:                                             ; preds = %3453
  br i1 %3448, label %3468, label %3462

3462:                                             ; preds = %3461
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3454
  %3464 = load i32, ptr %3463, align 4, !tbaa !5
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3454
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = add nsw i32 %3466, %3464
  store i32 %3467, ptr %3465, align 4, !tbaa !5
  br label %3486

3468:                                             ; preds = %3444, %3461
  %3469 = phi i32 [ %3456, %3461 ], [ %3445, %3444 ]
  %3470 = phi ptr [ %3455, %3461 ], [ %4, %3444 ]
  %3471 = phi i64 [ %3454, %3461 ], [ 0, %3444 ]
  %3472 = add nsw i32 %3469, 1
  store i32 %3472, ptr %3470, align 4, !tbaa !5
  %3473 = getelementptr inbounds i32, ptr %7, i64 %3471
  %3474 = load i32, ptr %3473, align 4, !tbaa !5
  %3475 = getelementptr inbounds i32, ptr %6, i64 %3471
  br label %3486

3476:                                             ; preds = %3453
  %3477 = icmp eq i32 %3456, %3459
  br i1 %3477, label %3478, label %3484

3478:                                             ; preds = %3476
  store i32 0, ptr %3455, align 4, !tbaa !5
  %3479 = getelementptr inbounds i32, ptr %8, i64 %3454
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = getelementptr inbounds i32, ptr %6, i64 %3454
  store i32 %3480, ptr %3481, align 4, !tbaa !5
  %3482 = add nuw nsw i64 %3454, 1
  %3483 = icmp eq i64 %3482, %3358
  br i1 %3483, label %3491, label %3453, !llvm.loop !317

3484:                                             ; preds = %3449, %3476
  store i64 %3441, ptr %3033, align 8, !tbaa !120
  %3485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3486:                                             ; preds = %3462, %3468
  %3487 = phi ptr [ %3475, %3468 ], [ %3455, %3462 ]
  %3488 = phi i32 [ %3474, %3468 ], [ 1, %3462 ]
  %3489 = load i32, ptr %3487, align 4, !tbaa !5
  %3490 = add nsw i32 %3489, %3488
  store i32 %3490, ptr %3487, align 4, !tbaa !5
  br label %3491

3491:                                             ; preds = %3478, %3486, %3451, %3435
  %3492 = icmp eq i32 %3443, %5
  br i1 %3492, label %5435, label %3361, !llvm.loop !318

3493:                                             ; preds = %3344, %3628
  %3494 = phi i64 [ 0, %3344 ], [ %3576, %3628 ]
  %3495 = phi i32 [ 0, %3344 ], [ %3577, %3628 ]
  %3496 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3345, label %3497, label %3566

3497:                                             ; preds = %3493, %3556
  %3498 = phi i32 [ %3565, %3556 ], [ 0, %3493 ]
  %3499 = phi i64 [ %3507, %3556 ], [ %3349, %3493 ]
  %3500 = phi i64 [ %3564, %3556 ], [ %3348, %3493 ]
  %3501 = phi i32 [ %3562, %3556 ], [ %3496, %3493 ]
  %3502 = sub i32 %3347, %3498
  %3503 = tail call i32 @llvm.smin.i32(i32 %3502, i32 0)
  %3504 = sub i32 %3502, %3503
  %3505 = zext i32 %3504 to i64
  %3506 = add nuw nsw i64 %3505, 1
  %3507 = add nsw i64 %3499, -1
  %3508 = icmp ult i32 %3504, 31
  br i1 %3508, label %3544, label %3509

3509:                                             ; preds = %3497
  %3510 = and i64 %3506, 8589934560
  %3511 = sub i64 %3500, %3510
  br label %3512

3512:                                             ; preds = %3512, %3509
  %3513 = phi i64 [ 0, %3509 ], [ %3536, %3512 ]
  %3514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3532, %3512 ]
  %3515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3533, %3512 ]
  %3516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3534, %3512 ]
  %3517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3535, %3512 ]
  %3518 = sub i64 %3500, %3513
  %3519 = getelementptr inbounds i32, ptr %11, i64 %3518
  %3520 = getelementptr inbounds i32, ptr %3519, i64 -7
  %3521 = load <8 x i32>, ptr %3520, align 4, !tbaa !5
  %3522 = shufflevector <8 x i32> %3521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3523 = getelementptr inbounds i32, ptr %3519, i64 -15
  %3524 = load <8 x i32>, ptr %3523, align 4, !tbaa !5
  %3525 = shufflevector <8 x i32> %3524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3526 = getelementptr inbounds i32, ptr %3519, i64 -23
  %3527 = load <8 x i32>, ptr %3526, align 4, !tbaa !5
  %3528 = shufflevector <8 x i32> %3527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3529 = getelementptr inbounds i32, ptr %3519, i64 -31
  %3530 = load <8 x i32>, ptr %3529, align 4, !tbaa !5
  %3531 = shufflevector <8 x i32> %3530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3532 = mul <8 x i32> %3522, %3514
  %3533 = mul <8 x i32> %3525, %3515
  %3534 = mul <8 x i32> %3528, %3516
  %3535 = mul <8 x i32> %3531, %3517
  %3536 = add nuw i64 %3513, 32
  %3537 = icmp eq i64 %3536, %3510
  br i1 %3537, label %3538, label %3512, !llvm.loop !319

3538:                                             ; preds = %3512
  %3539 = mul <8 x i32> %3533, %3532
  %3540 = mul <8 x i32> %3534, %3539
  %3541 = mul <8 x i32> %3535, %3540
  %3542 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3541)
  %3543 = icmp eq i64 %3506, %3510
  br i1 %3543, label %3556, label %3544

3544:                                             ; preds = %3497, %3538
  %3545 = phi i64 [ %3500, %3497 ], [ %3511, %3538 ]
  %3546 = phi i32 [ 1, %3497 ], [ %3542, %3538 ]
  br label %3547

3547:                                             ; preds = %3544, %3547
  %3548 = phi i64 [ %3553, %3547 ], [ %3545, %3544 ]
  %3549 = phi i32 [ %3552, %3547 ], [ %3546, %3544 ]
  %3550 = getelementptr inbounds i32, ptr %11, i64 %3548
  %3551 = load i32, ptr %3550, align 4, !tbaa !5
  %3552 = mul nsw i32 %3551, %3549
  %3553 = add nsw i64 %3548, -1
  %3554 = trunc i64 %3548 to i32
  %3555 = icmp sgt i32 %3554, 0
  br i1 %3555, label %3547, label %3556, !llvm.loop !320

3556:                                             ; preds = %3547, %3538
  %3557 = phi i32 [ %3542, %3538 ], [ %3552, %3547 ]
  %3558 = and i64 %3507, 4294967295
  %3559 = getelementptr inbounds i32, ptr %6, i64 %3558
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = mul nsw i32 %3560, %3557
  %3562 = add nsw i32 %3561, %3501
  %3563 = icmp sgt i64 %3499, 2
  %3564 = add nsw i64 %3500, -1
  %3565 = add i32 %3498, 1
  br i1 %3563, label %3497, label %3566, !llvm.loop !321

3566:                                             ; preds = %3556, %3493
  %3567 = phi i32 [ %3496, %3493 ], [ %3562, %3556 ]
  %3568 = icmp slt i32 %3567, %5
  br i1 %3568, label %3571, label %3569

3569:                                             ; preds = %3566
  %3570 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3571:                                             ; preds = %3566
  %3572 = sext i32 %3567 to i64
  %3573 = getelementptr inbounds i32, ptr %3031, i64 %3572
  %3574 = load i32, ptr %3573, align 4, !tbaa !5
  %3575 = sext i32 %3574 to i64
  %3576 = add nsw i64 %3494, %3575
  store i64 %3576, ptr %3033, align 8, !tbaa !120
  %3577 = add nuw nsw i32 %3495, 1
  br i1 %3346, label %3578, label %3628

3578:                                             ; preds = %3571
  %3579 = load i32, ptr %4, align 4, !tbaa !5
  %3580 = load i32, ptr %12, align 4, !tbaa !5
  %3581 = add nsw i32 %3580, -1
  %3582 = icmp slt i32 %3579, %3581
  br i1 %3582, label %3605, label %3583

3583:                                             ; preds = %3578
  %3584 = icmp eq i32 %3579, %3581
  br i1 %3584, label %3585, label %3621

3585:                                             ; preds = %3583
  store i32 0, ptr %4, align 4, !tbaa !5
  %3586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3586, ptr %6, align 4, !tbaa !5
  br i1 %3351, label %3628, label %3587

3587:                                             ; preds = %3585, %3615
  %3588 = phi i64 [ %3619, %3615 ], [ 1, %3585 ]
  %3589 = getelementptr inbounds i32, ptr %4, i64 %3588
  %3590 = load i32, ptr %3589, align 4, !tbaa !5
  %3591 = getelementptr inbounds i32, ptr %12, i64 %3588
  %3592 = load i32, ptr %3591, align 4, !tbaa !5
  %3593 = add nsw i32 %3592, -1
  %3594 = icmp slt i32 %3590, %3593
  br i1 %3594, label %3595, label %3613

3595:                                             ; preds = %3587
  br i1 %3582, label %3605, label %3596

3596:                                             ; preds = %3595
  %3597 = shl i64 %3588, 32
  %3598 = add i64 %3597, -4294967296
  %3599 = ashr exact i64 %3598, 32
  %3600 = getelementptr inbounds i32, ptr %7, i64 %3599
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = getelementptr inbounds i32, ptr %6, i64 %3588
  %3603 = load i32, ptr %3602, align 4, !tbaa !5
  %3604 = add nsw i32 %3603, %3601
  store i32 %3604, ptr %3602, align 4, !tbaa !5
  br label %3623

3605:                                             ; preds = %3578, %3595
  %3606 = phi i32 [ %3590, %3595 ], [ %3579, %3578 ]
  %3607 = phi ptr [ %3589, %3595 ], [ %4, %3578 ]
  %3608 = phi i64 [ %3588, %3595 ], [ 0, %3578 ]
  %3609 = add nsw i32 %3606, 1
  store i32 %3609, ptr %3607, align 4, !tbaa !5
  %3610 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3611 = load i32, ptr %3610, align 4, !tbaa !5
  %3612 = getelementptr inbounds i32, ptr %6, i64 %3608
  br label %3623

3613:                                             ; preds = %3587
  %3614 = icmp eq i32 %3590, %3593
  br i1 %3614, label %3615, label %3621

3615:                                             ; preds = %3613
  store i32 0, ptr %3589, align 4, !tbaa !5
  %3616 = getelementptr inbounds i32, ptr %8, i64 %3588
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = getelementptr inbounds i32, ptr %6, i64 %3588
  store i32 %3617, ptr %3618, align 4, !tbaa !5
  %3619 = add nuw nsw i64 %3588, 1
  %3620 = icmp eq i64 %3619, %3349
  br i1 %3620, label %3628, label %3587, !llvm.loop !322

3621:                                             ; preds = %3583, %3613
  %3622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3623:                                             ; preds = %3596, %3605
  %3624 = phi ptr [ %3612, %3605 ], [ %3589, %3596 ]
  %3625 = phi i32 [ %3611, %3605 ], [ 1, %3596 ]
  %3626 = load i32, ptr %3624, align 4, !tbaa !5
  %3627 = add nsw i32 %3626, %3625
  store i32 %3627, ptr %3624, align 4, !tbaa !5
  br label %3628

3628:                                             ; preds = %3615, %3623, %3585, %3571
  %3629 = icmp eq i32 %3577, %5
  br i1 %3629, label %5440, label %3493, !llvm.loop !323

3630:                                             ; preds = %3038
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

3632:                                             ; preds = %18
  %3633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3634 = load ptr, ptr %3633, align 8, !tbaa !9
  %3635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3636 = load ptr, ptr %3635, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3636, align 8, !tbaa !18
  %3637 = icmp eq i32 %13, 0
  br i1 %3637, label %3638, label %3641

3638:                                             ; preds = %3632
  %3639 = load i32, ptr %3634, align 4, !tbaa !5
  %3640 = sitofp i32 %3639 to double
  store double %3640, ptr %3636, align 8, !tbaa !18
  br label %5440

3641:                                             ; preds = %3632
  switch i32 %1, label %4229 [
    i32 1, label %3642
    i32 0, label %3937
  ]

3642:                                             ; preds = %3641
  %3643 = getelementptr inbounds i32, ptr %3, i64 %19
  %3644 = load i32, ptr %3643, align 4, !tbaa !5
  %3645 = icmp eq i32 %3644, 0
  %3646 = icmp sgt i32 %5, 0
  br i1 %3645, label %3656, label %3647

3647:                                             ; preds = %3642
  br i1 %3646, label %3648, label %5440

3648:                                             ; preds = %3647
  %3649 = icmp sgt i32 %13, 1
  %3650 = icmp sgt i32 %13, 0
  %3651 = add i32 %13, -2
  %3652 = zext i32 %3651 to i64
  %3653 = zext i32 %13 to i64
  %3654 = add nuw i32 %5, 1
  %3655 = icmp eq i32 %13, 1
  br label %3800

3656:                                             ; preds = %3642
  br i1 %3646, label %3657, label %5440

3657:                                             ; preds = %3656
  %3658 = icmp sgt i32 %13, 1
  %3659 = icmp sgt i32 %13, 0
  %3660 = add i32 %13, -2
  %3661 = zext i32 %3660 to i64
  %3662 = zext i32 %13 to i64
  %3663 = add nuw i32 %5, 1
  %3664 = icmp eq i32 %13, 1
  br label %3665

3665:                                             ; preds = %3657, %3798
  %3666 = phi double [ 0.000000e+00, %3657 ], [ %3748, %3798 ]
  %3667 = phi i32 [ 0, %3657 ], [ %3750, %3798 ]
  %3668 = phi double [ 0.000000e+00, %3657 ], [ %3749, %3798 ]
  %3669 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3658, label %3670, label %3739

3670:                                             ; preds = %3665, %3729
  %3671 = phi i32 [ %3738, %3729 ], [ 0, %3665 ]
  %3672 = phi i64 [ %3680, %3729 ], [ %3662, %3665 ]
  %3673 = phi i64 [ %3737, %3729 ], [ %3661, %3665 ]
  %3674 = phi i32 [ %3735, %3729 ], [ %3669, %3665 ]
  %3675 = sub i32 %3660, %3671
  %3676 = tail call i32 @llvm.smin.i32(i32 %3675, i32 0)
  %3677 = sub i32 %3675, %3676
  %3678 = zext i32 %3677 to i64
  %3679 = add nuw nsw i64 %3678, 1
  %3680 = add nsw i64 %3672, -1
  %3681 = icmp ult i32 %3677, 31
  br i1 %3681, label %3717, label %3682

3682:                                             ; preds = %3670
  %3683 = and i64 %3679, 8589934560
  %3684 = sub i64 %3673, %3683
  br label %3685

3685:                                             ; preds = %3685, %3682
  %3686 = phi i64 [ 0, %3682 ], [ %3709, %3685 ]
  %3687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3705, %3685 ]
  %3688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3706, %3685 ]
  %3689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3707, %3685 ]
  %3690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3708, %3685 ]
  %3691 = sub i64 %3673, %3686
  %3692 = getelementptr inbounds i32, ptr %9, i64 %3691
  %3693 = getelementptr inbounds i32, ptr %3692, i64 -7
  %3694 = load <8 x i32>, ptr %3693, align 4, !tbaa !5
  %3695 = shufflevector <8 x i32> %3694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3696 = getelementptr inbounds i32, ptr %3692, i64 -15
  %3697 = load <8 x i32>, ptr %3696, align 4, !tbaa !5
  %3698 = shufflevector <8 x i32> %3697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3699 = getelementptr inbounds i32, ptr %3692, i64 -23
  %3700 = load <8 x i32>, ptr %3699, align 4, !tbaa !5
  %3701 = shufflevector <8 x i32> %3700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3702 = getelementptr inbounds i32, ptr %3692, i64 -31
  %3703 = load <8 x i32>, ptr %3702, align 4, !tbaa !5
  %3704 = shufflevector <8 x i32> %3703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3705 = mul <8 x i32> %3695, %3687
  %3706 = mul <8 x i32> %3698, %3688
  %3707 = mul <8 x i32> %3701, %3689
  %3708 = mul <8 x i32> %3704, %3690
  %3709 = add nuw i64 %3686, 32
  %3710 = icmp eq i64 %3709, %3683
  br i1 %3710, label %3711, label %3685, !llvm.loop !324

3711:                                             ; preds = %3685
  %3712 = mul <8 x i32> %3706, %3705
  %3713 = mul <8 x i32> %3707, %3712
  %3714 = mul <8 x i32> %3708, %3713
  %3715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3714)
  %3716 = icmp eq i64 %3679, %3683
  br i1 %3716, label %3729, label %3717

3717:                                             ; preds = %3670, %3711
  %3718 = phi i64 [ %3673, %3670 ], [ %3684, %3711 ]
  %3719 = phi i32 [ 1, %3670 ], [ %3715, %3711 ]
  br label %3720

3720:                                             ; preds = %3717, %3720
  %3721 = phi i64 [ %3726, %3720 ], [ %3718, %3717 ]
  %3722 = phi i32 [ %3725, %3720 ], [ %3719, %3717 ]
  %3723 = getelementptr inbounds i32, ptr %9, i64 %3721
  %3724 = load i32, ptr %3723, align 4, !tbaa !5
  %3725 = mul nsw i32 %3724, %3722
  %3726 = add nsw i64 %3721, -1
  %3727 = trunc i64 %3721 to i32
  %3728 = icmp sgt i32 %3727, 0
  br i1 %3728, label %3720, label %3729, !llvm.loop !325

3729:                                             ; preds = %3720, %3711
  %3730 = phi i32 [ %3715, %3711 ], [ %3725, %3720 ]
  %3731 = and i64 %3680, 4294967295
  %3732 = getelementptr inbounds i32, ptr %6, i64 %3731
  %3733 = load i32, ptr %3732, align 4, !tbaa !5
  %3734 = mul nsw i32 %3733, %3730
  %3735 = add nsw i32 %3734, %3674
  %3736 = icmp sgt i64 %3672, 2
  %3737 = add nsw i64 %3673, -1
  %3738 = add i32 %3671, 1
  br i1 %3736, label %3670, label %3739, !llvm.loop !326

3739:                                             ; preds = %3729, %3665
  %3740 = phi i32 [ %3669, %3665 ], [ %3735, %3729 ]
  %3741 = sext i32 %3740 to i64
  %3742 = getelementptr inbounds double, ptr %2, i64 %3741
  %3743 = load double, ptr %3742, align 8, !tbaa !18
  %3744 = getelementptr inbounds i32, ptr %3634, i64 %3741
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = sitofp i32 %3745 to double
  %3747 = fmul fast double %3743, %3746
  %3748 = fadd fast double %3747, %3666
  store double %3748, ptr %3636, align 8, !tbaa !18
  %3749 = fadd fast double %3743, %3668
  %3750 = add nuw nsw i32 %3667, 1
  br i1 %3659, label %3751, label %3798

3751:                                             ; preds = %3739
  %3752 = load i32, ptr %4, align 4, !tbaa !5
  %3753 = load i32, ptr %12, align 4, !tbaa !5
  %3754 = add nsw i32 %3753, -1
  %3755 = icmp slt i32 %3752, %3754
  br i1 %3755, label %3775, label %3756

3756:                                             ; preds = %3751
  %3757 = icmp eq i32 %3752, %3754
  br i1 %3757, label %3758, label %3791

3758:                                             ; preds = %3756
  store i32 0, ptr %4, align 4, !tbaa !5
  %3759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3759, ptr %6, align 4, !tbaa !5
  br i1 %3664, label %3798, label %3760

3760:                                             ; preds = %3758, %3785
  %3761 = phi i64 [ %3789, %3785 ], [ 1, %3758 ]
  %3762 = getelementptr inbounds i32, ptr %4, i64 %3761
  %3763 = load i32, ptr %3762, align 4, !tbaa !5
  %3764 = getelementptr inbounds i32, ptr %12, i64 %3761
  %3765 = load i32, ptr %3764, align 4, !tbaa !5
  %3766 = add nsw i32 %3765, -1
  %3767 = icmp slt i32 %3763, %3766
  br i1 %3767, label %3768, label %3783

3768:                                             ; preds = %3760
  br i1 %3755, label %3775, label %3769

3769:                                             ; preds = %3768
  %3770 = getelementptr inbounds i32, ptr %7, i64 %3761
  %3771 = load i32, ptr %3770, align 4, !tbaa !5
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3761
  %3773 = load i32, ptr %3772, align 4, !tbaa !5
  %3774 = add nsw i32 %3773, %3771
  store i32 %3774, ptr %3772, align 4, !tbaa !5
  br label %3793

3775:                                             ; preds = %3751, %3768
  %3776 = phi i32 [ %3763, %3768 ], [ %3752, %3751 ]
  %3777 = phi ptr [ %3762, %3768 ], [ %4, %3751 ]
  %3778 = phi i64 [ %3761, %3768 ], [ 0, %3751 ]
  %3779 = add nsw i32 %3776, 1
  store i32 %3779, ptr %3777, align 4, !tbaa !5
  %3780 = getelementptr inbounds i32, ptr %7, i64 %3778
  %3781 = load i32, ptr %3780, align 4, !tbaa !5
  %3782 = getelementptr inbounds i32, ptr %6, i64 %3778
  br label %3793

3783:                                             ; preds = %3760
  %3784 = icmp eq i32 %3763, %3766
  br i1 %3784, label %3785, label %3791

3785:                                             ; preds = %3783
  store i32 0, ptr %3762, align 4, !tbaa !5
  %3786 = getelementptr inbounds i32, ptr %8, i64 %3761
  %3787 = load i32, ptr %3786, align 4, !tbaa !5
  %3788 = getelementptr inbounds i32, ptr %6, i64 %3761
  store i32 %3787, ptr %3788, align 4, !tbaa !5
  %3789 = add nuw nsw i64 %3761, 1
  %3790 = icmp eq i64 %3789, %3662
  br i1 %3790, label %3798, label %3760, !llvm.loop !327

3791:                                             ; preds = %3756, %3783
  %3792 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3793:                                             ; preds = %3769, %3775
  %3794 = phi ptr [ %3782, %3775 ], [ %3762, %3769 ]
  %3795 = phi i32 [ %3781, %3775 ], [ 1, %3769 ]
  %3796 = load i32, ptr %3794, align 4, !tbaa !5
  %3797 = add nsw i32 %3796, %3795
  store i32 %3797, ptr %3794, align 4, !tbaa !5
  br label %3798

3798:                                             ; preds = %3785, %3793, %3758, %3739
  %3799 = icmp eq i32 %3750, %5
  br i1 %3799, label %5440, label %3665, !llvm.loop !328

3800:                                             ; preds = %3648, %3935
  %3801 = phi double [ 0.000000e+00, %3648 ], [ %3883, %3935 ]
  %3802 = phi i32 [ 0, %3648 ], [ %3884, %3935 ]
  %3803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3649, label %3804, label %3873

3804:                                             ; preds = %3800, %3863
  %3805 = phi i32 [ %3872, %3863 ], [ 0, %3800 ]
  %3806 = phi i64 [ %3814, %3863 ], [ %3653, %3800 ]
  %3807 = phi i64 [ %3871, %3863 ], [ %3652, %3800 ]
  %3808 = phi i32 [ %3869, %3863 ], [ %3803, %3800 ]
  %3809 = sub i32 %3651, %3805
  %3810 = tail call i32 @llvm.smin.i32(i32 %3809, i32 0)
  %3811 = sub i32 %3809, %3810
  %3812 = zext i32 %3811 to i64
  %3813 = add nuw nsw i64 %3812, 1
  %3814 = add nsw i64 %3806, -1
  %3815 = icmp ult i32 %3811, 31
  br i1 %3815, label %3851, label %3816

3816:                                             ; preds = %3804
  %3817 = and i64 %3813, 8589934560
  %3818 = sub i64 %3807, %3817
  br label %3819

3819:                                             ; preds = %3819, %3816
  %3820 = phi i64 [ 0, %3816 ], [ %3843, %3819 ]
  %3821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3839, %3819 ]
  %3822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3840, %3819 ]
  %3823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3841, %3819 ]
  %3824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3842, %3819 ]
  %3825 = sub i64 %3807, %3820
  %3826 = getelementptr inbounds i32, ptr %11, i64 %3825
  %3827 = getelementptr inbounds i32, ptr %3826, i64 -7
  %3828 = load <8 x i32>, ptr %3827, align 4, !tbaa !5
  %3829 = shufflevector <8 x i32> %3828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3830 = getelementptr inbounds i32, ptr %3826, i64 -15
  %3831 = load <8 x i32>, ptr %3830, align 4, !tbaa !5
  %3832 = shufflevector <8 x i32> %3831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3833 = getelementptr inbounds i32, ptr %3826, i64 -23
  %3834 = load <8 x i32>, ptr %3833, align 4, !tbaa !5
  %3835 = shufflevector <8 x i32> %3834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3836 = getelementptr inbounds i32, ptr %3826, i64 -31
  %3837 = load <8 x i32>, ptr %3836, align 4, !tbaa !5
  %3838 = shufflevector <8 x i32> %3837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3839 = mul <8 x i32> %3829, %3821
  %3840 = mul <8 x i32> %3832, %3822
  %3841 = mul <8 x i32> %3835, %3823
  %3842 = mul <8 x i32> %3838, %3824
  %3843 = add nuw i64 %3820, 32
  %3844 = icmp eq i64 %3843, %3817
  br i1 %3844, label %3845, label %3819, !llvm.loop !329

3845:                                             ; preds = %3819
  %3846 = mul <8 x i32> %3840, %3839
  %3847 = mul <8 x i32> %3841, %3846
  %3848 = mul <8 x i32> %3842, %3847
  %3849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3848)
  %3850 = icmp eq i64 %3813, %3817
  br i1 %3850, label %3863, label %3851

3851:                                             ; preds = %3804, %3845
  %3852 = phi i64 [ %3807, %3804 ], [ %3818, %3845 ]
  %3853 = phi i32 [ 1, %3804 ], [ %3849, %3845 ]
  br label %3854

3854:                                             ; preds = %3851, %3854
  %3855 = phi i64 [ %3860, %3854 ], [ %3852, %3851 ]
  %3856 = phi i32 [ %3859, %3854 ], [ %3853, %3851 ]
  %3857 = getelementptr inbounds i32, ptr %11, i64 %3855
  %3858 = load i32, ptr %3857, align 4, !tbaa !5
  %3859 = mul nsw i32 %3858, %3856
  %3860 = add nsw i64 %3855, -1
  %3861 = trunc i64 %3855 to i32
  %3862 = icmp sgt i32 %3861, 0
  br i1 %3862, label %3854, label %3863, !llvm.loop !330

3863:                                             ; preds = %3854, %3845
  %3864 = phi i32 [ %3849, %3845 ], [ %3859, %3854 ]
  %3865 = and i64 %3814, 4294967295
  %3866 = getelementptr inbounds i32, ptr %6, i64 %3865
  %3867 = load i32, ptr %3866, align 4, !tbaa !5
  %3868 = mul nsw i32 %3867, %3864
  %3869 = add nsw i32 %3868, %3808
  %3870 = icmp sgt i64 %3806, 2
  %3871 = add nsw i64 %3807, -1
  %3872 = add i32 %3805, 1
  br i1 %3870, label %3804, label %3873, !llvm.loop !331

3873:                                             ; preds = %3863, %3800
  %3874 = phi i32 [ %3803, %3800 ], [ %3869, %3863 ]
  %3875 = icmp slt i32 %3874, %5
  br i1 %3875, label %3878, label %3876

3876:                                             ; preds = %3873
  %3877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3878:                                             ; preds = %3873
  %3879 = sext i32 %3874 to i64
  %3880 = getelementptr inbounds i32, ptr %3634, i64 %3879
  %3881 = load i32, ptr %3880, align 4, !tbaa !5
  %3882 = sitofp i32 %3881 to double
  %3883 = fadd fast double %3801, %3882
  store double %3883, ptr %3636, align 8, !tbaa !18
  %3884 = add nuw nsw i32 %3802, 1
  br i1 %3650, label %3885, label %3935

3885:                                             ; preds = %3878
  %3886 = load i32, ptr %4, align 4, !tbaa !5
  %3887 = load i32, ptr %12, align 4, !tbaa !5
  %3888 = add nsw i32 %3887, -1
  %3889 = icmp slt i32 %3886, %3888
  br i1 %3889, label %3912, label %3890

3890:                                             ; preds = %3885
  %3891 = icmp eq i32 %3886, %3888
  br i1 %3891, label %3892, label %3928

3892:                                             ; preds = %3890
  store i32 0, ptr %4, align 4, !tbaa !5
  %3893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3893, ptr %6, align 4, !tbaa !5
  br i1 %3655, label %3935, label %3894

3894:                                             ; preds = %3892, %3922
  %3895 = phi i64 [ %3926, %3922 ], [ 1, %3892 ]
  %3896 = getelementptr inbounds i32, ptr %4, i64 %3895
  %3897 = load i32, ptr %3896, align 4, !tbaa !5
  %3898 = getelementptr inbounds i32, ptr %12, i64 %3895
  %3899 = load i32, ptr %3898, align 4, !tbaa !5
  %3900 = add nsw i32 %3899, -1
  %3901 = icmp slt i32 %3897, %3900
  br i1 %3901, label %3902, label %3920

3902:                                             ; preds = %3894
  br i1 %3889, label %3912, label %3903

3903:                                             ; preds = %3902
  %3904 = shl i64 %3895, 32
  %3905 = add i64 %3904, -4294967296
  %3906 = ashr exact i64 %3905, 32
  %3907 = getelementptr inbounds i32, ptr %7, i64 %3906
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = getelementptr inbounds i32, ptr %6, i64 %3895
  %3910 = load i32, ptr %3909, align 4, !tbaa !5
  %3911 = add nsw i32 %3910, %3908
  store i32 %3911, ptr %3909, align 4, !tbaa !5
  br label %3930

3912:                                             ; preds = %3885, %3902
  %3913 = phi i32 [ %3897, %3902 ], [ %3886, %3885 ]
  %3914 = phi ptr [ %3896, %3902 ], [ %4, %3885 ]
  %3915 = phi i64 [ %3895, %3902 ], [ 0, %3885 ]
  %3916 = add nsw i32 %3913, 1
  store i32 %3916, ptr %3914, align 4, !tbaa !5
  %3917 = getelementptr inbounds i32, ptr %7, i64 %3915
  %3918 = load i32, ptr %3917, align 4, !tbaa !5
  %3919 = getelementptr inbounds i32, ptr %6, i64 %3915
  br label %3930

3920:                                             ; preds = %3894
  %3921 = icmp eq i32 %3897, %3900
  br i1 %3921, label %3922, label %3928

3922:                                             ; preds = %3920
  store i32 0, ptr %3896, align 4, !tbaa !5
  %3923 = getelementptr inbounds i32, ptr %8, i64 %3895
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = getelementptr inbounds i32, ptr %6, i64 %3895
  store i32 %3924, ptr %3925, align 4, !tbaa !5
  %3926 = add nuw nsw i64 %3895, 1
  %3927 = icmp eq i64 %3926, %3653
  br i1 %3927, label %3935, label %3894, !llvm.loop !332

3928:                                             ; preds = %3890, %3920
  %3929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3930:                                             ; preds = %3903, %3912
  %3931 = phi ptr [ %3919, %3912 ], [ %3896, %3903 ]
  %3932 = phi i32 [ %3918, %3912 ], [ 1, %3903 ]
  %3933 = load i32, ptr %3931, align 4, !tbaa !5
  %3934 = add nsw i32 %3933, %3932
  store i32 %3934, ptr %3931, align 4, !tbaa !5
  br label %3935

3935:                                             ; preds = %3922, %3930, %3892, %3878
  %3936 = icmp eq i32 %3884, %5
  br i1 %3936, label %5440, label %3800, !llvm.loop !333

3937:                                             ; preds = %3641
  %3938 = getelementptr inbounds i32, ptr %3, i64 %19
  %3939 = load i32, ptr %3938, align 4, !tbaa !5
  %3940 = icmp eq i32 %3939, 0
  %3941 = icmp sgt i32 %5, 0
  br i1 %3940, label %3951, label %3942

3942:                                             ; preds = %3937
  br i1 %3941, label %3943, label %5440

3943:                                             ; preds = %3942
  %3944 = icmp sgt i32 %13, 1
  %3945 = icmp sgt i32 %13, 0
  %3946 = add i32 %13, -2
  %3947 = zext i32 %3946 to i64
  %3948 = zext i32 %13 to i64
  %3949 = add nuw i32 %5, 1
  %3950 = icmp eq i32 %13, 1
  br label %4092

3951:                                             ; preds = %3937
  br i1 %3941, label %3952, label %5440

3952:                                             ; preds = %3951
  %3953 = icmp sgt i32 %13, 1
  %3954 = icmp sgt i32 %13, 0
  %3955 = add i32 %13, -2
  %3956 = zext i32 %3955 to i64
  %3957 = zext i32 %13 to i64
  %3958 = add nuw i32 %5, 1
  %3959 = icmp eq i32 %13, 1
  br label %3960

3960:                                             ; preds = %3952, %4090
  %3961 = phi double [ 0.000000e+00, %3952 ], [ %4040, %4090 ]
  %3962 = phi i32 [ 0, %3952 ], [ %4042, %4090 ]
  %3963 = phi double [ 0.000000e+00, %3952 ], [ %4041, %4090 ]
  %3964 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3953, label %3965, label %4034

3965:                                             ; preds = %3960, %4024
  %3966 = phi i32 [ %4033, %4024 ], [ 0, %3960 ]
  %3967 = phi i64 [ %3975, %4024 ], [ %3957, %3960 ]
  %3968 = phi i64 [ %4032, %4024 ], [ %3956, %3960 ]
  %3969 = phi i32 [ %4030, %4024 ], [ %3964, %3960 ]
  %3970 = sub i32 %3955, %3966
  %3971 = tail call i32 @llvm.smin.i32(i32 %3970, i32 0)
  %3972 = sub i32 %3970, %3971
  %3973 = zext i32 %3972 to i64
  %3974 = add nuw nsw i64 %3973, 1
  %3975 = add nsw i64 %3967, -1
  %3976 = icmp ult i32 %3972, 31
  br i1 %3976, label %4012, label %3977

3977:                                             ; preds = %3965
  %3978 = and i64 %3974, 8589934560
  %3979 = sub i64 %3968, %3978
  br label %3980

3980:                                             ; preds = %3980, %3977
  %3981 = phi i64 [ 0, %3977 ], [ %4004, %3980 ]
  %3982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4000, %3980 ]
  %3983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4001, %3980 ]
  %3984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4002, %3980 ]
  %3985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4003, %3980 ]
  %3986 = sub i64 %3968, %3981
  %3987 = getelementptr inbounds i32, ptr %9, i64 %3986
  %3988 = getelementptr inbounds i32, ptr %3987, i64 -7
  %3989 = load <8 x i32>, ptr %3988, align 4, !tbaa !5
  %3990 = shufflevector <8 x i32> %3989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3991 = getelementptr inbounds i32, ptr %3987, i64 -15
  %3992 = load <8 x i32>, ptr %3991, align 4, !tbaa !5
  %3993 = shufflevector <8 x i32> %3992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3994 = getelementptr inbounds i32, ptr %3987, i64 -23
  %3995 = load <8 x i32>, ptr %3994, align 4, !tbaa !5
  %3996 = shufflevector <8 x i32> %3995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3997 = getelementptr inbounds i32, ptr %3987, i64 -31
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = mul <8 x i32> %3990, %3982
  %4001 = mul <8 x i32> %3993, %3983
  %4002 = mul <8 x i32> %3996, %3984
  %4003 = mul <8 x i32> %3999, %3985
  %4004 = add nuw i64 %3981, 32
  %4005 = icmp eq i64 %4004, %3978
  br i1 %4005, label %4006, label %3980, !llvm.loop !334

4006:                                             ; preds = %3980
  %4007 = mul <8 x i32> %4001, %4000
  %4008 = mul <8 x i32> %4002, %4007
  %4009 = mul <8 x i32> %4003, %4008
  %4010 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4009)
  %4011 = icmp eq i64 %3974, %3978
  br i1 %4011, label %4024, label %4012

4012:                                             ; preds = %3965, %4006
  %4013 = phi i64 [ %3968, %3965 ], [ %3979, %4006 ]
  %4014 = phi i32 [ 1, %3965 ], [ %4010, %4006 ]
  br label %4015

4015:                                             ; preds = %4012, %4015
  %4016 = phi i64 [ %4021, %4015 ], [ %4013, %4012 ]
  %4017 = phi i32 [ %4020, %4015 ], [ %4014, %4012 ]
  %4018 = getelementptr inbounds i32, ptr %9, i64 %4016
  %4019 = load i32, ptr %4018, align 4, !tbaa !5
  %4020 = mul nsw i32 %4019, %4017
  %4021 = add nsw i64 %4016, -1
  %4022 = trunc i64 %4016 to i32
  %4023 = icmp sgt i32 %4022, 0
  br i1 %4023, label %4015, label %4024, !llvm.loop !335

4024:                                             ; preds = %4015, %4006
  %4025 = phi i32 [ %4010, %4006 ], [ %4020, %4015 ]
  %4026 = and i64 %3975, 4294967295
  %4027 = getelementptr inbounds i32, ptr %6, i64 %4026
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = mul nsw i32 %4028, %4025
  %4030 = add nsw i32 %4029, %3969
  %4031 = icmp sgt i64 %3967, 2
  %4032 = add nsw i64 %3968, -1
  %4033 = add i32 %3966, 1
  br i1 %4031, label %3965, label %4034, !llvm.loop !336

4034:                                             ; preds = %4024, %3960
  %4035 = phi i32 [ %3964, %3960 ], [ %4030, %4024 ]
  %4036 = sext i32 %4035 to i64
  %4037 = getelementptr inbounds i32, ptr %3634, i64 %4036
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = sitofp i32 %4038 to double
  %4040 = fadd fast double %3961, %4039
  %4041 = fadd fast double %3963, 1.000000e+00
  %4042 = add nuw nsw i32 %3962, 1
  br i1 %3954, label %4043, label %4090

4043:                                             ; preds = %4034
  %4044 = load i32, ptr %4, align 4, !tbaa !5
  %4045 = load i32, ptr %12, align 4, !tbaa !5
  %4046 = add nsw i32 %4045, -1
  %4047 = icmp slt i32 %4044, %4046
  br i1 %4047, label %4067, label %4048

4048:                                             ; preds = %4043
  %4049 = icmp eq i32 %4044, %4046
  br i1 %4049, label %4050, label %4083

4050:                                             ; preds = %4048
  store i32 0, ptr %4, align 4, !tbaa !5
  %4051 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4051, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %4090, label %4052

4052:                                             ; preds = %4050, %4077
  %4053 = phi i64 [ %4081, %4077 ], [ 1, %4050 ]
  %4054 = getelementptr inbounds i32, ptr %4, i64 %4053
  %4055 = load i32, ptr %4054, align 4, !tbaa !5
  %4056 = getelementptr inbounds i32, ptr %12, i64 %4053
  %4057 = load i32, ptr %4056, align 4, !tbaa !5
  %4058 = add nsw i32 %4057, -1
  %4059 = icmp slt i32 %4055, %4058
  br i1 %4059, label %4060, label %4075

4060:                                             ; preds = %4052
  br i1 %4047, label %4067, label %4061

4061:                                             ; preds = %4060
  %4062 = getelementptr inbounds i32, ptr %7, i64 %4053
  %4063 = load i32, ptr %4062, align 4, !tbaa !5
  %4064 = getelementptr inbounds i32, ptr %6, i64 %4053
  %4065 = load i32, ptr %4064, align 4, !tbaa !5
  %4066 = add nsw i32 %4065, %4063
  store i32 %4066, ptr %4064, align 4, !tbaa !5
  br label %4085

4067:                                             ; preds = %4043, %4060
  %4068 = phi i32 [ %4055, %4060 ], [ %4044, %4043 ]
  %4069 = phi ptr [ %4054, %4060 ], [ %4, %4043 ]
  %4070 = phi i64 [ %4053, %4060 ], [ 0, %4043 ]
  %4071 = add nsw i32 %4068, 1
  store i32 %4071, ptr %4069, align 4, !tbaa !5
  %4072 = getelementptr inbounds i32, ptr %7, i64 %4070
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = getelementptr inbounds i32, ptr %6, i64 %4070
  br label %4085

4075:                                             ; preds = %4052
  %4076 = icmp eq i32 %4055, %4058
  br i1 %4076, label %4077, label %4083

4077:                                             ; preds = %4075
  store i32 0, ptr %4054, align 4, !tbaa !5
  %4078 = getelementptr inbounds i32, ptr %8, i64 %4053
  %4079 = load i32, ptr %4078, align 4, !tbaa !5
  %4080 = getelementptr inbounds i32, ptr %6, i64 %4053
  store i32 %4079, ptr %4080, align 4, !tbaa !5
  %4081 = add nuw nsw i64 %4053, 1
  %4082 = icmp eq i64 %4081, %3957
  br i1 %4082, label %4090, label %4052, !llvm.loop !337

4083:                                             ; preds = %4048, %4075
  store double %4040, ptr %3636, align 8, !tbaa !18
  %4084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4085:                                             ; preds = %4061, %4067
  %4086 = phi ptr [ %4074, %4067 ], [ %4054, %4061 ]
  %4087 = phi i32 [ %4073, %4067 ], [ 1, %4061 ]
  %4088 = load i32, ptr %4086, align 4, !tbaa !5
  %4089 = add nsw i32 %4088, %4087
  store i32 %4089, ptr %4086, align 4, !tbaa !5
  br label %4090

4090:                                             ; preds = %4077, %4085, %4050, %4034
  %4091 = icmp eq i32 %4042, %5
  br i1 %4091, label %5436, label %3960, !llvm.loop !338

4092:                                             ; preds = %3943, %4227
  %4093 = phi double [ 0.000000e+00, %3943 ], [ %4175, %4227 ]
  %4094 = phi i32 [ 0, %3943 ], [ %4176, %4227 ]
  %4095 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3944, label %4096, label %4165

4096:                                             ; preds = %4092, %4155
  %4097 = phi i32 [ %4164, %4155 ], [ 0, %4092 ]
  %4098 = phi i64 [ %4106, %4155 ], [ %3948, %4092 ]
  %4099 = phi i64 [ %4163, %4155 ], [ %3947, %4092 ]
  %4100 = phi i32 [ %4161, %4155 ], [ %4095, %4092 ]
  %4101 = sub i32 %3946, %4097
  %4102 = tail call i32 @llvm.smin.i32(i32 %4101, i32 0)
  %4103 = sub i32 %4101, %4102
  %4104 = zext i32 %4103 to i64
  %4105 = add nuw nsw i64 %4104, 1
  %4106 = add nsw i64 %4098, -1
  %4107 = icmp ult i32 %4103, 31
  br i1 %4107, label %4143, label %4108

4108:                                             ; preds = %4096
  %4109 = and i64 %4105, 8589934560
  %4110 = sub i64 %4099, %4109
  br label %4111

4111:                                             ; preds = %4111, %4108
  %4112 = phi i64 [ 0, %4108 ], [ %4135, %4111 ]
  %4113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4131, %4111 ]
  %4114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4132, %4111 ]
  %4115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4133, %4111 ]
  %4116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4134, %4111 ]
  %4117 = sub i64 %4099, %4112
  %4118 = getelementptr inbounds i32, ptr %11, i64 %4117
  %4119 = getelementptr inbounds i32, ptr %4118, i64 -7
  %4120 = load <8 x i32>, ptr %4119, align 4, !tbaa !5
  %4121 = shufflevector <8 x i32> %4120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4122 = getelementptr inbounds i32, ptr %4118, i64 -15
  %4123 = load <8 x i32>, ptr %4122, align 4, !tbaa !5
  %4124 = shufflevector <8 x i32> %4123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4125 = getelementptr inbounds i32, ptr %4118, i64 -23
  %4126 = load <8 x i32>, ptr %4125, align 4, !tbaa !5
  %4127 = shufflevector <8 x i32> %4126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4128 = getelementptr inbounds i32, ptr %4118, i64 -31
  %4129 = load <8 x i32>, ptr %4128, align 4, !tbaa !5
  %4130 = shufflevector <8 x i32> %4129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4131 = mul <8 x i32> %4121, %4113
  %4132 = mul <8 x i32> %4124, %4114
  %4133 = mul <8 x i32> %4127, %4115
  %4134 = mul <8 x i32> %4130, %4116
  %4135 = add nuw i64 %4112, 32
  %4136 = icmp eq i64 %4135, %4109
  br i1 %4136, label %4137, label %4111, !llvm.loop !339

4137:                                             ; preds = %4111
  %4138 = mul <8 x i32> %4132, %4131
  %4139 = mul <8 x i32> %4133, %4138
  %4140 = mul <8 x i32> %4134, %4139
  %4141 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4140)
  %4142 = icmp eq i64 %4105, %4109
  br i1 %4142, label %4155, label %4143

4143:                                             ; preds = %4096, %4137
  %4144 = phi i64 [ %4099, %4096 ], [ %4110, %4137 ]
  %4145 = phi i32 [ 1, %4096 ], [ %4141, %4137 ]
  br label %4146

4146:                                             ; preds = %4143, %4146
  %4147 = phi i64 [ %4152, %4146 ], [ %4144, %4143 ]
  %4148 = phi i32 [ %4151, %4146 ], [ %4145, %4143 ]
  %4149 = getelementptr inbounds i32, ptr %11, i64 %4147
  %4150 = load i32, ptr %4149, align 4, !tbaa !5
  %4151 = mul nsw i32 %4150, %4148
  %4152 = add nsw i64 %4147, -1
  %4153 = trunc i64 %4147 to i32
  %4154 = icmp sgt i32 %4153, 0
  br i1 %4154, label %4146, label %4155, !llvm.loop !340

4155:                                             ; preds = %4146, %4137
  %4156 = phi i32 [ %4141, %4137 ], [ %4151, %4146 ]
  %4157 = and i64 %4106, 4294967295
  %4158 = getelementptr inbounds i32, ptr %6, i64 %4157
  %4159 = load i32, ptr %4158, align 4, !tbaa !5
  %4160 = mul nsw i32 %4159, %4156
  %4161 = add nsw i32 %4160, %4100
  %4162 = icmp sgt i64 %4098, 2
  %4163 = add nsw i64 %4099, -1
  %4164 = add i32 %4097, 1
  br i1 %4162, label %4096, label %4165, !llvm.loop !341

4165:                                             ; preds = %4155, %4092
  %4166 = phi i32 [ %4095, %4092 ], [ %4161, %4155 ]
  %4167 = icmp slt i32 %4166, %5
  br i1 %4167, label %4170, label %4168

4168:                                             ; preds = %4165
  %4169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4170:                                             ; preds = %4165
  %4171 = sext i32 %4166 to i64
  %4172 = getelementptr inbounds i32, ptr %3634, i64 %4171
  %4173 = load i32, ptr %4172, align 4, !tbaa !5
  %4174 = sitofp i32 %4173 to double
  %4175 = fadd fast double %4093, %4174
  store double %4175, ptr %3636, align 8, !tbaa !18
  %4176 = add nuw nsw i32 %4094, 1
  br i1 %3945, label %4177, label %4227

4177:                                             ; preds = %4170
  %4178 = load i32, ptr %4, align 4, !tbaa !5
  %4179 = load i32, ptr %12, align 4, !tbaa !5
  %4180 = add nsw i32 %4179, -1
  %4181 = icmp slt i32 %4178, %4180
  br i1 %4181, label %4204, label %4182

4182:                                             ; preds = %4177
  %4183 = icmp eq i32 %4178, %4180
  br i1 %4183, label %4184, label %4220

4184:                                             ; preds = %4182
  store i32 0, ptr %4, align 4, !tbaa !5
  %4185 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4185, ptr %6, align 4, !tbaa !5
  br i1 %3950, label %4227, label %4186

4186:                                             ; preds = %4184, %4214
  %4187 = phi i64 [ %4218, %4214 ], [ 1, %4184 ]
  %4188 = getelementptr inbounds i32, ptr %4, i64 %4187
  %4189 = load i32, ptr %4188, align 4, !tbaa !5
  %4190 = getelementptr inbounds i32, ptr %12, i64 %4187
  %4191 = load i32, ptr %4190, align 4, !tbaa !5
  %4192 = add nsw i32 %4191, -1
  %4193 = icmp slt i32 %4189, %4192
  br i1 %4193, label %4194, label %4212

4194:                                             ; preds = %4186
  br i1 %4181, label %4204, label %4195

4195:                                             ; preds = %4194
  %4196 = shl i64 %4187, 32
  %4197 = add i64 %4196, -4294967296
  %4198 = ashr exact i64 %4197, 32
  %4199 = getelementptr inbounds i32, ptr %7, i64 %4198
  %4200 = load i32, ptr %4199, align 4, !tbaa !5
  %4201 = getelementptr inbounds i32, ptr %6, i64 %4187
  %4202 = load i32, ptr %4201, align 4, !tbaa !5
  %4203 = add nsw i32 %4202, %4200
  store i32 %4203, ptr %4201, align 4, !tbaa !5
  br label %4222

4204:                                             ; preds = %4177, %4194
  %4205 = phi i32 [ %4189, %4194 ], [ %4178, %4177 ]
  %4206 = phi ptr [ %4188, %4194 ], [ %4, %4177 ]
  %4207 = phi i64 [ %4187, %4194 ], [ 0, %4177 ]
  %4208 = add nsw i32 %4205, 1
  store i32 %4208, ptr %4206, align 4, !tbaa !5
  %4209 = getelementptr inbounds i32, ptr %7, i64 %4207
  %4210 = load i32, ptr %4209, align 4, !tbaa !5
  %4211 = getelementptr inbounds i32, ptr %6, i64 %4207
  br label %4222

4212:                                             ; preds = %4186
  %4213 = icmp eq i32 %4189, %4192
  br i1 %4213, label %4214, label %4220

4214:                                             ; preds = %4212
  store i32 0, ptr %4188, align 4, !tbaa !5
  %4215 = getelementptr inbounds i32, ptr %8, i64 %4187
  %4216 = load i32, ptr %4215, align 4, !tbaa !5
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4187
  store i32 %4216, ptr %4217, align 4, !tbaa !5
  %4218 = add nuw nsw i64 %4187, 1
  %4219 = icmp eq i64 %4218, %3948
  br i1 %4219, label %4227, label %4186, !llvm.loop !342

4220:                                             ; preds = %4182, %4212
  %4221 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4222:                                             ; preds = %4195, %4204
  %4223 = phi ptr [ %4211, %4204 ], [ %4188, %4195 ]
  %4224 = phi i32 [ %4210, %4204 ], [ 1, %4195 ]
  %4225 = load i32, ptr %4223, align 4, !tbaa !5
  %4226 = add nsw i32 %4225, %4224
  store i32 %4226, ptr %4223, align 4, !tbaa !5
  br label %4227

4227:                                             ; preds = %4214, %4222, %4184, %4170
  %4228 = icmp eq i32 %4176, %5
  br i1 %4228, label %5440, label %4092, !llvm.loop !343

4229:                                             ; preds = %3641
  %4230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

4231:                                             ; preds = %18
  %4232 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4233 = load ptr, ptr %4232, align 8, !tbaa !9
  %4234 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4235 = load ptr, ptr %4234, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4235, align 4, !tbaa !162
  %4236 = icmp eq i32 %13, 0
  br i1 %4236, label %4237, label %4240

4237:                                             ; preds = %4231
  %4238 = load i32, ptr %4233, align 4, !tbaa !5
  %4239 = sitofp i32 %4238 to float
  store float %4239, ptr %4235, align 4, !tbaa !162
  br label %5440

4240:                                             ; preds = %4231
  switch i32 %1, label %4831 [
    i32 1, label %4241
    i32 0, label %4539
  ]

4241:                                             ; preds = %4240
  %4242 = getelementptr inbounds i32, ptr %3, i64 %19
  %4243 = load i32, ptr %4242, align 4, !tbaa !5
  %4244 = icmp eq i32 %4243, 0
  %4245 = icmp sgt i32 %5, 0
  br i1 %4244, label %4255, label %4246

4246:                                             ; preds = %4241
  br i1 %4245, label %4247, label %5440

4247:                                             ; preds = %4246
  %4248 = icmp sgt i32 %13, 1
  %4249 = icmp sgt i32 %13, 0
  %4250 = add i32 %13, -2
  %4251 = zext i32 %4250 to i64
  %4252 = zext i32 %13 to i64
  %4253 = add nuw i32 %5, 1
  %4254 = icmp eq i32 %13, 1
  br label %4402

4255:                                             ; preds = %4241
  br i1 %4245, label %4256, label %5440

4256:                                             ; preds = %4255
  %4257 = icmp sgt i32 %13, 1
  %4258 = icmp sgt i32 %13, 0
  %4259 = add i32 %13, -2
  %4260 = zext i32 %4259 to i64
  %4261 = zext i32 %13 to i64
  %4262 = add nuw i32 %5, 1
  %4263 = icmp eq i32 %13, 1
  br label %4264

4264:                                             ; preds = %4256, %4400
  %4265 = phi float [ 0.000000e+00, %4256 ], [ %4350, %4400 ]
  %4266 = phi i32 [ 0, %4256 ], [ %4352, %4400 ]
  %4267 = phi double [ 0.000000e+00, %4256 ], [ %4351, %4400 ]
  %4268 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4257, label %4269, label %4338

4269:                                             ; preds = %4264, %4328
  %4270 = phi i32 [ %4337, %4328 ], [ 0, %4264 ]
  %4271 = phi i64 [ %4279, %4328 ], [ %4261, %4264 ]
  %4272 = phi i64 [ %4336, %4328 ], [ %4260, %4264 ]
  %4273 = phi i32 [ %4334, %4328 ], [ %4268, %4264 ]
  %4274 = sub i32 %4259, %4270
  %4275 = tail call i32 @llvm.smin.i32(i32 %4274, i32 0)
  %4276 = sub i32 %4274, %4275
  %4277 = zext i32 %4276 to i64
  %4278 = add nuw nsw i64 %4277, 1
  %4279 = add nsw i64 %4271, -1
  %4280 = icmp ult i32 %4276, 31
  br i1 %4280, label %4316, label %4281

4281:                                             ; preds = %4269
  %4282 = and i64 %4278, 8589934560
  %4283 = sub i64 %4272, %4282
  br label %4284

4284:                                             ; preds = %4284, %4281
  %4285 = phi i64 [ 0, %4281 ], [ %4308, %4284 ]
  %4286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4304, %4284 ]
  %4287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4305, %4284 ]
  %4288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4306, %4284 ]
  %4289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4307, %4284 ]
  %4290 = sub i64 %4272, %4285
  %4291 = getelementptr inbounds i32, ptr %9, i64 %4290
  %4292 = getelementptr inbounds i32, ptr %4291, i64 -7
  %4293 = load <8 x i32>, ptr %4292, align 4, !tbaa !5
  %4294 = shufflevector <8 x i32> %4293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4295 = getelementptr inbounds i32, ptr %4291, i64 -15
  %4296 = load <8 x i32>, ptr %4295, align 4, !tbaa !5
  %4297 = shufflevector <8 x i32> %4296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4298 = getelementptr inbounds i32, ptr %4291, i64 -23
  %4299 = load <8 x i32>, ptr %4298, align 4, !tbaa !5
  %4300 = shufflevector <8 x i32> %4299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4301 = getelementptr inbounds i32, ptr %4291, i64 -31
  %4302 = load <8 x i32>, ptr %4301, align 4, !tbaa !5
  %4303 = shufflevector <8 x i32> %4302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4304 = mul <8 x i32> %4294, %4286
  %4305 = mul <8 x i32> %4297, %4287
  %4306 = mul <8 x i32> %4300, %4288
  %4307 = mul <8 x i32> %4303, %4289
  %4308 = add nuw i64 %4285, 32
  %4309 = icmp eq i64 %4308, %4282
  br i1 %4309, label %4310, label %4284, !llvm.loop !344

4310:                                             ; preds = %4284
  %4311 = mul <8 x i32> %4305, %4304
  %4312 = mul <8 x i32> %4306, %4311
  %4313 = mul <8 x i32> %4307, %4312
  %4314 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4313)
  %4315 = icmp eq i64 %4278, %4282
  br i1 %4315, label %4328, label %4316

4316:                                             ; preds = %4269, %4310
  %4317 = phi i64 [ %4272, %4269 ], [ %4283, %4310 ]
  %4318 = phi i32 [ 1, %4269 ], [ %4314, %4310 ]
  br label %4319

4319:                                             ; preds = %4316, %4319
  %4320 = phi i64 [ %4325, %4319 ], [ %4317, %4316 ]
  %4321 = phi i32 [ %4324, %4319 ], [ %4318, %4316 ]
  %4322 = getelementptr inbounds i32, ptr %9, i64 %4320
  %4323 = load i32, ptr %4322, align 4, !tbaa !5
  %4324 = mul nsw i32 %4323, %4321
  %4325 = add nsw i64 %4320, -1
  %4326 = trunc i64 %4320 to i32
  %4327 = icmp sgt i32 %4326, 0
  br i1 %4327, label %4319, label %4328, !llvm.loop !345

4328:                                             ; preds = %4319, %4310
  %4329 = phi i32 [ %4314, %4310 ], [ %4324, %4319 ]
  %4330 = and i64 %4279, 4294967295
  %4331 = getelementptr inbounds i32, ptr %6, i64 %4330
  %4332 = load i32, ptr %4331, align 4, !tbaa !5
  %4333 = mul nsw i32 %4332, %4329
  %4334 = add nsw i32 %4333, %4273
  %4335 = icmp sgt i64 %4271, 2
  %4336 = add nsw i64 %4272, -1
  %4337 = add i32 %4270, 1
  br i1 %4335, label %4269, label %4338, !llvm.loop !346

4338:                                             ; preds = %4328, %4264
  %4339 = phi i32 [ %4268, %4264 ], [ %4334, %4328 ]
  %4340 = sext i32 %4339 to i64
  %4341 = getelementptr inbounds double, ptr %2, i64 %4340
  %4342 = load double, ptr %4341, align 8, !tbaa !18
  %4343 = getelementptr inbounds i32, ptr %4233, i64 %4340
  %4344 = load i32, ptr %4343, align 4, !tbaa !5
  %4345 = sitofp i32 %4344 to float
  %4346 = fpext float %4265 to double
  %4347 = fpext float %4345 to double
  %4348 = fmul fast double %4342, %4347
  %4349 = fadd fast double %4348, %4346
  %4350 = fptrunc double %4349 to float
  %4351 = fadd fast double %4342, %4267
  %4352 = add nuw nsw i32 %4266, 1
  br i1 %4258, label %4353, label %4400

4353:                                             ; preds = %4338
  %4354 = load i32, ptr %4, align 4, !tbaa !5
  %4355 = load i32, ptr %12, align 4, !tbaa !5
  %4356 = add nsw i32 %4355, -1
  %4357 = icmp slt i32 %4354, %4356
  br i1 %4357, label %4377, label %4358

4358:                                             ; preds = %4353
  %4359 = icmp eq i32 %4354, %4356
  br i1 %4359, label %4360, label %4393

4360:                                             ; preds = %4358
  store i32 0, ptr %4, align 4, !tbaa !5
  %4361 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4361, ptr %6, align 4, !tbaa !5
  br i1 %4263, label %4400, label %4362

4362:                                             ; preds = %4360, %4387
  %4363 = phi i64 [ %4391, %4387 ], [ 1, %4360 ]
  %4364 = getelementptr inbounds i32, ptr %4, i64 %4363
  %4365 = load i32, ptr %4364, align 4, !tbaa !5
  %4366 = getelementptr inbounds i32, ptr %12, i64 %4363
  %4367 = load i32, ptr %4366, align 4, !tbaa !5
  %4368 = add nsw i32 %4367, -1
  %4369 = icmp slt i32 %4365, %4368
  br i1 %4369, label %4370, label %4385

4370:                                             ; preds = %4362
  br i1 %4357, label %4377, label %4371

4371:                                             ; preds = %4370
  %4372 = getelementptr inbounds i32, ptr %7, i64 %4363
  %4373 = load i32, ptr %4372, align 4, !tbaa !5
  %4374 = getelementptr inbounds i32, ptr %6, i64 %4363
  %4375 = load i32, ptr %4374, align 4, !tbaa !5
  %4376 = add nsw i32 %4375, %4373
  store i32 %4376, ptr %4374, align 4, !tbaa !5
  br label %4395

4377:                                             ; preds = %4353, %4370
  %4378 = phi i32 [ %4365, %4370 ], [ %4354, %4353 ]
  %4379 = phi ptr [ %4364, %4370 ], [ %4, %4353 ]
  %4380 = phi i64 [ %4363, %4370 ], [ 0, %4353 ]
  %4381 = add nsw i32 %4378, 1
  store i32 %4381, ptr %4379, align 4, !tbaa !5
  %4382 = getelementptr inbounds i32, ptr %7, i64 %4380
  %4383 = load i32, ptr %4382, align 4, !tbaa !5
  %4384 = getelementptr inbounds i32, ptr %6, i64 %4380
  br label %4395

4385:                                             ; preds = %4362
  %4386 = icmp eq i32 %4365, %4368
  br i1 %4386, label %4387, label %4393

4387:                                             ; preds = %4385
  store i32 0, ptr %4364, align 4, !tbaa !5
  %4388 = getelementptr inbounds i32, ptr %8, i64 %4363
  %4389 = load i32, ptr %4388, align 4, !tbaa !5
  %4390 = getelementptr inbounds i32, ptr %6, i64 %4363
  store i32 %4389, ptr %4390, align 4, !tbaa !5
  %4391 = add nuw nsw i64 %4363, 1
  %4392 = icmp eq i64 %4391, %4261
  br i1 %4392, label %4400, label %4362, !llvm.loop !347

4393:                                             ; preds = %4358, %4385
  store float %4350, ptr %4235, align 4, !tbaa !162
  %4394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4395:                                             ; preds = %4371, %4377
  %4396 = phi ptr [ %4384, %4377 ], [ %4364, %4371 ]
  %4397 = phi i32 [ %4383, %4377 ], [ 1, %4371 ]
  %4398 = load i32, ptr %4396, align 4, !tbaa !5
  %4399 = add nsw i32 %4398, %4397
  store i32 %4399, ptr %4396, align 4, !tbaa !5
  br label %4400

4400:                                             ; preds = %4387, %4395, %4360, %4338
  %4401 = icmp eq i32 %4352, %5
  br i1 %4401, label %5437, label %4264, !llvm.loop !348

4402:                                             ; preds = %4247, %4537
  %4403 = phi float [ 0.000000e+00, %4247 ], [ %4485, %4537 ]
  %4404 = phi i32 [ 0, %4247 ], [ %4486, %4537 ]
  %4405 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4248, label %4406, label %4475

4406:                                             ; preds = %4402, %4465
  %4407 = phi i32 [ %4474, %4465 ], [ 0, %4402 ]
  %4408 = phi i64 [ %4416, %4465 ], [ %4252, %4402 ]
  %4409 = phi i64 [ %4473, %4465 ], [ %4251, %4402 ]
  %4410 = phi i32 [ %4471, %4465 ], [ %4405, %4402 ]
  %4411 = sub i32 %4250, %4407
  %4412 = tail call i32 @llvm.smin.i32(i32 %4411, i32 0)
  %4413 = sub i32 %4411, %4412
  %4414 = zext i32 %4413 to i64
  %4415 = add nuw nsw i64 %4414, 1
  %4416 = add nsw i64 %4408, -1
  %4417 = icmp ult i32 %4413, 31
  br i1 %4417, label %4453, label %4418

4418:                                             ; preds = %4406
  %4419 = and i64 %4415, 8589934560
  %4420 = sub i64 %4409, %4419
  br label %4421

4421:                                             ; preds = %4421, %4418
  %4422 = phi i64 [ 0, %4418 ], [ %4445, %4421 ]
  %4423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4441, %4421 ]
  %4424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4442, %4421 ]
  %4425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4443, %4421 ]
  %4426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4444, %4421 ]
  %4427 = sub i64 %4409, %4422
  %4428 = getelementptr inbounds i32, ptr %11, i64 %4427
  %4429 = getelementptr inbounds i32, ptr %4428, i64 -7
  %4430 = load <8 x i32>, ptr %4429, align 4, !tbaa !5
  %4431 = shufflevector <8 x i32> %4430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4432 = getelementptr inbounds i32, ptr %4428, i64 -15
  %4433 = load <8 x i32>, ptr %4432, align 4, !tbaa !5
  %4434 = shufflevector <8 x i32> %4433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4435 = getelementptr inbounds i32, ptr %4428, i64 -23
  %4436 = load <8 x i32>, ptr %4435, align 4, !tbaa !5
  %4437 = shufflevector <8 x i32> %4436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4438 = getelementptr inbounds i32, ptr %4428, i64 -31
  %4439 = load <8 x i32>, ptr %4438, align 4, !tbaa !5
  %4440 = shufflevector <8 x i32> %4439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4441 = mul <8 x i32> %4431, %4423
  %4442 = mul <8 x i32> %4434, %4424
  %4443 = mul <8 x i32> %4437, %4425
  %4444 = mul <8 x i32> %4440, %4426
  %4445 = add nuw i64 %4422, 32
  %4446 = icmp eq i64 %4445, %4419
  br i1 %4446, label %4447, label %4421, !llvm.loop !349

4447:                                             ; preds = %4421
  %4448 = mul <8 x i32> %4442, %4441
  %4449 = mul <8 x i32> %4443, %4448
  %4450 = mul <8 x i32> %4444, %4449
  %4451 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4450)
  %4452 = icmp eq i64 %4415, %4419
  br i1 %4452, label %4465, label %4453

4453:                                             ; preds = %4406, %4447
  %4454 = phi i64 [ %4409, %4406 ], [ %4420, %4447 ]
  %4455 = phi i32 [ 1, %4406 ], [ %4451, %4447 ]
  br label %4456

4456:                                             ; preds = %4453, %4456
  %4457 = phi i64 [ %4462, %4456 ], [ %4454, %4453 ]
  %4458 = phi i32 [ %4461, %4456 ], [ %4455, %4453 ]
  %4459 = getelementptr inbounds i32, ptr %11, i64 %4457
  %4460 = load i32, ptr %4459, align 4, !tbaa !5
  %4461 = mul nsw i32 %4460, %4458
  %4462 = add nsw i64 %4457, -1
  %4463 = trunc i64 %4457 to i32
  %4464 = icmp sgt i32 %4463, 0
  br i1 %4464, label %4456, label %4465, !llvm.loop !350

4465:                                             ; preds = %4456, %4447
  %4466 = phi i32 [ %4451, %4447 ], [ %4461, %4456 ]
  %4467 = and i64 %4416, 4294967295
  %4468 = getelementptr inbounds i32, ptr %6, i64 %4467
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = mul nsw i32 %4469, %4466
  %4471 = add nsw i32 %4470, %4410
  %4472 = icmp sgt i64 %4408, 2
  %4473 = add nsw i64 %4409, -1
  %4474 = add i32 %4407, 1
  br i1 %4472, label %4406, label %4475, !llvm.loop !351

4475:                                             ; preds = %4465, %4402
  %4476 = phi i32 [ %4405, %4402 ], [ %4471, %4465 ]
  %4477 = icmp slt i32 %4476, %5
  br i1 %4477, label %4480, label %4478

4478:                                             ; preds = %4475
  %4479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4480:                                             ; preds = %4475
  %4481 = sext i32 %4476 to i64
  %4482 = getelementptr inbounds i32, ptr %4233, i64 %4481
  %4483 = load i32, ptr %4482, align 4, !tbaa !5
  %4484 = sitofp i32 %4483 to float
  %4485 = fadd fast float %4403, %4484
  store float %4485, ptr %4235, align 4, !tbaa !162
  %4486 = add nuw nsw i32 %4404, 1
  br i1 %4249, label %4487, label %4537

4487:                                             ; preds = %4480
  %4488 = load i32, ptr %4, align 4, !tbaa !5
  %4489 = load i32, ptr %12, align 4, !tbaa !5
  %4490 = add nsw i32 %4489, -1
  %4491 = icmp slt i32 %4488, %4490
  br i1 %4491, label %4514, label %4492

4492:                                             ; preds = %4487
  %4493 = icmp eq i32 %4488, %4490
  br i1 %4493, label %4494, label %4530

4494:                                             ; preds = %4492
  store i32 0, ptr %4, align 4, !tbaa !5
  %4495 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4495, ptr %6, align 4, !tbaa !5
  br i1 %4254, label %4537, label %4496

4496:                                             ; preds = %4494, %4524
  %4497 = phi i64 [ %4528, %4524 ], [ 1, %4494 ]
  %4498 = getelementptr inbounds i32, ptr %4, i64 %4497
  %4499 = load i32, ptr %4498, align 4, !tbaa !5
  %4500 = getelementptr inbounds i32, ptr %12, i64 %4497
  %4501 = load i32, ptr %4500, align 4, !tbaa !5
  %4502 = add nsw i32 %4501, -1
  %4503 = icmp slt i32 %4499, %4502
  br i1 %4503, label %4504, label %4522

4504:                                             ; preds = %4496
  br i1 %4491, label %4514, label %4505

4505:                                             ; preds = %4504
  %4506 = shl i64 %4497, 32
  %4507 = add i64 %4506, -4294967296
  %4508 = ashr exact i64 %4507, 32
  %4509 = getelementptr inbounds i32, ptr %7, i64 %4508
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4497
  %4512 = load i32, ptr %4511, align 4, !tbaa !5
  %4513 = add nsw i32 %4512, %4510
  store i32 %4513, ptr %4511, align 4, !tbaa !5
  br label %4532

4514:                                             ; preds = %4487, %4504
  %4515 = phi i32 [ %4499, %4504 ], [ %4488, %4487 ]
  %4516 = phi ptr [ %4498, %4504 ], [ %4, %4487 ]
  %4517 = phi i64 [ %4497, %4504 ], [ 0, %4487 ]
  %4518 = add nsw i32 %4515, 1
  store i32 %4518, ptr %4516, align 4, !tbaa !5
  %4519 = getelementptr inbounds i32, ptr %7, i64 %4517
  %4520 = load i32, ptr %4519, align 4, !tbaa !5
  %4521 = getelementptr inbounds i32, ptr %6, i64 %4517
  br label %4532

4522:                                             ; preds = %4496
  %4523 = icmp eq i32 %4499, %4502
  br i1 %4523, label %4524, label %4530

4524:                                             ; preds = %4522
  store i32 0, ptr %4498, align 4, !tbaa !5
  %4525 = getelementptr inbounds i32, ptr %8, i64 %4497
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = getelementptr inbounds i32, ptr %6, i64 %4497
  store i32 %4526, ptr %4527, align 4, !tbaa !5
  %4528 = add nuw nsw i64 %4497, 1
  %4529 = icmp eq i64 %4528, %4252
  br i1 %4529, label %4537, label %4496, !llvm.loop !352

4530:                                             ; preds = %4492, %4522
  %4531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4532:                                             ; preds = %4505, %4514
  %4533 = phi ptr [ %4521, %4514 ], [ %4498, %4505 ]
  %4534 = phi i32 [ %4520, %4514 ], [ 1, %4505 ]
  %4535 = load i32, ptr %4533, align 4, !tbaa !5
  %4536 = add nsw i32 %4535, %4534
  store i32 %4536, ptr %4533, align 4, !tbaa !5
  br label %4537

4537:                                             ; preds = %4524, %4532, %4494, %4480
  %4538 = icmp eq i32 %4486, %5
  br i1 %4538, label %5440, label %4402, !llvm.loop !353

4539:                                             ; preds = %4240
  %4540 = getelementptr inbounds i32, ptr %3, i64 %19
  %4541 = load i32, ptr %4540, align 4, !tbaa !5
  %4542 = icmp eq i32 %4541, 0
  %4543 = icmp sgt i32 %5, 0
  br i1 %4542, label %4553, label %4544

4544:                                             ; preds = %4539
  br i1 %4543, label %4545, label %5440

4545:                                             ; preds = %4544
  %4546 = icmp sgt i32 %13, 1
  %4547 = icmp sgt i32 %13, 0
  %4548 = add i32 %13, -2
  %4549 = zext i32 %4548 to i64
  %4550 = zext i32 %13 to i64
  %4551 = add nuw i32 %5, 1
  %4552 = icmp eq i32 %13, 1
  br label %4694

4553:                                             ; preds = %4539
  br i1 %4543, label %4554, label %5440

4554:                                             ; preds = %4553
  %4555 = icmp sgt i32 %13, 1
  %4556 = icmp sgt i32 %13, 0
  %4557 = add i32 %13, -2
  %4558 = zext i32 %4557 to i64
  %4559 = zext i32 %13 to i64
  %4560 = add nuw i32 %5, 1
  %4561 = icmp eq i32 %13, 1
  br label %4562

4562:                                             ; preds = %4554, %4692
  %4563 = phi float [ 0.000000e+00, %4554 ], [ %4642, %4692 ]
  %4564 = phi i32 [ 0, %4554 ], [ %4644, %4692 ]
  %4565 = phi double [ 0.000000e+00, %4554 ], [ %4643, %4692 ]
  %4566 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4555, label %4567, label %4636

4567:                                             ; preds = %4562, %4626
  %4568 = phi i32 [ %4635, %4626 ], [ 0, %4562 ]
  %4569 = phi i64 [ %4577, %4626 ], [ %4559, %4562 ]
  %4570 = phi i64 [ %4634, %4626 ], [ %4558, %4562 ]
  %4571 = phi i32 [ %4632, %4626 ], [ %4566, %4562 ]
  %4572 = sub i32 %4557, %4568
  %4573 = tail call i32 @llvm.smin.i32(i32 %4572, i32 0)
  %4574 = sub i32 %4572, %4573
  %4575 = zext i32 %4574 to i64
  %4576 = add nuw nsw i64 %4575, 1
  %4577 = add nsw i64 %4569, -1
  %4578 = icmp ult i32 %4574, 31
  br i1 %4578, label %4614, label %4579

4579:                                             ; preds = %4567
  %4580 = and i64 %4576, 8589934560
  %4581 = sub i64 %4570, %4580
  br label %4582

4582:                                             ; preds = %4582, %4579
  %4583 = phi i64 [ 0, %4579 ], [ %4606, %4582 ]
  %4584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4602, %4582 ]
  %4585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4603, %4582 ]
  %4586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4604, %4582 ]
  %4587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4605, %4582 ]
  %4588 = sub i64 %4570, %4583
  %4589 = getelementptr inbounds i32, ptr %9, i64 %4588
  %4590 = getelementptr inbounds i32, ptr %4589, i64 -7
  %4591 = load <8 x i32>, ptr %4590, align 4, !tbaa !5
  %4592 = shufflevector <8 x i32> %4591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4593 = getelementptr inbounds i32, ptr %4589, i64 -15
  %4594 = load <8 x i32>, ptr %4593, align 4, !tbaa !5
  %4595 = shufflevector <8 x i32> %4594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4596 = getelementptr inbounds i32, ptr %4589, i64 -23
  %4597 = load <8 x i32>, ptr %4596, align 4, !tbaa !5
  %4598 = shufflevector <8 x i32> %4597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4599 = getelementptr inbounds i32, ptr %4589, i64 -31
  %4600 = load <8 x i32>, ptr %4599, align 4, !tbaa !5
  %4601 = shufflevector <8 x i32> %4600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4602 = mul <8 x i32> %4592, %4584
  %4603 = mul <8 x i32> %4595, %4585
  %4604 = mul <8 x i32> %4598, %4586
  %4605 = mul <8 x i32> %4601, %4587
  %4606 = add nuw i64 %4583, 32
  %4607 = icmp eq i64 %4606, %4580
  br i1 %4607, label %4608, label %4582, !llvm.loop !354

4608:                                             ; preds = %4582
  %4609 = mul <8 x i32> %4603, %4602
  %4610 = mul <8 x i32> %4604, %4609
  %4611 = mul <8 x i32> %4605, %4610
  %4612 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4611)
  %4613 = icmp eq i64 %4576, %4580
  br i1 %4613, label %4626, label %4614

4614:                                             ; preds = %4567, %4608
  %4615 = phi i64 [ %4570, %4567 ], [ %4581, %4608 ]
  %4616 = phi i32 [ 1, %4567 ], [ %4612, %4608 ]
  br label %4617

4617:                                             ; preds = %4614, %4617
  %4618 = phi i64 [ %4623, %4617 ], [ %4615, %4614 ]
  %4619 = phi i32 [ %4622, %4617 ], [ %4616, %4614 ]
  %4620 = getelementptr inbounds i32, ptr %9, i64 %4618
  %4621 = load i32, ptr %4620, align 4, !tbaa !5
  %4622 = mul nsw i32 %4621, %4619
  %4623 = add nsw i64 %4618, -1
  %4624 = trunc i64 %4618 to i32
  %4625 = icmp sgt i32 %4624, 0
  br i1 %4625, label %4617, label %4626, !llvm.loop !355

4626:                                             ; preds = %4617, %4608
  %4627 = phi i32 [ %4612, %4608 ], [ %4622, %4617 ]
  %4628 = and i64 %4577, 4294967295
  %4629 = getelementptr inbounds i32, ptr %6, i64 %4628
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = mul nsw i32 %4630, %4627
  %4632 = add nsw i32 %4631, %4571
  %4633 = icmp sgt i64 %4569, 2
  %4634 = add nsw i64 %4570, -1
  %4635 = add i32 %4568, 1
  br i1 %4633, label %4567, label %4636, !llvm.loop !356

4636:                                             ; preds = %4626, %4562
  %4637 = phi i32 [ %4566, %4562 ], [ %4632, %4626 ]
  %4638 = sext i32 %4637 to i64
  %4639 = getelementptr inbounds i32, ptr %4233, i64 %4638
  %4640 = load i32, ptr %4639, align 4, !tbaa !5
  %4641 = sitofp i32 %4640 to float
  %4642 = fadd fast float %4563, %4641
  %4643 = fadd fast double %4565, 1.000000e+00
  %4644 = add nuw nsw i32 %4564, 1
  br i1 %4556, label %4645, label %4692

4645:                                             ; preds = %4636
  %4646 = load i32, ptr %4, align 4, !tbaa !5
  %4647 = load i32, ptr %12, align 4, !tbaa !5
  %4648 = add nsw i32 %4647, -1
  %4649 = icmp slt i32 %4646, %4648
  br i1 %4649, label %4669, label %4650

4650:                                             ; preds = %4645
  %4651 = icmp eq i32 %4646, %4648
  br i1 %4651, label %4652, label %4685

4652:                                             ; preds = %4650
  store i32 0, ptr %4, align 4, !tbaa !5
  %4653 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4653, ptr %6, align 4, !tbaa !5
  br i1 %4561, label %4692, label %4654

4654:                                             ; preds = %4652, %4679
  %4655 = phi i64 [ %4683, %4679 ], [ 1, %4652 ]
  %4656 = getelementptr inbounds i32, ptr %4, i64 %4655
  %4657 = load i32, ptr %4656, align 4, !tbaa !5
  %4658 = getelementptr inbounds i32, ptr %12, i64 %4655
  %4659 = load i32, ptr %4658, align 4, !tbaa !5
  %4660 = add nsw i32 %4659, -1
  %4661 = icmp slt i32 %4657, %4660
  br i1 %4661, label %4662, label %4677

4662:                                             ; preds = %4654
  br i1 %4649, label %4669, label %4663

4663:                                             ; preds = %4662
  %4664 = getelementptr inbounds i32, ptr %7, i64 %4655
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = getelementptr inbounds i32, ptr %6, i64 %4655
  %4667 = load i32, ptr %4666, align 4, !tbaa !5
  %4668 = add nsw i32 %4667, %4665
  store i32 %4668, ptr %4666, align 4, !tbaa !5
  br label %4687

4669:                                             ; preds = %4645, %4662
  %4670 = phi i32 [ %4657, %4662 ], [ %4646, %4645 ]
  %4671 = phi ptr [ %4656, %4662 ], [ %4, %4645 ]
  %4672 = phi i64 [ %4655, %4662 ], [ 0, %4645 ]
  %4673 = add nsw i32 %4670, 1
  store i32 %4673, ptr %4671, align 4, !tbaa !5
  %4674 = getelementptr inbounds i32, ptr %7, i64 %4672
  %4675 = load i32, ptr %4674, align 4, !tbaa !5
  %4676 = getelementptr inbounds i32, ptr %6, i64 %4672
  br label %4687

4677:                                             ; preds = %4654
  %4678 = icmp eq i32 %4657, %4660
  br i1 %4678, label %4679, label %4685

4679:                                             ; preds = %4677
  store i32 0, ptr %4656, align 4, !tbaa !5
  %4680 = getelementptr inbounds i32, ptr %8, i64 %4655
  %4681 = load i32, ptr %4680, align 4, !tbaa !5
  %4682 = getelementptr inbounds i32, ptr %6, i64 %4655
  store i32 %4681, ptr %4682, align 4, !tbaa !5
  %4683 = add nuw nsw i64 %4655, 1
  %4684 = icmp eq i64 %4683, %4559
  br i1 %4684, label %4692, label %4654, !llvm.loop !357

4685:                                             ; preds = %4650, %4677
  store float %4642, ptr %4235, align 4, !tbaa !162
  %4686 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4687:                                             ; preds = %4663, %4669
  %4688 = phi ptr [ %4676, %4669 ], [ %4656, %4663 ]
  %4689 = phi i32 [ %4675, %4669 ], [ 1, %4663 ]
  %4690 = load i32, ptr %4688, align 4, !tbaa !5
  %4691 = add nsw i32 %4690, %4689
  store i32 %4691, ptr %4688, align 4, !tbaa !5
  br label %4692

4692:                                             ; preds = %4679, %4687, %4652, %4636
  %4693 = icmp eq i32 %4644, %5
  br i1 %4693, label %5438, label %4562, !llvm.loop !358

4694:                                             ; preds = %4545, %4829
  %4695 = phi float [ 0.000000e+00, %4545 ], [ %4777, %4829 ]
  %4696 = phi i32 [ 0, %4545 ], [ %4778, %4829 ]
  %4697 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4546, label %4698, label %4767

4698:                                             ; preds = %4694, %4757
  %4699 = phi i32 [ %4766, %4757 ], [ 0, %4694 ]
  %4700 = phi i64 [ %4708, %4757 ], [ %4550, %4694 ]
  %4701 = phi i64 [ %4765, %4757 ], [ %4549, %4694 ]
  %4702 = phi i32 [ %4763, %4757 ], [ %4697, %4694 ]
  %4703 = sub i32 %4548, %4699
  %4704 = tail call i32 @llvm.smin.i32(i32 %4703, i32 0)
  %4705 = sub i32 %4703, %4704
  %4706 = zext i32 %4705 to i64
  %4707 = add nuw nsw i64 %4706, 1
  %4708 = add nsw i64 %4700, -1
  %4709 = icmp ult i32 %4705, 31
  br i1 %4709, label %4745, label %4710

4710:                                             ; preds = %4698
  %4711 = and i64 %4707, 8589934560
  %4712 = sub i64 %4701, %4711
  br label %4713

4713:                                             ; preds = %4713, %4710
  %4714 = phi i64 [ 0, %4710 ], [ %4737, %4713 ]
  %4715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4733, %4713 ]
  %4716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4734, %4713 ]
  %4717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4735, %4713 ]
  %4718 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4736, %4713 ]
  %4719 = sub i64 %4701, %4714
  %4720 = getelementptr inbounds i32, ptr %11, i64 %4719
  %4721 = getelementptr inbounds i32, ptr %4720, i64 -7
  %4722 = load <8 x i32>, ptr %4721, align 4, !tbaa !5
  %4723 = shufflevector <8 x i32> %4722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4724 = getelementptr inbounds i32, ptr %4720, i64 -15
  %4725 = load <8 x i32>, ptr %4724, align 4, !tbaa !5
  %4726 = shufflevector <8 x i32> %4725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4727 = getelementptr inbounds i32, ptr %4720, i64 -23
  %4728 = load <8 x i32>, ptr %4727, align 4, !tbaa !5
  %4729 = shufflevector <8 x i32> %4728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4730 = getelementptr inbounds i32, ptr %4720, i64 -31
  %4731 = load <8 x i32>, ptr %4730, align 4, !tbaa !5
  %4732 = shufflevector <8 x i32> %4731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4733 = mul <8 x i32> %4723, %4715
  %4734 = mul <8 x i32> %4726, %4716
  %4735 = mul <8 x i32> %4729, %4717
  %4736 = mul <8 x i32> %4732, %4718
  %4737 = add nuw i64 %4714, 32
  %4738 = icmp eq i64 %4737, %4711
  br i1 %4738, label %4739, label %4713, !llvm.loop !359

4739:                                             ; preds = %4713
  %4740 = mul <8 x i32> %4734, %4733
  %4741 = mul <8 x i32> %4735, %4740
  %4742 = mul <8 x i32> %4736, %4741
  %4743 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4742)
  %4744 = icmp eq i64 %4707, %4711
  br i1 %4744, label %4757, label %4745

4745:                                             ; preds = %4698, %4739
  %4746 = phi i64 [ %4701, %4698 ], [ %4712, %4739 ]
  %4747 = phi i32 [ 1, %4698 ], [ %4743, %4739 ]
  br label %4748

4748:                                             ; preds = %4745, %4748
  %4749 = phi i64 [ %4754, %4748 ], [ %4746, %4745 ]
  %4750 = phi i32 [ %4753, %4748 ], [ %4747, %4745 ]
  %4751 = getelementptr inbounds i32, ptr %11, i64 %4749
  %4752 = load i32, ptr %4751, align 4, !tbaa !5
  %4753 = mul nsw i32 %4752, %4750
  %4754 = add nsw i64 %4749, -1
  %4755 = trunc i64 %4749 to i32
  %4756 = icmp sgt i32 %4755, 0
  br i1 %4756, label %4748, label %4757, !llvm.loop !360

4757:                                             ; preds = %4748, %4739
  %4758 = phi i32 [ %4743, %4739 ], [ %4753, %4748 ]
  %4759 = and i64 %4708, 4294967295
  %4760 = getelementptr inbounds i32, ptr %6, i64 %4759
  %4761 = load i32, ptr %4760, align 4, !tbaa !5
  %4762 = mul nsw i32 %4761, %4758
  %4763 = add nsw i32 %4762, %4702
  %4764 = icmp sgt i64 %4700, 2
  %4765 = add nsw i64 %4701, -1
  %4766 = add i32 %4699, 1
  br i1 %4764, label %4698, label %4767, !llvm.loop !361

4767:                                             ; preds = %4757, %4694
  %4768 = phi i32 [ %4697, %4694 ], [ %4763, %4757 ]
  %4769 = icmp slt i32 %4768, %5
  br i1 %4769, label %4772, label %4770

4770:                                             ; preds = %4767
  %4771 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4772:                                             ; preds = %4767
  %4773 = sext i32 %4768 to i64
  %4774 = getelementptr inbounds i32, ptr %4233, i64 %4773
  %4775 = load i32, ptr %4774, align 4, !tbaa !5
  %4776 = sitofp i32 %4775 to float
  %4777 = fadd fast float %4695, %4776
  store float %4777, ptr %4235, align 4, !tbaa !162
  %4778 = add nuw nsw i32 %4696, 1
  br i1 %4547, label %4779, label %4829

4779:                                             ; preds = %4772
  %4780 = load i32, ptr %4, align 4, !tbaa !5
  %4781 = load i32, ptr %12, align 4, !tbaa !5
  %4782 = add nsw i32 %4781, -1
  %4783 = icmp slt i32 %4780, %4782
  br i1 %4783, label %4806, label %4784

4784:                                             ; preds = %4779
  %4785 = icmp eq i32 %4780, %4782
  br i1 %4785, label %4786, label %4822

4786:                                             ; preds = %4784
  store i32 0, ptr %4, align 4, !tbaa !5
  %4787 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4787, ptr %6, align 4, !tbaa !5
  br i1 %4552, label %4829, label %4788

4788:                                             ; preds = %4786, %4816
  %4789 = phi i64 [ %4820, %4816 ], [ 1, %4786 ]
  %4790 = getelementptr inbounds i32, ptr %4, i64 %4789
  %4791 = load i32, ptr %4790, align 4, !tbaa !5
  %4792 = getelementptr inbounds i32, ptr %12, i64 %4789
  %4793 = load i32, ptr %4792, align 4, !tbaa !5
  %4794 = add nsw i32 %4793, -1
  %4795 = icmp slt i32 %4791, %4794
  br i1 %4795, label %4796, label %4814

4796:                                             ; preds = %4788
  br i1 %4783, label %4806, label %4797

4797:                                             ; preds = %4796
  %4798 = shl i64 %4789, 32
  %4799 = add i64 %4798, -4294967296
  %4800 = ashr exact i64 %4799, 32
  %4801 = getelementptr inbounds i32, ptr %7, i64 %4800
  %4802 = load i32, ptr %4801, align 4, !tbaa !5
  %4803 = getelementptr inbounds i32, ptr %6, i64 %4789
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = add nsw i32 %4804, %4802
  store i32 %4805, ptr %4803, align 4, !tbaa !5
  br label %4824

4806:                                             ; preds = %4779, %4796
  %4807 = phi i32 [ %4791, %4796 ], [ %4780, %4779 ]
  %4808 = phi ptr [ %4790, %4796 ], [ %4, %4779 ]
  %4809 = phi i64 [ %4789, %4796 ], [ 0, %4779 ]
  %4810 = add nsw i32 %4807, 1
  store i32 %4810, ptr %4808, align 4, !tbaa !5
  %4811 = getelementptr inbounds i32, ptr %7, i64 %4809
  %4812 = load i32, ptr %4811, align 4, !tbaa !5
  %4813 = getelementptr inbounds i32, ptr %6, i64 %4809
  br label %4824

4814:                                             ; preds = %4788
  %4815 = icmp eq i32 %4791, %4794
  br i1 %4815, label %4816, label %4822

4816:                                             ; preds = %4814
  store i32 0, ptr %4790, align 4, !tbaa !5
  %4817 = getelementptr inbounds i32, ptr %8, i64 %4789
  %4818 = load i32, ptr %4817, align 4, !tbaa !5
  %4819 = getelementptr inbounds i32, ptr %6, i64 %4789
  store i32 %4818, ptr %4819, align 4, !tbaa !5
  %4820 = add nuw nsw i64 %4789, 1
  %4821 = icmp eq i64 %4820, %4550
  br i1 %4821, label %4829, label %4788, !llvm.loop !362

4822:                                             ; preds = %4784, %4814
  %4823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4824:                                             ; preds = %4797, %4806
  %4825 = phi ptr [ %4813, %4806 ], [ %4790, %4797 ]
  %4826 = phi i32 [ %4812, %4806 ], [ 1, %4797 ]
  %4827 = load i32, ptr %4825, align 4, !tbaa !5
  %4828 = add nsw i32 %4827, %4826
  store i32 %4828, ptr %4825, align 4, !tbaa !5
  br label %4829

4829:                                             ; preds = %4816, %4824, %4786, %4772
  %4830 = icmp eq i32 %4778, %5
  br i1 %4830, label %5440, label %4694, !llvm.loop !363

4831:                                             ; preds = %4240
  %4832 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

4833:                                             ; preds = %18
  %4834 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4835 = load ptr, ptr %4834, align 8, !tbaa !9
  %4836 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4837 = load ptr, ptr %4836, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4837, align 8, !tbaa !18
  %4838 = icmp eq i32 %13, 0
  br i1 %4838, label %4839, label %4842

4839:                                             ; preds = %4833
  %4840 = load i32, ptr %4835, align 4, !tbaa !5
  %4841 = sitofp i32 %4840 to double
  store double %4841, ptr %4837, align 8, !tbaa !18
  br label %5440

4842:                                             ; preds = %4833
  switch i32 %1, label %5430 [
    i32 1, label %4843
    i32 0, label %5138
  ]

4843:                                             ; preds = %4842
  %4844 = getelementptr inbounds i32, ptr %3, i64 %19
  %4845 = load i32, ptr %4844, align 4, !tbaa !5
  %4846 = icmp eq i32 %4845, 0
  %4847 = icmp sgt i32 %5, 0
  br i1 %4846, label %4857, label %4848

4848:                                             ; preds = %4843
  br i1 %4847, label %4849, label %5440

4849:                                             ; preds = %4848
  %4850 = icmp sgt i32 %13, 1
  %4851 = icmp sgt i32 %13, 0
  %4852 = add i32 %13, -2
  %4853 = zext i32 %4852 to i64
  %4854 = zext i32 %13 to i64
  %4855 = add nuw i32 %5, 1
  %4856 = icmp eq i32 %13, 1
  br label %5001

4857:                                             ; preds = %4843
  br i1 %4847, label %4858, label %5440

4858:                                             ; preds = %4857
  %4859 = icmp sgt i32 %13, 1
  %4860 = icmp sgt i32 %13, 0
  %4861 = add i32 %13, -2
  %4862 = zext i32 %4861 to i64
  %4863 = zext i32 %13 to i64
  %4864 = add nuw i32 %5, 1
  %4865 = icmp eq i32 %13, 1
  br label %4866

4866:                                             ; preds = %4858, %4999
  %4867 = phi double [ 0.000000e+00, %4858 ], [ %4949, %4999 ]
  %4868 = phi i32 [ 0, %4858 ], [ %4951, %4999 ]
  %4869 = phi double [ 0.000000e+00, %4858 ], [ %4950, %4999 ]
  %4870 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %4871, label %4940

4871:                                             ; preds = %4866, %4930
  %4872 = phi i32 [ %4939, %4930 ], [ 0, %4866 ]
  %4873 = phi i64 [ %4881, %4930 ], [ %4863, %4866 ]
  %4874 = phi i64 [ %4938, %4930 ], [ %4862, %4866 ]
  %4875 = phi i32 [ %4936, %4930 ], [ %4870, %4866 ]
  %4876 = sub i32 %4861, %4872
  %4877 = tail call i32 @llvm.smin.i32(i32 %4876, i32 0)
  %4878 = sub i32 %4876, %4877
  %4879 = zext i32 %4878 to i64
  %4880 = add nuw nsw i64 %4879, 1
  %4881 = add nsw i64 %4873, -1
  %4882 = icmp ult i32 %4878, 31
  br i1 %4882, label %4918, label %4883

4883:                                             ; preds = %4871
  %4884 = and i64 %4880, 8589934560
  %4885 = sub i64 %4874, %4884
  br label %4886

4886:                                             ; preds = %4886, %4883
  %4887 = phi i64 [ 0, %4883 ], [ %4910, %4886 ]
  %4888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4906, %4886 ]
  %4889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4907, %4886 ]
  %4890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4908, %4886 ]
  %4891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4909, %4886 ]
  %4892 = sub i64 %4874, %4887
  %4893 = getelementptr inbounds i32, ptr %9, i64 %4892
  %4894 = getelementptr inbounds i32, ptr %4893, i64 -7
  %4895 = load <8 x i32>, ptr %4894, align 4, !tbaa !5
  %4896 = shufflevector <8 x i32> %4895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4897 = getelementptr inbounds i32, ptr %4893, i64 -15
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = getelementptr inbounds i32, ptr %4893, i64 -23
  %4901 = load <8 x i32>, ptr %4900, align 4, !tbaa !5
  %4902 = shufflevector <8 x i32> %4901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4903 = getelementptr inbounds i32, ptr %4893, i64 -31
  %4904 = load <8 x i32>, ptr %4903, align 4, !tbaa !5
  %4905 = shufflevector <8 x i32> %4904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4906 = mul <8 x i32> %4896, %4888
  %4907 = mul <8 x i32> %4899, %4889
  %4908 = mul <8 x i32> %4902, %4890
  %4909 = mul <8 x i32> %4905, %4891
  %4910 = add nuw i64 %4887, 32
  %4911 = icmp eq i64 %4910, %4884
  br i1 %4911, label %4912, label %4886, !llvm.loop !364

4912:                                             ; preds = %4886
  %4913 = mul <8 x i32> %4907, %4906
  %4914 = mul <8 x i32> %4908, %4913
  %4915 = mul <8 x i32> %4909, %4914
  %4916 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4915)
  %4917 = icmp eq i64 %4880, %4884
  br i1 %4917, label %4930, label %4918

4918:                                             ; preds = %4871, %4912
  %4919 = phi i64 [ %4874, %4871 ], [ %4885, %4912 ]
  %4920 = phi i32 [ 1, %4871 ], [ %4916, %4912 ]
  br label %4921

4921:                                             ; preds = %4918, %4921
  %4922 = phi i64 [ %4927, %4921 ], [ %4919, %4918 ]
  %4923 = phi i32 [ %4926, %4921 ], [ %4920, %4918 ]
  %4924 = getelementptr inbounds i32, ptr %9, i64 %4922
  %4925 = load i32, ptr %4924, align 4, !tbaa !5
  %4926 = mul nsw i32 %4925, %4923
  %4927 = add nsw i64 %4922, -1
  %4928 = trunc i64 %4922 to i32
  %4929 = icmp sgt i32 %4928, 0
  br i1 %4929, label %4921, label %4930, !llvm.loop !365

4930:                                             ; preds = %4921, %4912
  %4931 = phi i32 [ %4916, %4912 ], [ %4926, %4921 ]
  %4932 = and i64 %4881, 4294967295
  %4933 = getelementptr inbounds i32, ptr %6, i64 %4932
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = mul nsw i32 %4934, %4931
  %4936 = add nsw i32 %4935, %4875
  %4937 = icmp sgt i64 %4873, 2
  %4938 = add nsw i64 %4874, -1
  %4939 = add i32 %4872, 1
  br i1 %4937, label %4871, label %4940, !llvm.loop !366

4940:                                             ; preds = %4930, %4866
  %4941 = phi i32 [ %4870, %4866 ], [ %4936, %4930 ]
  %4942 = sext i32 %4941 to i64
  %4943 = getelementptr inbounds double, ptr %2, i64 %4942
  %4944 = load double, ptr %4943, align 8, !tbaa !18
  %4945 = getelementptr inbounds i32, ptr %4835, i64 %4942
  %4946 = load i32, ptr %4945, align 4, !tbaa !5
  %4947 = sitofp i32 %4946 to double
  %4948 = fmul fast double %4944, %4947
  %4949 = fadd fast double %4948, %4867
  store double %4949, ptr %4837, align 8, !tbaa !18
  %4950 = fadd fast double %4944, %4869
  %4951 = add nuw nsw i32 %4868, 1
  br i1 %4860, label %4952, label %4999

4952:                                             ; preds = %4940
  %4953 = load i32, ptr %4, align 4, !tbaa !5
  %4954 = load i32, ptr %12, align 4, !tbaa !5
  %4955 = add nsw i32 %4954, -1
  %4956 = icmp slt i32 %4953, %4955
  br i1 %4956, label %4976, label %4957

4957:                                             ; preds = %4952
  %4958 = icmp eq i32 %4953, %4955
  br i1 %4958, label %4959, label %4992

4959:                                             ; preds = %4957
  store i32 0, ptr %4, align 4, !tbaa !5
  %4960 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4960, ptr %6, align 4, !tbaa !5
  br i1 %4865, label %4999, label %4961

4961:                                             ; preds = %4959, %4986
  %4962 = phi i64 [ %4990, %4986 ], [ 1, %4959 ]
  %4963 = getelementptr inbounds i32, ptr %4, i64 %4962
  %4964 = load i32, ptr %4963, align 4, !tbaa !5
  %4965 = getelementptr inbounds i32, ptr %12, i64 %4962
  %4966 = load i32, ptr %4965, align 4, !tbaa !5
  %4967 = add nsw i32 %4966, -1
  %4968 = icmp slt i32 %4964, %4967
  br i1 %4968, label %4969, label %4984

4969:                                             ; preds = %4961
  br i1 %4956, label %4976, label %4970

4970:                                             ; preds = %4969
  %4971 = getelementptr inbounds i32, ptr %7, i64 %4962
  %4972 = load i32, ptr %4971, align 4, !tbaa !5
  %4973 = getelementptr inbounds i32, ptr %6, i64 %4962
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = add nsw i32 %4974, %4972
  store i32 %4975, ptr %4973, align 4, !tbaa !5
  br label %4994

4976:                                             ; preds = %4952, %4969
  %4977 = phi i32 [ %4964, %4969 ], [ %4953, %4952 ]
  %4978 = phi ptr [ %4963, %4969 ], [ %4, %4952 ]
  %4979 = phi i64 [ %4962, %4969 ], [ 0, %4952 ]
  %4980 = add nsw i32 %4977, 1
  store i32 %4980, ptr %4978, align 4, !tbaa !5
  %4981 = getelementptr inbounds i32, ptr %7, i64 %4979
  %4982 = load i32, ptr %4981, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %6, i64 %4979
  br label %4994

4984:                                             ; preds = %4961
  %4985 = icmp eq i32 %4964, %4967
  br i1 %4985, label %4986, label %4992

4986:                                             ; preds = %4984
  store i32 0, ptr %4963, align 4, !tbaa !5
  %4987 = getelementptr inbounds i32, ptr %8, i64 %4962
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4962
  store i32 %4988, ptr %4989, align 4, !tbaa !5
  %4990 = add nuw nsw i64 %4962, 1
  %4991 = icmp eq i64 %4990, %4863
  br i1 %4991, label %4999, label %4961, !llvm.loop !367

4992:                                             ; preds = %4957, %4984
  %4993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4994:                                             ; preds = %4970, %4976
  %4995 = phi ptr [ %4983, %4976 ], [ %4963, %4970 ]
  %4996 = phi i32 [ %4982, %4976 ], [ 1, %4970 ]
  %4997 = load i32, ptr %4995, align 4, !tbaa !5
  %4998 = add nsw i32 %4997, %4996
  store i32 %4998, ptr %4995, align 4, !tbaa !5
  br label %4999

4999:                                             ; preds = %4986, %4994, %4959, %4940
  %5000 = icmp eq i32 %4951, %5
  br i1 %5000, label %5440, label %4866, !llvm.loop !368

5001:                                             ; preds = %4849, %5136
  %5002 = phi double [ 0.000000e+00, %4849 ], [ %5084, %5136 ]
  %5003 = phi i32 [ 0, %4849 ], [ %5085, %5136 ]
  %5004 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4850, label %5005, label %5074

5005:                                             ; preds = %5001, %5064
  %5006 = phi i32 [ %5073, %5064 ], [ 0, %5001 ]
  %5007 = phi i64 [ %5015, %5064 ], [ %4854, %5001 ]
  %5008 = phi i64 [ %5072, %5064 ], [ %4853, %5001 ]
  %5009 = phi i32 [ %5070, %5064 ], [ %5004, %5001 ]
  %5010 = sub i32 %4852, %5006
  %5011 = tail call i32 @llvm.smin.i32(i32 %5010, i32 0)
  %5012 = sub i32 %5010, %5011
  %5013 = zext i32 %5012 to i64
  %5014 = add nuw nsw i64 %5013, 1
  %5015 = add nsw i64 %5007, -1
  %5016 = icmp ult i32 %5012, 31
  br i1 %5016, label %5052, label %5017

5017:                                             ; preds = %5005
  %5018 = and i64 %5014, 8589934560
  %5019 = sub i64 %5008, %5018
  br label %5020

5020:                                             ; preds = %5020, %5017
  %5021 = phi i64 [ 0, %5017 ], [ %5044, %5020 ]
  %5022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5040, %5020 ]
  %5023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5041, %5020 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5042, %5020 ]
  %5025 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5043, %5020 ]
  %5026 = sub i64 %5008, %5021
  %5027 = getelementptr inbounds i32, ptr %11, i64 %5026
  %5028 = getelementptr inbounds i32, ptr %5027, i64 -7
  %5029 = load <8 x i32>, ptr %5028, align 4, !tbaa !5
  %5030 = shufflevector <8 x i32> %5029, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5031 = getelementptr inbounds i32, ptr %5027, i64 -15
  %5032 = load <8 x i32>, ptr %5031, align 4, !tbaa !5
  %5033 = shufflevector <8 x i32> %5032, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5034 = getelementptr inbounds i32, ptr %5027, i64 -23
  %5035 = load <8 x i32>, ptr %5034, align 4, !tbaa !5
  %5036 = shufflevector <8 x i32> %5035, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5037 = getelementptr inbounds i32, ptr %5027, i64 -31
  %5038 = load <8 x i32>, ptr %5037, align 4, !tbaa !5
  %5039 = shufflevector <8 x i32> %5038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5040 = mul <8 x i32> %5030, %5022
  %5041 = mul <8 x i32> %5033, %5023
  %5042 = mul <8 x i32> %5036, %5024
  %5043 = mul <8 x i32> %5039, %5025
  %5044 = add nuw i64 %5021, 32
  %5045 = icmp eq i64 %5044, %5018
  br i1 %5045, label %5046, label %5020, !llvm.loop !369

5046:                                             ; preds = %5020
  %5047 = mul <8 x i32> %5041, %5040
  %5048 = mul <8 x i32> %5042, %5047
  %5049 = mul <8 x i32> %5043, %5048
  %5050 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5049)
  %5051 = icmp eq i64 %5014, %5018
  br i1 %5051, label %5064, label %5052

5052:                                             ; preds = %5005, %5046
  %5053 = phi i64 [ %5008, %5005 ], [ %5019, %5046 ]
  %5054 = phi i32 [ 1, %5005 ], [ %5050, %5046 ]
  br label %5055

5055:                                             ; preds = %5052, %5055
  %5056 = phi i64 [ %5061, %5055 ], [ %5053, %5052 ]
  %5057 = phi i32 [ %5060, %5055 ], [ %5054, %5052 ]
  %5058 = getelementptr inbounds i32, ptr %11, i64 %5056
  %5059 = load i32, ptr %5058, align 4, !tbaa !5
  %5060 = mul nsw i32 %5059, %5057
  %5061 = add nsw i64 %5056, -1
  %5062 = trunc i64 %5056 to i32
  %5063 = icmp sgt i32 %5062, 0
  br i1 %5063, label %5055, label %5064, !llvm.loop !370

5064:                                             ; preds = %5055, %5046
  %5065 = phi i32 [ %5050, %5046 ], [ %5060, %5055 ]
  %5066 = and i64 %5015, 4294967295
  %5067 = getelementptr inbounds i32, ptr %6, i64 %5066
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = mul nsw i32 %5068, %5065
  %5070 = add nsw i32 %5069, %5009
  %5071 = icmp sgt i64 %5007, 2
  %5072 = add nsw i64 %5008, -1
  %5073 = add i32 %5006, 1
  br i1 %5071, label %5005, label %5074, !llvm.loop !371

5074:                                             ; preds = %5064, %5001
  %5075 = phi i32 [ %5004, %5001 ], [ %5070, %5064 ]
  %5076 = icmp slt i32 %5075, %5
  br i1 %5076, label %5079, label %5077

5077:                                             ; preds = %5074
  %5078 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

5079:                                             ; preds = %5074
  %5080 = sext i32 %5075 to i64
  %5081 = getelementptr inbounds i32, ptr %4835, i64 %5080
  %5082 = load i32, ptr %5081, align 4, !tbaa !5
  %5083 = sitofp i32 %5082 to double
  %5084 = fadd fast double %5002, %5083
  store double %5084, ptr %4837, align 8, !tbaa !18
  %5085 = add nuw nsw i32 %5003, 1
  br i1 %4851, label %5086, label %5136

5086:                                             ; preds = %5079
  %5087 = load i32, ptr %4, align 4, !tbaa !5
  %5088 = load i32, ptr %12, align 4, !tbaa !5
  %5089 = add nsw i32 %5088, -1
  %5090 = icmp slt i32 %5087, %5089
  br i1 %5090, label %5113, label %5091

5091:                                             ; preds = %5086
  %5092 = icmp eq i32 %5087, %5089
  br i1 %5092, label %5093, label %5129

5093:                                             ; preds = %5091
  store i32 0, ptr %4, align 4, !tbaa !5
  %5094 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5094, ptr %6, align 4, !tbaa !5
  br i1 %4856, label %5136, label %5095

5095:                                             ; preds = %5093, %5123
  %5096 = phi i64 [ %5127, %5123 ], [ 1, %5093 ]
  %5097 = getelementptr inbounds i32, ptr %4, i64 %5096
  %5098 = load i32, ptr %5097, align 4, !tbaa !5
  %5099 = getelementptr inbounds i32, ptr %12, i64 %5096
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, -1
  %5102 = icmp slt i32 %5098, %5101
  br i1 %5102, label %5103, label %5121

5103:                                             ; preds = %5095
  br i1 %5090, label %5113, label %5104

5104:                                             ; preds = %5103
  %5105 = shl i64 %5096, 32
  %5106 = add i64 %5105, -4294967296
  %5107 = ashr exact i64 %5106, 32
  %5108 = getelementptr inbounds i32, ptr %7, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = getelementptr inbounds i32, ptr %6, i64 %5096
  %5111 = load i32, ptr %5110, align 4, !tbaa !5
  %5112 = add nsw i32 %5111, %5109
  store i32 %5112, ptr %5110, align 4, !tbaa !5
  br label %5131

5113:                                             ; preds = %5086, %5103
  %5114 = phi i32 [ %5098, %5103 ], [ %5087, %5086 ]
  %5115 = phi ptr [ %5097, %5103 ], [ %4, %5086 ]
  %5116 = phi i64 [ %5096, %5103 ], [ 0, %5086 ]
  %5117 = add nsw i32 %5114, 1
  store i32 %5117, ptr %5115, align 4, !tbaa !5
  %5118 = getelementptr inbounds i32, ptr %7, i64 %5116
  %5119 = load i32, ptr %5118, align 4, !tbaa !5
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5116
  br label %5131

5121:                                             ; preds = %5095
  %5122 = icmp eq i32 %5098, %5101
  br i1 %5122, label %5123, label %5129

5123:                                             ; preds = %5121
  store i32 0, ptr %5097, align 4, !tbaa !5
  %5124 = getelementptr inbounds i32, ptr %8, i64 %5096
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = getelementptr inbounds i32, ptr %6, i64 %5096
  store i32 %5125, ptr %5126, align 4, !tbaa !5
  %5127 = add nuw nsw i64 %5096, 1
  %5128 = icmp eq i64 %5127, %4854
  br i1 %5128, label %5136, label %5095, !llvm.loop !372

5129:                                             ; preds = %5091, %5121
  %5130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5131:                                             ; preds = %5104, %5113
  %5132 = phi ptr [ %5120, %5113 ], [ %5097, %5104 ]
  %5133 = phi i32 [ %5119, %5113 ], [ 1, %5104 ]
  %5134 = load i32, ptr %5132, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, %5133
  store i32 %5135, ptr %5132, align 4, !tbaa !5
  br label %5136

5136:                                             ; preds = %5123, %5131, %5093, %5079
  %5137 = icmp eq i32 %5085, %5
  br i1 %5137, label %5440, label %5001, !llvm.loop !373

5138:                                             ; preds = %4842
  %5139 = getelementptr inbounds i32, ptr %3, i64 %19
  %5140 = load i32, ptr %5139, align 4, !tbaa !5
  %5141 = icmp eq i32 %5140, 0
  %5142 = icmp sgt i32 %5, 0
  br i1 %5141, label %5152, label %5143

5143:                                             ; preds = %5138
  br i1 %5142, label %5144, label %5440

5144:                                             ; preds = %5143
  %5145 = icmp sgt i32 %13, 1
  %5146 = icmp sgt i32 %13, 0
  %5147 = add i32 %13, -2
  %5148 = zext i32 %5147 to i64
  %5149 = zext i32 %13 to i64
  %5150 = add nuw i32 %5, 1
  %5151 = icmp eq i32 %13, 1
  br label %5293

5152:                                             ; preds = %5138
  br i1 %5142, label %5153, label %5440

5153:                                             ; preds = %5152
  %5154 = icmp sgt i32 %13, 1
  %5155 = icmp sgt i32 %13, 0
  %5156 = add i32 %13, -2
  %5157 = zext i32 %5156 to i64
  %5158 = zext i32 %13 to i64
  %5159 = add nuw i32 %5, 1
  %5160 = icmp eq i32 %13, 1
  br label %5161

5161:                                             ; preds = %5153, %5291
  %5162 = phi double [ 0.000000e+00, %5153 ], [ %5241, %5291 ]
  %5163 = phi i32 [ 0, %5153 ], [ %5243, %5291 ]
  %5164 = phi double [ 0.000000e+00, %5153 ], [ %5242, %5291 ]
  %5165 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5154, label %5166, label %5235

5166:                                             ; preds = %5161, %5225
  %5167 = phi i32 [ %5234, %5225 ], [ 0, %5161 ]
  %5168 = phi i64 [ %5176, %5225 ], [ %5158, %5161 ]
  %5169 = phi i64 [ %5233, %5225 ], [ %5157, %5161 ]
  %5170 = phi i32 [ %5231, %5225 ], [ %5165, %5161 ]
  %5171 = sub i32 %5156, %5167
  %5172 = tail call i32 @llvm.smin.i32(i32 %5171, i32 0)
  %5173 = sub i32 %5171, %5172
  %5174 = zext i32 %5173 to i64
  %5175 = add nuw nsw i64 %5174, 1
  %5176 = add nsw i64 %5168, -1
  %5177 = icmp ult i32 %5173, 31
  br i1 %5177, label %5213, label %5178

5178:                                             ; preds = %5166
  %5179 = and i64 %5175, 8589934560
  %5180 = sub i64 %5169, %5179
  br label %5181

5181:                                             ; preds = %5181, %5178
  %5182 = phi i64 [ 0, %5178 ], [ %5205, %5181 ]
  %5183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5201, %5181 ]
  %5184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5202, %5181 ]
  %5185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5203, %5181 ]
  %5186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5204, %5181 ]
  %5187 = sub i64 %5169, %5182
  %5188 = getelementptr inbounds i32, ptr %9, i64 %5187
  %5189 = getelementptr inbounds i32, ptr %5188, i64 -7
  %5190 = load <8 x i32>, ptr %5189, align 4, !tbaa !5
  %5191 = shufflevector <8 x i32> %5190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5192 = getelementptr inbounds i32, ptr %5188, i64 -15
  %5193 = load <8 x i32>, ptr %5192, align 4, !tbaa !5
  %5194 = shufflevector <8 x i32> %5193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5195 = getelementptr inbounds i32, ptr %5188, i64 -23
  %5196 = load <8 x i32>, ptr %5195, align 4, !tbaa !5
  %5197 = shufflevector <8 x i32> %5196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5198 = getelementptr inbounds i32, ptr %5188, i64 -31
  %5199 = load <8 x i32>, ptr %5198, align 4, !tbaa !5
  %5200 = shufflevector <8 x i32> %5199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5201 = mul <8 x i32> %5191, %5183
  %5202 = mul <8 x i32> %5194, %5184
  %5203 = mul <8 x i32> %5197, %5185
  %5204 = mul <8 x i32> %5200, %5186
  %5205 = add nuw i64 %5182, 32
  %5206 = icmp eq i64 %5205, %5179
  br i1 %5206, label %5207, label %5181, !llvm.loop !374

5207:                                             ; preds = %5181
  %5208 = mul <8 x i32> %5202, %5201
  %5209 = mul <8 x i32> %5203, %5208
  %5210 = mul <8 x i32> %5204, %5209
  %5211 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5210)
  %5212 = icmp eq i64 %5175, %5179
  br i1 %5212, label %5225, label %5213

5213:                                             ; preds = %5166, %5207
  %5214 = phi i64 [ %5169, %5166 ], [ %5180, %5207 ]
  %5215 = phi i32 [ 1, %5166 ], [ %5211, %5207 ]
  br label %5216

5216:                                             ; preds = %5213, %5216
  %5217 = phi i64 [ %5222, %5216 ], [ %5214, %5213 ]
  %5218 = phi i32 [ %5221, %5216 ], [ %5215, %5213 ]
  %5219 = getelementptr inbounds i32, ptr %9, i64 %5217
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = mul nsw i32 %5220, %5218
  %5222 = add nsw i64 %5217, -1
  %5223 = trunc i64 %5217 to i32
  %5224 = icmp sgt i32 %5223, 0
  br i1 %5224, label %5216, label %5225, !llvm.loop !375

5225:                                             ; preds = %5216, %5207
  %5226 = phi i32 [ %5211, %5207 ], [ %5221, %5216 ]
  %5227 = and i64 %5176, 4294967295
  %5228 = getelementptr inbounds i32, ptr %6, i64 %5227
  %5229 = load i32, ptr %5228, align 4, !tbaa !5
  %5230 = mul nsw i32 %5229, %5226
  %5231 = add nsw i32 %5230, %5170
  %5232 = icmp sgt i64 %5168, 2
  %5233 = add nsw i64 %5169, -1
  %5234 = add i32 %5167, 1
  br i1 %5232, label %5166, label %5235, !llvm.loop !376

5235:                                             ; preds = %5225, %5161
  %5236 = phi i32 [ %5165, %5161 ], [ %5231, %5225 ]
  %5237 = sext i32 %5236 to i64
  %5238 = getelementptr inbounds i32, ptr %4835, i64 %5237
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = sitofp i32 %5239 to double
  %5241 = fadd fast double %5162, %5240
  %5242 = fadd fast double %5164, 1.000000e+00
  %5243 = add nuw nsw i32 %5163, 1
  br i1 %5155, label %5244, label %5291

5244:                                             ; preds = %5235
  %5245 = load i32, ptr %4, align 4, !tbaa !5
  %5246 = load i32, ptr %12, align 4, !tbaa !5
  %5247 = add nsw i32 %5246, -1
  %5248 = icmp slt i32 %5245, %5247
  br i1 %5248, label %5268, label %5249

5249:                                             ; preds = %5244
  %5250 = icmp eq i32 %5245, %5247
  br i1 %5250, label %5251, label %5284

5251:                                             ; preds = %5249
  store i32 0, ptr %4, align 4, !tbaa !5
  %5252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5252, ptr %6, align 4, !tbaa !5
  br i1 %5160, label %5291, label %5253

5253:                                             ; preds = %5251, %5278
  %5254 = phi i64 [ %5282, %5278 ], [ 1, %5251 ]
  %5255 = getelementptr inbounds i32, ptr %4, i64 %5254
  %5256 = load i32, ptr %5255, align 4, !tbaa !5
  %5257 = getelementptr inbounds i32, ptr %12, i64 %5254
  %5258 = load i32, ptr %5257, align 4, !tbaa !5
  %5259 = add nsw i32 %5258, -1
  %5260 = icmp slt i32 %5256, %5259
  br i1 %5260, label %5261, label %5276

5261:                                             ; preds = %5253
  br i1 %5248, label %5268, label %5262

5262:                                             ; preds = %5261
  %5263 = getelementptr inbounds i32, ptr %7, i64 %5254
  %5264 = load i32, ptr %5263, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %6, i64 %5254
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = add nsw i32 %5266, %5264
  store i32 %5267, ptr %5265, align 4, !tbaa !5
  br label %5286

5268:                                             ; preds = %5244, %5261
  %5269 = phi i32 [ %5256, %5261 ], [ %5245, %5244 ]
  %5270 = phi ptr [ %5255, %5261 ], [ %4, %5244 ]
  %5271 = phi i64 [ %5254, %5261 ], [ 0, %5244 ]
  %5272 = add nsw i32 %5269, 1
  store i32 %5272, ptr %5270, align 4, !tbaa !5
  %5273 = getelementptr inbounds i32, ptr %7, i64 %5271
  %5274 = load i32, ptr %5273, align 4, !tbaa !5
  %5275 = getelementptr inbounds i32, ptr %6, i64 %5271
  br label %5286

5276:                                             ; preds = %5253
  %5277 = icmp eq i32 %5256, %5259
  br i1 %5277, label %5278, label %5284

5278:                                             ; preds = %5276
  store i32 0, ptr %5255, align 4, !tbaa !5
  %5279 = getelementptr inbounds i32, ptr %8, i64 %5254
  %5280 = load i32, ptr %5279, align 4, !tbaa !5
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5254
  store i32 %5280, ptr %5281, align 4, !tbaa !5
  %5282 = add nuw nsw i64 %5254, 1
  %5283 = icmp eq i64 %5282, %5158
  br i1 %5283, label %5291, label %5253, !llvm.loop !377

5284:                                             ; preds = %5249, %5276
  store double %5241, ptr %4837, align 8, !tbaa !18
  %5285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5286:                                             ; preds = %5262, %5268
  %5287 = phi ptr [ %5275, %5268 ], [ %5255, %5262 ]
  %5288 = phi i32 [ %5274, %5268 ], [ 1, %5262 ]
  %5289 = load i32, ptr %5287, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, %5288
  store i32 %5290, ptr %5287, align 4, !tbaa !5
  br label %5291

5291:                                             ; preds = %5278, %5286, %5251, %5235
  %5292 = icmp eq i32 %5243, %5
  br i1 %5292, label %5439, label %5161, !llvm.loop !378

5293:                                             ; preds = %5144, %5428
  %5294 = phi double [ 0.000000e+00, %5144 ], [ %5376, %5428 ]
  %5295 = phi i32 [ 0, %5144 ], [ %5377, %5428 ]
  %5296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5145, label %5297, label %5366

5297:                                             ; preds = %5293, %5356
  %5298 = phi i32 [ %5365, %5356 ], [ 0, %5293 ]
  %5299 = phi i64 [ %5307, %5356 ], [ %5149, %5293 ]
  %5300 = phi i64 [ %5364, %5356 ], [ %5148, %5293 ]
  %5301 = phi i32 [ %5362, %5356 ], [ %5296, %5293 ]
  %5302 = sub i32 %5147, %5298
  %5303 = tail call i32 @llvm.smin.i32(i32 %5302, i32 0)
  %5304 = sub i32 %5302, %5303
  %5305 = zext i32 %5304 to i64
  %5306 = add nuw nsw i64 %5305, 1
  %5307 = add nsw i64 %5299, -1
  %5308 = icmp ult i32 %5304, 31
  br i1 %5308, label %5344, label %5309

5309:                                             ; preds = %5297
  %5310 = and i64 %5306, 8589934560
  %5311 = sub i64 %5300, %5310
  br label %5312

5312:                                             ; preds = %5312, %5309
  %5313 = phi i64 [ 0, %5309 ], [ %5336, %5312 ]
  %5314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5332, %5312 ]
  %5315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5333, %5312 ]
  %5316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5334, %5312 ]
  %5317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5335, %5312 ]
  %5318 = sub i64 %5300, %5313
  %5319 = getelementptr inbounds i32, ptr %11, i64 %5318
  %5320 = getelementptr inbounds i32, ptr %5319, i64 -7
  %5321 = load <8 x i32>, ptr %5320, align 4, !tbaa !5
  %5322 = shufflevector <8 x i32> %5321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5323 = getelementptr inbounds i32, ptr %5319, i64 -15
  %5324 = load <8 x i32>, ptr %5323, align 4, !tbaa !5
  %5325 = shufflevector <8 x i32> %5324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5326 = getelementptr inbounds i32, ptr %5319, i64 -23
  %5327 = load <8 x i32>, ptr %5326, align 4, !tbaa !5
  %5328 = shufflevector <8 x i32> %5327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5329 = getelementptr inbounds i32, ptr %5319, i64 -31
  %5330 = load <8 x i32>, ptr %5329, align 4, !tbaa !5
  %5331 = shufflevector <8 x i32> %5330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5332 = mul <8 x i32> %5322, %5314
  %5333 = mul <8 x i32> %5325, %5315
  %5334 = mul <8 x i32> %5328, %5316
  %5335 = mul <8 x i32> %5331, %5317
  %5336 = add nuw i64 %5313, 32
  %5337 = icmp eq i64 %5336, %5310
  br i1 %5337, label %5338, label %5312, !llvm.loop !379

5338:                                             ; preds = %5312
  %5339 = mul <8 x i32> %5333, %5332
  %5340 = mul <8 x i32> %5334, %5339
  %5341 = mul <8 x i32> %5335, %5340
  %5342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5341)
  %5343 = icmp eq i64 %5306, %5310
  br i1 %5343, label %5356, label %5344

5344:                                             ; preds = %5297, %5338
  %5345 = phi i64 [ %5300, %5297 ], [ %5311, %5338 ]
  %5346 = phi i32 [ 1, %5297 ], [ %5342, %5338 ]
  br label %5347

5347:                                             ; preds = %5344, %5347
  %5348 = phi i64 [ %5353, %5347 ], [ %5345, %5344 ]
  %5349 = phi i32 [ %5352, %5347 ], [ %5346, %5344 ]
  %5350 = getelementptr inbounds i32, ptr %11, i64 %5348
  %5351 = load i32, ptr %5350, align 4, !tbaa !5
  %5352 = mul nsw i32 %5351, %5349
  %5353 = add nsw i64 %5348, -1
  %5354 = trunc i64 %5348 to i32
  %5355 = icmp sgt i32 %5354, 0
  br i1 %5355, label %5347, label %5356, !llvm.loop !380

5356:                                             ; preds = %5347, %5338
  %5357 = phi i32 [ %5342, %5338 ], [ %5352, %5347 ]
  %5358 = and i64 %5307, 4294967295
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5358
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = mul nsw i32 %5360, %5357
  %5362 = add nsw i32 %5361, %5301
  %5363 = icmp sgt i64 %5299, 2
  %5364 = add nsw i64 %5300, -1
  %5365 = add i32 %5298, 1
  br i1 %5363, label %5297, label %5366, !llvm.loop !381

5366:                                             ; preds = %5356, %5293
  %5367 = phi i32 [ %5296, %5293 ], [ %5362, %5356 ]
  %5368 = icmp slt i32 %5367, %5
  br i1 %5368, label %5371, label %5369

5369:                                             ; preds = %5366
  %5370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

5371:                                             ; preds = %5366
  %5372 = sext i32 %5367 to i64
  %5373 = getelementptr inbounds i32, ptr %4835, i64 %5372
  %5374 = load i32, ptr %5373, align 4, !tbaa !5
  %5375 = sitofp i32 %5374 to double
  %5376 = fadd fast double %5294, %5375
  store double %5376, ptr %4837, align 8, !tbaa !18
  %5377 = add nuw nsw i32 %5295, 1
  br i1 %5146, label %5378, label %5428

5378:                                             ; preds = %5371
  %5379 = load i32, ptr %4, align 4, !tbaa !5
  %5380 = load i32, ptr %12, align 4, !tbaa !5
  %5381 = add nsw i32 %5380, -1
  %5382 = icmp slt i32 %5379, %5381
  br i1 %5382, label %5405, label %5383

5383:                                             ; preds = %5378
  %5384 = icmp eq i32 %5379, %5381
  br i1 %5384, label %5385, label %5421

5385:                                             ; preds = %5383
  store i32 0, ptr %4, align 4, !tbaa !5
  %5386 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5386, ptr %6, align 4, !tbaa !5
  br i1 %5151, label %5428, label %5387

5387:                                             ; preds = %5385, %5415
  %5388 = phi i64 [ %5419, %5415 ], [ 1, %5385 ]
  %5389 = getelementptr inbounds i32, ptr %4, i64 %5388
  %5390 = load i32, ptr %5389, align 4, !tbaa !5
  %5391 = getelementptr inbounds i32, ptr %12, i64 %5388
  %5392 = load i32, ptr %5391, align 4, !tbaa !5
  %5393 = add nsw i32 %5392, -1
  %5394 = icmp slt i32 %5390, %5393
  br i1 %5394, label %5395, label %5413

5395:                                             ; preds = %5387
  br i1 %5382, label %5405, label %5396

5396:                                             ; preds = %5395
  %5397 = shl i64 %5388, 32
  %5398 = add i64 %5397, -4294967296
  %5399 = ashr exact i64 %5398, 32
  %5400 = getelementptr inbounds i32, ptr %7, i64 %5399
  %5401 = load i32, ptr %5400, align 4, !tbaa !5
  %5402 = getelementptr inbounds i32, ptr %6, i64 %5388
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = add nsw i32 %5403, %5401
  store i32 %5404, ptr %5402, align 4, !tbaa !5
  br label %5423

5405:                                             ; preds = %5378, %5395
  %5406 = phi i32 [ %5390, %5395 ], [ %5379, %5378 ]
  %5407 = phi ptr [ %5389, %5395 ], [ %4, %5378 ]
  %5408 = phi i64 [ %5388, %5395 ], [ 0, %5378 ]
  %5409 = add nsw i32 %5406, 1
  store i32 %5409, ptr %5407, align 4, !tbaa !5
  %5410 = getelementptr inbounds i32, ptr %7, i64 %5408
  %5411 = load i32, ptr %5410, align 4, !tbaa !5
  %5412 = getelementptr inbounds i32, ptr %6, i64 %5408
  br label %5423

5413:                                             ; preds = %5387
  %5414 = icmp eq i32 %5390, %5393
  br i1 %5414, label %5415, label %5421

5415:                                             ; preds = %5413
  store i32 0, ptr %5389, align 4, !tbaa !5
  %5416 = getelementptr inbounds i32, ptr %8, i64 %5388
  %5417 = load i32, ptr %5416, align 4, !tbaa !5
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5388
  store i32 %5417, ptr %5418, align 4, !tbaa !5
  %5419 = add nuw nsw i64 %5388, 1
  %5420 = icmp eq i64 %5419, %5149
  br i1 %5420, label %5428, label %5387, !llvm.loop !382

5421:                                             ; preds = %5383, %5413
  %5422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5423:                                             ; preds = %5396, %5405
  %5424 = phi ptr [ %5412, %5405 ], [ %5389, %5396 ]
  %5425 = phi i32 [ %5411, %5405 ], [ 1, %5396 ]
  %5426 = load i32, ptr %5424, align 4, !tbaa !5
  %5427 = add nsw i32 %5426, %5425
  store i32 %5427, ptr %5424, align 4, !tbaa !5
  br label %5428

5428:                                             ; preds = %5415, %5423, %5385, %5371
  %5429 = icmp eq i32 %5377, %5
  br i1 %5429, label %5440, label %5293, !llvm.loop !383

5430:                                             ; preds = %4842
  %5431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

5432:                                             ; preds = %1994
  store i16 %1944, ptr %1828, align 2, !tbaa !78
  br label %5440

5433:                                             ; preds = %2291
  store i16 %2241, ptr %1828, align 2, !tbaa !78
  br label %5440

5434:                                             ; preds = %3197
  store i64 %3147, ptr %3033, align 8, !tbaa !120
  br label %5440

5435:                                             ; preds = %3491
  store i64 %3441, ptr %3033, align 8, !tbaa !120
  br label %5440

5436:                                             ; preds = %4090
  store double %4040, ptr %3636, align 8, !tbaa !18
  br label %5440

5437:                                             ; preds = %4400
  store float %4350, ptr %4235, align 4, !tbaa !162
  br label %5440

5438:                                             ; preds = %4692
  store float %4642, ptr %4235, align 4, !tbaa !162
  br label %5440

5439:                                             ; preds = %5291
  store double %5241, ptr %4837, align 8, !tbaa !18
  br label %5440

5440:                                             ; preds = %5428, %5136, %4999, %4829, %4537, %4227, %3935, %3798, %3628, %3336, %3025, %2889, %2735, %2599, %2428, %2136, %1820, %1683, %1528, %1391, %1217, %1081, %927, %791, %620, %483, %328, %191, %5143, %5152, %5439, %4848, %4857, %4544, %4553, %5438, %4246, %4255, %5437, %3942, %3951, %5436, %3647, %3656, %3343, %3352, %5435, %3044, %3053, %5434, %2742, %2751, %2446, %2455, %2143, %2152, %5433, %1839, %1848, %5432, %1535, %1544, %1236, %1245, %934, %943, %638, %647, %335, %344, %37, %46, %4839, %5430, %4237, %4831, %3638, %4229, %3035, %3630, %2438, %3027, %1830, %2430, %1227, %1822, %630, %1219, %28, %622, %18
  %5441 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1219 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1822 ], [ 0.000000e+00, %1227 ], [ 0.000000e+00, %2430 ], [ 0.000000e+00, %1830 ], [ 0.000000e+00, %3027 ], [ 0.000000e+00, %2438 ], [ 0.000000e+00, %3630 ], [ 0.000000e+00, %3035 ], [ 0.000000e+00, %4229 ], [ 0.000000e+00, %3638 ], [ 0.000000e+00, %4831 ], [ 0.000000e+00, %4237 ], [ 0.000000e+00, %5430 ], [ 0.000000e+00, %4839 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %943 ], [ 0.000000e+00, %934 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %1236 ], [ 0.000000e+00, %1544 ], [ 0.000000e+00, %1535 ], [ %1945, %5432 ], [ 0.000000e+00, %1848 ], [ 0.000000e+00, %1839 ], [ %2242, %5433 ], [ 0.000000e+00, %2152 ], [ 0.000000e+00, %2143 ], [ 0.000000e+00, %2455 ], [ 0.000000e+00, %2446 ], [ 0.000000e+00, %2751 ], [ 0.000000e+00, %2742 ], [ %3148, %5434 ], [ 0.000000e+00, %3053 ], [ 0.000000e+00, %3044 ], [ %3442, %5435 ], [ 0.000000e+00, %3352 ], [ 0.000000e+00, %3343 ], [ 0.000000e+00, %3656 ], [ 0.000000e+00, %3647 ], [ %4041, %5436 ], [ 0.000000e+00, %3951 ], [ 0.000000e+00, %3942 ], [ %4351, %5437 ], [ 0.000000e+00, %4255 ], [ 0.000000e+00, %4246 ], [ %4643, %5438 ], [ 0.000000e+00, %4553 ], [ 0.000000e+00, %4544 ], [ 0.000000e+00, %4857 ], [ 0.000000e+00, %4848 ], [ %5242, %5439 ], [ 0.000000e+00, %5152 ], [ 0.000000e+00, %5143 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %742, %791 ], [ 0.000000e+00, %927 ], [ %1032, %1081 ], [ 0.000000e+00, %1217 ], [ %1342, %1391 ], [ 0.000000e+00, %1528 ], [ %1634, %1683 ], [ 0.000000e+00, %1820 ], [ 0.000000e+00, %2136 ], [ 0.000000e+00, %2428 ], [ %2550, %2599 ], [ 0.000000e+00, %2735 ], [ %2840, %2889 ], [ 0.000000e+00, %3025 ], [ 0.000000e+00, %3336 ], [ 0.000000e+00, %3628 ], [ %3749, %3798 ], [ 0.000000e+00, %3935 ], [ 0.000000e+00, %4227 ], [ 0.000000e+00, %4537 ], [ 0.000000e+00, %4829 ], [ %4950, %4999 ], [ 0.000000e+00, %5136 ], [ 0.000000e+00, %5428 ]
  %5442 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1219 ], [ 1, %630 ], [ 1, %1822 ], [ 1, %1227 ], [ 1, %2430 ], [ 1, %1830 ], [ 1, %3027 ], [ 1, %2438 ], [ 1, %3630 ], [ 1, %3035 ], [ 1, %4229 ], [ 1, %3638 ], [ 1, %4831 ], [ 1, %4237 ], [ 1, %5430 ], [ 1, %4839 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %647 ], [ 1, %638 ], [ 1, %943 ], [ 1, %934 ], [ 1, %1245 ], [ 1, %1236 ], [ 1, %1544 ], [ 1, %1535 ], [ %1855, %5432 ], [ 1, %1848 ], [ 1, %1839 ], [ %2159, %5433 ], [ 1, %2152 ], [ 1, %2143 ], [ 1, %2455 ], [ 1, %2446 ], [ 1, %2751 ], [ 1, %2742 ], [ %3060, %5434 ], [ 1, %3053 ], [ 1, %3044 ], [ %3359, %5435 ], [ 1, %3352 ], [ 1, %3343 ], [ 1, %3656 ], [ 1, %3647 ], [ %3958, %5436 ], [ 1, %3951 ], [ 1, %3942 ], [ %4262, %5437 ], [ 1, %4255 ], [ 1, %4246 ], [ %4560, %5438 ], [ 1, %4553 ], [ 1, %4544 ], [ 1, %4857 ], [ 1, %4848 ], [ %5159, %5439 ], [ 1, %5152 ], [ 1, %5143 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %654, %791 ], [ %645, %927 ], [ %950, %1081 ], [ %941, %1217 ], [ %1252, %1391 ], [ %1243, %1528 ], [ %1551, %1683 ], [ %1542, %1820 ], [ %1846, %2136 ], [ %2150, %2428 ], [ %2462, %2599 ], [ %2453, %2735 ], [ %2758, %2889 ], [ %2749, %3025 ], [ %3051, %3336 ], [ %3350, %3628 ], [ %3663, %3798 ], [ %3654, %3935 ], [ %3949, %4227 ], [ %4253, %4537 ], [ %4551, %4829 ], [ %4864, %4999 ], [ %4855, %5136 ], [ %5150, %5428 ]
  %5443 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5442, ptr noundef nonnull @.str.5) #3
  %5444 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5441, ptr noundef nonnull @.str.6) #3
  br label %5445

5445:                                             ; preds = %4992, %5077, %5129, %5284, %5369, %5421, %4393, %4478, %4530, %4685, %4770, %4822, %3791, %3876, %3928, %4083, %4168, %4220, %3190, %3275, %3329, %3484, %3569, %3621, %2592, %2676, %2728, %2882, %2966, %3018, %1987, %2072, %2129, %2284, %2369, %2421, %1384, %1468, %1521, %1676, %1760, %1813, %784, %868, %920, %1074, %1158, %1210, %184, %268, %321, %476, %560, %613, %5440
  %5446 = phi i32 [ 0, %5440 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1210 ], [ -1, %1158 ], [ -1, %1074 ], [ -1, %920 ], [ -1, %868 ], [ -1, %784 ], [ -1, %1813 ], [ -1, %1760 ], [ -1, %1676 ], [ -1, %1521 ], [ -1, %1468 ], [ -1, %1384 ], [ -1, %2421 ], [ -1, %2369 ], [ -1, %2284 ], [ -1, %2129 ], [ -1, %2072 ], [ -1, %1987 ], [ -1, %3018 ], [ -1, %2966 ], [ -1, %2882 ], [ -1, %2728 ], [ -1, %2676 ], [ -1, %2592 ], [ -1, %3621 ], [ -1, %3569 ], [ -1, %3484 ], [ -1, %3329 ], [ -1, %3275 ], [ -1, %3190 ], [ -1, %4220 ], [ -1, %4168 ], [ -1, %4083 ], [ -1, %3928 ], [ -1, %3876 ], [ -1, %3791 ], [ -1, %4822 ], [ -1, %4770 ], [ -1, %4685 ], [ -1, %4530 ], [ -1, %4478 ], [ -1, %4393 ], [ -1, %5421 ], [ -1, %5369 ], [ -1, %5284 ], [ -1, %5129 ], [ -1, %5077 ], [ -1, %4992 ]
  ret i32 %5446
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3021 [
    i32 101, label %22
    i32 102, label %619
    i32 107, label %1220
    i32 108, label %1819
    i32 109, label %2422
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %3021

30:                                               ; preds = %22
  switch i32 %1, label %617 [
    i32 1, label %31
    i32 0, label %327
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %3021

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %191

45:                                               ; preds = %31
  br i1 %35, label %46, label %3021

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %189
  %55 = phi i32 [ 0, %46 ], [ %141, %189 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %140, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !384

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !385

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !386

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = fadd fast double %137, %135
  %139 = fptoui double %138 to i8
  store i8 %139, ptr %26, align 1, !tbaa !11
  %140 = fadd fast double %131, %56
  %141 = add nuw nsw i32 %55, 1
  br i1 %48, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %53, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %51
  br i1 %181, label %189, label %151, !llvm.loop !387

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %3021, label %54, !llvm.loop !388

191:                                              ; preds = %37, %325
  %192 = phi i32 [ 0, %37 ], [ %274, %325 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %42, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %41, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %40, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !389

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !390

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !391

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds i8, ptr %24, i64 %269
  %271 = load i8, ptr %270, align 1, !tbaa !11
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = add i8 %272, %271
  store i8 %273, ptr %26, align 1, !tbaa !11
  %274 = add nuw nsw i32 %192, 1
  br i1 %39, label %275, label %325

275:                                              ; preds = %268
  %276 = load i32, ptr %4, align 4, !tbaa !5
  %277 = load i32, ptr %12, align 4, !tbaa !5
  %278 = add nsw i32 %277, -1
  %279 = icmp slt i32 %276, %278
  br i1 %279, label %302, label %280

280:                                              ; preds = %275
  %281 = icmp eq i32 %276, %278
  br i1 %281, label %282, label %318

282:                                              ; preds = %280
  store i32 0, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %283, ptr %6, align 4, !tbaa !5
  br i1 %44, label %325, label %284

284:                                              ; preds = %282, %312
  %285 = phi i64 [ %316, %312 ], [ 1, %282 ]
  %286 = getelementptr inbounds i32, ptr %4, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !5
  %288 = getelementptr inbounds i32, ptr %12, i64 %285
  %289 = load i32, ptr %288, align 4, !tbaa !5
  %290 = add nsw i32 %289, -1
  %291 = icmp slt i32 %287, %290
  br i1 %291, label %292, label %310

292:                                              ; preds = %284
  br i1 %279, label %302, label %293

293:                                              ; preds = %292
  %294 = shl i64 %285, 32
  %295 = add i64 %294, -4294967296
  %296 = ashr exact i64 %295, 32
  %297 = getelementptr inbounds i32, ptr %7, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %6, i64 %285
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, %298
  store i32 %301, ptr %299, align 4, !tbaa !5
  br label %320

302:                                              ; preds = %275, %292
  %303 = phi i32 [ %287, %292 ], [ %276, %275 ]
  %304 = phi ptr [ %286, %292 ], [ %4, %275 ]
  %305 = phi i64 [ %285, %292 ], [ 0, %275 ]
  %306 = add nsw i32 %303, 1
  store i32 %306, ptr %304, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %7, i64 %305
  %308 = load i32, ptr %307, align 4, !tbaa !5
  %309 = getelementptr inbounds i32, ptr %6, i64 %305
  br label %320

310:                                              ; preds = %284
  %311 = icmp eq i32 %287, %290
  br i1 %311, label %312, label %318

312:                                              ; preds = %310
  store i32 0, ptr %286, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %8, i64 %285
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %285
  store i32 %314, ptr %315, align 4, !tbaa !5
  %316 = add nuw nsw i64 %285, 1
  %317 = icmp eq i64 %316, %42
  br i1 %317, label %325, label %284, !llvm.loop !392

318:                                              ; preds = %280, %310
  %319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

320:                                              ; preds = %293, %302
  %321 = phi ptr [ %309, %302 ], [ %286, %293 ]
  %322 = phi i32 [ %308, %302 ], [ 1, %293 ]
  %323 = load i32, ptr %321, align 4, !tbaa !5
  %324 = add nsw i32 %323, %322
  store i32 %324, ptr %321, align 4, !tbaa !5
  br label %325

325:                                              ; preds = %312, %320, %282, %268
  %326 = icmp eq i32 %274, %5
  br i1 %326, label %3021, label %191, !llvm.loop !393

327:                                              ; preds = %30
  %328 = getelementptr inbounds i32, ptr %3, i64 %19
  %329 = load i32, ptr %328, align 4, !tbaa !5
  %330 = icmp eq i32 %329, 0
  %331 = icmp sgt i32 %5, 0
  br i1 %330, label %341, label %332

332:                                              ; preds = %327
  br i1 %331, label %333, label %3021

333:                                              ; preds = %332
  %334 = icmp sgt i32 %13, 1
  %335 = icmp sgt i32 %13, 0
  %336 = add i32 %13, -2
  %337 = zext i32 %336 to i64
  %338 = zext i32 %13 to i64
  %339 = add nuw i32 %5, 1
  %340 = icmp eq i32 %13, 1
  br label %481

341:                                              ; preds = %327
  br i1 %331, label %342, label %3021

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %350

350:                                              ; preds = %342, %479
  %351 = phi i32 [ 0, %342 ], [ %431, %479 ]
  %352 = phi double [ 0.000000e+00, %342 ], [ %430, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %343, label %354, label %423

354:                                              ; preds = %350, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %350 ]
  %356 = phi i64 [ %364, %413 ], [ %347, %350 ]
  %357 = phi i64 [ %421, %413 ], [ %346, %350 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %350 ]
  %359 = sub i32 %345, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !394

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !395

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !396

423:                                              ; preds = %413, %350
  %424 = phi i32 [ %353, %350 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i8, ptr %24, i64 %425
  %427 = load i8, ptr %426, align 1, !tbaa !11
  %428 = load i8, ptr %26, align 1, !tbaa !11
  %429 = add i8 %428, %427
  store i8 %429, ptr %26, align 1, !tbaa !11
  %430 = fadd fast double %352, 1.000000e+00
  %431 = add nuw nsw i32 %351, 1
  br i1 %344, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %349, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %347
  br i1 %471, label %479, label %441, !llvm.loop !397

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %3021, label %350, !llvm.loop !398

481:                                              ; preds = %333, %615
  %482 = phi i32 [ 0, %333 ], [ %564, %615 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %334, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %338, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %337, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %336, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !399

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !400

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !401

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds i8, ptr %24, i64 %559
  %561 = load i8, ptr %560, align 1, !tbaa !11
  %562 = load i8, ptr %26, align 1, !tbaa !11
  %563 = add i8 %562, %561
  store i8 %563, ptr %26, align 1, !tbaa !11
  %564 = add nuw nsw i32 %482, 1
  br i1 %335, label %565, label %615

565:                                              ; preds = %558
  %566 = load i32, ptr %4, align 4, !tbaa !5
  %567 = load i32, ptr %12, align 4, !tbaa !5
  %568 = add nsw i32 %567, -1
  %569 = icmp slt i32 %566, %568
  br i1 %569, label %592, label %570

570:                                              ; preds = %565
  %571 = icmp eq i32 %566, %568
  br i1 %571, label %572, label %608

572:                                              ; preds = %570
  store i32 0, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %573, ptr %6, align 4, !tbaa !5
  br i1 %340, label %615, label %574

574:                                              ; preds = %572, %602
  %575 = phi i64 [ %606, %602 ], [ 1, %572 ]
  %576 = getelementptr inbounds i32, ptr %4, i64 %575
  %577 = load i32, ptr %576, align 4, !tbaa !5
  %578 = getelementptr inbounds i32, ptr %12, i64 %575
  %579 = load i32, ptr %578, align 4, !tbaa !5
  %580 = add nsw i32 %579, -1
  %581 = icmp slt i32 %577, %580
  br i1 %581, label %582, label %600

582:                                              ; preds = %574
  br i1 %569, label %592, label %583

583:                                              ; preds = %582
  %584 = shl i64 %575, 32
  %585 = add i64 %584, -4294967296
  %586 = ashr exact i64 %585, 32
  %587 = getelementptr inbounds i32, ptr %7, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = getelementptr inbounds i32, ptr %6, i64 %575
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = add nsw i32 %590, %588
  store i32 %591, ptr %589, align 4, !tbaa !5
  br label %610

592:                                              ; preds = %565, %582
  %593 = phi i32 [ %577, %582 ], [ %566, %565 ]
  %594 = phi ptr [ %576, %582 ], [ %4, %565 ]
  %595 = phi i64 [ %575, %582 ], [ 0, %565 ]
  %596 = add nsw i32 %593, 1
  store i32 %596, ptr %594, align 4, !tbaa !5
  %597 = getelementptr inbounds i32, ptr %7, i64 %595
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %595
  br label %610

600:                                              ; preds = %574
  %601 = icmp eq i32 %577, %580
  br i1 %601, label %602, label %608

602:                                              ; preds = %600
  store i32 0, ptr %576, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %8, i64 %575
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %575
  store i32 %604, ptr %605, align 4, !tbaa !5
  %606 = add nuw nsw i64 %575, 1
  %607 = icmp eq i64 %606, %338
  br i1 %607, label %615, label %574, !llvm.loop !402

608:                                              ; preds = %570, %600
  %609 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

610:                                              ; preds = %583, %592
  %611 = phi ptr [ %599, %592 ], [ %576, %583 ]
  %612 = phi i32 [ %598, %592 ], [ 1, %583 ]
  %613 = load i32, ptr %611, align 4, !tbaa !5
  %614 = add nsw i32 %613, %612
  store i32 %614, ptr %611, align 4, !tbaa !5
  br label %615

615:                                              ; preds = %602, %610, %572, %558
  %616 = icmp eq i32 %564, %5
  br i1 %616, label %3021, label %481, !llvm.loop !403

617:                                              ; preds = %30
  %618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3021

619:                                              ; preds = %18
  %620 = getelementptr inbounds ptr, ptr %14, i64 %19
  %621 = load ptr, ptr %620, align 8, !tbaa !9
  %622 = getelementptr inbounds ptr, ptr %16, i64 %19
  %623 = load ptr, ptr %622, align 8, !tbaa !9
  store i32 0, ptr %623, align 4, !tbaa !5
  %624 = icmp eq i32 %13, 0
  br i1 %624, label %625, label %628

625:                                              ; preds = %619
  %626 = load i8, ptr %621, align 1, !tbaa !11
  %627 = sext i8 %626 to i32
  store i32 %627, ptr %623, align 4, !tbaa !5
  br label %3021

628:                                              ; preds = %619
  switch i32 %1, label %1218 [
    i32 1, label %629
    i32 0, label %926
  ]

629:                                              ; preds = %628
  %630 = getelementptr inbounds i32, ptr %3, i64 %19
  %631 = load i32, ptr %630, align 4, !tbaa !5
  %632 = icmp eq i32 %631, 0
  %633 = icmp sgt i32 %5, 0
  br i1 %632, label %643, label %634

634:                                              ; preds = %629
  br i1 %633, label %635, label %3021

635:                                              ; preds = %634
  %636 = icmp sgt i32 %13, 1
  %637 = icmp sgt i32 %13, 0
  %638 = add i32 %13, -2
  %639 = zext i32 %638 to i64
  %640 = zext i32 %13 to i64
  %641 = add nuw i32 %5, 1
  %642 = icmp eq i32 %13, 1
  br label %789

643:                                              ; preds = %629
  br i1 %633, label %644, label %3021

644:                                              ; preds = %643
  %645 = icmp sgt i32 %13, 1
  %646 = icmp sgt i32 %13, 0
  %647 = add i32 %13, -2
  %648 = zext i32 %647 to i64
  %649 = zext i32 %13 to i64
  %650 = add nuw i32 %5, 1
  %651 = icmp eq i32 %13, 1
  br label %652

652:                                              ; preds = %644, %787
  %653 = phi i32 [ 0, %644 ], [ %739, %787 ]
  %654 = phi double [ 0.000000e+00, %644 ], [ %738, %787 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %645, label %656, label %725

656:                                              ; preds = %652, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %652 ]
  %658 = phi i64 [ %666, %715 ], [ %649, %652 ]
  %659 = phi i64 [ %723, %715 ], [ %648, %652 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %652 ]
  %661 = sub i32 %647, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !404

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !405

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !406

725:                                              ; preds = %715, %652
  %726 = phi i32 [ %655, %652 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds i8, ptr %621, i64 %727
  %731 = load i8, ptr %730, align 1, !tbaa !11
  %732 = load i32, ptr %623, align 4, !tbaa !5
  %733 = sitofp i32 %732 to double
  %734 = sitofp i8 %731 to double
  %735 = fmul fast double %729, %734
  %736 = fadd fast double %735, %733
  %737 = fptosi double %736 to i32
  store i32 %737, ptr %623, align 4, !tbaa !5
  %738 = fadd fast double %729, %654
  %739 = add nuw nsw i32 %653, 1
  br i1 %646, label %740, label %787

740:                                              ; preds = %725
  %741 = load i32, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %12, align 4, !tbaa !5
  %743 = add nsw i32 %742, -1
  %744 = icmp slt i32 %741, %743
  br i1 %744, label %764, label %745

745:                                              ; preds = %740
  %746 = icmp eq i32 %741, %743
  br i1 %746, label %747, label %780

747:                                              ; preds = %745
  store i32 0, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %748, ptr %6, align 4, !tbaa !5
  br i1 %651, label %787, label %749

749:                                              ; preds = %747, %774
  %750 = phi i64 [ %778, %774 ], [ 1, %747 ]
  %751 = getelementptr inbounds i32, ptr %4, i64 %750
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = getelementptr inbounds i32, ptr %12, i64 %750
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %752, %755
  br i1 %756, label %757, label %772

757:                                              ; preds = %749
  br i1 %744, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, ptr %7, i64 %750
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %6, i64 %750
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, %760
  store i32 %763, ptr %761, align 4, !tbaa !5
  br label %782

764:                                              ; preds = %740, %757
  %765 = phi i32 [ %752, %757 ], [ %741, %740 ]
  %766 = phi ptr [ %751, %757 ], [ %4, %740 ]
  %767 = phi i64 [ %750, %757 ], [ 0, %740 ]
  %768 = add nsw i32 %765, 1
  store i32 %768, ptr %766, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %7, i64 %767
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %767
  br label %782

772:                                              ; preds = %749
  %773 = icmp eq i32 %752, %755
  br i1 %773, label %774, label %780

774:                                              ; preds = %772
  store i32 0, ptr %751, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %8, i64 %750
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %750
  store i32 %776, ptr %777, align 4, !tbaa !5
  %778 = add nuw nsw i64 %750, 1
  %779 = icmp eq i64 %778, %649
  br i1 %779, label %787, label %749, !llvm.loop !407

780:                                              ; preds = %745, %772
  %781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

782:                                              ; preds = %758, %764
  %783 = phi ptr [ %771, %764 ], [ %751, %758 ]
  %784 = phi i32 [ %770, %764 ], [ 1, %758 ]
  %785 = load i32, ptr %783, align 4, !tbaa !5
  %786 = add nsw i32 %785, %784
  store i32 %786, ptr %783, align 4, !tbaa !5
  br label %787

787:                                              ; preds = %774, %782, %747, %725
  %788 = icmp eq i32 %739, %5
  br i1 %788, label %3021, label %652, !llvm.loop !408

789:                                              ; preds = %635, %924
  %790 = phi i32 [ 0, %635 ], [ %873, %924 ]
  %791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %636, label %792, label %861

792:                                              ; preds = %789, %851
  %793 = phi i32 [ %860, %851 ], [ 0, %789 ]
  %794 = phi i64 [ %802, %851 ], [ %640, %789 ]
  %795 = phi i64 [ %859, %851 ], [ %639, %789 ]
  %796 = phi i32 [ %857, %851 ], [ %791, %789 ]
  %797 = sub i32 %638, %793
  %798 = tail call i32 @llvm.smin.i32(i32 %797, i32 0)
  %799 = sub i32 %797, %798
  %800 = zext i32 %799 to i64
  %801 = add nuw nsw i64 %800, 1
  %802 = add nsw i64 %794, -1
  %803 = icmp ult i32 %799, 31
  br i1 %803, label %839, label %804

804:                                              ; preds = %792
  %805 = and i64 %801, 8589934560
  %806 = sub i64 %795, %805
  br label %807

807:                                              ; preds = %807, %804
  %808 = phi i64 [ 0, %804 ], [ %831, %807 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %827, %807 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %828, %807 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %829, %807 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %830, %807 ]
  %813 = sub i64 %795, %808
  %814 = getelementptr inbounds i32, ptr %11, i64 %813
  %815 = getelementptr inbounds i32, ptr %814, i64 -7
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %814, i64 -15
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %814, i64 -23
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %814, i64 -31
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = mul <8 x i32> %817, %809
  %828 = mul <8 x i32> %820, %810
  %829 = mul <8 x i32> %823, %811
  %830 = mul <8 x i32> %826, %812
  %831 = add nuw i64 %808, 32
  %832 = icmp eq i64 %831, %805
  br i1 %832, label %833, label %807, !llvm.loop !409

833:                                              ; preds = %807
  %834 = mul <8 x i32> %828, %827
  %835 = mul <8 x i32> %829, %834
  %836 = mul <8 x i32> %830, %835
  %837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %836)
  %838 = icmp eq i64 %801, %805
  br i1 %838, label %851, label %839

839:                                              ; preds = %792, %833
  %840 = phi i64 [ %795, %792 ], [ %806, %833 ]
  %841 = phi i32 [ 1, %792 ], [ %837, %833 ]
  br label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %848, %842 ], [ %840, %839 ]
  %844 = phi i32 [ %847, %842 ], [ %841, %839 ]
  %845 = getelementptr inbounds i32, ptr %11, i64 %843
  %846 = load i32, ptr %845, align 4, !tbaa !5
  %847 = mul nsw i32 %846, %844
  %848 = add nsw i64 %843, -1
  %849 = trunc i64 %843 to i32
  %850 = icmp sgt i32 %849, 0
  br i1 %850, label %842, label %851, !llvm.loop !410

851:                                              ; preds = %842, %833
  %852 = phi i32 [ %837, %833 ], [ %847, %842 ]
  %853 = and i64 %802, 4294967295
  %854 = getelementptr inbounds i32, ptr %6, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %852
  %857 = add nsw i32 %856, %796
  %858 = icmp sgt i64 %794, 2
  %859 = add nsw i64 %795, -1
  %860 = add i32 %793, 1
  br i1 %858, label %792, label %861, !llvm.loop !411

861:                                              ; preds = %851, %789
  %862 = phi i32 [ %791, %789 ], [ %857, %851 ]
  %863 = icmp slt i32 %862, %5
  br i1 %863, label %866, label %864

864:                                              ; preds = %861
  %865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

866:                                              ; preds = %861
  %867 = sext i32 %862 to i64
  %868 = getelementptr inbounds i8, ptr %621, i64 %867
  %869 = load i8, ptr %868, align 1, !tbaa !11
  %870 = load i32, ptr %623, align 4, !tbaa !5
  %871 = sext i8 %869 to i32
  %872 = add i32 %870, %871
  store i32 %872, ptr %623, align 4, !tbaa !5
  %873 = add nuw nsw i32 %790, 1
  br i1 %637, label %874, label %924

874:                                              ; preds = %866
  %875 = load i32, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %12, align 4, !tbaa !5
  %877 = add nsw i32 %876, -1
  %878 = icmp slt i32 %875, %877
  br i1 %878, label %901, label %879

879:                                              ; preds = %874
  %880 = icmp eq i32 %875, %877
  br i1 %880, label %881, label %917

881:                                              ; preds = %879
  store i32 0, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %882, ptr %6, align 4, !tbaa !5
  br i1 %642, label %924, label %883

883:                                              ; preds = %881, %911
  %884 = phi i64 [ %915, %911 ], [ 1, %881 ]
  %885 = getelementptr inbounds i32, ptr %4, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !5
  %887 = getelementptr inbounds i32, ptr %12, i64 %884
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %886, %889
  br i1 %890, label %891, label %909

891:                                              ; preds = %883
  br i1 %878, label %901, label %892

892:                                              ; preds = %891
  %893 = shl i64 %884, 32
  %894 = add i64 %893, -4294967296
  %895 = ashr exact i64 %894, 32
  %896 = getelementptr inbounds i32, ptr %7, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %6, i64 %884
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, %897
  store i32 %900, ptr %898, align 4, !tbaa !5
  br label %919

901:                                              ; preds = %874, %891
  %902 = phi i32 [ %886, %891 ], [ %875, %874 ]
  %903 = phi ptr [ %885, %891 ], [ %4, %874 ]
  %904 = phi i64 [ %884, %891 ], [ 0, %874 ]
  %905 = add nsw i32 %902, 1
  store i32 %905, ptr %903, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %7, i64 %904
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %904
  br label %919

909:                                              ; preds = %883
  %910 = icmp eq i32 %886, %889
  br i1 %910, label %911, label %917

911:                                              ; preds = %909
  store i32 0, ptr %885, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %8, i64 %884
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %884
  store i32 %913, ptr %914, align 4, !tbaa !5
  %915 = add nuw nsw i64 %884, 1
  %916 = icmp eq i64 %915, %640
  br i1 %916, label %924, label %883, !llvm.loop !412

917:                                              ; preds = %879, %909
  %918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

919:                                              ; preds = %892, %901
  %920 = phi ptr [ %908, %901 ], [ %885, %892 ]
  %921 = phi i32 [ %907, %901 ], [ 1, %892 ]
  %922 = load i32, ptr %920, align 4, !tbaa !5
  %923 = add nsw i32 %922, %921
  store i32 %923, ptr %920, align 4, !tbaa !5
  br label %924

924:                                              ; preds = %911, %919, %881, %866
  %925 = icmp eq i32 %873, %5
  br i1 %925, label %3021, label %789, !llvm.loop !413

926:                                              ; preds = %628
  %927 = getelementptr inbounds i32, ptr %3, i64 %19
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = icmp eq i32 %928, 0
  %930 = icmp sgt i32 %5, 0
  br i1 %929, label %940, label %931

931:                                              ; preds = %926
  br i1 %930, label %932, label %3021

932:                                              ; preds = %931
  %933 = icmp sgt i32 %13, 1
  %934 = icmp sgt i32 %13, 0
  %935 = add i32 %13, -2
  %936 = zext i32 %935 to i64
  %937 = zext i32 %13 to i64
  %938 = add nuw i32 %5, 1
  %939 = icmp eq i32 %13, 1
  br label %1081

940:                                              ; preds = %926
  br i1 %930, label %941, label %3021

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %949

949:                                              ; preds = %941, %1079
  %950 = phi i32 [ 0, %941 ], [ %1031, %1079 ]
  %951 = phi double [ 0.000000e+00, %941 ], [ %1030, %1079 ]
  %952 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %953, label %1022

953:                                              ; preds = %949, %1012
  %954 = phi i32 [ %1021, %1012 ], [ 0, %949 ]
  %955 = phi i64 [ %963, %1012 ], [ %946, %949 ]
  %956 = phi i64 [ %1020, %1012 ], [ %945, %949 ]
  %957 = phi i32 [ %1018, %1012 ], [ %952, %949 ]
  %958 = sub i32 %944, %954
  %959 = tail call i32 @llvm.smin.i32(i32 %958, i32 0)
  %960 = sub i32 %958, %959
  %961 = zext i32 %960 to i64
  %962 = add nuw nsw i64 %961, 1
  %963 = add nsw i64 %955, -1
  %964 = icmp ult i32 %960, 31
  br i1 %964, label %1000, label %965

965:                                              ; preds = %953
  %966 = and i64 %962, 8589934560
  %967 = sub i64 %956, %966
  br label %968

968:                                              ; preds = %968, %965
  %969 = phi i64 [ 0, %965 ], [ %992, %968 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %988, %968 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %989, %968 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %990, %968 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %991, %968 ]
  %974 = sub i64 %956, %969
  %975 = getelementptr inbounds i32, ptr %9, i64 %974
  %976 = getelementptr inbounds i32, ptr %975, i64 -7
  %977 = load <8 x i32>, ptr %976, align 4, !tbaa !5
  %978 = shufflevector <8 x i32> %977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %979 = getelementptr inbounds i32, ptr %975, i64 -15
  %980 = load <8 x i32>, ptr %979, align 4, !tbaa !5
  %981 = shufflevector <8 x i32> %980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %982 = getelementptr inbounds i32, ptr %975, i64 -23
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %975, i64 -31
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = mul <8 x i32> %978, %970
  %989 = mul <8 x i32> %981, %971
  %990 = mul <8 x i32> %984, %972
  %991 = mul <8 x i32> %987, %973
  %992 = add nuw i64 %969, 32
  %993 = icmp eq i64 %992, %966
  br i1 %993, label %994, label %968, !llvm.loop !414

994:                                              ; preds = %968
  %995 = mul <8 x i32> %989, %988
  %996 = mul <8 x i32> %990, %995
  %997 = mul <8 x i32> %991, %996
  %998 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %997)
  %999 = icmp eq i64 %962, %966
  br i1 %999, label %1012, label %1000

1000:                                             ; preds = %953, %994
  %1001 = phi i64 [ %956, %953 ], [ %967, %994 ]
  %1002 = phi i32 [ 1, %953 ], [ %998, %994 ]
  br label %1003

1003:                                             ; preds = %1000, %1003
  %1004 = phi i64 [ %1009, %1003 ], [ %1001, %1000 ]
  %1005 = phi i32 [ %1008, %1003 ], [ %1002, %1000 ]
  %1006 = getelementptr inbounds i32, ptr %9, i64 %1004
  %1007 = load i32, ptr %1006, align 4, !tbaa !5
  %1008 = mul nsw i32 %1007, %1005
  %1009 = add nsw i64 %1004, -1
  %1010 = trunc i64 %1004 to i32
  %1011 = icmp sgt i32 %1010, 0
  br i1 %1011, label %1003, label %1012, !llvm.loop !415

1012:                                             ; preds = %1003, %994
  %1013 = phi i32 [ %998, %994 ], [ %1008, %1003 ]
  %1014 = and i64 %963, 4294967295
  %1015 = getelementptr inbounds i32, ptr %6, i64 %1014
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1013
  %1018 = add nsw i32 %1017, %957
  %1019 = icmp sgt i64 %955, 2
  %1020 = add nsw i64 %956, -1
  %1021 = add i32 %954, 1
  br i1 %1019, label %953, label %1022, !llvm.loop !416

1022:                                             ; preds = %1012, %949
  %1023 = phi i32 [ %952, %949 ], [ %1018, %1012 ]
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i8, ptr %621, i64 %1024
  %1026 = load i8, ptr %1025, align 1, !tbaa !11
  %1027 = sext i8 %1026 to i32
  %1028 = load i32, ptr %623, align 4, !tbaa !5
  %1029 = add nsw i32 %1028, %1027
  store i32 %1029, ptr %623, align 4, !tbaa !5
  %1030 = fadd fast double %951, 1.000000e+00
  %1031 = add nuw nsw i32 %950, 1
  br i1 %943, label %1032, label %1079

1032:                                             ; preds = %1022
  %1033 = load i32, ptr %4, align 4, !tbaa !5
  %1034 = load i32, ptr %12, align 4, !tbaa !5
  %1035 = add nsw i32 %1034, -1
  %1036 = icmp slt i32 %1033, %1035
  br i1 %1036, label %1056, label %1037

1037:                                             ; preds = %1032
  %1038 = icmp eq i32 %1033, %1035
  br i1 %1038, label %1039, label %1072

1039:                                             ; preds = %1037
  store i32 0, ptr %4, align 4, !tbaa !5
  %1040 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1040, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1079, label %1041

1041:                                             ; preds = %1039, %1066
  %1042 = phi i64 [ %1070, %1066 ], [ 1, %1039 ]
  %1043 = getelementptr inbounds i32, ptr %4, i64 %1042
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = getelementptr inbounds i32, ptr %12, i64 %1042
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, -1
  %1048 = icmp slt i32 %1044, %1047
  br i1 %1048, label %1049, label %1064

1049:                                             ; preds = %1041
  br i1 %1036, label %1056, label %1050

1050:                                             ; preds = %1049
  %1051 = getelementptr inbounds i32, ptr %7, i64 %1042
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1042
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = add nsw i32 %1054, %1052
  store i32 %1055, ptr %1053, align 4, !tbaa !5
  br label %1074

1056:                                             ; preds = %1032, %1049
  %1057 = phi i32 [ %1044, %1049 ], [ %1033, %1032 ]
  %1058 = phi ptr [ %1043, %1049 ], [ %4, %1032 ]
  %1059 = phi i64 [ %1042, %1049 ], [ 0, %1032 ]
  %1060 = add nsw i32 %1057, 1
  store i32 %1060, ptr %1058, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %7, i64 %1059
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1059
  br label %1074

1064:                                             ; preds = %1041
  %1065 = icmp eq i32 %1044, %1047
  br i1 %1065, label %1066, label %1072

1066:                                             ; preds = %1064
  store i32 0, ptr %1043, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %8, i64 %1042
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1042
  store i32 %1068, ptr %1069, align 4, !tbaa !5
  %1070 = add nuw nsw i64 %1042, 1
  %1071 = icmp eq i64 %1070, %946
  br i1 %1071, label %1079, label %1041, !llvm.loop !417

1072:                                             ; preds = %1037, %1064
  %1073 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1074:                                             ; preds = %1050, %1056
  %1075 = phi ptr [ %1063, %1056 ], [ %1043, %1050 ]
  %1076 = phi i32 [ %1062, %1056 ], [ 1, %1050 ]
  %1077 = load i32, ptr %1075, align 4, !tbaa !5
  %1078 = add nsw i32 %1077, %1076
  store i32 %1078, ptr %1075, align 4, !tbaa !5
  br label %1079

1079:                                             ; preds = %1066, %1074, %1039, %1022
  %1080 = icmp eq i32 %1031, %5
  br i1 %1080, label %3021, label %949, !llvm.loop !418

1081:                                             ; preds = %932, %1216
  %1082 = phi i32 [ 0, %932 ], [ %1165, %1216 ]
  %1083 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1084, label %1153

1084:                                             ; preds = %1081, %1143
  %1085 = phi i32 [ %1152, %1143 ], [ 0, %1081 ]
  %1086 = phi i64 [ %1094, %1143 ], [ %937, %1081 ]
  %1087 = phi i64 [ %1151, %1143 ], [ %936, %1081 ]
  %1088 = phi i32 [ %1149, %1143 ], [ %1083, %1081 ]
  %1089 = sub i32 %935, %1085
  %1090 = tail call i32 @llvm.smin.i32(i32 %1089, i32 0)
  %1091 = sub i32 %1089, %1090
  %1092 = zext i32 %1091 to i64
  %1093 = add nuw nsw i64 %1092, 1
  %1094 = add nsw i64 %1086, -1
  %1095 = icmp ult i32 %1091, 31
  br i1 %1095, label %1131, label %1096

1096:                                             ; preds = %1084
  %1097 = and i64 %1093, 8589934560
  %1098 = sub i64 %1087, %1097
  br label %1099

1099:                                             ; preds = %1099, %1096
  %1100 = phi i64 [ 0, %1096 ], [ %1123, %1099 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1119, %1099 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1120, %1099 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1121, %1099 ]
  %1104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1096 ], [ %1122, %1099 ]
  %1105 = sub i64 %1087, %1100
  %1106 = getelementptr inbounds i32, ptr %11, i64 %1105
  %1107 = getelementptr inbounds i32, ptr %1106, i64 -7
  %1108 = load <8 x i32>, ptr %1107, align 4, !tbaa !5
  %1109 = shufflevector <8 x i32> %1108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1110 = getelementptr inbounds i32, ptr %1106, i64 -15
  %1111 = load <8 x i32>, ptr %1110, align 4, !tbaa !5
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1113 = getelementptr inbounds i32, ptr %1106, i64 -23
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = getelementptr inbounds i32, ptr %1106, i64 -31
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = mul <8 x i32> %1109, %1101
  %1120 = mul <8 x i32> %1112, %1102
  %1121 = mul <8 x i32> %1115, %1103
  %1122 = mul <8 x i32> %1118, %1104
  %1123 = add nuw i64 %1100, 32
  %1124 = icmp eq i64 %1123, %1097
  br i1 %1124, label %1125, label %1099, !llvm.loop !419

1125:                                             ; preds = %1099
  %1126 = mul <8 x i32> %1120, %1119
  %1127 = mul <8 x i32> %1121, %1126
  %1128 = mul <8 x i32> %1122, %1127
  %1129 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1128)
  %1130 = icmp eq i64 %1093, %1097
  br i1 %1130, label %1143, label %1131

1131:                                             ; preds = %1084, %1125
  %1132 = phi i64 [ %1087, %1084 ], [ %1098, %1125 ]
  %1133 = phi i32 [ 1, %1084 ], [ %1129, %1125 ]
  br label %1134

1134:                                             ; preds = %1131, %1134
  %1135 = phi i64 [ %1140, %1134 ], [ %1132, %1131 ]
  %1136 = phi i32 [ %1139, %1134 ], [ %1133, %1131 ]
  %1137 = getelementptr inbounds i32, ptr %11, i64 %1135
  %1138 = load i32, ptr %1137, align 4, !tbaa !5
  %1139 = mul nsw i32 %1138, %1136
  %1140 = add nsw i64 %1135, -1
  %1141 = trunc i64 %1135 to i32
  %1142 = icmp sgt i32 %1141, 0
  br i1 %1142, label %1134, label %1143, !llvm.loop !420

1143:                                             ; preds = %1134, %1125
  %1144 = phi i32 [ %1129, %1125 ], [ %1139, %1134 ]
  %1145 = and i64 %1094, 4294967295
  %1146 = getelementptr inbounds i32, ptr %6, i64 %1145
  %1147 = load i32, ptr %1146, align 4, !tbaa !5
  %1148 = mul nsw i32 %1147, %1144
  %1149 = add nsw i32 %1148, %1088
  %1150 = icmp sgt i64 %1086, 2
  %1151 = add nsw i64 %1087, -1
  %1152 = add i32 %1085, 1
  br i1 %1150, label %1084, label %1153, !llvm.loop !421

1153:                                             ; preds = %1143, %1081
  %1154 = phi i32 [ %1083, %1081 ], [ %1149, %1143 ]
  %1155 = icmp slt i32 %1154, %5
  br i1 %1155, label %1158, label %1156

1156:                                             ; preds = %1153
  %1157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

1158:                                             ; preds = %1153
  %1159 = sext i32 %1154 to i64
  %1160 = getelementptr inbounds i8, ptr %621, i64 %1159
  %1161 = load i8, ptr %1160, align 1, !tbaa !11
  %1162 = sext i8 %1161 to i32
  %1163 = load i32, ptr %623, align 4, !tbaa !5
  %1164 = add nsw i32 %1163, %1162
  store i32 %1164, ptr %623, align 4, !tbaa !5
  %1165 = add nuw nsw i32 %1082, 1
  br i1 %934, label %1166, label %1216

1166:                                             ; preds = %1158
  %1167 = load i32, ptr %4, align 4, !tbaa !5
  %1168 = load i32, ptr %12, align 4, !tbaa !5
  %1169 = add nsw i32 %1168, -1
  %1170 = icmp slt i32 %1167, %1169
  br i1 %1170, label %1193, label %1171

1171:                                             ; preds = %1166
  %1172 = icmp eq i32 %1167, %1169
  br i1 %1172, label %1173, label %1209

1173:                                             ; preds = %1171
  store i32 0, ptr %4, align 4, !tbaa !5
  %1174 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1174, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1216, label %1175

1175:                                             ; preds = %1173, %1203
  %1176 = phi i64 [ %1207, %1203 ], [ 1, %1173 ]
  %1177 = getelementptr inbounds i32, ptr %4, i64 %1176
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = getelementptr inbounds i32, ptr %12, i64 %1176
  %1180 = load i32, ptr %1179, align 4, !tbaa !5
  %1181 = add nsw i32 %1180, -1
  %1182 = icmp slt i32 %1178, %1181
  br i1 %1182, label %1183, label %1201

1183:                                             ; preds = %1175
  br i1 %1170, label %1193, label %1184

1184:                                             ; preds = %1183
  %1185 = shl i64 %1176, 32
  %1186 = add i64 %1185, -4294967296
  %1187 = ashr exact i64 %1186, 32
  %1188 = getelementptr inbounds i32, ptr %7, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %6, i64 %1176
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = add nsw i32 %1191, %1189
  store i32 %1192, ptr %1190, align 4, !tbaa !5
  br label %1211

1193:                                             ; preds = %1166, %1183
  %1194 = phi i32 [ %1178, %1183 ], [ %1167, %1166 ]
  %1195 = phi ptr [ %1177, %1183 ], [ %4, %1166 ]
  %1196 = phi i64 [ %1176, %1183 ], [ 0, %1166 ]
  %1197 = add nsw i32 %1194, 1
  store i32 %1197, ptr %1195, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %7, i64 %1196
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = getelementptr inbounds i32, ptr %6, i64 %1196
  br label %1211

1201:                                             ; preds = %1175
  %1202 = icmp eq i32 %1178, %1181
  br i1 %1202, label %1203, label %1209

1203:                                             ; preds = %1201
  store i32 0, ptr %1177, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %8, i64 %1176
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1176
  store i32 %1205, ptr %1206, align 4, !tbaa !5
  %1207 = add nuw nsw i64 %1176, 1
  %1208 = icmp eq i64 %1207, %937
  br i1 %1208, label %1216, label %1175, !llvm.loop !422

1209:                                             ; preds = %1171, %1201
  %1210 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1211:                                             ; preds = %1184, %1193
  %1212 = phi ptr [ %1200, %1193 ], [ %1177, %1184 ]
  %1213 = phi i32 [ %1199, %1193 ], [ 1, %1184 ]
  %1214 = load i32, ptr %1212, align 4, !tbaa !5
  %1215 = add nsw i32 %1214, %1213
  store i32 %1215, ptr %1212, align 4, !tbaa !5
  br label %1216

1216:                                             ; preds = %1203, %1211, %1173, %1158
  %1217 = icmp eq i32 %1165, %5
  br i1 %1217, label %3021, label %1081, !llvm.loop !423

1218:                                             ; preds = %628
  %1219 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3021

1220:                                             ; preds = %18
  %1221 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1222 = load ptr, ptr %1221, align 8, !tbaa !9
  %1223 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1224 = load ptr, ptr %1223, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1224, align 8, !tbaa !18
  %1225 = icmp eq i32 %13, 0
  br i1 %1225, label %1226, label %1229

1226:                                             ; preds = %1220
  %1227 = load i8, ptr %1222, align 1, !tbaa !11
  %1228 = sitofp i8 %1227 to double
  store double %1228, ptr %1224, align 8, !tbaa !18
  br label %3021

1229:                                             ; preds = %1220
  switch i32 %1, label %1817 [
    i32 1, label %1230
    i32 0, label %1525
  ]

1230:                                             ; preds = %1229
  %1231 = getelementptr inbounds i32, ptr %3, i64 %19
  %1232 = load i32, ptr %1231, align 4, !tbaa !5
  %1233 = icmp eq i32 %1232, 0
  %1234 = icmp sgt i32 %5, 0
  br i1 %1233, label %1244, label %1235

1235:                                             ; preds = %1230
  br i1 %1234, label %1236, label %3021

1236:                                             ; preds = %1235
  %1237 = icmp sgt i32 %13, 1
  %1238 = icmp sgt i32 %13, 0
  %1239 = add i32 %13, -2
  %1240 = zext i32 %1239 to i64
  %1241 = zext i32 %13 to i64
  %1242 = add nuw i32 %5, 1
  %1243 = icmp eq i32 %13, 1
  br label %1388

1244:                                             ; preds = %1230
  br i1 %1234, label %1245, label %3021

1245:                                             ; preds = %1244
  %1246 = icmp sgt i32 %13, 1
  %1247 = icmp sgt i32 %13, 0
  %1248 = add i32 %13, -2
  %1249 = zext i32 %1248 to i64
  %1250 = zext i32 %13 to i64
  %1251 = add nuw i32 %5, 1
  %1252 = icmp eq i32 %13, 1
  br label %1253

1253:                                             ; preds = %1245, %1386
  %1254 = phi double [ 0.000000e+00, %1245 ], [ %1336, %1386 ]
  %1255 = phi i32 [ 0, %1245 ], [ %1338, %1386 ]
  %1256 = phi double [ 0.000000e+00, %1245 ], [ %1337, %1386 ]
  %1257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1246, label %1258, label %1327

1258:                                             ; preds = %1253, %1317
  %1259 = phi i32 [ %1326, %1317 ], [ 0, %1253 ]
  %1260 = phi i64 [ %1268, %1317 ], [ %1250, %1253 ]
  %1261 = phi i64 [ %1325, %1317 ], [ %1249, %1253 ]
  %1262 = phi i32 [ %1323, %1317 ], [ %1257, %1253 ]
  %1263 = sub i32 %1248, %1259
  %1264 = tail call i32 @llvm.smin.i32(i32 %1263, i32 0)
  %1265 = sub i32 %1263, %1264
  %1266 = zext i32 %1265 to i64
  %1267 = add nuw nsw i64 %1266, 1
  %1268 = add nsw i64 %1260, -1
  %1269 = icmp ult i32 %1265, 31
  br i1 %1269, label %1305, label %1270

1270:                                             ; preds = %1258
  %1271 = and i64 %1267, 8589934560
  %1272 = sub i64 %1261, %1271
  br label %1273

1273:                                             ; preds = %1273, %1270
  %1274 = phi i64 [ 0, %1270 ], [ %1297, %1273 ]
  %1275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1293, %1273 ]
  %1276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1294, %1273 ]
  %1277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1295, %1273 ]
  %1278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1296, %1273 ]
  %1279 = sub i64 %1261, %1274
  %1280 = getelementptr inbounds i32, ptr %9, i64 %1279
  %1281 = getelementptr inbounds i32, ptr %1280, i64 -7
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = getelementptr inbounds i32, ptr %1280, i64 -15
  %1285 = load <8 x i32>, ptr %1284, align 4, !tbaa !5
  %1286 = shufflevector <8 x i32> %1285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1287 = getelementptr inbounds i32, ptr %1280, i64 -23
  %1288 = load <8 x i32>, ptr %1287, align 4, !tbaa !5
  %1289 = shufflevector <8 x i32> %1288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1290 = getelementptr inbounds i32, ptr %1280, i64 -31
  %1291 = load <8 x i32>, ptr %1290, align 4, !tbaa !5
  %1292 = shufflevector <8 x i32> %1291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1293 = mul <8 x i32> %1283, %1275
  %1294 = mul <8 x i32> %1286, %1276
  %1295 = mul <8 x i32> %1289, %1277
  %1296 = mul <8 x i32> %1292, %1278
  %1297 = add nuw i64 %1274, 32
  %1298 = icmp eq i64 %1297, %1271
  br i1 %1298, label %1299, label %1273, !llvm.loop !424

1299:                                             ; preds = %1273
  %1300 = mul <8 x i32> %1294, %1293
  %1301 = mul <8 x i32> %1295, %1300
  %1302 = mul <8 x i32> %1296, %1301
  %1303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1302)
  %1304 = icmp eq i64 %1267, %1271
  br i1 %1304, label %1317, label %1305

1305:                                             ; preds = %1258, %1299
  %1306 = phi i64 [ %1261, %1258 ], [ %1272, %1299 ]
  %1307 = phi i32 [ 1, %1258 ], [ %1303, %1299 ]
  br label %1308

1308:                                             ; preds = %1305, %1308
  %1309 = phi i64 [ %1314, %1308 ], [ %1306, %1305 ]
  %1310 = phi i32 [ %1313, %1308 ], [ %1307, %1305 ]
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1309
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1310
  %1314 = add nsw i64 %1309, -1
  %1315 = trunc i64 %1309 to i32
  %1316 = icmp sgt i32 %1315, 0
  br i1 %1316, label %1308, label %1317, !llvm.loop !425

1317:                                             ; preds = %1308, %1299
  %1318 = phi i32 [ %1303, %1299 ], [ %1313, %1308 ]
  %1319 = and i64 %1268, 4294967295
  %1320 = getelementptr inbounds i32, ptr %6, i64 %1319
  %1321 = load i32, ptr %1320, align 4, !tbaa !5
  %1322 = mul nsw i32 %1321, %1318
  %1323 = add nsw i32 %1322, %1262
  %1324 = icmp sgt i64 %1260, 2
  %1325 = add nsw i64 %1261, -1
  %1326 = add i32 %1259, 1
  br i1 %1324, label %1258, label %1327, !llvm.loop !426

1327:                                             ; preds = %1317, %1253
  %1328 = phi i32 [ %1257, %1253 ], [ %1323, %1317 ]
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds double, ptr %2, i64 %1329
  %1331 = load double, ptr %1330, align 8, !tbaa !18
  %1332 = getelementptr inbounds i8, ptr %1222, i64 %1329
  %1333 = load i8, ptr %1332, align 1, !tbaa !11
  %1334 = sitofp i8 %1333 to double
  %1335 = fmul fast double %1331, %1334
  %1336 = fadd fast double %1335, %1254
  store double %1336, ptr %1224, align 8, !tbaa !18
  %1337 = fadd fast double %1331, %1256
  %1338 = add nuw nsw i32 %1255, 1
  br i1 %1247, label %1339, label %1386

1339:                                             ; preds = %1327
  %1340 = load i32, ptr %4, align 4, !tbaa !5
  %1341 = load i32, ptr %12, align 4, !tbaa !5
  %1342 = add nsw i32 %1341, -1
  %1343 = icmp slt i32 %1340, %1342
  br i1 %1343, label %1363, label %1344

1344:                                             ; preds = %1339
  %1345 = icmp eq i32 %1340, %1342
  br i1 %1345, label %1346, label %1379

1346:                                             ; preds = %1344
  store i32 0, ptr %4, align 4, !tbaa !5
  %1347 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1347, ptr %6, align 4, !tbaa !5
  br i1 %1252, label %1386, label %1348

1348:                                             ; preds = %1346, %1373
  %1349 = phi i64 [ %1377, %1373 ], [ 1, %1346 ]
  %1350 = getelementptr inbounds i32, ptr %4, i64 %1349
  %1351 = load i32, ptr %1350, align 4, !tbaa !5
  %1352 = getelementptr inbounds i32, ptr %12, i64 %1349
  %1353 = load i32, ptr %1352, align 4, !tbaa !5
  %1354 = add nsw i32 %1353, -1
  %1355 = icmp slt i32 %1351, %1354
  br i1 %1355, label %1356, label %1371

1356:                                             ; preds = %1348
  br i1 %1343, label %1363, label %1357

1357:                                             ; preds = %1356
  %1358 = getelementptr inbounds i32, ptr %7, i64 %1349
  %1359 = load i32, ptr %1358, align 4, !tbaa !5
  %1360 = getelementptr inbounds i32, ptr %6, i64 %1349
  %1361 = load i32, ptr %1360, align 4, !tbaa !5
  %1362 = add nsw i32 %1361, %1359
  store i32 %1362, ptr %1360, align 4, !tbaa !5
  br label %1381

1363:                                             ; preds = %1339, %1356
  %1364 = phi i32 [ %1351, %1356 ], [ %1340, %1339 ]
  %1365 = phi ptr [ %1350, %1356 ], [ %4, %1339 ]
  %1366 = phi i64 [ %1349, %1356 ], [ 0, %1339 ]
  %1367 = add nsw i32 %1364, 1
  store i32 %1367, ptr %1365, align 4, !tbaa !5
  %1368 = getelementptr inbounds i32, ptr %7, i64 %1366
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %6, i64 %1366
  br label %1381

1371:                                             ; preds = %1348
  %1372 = icmp eq i32 %1351, %1354
  br i1 %1372, label %1373, label %1379

1373:                                             ; preds = %1371
  store i32 0, ptr %1350, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %8, i64 %1349
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %6, i64 %1349
  store i32 %1375, ptr %1376, align 4, !tbaa !5
  %1377 = add nuw nsw i64 %1349, 1
  %1378 = icmp eq i64 %1377, %1250
  br i1 %1378, label %1386, label %1348, !llvm.loop !427

1379:                                             ; preds = %1344, %1371
  %1380 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1381:                                             ; preds = %1357, %1363
  %1382 = phi ptr [ %1370, %1363 ], [ %1350, %1357 ]
  %1383 = phi i32 [ %1369, %1363 ], [ 1, %1357 ]
  %1384 = load i32, ptr %1382, align 4, !tbaa !5
  %1385 = add nsw i32 %1384, %1383
  store i32 %1385, ptr %1382, align 4, !tbaa !5
  br label %1386

1386:                                             ; preds = %1373, %1381, %1346, %1327
  %1387 = icmp eq i32 %1338, %5
  br i1 %1387, label %3021, label %1253, !llvm.loop !428

1388:                                             ; preds = %1236, %1523
  %1389 = phi double [ 0.000000e+00, %1236 ], [ %1471, %1523 ]
  %1390 = phi i32 [ 0, %1236 ], [ %1472, %1523 ]
  %1391 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1237, label %1392, label %1461

1392:                                             ; preds = %1388, %1451
  %1393 = phi i32 [ %1460, %1451 ], [ 0, %1388 ]
  %1394 = phi i64 [ %1402, %1451 ], [ %1241, %1388 ]
  %1395 = phi i64 [ %1459, %1451 ], [ %1240, %1388 ]
  %1396 = phi i32 [ %1457, %1451 ], [ %1391, %1388 ]
  %1397 = sub i32 %1239, %1393
  %1398 = tail call i32 @llvm.smin.i32(i32 %1397, i32 0)
  %1399 = sub i32 %1397, %1398
  %1400 = zext i32 %1399 to i64
  %1401 = add nuw nsw i64 %1400, 1
  %1402 = add nsw i64 %1394, -1
  %1403 = icmp ult i32 %1399, 31
  br i1 %1403, label %1439, label %1404

1404:                                             ; preds = %1392
  %1405 = and i64 %1401, 8589934560
  %1406 = sub i64 %1395, %1405
  br label %1407

1407:                                             ; preds = %1407, %1404
  %1408 = phi i64 [ 0, %1404 ], [ %1431, %1407 ]
  %1409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1427, %1407 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1428, %1407 ]
  %1411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1429, %1407 ]
  %1412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1404 ], [ %1430, %1407 ]
  %1413 = sub i64 %1395, %1408
  %1414 = getelementptr inbounds i32, ptr %11, i64 %1413
  %1415 = getelementptr inbounds i32, ptr %1414, i64 -7
  %1416 = load <8 x i32>, ptr %1415, align 4, !tbaa !5
  %1417 = shufflevector <8 x i32> %1416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1418 = getelementptr inbounds i32, ptr %1414, i64 -15
  %1419 = load <8 x i32>, ptr %1418, align 4, !tbaa !5
  %1420 = shufflevector <8 x i32> %1419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1421 = getelementptr inbounds i32, ptr %1414, i64 -23
  %1422 = load <8 x i32>, ptr %1421, align 4, !tbaa !5
  %1423 = shufflevector <8 x i32> %1422, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1424 = getelementptr inbounds i32, ptr %1414, i64 -31
  %1425 = load <8 x i32>, ptr %1424, align 4, !tbaa !5
  %1426 = shufflevector <8 x i32> %1425, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1427 = mul <8 x i32> %1417, %1409
  %1428 = mul <8 x i32> %1420, %1410
  %1429 = mul <8 x i32> %1423, %1411
  %1430 = mul <8 x i32> %1426, %1412
  %1431 = add nuw i64 %1408, 32
  %1432 = icmp eq i64 %1431, %1405
  br i1 %1432, label %1433, label %1407, !llvm.loop !429

1433:                                             ; preds = %1407
  %1434 = mul <8 x i32> %1428, %1427
  %1435 = mul <8 x i32> %1429, %1434
  %1436 = mul <8 x i32> %1430, %1435
  %1437 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1436)
  %1438 = icmp eq i64 %1401, %1405
  br i1 %1438, label %1451, label %1439

1439:                                             ; preds = %1392, %1433
  %1440 = phi i64 [ %1395, %1392 ], [ %1406, %1433 ]
  %1441 = phi i32 [ 1, %1392 ], [ %1437, %1433 ]
  br label %1442

1442:                                             ; preds = %1439, %1442
  %1443 = phi i64 [ %1448, %1442 ], [ %1440, %1439 ]
  %1444 = phi i32 [ %1447, %1442 ], [ %1441, %1439 ]
  %1445 = getelementptr inbounds i32, ptr %11, i64 %1443
  %1446 = load i32, ptr %1445, align 4, !tbaa !5
  %1447 = mul nsw i32 %1446, %1444
  %1448 = add nsw i64 %1443, -1
  %1449 = trunc i64 %1443 to i32
  %1450 = icmp sgt i32 %1449, 0
  br i1 %1450, label %1442, label %1451, !llvm.loop !430

1451:                                             ; preds = %1442, %1433
  %1452 = phi i32 [ %1437, %1433 ], [ %1447, %1442 ]
  %1453 = and i64 %1402, 4294967295
  %1454 = getelementptr inbounds i32, ptr %6, i64 %1453
  %1455 = load i32, ptr %1454, align 4, !tbaa !5
  %1456 = mul nsw i32 %1455, %1452
  %1457 = add nsw i32 %1456, %1396
  %1458 = icmp sgt i64 %1394, 2
  %1459 = add nsw i64 %1395, -1
  %1460 = add i32 %1393, 1
  br i1 %1458, label %1392, label %1461, !llvm.loop !431

1461:                                             ; preds = %1451, %1388
  %1462 = phi i32 [ %1391, %1388 ], [ %1457, %1451 ]
  %1463 = icmp slt i32 %1462, %5
  br i1 %1463, label %1466, label %1464

1464:                                             ; preds = %1461
  %1465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

1466:                                             ; preds = %1461
  %1467 = sext i32 %1462 to i64
  %1468 = getelementptr inbounds i8, ptr %1222, i64 %1467
  %1469 = load i8, ptr %1468, align 1, !tbaa !11
  %1470 = sitofp i8 %1469 to double
  %1471 = fadd fast double %1389, %1470
  store double %1471, ptr %1224, align 8, !tbaa !18
  %1472 = add nuw nsw i32 %1390, 1
  br i1 %1238, label %1473, label %1523

1473:                                             ; preds = %1466
  %1474 = load i32, ptr %4, align 4, !tbaa !5
  %1475 = load i32, ptr %12, align 4, !tbaa !5
  %1476 = add nsw i32 %1475, -1
  %1477 = icmp slt i32 %1474, %1476
  br i1 %1477, label %1500, label %1478

1478:                                             ; preds = %1473
  %1479 = icmp eq i32 %1474, %1476
  br i1 %1479, label %1480, label %1516

1480:                                             ; preds = %1478
  store i32 0, ptr %4, align 4, !tbaa !5
  %1481 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1481, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1523, label %1482

1482:                                             ; preds = %1480, %1510
  %1483 = phi i64 [ %1514, %1510 ], [ 1, %1480 ]
  %1484 = getelementptr inbounds i32, ptr %4, i64 %1483
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = getelementptr inbounds i32, ptr %12, i64 %1483
  %1487 = load i32, ptr %1486, align 4, !tbaa !5
  %1488 = add nsw i32 %1487, -1
  %1489 = icmp slt i32 %1485, %1488
  br i1 %1489, label %1490, label %1508

1490:                                             ; preds = %1482
  br i1 %1477, label %1500, label %1491

1491:                                             ; preds = %1490
  %1492 = shl i64 %1483, 32
  %1493 = add i64 %1492, -4294967296
  %1494 = ashr exact i64 %1493, 32
  %1495 = getelementptr inbounds i32, ptr %7, i64 %1494
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = getelementptr inbounds i32, ptr %6, i64 %1483
  %1498 = load i32, ptr %1497, align 4, !tbaa !5
  %1499 = add nsw i32 %1498, %1496
  store i32 %1499, ptr %1497, align 4, !tbaa !5
  br label %1518

1500:                                             ; preds = %1473, %1490
  %1501 = phi i32 [ %1485, %1490 ], [ %1474, %1473 ]
  %1502 = phi ptr [ %1484, %1490 ], [ %4, %1473 ]
  %1503 = phi i64 [ %1483, %1490 ], [ 0, %1473 ]
  %1504 = add nsw i32 %1501, 1
  store i32 %1504, ptr %1502, align 4, !tbaa !5
  %1505 = getelementptr inbounds i32, ptr %7, i64 %1503
  %1506 = load i32, ptr %1505, align 4, !tbaa !5
  %1507 = getelementptr inbounds i32, ptr %6, i64 %1503
  br label %1518

1508:                                             ; preds = %1482
  %1509 = icmp eq i32 %1485, %1488
  br i1 %1509, label %1510, label %1516

1510:                                             ; preds = %1508
  store i32 0, ptr %1484, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %8, i64 %1483
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = getelementptr inbounds i32, ptr %6, i64 %1483
  store i32 %1512, ptr %1513, align 4, !tbaa !5
  %1514 = add nuw nsw i64 %1483, 1
  %1515 = icmp eq i64 %1514, %1241
  br i1 %1515, label %1523, label %1482, !llvm.loop !432

1516:                                             ; preds = %1478, %1508
  %1517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1518:                                             ; preds = %1491, %1500
  %1519 = phi ptr [ %1507, %1500 ], [ %1484, %1491 ]
  %1520 = phi i32 [ %1506, %1500 ], [ 1, %1491 ]
  %1521 = load i32, ptr %1519, align 4, !tbaa !5
  %1522 = add nsw i32 %1521, %1520
  store i32 %1522, ptr %1519, align 4, !tbaa !5
  br label %1523

1523:                                             ; preds = %1510, %1518, %1480, %1466
  %1524 = icmp eq i32 %1472, %5
  br i1 %1524, label %3021, label %1388, !llvm.loop !433

1525:                                             ; preds = %1229
  %1526 = getelementptr inbounds i32, ptr %3, i64 %19
  %1527 = load i32, ptr %1526, align 4, !tbaa !5
  %1528 = icmp eq i32 %1527, 0
  %1529 = icmp sgt i32 %5, 0
  br i1 %1528, label %1539, label %1530

1530:                                             ; preds = %1525
  br i1 %1529, label %1531, label %3021

1531:                                             ; preds = %1530
  %1532 = icmp sgt i32 %13, 1
  %1533 = icmp sgt i32 %13, 0
  %1534 = add i32 %13, -2
  %1535 = zext i32 %1534 to i64
  %1536 = zext i32 %13 to i64
  %1537 = add nuw i32 %5, 1
  %1538 = icmp eq i32 %13, 1
  br label %1680

1539:                                             ; preds = %1525
  br i1 %1529, label %1540, label %3021

1540:                                             ; preds = %1539
  %1541 = icmp sgt i32 %13, 1
  %1542 = icmp sgt i32 %13, 0
  %1543 = add i32 %13, -2
  %1544 = zext i32 %1543 to i64
  %1545 = zext i32 %13 to i64
  %1546 = add nuw i32 %5, 1
  %1547 = icmp eq i32 %13, 1
  br label %1548

1548:                                             ; preds = %1540, %1678
  %1549 = phi double [ 0.000000e+00, %1540 ], [ %1628, %1678 ]
  %1550 = phi i32 [ 0, %1540 ], [ %1630, %1678 ]
  %1551 = phi double [ 0.000000e+00, %1540 ], [ %1629, %1678 ]
  %1552 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1541, label %1553, label %1622

1553:                                             ; preds = %1548, %1612
  %1554 = phi i32 [ %1621, %1612 ], [ 0, %1548 ]
  %1555 = phi i64 [ %1563, %1612 ], [ %1545, %1548 ]
  %1556 = phi i64 [ %1620, %1612 ], [ %1544, %1548 ]
  %1557 = phi i32 [ %1618, %1612 ], [ %1552, %1548 ]
  %1558 = sub i32 %1543, %1554
  %1559 = tail call i32 @llvm.smin.i32(i32 %1558, i32 0)
  %1560 = sub i32 %1558, %1559
  %1561 = zext i32 %1560 to i64
  %1562 = add nuw nsw i64 %1561, 1
  %1563 = add nsw i64 %1555, -1
  %1564 = icmp ult i32 %1560, 31
  br i1 %1564, label %1600, label %1565

1565:                                             ; preds = %1553
  %1566 = and i64 %1562, 8589934560
  %1567 = sub i64 %1556, %1566
  br label %1568

1568:                                             ; preds = %1568, %1565
  %1569 = phi i64 [ 0, %1565 ], [ %1592, %1568 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1588, %1568 ]
  %1571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1589, %1568 ]
  %1572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1590, %1568 ]
  %1573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1591, %1568 ]
  %1574 = sub i64 %1556, %1569
  %1575 = getelementptr inbounds i32, ptr %9, i64 %1574
  %1576 = getelementptr inbounds i32, ptr %1575, i64 -7
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1575, i64 -15
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = getelementptr inbounds i32, ptr %1575, i64 -23
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !5
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = getelementptr inbounds i32, ptr %1575, i64 -31
  %1586 = load <8 x i32>, ptr %1585, align 4, !tbaa !5
  %1587 = shufflevector <8 x i32> %1586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1588 = mul <8 x i32> %1578, %1570
  %1589 = mul <8 x i32> %1581, %1571
  %1590 = mul <8 x i32> %1584, %1572
  %1591 = mul <8 x i32> %1587, %1573
  %1592 = add nuw i64 %1569, 32
  %1593 = icmp eq i64 %1592, %1566
  br i1 %1593, label %1594, label %1568, !llvm.loop !434

1594:                                             ; preds = %1568
  %1595 = mul <8 x i32> %1589, %1588
  %1596 = mul <8 x i32> %1590, %1595
  %1597 = mul <8 x i32> %1591, %1596
  %1598 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1597)
  %1599 = icmp eq i64 %1562, %1566
  br i1 %1599, label %1612, label %1600

1600:                                             ; preds = %1553, %1594
  %1601 = phi i64 [ %1556, %1553 ], [ %1567, %1594 ]
  %1602 = phi i32 [ 1, %1553 ], [ %1598, %1594 ]
  br label %1603

1603:                                             ; preds = %1600, %1603
  %1604 = phi i64 [ %1609, %1603 ], [ %1601, %1600 ]
  %1605 = phi i32 [ %1608, %1603 ], [ %1602, %1600 ]
  %1606 = getelementptr inbounds i32, ptr %9, i64 %1604
  %1607 = load i32, ptr %1606, align 4, !tbaa !5
  %1608 = mul nsw i32 %1607, %1605
  %1609 = add nsw i64 %1604, -1
  %1610 = trunc i64 %1604 to i32
  %1611 = icmp sgt i32 %1610, 0
  br i1 %1611, label %1603, label %1612, !llvm.loop !435

1612:                                             ; preds = %1603, %1594
  %1613 = phi i32 [ %1598, %1594 ], [ %1608, %1603 ]
  %1614 = and i64 %1563, 4294967295
  %1615 = getelementptr inbounds i32, ptr %6, i64 %1614
  %1616 = load i32, ptr %1615, align 4, !tbaa !5
  %1617 = mul nsw i32 %1616, %1613
  %1618 = add nsw i32 %1617, %1557
  %1619 = icmp sgt i64 %1555, 2
  %1620 = add nsw i64 %1556, -1
  %1621 = add i32 %1554, 1
  br i1 %1619, label %1553, label %1622, !llvm.loop !436

1622:                                             ; preds = %1612, %1548
  %1623 = phi i32 [ %1552, %1548 ], [ %1618, %1612 ]
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds i8, ptr %1222, i64 %1624
  %1626 = load i8, ptr %1625, align 1, !tbaa !11
  %1627 = sitofp i8 %1626 to double
  %1628 = fadd fast double %1549, %1627
  store double %1628, ptr %1224, align 8, !tbaa !18
  %1629 = fadd fast double %1551, 1.000000e+00
  %1630 = add nuw nsw i32 %1550, 1
  br i1 %1542, label %1631, label %1678

1631:                                             ; preds = %1622
  %1632 = load i32, ptr %4, align 4, !tbaa !5
  %1633 = load i32, ptr %12, align 4, !tbaa !5
  %1634 = add nsw i32 %1633, -1
  %1635 = icmp slt i32 %1632, %1634
  br i1 %1635, label %1655, label %1636

1636:                                             ; preds = %1631
  %1637 = icmp eq i32 %1632, %1634
  br i1 %1637, label %1638, label %1671

1638:                                             ; preds = %1636
  store i32 0, ptr %4, align 4, !tbaa !5
  %1639 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1639, ptr %6, align 4, !tbaa !5
  br i1 %1547, label %1678, label %1640

1640:                                             ; preds = %1638, %1665
  %1641 = phi i64 [ %1669, %1665 ], [ 1, %1638 ]
  %1642 = getelementptr inbounds i32, ptr %4, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = getelementptr inbounds i32, ptr %12, i64 %1641
  %1645 = load i32, ptr %1644, align 4, !tbaa !5
  %1646 = add nsw i32 %1645, -1
  %1647 = icmp slt i32 %1643, %1646
  br i1 %1647, label %1648, label %1663

1648:                                             ; preds = %1640
  br i1 %1635, label %1655, label %1649

1649:                                             ; preds = %1648
  %1650 = getelementptr inbounds i32, ptr %7, i64 %1641
  %1651 = load i32, ptr %1650, align 4, !tbaa !5
  %1652 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, %1651
  store i32 %1654, ptr %1652, align 4, !tbaa !5
  br label %1673

1655:                                             ; preds = %1631, %1648
  %1656 = phi i32 [ %1643, %1648 ], [ %1632, %1631 ]
  %1657 = phi ptr [ %1642, %1648 ], [ %4, %1631 ]
  %1658 = phi i64 [ %1641, %1648 ], [ 0, %1631 ]
  %1659 = add nsw i32 %1656, 1
  store i32 %1659, ptr %1657, align 4, !tbaa !5
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1658
  %1661 = load i32, ptr %1660, align 4, !tbaa !5
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1658
  br label %1673

1663:                                             ; preds = %1640
  %1664 = icmp eq i32 %1643, %1646
  br i1 %1664, label %1665, label %1671

1665:                                             ; preds = %1663
  store i32 0, ptr %1642, align 4, !tbaa !5
  %1666 = getelementptr inbounds i32, ptr %8, i64 %1641
  %1667 = load i32, ptr %1666, align 4, !tbaa !5
  %1668 = getelementptr inbounds i32, ptr %6, i64 %1641
  store i32 %1667, ptr %1668, align 4, !tbaa !5
  %1669 = add nuw nsw i64 %1641, 1
  %1670 = icmp eq i64 %1669, %1545
  br i1 %1670, label %1678, label %1640, !llvm.loop !437

1671:                                             ; preds = %1636, %1663
  %1672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1673:                                             ; preds = %1649, %1655
  %1674 = phi ptr [ %1662, %1655 ], [ %1642, %1649 ]
  %1675 = phi i32 [ %1661, %1655 ], [ 1, %1649 ]
  %1676 = load i32, ptr %1674, align 4, !tbaa !5
  %1677 = add nsw i32 %1676, %1675
  store i32 %1677, ptr %1674, align 4, !tbaa !5
  br label %1678

1678:                                             ; preds = %1665, %1673, %1638, %1622
  %1679 = icmp eq i32 %1630, %5
  br i1 %1679, label %3021, label %1548, !llvm.loop !438

1680:                                             ; preds = %1531, %1815
  %1681 = phi double [ 0.000000e+00, %1531 ], [ %1763, %1815 ]
  %1682 = phi i32 [ 0, %1531 ], [ %1764, %1815 ]
  %1683 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1532, label %1684, label %1753

1684:                                             ; preds = %1680, %1743
  %1685 = phi i32 [ %1752, %1743 ], [ 0, %1680 ]
  %1686 = phi i64 [ %1694, %1743 ], [ %1536, %1680 ]
  %1687 = phi i64 [ %1751, %1743 ], [ %1535, %1680 ]
  %1688 = phi i32 [ %1749, %1743 ], [ %1683, %1680 ]
  %1689 = sub i32 %1534, %1685
  %1690 = tail call i32 @llvm.smin.i32(i32 %1689, i32 0)
  %1691 = sub i32 %1689, %1690
  %1692 = zext i32 %1691 to i64
  %1693 = add nuw nsw i64 %1692, 1
  %1694 = add nsw i64 %1686, -1
  %1695 = icmp ult i32 %1691, 31
  br i1 %1695, label %1731, label %1696

1696:                                             ; preds = %1684
  %1697 = and i64 %1693, 8589934560
  %1698 = sub i64 %1687, %1697
  br label %1699

1699:                                             ; preds = %1699, %1696
  %1700 = phi i64 [ 0, %1696 ], [ %1723, %1699 ]
  %1701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1696 ], [ %1719, %1699 ]
  %1702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1696 ], [ %1720, %1699 ]
  %1703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1696 ], [ %1721, %1699 ]
  %1704 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1696 ], [ %1722, %1699 ]
  %1705 = sub i64 %1687, %1700
  %1706 = getelementptr inbounds i32, ptr %11, i64 %1705
  %1707 = getelementptr inbounds i32, ptr %1706, i64 -7
  %1708 = load <8 x i32>, ptr %1707, align 4, !tbaa !5
  %1709 = shufflevector <8 x i32> %1708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1710 = getelementptr inbounds i32, ptr %1706, i64 -15
  %1711 = load <8 x i32>, ptr %1710, align 4, !tbaa !5
  %1712 = shufflevector <8 x i32> %1711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1713 = getelementptr inbounds i32, ptr %1706, i64 -23
  %1714 = load <8 x i32>, ptr %1713, align 4, !tbaa !5
  %1715 = shufflevector <8 x i32> %1714, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1716 = getelementptr inbounds i32, ptr %1706, i64 -31
  %1717 = load <8 x i32>, ptr %1716, align 4, !tbaa !5
  %1718 = shufflevector <8 x i32> %1717, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1719 = mul <8 x i32> %1709, %1701
  %1720 = mul <8 x i32> %1712, %1702
  %1721 = mul <8 x i32> %1715, %1703
  %1722 = mul <8 x i32> %1718, %1704
  %1723 = add nuw i64 %1700, 32
  %1724 = icmp eq i64 %1723, %1697
  br i1 %1724, label %1725, label %1699, !llvm.loop !439

1725:                                             ; preds = %1699
  %1726 = mul <8 x i32> %1720, %1719
  %1727 = mul <8 x i32> %1721, %1726
  %1728 = mul <8 x i32> %1722, %1727
  %1729 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1728)
  %1730 = icmp eq i64 %1693, %1697
  br i1 %1730, label %1743, label %1731

1731:                                             ; preds = %1684, %1725
  %1732 = phi i64 [ %1687, %1684 ], [ %1698, %1725 ]
  %1733 = phi i32 [ 1, %1684 ], [ %1729, %1725 ]
  br label %1734

1734:                                             ; preds = %1731, %1734
  %1735 = phi i64 [ %1740, %1734 ], [ %1732, %1731 ]
  %1736 = phi i32 [ %1739, %1734 ], [ %1733, %1731 ]
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1735
  %1738 = load i32, ptr %1737, align 4, !tbaa !5
  %1739 = mul nsw i32 %1738, %1736
  %1740 = add nsw i64 %1735, -1
  %1741 = trunc i64 %1735 to i32
  %1742 = icmp sgt i32 %1741, 0
  br i1 %1742, label %1734, label %1743, !llvm.loop !440

1743:                                             ; preds = %1734, %1725
  %1744 = phi i32 [ %1729, %1725 ], [ %1739, %1734 ]
  %1745 = and i64 %1694, 4294967295
  %1746 = getelementptr inbounds i32, ptr %6, i64 %1745
  %1747 = load i32, ptr %1746, align 4, !tbaa !5
  %1748 = mul nsw i32 %1747, %1744
  %1749 = add nsw i32 %1748, %1688
  %1750 = icmp sgt i64 %1686, 2
  %1751 = add nsw i64 %1687, -1
  %1752 = add i32 %1685, 1
  br i1 %1750, label %1684, label %1753, !llvm.loop !441

1753:                                             ; preds = %1743, %1680
  %1754 = phi i32 [ %1683, %1680 ], [ %1749, %1743 ]
  %1755 = icmp slt i32 %1754, %5
  br i1 %1755, label %1758, label %1756

1756:                                             ; preds = %1753
  %1757 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

1758:                                             ; preds = %1753
  %1759 = sext i32 %1754 to i64
  %1760 = getelementptr inbounds i8, ptr %1222, i64 %1759
  %1761 = load i8, ptr %1760, align 1, !tbaa !11
  %1762 = sitofp i8 %1761 to double
  %1763 = fadd fast double %1681, %1762
  store double %1763, ptr %1224, align 8, !tbaa !18
  %1764 = add nuw nsw i32 %1682, 1
  br i1 %1533, label %1765, label %1815

1765:                                             ; preds = %1758
  %1766 = load i32, ptr %4, align 4, !tbaa !5
  %1767 = load i32, ptr %12, align 4, !tbaa !5
  %1768 = add nsw i32 %1767, -1
  %1769 = icmp slt i32 %1766, %1768
  br i1 %1769, label %1792, label %1770

1770:                                             ; preds = %1765
  %1771 = icmp eq i32 %1766, %1768
  br i1 %1771, label %1772, label %1808

1772:                                             ; preds = %1770
  store i32 0, ptr %4, align 4, !tbaa !5
  %1773 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1773, ptr %6, align 4, !tbaa !5
  br i1 %1538, label %1815, label %1774

1774:                                             ; preds = %1772, %1802
  %1775 = phi i64 [ %1806, %1802 ], [ 1, %1772 ]
  %1776 = getelementptr inbounds i32, ptr %4, i64 %1775
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = getelementptr inbounds i32, ptr %12, i64 %1775
  %1779 = load i32, ptr %1778, align 4, !tbaa !5
  %1780 = add nsw i32 %1779, -1
  %1781 = icmp slt i32 %1777, %1780
  br i1 %1781, label %1782, label %1800

1782:                                             ; preds = %1774
  br i1 %1769, label %1792, label %1783

1783:                                             ; preds = %1782
  %1784 = shl i64 %1775, 32
  %1785 = add i64 %1784, -4294967296
  %1786 = ashr exact i64 %1785, 32
  %1787 = getelementptr inbounds i32, ptr %7, i64 %1786
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = getelementptr inbounds i32, ptr %6, i64 %1775
  %1790 = load i32, ptr %1789, align 4, !tbaa !5
  %1791 = add nsw i32 %1790, %1788
  store i32 %1791, ptr %1789, align 4, !tbaa !5
  br label %1810

1792:                                             ; preds = %1765, %1782
  %1793 = phi i32 [ %1777, %1782 ], [ %1766, %1765 ]
  %1794 = phi ptr [ %1776, %1782 ], [ %4, %1765 ]
  %1795 = phi i64 [ %1775, %1782 ], [ 0, %1765 ]
  %1796 = add nsw i32 %1793, 1
  store i32 %1796, ptr %1794, align 4, !tbaa !5
  %1797 = getelementptr inbounds i32, ptr %7, i64 %1795
  %1798 = load i32, ptr %1797, align 4, !tbaa !5
  %1799 = getelementptr inbounds i32, ptr %6, i64 %1795
  br label %1810

1800:                                             ; preds = %1774
  %1801 = icmp eq i32 %1777, %1780
  br i1 %1801, label %1802, label %1808

1802:                                             ; preds = %1800
  store i32 0, ptr %1776, align 4, !tbaa !5
  %1803 = getelementptr inbounds i32, ptr %8, i64 %1775
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %6, i64 %1775
  store i32 %1804, ptr %1805, align 4, !tbaa !5
  %1806 = add nuw nsw i64 %1775, 1
  %1807 = icmp eq i64 %1806, %1536
  br i1 %1807, label %1815, label %1774, !llvm.loop !442

1808:                                             ; preds = %1770, %1800
  %1809 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1810:                                             ; preds = %1783, %1792
  %1811 = phi ptr [ %1799, %1792 ], [ %1776, %1783 ]
  %1812 = phi i32 [ %1798, %1792 ], [ 1, %1783 ]
  %1813 = load i32, ptr %1811, align 4, !tbaa !5
  %1814 = add nsw i32 %1813, %1812
  store i32 %1814, ptr %1811, align 4, !tbaa !5
  br label %1815

1815:                                             ; preds = %1802, %1810, %1772, %1758
  %1816 = icmp eq i32 %1764, %5
  br i1 %1816, label %3021, label %1680, !llvm.loop !443

1817:                                             ; preds = %1229
  %1818 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3021

1819:                                             ; preds = %18
  %1820 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1821 = load ptr, ptr %1820, align 8, !tbaa !9
  %1822 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1823 = load ptr, ptr %1822, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1823, align 4, !tbaa !162
  %1824 = icmp eq i32 %13, 0
  br i1 %1824, label %1825, label %1828

1825:                                             ; preds = %1819
  %1826 = load i8, ptr %1821, align 1, !tbaa !11
  %1827 = sitofp i8 %1826 to float
  store float %1827, ptr %1823, align 4, !tbaa !162
  br label %3021

1828:                                             ; preds = %1819
  switch i32 %1, label %2420 [
    i32 1, label %1829
    i32 0, label %2128
  ]

1829:                                             ; preds = %1828
  %1830 = getelementptr inbounds i32, ptr %3, i64 %19
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = icmp eq i32 %1831, 0
  %1833 = icmp sgt i32 %5, 0
  br i1 %1832, label %1843, label %1834

1834:                                             ; preds = %1829
  br i1 %1833, label %1835, label %3021

1835:                                             ; preds = %1834
  %1836 = icmp sgt i32 %13, 1
  %1837 = icmp sgt i32 %13, 0
  %1838 = add i32 %13, -2
  %1839 = zext i32 %1838 to i64
  %1840 = zext i32 %13 to i64
  %1841 = add nuw i32 %5, 1
  %1842 = icmp eq i32 %13, 1
  br label %1989

1843:                                             ; preds = %1829
  br i1 %1833, label %1844, label %3021

1844:                                             ; preds = %1843
  %1845 = icmp sgt i32 %13, 1
  %1846 = icmp sgt i32 %13, 0
  %1847 = add i32 %13, -2
  %1848 = zext i32 %1847 to i64
  %1849 = zext i32 %13 to i64
  %1850 = add nuw i32 %5, 1
  %1851 = icmp eq i32 %13, 1
  br label %1852

1852:                                             ; preds = %1844, %1987
  %1853 = phi float [ 0.000000e+00, %1844 ], [ %1937, %1987 ]
  %1854 = phi i32 [ 0, %1844 ], [ %1939, %1987 ]
  %1855 = phi double [ 0.000000e+00, %1844 ], [ %1938, %1987 ]
  %1856 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1845, label %1857, label %1926

1857:                                             ; preds = %1852, %1916
  %1858 = phi i32 [ %1925, %1916 ], [ 0, %1852 ]
  %1859 = phi i64 [ %1867, %1916 ], [ %1849, %1852 ]
  %1860 = phi i64 [ %1924, %1916 ], [ %1848, %1852 ]
  %1861 = phi i32 [ %1922, %1916 ], [ %1856, %1852 ]
  %1862 = sub i32 %1847, %1858
  %1863 = tail call i32 @llvm.smin.i32(i32 %1862, i32 0)
  %1864 = sub i32 %1862, %1863
  %1865 = zext i32 %1864 to i64
  %1866 = add nuw nsw i64 %1865, 1
  %1867 = add nsw i64 %1859, -1
  %1868 = icmp ult i32 %1864, 31
  br i1 %1868, label %1904, label %1869

1869:                                             ; preds = %1857
  %1870 = and i64 %1866, 8589934560
  %1871 = sub i64 %1860, %1870
  br label %1872

1872:                                             ; preds = %1872, %1869
  %1873 = phi i64 [ 0, %1869 ], [ %1896, %1872 ]
  %1874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1869 ], [ %1892, %1872 ]
  %1875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1869 ], [ %1893, %1872 ]
  %1876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1869 ], [ %1894, %1872 ]
  %1877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1869 ], [ %1895, %1872 ]
  %1878 = sub i64 %1860, %1873
  %1879 = getelementptr inbounds i32, ptr %9, i64 %1878
  %1880 = getelementptr inbounds i32, ptr %1879, i64 -7
  %1881 = load <8 x i32>, ptr %1880, align 4, !tbaa !5
  %1882 = shufflevector <8 x i32> %1881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1883 = getelementptr inbounds i32, ptr %1879, i64 -15
  %1884 = load <8 x i32>, ptr %1883, align 4, !tbaa !5
  %1885 = shufflevector <8 x i32> %1884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1886 = getelementptr inbounds i32, ptr %1879, i64 -23
  %1887 = load <8 x i32>, ptr %1886, align 4, !tbaa !5
  %1888 = shufflevector <8 x i32> %1887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1889 = getelementptr inbounds i32, ptr %1879, i64 -31
  %1890 = load <8 x i32>, ptr %1889, align 4, !tbaa !5
  %1891 = shufflevector <8 x i32> %1890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1892 = mul <8 x i32> %1882, %1874
  %1893 = mul <8 x i32> %1885, %1875
  %1894 = mul <8 x i32> %1888, %1876
  %1895 = mul <8 x i32> %1891, %1877
  %1896 = add nuw i64 %1873, 32
  %1897 = icmp eq i64 %1896, %1870
  br i1 %1897, label %1898, label %1872, !llvm.loop !444

1898:                                             ; preds = %1872
  %1899 = mul <8 x i32> %1893, %1892
  %1900 = mul <8 x i32> %1894, %1899
  %1901 = mul <8 x i32> %1895, %1900
  %1902 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1901)
  %1903 = icmp eq i64 %1866, %1870
  br i1 %1903, label %1916, label %1904

1904:                                             ; preds = %1857, %1898
  %1905 = phi i64 [ %1860, %1857 ], [ %1871, %1898 ]
  %1906 = phi i32 [ 1, %1857 ], [ %1902, %1898 ]
  br label %1907

1907:                                             ; preds = %1904, %1907
  %1908 = phi i64 [ %1913, %1907 ], [ %1905, %1904 ]
  %1909 = phi i32 [ %1912, %1907 ], [ %1906, %1904 ]
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1908
  %1911 = load i32, ptr %1910, align 4, !tbaa !5
  %1912 = mul nsw i32 %1911, %1909
  %1913 = add nsw i64 %1908, -1
  %1914 = trunc i64 %1908 to i32
  %1915 = icmp sgt i32 %1914, 0
  br i1 %1915, label %1907, label %1916, !llvm.loop !445

1916:                                             ; preds = %1907, %1898
  %1917 = phi i32 [ %1902, %1898 ], [ %1912, %1907 ]
  %1918 = and i64 %1867, 4294967295
  %1919 = getelementptr inbounds i32, ptr %6, i64 %1918
  %1920 = load i32, ptr %1919, align 4, !tbaa !5
  %1921 = mul nsw i32 %1920, %1917
  %1922 = add nsw i32 %1921, %1861
  %1923 = icmp sgt i64 %1859, 2
  %1924 = add nsw i64 %1860, -1
  %1925 = add i32 %1858, 1
  br i1 %1923, label %1857, label %1926, !llvm.loop !446

1926:                                             ; preds = %1916, %1852
  %1927 = phi i32 [ %1856, %1852 ], [ %1922, %1916 ]
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds double, ptr %2, i64 %1928
  %1930 = load double, ptr %1929, align 8, !tbaa !18
  %1931 = getelementptr inbounds i8, ptr %1821, i64 %1928
  %1932 = load i8, ptr %1931, align 1, !tbaa !11
  %1933 = fpext float %1853 to double
  %1934 = sitofp i8 %1932 to double
  %1935 = fmul fast double %1930, %1934
  %1936 = fadd fast double %1935, %1933
  %1937 = fptrunc double %1936 to float
  store float %1937, ptr %1823, align 4, !tbaa !162
  %1938 = fadd fast double %1930, %1855
  %1939 = add nuw nsw i32 %1854, 1
  br i1 %1846, label %1940, label %1987

1940:                                             ; preds = %1926
  %1941 = load i32, ptr %4, align 4, !tbaa !5
  %1942 = load i32, ptr %12, align 4, !tbaa !5
  %1943 = add nsw i32 %1942, -1
  %1944 = icmp slt i32 %1941, %1943
  br i1 %1944, label %1964, label %1945

1945:                                             ; preds = %1940
  %1946 = icmp eq i32 %1941, %1943
  br i1 %1946, label %1947, label %1980

1947:                                             ; preds = %1945
  store i32 0, ptr %4, align 4, !tbaa !5
  %1948 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1948, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %1987, label %1949

1949:                                             ; preds = %1947, %1974
  %1950 = phi i64 [ %1978, %1974 ], [ 1, %1947 ]
  %1951 = getelementptr inbounds i32, ptr %4, i64 %1950
  %1952 = load i32, ptr %1951, align 4, !tbaa !5
  %1953 = getelementptr inbounds i32, ptr %12, i64 %1950
  %1954 = load i32, ptr %1953, align 4, !tbaa !5
  %1955 = add nsw i32 %1954, -1
  %1956 = icmp slt i32 %1952, %1955
  br i1 %1956, label %1957, label %1972

1957:                                             ; preds = %1949
  br i1 %1944, label %1964, label %1958

1958:                                             ; preds = %1957
  %1959 = getelementptr inbounds i32, ptr %7, i64 %1950
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1950
  %1962 = load i32, ptr %1961, align 4, !tbaa !5
  %1963 = add nsw i32 %1962, %1960
  store i32 %1963, ptr %1961, align 4, !tbaa !5
  br label %1982

1964:                                             ; preds = %1940, %1957
  %1965 = phi i32 [ %1952, %1957 ], [ %1941, %1940 ]
  %1966 = phi ptr [ %1951, %1957 ], [ %4, %1940 ]
  %1967 = phi i64 [ %1950, %1957 ], [ 0, %1940 ]
  %1968 = add nsw i32 %1965, 1
  store i32 %1968, ptr %1966, align 4, !tbaa !5
  %1969 = getelementptr inbounds i32, ptr %7, i64 %1967
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %6, i64 %1967
  br label %1982

1972:                                             ; preds = %1949
  %1973 = icmp eq i32 %1952, %1955
  br i1 %1973, label %1974, label %1980

1974:                                             ; preds = %1972
  store i32 0, ptr %1951, align 4, !tbaa !5
  %1975 = getelementptr inbounds i32, ptr %8, i64 %1950
  %1976 = load i32, ptr %1975, align 4, !tbaa !5
  %1977 = getelementptr inbounds i32, ptr %6, i64 %1950
  store i32 %1976, ptr %1977, align 4, !tbaa !5
  %1978 = add nuw nsw i64 %1950, 1
  %1979 = icmp eq i64 %1978, %1849
  br i1 %1979, label %1987, label %1949, !llvm.loop !447

1980:                                             ; preds = %1945, %1972
  %1981 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

1982:                                             ; preds = %1958, %1964
  %1983 = phi ptr [ %1971, %1964 ], [ %1951, %1958 ]
  %1984 = phi i32 [ %1970, %1964 ], [ 1, %1958 ]
  %1985 = load i32, ptr %1983, align 4, !tbaa !5
  %1986 = add nsw i32 %1985, %1984
  store i32 %1986, ptr %1983, align 4, !tbaa !5
  br label %1987

1987:                                             ; preds = %1974, %1982, %1947, %1926
  %1988 = icmp eq i32 %1939, %5
  br i1 %1988, label %3021, label %1852, !llvm.loop !448

1989:                                             ; preds = %1835, %2126
  %1990 = phi float [ 0.000000e+00, %1835 ], [ %2074, %2126 ]
  %1991 = phi i32 [ 0, %1835 ], [ %2075, %2126 ]
  %1992 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1836, label %1993, label %2062

1993:                                             ; preds = %1989, %2052
  %1994 = phi i32 [ %2061, %2052 ], [ 0, %1989 ]
  %1995 = phi i64 [ %2003, %2052 ], [ %1840, %1989 ]
  %1996 = phi i64 [ %2060, %2052 ], [ %1839, %1989 ]
  %1997 = phi i32 [ %2058, %2052 ], [ %1992, %1989 ]
  %1998 = sub i32 %1838, %1994
  %1999 = tail call i32 @llvm.smin.i32(i32 %1998, i32 0)
  %2000 = sub i32 %1998, %1999
  %2001 = zext i32 %2000 to i64
  %2002 = add nuw nsw i64 %2001, 1
  %2003 = add nsw i64 %1995, -1
  %2004 = icmp ult i32 %2000, 31
  br i1 %2004, label %2040, label %2005

2005:                                             ; preds = %1993
  %2006 = and i64 %2002, 8589934560
  %2007 = sub i64 %1996, %2006
  br label %2008

2008:                                             ; preds = %2008, %2005
  %2009 = phi i64 [ 0, %2005 ], [ %2032, %2008 ]
  %2010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2005 ], [ %2028, %2008 ]
  %2011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2005 ], [ %2029, %2008 ]
  %2012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2005 ], [ %2030, %2008 ]
  %2013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2005 ], [ %2031, %2008 ]
  %2014 = sub i64 %1996, %2009
  %2015 = getelementptr inbounds i32, ptr %11, i64 %2014
  %2016 = getelementptr inbounds i32, ptr %2015, i64 -7
  %2017 = load <8 x i32>, ptr %2016, align 4, !tbaa !5
  %2018 = shufflevector <8 x i32> %2017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2019 = getelementptr inbounds i32, ptr %2015, i64 -15
  %2020 = load <8 x i32>, ptr %2019, align 4, !tbaa !5
  %2021 = shufflevector <8 x i32> %2020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2022 = getelementptr inbounds i32, ptr %2015, i64 -23
  %2023 = load <8 x i32>, ptr %2022, align 4, !tbaa !5
  %2024 = shufflevector <8 x i32> %2023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2025 = getelementptr inbounds i32, ptr %2015, i64 -31
  %2026 = load <8 x i32>, ptr %2025, align 4, !tbaa !5
  %2027 = shufflevector <8 x i32> %2026, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2028 = mul <8 x i32> %2018, %2010
  %2029 = mul <8 x i32> %2021, %2011
  %2030 = mul <8 x i32> %2024, %2012
  %2031 = mul <8 x i32> %2027, %2013
  %2032 = add nuw i64 %2009, 32
  %2033 = icmp eq i64 %2032, %2006
  br i1 %2033, label %2034, label %2008, !llvm.loop !449

2034:                                             ; preds = %2008
  %2035 = mul <8 x i32> %2029, %2028
  %2036 = mul <8 x i32> %2030, %2035
  %2037 = mul <8 x i32> %2031, %2036
  %2038 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2037)
  %2039 = icmp eq i64 %2002, %2006
  br i1 %2039, label %2052, label %2040

2040:                                             ; preds = %1993, %2034
  %2041 = phi i64 [ %1996, %1993 ], [ %2007, %2034 ]
  %2042 = phi i32 [ 1, %1993 ], [ %2038, %2034 ]
  br label %2043

2043:                                             ; preds = %2040, %2043
  %2044 = phi i64 [ %2049, %2043 ], [ %2041, %2040 ]
  %2045 = phi i32 [ %2048, %2043 ], [ %2042, %2040 ]
  %2046 = getelementptr inbounds i32, ptr %11, i64 %2044
  %2047 = load i32, ptr %2046, align 4, !tbaa !5
  %2048 = mul nsw i32 %2047, %2045
  %2049 = add nsw i64 %2044, -1
  %2050 = trunc i64 %2044 to i32
  %2051 = icmp sgt i32 %2050, 0
  br i1 %2051, label %2043, label %2052, !llvm.loop !450

2052:                                             ; preds = %2043, %2034
  %2053 = phi i32 [ %2038, %2034 ], [ %2048, %2043 ]
  %2054 = and i64 %2003, 4294967295
  %2055 = getelementptr inbounds i32, ptr %6, i64 %2054
  %2056 = load i32, ptr %2055, align 4, !tbaa !5
  %2057 = mul nsw i32 %2056, %2053
  %2058 = add nsw i32 %2057, %1997
  %2059 = icmp sgt i64 %1995, 2
  %2060 = add nsw i64 %1996, -1
  %2061 = add i32 %1994, 1
  br i1 %2059, label %1993, label %2062, !llvm.loop !451

2062:                                             ; preds = %2052, %1989
  %2063 = phi i32 [ %1992, %1989 ], [ %2058, %2052 ]
  %2064 = icmp slt i32 %2063, %5
  br i1 %2064, label %2067, label %2065

2065:                                             ; preds = %2062
  %2066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

2067:                                             ; preds = %2062
  %2068 = sext i32 %2063 to i64
  %2069 = getelementptr inbounds i8, ptr %1821, i64 %2068
  %2070 = load i8, ptr %2069, align 1, !tbaa !11
  %2071 = fpext float %1990 to double
  %2072 = sitofp i8 %2070 to double
  %2073 = fadd fast double %2071, %2072
  %2074 = fptrunc double %2073 to float
  store float %2074, ptr %1823, align 4, !tbaa !162
  %2075 = add nuw nsw i32 %1991, 1
  br i1 %1837, label %2076, label %2126

2076:                                             ; preds = %2067
  %2077 = load i32, ptr %4, align 4, !tbaa !5
  %2078 = load i32, ptr %12, align 4, !tbaa !5
  %2079 = add nsw i32 %2078, -1
  %2080 = icmp slt i32 %2077, %2079
  br i1 %2080, label %2103, label %2081

2081:                                             ; preds = %2076
  %2082 = icmp eq i32 %2077, %2079
  br i1 %2082, label %2083, label %2119

2083:                                             ; preds = %2081
  store i32 0, ptr %4, align 4, !tbaa !5
  %2084 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2084, ptr %6, align 4, !tbaa !5
  br i1 %1842, label %2126, label %2085

2085:                                             ; preds = %2083, %2113
  %2086 = phi i64 [ %2117, %2113 ], [ 1, %2083 ]
  %2087 = getelementptr inbounds i32, ptr %4, i64 %2086
  %2088 = load i32, ptr %2087, align 4, !tbaa !5
  %2089 = getelementptr inbounds i32, ptr %12, i64 %2086
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = add nsw i32 %2090, -1
  %2092 = icmp slt i32 %2088, %2091
  br i1 %2092, label %2093, label %2111

2093:                                             ; preds = %2085
  br i1 %2080, label %2103, label %2094

2094:                                             ; preds = %2093
  %2095 = shl i64 %2086, 32
  %2096 = add i64 %2095, -4294967296
  %2097 = ashr exact i64 %2096, 32
  %2098 = getelementptr inbounds i32, ptr %7, i64 %2097
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = getelementptr inbounds i32, ptr %6, i64 %2086
  %2101 = load i32, ptr %2100, align 4, !tbaa !5
  %2102 = add nsw i32 %2101, %2099
  store i32 %2102, ptr %2100, align 4, !tbaa !5
  br label %2121

2103:                                             ; preds = %2076, %2093
  %2104 = phi i32 [ %2088, %2093 ], [ %2077, %2076 ]
  %2105 = phi ptr [ %2087, %2093 ], [ %4, %2076 ]
  %2106 = phi i64 [ %2086, %2093 ], [ 0, %2076 ]
  %2107 = add nsw i32 %2104, 1
  store i32 %2107, ptr %2105, align 4, !tbaa !5
  %2108 = getelementptr inbounds i32, ptr %7, i64 %2106
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = getelementptr inbounds i32, ptr %6, i64 %2106
  br label %2121

2111:                                             ; preds = %2085
  %2112 = icmp eq i32 %2088, %2091
  br i1 %2112, label %2113, label %2119

2113:                                             ; preds = %2111
  store i32 0, ptr %2087, align 4, !tbaa !5
  %2114 = getelementptr inbounds i32, ptr %8, i64 %2086
  %2115 = load i32, ptr %2114, align 4, !tbaa !5
  %2116 = getelementptr inbounds i32, ptr %6, i64 %2086
  store i32 %2115, ptr %2116, align 4, !tbaa !5
  %2117 = add nuw nsw i64 %2086, 1
  %2118 = icmp eq i64 %2117, %1840
  br i1 %2118, label %2126, label %2085, !llvm.loop !452

2119:                                             ; preds = %2081, %2111
  %2120 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2121:                                             ; preds = %2094, %2103
  %2122 = phi ptr [ %2110, %2103 ], [ %2087, %2094 ]
  %2123 = phi i32 [ %2109, %2103 ], [ 1, %2094 ]
  %2124 = load i32, ptr %2122, align 4, !tbaa !5
  %2125 = add nsw i32 %2124, %2123
  store i32 %2125, ptr %2122, align 4, !tbaa !5
  br label %2126

2126:                                             ; preds = %2113, %2121, %2083, %2067
  %2127 = icmp eq i32 %2075, %5
  br i1 %2127, label %3021, label %1989, !llvm.loop !453

2128:                                             ; preds = %1828
  %2129 = getelementptr inbounds i32, ptr %3, i64 %19
  %2130 = load i32, ptr %2129, align 4, !tbaa !5
  %2131 = icmp eq i32 %2130, 0
  %2132 = icmp sgt i32 %5, 0
  br i1 %2131, label %2142, label %2133

2133:                                             ; preds = %2128
  br i1 %2132, label %2134, label %3021

2134:                                             ; preds = %2133
  %2135 = icmp sgt i32 %13, 1
  %2136 = icmp sgt i32 %13, 0
  %2137 = add i32 %13, -2
  %2138 = zext i32 %2137 to i64
  %2139 = zext i32 %13 to i64
  %2140 = add nuw i32 %5, 1
  %2141 = icmp eq i32 %13, 1
  br label %2283

2142:                                             ; preds = %2128
  br i1 %2132, label %2143, label %3021

2143:                                             ; preds = %2142
  %2144 = icmp sgt i32 %13, 1
  %2145 = icmp sgt i32 %13, 0
  %2146 = add i32 %13, -2
  %2147 = zext i32 %2146 to i64
  %2148 = zext i32 %13 to i64
  %2149 = add nuw i32 %5, 1
  %2150 = icmp eq i32 %13, 1
  br label %2151

2151:                                             ; preds = %2143, %2281
  %2152 = phi float [ 0.000000e+00, %2143 ], [ %2231, %2281 ]
  %2153 = phi i32 [ 0, %2143 ], [ %2233, %2281 ]
  %2154 = phi double [ 0.000000e+00, %2143 ], [ %2232, %2281 ]
  %2155 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2144, label %2156, label %2225

2156:                                             ; preds = %2151, %2215
  %2157 = phi i32 [ %2224, %2215 ], [ 0, %2151 ]
  %2158 = phi i64 [ %2166, %2215 ], [ %2148, %2151 ]
  %2159 = phi i64 [ %2223, %2215 ], [ %2147, %2151 ]
  %2160 = phi i32 [ %2221, %2215 ], [ %2155, %2151 ]
  %2161 = sub i32 %2146, %2157
  %2162 = tail call i32 @llvm.smin.i32(i32 %2161, i32 0)
  %2163 = sub i32 %2161, %2162
  %2164 = zext i32 %2163 to i64
  %2165 = add nuw nsw i64 %2164, 1
  %2166 = add nsw i64 %2158, -1
  %2167 = icmp ult i32 %2163, 31
  br i1 %2167, label %2203, label %2168

2168:                                             ; preds = %2156
  %2169 = and i64 %2165, 8589934560
  %2170 = sub i64 %2159, %2169
  br label %2171

2171:                                             ; preds = %2171, %2168
  %2172 = phi i64 [ 0, %2168 ], [ %2195, %2171 ]
  %2173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2168 ], [ %2191, %2171 ]
  %2174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2168 ], [ %2192, %2171 ]
  %2175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2168 ], [ %2193, %2171 ]
  %2176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2168 ], [ %2194, %2171 ]
  %2177 = sub i64 %2159, %2172
  %2178 = getelementptr inbounds i32, ptr %9, i64 %2177
  %2179 = getelementptr inbounds i32, ptr %2178, i64 -7
  %2180 = load <8 x i32>, ptr %2179, align 4, !tbaa !5
  %2181 = shufflevector <8 x i32> %2180, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2182 = getelementptr inbounds i32, ptr %2178, i64 -15
  %2183 = load <8 x i32>, ptr %2182, align 4, !tbaa !5
  %2184 = shufflevector <8 x i32> %2183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2185 = getelementptr inbounds i32, ptr %2178, i64 -23
  %2186 = load <8 x i32>, ptr %2185, align 4, !tbaa !5
  %2187 = shufflevector <8 x i32> %2186, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2188 = getelementptr inbounds i32, ptr %2178, i64 -31
  %2189 = load <8 x i32>, ptr %2188, align 4, !tbaa !5
  %2190 = shufflevector <8 x i32> %2189, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2191 = mul <8 x i32> %2181, %2173
  %2192 = mul <8 x i32> %2184, %2174
  %2193 = mul <8 x i32> %2187, %2175
  %2194 = mul <8 x i32> %2190, %2176
  %2195 = add nuw i64 %2172, 32
  %2196 = icmp eq i64 %2195, %2169
  br i1 %2196, label %2197, label %2171, !llvm.loop !454

2197:                                             ; preds = %2171
  %2198 = mul <8 x i32> %2192, %2191
  %2199 = mul <8 x i32> %2193, %2198
  %2200 = mul <8 x i32> %2194, %2199
  %2201 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2200)
  %2202 = icmp eq i64 %2165, %2169
  br i1 %2202, label %2215, label %2203

2203:                                             ; preds = %2156, %2197
  %2204 = phi i64 [ %2159, %2156 ], [ %2170, %2197 ]
  %2205 = phi i32 [ 1, %2156 ], [ %2201, %2197 ]
  br label %2206

2206:                                             ; preds = %2203, %2206
  %2207 = phi i64 [ %2212, %2206 ], [ %2204, %2203 ]
  %2208 = phi i32 [ %2211, %2206 ], [ %2205, %2203 ]
  %2209 = getelementptr inbounds i32, ptr %9, i64 %2207
  %2210 = load i32, ptr %2209, align 4, !tbaa !5
  %2211 = mul nsw i32 %2210, %2208
  %2212 = add nsw i64 %2207, -1
  %2213 = trunc i64 %2207 to i32
  %2214 = icmp sgt i32 %2213, 0
  br i1 %2214, label %2206, label %2215, !llvm.loop !455

2215:                                             ; preds = %2206, %2197
  %2216 = phi i32 [ %2201, %2197 ], [ %2211, %2206 ]
  %2217 = and i64 %2166, 4294967295
  %2218 = getelementptr inbounds i32, ptr %6, i64 %2217
  %2219 = load i32, ptr %2218, align 4, !tbaa !5
  %2220 = mul nsw i32 %2219, %2216
  %2221 = add nsw i32 %2220, %2160
  %2222 = icmp sgt i64 %2158, 2
  %2223 = add nsw i64 %2159, -1
  %2224 = add i32 %2157, 1
  br i1 %2222, label %2156, label %2225, !llvm.loop !456

2225:                                             ; preds = %2215, %2151
  %2226 = phi i32 [ %2155, %2151 ], [ %2221, %2215 ]
  %2227 = sext i32 %2226 to i64
  %2228 = getelementptr inbounds i8, ptr %1821, i64 %2227
  %2229 = load i8, ptr %2228, align 1, !tbaa !11
  %2230 = sitofp i8 %2229 to float
  %2231 = fadd fast float %2152, %2230
  store float %2231, ptr %1823, align 4, !tbaa !162
  %2232 = fadd fast double %2154, 1.000000e+00
  %2233 = add nuw nsw i32 %2153, 1
  br i1 %2145, label %2234, label %2281

2234:                                             ; preds = %2225
  %2235 = load i32, ptr %4, align 4, !tbaa !5
  %2236 = load i32, ptr %12, align 4, !tbaa !5
  %2237 = add nsw i32 %2236, -1
  %2238 = icmp slt i32 %2235, %2237
  br i1 %2238, label %2258, label %2239

2239:                                             ; preds = %2234
  %2240 = icmp eq i32 %2235, %2237
  br i1 %2240, label %2241, label %2274

2241:                                             ; preds = %2239
  store i32 0, ptr %4, align 4, !tbaa !5
  %2242 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2242, ptr %6, align 4, !tbaa !5
  br i1 %2150, label %2281, label %2243

2243:                                             ; preds = %2241, %2268
  %2244 = phi i64 [ %2272, %2268 ], [ 1, %2241 ]
  %2245 = getelementptr inbounds i32, ptr %4, i64 %2244
  %2246 = load i32, ptr %2245, align 4, !tbaa !5
  %2247 = getelementptr inbounds i32, ptr %12, i64 %2244
  %2248 = load i32, ptr %2247, align 4, !tbaa !5
  %2249 = add nsw i32 %2248, -1
  %2250 = icmp slt i32 %2246, %2249
  br i1 %2250, label %2251, label %2266

2251:                                             ; preds = %2243
  br i1 %2238, label %2258, label %2252

2252:                                             ; preds = %2251
  %2253 = getelementptr inbounds i32, ptr %7, i64 %2244
  %2254 = load i32, ptr %2253, align 4, !tbaa !5
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2244
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = add nsw i32 %2256, %2254
  store i32 %2257, ptr %2255, align 4, !tbaa !5
  br label %2276

2258:                                             ; preds = %2234, %2251
  %2259 = phi i32 [ %2246, %2251 ], [ %2235, %2234 ]
  %2260 = phi ptr [ %2245, %2251 ], [ %4, %2234 ]
  %2261 = phi i64 [ %2244, %2251 ], [ 0, %2234 ]
  %2262 = add nsw i32 %2259, 1
  store i32 %2262, ptr %2260, align 4, !tbaa !5
  %2263 = getelementptr inbounds i32, ptr %7, i64 %2261
  %2264 = load i32, ptr %2263, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %6, i64 %2261
  br label %2276

2266:                                             ; preds = %2243
  %2267 = icmp eq i32 %2246, %2249
  br i1 %2267, label %2268, label %2274

2268:                                             ; preds = %2266
  store i32 0, ptr %2245, align 4, !tbaa !5
  %2269 = getelementptr inbounds i32, ptr %8, i64 %2244
  %2270 = load i32, ptr %2269, align 4, !tbaa !5
  %2271 = getelementptr inbounds i32, ptr %6, i64 %2244
  store i32 %2270, ptr %2271, align 4, !tbaa !5
  %2272 = add nuw nsw i64 %2244, 1
  %2273 = icmp eq i64 %2272, %2148
  br i1 %2273, label %2281, label %2243, !llvm.loop !457

2274:                                             ; preds = %2239, %2266
  %2275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2276:                                             ; preds = %2252, %2258
  %2277 = phi ptr [ %2265, %2258 ], [ %2245, %2252 ]
  %2278 = phi i32 [ %2264, %2258 ], [ 1, %2252 ]
  %2279 = load i32, ptr %2277, align 4, !tbaa !5
  %2280 = add nsw i32 %2279, %2278
  store i32 %2280, ptr %2277, align 4, !tbaa !5
  br label %2281

2281:                                             ; preds = %2268, %2276, %2241, %2225
  %2282 = icmp eq i32 %2233, %5
  br i1 %2282, label %3021, label %2151, !llvm.loop !458

2283:                                             ; preds = %2134, %2418
  %2284 = phi float [ 0.000000e+00, %2134 ], [ %2366, %2418 ]
  %2285 = phi i32 [ 0, %2134 ], [ %2367, %2418 ]
  %2286 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2135, label %2287, label %2356

2287:                                             ; preds = %2283, %2346
  %2288 = phi i32 [ %2355, %2346 ], [ 0, %2283 ]
  %2289 = phi i64 [ %2297, %2346 ], [ %2139, %2283 ]
  %2290 = phi i64 [ %2354, %2346 ], [ %2138, %2283 ]
  %2291 = phi i32 [ %2352, %2346 ], [ %2286, %2283 ]
  %2292 = sub i32 %2137, %2288
  %2293 = tail call i32 @llvm.smin.i32(i32 %2292, i32 0)
  %2294 = sub i32 %2292, %2293
  %2295 = zext i32 %2294 to i64
  %2296 = add nuw nsw i64 %2295, 1
  %2297 = add nsw i64 %2289, -1
  %2298 = icmp ult i32 %2294, 31
  br i1 %2298, label %2334, label %2299

2299:                                             ; preds = %2287
  %2300 = and i64 %2296, 8589934560
  %2301 = sub i64 %2290, %2300
  br label %2302

2302:                                             ; preds = %2302, %2299
  %2303 = phi i64 [ 0, %2299 ], [ %2326, %2302 ]
  %2304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2299 ], [ %2322, %2302 ]
  %2305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2299 ], [ %2323, %2302 ]
  %2306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2299 ], [ %2324, %2302 ]
  %2307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2299 ], [ %2325, %2302 ]
  %2308 = sub i64 %2290, %2303
  %2309 = getelementptr inbounds i32, ptr %11, i64 %2308
  %2310 = getelementptr inbounds i32, ptr %2309, i64 -7
  %2311 = load <8 x i32>, ptr %2310, align 4, !tbaa !5
  %2312 = shufflevector <8 x i32> %2311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2313 = getelementptr inbounds i32, ptr %2309, i64 -15
  %2314 = load <8 x i32>, ptr %2313, align 4, !tbaa !5
  %2315 = shufflevector <8 x i32> %2314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2316 = getelementptr inbounds i32, ptr %2309, i64 -23
  %2317 = load <8 x i32>, ptr %2316, align 4, !tbaa !5
  %2318 = shufflevector <8 x i32> %2317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2319 = getelementptr inbounds i32, ptr %2309, i64 -31
  %2320 = load <8 x i32>, ptr %2319, align 4, !tbaa !5
  %2321 = shufflevector <8 x i32> %2320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2322 = mul <8 x i32> %2312, %2304
  %2323 = mul <8 x i32> %2315, %2305
  %2324 = mul <8 x i32> %2318, %2306
  %2325 = mul <8 x i32> %2321, %2307
  %2326 = add nuw i64 %2303, 32
  %2327 = icmp eq i64 %2326, %2300
  br i1 %2327, label %2328, label %2302, !llvm.loop !459

2328:                                             ; preds = %2302
  %2329 = mul <8 x i32> %2323, %2322
  %2330 = mul <8 x i32> %2324, %2329
  %2331 = mul <8 x i32> %2325, %2330
  %2332 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2331)
  %2333 = icmp eq i64 %2296, %2300
  br i1 %2333, label %2346, label %2334

2334:                                             ; preds = %2287, %2328
  %2335 = phi i64 [ %2290, %2287 ], [ %2301, %2328 ]
  %2336 = phi i32 [ 1, %2287 ], [ %2332, %2328 ]
  br label %2337

2337:                                             ; preds = %2334, %2337
  %2338 = phi i64 [ %2343, %2337 ], [ %2335, %2334 ]
  %2339 = phi i32 [ %2342, %2337 ], [ %2336, %2334 ]
  %2340 = getelementptr inbounds i32, ptr %11, i64 %2338
  %2341 = load i32, ptr %2340, align 4, !tbaa !5
  %2342 = mul nsw i32 %2341, %2339
  %2343 = add nsw i64 %2338, -1
  %2344 = trunc i64 %2338 to i32
  %2345 = icmp sgt i32 %2344, 0
  br i1 %2345, label %2337, label %2346, !llvm.loop !460

2346:                                             ; preds = %2337, %2328
  %2347 = phi i32 [ %2332, %2328 ], [ %2342, %2337 ]
  %2348 = and i64 %2297, 4294967295
  %2349 = getelementptr inbounds i32, ptr %6, i64 %2348
  %2350 = load i32, ptr %2349, align 4, !tbaa !5
  %2351 = mul nsw i32 %2350, %2347
  %2352 = add nsw i32 %2351, %2291
  %2353 = icmp sgt i64 %2289, 2
  %2354 = add nsw i64 %2290, -1
  %2355 = add i32 %2288, 1
  br i1 %2353, label %2287, label %2356, !llvm.loop !461

2356:                                             ; preds = %2346, %2283
  %2357 = phi i32 [ %2286, %2283 ], [ %2352, %2346 ]
  %2358 = icmp slt i32 %2357, %5
  br i1 %2358, label %2361, label %2359

2359:                                             ; preds = %2356
  %2360 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

2361:                                             ; preds = %2356
  %2362 = sext i32 %2357 to i64
  %2363 = getelementptr inbounds i8, ptr %1821, i64 %2362
  %2364 = load i8, ptr %2363, align 1, !tbaa !11
  %2365 = sitofp i8 %2364 to float
  %2366 = fadd fast float %2284, %2365
  store float %2366, ptr %1823, align 4, !tbaa !162
  %2367 = add nuw nsw i32 %2285, 1
  br i1 %2136, label %2368, label %2418

2368:                                             ; preds = %2361
  %2369 = load i32, ptr %4, align 4, !tbaa !5
  %2370 = load i32, ptr %12, align 4, !tbaa !5
  %2371 = add nsw i32 %2370, -1
  %2372 = icmp slt i32 %2369, %2371
  br i1 %2372, label %2395, label %2373

2373:                                             ; preds = %2368
  %2374 = icmp eq i32 %2369, %2371
  br i1 %2374, label %2375, label %2411

2375:                                             ; preds = %2373
  store i32 0, ptr %4, align 4, !tbaa !5
  %2376 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2376, ptr %6, align 4, !tbaa !5
  br i1 %2141, label %2418, label %2377

2377:                                             ; preds = %2375, %2405
  %2378 = phi i64 [ %2409, %2405 ], [ 1, %2375 ]
  %2379 = getelementptr inbounds i32, ptr %4, i64 %2378
  %2380 = load i32, ptr %2379, align 4, !tbaa !5
  %2381 = getelementptr inbounds i32, ptr %12, i64 %2378
  %2382 = load i32, ptr %2381, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, -1
  %2384 = icmp slt i32 %2380, %2383
  br i1 %2384, label %2385, label %2403

2385:                                             ; preds = %2377
  br i1 %2372, label %2395, label %2386

2386:                                             ; preds = %2385
  %2387 = shl i64 %2378, 32
  %2388 = add i64 %2387, -4294967296
  %2389 = ashr exact i64 %2388, 32
  %2390 = getelementptr inbounds i32, ptr %7, i64 %2389
  %2391 = load i32, ptr %2390, align 4, !tbaa !5
  %2392 = getelementptr inbounds i32, ptr %6, i64 %2378
  %2393 = load i32, ptr %2392, align 4, !tbaa !5
  %2394 = add nsw i32 %2393, %2391
  store i32 %2394, ptr %2392, align 4, !tbaa !5
  br label %2413

2395:                                             ; preds = %2368, %2385
  %2396 = phi i32 [ %2380, %2385 ], [ %2369, %2368 ]
  %2397 = phi ptr [ %2379, %2385 ], [ %4, %2368 ]
  %2398 = phi i64 [ %2378, %2385 ], [ 0, %2368 ]
  %2399 = add nsw i32 %2396, 1
  store i32 %2399, ptr %2397, align 4, !tbaa !5
  %2400 = getelementptr inbounds i32, ptr %7, i64 %2398
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %6, i64 %2398
  br label %2413

2403:                                             ; preds = %2377
  %2404 = icmp eq i32 %2380, %2383
  br i1 %2404, label %2405, label %2411

2405:                                             ; preds = %2403
  store i32 0, ptr %2379, align 4, !tbaa !5
  %2406 = getelementptr inbounds i32, ptr %8, i64 %2378
  %2407 = load i32, ptr %2406, align 4, !tbaa !5
  %2408 = getelementptr inbounds i32, ptr %6, i64 %2378
  store i32 %2407, ptr %2408, align 4, !tbaa !5
  %2409 = add nuw nsw i64 %2378, 1
  %2410 = icmp eq i64 %2409, %2139
  br i1 %2410, label %2418, label %2377, !llvm.loop !462

2411:                                             ; preds = %2373, %2403
  %2412 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2413:                                             ; preds = %2386, %2395
  %2414 = phi ptr [ %2402, %2395 ], [ %2379, %2386 ]
  %2415 = phi i32 [ %2401, %2395 ], [ 1, %2386 ]
  %2416 = load i32, ptr %2414, align 4, !tbaa !5
  %2417 = add nsw i32 %2416, %2415
  store i32 %2417, ptr %2414, align 4, !tbaa !5
  br label %2418

2418:                                             ; preds = %2405, %2413, %2375, %2361
  %2419 = icmp eq i32 %2367, %5
  br i1 %2419, label %3021, label %2283, !llvm.loop !463

2420:                                             ; preds = %1828
  %2421 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3021

2422:                                             ; preds = %18
  %2423 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2424 = load ptr, ptr %2423, align 8, !tbaa !9
  %2425 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2426 = load ptr, ptr %2425, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2426, align 8, !tbaa !18
  %2427 = icmp eq i32 %13, 0
  br i1 %2427, label %2428, label %2431

2428:                                             ; preds = %2422
  %2429 = load i8, ptr %2424, align 1, !tbaa !11
  %2430 = sitofp i8 %2429 to double
  store double %2430, ptr %2426, align 8, !tbaa !18
  br label %3021

2431:                                             ; preds = %2422
  switch i32 %1, label %3019 [
    i32 1, label %2432
    i32 0, label %2727
  ]

2432:                                             ; preds = %2431
  %2433 = getelementptr inbounds i32, ptr %3, i64 %19
  %2434 = load i32, ptr %2433, align 4, !tbaa !5
  %2435 = icmp eq i32 %2434, 0
  %2436 = icmp sgt i32 %5, 0
  br i1 %2435, label %2446, label %2437

2437:                                             ; preds = %2432
  br i1 %2436, label %2438, label %3021

2438:                                             ; preds = %2437
  %2439 = icmp sgt i32 %13, 1
  %2440 = icmp sgt i32 %13, 0
  %2441 = add i32 %13, -2
  %2442 = zext i32 %2441 to i64
  %2443 = zext i32 %13 to i64
  %2444 = add nuw i32 %5, 1
  %2445 = icmp eq i32 %13, 1
  br label %2590

2446:                                             ; preds = %2432
  br i1 %2436, label %2447, label %3021

2447:                                             ; preds = %2446
  %2448 = icmp sgt i32 %13, 1
  %2449 = icmp sgt i32 %13, 0
  %2450 = add i32 %13, -2
  %2451 = zext i32 %2450 to i64
  %2452 = zext i32 %13 to i64
  %2453 = add nuw i32 %5, 1
  %2454 = icmp eq i32 %13, 1
  br label %2455

2455:                                             ; preds = %2447, %2588
  %2456 = phi double [ 0.000000e+00, %2447 ], [ %2538, %2588 ]
  %2457 = phi i32 [ 0, %2447 ], [ %2540, %2588 ]
  %2458 = phi double [ 0.000000e+00, %2447 ], [ %2539, %2588 ]
  %2459 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2448, label %2460, label %2529

2460:                                             ; preds = %2455, %2519
  %2461 = phi i32 [ %2528, %2519 ], [ 0, %2455 ]
  %2462 = phi i64 [ %2470, %2519 ], [ %2452, %2455 ]
  %2463 = phi i64 [ %2527, %2519 ], [ %2451, %2455 ]
  %2464 = phi i32 [ %2525, %2519 ], [ %2459, %2455 ]
  %2465 = sub i32 %2450, %2461
  %2466 = tail call i32 @llvm.smin.i32(i32 %2465, i32 0)
  %2467 = sub i32 %2465, %2466
  %2468 = zext i32 %2467 to i64
  %2469 = add nuw nsw i64 %2468, 1
  %2470 = add nsw i64 %2462, -1
  %2471 = icmp ult i32 %2467, 31
  br i1 %2471, label %2507, label %2472

2472:                                             ; preds = %2460
  %2473 = and i64 %2469, 8589934560
  %2474 = sub i64 %2463, %2473
  br label %2475

2475:                                             ; preds = %2475, %2472
  %2476 = phi i64 [ 0, %2472 ], [ %2499, %2475 ]
  %2477 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2472 ], [ %2495, %2475 ]
  %2478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2472 ], [ %2496, %2475 ]
  %2479 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2472 ], [ %2497, %2475 ]
  %2480 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2472 ], [ %2498, %2475 ]
  %2481 = sub i64 %2463, %2476
  %2482 = getelementptr inbounds i32, ptr %9, i64 %2481
  %2483 = getelementptr inbounds i32, ptr %2482, i64 -7
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = getelementptr inbounds i32, ptr %2482, i64 -15
  %2487 = load <8 x i32>, ptr %2486, align 4, !tbaa !5
  %2488 = shufflevector <8 x i32> %2487, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2489 = getelementptr inbounds i32, ptr %2482, i64 -23
  %2490 = load <8 x i32>, ptr %2489, align 4, !tbaa !5
  %2491 = shufflevector <8 x i32> %2490, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2492 = getelementptr inbounds i32, ptr %2482, i64 -31
  %2493 = load <8 x i32>, ptr %2492, align 4, !tbaa !5
  %2494 = shufflevector <8 x i32> %2493, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2495 = mul <8 x i32> %2485, %2477
  %2496 = mul <8 x i32> %2488, %2478
  %2497 = mul <8 x i32> %2491, %2479
  %2498 = mul <8 x i32> %2494, %2480
  %2499 = add nuw i64 %2476, 32
  %2500 = icmp eq i64 %2499, %2473
  br i1 %2500, label %2501, label %2475, !llvm.loop !464

2501:                                             ; preds = %2475
  %2502 = mul <8 x i32> %2496, %2495
  %2503 = mul <8 x i32> %2497, %2502
  %2504 = mul <8 x i32> %2498, %2503
  %2505 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2504)
  %2506 = icmp eq i64 %2469, %2473
  br i1 %2506, label %2519, label %2507

2507:                                             ; preds = %2460, %2501
  %2508 = phi i64 [ %2463, %2460 ], [ %2474, %2501 ]
  %2509 = phi i32 [ 1, %2460 ], [ %2505, %2501 ]
  br label %2510

2510:                                             ; preds = %2507, %2510
  %2511 = phi i64 [ %2516, %2510 ], [ %2508, %2507 ]
  %2512 = phi i32 [ %2515, %2510 ], [ %2509, %2507 ]
  %2513 = getelementptr inbounds i32, ptr %9, i64 %2511
  %2514 = load i32, ptr %2513, align 4, !tbaa !5
  %2515 = mul nsw i32 %2514, %2512
  %2516 = add nsw i64 %2511, -1
  %2517 = trunc i64 %2511 to i32
  %2518 = icmp sgt i32 %2517, 0
  br i1 %2518, label %2510, label %2519, !llvm.loop !465

2519:                                             ; preds = %2510, %2501
  %2520 = phi i32 [ %2505, %2501 ], [ %2515, %2510 ]
  %2521 = and i64 %2470, 4294967295
  %2522 = getelementptr inbounds i32, ptr %6, i64 %2521
  %2523 = load i32, ptr %2522, align 4, !tbaa !5
  %2524 = mul nsw i32 %2523, %2520
  %2525 = add nsw i32 %2524, %2464
  %2526 = icmp sgt i64 %2462, 2
  %2527 = add nsw i64 %2463, -1
  %2528 = add i32 %2461, 1
  br i1 %2526, label %2460, label %2529, !llvm.loop !466

2529:                                             ; preds = %2519, %2455
  %2530 = phi i32 [ %2459, %2455 ], [ %2525, %2519 ]
  %2531 = sext i32 %2530 to i64
  %2532 = getelementptr inbounds double, ptr %2, i64 %2531
  %2533 = load double, ptr %2532, align 8, !tbaa !18
  %2534 = getelementptr inbounds i8, ptr %2424, i64 %2531
  %2535 = load i8, ptr %2534, align 1, !tbaa !11
  %2536 = sitofp i8 %2535 to double
  %2537 = fmul fast double %2533, %2536
  %2538 = fadd fast double %2537, %2456
  store double %2538, ptr %2426, align 8, !tbaa !18
  %2539 = fadd fast double %2533, %2458
  %2540 = add nuw nsw i32 %2457, 1
  br i1 %2449, label %2541, label %2588

2541:                                             ; preds = %2529
  %2542 = load i32, ptr %4, align 4, !tbaa !5
  %2543 = load i32, ptr %12, align 4, !tbaa !5
  %2544 = add nsw i32 %2543, -1
  %2545 = icmp slt i32 %2542, %2544
  br i1 %2545, label %2565, label %2546

2546:                                             ; preds = %2541
  %2547 = icmp eq i32 %2542, %2544
  br i1 %2547, label %2548, label %2581

2548:                                             ; preds = %2546
  store i32 0, ptr %4, align 4, !tbaa !5
  %2549 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2549, ptr %6, align 4, !tbaa !5
  br i1 %2454, label %2588, label %2550

2550:                                             ; preds = %2548, %2575
  %2551 = phi i64 [ %2579, %2575 ], [ 1, %2548 ]
  %2552 = getelementptr inbounds i32, ptr %4, i64 %2551
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = getelementptr inbounds i32, ptr %12, i64 %2551
  %2555 = load i32, ptr %2554, align 4, !tbaa !5
  %2556 = add nsw i32 %2555, -1
  %2557 = icmp slt i32 %2553, %2556
  br i1 %2557, label %2558, label %2573

2558:                                             ; preds = %2550
  br i1 %2545, label %2565, label %2559

2559:                                             ; preds = %2558
  %2560 = getelementptr inbounds i32, ptr %7, i64 %2551
  %2561 = load i32, ptr %2560, align 4, !tbaa !5
  %2562 = getelementptr inbounds i32, ptr %6, i64 %2551
  %2563 = load i32, ptr %2562, align 4, !tbaa !5
  %2564 = add nsw i32 %2563, %2561
  store i32 %2564, ptr %2562, align 4, !tbaa !5
  br label %2583

2565:                                             ; preds = %2541, %2558
  %2566 = phi i32 [ %2553, %2558 ], [ %2542, %2541 ]
  %2567 = phi ptr [ %2552, %2558 ], [ %4, %2541 ]
  %2568 = phi i64 [ %2551, %2558 ], [ 0, %2541 ]
  %2569 = add nsw i32 %2566, 1
  store i32 %2569, ptr %2567, align 4, !tbaa !5
  %2570 = getelementptr inbounds i32, ptr %7, i64 %2568
  %2571 = load i32, ptr %2570, align 4, !tbaa !5
  %2572 = getelementptr inbounds i32, ptr %6, i64 %2568
  br label %2583

2573:                                             ; preds = %2550
  %2574 = icmp eq i32 %2553, %2556
  br i1 %2574, label %2575, label %2581

2575:                                             ; preds = %2573
  store i32 0, ptr %2552, align 4, !tbaa !5
  %2576 = getelementptr inbounds i32, ptr %8, i64 %2551
  %2577 = load i32, ptr %2576, align 4, !tbaa !5
  %2578 = getelementptr inbounds i32, ptr %6, i64 %2551
  store i32 %2577, ptr %2578, align 4, !tbaa !5
  %2579 = add nuw nsw i64 %2551, 1
  %2580 = icmp eq i64 %2579, %2452
  br i1 %2580, label %2588, label %2550, !llvm.loop !467

2581:                                             ; preds = %2546, %2573
  %2582 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2583:                                             ; preds = %2559, %2565
  %2584 = phi ptr [ %2572, %2565 ], [ %2552, %2559 ]
  %2585 = phi i32 [ %2571, %2565 ], [ 1, %2559 ]
  %2586 = load i32, ptr %2584, align 4, !tbaa !5
  %2587 = add nsw i32 %2586, %2585
  store i32 %2587, ptr %2584, align 4, !tbaa !5
  br label %2588

2588:                                             ; preds = %2575, %2583, %2548, %2529
  %2589 = icmp eq i32 %2540, %5
  br i1 %2589, label %3021, label %2455, !llvm.loop !468

2590:                                             ; preds = %2438, %2725
  %2591 = phi double [ 0.000000e+00, %2438 ], [ %2673, %2725 ]
  %2592 = phi i32 [ 0, %2438 ], [ %2674, %2725 ]
  %2593 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2439, label %2594, label %2663

2594:                                             ; preds = %2590, %2653
  %2595 = phi i32 [ %2662, %2653 ], [ 0, %2590 ]
  %2596 = phi i64 [ %2604, %2653 ], [ %2443, %2590 ]
  %2597 = phi i64 [ %2661, %2653 ], [ %2442, %2590 ]
  %2598 = phi i32 [ %2659, %2653 ], [ %2593, %2590 ]
  %2599 = sub i32 %2441, %2595
  %2600 = tail call i32 @llvm.smin.i32(i32 %2599, i32 0)
  %2601 = sub i32 %2599, %2600
  %2602 = zext i32 %2601 to i64
  %2603 = add nuw nsw i64 %2602, 1
  %2604 = add nsw i64 %2596, -1
  %2605 = icmp ult i32 %2601, 31
  br i1 %2605, label %2641, label %2606

2606:                                             ; preds = %2594
  %2607 = and i64 %2603, 8589934560
  %2608 = sub i64 %2597, %2607
  br label %2609

2609:                                             ; preds = %2609, %2606
  %2610 = phi i64 [ 0, %2606 ], [ %2633, %2609 ]
  %2611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2629, %2609 ]
  %2612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2630, %2609 ]
  %2613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2631, %2609 ]
  %2614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2606 ], [ %2632, %2609 ]
  %2615 = sub i64 %2597, %2610
  %2616 = getelementptr inbounds i32, ptr %11, i64 %2615
  %2617 = getelementptr inbounds i32, ptr %2616, i64 -7
  %2618 = load <8 x i32>, ptr %2617, align 4, !tbaa !5
  %2619 = shufflevector <8 x i32> %2618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2620 = getelementptr inbounds i32, ptr %2616, i64 -15
  %2621 = load <8 x i32>, ptr %2620, align 4, !tbaa !5
  %2622 = shufflevector <8 x i32> %2621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2623 = getelementptr inbounds i32, ptr %2616, i64 -23
  %2624 = load <8 x i32>, ptr %2623, align 4, !tbaa !5
  %2625 = shufflevector <8 x i32> %2624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2626 = getelementptr inbounds i32, ptr %2616, i64 -31
  %2627 = load <8 x i32>, ptr %2626, align 4, !tbaa !5
  %2628 = shufflevector <8 x i32> %2627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2629 = mul <8 x i32> %2619, %2611
  %2630 = mul <8 x i32> %2622, %2612
  %2631 = mul <8 x i32> %2625, %2613
  %2632 = mul <8 x i32> %2628, %2614
  %2633 = add nuw i64 %2610, 32
  %2634 = icmp eq i64 %2633, %2607
  br i1 %2634, label %2635, label %2609, !llvm.loop !469

2635:                                             ; preds = %2609
  %2636 = mul <8 x i32> %2630, %2629
  %2637 = mul <8 x i32> %2631, %2636
  %2638 = mul <8 x i32> %2632, %2637
  %2639 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2638)
  %2640 = icmp eq i64 %2603, %2607
  br i1 %2640, label %2653, label %2641

2641:                                             ; preds = %2594, %2635
  %2642 = phi i64 [ %2597, %2594 ], [ %2608, %2635 ]
  %2643 = phi i32 [ 1, %2594 ], [ %2639, %2635 ]
  br label %2644

2644:                                             ; preds = %2641, %2644
  %2645 = phi i64 [ %2650, %2644 ], [ %2642, %2641 ]
  %2646 = phi i32 [ %2649, %2644 ], [ %2643, %2641 ]
  %2647 = getelementptr inbounds i32, ptr %11, i64 %2645
  %2648 = load i32, ptr %2647, align 4, !tbaa !5
  %2649 = mul nsw i32 %2648, %2646
  %2650 = add nsw i64 %2645, -1
  %2651 = trunc i64 %2645 to i32
  %2652 = icmp sgt i32 %2651, 0
  br i1 %2652, label %2644, label %2653, !llvm.loop !470

2653:                                             ; preds = %2644, %2635
  %2654 = phi i32 [ %2639, %2635 ], [ %2649, %2644 ]
  %2655 = and i64 %2604, 4294967295
  %2656 = getelementptr inbounds i32, ptr %6, i64 %2655
  %2657 = load i32, ptr %2656, align 4, !tbaa !5
  %2658 = mul nsw i32 %2657, %2654
  %2659 = add nsw i32 %2658, %2598
  %2660 = icmp sgt i64 %2596, 2
  %2661 = add nsw i64 %2597, -1
  %2662 = add i32 %2595, 1
  br i1 %2660, label %2594, label %2663, !llvm.loop !471

2663:                                             ; preds = %2653, %2590
  %2664 = phi i32 [ %2593, %2590 ], [ %2659, %2653 ]
  %2665 = icmp slt i32 %2664, %5
  br i1 %2665, label %2668, label %2666

2666:                                             ; preds = %2663
  %2667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

2668:                                             ; preds = %2663
  %2669 = sext i32 %2664 to i64
  %2670 = getelementptr inbounds i8, ptr %2424, i64 %2669
  %2671 = load i8, ptr %2670, align 1, !tbaa !11
  %2672 = sitofp i8 %2671 to double
  %2673 = fadd fast double %2591, %2672
  store double %2673, ptr %2426, align 8, !tbaa !18
  %2674 = add nuw nsw i32 %2592, 1
  br i1 %2440, label %2675, label %2725

2675:                                             ; preds = %2668
  %2676 = load i32, ptr %4, align 4, !tbaa !5
  %2677 = load i32, ptr %12, align 4, !tbaa !5
  %2678 = add nsw i32 %2677, -1
  %2679 = icmp slt i32 %2676, %2678
  br i1 %2679, label %2702, label %2680

2680:                                             ; preds = %2675
  %2681 = icmp eq i32 %2676, %2678
  br i1 %2681, label %2682, label %2718

2682:                                             ; preds = %2680
  store i32 0, ptr %4, align 4, !tbaa !5
  %2683 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2683, ptr %6, align 4, !tbaa !5
  br i1 %2445, label %2725, label %2684

2684:                                             ; preds = %2682, %2712
  %2685 = phi i64 [ %2716, %2712 ], [ 1, %2682 ]
  %2686 = getelementptr inbounds i32, ptr %4, i64 %2685
  %2687 = load i32, ptr %2686, align 4, !tbaa !5
  %2688 = getelementptr inbounds i32, ptr %12, i64 %2685
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = add nsw i32 %2689, -1
  %2691 = icmp slt i32 %2687, %2690
  br i1 %2691, label %2692, label %2710

2692:                                             ; preds = %2684
  br i1 %2679, label %2702, label %2693

2693:                                             ; preds = %2692
  %2694 = shl i64 %2685, 32
  %2695 = add i64 %2694, -4294967296
  %2696 = ashr exact i64 %2695, 32
  %2697 = getelementptr inbounds i32, ptr %7, i64 %2696
  %2698 = load i32, ptr %2697, align 4, !tbaa !5
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2685
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = add nsw i32 %2700, %2698
  store i32 %2701, ptr %2699, align 4, !tbaa !5
  br label %2720

2702:                                             ; preds = %2675, %2692
  %2703 = phi i32 [ %2687, %2692 ], [ %2676, %2675 ]
  %2704 = phi ptr [ %2686, %2692 ], [ %4, %2675 ]
  %2705 = phi i64 [ %2685, %2692 ], [ 0, %2675 ]
  %2706 = add nsw i32 %2703, 1
  store i32 %2706, ptr %2704, align 4, !tbaa !5
  %2707 = getelementptr inbounds i32, ptr %7, i64 %2705
  %2708 = load i32, ptr %2707, align 4, !tbaa !5
  %2709 = getelementptr inbounds i32, ptr %6, i64 %2705
  br label %2720

2710:                                             ; preds = %2684
  %2711 = icmp eq i32 %2687, %2690
  br i1 %2711, label %2712, label %2718

2712:                                             ; preds = %2710
  store i32 0, ptr %2686, align 4, !tbaa !5
  %2713 = getelementptr inbounds i32, ptr %8, i64 %2685
  %2714 = load i32, ptr %2713, align 4, !tbaa !5
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2685
  store i32 %2714, ptr %2715, align 4, !tbaa !5
  %2716 = add nuw nsw i64 %2685, 1
  %2717 = icmp eq i64 %2716, %2443
  br i1 %2717, label %2725, label %2684, !llvm.loop !472

2718:                                             ; preds = %2680, %2710
  %2719 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2720:                                             ; preds = %2693, %2702
  %2721 = phi ptr [ %2709, %2702 ], [ %2686, %2693 ]
  %2722 = phi i32 [ %2708, %2702 ], [ 1, %2693 ]
  %2723 = load i32, ptr %2721, align 4, !tbaa !5
  %2724 = add nsw i32 %2723, %2722
  store i32 %2724, ptr %2721, align 4, !tbaa !5
  br label %2725

2725:                                             ; preds = %2712, %2720, %2682, %2668
  %2726 = icmp eq i32 %2674, %5
  br i1 %2726, label %3021, label %2590, !llvm.loop !473

2727:                                             ; preds = %2431
  %2728 = getelementptr inbounds i32, ptr %3, i64 %19
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = icmp eq i32 %2729, 0
  %2731 = icmp sgt i32 %5, 0
  br i1 %2730, label %2741, label %2732

2732:                                             ; preds = %2727
  br i1 %2731, label %2733, label %3021

2733:                                             ; preds = %2732
  %2734 = icmp sgt i32 %13, 1
  %2735 = icmp sgt i32 %13, 0
  %2736 = add i32 %13, -2
  %2737 = zext i32 %2736 to i64
  %2738 = zext i32 %13 to i64
  %2739 = add nuw i32 %5, 1
  %2740 = icmp eq i32 %13, 1
  br label %2882

2741:                                             ; preds = %2727
  br i1 %2731, label %2742, label %3021

2742:                                             ; preds = %2741
  %2743 = icmp sgt i32 %13, 1
  %2744 = icmp sgt i32 %13, 0
  %2745 = add i32 %13, -2
  %2746 = zext i32 %2745 to i64
  %2747 = zext i32 %13 to i64
  %2748 = add nuw i32 %5, 1
  %2749 = icmp eq i32 %13, 1
  br label %2750

2750:                                             ; preds = %2742, %2880
  %2751 = phi double [ 0.000000e+00, %2742 ], [ %2830, %2880 ]
  %2752 = phi i32 [ 0, %2742 ], [ %2832, %2880 ]
  %2753 = phi double [ 0.000000e+00, %2742 ], [ %2831, %2880 ]
  %2754 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2743, label %2755, label %2824

2755:                                             ; preds = %2750, %2814
  %2756 = phi i32 [ %2823, %2814 ], [ 0, %2750 ]
  %2757 = phi i64 [ %2765, %2814 ], [ %2747, %2750 ]
  %2758 = phi i64 [ %2822, %2814 ], [ %2746, %2750 ]
  %2759 = phi i32 [ %2820, %2814 ], [ %2754, %2750 ]
  %2760 = sub i32 %2745, %2756
  %2761 = tail call i32 @llvm.smin.i32(i32 %2760, i32 0)
  %2762 = sub i32 %2760, %2761
  %2763 = zext i32 %2762 to i64
  %2764 = add nuw nsw i64 %2763, 1
  %2765 = add nsw i64 %2757, -1
  %2766 = icmp ult i32 %2762, 31
  br i1 %2766, label %2802, label %2767

2767:                                             ; preds = %2755
  %2768 = and i64 %2764, 8589934560
  %2769 = sub i64 %2758, %2768
  br label %2770

2770:                                             ; preds = %2770, %2767
  %2771 = phi i64 [ 0, %2767 ], [ %2794, %2770 ]
  %2772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2790, %2770 ]
  %2773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2791, %2770 ]
  %2774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2792, %2770 ]
  %2775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2793, %2770 ]
  %2776 = sub i64 %2758, %2771
  %2777 = getelementptr inbounds i32, ptr %9, i64 %2776
  %2778 = getelementptr inbounds i32, ptr %2777, i64 -7
  %2779 = load <8 x i32>, ptr %2778, align 4, !tbaa !5
  %2780 = shufflevector <8 x i32> %2779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2781 = getelementptr inbounds i32, ptr %2777, i64 -15
  %2782 = load <8 x i32>, ptr %2781, align 4, !tbaa !5
  %2783 = shufflevector <8 x i32> %2782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2784 = getelementptr inbounds i32, ptr %2777, i64 -23
  %2785 = load <8 x i32>, ptr %2784, align 4, !tbaa !5
  %2786 = shufflevector <8 x i32> %2785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2787 = getelementptr inbounds i32, ptr %2777, i64 -31
  %2788 = load <8 x i32>, ptr %2787, align 4, !tbaa !5
  %2789 = shufflevector <8 x i32> %2788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2790 = mul <8 x i32> %2780, %2772
  %2791 = mul <8 x i32> %2783, %2773
  %2792 = mul <8 x i32> %2786, %2774
  %2793 = mul <8 x i32> %2789, %2775
  %2794 = add nuw i64 %2771, 32
  %2795 = icmp eq i64 %2794, %2768
  br i1 %2795, label %2796, label %2770, !llvm.loop !474

2796:                                             ; preds = %2770
  %2797 = mul <8 x i32> %2791, %2790
  %2798 = mul <8 x i32> %2792, %2797
  %2799 = mul <8 x i32> %2793, %2798
  %2800 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2799)
  %2801 = icmp eq i64 %2764, %2768
  br i1 %2801, label %2814, label %2802

2802:                                             ; preds = %2755, %2796
  %2803 = phi i64 [ %2758, %2755 ], [ %2769, %2796 ]
  %2804 = phi i32 [ 1, %2755 ], [ %2800, %2796 ]
  br label %2805

2805:                                             ; preds = %2802, %2805
  %2806 = phi i64 [ %2811, %2805 ], [ %2803, %2802 ]
  %2807 = phi i32 [ %2810, %2805 ], [ %2804, %2802 ]
  %2808 = getelementptr inbounds i32, ptr %9, i64 %2806
  %2809 = load i32, ptr %2808, align 4, !tbaa !5
  %2810 = mul nsw i32 %2809, %2807
  %2811 = add nsw i64 %2806, -1
  %2812 = trunc i64 %2806 to i32
  %2813 = icmp sgt i32 %2812, 0
  br i1 %2813, label %2805, label %2814, !llvm.loop !475

2814:                                             ; preds = %2805, %2796
  %2815 = phi i32 [ %2800, %2796 ], [ %2810, %2805 ]
  %2816 = and i64 %2765, 4294967295
  %2817 = getelementptr inbounds i32, ptr %6, i64 %2816
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = mul nsw i32 %2818, %2815
  %2820 = add nsw i32 %2819, %2759
  %2821 = icmp sgt i64 %2757, 2
  %2822 = add nsw i64 %2758, -1
  %2823 = add i32 %2756, 1
  br i1 %2821, label %2755, label %2824, !llvm.loop !476

2824:                                             ; preds = %2814, %2750
  %2825 = phi i32 [ %2754, %2750 ], [ %2820, %2814 ]
  %2826 = sext i32 %2825 to i64
  %2827 = getelementptr inbounds i8, ptr %2424, i64 %2826
  %2828 = load i8, ptr %2827, align 1, !tbaa !11
  %2829 = sitofp i8 %2828 to double
  %2830 = fadd fast double %2751, %2829
  store double %2830, ptr %2426, align 8, !tbaa !18
  %2831 = fadd fast double %2753, 1.000000e+00
  %2832 = add nuw nsw i32 %2752, 1
  br i1 %2744, label %2833, label %2880

2833:                                             ; preds = %2824
  %2834 = load i32, ptr %4, align 4, !tbaa !5
  %2835 = load i32, ptr %12, align 4, !tbaa !5
  %2836 = add nsw i32 %2835, -1
  %2837 = icmp slt i32 %2834, %2836
  br i1 %2837, label %2857, label %2838

2838:                                             ; preds = %2833
  %2839 = icmp eq i32 %2834, %2836
  br i1 %2839, label %2840, label %2873

2840:                                             ; preds = %2838
  store i32 0, ptr %4, align 4, !tbaa !5
  %2841 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2841, ptr %6, align 4, !tbaa !5
  br i1 %2749, label %2880, label %2842

2842:                                             ; preds = %2840, %2867
  %2843 = phi i64 [ %2871, %2867 ], [ 1, %2840 ]
  %2844 = getelementptr inbounds i32, ptr %4, i64 %2843
  %2845 = load i32, ptr %2844, align 4, !tbaa !5
  %2846 = getelementptr inbounds i32, ptr %12, i64 %2843
  %2847 = load i32, ptr %2846, align 4, !tbaa !5
  %2848 = add nsw i32 %2847, -1
  %2849 = icmp slt i32 %2845, %2848
  br i1 %2849, label %2850, label %2865

2850:                                             ; preds = %2842
  br i1 %2837, label %2857, label %2851

2851:                                             ; preds = %2850
  %2852 = getelementptr inbounds i32, ptr %7, i64 %2843
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = getelementptr inbounds i32, ptr %6, i64 %2843
  %2855 = load i32, ptr %2854, align 4, !tbaa !5
  %2856 = add nsw i32 %2855, %2853
  store i32 %2856, ptr %2854, align 4, !tbaa !5
  br label %2875

2857:                                             ; preds = %2833, %2850
  %2858 = phi i32 [ %2845, %2850 ], [ %2834, %2833 ]
  %2859 = phi ptr [ %2844, %2850 ], [ %4, %2833 ]
  %2860 = phi i64 [ %2843, %2850 ], [ 0, %2833 ]
  %2861 = add nsw i32 %2858, 1
  store i32 %2861, ptr %2859, align 4, !tbaa !5
  %2862 = getelementptr inbounds i32, ptr %7, i64 %2860
  %2863 = load i32, ptr %2862, align 4, !tbaa !5
  %2864 = getelementptr inbounds i32, ptr %6, i64 %2860
  br label %2875

2865:                                             ; preds = %2842
  %2866 = icmp eq i32 %2845, %2848
  br i1 %2866, label %2867, label %2873

2867:                                             ; preds = %2865
  store i32 0, ptr %2844, align 4, !tbaa !5
  %2868 = getelementptr inbounds i32, ptr %8, i64 %2843
  %2869 = load i32, ptr %2868, align 4, !tbaa !5
  %2870 = getelementptr inbounds i32, ptr %6, i64 %2843
  store i32 %2869, ptr %2870, align 4, !tbaa !5
  %2871 = add nuw nsw i64 %2843, 1
  %2872 = icmp eq i64 %2871, %2747
  br i1 %2872, label %2880, label %2842, !llvm.loop !477

2873:                                             ; preds = %2838, %2865
  %2874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

2875:                                             ; preds = %2851, %2857
  %2876 = phi ptr [ %2864, %2857 ], [ %2844, %2851 ]
  %2877 = phi i32 [ %2863, %2857 ], [ 1, %2851 ]
  %2878 = load i32, ptr %2876, align 4, !tbaa !5
  %2879 = add nsw i32 %2878, %2877
  store i32 %2879, ptr %2876, align 4, !tbaa !5
  br label %2880

2880:                                             ; preds = %2867, %2875, %2840, %2824
  %2881 = icmp eq i32 %2832, %5
  br i1 %2881, label %3021, label %2750, !llvm.loop !478

2882:                                             ; preds = %2733, %3017
  %2883 = phi double [ 0.000000e+00, %2733 ], [ %2965, %3017 ]
  %2884 = phi i32 [ 0, %2733 ], [ %2966, %3017 ]
  %2885 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2734, label %2886, label %2955

2886:                                             ; preds = %2882, %2945
  %2887 = phi i32 [ %2954, %2945 ], [ 0, %2882 ]
  %2888 = phi i64 [ %2896, %2945 ], [ %2738, %2882 ]
  %2889 = phi i64 [ %2953, %2945 ], [ %2737, %2882 ]
  %2890 = phi i32 [ %2951, %2945 ], [ %2885, %2882 ]
  %2891 = sub i32 %2736, %2887
  %2892 = tail call i32 @llvm.smin.i32(i32 %2891, i32 0)
  %2893 = sub i32 %2891, %2892
  %2894 = zext i32 %2893 to i64
  %2895 = add nuw nsw i64 %2894, 1
  %2896 = add nsw i64 %2888, -1
  %2897 = icmp ult i32 %2893, 31
  br i1 %2897, label %2933, label %2898

2898:                                             ; preds = %2886
  %2899 = and i64 %2895, 8589934560
  %2900 = sub i64 %2889, %2899
  br label %2901

2901:                                             ; preds = %2901, %2898
  %2902 = phi i64 [ 0, %2898 ], [ %2925, %2901 ]
  %2903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2921, %2901 ]
  %2904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2922, %2901 ]
  %2905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2923, %2901 ]
  %2906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2898 ], [ %2924, %2901 ]
  %2907 = sub i64 %2889, %2902
  %2908 = getelementptr inbounds i32, ptr %11, i64 %2907
  %2909 = getelementptr inbounds i32, ptr %2908, i64 -7
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !5
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2908, i64 -15
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !5
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = getelementptr inbounds i32, ptr %2908, i64 -23
  %2916 = load <8 x i32>, ptr %2915, align 4, !tbaa !5
  %2917 = shufflevector <8 x i32> %2916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2918 = getelementptr inbounds i32, ptr %2908, i64 -31
  %2919 = load <8 x i32>, ptr %2918, align 4, !tbaa !5
  %2920 = shufflevector <8 x i32> %2919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2921 = mul <8 x i32> %2911, %2903
  %2922 = mul <8 x i32> %2914, %2904
  %2923 = mul <8 x i32> %2917, %2905
  %2924 = mul <8 x i32> %2920, %2906
  %2925 = add nuw i64 %2902, 32
  %2926 = icmp eq i64 %2925, %2899
  br i1 %2926, label %2927, label %2901, !llvm.loop !479

2927:                                             ; preds = %2901
  %2928 = mul <8 x i32> %2922, %2921
  %2929 = mul <8 x i32> %2923, %2928
  %2930 = mul <8 x i32> %2924, %2929
  %2931 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2930)
  %2932 = icmp eq i64 %2895, %2899
  br i1 %2932, label %2945, label %2933

2933:                                             ; preds = %2886, %2927
  %2934 = phi i64 [ %2889, %2886 ], [ %2900, %2927 ]
  %2935 = phi i32 [ 1, %2886 ], [ %2931, %2927 ]
  br label %2936

2936:                                             ; preds = %2933, %2936
  %2937 = phi i64 [ %2942, %2936 ], [ %2934, %2933 ]
  %2938 = phi i32 [ %2941, %2936 ], [ %2935, %2933 ]
  %2939 = getelementptr inbounds i32, ptr %11, i64 %2937
  %2940 = load i32, ptr %2939, align 4, !tbaa !5
  %2941 = mul nsw i32 %2940, %2938
  %2942 = add nsw i64 %2937, -1
  %2943 = trunc i64 %2937 to i32
  %2944 = icmp sgt i32 %2943, 0
  br i1 %2944, label %2936, label %2945, !llvm.loop !480

2945:                                             ; preds = %2936, %2927
  %2946 = phi i32 [ %2931, %2927 ], [ %2941, %2936 ]
  %2947 = and i64 %2896, 4294967295
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2947
  %2949 = load i32, ptr %2948, align 4, !tbaa !5
  %2950 = mul nsw i32 %2949, %2946
  %2951 = add nsw i32 %2950, %2890
  %2952 = icmp sgt i64 %2888, 2
  %2953 = add nsw i64 %2889, -1
  %2954 = add i32 %2887, 1
  br i1 %2952, label %2886, label %2955, !llvm.loop !481

2955:                                             ; preds = %2945, %2882
  %2956 = phi i32 [ %2885, %2882 ], [ %2951, %2945 ]
  %2957 = icmp slt i32 %2956, %5
  br i1 %2957, label %2960, label %2958

2958:                                             ; preds = %2955
  %2959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3026

2960:                                             ; preds = %2955
  %2961 = sext i32 %2956 to i64
  %2962 = getelementptr inbounds i8, ptr %2424, i64 %2961
  %2963 = load i8, ptr %2962, align 1, !tbaa !11
  %2964 = sitofp i8 %2963 to double
  %2965 = fadd fast double %2883, %2964
  store double %2965, ptr %2426, align 8, !tbaa !18
  %2966 = add nuw nsw i32 %2884, 1
  br i1 %2735, label %2967, label %3017

2967:                                             ; preds = %2960
  %2968 = load i32, ptr %4, align 4, !tbaa !5
  %2969 = load i32, ptr %12, align 4, !tbaa !5
  %2970 = add nsw i32 %2969, -1
  %2971 = icmp slt i32 %2968, %2970
  br i1 %2971, label %2994, label %2972

2972:                                             ; preds = %2967
  %2973 = icmp eq i32 %2968, %2970
  br i1 %2973, label %2974, label %3010

2974:                                             ; preds = %2972
  store i32 0, ptr %4, align 4, !tbaa !5
  %2975 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2975, ptr %6, align 4, !tbaa !5
  br i1 %2740, label %3017, label %2976

2976:                                             ; preds = %2974, %3004
  %2977 = phi i64 [ %3008, %3004 ], [ 1, %2974 ]
  %2978 = getelementptr inbounds i32, ptr %4, i64 %2977
  %2979 = load i32, ptr %2978, align 4, !tbaa !5
  %2980 = getelementptr inbounds i32, ptr %12, i64 %2977
  %2981 = load i32, ptr %2980, align 4, !tbaa !5
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2979, %2982
  br i1 %2983, label %2984, label %3002

2984:                                             ; preds = %2976
  br i1 %2971, label %2994, label %2985

2985:                                             ; preds = %2984
  %2986 = shl i64 %2977, 32
  %2987 = add i64 %2986, -4294967296
  %2988 = ashr exact i64 %2987, 32
  %2989 = getelementptr inbounds i32, ptr %7, i64 %2988
  %2990 = load i32, ptr %2989, align 4, !tbaa !5
  %2991 = getelementptr inbounds i32, ptr %6, i64 %2977
  %2992 = load i32, ptr %2991, align 4, !tbaa !5
  %2993 = add nsw i32 %2992, %2990
  store i32 %2993, ptr %2991, align 4, !tbaa !5
  br label %3012

2994:                                             ; preds = %2967, %2984
  %2995 = phi i32 [ %2979, %2984 ], [ %2968, %2967 ]
  %2996 = phi ptr [ %2978, %2984 ], [ %4, %2967 ]
  %2997 = phi i64 [ %2977, %2984 ], [ 0, %2967 ]
  %2998 = add nsw i32 %2995, 1
  store i32 %2998, ptr %2996, align 4, !tbaa !5
  %2999 = getelementptr inbounds i32, ptr %7, i64 %2997
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2997
  br label %3012

3002:                                             ; preds = %2976
  %3003 = icmp eq i32 %2979, %2982
  br i1 %3003, label %3004, label %3010

3004:                                             ; preds = %3002
  store i32 0, ptr %2978, align 4, !tbaa !5
  %3005 = getelementptr inbounds i32, ptr %8, i64 %2977
  %3006 = load i32, ptr %3005, align 4, !tbaa !5
  %3007 = getelementptr inbounds i32, ptr %6, i64 %2977
  store i32 %3006, ptr %3007, align 4, !tbaa !5
  %3008 = add nuw nsw i64 %2977, 1
  %3009 = icmp eq i64 %3008, %2738
  br i1 %3009, label %3017, label %2976, !llvm.loop !482

3010:                                             ; preds = %2972, %3002
  %3011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3026

3012:                                             ; preds = %2985, %2994
  %3013 = phi ptr [ %3001, %2994 ], [ %2978, %2985 ]
  %3014 = phi i32 [ %3000, %2994 ], [ 1, %2985 ]
  %3015 = load i32, ptr %3013, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, %3014
  store i32 %3016, ptr %3013, align 4, !tbaa !5
  br label %3017

3017:                                             ; preds = %3004, %3012, %2974, %2960
  %3018 = icmp eq i32 %2966, %5
  br i1 %3018, label %3021, label %2882, !llvm.loop !483

3019:                                             ; preds = %2431
  %3020 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3021

3021:                                             ; preds = %3017, %2880, %2725, %2588, %2418, %2281, %2126, %1987, %1815, %1678, %1523, %1386, %1216, %1079, %924, %787, %615, %479, %325, %189, %2732, %2741, %2437, %2446, %2133, %2142, %1834, %1843, %1530, %1539, %1235, %1244, %931, %940, %634, %643, %332, %341, %36, %45, %2428, %3019, %1825, %2420, %1226, %1817, %625, %1218, %28, %617, %18
  %3022 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %617 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1218 ], [ 0.000000e+00, %625 ], [ 0.000000e+00, %1817 ], [ 0.000000e+00, %1226 ], [ 0.000000e+00, %2420 ], [ 0.000000e+00, %1825 ], [ 0.000000e+00, %3019 ], [ 0.000000e+00, %2428 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %332 ], [ 0.000000e+00, %643 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %940 ], [ 0.000000e+00, %931 ], [ 0.000000e+00, %1244 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %1539 ], [ 0.000000e+00, %1530 ], [ 0.000000e+00, %1843 ], [ 0.000000e+00, %1834 ], [ 0.000000e+00, %2142 ], [ 0.000000e+00, %2133 ], [ 0.000000e+00, %2446 ], [ 0.000000e+00, %2437 ], [ 0.000000e+00, %2741 ], [ 0.000000e+00, %2732 ], [ %140, %189 ], [ 0.000000e+00, %325 ], [ %430, %479 ], [ 0.000000e+00, %615 ], [ %738, %787 ], [ 0.000000e+00, %924 ], [ %1030, %1079 ], [ 0.000000e+00, %1216 ], [ %1337, %1386 ], [ 0.000000e+00, %1523 ], [ %1629, %1678 ], [ 0.000000e+00, %1815 ], [ %1938, %1987 ], [ 0.000000e+00, %2126 ], [ %2232, %2281 ], [ 0.000000e+00, %2418 ], [ %2539, %2588 ], [ 0.000000e+00, %2725 ], [ %2831, %2880 ], [ 0.000000e+00, %3017 ]
  %3023 = phi i32 [ %10, %18 ], [ 1, %617 ], [ 1, %28 ], [ 1, %1218 ], [ 1, %625 ], [ 1, %1817 ], [ 1, %1226 ], [ 1, %2420 ], [ 1, %1825 ], [ 1, %3019 ], [ 1, %2428 ], [ 1, %45 ], [ 1, %36 ], [ 1, %341 ], [ 1, %332 ], [ 1, %643 ], [ 1, %634 ], [ 1, %940 ], [ 1, %931 ], [ 1, %1244 ], [ 1, %1235 ], [ 1, %1539 ], [ 1, %1530 ], [ 1, %1843 ], [ 1, %1834 ], [ 1, %2142 ], [ 1, %2133 ], [ 1, %2446 ], [ 1, %2437 ], [ 1, %2741 ], [ 1, %2732 ], [ %52, %189 ], [ %43, %325 ], [ %348, %479 ], [ %339, %615 ], [ %650, %787 ], [ %641, %924 ], [ %947, %1079 ], [ %938, %1216 ], [ %1251, %1386 ], [ %1242, %1523 ], [ %1546, %1678 ], [ %1537, %1815 ], [ %1850, %1987 ], [ %1841, %2126 ], [ %2149, %2281 ], [ %2140, %2418 ], [ %2453, %2588 ], [ %2444, %2725 ], [ %2748, %2880 ], [ %2739, %3017 ]
  %3024 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3023, ptr noundef nonnull @.str.5) #3
  %3025 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3022, ptr noundef nonnull @.str.6) #3
  br label %3026

3026:                                             ; preds = %2581, %2666, %2718, %2873, %2958, %3010, %1980, %2065, %2119, %2274, %2359, %2411, %1379, %1464, %1516, %1671, %1756, %1808, %780, %864, %917, %1072, %1156, %1209, %182, %266, %318, %472, %556, %608, %3021
  %3027 = phi i32 [ 0, %3021 ], [ -1, %608 ], [ -1, %556 ], [ -1, %472 ], [ -1, %318 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1209 ], [ -1, %1156 ], [ -1, %1072 ], [ -1, %917 ], [ -1, %864 ], [ -1, %780 ], [ -1, %1808 ], [ -1, %1756 ], [ -1, %1671 ], [ -1, %1516 ], [ -1, %1464 ], [ -1, %1379 ], [ -1, %2411 ], [ -1, %2359 ], [ -1, %2274 ], [ -1, %2119 ], [ -1, %2065 ], [ -1, %1980 ], [ -1, %3010 ], [ -1, %2958 ], [ -1, %2873 ], [ -1, %2718 ], [ -1, %2666 ], [ -1, %2581 ]
  ret i32 %3027
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3030 [
    i32 101, label %22
    i32 102, label %624
    i32 107, label %1225
    i32 108, label %1824
    i32 109, label %2427
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !78
  %30 = trunc i16 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %3030

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %3030

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %3030

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !484

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !485

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !486

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i16, ptr %24, i64 %130
  %134 = load i16, ptr %133, align 2, !tbaa !78
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i16 %134, 255
  %138 = uitofp i16 %137 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !487

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %3030, label %55, !llvm.loop !488

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !489

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !490

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !491

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i16, ptr %24, i64 %271
  %273 = load i16, ptr %272, align 2, !tbaa !78
  %274 = load i8, ptr %26, align 1, !tbaa !11
  %275 = trunc i16 %273 to i8
  %276 = add i8 %274, %275
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !492

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %3030, label %193, !llvm.loop !493

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %3030

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %3030

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !494

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !495

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !496

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i16, ptr %24, i64 %428
  %430 = load i16, ptr %429, align 2, !tbaa !78
  %431 = load i8, ptr %26, align 1, !tbaa !11
  %432 = trunc i16 %430 to i8
  %433 = add i8 %431, %432
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !497

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %3030, label %353, !llvm.loop !498

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !499

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !500

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !501

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds i16, ptr %24, i64 %563
  %565 = load i16, ptr %564, align 2, !tbaa !78
  %566 = load i8, ptr %26, align 1, !tbaa !11
  %567 = trunc i16 %565 to i8
  %568 = add i8 %566, %567
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !502

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %3030, label %485, !llvm.loop !503

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3030

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %624
  %631 = load i16, ptr %626, align 2, !tbaa !78
  %632 = sext i16 %631 to i32
  store i32 %632, ptr %628, align 4, !tbaa !5
  br label %3030

633:                                              ; preds = %624
  switch i32 %1, label %1223 [
    i32 1, label %634
    i32 0, label %931
  ]

634:                                              ; preds = %633
  %635 = getelementptr inbounds i32, ptr %3, i64 %19
  %636 = load i32, ptr %635, align 4, !tbaa !5
  %637 = icmp eq i32 %636, 0
  %638 = icmp sgt i32 %5, 0
  br i1 %637, label %648, label %639

639:                                              ; preds = %634
  br i1 %638, label %640, label %3030

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %794

648:                                              ; preds = %634
  br i1 %638, label %649, label %3030

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %657

657:                                              ; preds = %649, %792
  %658 = phi i32 [ 0, %649 ], [ %744, %792 ]
  %659 = phi double [ 0.000000e+00, %649 ], [ %743, %792 ]
  %660 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %650, label %661, label %730

661:                                              ; preds = %657, %720
  %662 = phi i32 [ %729, %720 ], [ 0, %657 ]
  %663 = phi i64 [ %671, %720 ], [ %654, %657 ]
  %664 = phi i64 [ %728, %720 ], [ %653, %657 ]
  %665 = phi i32 [ %726, %720 ], [ %660, %657 ]
  %666 = sub i32 %652, %662
  %667 = tail call i32 @llvm.smin.i32(i32 %666, i32 0)
  %668 = sub i32 %666, %667
  %669 = zext i32 %668 to i64
  %670 = add nuw nsw i64 %669, 1
  %671 = add nsw i64 %663, -1
  %672 = icmp ult i32 %668, 31
  br i1 %672, label %708, label %673

673:                                              ; preds = %661
  %674 = and i64 %670, 8589934560
  %675 = sub i64 %664, %674
  br label %676

676:                                              ; preds = %676, %673
  %677 = phi i64 [ 0, %673 ], [ %700, %676 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %696, %676 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %697, %676 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %698, %676 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %699, %676 ]
  %682 = sub i64 %664, %677
  %683 = getelementptr inbounds i32, ptr %9, i64 %682
  %684 = getelementptr inbounds i32, ptr %683, i64 -7
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %683, i64 -15
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %683, i64 -23
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %683, i64 -31
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = mul <8 x i32> %686, %678
  %697 = mul <8 x i32> %689, %679
  %698 = mul <8 x i32> %692, %680
  %699 = mul <8 x i32> %695, %681
  %700 = add nuw i64 %677, 32
  %701 = icmp eq i64 %700, %674
  br i1 %701, label %702, label %676, !llvm.loop !504

702:                                              ; preds = %676
  %703 = mul <8 x i32> %697, %696
  %704 = mul <8 x i32> %698, %703
  %705 = mul <8 x i32> %699, %704
  %706 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %705)
  %707 = icmp eq i64 %670, %674
  br i1 %707, label %720, label %708

708:                                              ; preds = %661, %702
  %709 = phi i64 [ %664, %661 ], [ %675, %702 ]
  %710 = phi i32 [ 1, %661 ], [ %706, %702 ]
  br label %711

711:                                              ; preds = %708, %711
  %712 = phi i64 [ %717, %711 ], [ %709, %708 ]
  %713 = phi i32 [ %716, %711 ], [ %710, %708 ]
  %714 = getelementptr inbounds i32, ptr %9, i64 %712
  %715 = load i32, ptr %714, align 4, !tbaa !5
  %716 = mul nsw i32 %715, %713
  %717 = add nsw i64 %712, -1
  %718 = trunc i64 %712 to i32
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %711, label %720, !llvm.loop !505

720:                                              ; preds = %711, %702
  %721 = phi i32 [ %706, %702 ], [ %716, %711 ]
  %722 = and i64 %671, 4294967295
  %723 = getelementptr inbounds i32, ptr %6, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !5
  %725 = mul nsw i32 %724, %721
  %726 = add nsw i32 %725, %665
  %727 = icmp sgt i64 %663, 2
  %728 = add nsw i64 %664, -1
  %729 = add i32 %662, 1
  br i1 %727, label %661, label %730, !llvm.loop !506

730:                                              ; preds = %720, %657
  %731 = phi i32 [ %660, %657 ], [ %726, %720 ]
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds double, ptr %2, i64 %732
  %734 = load double, ptr %733, align 8, !tbaa !18
  %735 = getelementptr inbounds i16, ptr %626, i64 %732
  %736 = load i16, ptr %735, align 2, !tbaa !78
  %737 = load i32, ptr %628, align 4, !tbaa !5
  %738 = sitofp i32 %737 to double
  %739 = sitofp i16 %736 to double
  %740 = fmul fast double %734, %739
  %741 = fadd fast double %740, %738
  %742 = fptosi double %741 to i32
  store i32 %742, ptr %628, align 4, !tbaa !5
  %743 = fadd fast double %734, %659
  %744 = add nuw nsw i32 %658, 1
  br i1 %651, label %745, label %792

745:                                              ; preds = %730
  %746 = load i32, ptr %4, align 4, !tbaa !5
  %747 = load i32, ptr %12, align 4, !tbaa !5
  %748 = add nsw i32 %747, -1
  %749 = icmp slt i32 %746, %748
  br i1 %749, label %769, label %750

750:                                              ; preds = %745
  %751 = icmp eq i32 %746, %748
  br i1 %751, label %752, label %785

752:                                              ; preds = %750
  store i32 0, ptr %4, align 4, !tbaa !5
  %753 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %753, ptr %6, align 4, !tbaa !5
  br i1 %656, label %792, label %754

754:                                              ; preds = %752, %779
  %755 = phi i64 [ %783, %779 ], [ 1, %752 ]
  %756 = getelementptr inbounds i32, ptr %4, i64 %755
  %757 = load i32, ptr %756, align 4, !tbaa !5
  %758 = getelementptr inbounds i32, ptr %12, i64 %755
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = add nsw i32 %759, -1
  %761 = icmp slt i32 %757, %760
  br i1 %761, label %762, label %777

762:                                              ; preds = %754
  br i1 %749, label %769, label %763

763:                                              ; preds = %762
  %764 = getelementptr inbounds i32, ptr %7, i64 %755
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = getelementptr inbounds i32, ptr %6, i64 %755
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = add nsw i32 %767, %765
  store i32 %768, ptr %766, align 4, !tbaa !5
  br label %787

769:                                              ; preds = %745, %762
  %770 = phi i32 [ %757, %762 ], [ %746, %745 ]
  %771 = phi ptr [ %756, %762 ], [ %4, %745 ]
  %772 = phi i64 [ %755, %762 ], [ 0, %745 ]
  %773 = add nsw i32 %770, 1
  store i32 %773, ptr %771, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %7, i64 %772
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %6, i64 %772
  br label %787

777:                                              ; preds = %754
  %778 = icmp eq i32 %757, %760
  br i1 %778, label %779, label %785

779:                                              ; preds = %777
  store i32 0, ptr %756, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %8, i64 %755
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %6, i64 %755
  store i32 %781, ptr %782, align 4, !tbaa !5
  %783 = add nuw nsw i64 %755, 1
  %784 = icmp eq i64 %783, %654
  br i1 %784, label %792, label %754, !llvm.loop !507

785:                                              ; preds = %750, %777
  %786 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

787:                                              ; preds = %763, %769
  %788 = phi ptr [ %776, %769 ], [ %756, %763 ]
  %789 = phi i32 [ %775, %769 ], [ 1, %763 ]
  %790 = load i32, ptr %788, align 4, !tbaa !5
  %791 = add nsw i32 %790, %789
  store i32 %791, ptr %788, align 4, !tbaa !5
  br label %792

792:                                              ; preds = %779, %787, %752, %730
  %793 = icmp eq i32 %744, %5
  br i1 %793, label %3030, label %657, !llvm.loop !508

794:                                              ; preds = %640, %929
  %795 = phi i32 [ 0, %640 ], [ %878, %929 ]
  %796 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %797, label %866

797:                                              ; preds = %794, %856
  %798 = phi i32 [ %865, %856 ], [ 0, %794 ]
  %799 = phi i64 [ %807, %856 ], [ %645, %794 ]
  %800 = phi i64 [ %864, %856 ], [ %644, %794 ]
  %801 = phi i32 [ %862, %856 ], [ %796, %794 ]
  %802 = sub i32 %643, %798
  %803 = tail call i32 @llvm.smin.i32(i32 %802, i32 0)
  %804 = sub i32 %802, %803
  %805 = zext i32 %804 to i64
  %806 = add nuw nsw i64 %805, 1
  %807 = add nsw i64 %799, -1
  %808 = icmp ult i32 %804, 31
  br i1 %808, label %844, label %809

809:                                              ; preds = %797
  %810 = and i64 %806, 8589934560
  %811 = sub i64 %800, %810
  br label %812

812:                                              ; preds = %812, %809
  %813 = phi i64 [ 0, %809 ], [ %836, %812 ]
  %814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %809 ], [ %832, %812 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %809 ], [ %833, %812 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %809 ], [ %834, %812 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %809 ], [ %835, %812 ]
  %818 = sub i64 %800, %813
  %819 = getelementptr inbounds i32, ptr %11, i64 %818
  %820 = getelementptr inbounds i32, ptr %819, i64 -7
  %821 = load <8 x i32>, ptr %820, align 4, !tbaa !5
  %822 = shufflevector <8 x i32> %821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %823 = getelementptr inbounds i32, ptr %819, i64 -15
  %824 = load <8 x i32>, ptr %823, align 4, !tbaa !5
  %825 = shufflevector <8 x i32> %824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %826 = getelementptr inbounds i32, ptr %819, i64 -23
  %827 = load <8 x i32>, ptr %826, align 4, !tbaa !5
  %828 = shufflevector <8 x i32> %827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %829 = getelementptr inbounds i32, ptr %819, i64 -31
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = mul <8 x i32> %822, %814
  %833 = mul <8 x i32> %825, %815
  %834 = mul <8 x i32> %828, %816
  %835 = mul <8 x i32> %831, %817
  %836 = add nuw i64 %813, 32
  %837 = icmp eq i64 %836, %810
  br i1 %837, label %838, label %812, !llvm.loop !509

838:                                              ; preds = %812
  %839 = mul <8 x i32> %833, %832
  %840 = mul <8 x i32> %834, %839
  %841 = mul <8 x i32> %835, %840
  %842 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %841)
  %843 = icmp eq i64 %806, %810
  br i1 %843, label %856, label %844

844:                                              ; preds = %797, %838
  %845 = phi i64 [ %800, %797 ], [ %811, %838 ]
  %846 = phi i32 [ 1, %797 ], [ %842, %838 ]
  br label %847

847:                                              ; preds = %844, %847
  %848 = phi i64 [ %853, %847 ], [ %845, %844 ]
  %849 = phi i32 [ %852, %847 ], [ %846, %844 ]
  %850 = getelementptr inbounds i32, ptr %11, i64 %848
  %851 = load i32, ptr %850, align 4, !tbaa !5
  %852 = mul nsw i32 %851, %849
  %853 = add nsw i64 %848, -1
  %854 = trunc i64 %848 to i32
  %855 = icmp sgt i32 %854, 0
  br i1 %855, label %847, label %856, !llvm.loop !510

856:                                              ; preds = %847, %838
  %857 = phi i32 [ %842, %838 ], [ %852, %847 ]
  %858 = and i64 %807, 4294967295
  %859 = getelementptr inbounds i32, ptr %6, i64 %858
  %860 = load i32, ptr %859, align 4, !tbaa !5
  %861 = mul nsw i32 %860, %857
  %862 = add nsw i32 %861, %801
  %863 = icmp sgt i64 %799, 2
  %864 = add nsw i64 %800, -1
  %865 = add i32 %798, 1
  br i1 %863, label %797, label %866, !llvm.loop !511

866:                                              ; preds = %856, %794
  %867 = phi i32 [ %796, %794 ], [ %862, %856 ]
  %868 = icmp slt i32 %867, %5
  br i1 %868, label %871, label %869

869:                                              ; preds = %866
  %870 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

871:                                              ; preds = %866
  %872 = sext i32 %867 to i64
  %873 = getelementptr inbounds i16, ptr %626, i64 %872
  %874 = load i16, ptr %873, align 2, !tbaa !78
  %875 = load i32, ptr %628, align 4, !tbaa !5
  %876 = sext i16 %874 to i32
  %877 = add i32 %875, %876
  store i32 %877, ptr %628, align 4, !tbaa !5
  %878 = add nuw nsw i32 %795, 1
  br i1 %642, label %879, label %929

879:                                              ; preds = %871
  %880 = load i32, ptr %4, align 4, !tbaa !5
  %881 = load i32, ptr %12, align 4, !tbaa !5
  %882 = add nsw i32 %881, -1
  %883 = icmp slt i32 %880, %882
  br i1 %883, label %906, label %884

884:                                              ; preds = %879
  %885 = icmp eq i32 %880, %882
  br i1 %885, label %886, label %922

886:                                              ; preds = %884
  store i32 0, ptr %4, align 4, !tbaa !5
  %887 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %887, ptr %6, align 4, !tbaa !5
  br i1 %647, label %929, label %888

888:                                              ; preds = %886, %916
  %889 = phi i64 [ %920, %916 ], [ 1, %886 ]
  %890 = getelementptr inbounds i32, ptr %4, i64 %889
  %891 = load i32, ptr %890, align 4, !tbaa !5
  %892 = getelementptr inbounds i32, ptr %12, i64 %889
  %893 = load i32, ptr %892, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %891, %894
  br i1 %895, label %896, label %914

896:                                              ; preds = %888
  br i1 %883, label %906, label %897

897:                                              ; preds = %896
  %898 = shl i64 %889, 32
  %899 = add i64 %898, -4294967296
  %900 = ashr exact i64 %899, 32
  %901 = getelementptr inbounds i32, ptr %7, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = getelementptr inbounds i32, ptr %6, i64 %889
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = add nsw i32 %904, %902
  store i32 %905, ptr %903, align 4, !tbaa !5
  br label %924

906:                                              ; preds = %879, %896
  %907 = phi i32 [ %891, %896 ], [ %880, %879 ]
  %908 = phi ptr [ %890, %896 ], [ %4, %879 ]
  %909 = phi i64 [ %889, %896 ], [ 0, %879 ]
  %910 = add nsw i32 %907, 1
  store i32 %910, ptr %908, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %7, i64 %909
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %909
  br label %924

914:                                              ; preds = %888
  %915 = icmp eq i32 %891, %894
  br i1 %915, label %916, label %922

916:                                              ; preds = %914
  store i32 0, ptr %890, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %8, i64 %889
  %918 = load i32, ptr %917, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %6, i64 %889
  store i32 %918, ptr %919, align 4, !tbaa !5
  %920 = add nuw nsw i64 %889, 1
  %921 = icmp eq i64 %920, %645
  br i1 %921, label %929, label %888, !llvm.loop !512

922:                                              ; preds = %884, %914
  %923 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

924:                                              ; preds = %897, %906
  %925 = phi ptr [ %913, %906 ], [ %890, %897 ]
  %926 = phi i32 [ %912, %906 ], [ 1, %897 ]
  %927 = load i32, ptr %925, align 4, !tbaa !5
  %928 = add nsw i32 %927, %926
  store i32 %928, ptr %925, align 4, !tbaa !5
  br label %929

929:                                              ; preds = %916, %924, %886, %871
  %930 = icmp eq i32 %878, %5
  br i1 %930, label %3030, label %794, !llvm.loop !513

931:                                              ; preds = %633
  %932 = getelementptr inbounds i32, ptr %3, i64 %19
  %933 = load i32, ptr %932, align 4, !tbaa !5
  %934 = icmp eq i32 %933, 0
  %935 = icmp sgt i32 %5, 0
  br i1 %934, label %945, label %936

936:                                              ; preds = %931
  br i1 %935, label %937, label %3030

937:                                              ; preds = %936
  %938 = icmp sgt i32 %13, 1
  %939 = icmp sgt i32 %13, 0
  %940 = add i32 %13, -2
  %941 = zext i32 %940 to i64
  %942 = zext i32 %13 to i64
  %943 = add nuw i32 %5, 1
  %944 = icmp eq i32 %13, 1
  br label %1086

945:                                              ; preds = %931
  br i1 %935, label %946, label %3030

946:                                              ; preds = %945
  %947 = icmp sgt i32 %13, 1
  %948 = icmp sgt i32 %13, 0
  %949 = add i32 %13, -2
  %950 = zext i32 %949 to i64
  %951 = zext i32 %13 to i64
  %952 = add nuw i32 %5, 1
  %953 = icmp eq i32 %13, 1
  br label %954

954:                                              ; preds = %946, %1084
  %955 = phi i32 [ 0, %946 ], [ %1036, %1084 ]
  %956 = phi double [ 0.000000e+00, %946 ], [ %1035, %1084 ]
  %957 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %947, label %958, label %1027

958:                                              ; preds = %954, %1017
  %959 = phi i32 [ %1026, %1017 ], [ 0, %954 ]
  %960 = phi i64 [ %968, %1017 ], [ %951, %954 ]
  %961 = phi i64 [ %1025, %1017 ], [ %950, %954 ]
  %962 = phi i32 [ %1023, %1017 ], [ %957, %954 ]
  %963 = sub i32 %949, %959
  %964 = tail call i32 @llvm.smin.i32(i32 %963, i32 0)
  %965 = sub i32 %963, %964
  %966 = zext i32 %965 to i64
  %967 = add nuw nsw i64 %966, 1
  %968 = add nsw i64 %960, -1
  %969 = icmp ult i32 %965, 31
  br i1 %969, label %1005, label %970

970:                                              ; preds = %958
  %971 = and i64 %967, 8589934560
  %972 = sub i64 %961, %971
  br label %973

973:                                              ; preds = %973, %970
  %974 = phi i64 [ 0, %970 ], [ %997, %973 ]
  %975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %970 ], [ %993, %973 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %970 ], [ %994, %973 ]
  %977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %970 ], [ %995, %973 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %970 ], [ %996, %973 ]
  %979 = sub i64 %961, %974
  %980 = getelementptr inbounds i32, ptr %9, i64 %979
  %981 = getelementptr inbounds i32, ptr %980, i64 -7
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = getelementptr inbounds i32, ptr %980, i64 -15
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = getelementptr inbounds i32, ptr %980, i64 -23
  %988 = load <8 x i32>, ptr %987, align 4, !tbaa !5
  %989 = shufflevector <8 x i32> %988, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %990 = getelementptr inbounds i32, ptr %980, i64 -31
  %991 = load <8 x i32>, ptr %990, align 4, !tbaa !5
  %992 = shufflevector <8 x i32> %991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %993 = mul <8 x i32> %983, %975
  %994 = mul <8 x i32> %986, %976
  %995 = mul <8 x i32> %989, %977
  %996 = mul <8 x i32> %992, %978
  %997 = add nuw i64 %974, 32
  %998 = icmp eq i64 %997, %971
  br i1 %998, label %999, label %973, !llvm.loop !514

999:                                              ; preds = %973
  %1000 = mul <8 x i32> %994, %993
  %1001 = mul <8 x i32> %995, %1000
  %1002 = mul <8 x i32> %996, %1001
  %1003 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1002)
  %1004 = icmp eq i64 %967, %971
  br i1 %1004, label %1017, label %1005

1005:                                             ; preds = %958, %999
  %1006 = phi i64 [ %961, %958 ], [ %972, %999 ]
  %1007 = phi i32 [ 1, %958 ], [ %1003, %999 ]
  br label %1008

1008:                                             ; preds = %1005, %1008
  %1009 = phi i64 [ %1014, %1008 ], [ %1006, %1005 ]
  %1010 = phi i32 [ %1013, %1008 ], [ %1007, %1005 ]
  %1011 = getelementptr inbounds i32, ptr %9, i64 %1009
  %1012 = load i32, ptr %1011, align 4, !tbaa !5
  %1013 = mul nsw i32 %1012, %1010
  %1014 = add nsw i64 %1009, -1
  %1015 = trunc i64 %1009 to i32
  %1016 = icmp sgt i32 %1015, 0
  br i1 %1016, label %1008, label %1017, !llvm.loop !515

1017:                                             ; preds = %1008, %999
  %1018 = phi i32 [ %1003, %999 ], [ %1013, %1008 ]
  %1019 = and i64 %968, 4294967295
  %1020 = getelementptr inbounds i32, ptr %6, i64 %1019
  %1021 = load i32, ptr %1020, align 4, !tbaa !5
  %1022 = mul nsw i32 %1021, %1018
  %1023 = add nsw i32 %1022, %962
  %1024 = icmp sgt i64 %960, 2
  %1025 = add nsw i64 %961, -1
  %1026 = add i32 %959, 1
  br i1 %1024, label %958, label %1027, !llvm.loop !516

1027:                                             ; preds = %1017, %954
  %1028 = phi i32 [ %957, %954 ], [ %1023, %1017 ]
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds i16, ptr %626, i64 %1029
  %1031 = load i16, ptr %1030, align 2, !tbaa !78
  %1032 = sext i16 %1031 to i32
  %1033 = load i32, ptr %628, align 4, !tbaa !5
  %1034 = add nsw i32 %1033, %1032
  store i32 %1034, ptr %628, align 4, !tbaa !5
  %1035 = fadd fast double %956, 1.000000e+00
  %1036 = add nuw nsw i32 %955, 1
  br i1 %948, label %1037, label %1084

1037:                                             ; preds = %1027
  %1038 = load i32, ptr %4, align 4, !tbaa !5
  %1039 = load i32, ptr %12, align 4, !tbaa !5
  %1040 = add nsw i32 %1039, -1
  %1041 = icmp slt i32 %1038, %1040
  br i1 %1041, label %1061, label %1042

1042:                                             ; preds = %1037
  %1043 = icmp eq i32 %1038, %1040
  br i1 %1043, label %1044, label %1077

1044:                                             ; preds = %1042
  store i32 0, ptr %4, align 4, !tbaa !5
  %1045 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1045, ptr %6, align 4, !tbaa !5
  br i1 %953, label %1084, label %1046

1046:                                             ; preds = %1044, %1071
  %1047 = phi i64 [ %1075, %1071 ], [ 1, %1044 ]
  %1048 = getelementptr inbounds i32, ptr %4, i64 %1047
  %1049 = load i32, ptr %1048, align 4, !tbaa !5
  %1050 = getelementptr inbounds i32, ptr %12, i64 %1047
  %1051 = load i32, ptr %1050, align 4, !tbaa !5
  %1052 = add nsw i32 %1051, -1
  %1053 = icmp slt i32 %1049, %1052
  br i1 %1053, label %1054, label %1069

1054:                                             ; preds = %1046
  br i1 %1041, label %1061, label %1055

1055:                                             ; preds = %1054
  %1056 = getelementptr inbounds i32, ptr %7, i64 %1047
  %1057 = load i32, ptr %1056, align 4, !tbaa !5
  %1058 = getelementptr inbounds i32, ptr %6, i64 %1047
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = add nsw i32 %1059, %1057
  store i32 %1060, ptr %1058, align 4, !tbaa !5
  br label %1079

1061:                                             ; preds = %1037, %1054
  %1062 = phi i32 [ %1049, %1054 ], [ %1038, %1037 ]
  %1063 = phi ptr [ %1048, %1054 ], [ %4, %1037 ]
  %1064 = phi i64 [ %1047, %1054 ], [ 0, %1037 ]
  %1065 = add nsw i32 %1062, 1
  store i32 %1065, ptr %1063, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %7, i64 %1064
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %6, i64 %1064
  br label %1079

1069:                                             ; preds = %1046
  %1070 = icmp eq i32 %1049, %1052
  br i1 %1070, label %1071, label %1077

1071:                                             ; preds = %1069
  store i32 0, ptr %1048, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %8, i64 %1047
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1047
  store i32 %1073, ptr %1074, align 4, !tbaa !5
  %1075 = add nuw nsw i64 %1047, 1
  %1076 = icmp eq i64 %1075, %951
  br i1 %1076, label %1084, label %1046, !llvm.loop !517

1077:                                             ; preds = %1042, %1069
  %1078 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1079:                                             ; preds = %1055, %1061
  %1080 = phi ptr [ %1068, %1061 ], [ %1048, %1055 ]
  %1081 = phi i32 [ %1067, %1061 ], [ 1, %1055 ]
  %1082 = load i32, ptr %1080, align 4, !tbaa !5
  %1083 = add nsw i32 %1082, %1081
  store i32 %1083, ptr %1080, align 4, !tbaa !5
  br label %1084

1084:                                             ; preds = %1071, %1079, %1044, %1027
  %1085 = icmp eq i32 %1036, %5
  br i1 %1085, label %3030, label %954, !llvm.loop !518

1086:                                             ; preds = %937, %1221
  %1087 = phi i32 [ 0, %937 ], [ %1170, %1221 ]
  %1088 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %938, label %1089, label %1158

1089:                                             ; preds = %1086, %1148
  %1090 = phi i32 [ %1157, %1148 ], [ 0, %1086 ]
  %1091 = phi i64 [ %1099, %1148 ], [ %942, %1086 ]
  %1092 = phi i64 [ %1156, %1148 ], [ %941, %1086 ]
  %1093 = phi i32 [ %1154, %1148 ], [ %1088, %1086 ]
  %1094 = sub i32 %940, %1090
  %1095 = tail call i32 @llvm.smin.i32(i32 %1094, i32 0)
  %1096 = sub i32 %1094, %1095
  %1097 = zext i32 %1096 to i64
  %1098 = add nuw nsw i64 %1097, 1
  %1099 = add nsw i64 %1091, -1
  %1100 = icmp ult i32 %1096, 31
  br i1 %1100, label %1136, label %1101

1101:                                             ; preds = %1089
  %1102 = and i64 %1098, 8589934560
  %1103 = sub i64 %1092, %1102
  br label %1104

1104:                                             ; preds = %1104, %1101
  %1105 = phi i64 [ 0, %1101 ], [ %1128, %1104 ]
  %1106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1101 ], [ %1124, %1104 ]
  %1107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1101 ], [ %1125, %1104 ]
  %1108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1101 ], [ %1126, %1104 ]
  %1109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1101 ], [ %1127, %1104 ]
  %1110 = sub i64 %1092, %1105
  %1111 = getelementptr inbounds i32, ptr %11, i64 %1110
  %1112 = getelementptr inbounds i32, ptr %1111, i64 -7
  %1113 = load <8 x i32>, ptr %1112, align 4, !tbaa !5
  %1114 = shufflevector <8 x i32> %1113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1115 = getelementptr inbounds i32, ptr %1111, i64 -15
  %1116 = load <8 x i32>, ptr %1115, align 4, !tbaa !5
  %1117 = shufflevector <8 x i32> %1116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1118 = getelementptr inbounds i32, ptr %1111, i64 -23
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = getelementptr inbounds i32, ptr %1111, i64 -31
  %1122 = load <8 x i32>, ptr %1121, align 4, !tbaa !5
  %1123 = shufflevector <8 x i32> %1122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1124 = mul <8 x i32> %1114, %1106
  %1125 = mul <8 x i32> %1117, %1107
  %1126 = mul <8 x i32> %1120, %1108
  %1127 = mul <8 x i32> %1123, %1109
  %1128 = add nuw i64 %1105, 32
  %1129 = icmp eq i64 %1128, %1102
  br i1 %1129, label %1130, label %1104, !llvm.loop !519

1130:                                             ; preds = %1104
  %1131 = mul <8 x i32> %1125, %1124
  %1132 = mul <8 x i32> %1126, %1131
  %1133 = mul <8 x i32> %1127, %1132
  %1134 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1133)
  %1135 = icmp eq i64 %1098, %1102
  br i1 %1135, label %1148, label %1136

1136:                                             ; preds = %1089, %1130
  %1137 = phi i64 [ %1092, %1089 ], [ %1103, %1130 ]
  %1138 = phi i32 [ 1, %1089 ], [ %1134, %1130 ]
  br label %1139

1139:                                             ; preds = %1136, %1139
  %1140 = phi i64 [ %1145, %1139 ], [ %1137, %1136 ]
  %1141 = phi i32 [ %1144, %1139 ], [ %1138, %1136 ]
  %1142 = getelementptr inbounds i32, ptr %11, i64 %1140
  %1143 = load i32, ptr %1142, align 4, !tbaa !5
  %1144 = mul nsw i32 %1143, %1141
  %1145 = add nsw i64 %1140, -1
  %1146 = trunc i64 %1140 to i32
  %1147 = icmp sgt i32 %1146, 0
  br i1 %1147, label %1139, label %1148, !llvm.loop !520

1148:                                             ; preds = %1139, %1130
  %1149 = phi i32 [ %1134, %1130 ], [ %1144, %1139 ]
  %1150 = and i64 %1099, 4294967295
  %1151 = getelementptr inbounds i32, ptr %6, i64 %1150
  %1152 = load i32, ptr %1151, align 4, !tbaa !5
  %1153 = mul nsw i32 %1152, %1149
  %1154 = add nsw i32 %1153, %1093
  %1155 = icmp sgt i64 %1091, 2
  %1156 = add nsw i64 %1092, -1
  %1157 = add i32 %1090, 1
  br i1 %1155, label %1089, label %1158, !llvm.loop !521

1158:                                             ; preds = %1148, %1086
  %1159 = phi i32 [ %1088, %1086 ], [ %1154, %1148 ]
  %1160 = icmp slt i32 %1159, %5
  br i1 %1160, label %1163, label %1161

1161:                                             ; preds = %1158
  %1162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

1163:                                             ; preds = %1158
  %1164 = sext i32 %1159 to i64
  %1165 = getelementptr inbounds i16, ptr %626, i64 %1164
  %1166 = load i16, ptr %1165, align 2, !tbaa !78
  %1167 = sext i16 %1166 to i32
  %1168 = load i32, ptr %628, align 4, !tbaa !5
  %1169 = add nsw i32 %1168, %1167
  store i32 %1169, ptr %628, align 4, !tbaa !5
  %1170 = add nuw nsw i32 %1087, 1
  br i1 %939, label %1171, label %1221

1171:                                             ; preds = %1163
  %1172 = load i32, ptr %4, align 4, !tbaa !5
  %1173 = load i32, ptr %12, align 4, !tbaa !5
  %1174 = add nsw i32 %1173, -1
  %1175 = icmp slt i32 %1172, %1174
  br i1 %1175, label %1198, label %1176

1176:                                             ; preds = %1171
  %1177 = icmp eq i32 %1172, %1174
  br i1 %1177, label %1178, label %1214

1178:                                             ; preds = %1176
  store i32 0, ptr %4, align 4, !tbaa !5
  %1179 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1179, ptr %6, align 4, !tbaa !5
  br i1 %944, label %1221, label %1180

1180:                                             ; preds = %1178, %1208
  %1181 = phi i64 [ %1212, %1208 ], [ 1, %1178 ]
  %1182 = getelementptr inbounds i32, ptr %4, i64 %1181
  %1183 = load i32, ptr %1182, align 4, !tbaa !5
  %1184 = getelementptr inbounds i32, ptr %12, i64 %1181
  %1185 = load i32, ptr %1184, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1183, %1186
  br i1 %1187, label %1188, label %1206

1188:                                             ; preds = %1180
  br i1 %1175, label %1198, label %1189

1189:                                             ; preds = %1188
  %1190 = shl i64 %1181, 32
  %1191 = add i64 %1190, -4294967296
  %1192 = ashr exact i64 %1191, 32
  %1193 = getelementptr inbounds i32, ptr %7, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !5
  %1195 = getelementptr inbounds i32, ptr %6, i64 %1181
  %1196 = load i32, ptr %1195, align 4, !tbaa !5
  %1197 = add nsw i32 %1196, %1194
  store i32 %1197, ptr %1195, align 4, !tbaa !5
  br label %1216

1198:                                             ; preds = %1171, %1188
  %1199 = phi i32 [ %1183, %1188 ], [ %1172, %1171 ]
  %1200 = phi ptr [ %1182, %1188 ], [ %4, %1171 ]
  %1201 = phi i64 [ %1181, %1188 ], [ 0, %1171 ]
  %1202 = add nsw i32 %1199, 1
  store i32 %1202, ptr %1200, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %7, i64 %1201
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %6, i64 %1201
  br label %1216

1206:                                             ; preds = %1180
  %1207 = icmp eq i32 %1183, %1186
  br i1 %1207, label %1208, label %1214

1208:                                             ; preds = %1206
  store i32 0, ptr %1182, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %8, i64 %1181
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1181
  store i32 %1210, ptr %1211, align 4, !tbaa !5
  %1212 = add nuw nsw i64 %1181, 1
  %1213 = icmp eq i64 %1212, %942
  br i1 %1213, label %1221, label %1180, !llvm.loop !522

1214:                                             ; preds = %1176, %1206
  %1215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1216:                                             ; preds = %1189, %1198
  %1217 = phi ptr [ %1205, %1198 ], [ %1182, %1189 ]
  %1218 = phi i32 [ %1204, %1198 ], [ 1, %1189 ]
  %1219 = load i32, ptr %1217, align 4, !tbaa !5
  %1220 = add nsw i32 %1219, %1218
  store i32 %1220, ptr %1217, align 4, !tbaa !5
  br label %1221

1221:                                             ; preds = %1208, %1216, %1178, %1163
  %1222 = icmp eq i32 %1170, %5
  br i1 %1222, label %3030, label %1086, !llvm.loop !523

1223:                                             ; preds = %633
  %1224 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3030

1225:                                             ; preds = %18
  %1226 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1227 = load ptr, ptr %1226, align 8, !tbaa !9
  %1228 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1229 = load ptr, ptr %1228, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1229, align 8, !tbaa !18
  %1230 = icmp eq i32 %13, 0
  br i1 %1230, label %1231, label %1234

1231:                                             ; preds = %1225
  %1232 = load i16, ptr %1227, align 2, !tbaa !78
  %1233 = sitofp i16 %1232 to double
  store double %1233, ptr %1229, align 8, !tbaa !18
  br label %3030

1234:                                             ; preds = %1225
  switch i32 %1, label %1822 [
    i32 1, label %1235
    i32 0, label %1530
  ]

1235:                                             ; preds = %1234
  %1236 = getelementptr inbounds i32, ptr %3, i64 %19
  %1237 = load i32, ptr %1236, align 4, !tbaa !5
  %1238 = icmp eq i32 %1237, 0
  %1239 = icmp sgt i32 %5, 0
  br i1 %1238, label %1249, label %1240

1240:                                             ; preds = %1235
  br i1 %1239, label %1241, label %3030

1241:                                             ; preds = %1240
  %1242 = icmp sgt i32 %13, 1
  %1243 = icmp sgt i32 %13, 0
  %1244 = add i32 %13, -2
  %1245 = zext i32 %1244 to i64
  %1246 = zext i32 %13 to i64
  %1247 = add nuw i32 %5, 1
  %1248 = icmp eq i32 %13, 1
  br label %1393

1249:                                             ; preds = %1235
  br i1 %1239, label %1250, label %3030

1250:                                             ; preds = %1249
  %1251 = icmp sgt i32 %13, 1
  %1252 = icmp sgt i32 %13, 0
  %1253 = add i32 %13, -2
  %1254 = zext i32 %1253 to i64
  %1255 = zext i32 %13 to i64
  %1256 = add nuw i32 %5, 1
  %1257 = icmp eq i32 %13, 1
  br label %1258

1258:                                             ; preds = %1250, %1391
  %1259 = phi double [ 0.000000e+00, %1250 ], [ %1341, %1391 ]
  %1260 = phi i32 [ 0, %1250 ], [ %1343, %1391 ]
  %1261 = phi double [ 0.000000e+00, %1250 ], [ %1342, %1391 ]
  %1262 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1251, label %1263, label %1332

1263:                                             ; preds = %1258, %1322
  %1264 = phi i32 [ %1331, %1322 ], [ 0, %1258 ]
  %1265 = phi i64 [ %1273, %1322 ], [ %1255, %1258 ]
  %1266 = phi i64 [ %1330, %1322 ], [ %1254, %1258 ]
  %1267 = phi i32 [ %1328, %1322 ], [ %1262, %1258 ]
  %1268 = sub i32 %1253, %1264
  %1269 = tail call i32 @llvm.smin.i32(i32 %1268, i32 0)
  %1270 = sub i32 %1268, %1269
  %1271 = zext i32 %1270 to i64
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = add nsw i64 %1265, -1
  %1274 = icmp ult i32 %1270, 31
  br i1 %1274, label %1310, label %1275

1275:                                             ; preds = %1263
  %1276 = and i64 %1272, 8589934560
  %1277 = sub i64 %1266, %1276
  br label %1278

1278:                                             ; preds = %1278, %1275
  %1279 = phi i64 [ 0, %1275 ], [ %1302, %1278 ]
  %1280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1298, %1278 ]
  %1281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1299, %1278 ]
  %1282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1300, %1278 ]
  %1283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1301, %1278 ]
  %1284 = sub i64 %1266, %1279
  %1285 = getelementptr inbounds i32, ptr %9, i64 %1284
  %1286 = getelementptr inbounds i32, ptr %1285, i64 -7
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = getelementptr inbounds i32, ptr %1285, i64 -15
  %1290 = load <8 x i32>, ptr %1289, align 4, !tbaa !5
  %1291 = shufflevector <8 x i32> %1290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1292 = getelementptr inbounds i32, ptr %1285, i64 -23
  %1293 = load <8 x i32>, ptr %1292, align 4, !tbaa !5
  %1294 = shufflevector <8 x i32> %1293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1295 = getelementptr inbounds i32, ptr %1285, i64 -31
  %1296 = load <8 x i32>, ptr %1295, align 4, !tbaa !5
  %1297 = shufflevector <8 x i32> %1296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1298 = mul <8 x i32> %1288, %1280
  %1299 = mul <8 x i32> %1291, %1281
  %1300 = mul <8 x i32> %1294, %1282
  %1301 = mul <8 x i32> %1297, %1283
  %1302 = add nuw i64 %1279, 32
  %1303 = icmp eq i64 %1302, %1276
  br i1 %1303, label %1304, label %1278, !llvm.loop !524

1304:                                             ; preds = %1278
  %1305 = mul <8 x i32> %1299, %1298
  %1306 = mul <8 x i32> %1300, %1305
  %1307 = mul <8 x i32> %1301, %1306
  %1308 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1307)
  %1309 = icmp eq i64 %1272, %1276
  br i1 %1309, label %1322, label %1310

1310:                                             ; preds = %1263, %1304
  %1311 = phi i64 [ %1266, %1263 ], [ %1277, %1304 ]
  %1312 = phi i32 [ 1, %1263 ], [ %1308, %1304 ]
  br label %1313

1313:                                             ; preds = %1310, %1313
  %1314 = phi i64 [ %1319, %1313 ], [ %1311, %1310 ]
  %1315 = phi i32 [ %1318, %1313 ], [ %1312, %1310 ]
  %1316 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1315
  %1319 = add nsw i64 %1314, -1
  %1320 = trunc i64 %1314 to i32
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1313, label %1322, !llvm.loop !525

1322:                                             ; preds = %1313, %1304
  %1323 = phi i32 [ %1308, %1304 ], [ %1318, %1313 ]
  %1324 = and i64 %1273, 4294967295
  %1325 = getelementptr inbounds i32, ptr %6, i64 %1324
  %1326 = load i32, ptr %1325, align 4, !tbaa !5
  %1327 = mul nsw i32 %1326, %1323
  %1328 = add nsw i32 %1327, %1267
  %1329 = icmp sgt i64 %1265, 2
  %1330 = add nsw i64 %1266, -1
  %1331 = add i32 %1264, 1
  br i1 %1329, label %1263, label %1332, !llvm.loop !526

1332:                                             ; preds = %1322, %1258
  %1333 = phi i32 [ %1262, %1258 ], [ %1328, %1322 ]
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds double, ptr %2, i64 %1334
  %1336 = load double, ptr %1335, align 8, !tbaa !18
  %1337 = getelementptr inbounds i16, ptr %1227, i64 %1334
  %1338 = load i16, ptr %1337, align 2, !tbaa !78
  %1339 = sitofp i16 %1338 to double
  %1340 = fmul fast double %1336, %1339
  %1341 = fadd fast double %1340, %1259
  store double %1341, ptr %1229, align 8, !tbaa !18
  %1342 = fadd fast double %1336, %1261
  %1343 = add nuw nsw i32 %1260, 1
  br i1 %1252, label %1344, label %1391

1344:                                             ; preds = %1332
  %1345 = load i32, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %12, align 4, !tbaa !5
  %1347 = add nsw i32 %1346, -1
  %1348 = icmp slt i32 %1345, %1347
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1344
  %1350 = icmp eq i32 %1345, %1347
  br i1 %1350, label %1351, label %1384

1351:                                             ; preds = %1349
  store i32 0, ptr %4, align 4, !tbaa !5
  %1352 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1352, ptr %6, align 4, !tbaa !5
  br i1 %1257, label %1391, label %1353

1353:                                             ; preds = %1351, %1378
  %1354 = phi i64 [ %1382, %1378 ], [ 1, %1351 ]
  %1355 = getelementptr inbounds i32, ptr %4, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = getelementptr inbounds i32, ptr %12, i64 %1354
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = add nsw i32 %1358, -1
  %1360 = icmp slt i32 %1356, %1359
  br i1 %1360, label %1361, label %1376

1361:                                             ; preds = %1353
  br i1 %1348, label %1368, label %1362

1362:                                             ; preds = %1361
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1354
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, %1364
  store i32 %1367, ptr %1365, align 4, !tbaa !5
  br label %1386

1368:                                             ; preds = %1344, %1361
  %1369 = phi i32 [ %1356, %1361 ], [ %1345, %1344 ]
  %1370 = phi ptr [ %1355, %1361 ], [ %4, %1344 ]
  %1371 = phi i64 [ %1354, %1361 ], [ 0, %1344 ]
  %1372 = add nsw i32 %1369, 1
  store i32 %1372, ptr %1370, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1371
  br label %1386

1376:                                             ; preds = %1353
  %1377 = icmp eq i32 %1356, %1359
  br i1 %1377, label %1378, label %1384

1378:                                             ; preds = %1376
  store i32 0, ptr %1355, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %8, i64 %1354
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1354
  store i32 %1380, ptr %1381, align 4, !tbaa !5
  %1382 = add nuw nsw i64 %1354, 1
  %1383 = icmp eq i64 %1382, %1255
  br i1 %1383, label %1391, label %1353, !llvm.loop !527

1384:                                             ; preds = %1349, %1376
  %1385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1386:                                             ; preds = %1362, %1368
  %1387 = phi ptr [ %1375, %1368 ], [ %1355, %1362 ]
  %1388 = phi i32 [ %1374, %1368 ], [ 1, %1362 ]
  %1389 = load i32, ptr %1387, align 4, !tbaa !5
  %1390 = add nsw i32 %1389, %1388
  store i32 %1390, ptr %1387, align 4, !tbaa !5
  br label %1391

1391:                                             ; preds = %1378, %1386, %1351, %1332
  %1392 = icmp eq i32 %1343, %5
  br i1 %1392, label %3030, label %1258, !llvm.loop !528

1393:                                             ; preds = %1241, %1528
  %1394 = phi double [ 0.000000e+00, %1241 ], [ %1476, %1528 ]
  %1395 = phi i32 [ 0, %1241 ], [ %1477, %1528 ]
  %1396 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1242, label %1397, label %1466

1397:                                             ; preds = %1393, %1456
  %1398 = phi i32 [ %1465, %1456 ], [ 0, %1393 ]
  %1399 = phi i64 [ %1407, %1456 ], [ %1246, %1393 ]
  %1400 = phi i64 [ %1464, %1456 ], [ %1245, %1393 ]
  %1401 = phi i32 [ %1462, %1456 ], [ %1396, %1393 ]
  %1402 = sub i32 %1244, %1398
  %1403 = tail call i32 @llvm.smin.i32(i32 %1402, i32 0)
  %1404 = sub i32 %1402, %1403
  %1405 = zext i32 %1404 to i64
  %1406 = add nuw nsw i64 %1405, 1
  %1407 = add nsw i64 %1399, -1
  %1408 = icmp ult i32 %1404, 31
  br i1 %1408, label %1444, label %1409

1409:                                             ; preds = %1397
  %1410 = and i64 %1406, 8589934560
  %1411 = sub i64 %1400, %1410
  br label %1412

1412:                                             ; preds = %1412, %1409
  %1413 = phi i64 [ 0, %1409 ], [ %1436, %1412 ]
  %1414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1409 ], [ %1432, %1412 ]
  %1415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1409 ], [ %1433, %1412 ]
  %1416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1409 ], [ %1434, %1412 ]
  %1417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1409 ], [ %1435, %1412 ]
  %1418 = sub i64 %1400, %1413
  %1419 = getelementptr inbounds i32, ptr %11, i64 %1418
  %1420 = getelementptr inbounds i32, ptr %1419, i64 -7
  %1421 = load <8 x i32>, ptr %1420, align 4, !tbaa !5
  %1422 = shufflevector <8 x i32> %1421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1423 = getelementptr inbounds i32, ptr %1419, i64 -15
  %1424 = load <8 x i32>, ptr %1423, align 4, !tbaa !5
  %1425 = shufflevector <8 x i32> %1424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1426 = getelementptr inbounds i32, ptr %1419, i64 -23
  %1427 = load <8 x i32>, ptr %1426, align 4, !tbaa !5
  %1428 = shufflevector <8 x i32> %1427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1429 = getelementptr inbounds i32, ptr %1419, i64 -31
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = mul <8 x i32> %1422, %1414
  %1433 = mul <8 x i32> %1425, %1415
  %1434 = mul <8 x i32> %1428, %1416
  %1435 = mul <8 x i32> %1431, %1417
  %1436 = add nuw i64 %1413, 32
  %1437 = icmp eq i64 %1436, %1410
  br i1 %1437, label %1438, label %1412, !llvm.loop !529

1438:                                             ; preds = %1412
  %1439 = mul <8 x i32> %1433, %1432
  %1440 = mul <8 x i32> %1434, %1439
  %1441 = mul <8 x i32> %1435, %1440
  %1442 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1441)
  %1443 = icmp eq i64 %1406, %1410
  br i1 %1443, label %1456, label %1444

1444:                                             ; preds = %1397, %1438
  %1445 = phi i64 [ %1400, %1397 ], [ %1411, %1438 ]
  %1446 = phi i32 [ 1, %1397 ], [ %1442, %1438 ]
  br label %1447

1447:                                             ; preds = %1444, %1447
  %1448 = phi i64 [ %1453, %1447 ], [ %1445, %1444 ]
  %1449 = phi i32 [ %1452, %1447 ], [ %1446, %1444 ]
  %1450 = getelementptr inbounds i32, ptr %11, i64 %1448
  %1451 = load i32, ptr %1450, align 4, !tbaa !5
  %1452 = mul nsw i32 %1451, %1449
  %1453 = add nsw i64 %1448, -1
  %1454 = trunc i64 %1448 to i32
  %1455 = icmp sgt i32 %1454, 0
  br i1 %1455, label %1447, label %1456, !llvm.loop !530

1456:                                             ; preds = %1447, %1438
  %1457 = phi i32 [ %1442, %1438 ], [ %1452, %1447 ]
  %1458 = and i64 %1407, 4294967295
  %1459 = getelementptr inbounds i32, ptr %6, i64 %1458
  %1460 = load i32, ptr %1459, align 4, !tbaa !5
  %1461 = mul nsw i32 %1460, %1457
  %1462 = add nsw i32 %1461, %1401
  %1463 = icmp sgt i64 %1399, 2
  %1464 = add nsw i64 %1400, -1
  %1465 = add i32 %1398, 1
  br i1 %1463, label %1397, label %1466, !llvm.loop !531

1466:                                             ; preds = %1456, %1393
  %1467 = phi i32 [ %1396, %1393 ], [ %1462, %1456 ]
  %1468 = icmp slt i32 %1467, %5
  br i1 %1468, label %1471, label %1469

1469:                                             ; preds = %1466
  %1470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

1471:                                             ; preds = %1466
  %1472 = sext i32 %1467 to i64
  %1473 = getelementptr inbounds i16, ptr %1227, i64 %1472
  %1474 = load i16, ptr %1473, align 2, !tbaa !78
  %1475 = sitofp i16 %1474 to double
  %1476 = fadd fast double %1394, %1475
  store double %1476, ptr %1229, align 8, !tbaa !18
  %1477 = add nuw nsw i32 %1395, 1
  br i1 %1243, label %1478, label %1528

1478:                                             ; preds = %1471
  %1479 = load i32, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %12, align 4, !tbaa !5
  %1481 = add nsw i32 %1480, -1
  %1482 = icmp slt i32 %1479, %1481
  br i1 %1482, label %1505, label %1483

1483:                                             ; preds = %1478
  %1484 = icmp eq i32 %1479, %1481
  br i1 %1484, label %1485, label %1521

1485:                                             ; preds = %1483
  store i32 0, ptr %4, align 4, !tbaa !5
  %1486 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1486, ptr %6, align 4, !tbaa !5
  br i1 %1248, label %1528, label %1487

1487:                                             ; preds = %1485, %1515
  %1488 = phi i64 [ %1519, %1515 ], [ 1, %1485 ]
  %1489 = getelementptr inbounds i32, ptr %4, i64 %1488
  %1490 = load i32, ptr %1489, align 4, !tbaa !5
  %1491 = getelementptr inbounds i32, ptr %12, i64 %1488
  %1492 = load i32, ptr %1491, align 4, !tbaa !5
  %1493 = add nsw i32 %1492, -1
  %1494 = icmp slt i32 %1490, %1493
  br i1 %1494, label %1495, label %1513

1495:                                             ; preds = %1487
  br i1 %1482, label %1505, label %1496

1496:                                             ; preds = %1495
  %1497 = shl i64 %1488, 32
  %1498 = add i64 %1497, -4294967296
  %1499 = ashr exact i64 %1498, 32
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1499
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1488
  %1503 = load i32, ptr %1502, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, %1501
  store i32 %1504, ptr %1502, align 4, !tbaa !5
  br label %1523

1505:                                             ; preds = %1478, %1495
  %1506 = phi i32 [ %1490, %1495 ], [ %1479, %1478 ]
  %1507 = phi ptr [ %1489, %1495 ], [ %4, %1478 ]
  %1508 = phi i64 [ %1488, %1495 ], [ 0, %1478 ]
  %1509 = add nsw i32 %1506, 1
  store i32 %1509, ptr %1507, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %7, i64 %1508
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1508
  br label %1523

1513:                                             ; preds = %1487
  %1514 = icmp eq i32 %1490, %1493
  br i1 %1514, label %1515, label %1521

1515:                                             ; preds = %1513
  store i32 0, ptr %1489, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %8, i64 %1488
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = getelementptr inbounds i32, ptr %6, i64 %1488
  store i32 %1517, ptr %1518, align 4, !tbaa !5
  %1519 = add nuw nsw i64 %1488, 1
  %1520 = icmp eq i64 %1519, %1246
  br i1 %1520, label %1528, label %1487, !llvm.loop !532

1521:                                             ; preds = %1483, %1513
  %1522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1523:                                             ; preds = %1496, %1505
  %1524 = phi ptr [ %1512, %1505 ], [ %1489, %1496 ]
  %1525 = phi i32 [ %1511, %1505 ], [ 1, %1496 ]
  %1526 = load i32, ptr %1524, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1525
  store i32 %1527, ptr %1524, align 4, !tbaa !5
  br label %1528

1528:                                             ; preds = %1515, %1523, %1485, %1471
  %1529 = icmp eq i32 %1477, %5
  br i1 %1529, label %3030, label %1393, !llvm.loop !533

1530:                                             ; preds = %1234
  %1531 = getelementptr inbounds i32, ptr %3, i64 %19
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp sgt i32 %5, 0
  br i1 %1533, label %1544, label %1535

1535:                                             ; preds = %1530
  br i1 %1534, label %1536, label %3030

1536:                                             ; preds = %1535
  %1537 = icmp sgt i32 %13, 1
  %1538 = icmp sgt i32 %13, 0
  %1539 = add i32 %13, -2
  %1540 = zext i32 %1539 to i64
  %1541 = zext i32 %13 to i64
  %1542 = add nuw i32 %5, 1
  %1543 = icmp eq i32 %13, 1
  br label %1685

1544:                                             ; preds = %1530
  br i1 %1534, label %1545, label %3030

1545:                                             ; preds = %1544
  %1546 = icmp sgt i32 %13, 1
  %1547 = icmp sgt i32 %13, 0
  %1548 = add i32 %13, -2
  %1549 = zext i32 %1548 to i64
  %1550 = zext i32 %13 to i64
  %1551 = add nuw i32 %5, 1
  %1552 = icmp eq i32 %13, 1
  br label %1553

1553:                                             ; preds = %1545, %1683
  %1554 = phi double [ 0.000000e+00, %1545 ], [ %1633, %1683 ]
  %1555 = phi i32 [ 0, %1545 ], [ %1635, %1683 ]
  %1556 = phi double [ 0.000000e+00, %1545 ], [ %1634, %1683 ]
  %1557 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1558, label %1627

1558:                                             ; preds = %1553, %1617
  %1559 = phi i32 [ %1626, %1617 ], [ 0, %1553 ]
  %1560 = phi i64 [ %1568, %1617 ], [ %1550, %1553 ]
  %1561 = phi i64 [ %1625, %1617 ], [ %1549, %1553 ]
  %1562 = phi i32 [ %1623, %1617 ], [ %1557, %1553 ]
  %1563 = sub i32 %1548, %1559
  %1564 = tail call i32 @llvm.smin.i32(i32 %1563, i32 0)
  %1565 = sub i32 %1563, %1564
  %1566 = zext i32 %1565 to i64
  %1567 = add nuw nsw i64 %1566, 1
  %1568 = add nsw i64 %1560, -1
  %1569 = icmp ult i32 %1565, 31
  br i1 %1569, label %1605, label %1570

1570:                                             ; preds = %1558
  %1571 = and i64 %1567, 8589934560
  %1572 = sub i64 %1561, %1571
  br label %1573

1573:                                             ; preds = %1573, %1570
  %1574 = phi i64 [ 0, %1570 ], [ %1597, %1573 ]
  %1575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1570 ], [ %1593, %1573 ]
  %1576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1570 ], [ %1594, %1573 ]
  %1577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1570 ], [ %1595, %1573 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1570 ], [ %1596, %1573 ]
  %1579 = sub i64 %1561, %1574
  %1580 = getelementptr inbounds i32, ptr %9, i64 %1579
  %1581 = getelementptr inbounds i32, ptr %1580, i64 -7
  %1582 = load <8 x i32>, ptr %1581, align 4, !tbaa !5
  %1583 = shufflevector <8 x i32> %1582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1584 = getelementptr inbounds i32, ptr %1580, i64 -15
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !5
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1580, i64 -23
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !5
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1580, i64 -31
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = mul <8 x i32> %1583, %1575
  %1594 = mul <8 x i32> %1586, %1576
  %1595 = mul <8 x i32> %1589, %1577
  %1596 = mul <8 x i32> %1592, %1578
  %1597 = add nuw i64 %1574, 32
  %1598 = icmp eq i64 %1597, %1571
  br i1 %1598, label %1599, label %1573, !llvm.loop !534

1599:                                             ; preds = %1573
  %1600 = mul <8 x i32> %1594, %1593
  %1601 = mul <8 x i32> %1595, %1600
  %1602 = mul <8 x i32> %1596, %1601
  %1603 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1602)
  %1604 = icmp eq i64 %1567, %1571
  br i1 %1604, label %1617, label %1605

1605:                                             ; preds = %1558, %1599
  %1606 = phi i64 [ %1561, %1558 ], [ %1572, %1599 ]
  %1607 = phi i32 [ 1, %1558 ], [ %1603, %1599 ]
  br label %1608

1608:                                             ; preds = %1605, %1608
  %1609 = phi i64 [ %1614, %1608 ], [ %1606, %1605 ]
  %1610 = phi i32 [ %1613, %1608 ], [ %1607, %1605 ]
  %1611 = getelementptr inbounds i32, ptr %9, i64 %1609
  %1612 = load i32, ptr %1611, align 4, !tbaa !5
  %1613 = mul nsw i32 %1612, %1610
  %1614 = add nsw i64 %1609, -1
  %1615 = trunc i64 %1609 to i32
  %1616 = icmp sgt i32 %1615, 0
  br i1 %1616, label %1608, label %1617, !llvm.loop !535

1617:                                             ; preds = %1608, %1599
  %1618 = phi i32 [ %1603, %1599 ], [ %1613, %1608 ]
  %1619 = and i64 %1568, 4294967295
  %1620 = getelementptr inbounds i32, ptr %6, i64 %1619
  %1621 = load i32, ptr %1620, align 4, !tbaa !5
  %1622 = mul nsw i32 %1621, %1618
  %1623 = add nsw i32 %1622, %1562
  %1624 = icmp sgt i64 %1560, 2
  %1625 = add nsw i64 %1561, -1
  %1626 = add i32 %1559, 1
  br i1 %1624, label %1558, label %1627, !llvm.loop !536

1627:                                             ; preds = %1617, %1553
  %1628 = phi i32 [ %1557, %1553 ], [ %1623, %1617 ]
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds i16, ptr %1227, i64 %1629
  %1631 = load i16, ptr %1630, align 2, !tbaa !78
  %1632 = sitofp i16 %1631 to double
  %1633 = fadd fast double %1554, %1632
  %1634 = fadd fast double %1556, 1.000000e+00
  %1635 = add nuw nsw i32 %1555, 1
  br i1 %1547, label %1636, label %1683

1636:                                             ; preds = %1627
  %1637 = load i32, ptr %4, align 4, !tbaa !5
  %1638 = load i32, ptr %12, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1637, %1639
  br i1 %1640, label %1660, label %1641

1641:                                             ; preds = %1636
  %1642 = icmp eq i32 %1637, %1639
  br i1 %1642, label %1643, label %1676

1643:                                             ; preds = %1641
  store i32 0, ptr %4, align 4, !tbaa !5
  %1644 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1644, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1683, label %1645

1645:                                             ; preds = %1643, %1670
  %1646 = phi i64 [ %1674, %1670 ], [ 1, %1643 ]
  %1647 = getelementptr inbounds i32, ptr %4, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %12, i64 %1646
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, -1
  %1652 = icmp slt i32 %1648, %1651
  br i1 %1652, label %1653, label %1668

1653:                                             ; preds = %1645
  br i1 %1640, label %1660, label %1654

1654:                                             ; preds = %1653
  %1655 = getelementptr inbounds i32, ptr %7, i64 %1646
  %1656 = load i32, ptr %1655, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = add nsw i32 %1658, %1656
  store i32 %1659, ptr %1657, align 4, !tbaa !5
  br label %1678

1660:                                             ; preds = %1636, %1653
  %1661 = phi i32 [ %1648, %1653 ], [ %1637, %1636 ]
  %1662 = phi ptr [ %1647, %1653 ], [ %4, %1636 ]
  %1663 = phi i64 [ %1646, %1653 ], [ 0, %1636 ]
  %1664 = add nsw i32 %1661, 1
  store i32 %1664, ptr %1662, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %7, i64 %1663
  %1666 = load i32, ptr %1665, align 4, !tbaa !5
  %1667 = getelementptr inbounds i32, ptr %6, i64 %1663
  br label %1678

1668:                                             ; preds = %1645
  %1669 = icmp eq i32 %1648, %1651
  br i1 %1669, label %1670, label %1676

1670:                                             ; preds = %1668
  store i32 0, ptr %1647, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %8, i64 %1646
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %6, i64 %1646
  store i32 %1672, ptr %1673, align 4, !tbaa !5
  %1674 = add nuw nsw i64 %1646, 1
  %1675 = icmp eq i64 %1674, %1550
  br i1 %1675, label %1683, label %1645, !llvm.loop !537

1676:                                             ; preds = %1641, %1668
  store double %1633, ptr %1229, align 8, !tbaa !18
  %1677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1678:                                             ; preds = %1654, %1660
  %1679 = phi ptr [ %1667, %1660 ], [ %1647, %1654 ]
  %1680 = phi i32 [ %1666, %1660 ], [ 1, %1654 ]
  %1681 = load i32, ptr %1679, align 4, !tbaa !5
  %1682 = add nsw i32 %1681, %1680
  store i32 %1682, ptr %1679, align 4, !tbaa !5
  br label %1683

1683:                                             ; preds = %1670, %1678, %1643, %1627
  %1684 = icmp eq i32 %1635, %5
  br i1 %1684, label %3026, label %1553, !llvm.loop !538

1685:                                             ; preds = %1536, %1820
  %1686 = phi double [ 0.000000e+00, %1536 ], [ %1768, %1820 ]
  %1687 = phi i32 [ 0, %1536 ], [ %1769, %1820 ]
  %1688 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1689, label %1758

1689:                                             ; preds = %1685, %1748
  %1690 = phi i32 [ %1757, %1748 ], [ 0, %1685 ]
  %1691 = phi i64 [ %1699, %1748 ], [ %1541, %1685 ]
  %1692 = phi i64 [ %1756, %1748 ], [ %1540, %1685 ]
  %1693 = phi i32 [ %1754, %1748 ], [ %1688, %1685 ]
  %1694 = sub i32 %1539, %1690
  %1695 = tail call i32 @llvm.smin.i32(i32 %1694, i32 0)
  %1696 = sub i32 %1694, %1695
  %1697 = zext i32 %1696 to i64
  %1698 = add nuw nsw i64 %1697, 1
  %1699 = add nsw i64 %1691, -1
  %1700 = icmp ult i32 %1696, 31
  br i1 %1700, label %1736, label %1701

1701:                                             ; preds = %1689
  %1702 = and i64 %1698, 8589934560
  %1703 = sub i64 %1692, %1702
  br label %1704

1704:                                             ; preds = %1704, %1701
  %1705 = phi i64 [ 0, %1701 ], [ %1728, %1704 ]
  %1706 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1701 ], [ %1724, %1704 ]
  %1707 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1701 ], [ %1725, %1704 ]
  %1708 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1701 ], [ %1726, %1704 ]
  %1709 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1701 ], [ %1727, %1704 ]
  %1710 = sub i64 %1692, %1705
  %1711 = getelementptr inbounds i32, ptr %11, i64 %1710
  %1712 = getelementptr inbounds i32, ptr %1711, i64 -7
  %1713 = load <8 x i32>, ptr %1712, align 4, !tbaa !5
  %1714 = shufflevector <8 x i32> %1713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1715 = getelementptr inbounds i32, ptr %1711, i64 -15
  %1716 = load <8 x i32>, ptr %1715, align 4, !tbaa !5
  %1717 = shufflevector <8 x i32> %1716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1718 = getelementptr inbounds i32, ptr %1711, i64 -23
  %1719 = load <8 x i32>, ptr %1718, align 4, !tbaa !5
  %1720 = shufflevector <8 x i32> %1719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1721 = getelementptr inbounds i32, ptr %1711, i64 -31
  %1722 = load <8 x i32>, ptr %1721, align 4, !tbaa !5
  %1723 = shufflevector <8 x i32> %1722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1724 = mul <8 x i32> %1714, %1706
  %1725 = mul <8 x i32> %1717, %1707
  %1726 = mul <8 x i32> %1720, %1708
  %1727 = mul <8 x i32> %1723, %1709
  %1728 = add nuw i64 %1705, 32
  %1729 = icmp eq i64 %1728, %1702
  br i1 %1729, label %1730, label %1704, !llvm.loop !539

1730:                                             ; preds = %1704
  %1731 = mul <8 x i32> %1725, %1724
  %1732 = mul <8 x i32> %1726, %1731
  %1733 = mul <8 x i32> %1727, %1732
  %1734 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1733)
  %1735 = icmp eq i64 %1698, %1702
  br i1 %1735, label %1748, label %1736

1736:                                             ; preds = %1689, %1730
  %1737 = phi i64 [ %1692, %1689 ], [ %1703, %1730 ]
  %1738 = phi i32 [ 1, %1689 ], [ %1734, %1730 ]
  br label %1739

1739:                                             ; preds = %1736, %1739
  %1740 = phi i64 [ %1745, %1739 ], [ %1737, %1736 ]
  %1741 = phi i32 [ %1744, %1739 ], [ %1738, %1736 ]
  %1742 = getelementptr inbounds i32, ptr %11, i64 %1740
  %1743 = load i32, ptr %1742, align 4, !tbaa !5
  %1744 = mul nsw i32 %1743, %1741
  %1745 = add nsw i64 %1740, -1
  %1746 = trunc i64 %1740 to i32
  %1747 = icmp sgt i32 %1746, 0
  br i1 %1747, label %1739, label %1748, !llvm.loop !540

1748:                                             ; preds = %1739, %1730
  %1749 = phi i32 [ %1734, %1730 ], [ %1744, %1739 ]
  %1750 = and i64 %1699, 4294967295
  %1751 = getelementptr inbounds i32, ptr %6, i64 %1750
  %1752 = load i32, ptr %1751, align 4, !tbaa !5
  %1753 = mul nsw i32 %1752, %1749
  %1754 = add nsw i32 %1753, %1693
  %1755 = icmp sgt i64 %1691, 2
  %1756 = add nsw i64 %1692, -1
  %1757 = add i32 %1690, 1
  br i1 %1755, label %1689, label %1758, !llvm.loop !541

1758:                                             ; preds = %1748, %1685
  %1759 = phi i32 [ %1688, %1685 ], [ %1754, %1748 ]
  %1760 = icmp slt i32 %1759, %5
  br i1 %1760, label %1763, label %1761

1761:                                             ; preds = %1758
  %1762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

1763:                                             ; preds = %1758
  %1764 = sext i32 %1759 to i64
  %1765 = getelementptr inbounds i16, ptr %1227, i64 %1764
  %1766 = load i16, ptr %1765, align 2, !tbaa !78
  %1767 = sitofp i16 %1766 to double
  %1768 = fadd fast double %1686, %1767
  store double %1768, ptr %1229, align 8, !tbaa !18
  %1769 = add nuw nsw i32 %1687, 1
  br i1 %1538, label %1770, label %1820

1770:                                             ; preds = %1763
  %1771 = load i32, ptr %4, align 4, !tbaa !5
  %1772 = load i32, ptr %12, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1771, %1773
  br i1 %1774, label %1797, label %1775

1775:                                             ; preds = %1770
  %1776 = icmp eq i32 %1771, %1773
  br i1 %1776, label %1777, label %1813

1777:                                             ; preds = %1775
  store i32 0, ptr %4, align 4, !tbaa !5
  %1778 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1778, ptr %6, align 4, !tbaa !5
  br i1 %1543, label %1820, label %1779

1779:                                             ; preds = %1777, %1807
  %1780 = phi i64 [ %1811, %1807 ], [ 1, %1777 ]
  %1781 = getelementptr inbounds i32, ptr %4, i64 %1780
  %1782 = load i32, ptr %1781, align 4, !tbaa !5
  %1783 = getelementptr inbounds i32, ptr %12, i64 %1780
  %1784 = load i32, ptr %1783, align 4, !tbaa !5
  %1785 = add nsw i32 %1784, -1
  %1786 = icmp slt i32 %1782, %1785
  br i1 %1786, label %1787, label %1805

1787:                                             ; preds = %1779
  br i1 %1774, label %1797, label %1788

1788:                                             ; preds = %1787
  %1789 = shl i64 %1780, 32
  %1790 = add i64 %1789, -4294967296
  %1791 = ashr exact i64 %1790, 32
  %1792 = getelementptr inbounds i32, ptr %7, i64 %1791
  %1793 = load i32, ptr %1792, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %6, i64 %1780
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = add nsw i32 %1795, %1793
  store i32 %1796, ptr %1794, align 4, !tbaa !5
  br label %1815

1797:                                             ; preds = %1770, %1787
  %1798 = phi i32 [ %1782, %1787 ], [ %1771, %1770 ]
  %1799 = phi ptr [ %1781, %1787 ], [ %4, %1770 ]
  %1800 = phi i64 [ %1780, %1787 ], [ 0, %1770 ]
  %1801 = add nsw i32 %1798, 1
  store i32 %1801, ptr %1799, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %7, i64 %1800
  %1803 = load i32, ptr %1802, align 4, !tbaa !5
  %1804 = getelementptr inbounds i32, ptr %6, i64 %1800
  br label %1815

1805:                                             ; preds = %1779
  %1806 = icmp eq i32 %1782, %1785
  br i1 %1806, label %1807, label %1813

1807:                                             ; preds = %1805
  store i32 0, ptr %1781, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %8, i64 %1780
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1780
  store i32 %1809, ptr %1810, align 4, !tbaa !5
  %1811 = add nuw nsw i64 %1780, 1
  %1812 = icmp eq i64 %1811, %1541
  br i1 %1812, label %1820, label %1779, !llvm.loop !542

1813:                                             ; preds = %1775, %1805
  %1814 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1815:                                             ; preds = %1788, %1797
  %1816 = phi ptr [ %1804, %1797 ], [ %1781, %1788 ]
  %1817 = phi i32 [ %1803, %1797 ], [ 1, %1788 ]
  %1818 = load i32, ptr %1816, align 4, !tbaa !5
  %1819 = add nsw i32 %1818, %1817
  store i32 %1819, ptr %1816, align 4, !tbaa !5
  br label %1820

1820:                                             ; preds = %1807, %1815, %1777, %1763
  %1821 = icmp eq i32 %1769, %5
  br i1 %1821, label %3030, label %1685, !llvm.loop !543

1822:                                             ; preds = %1234
  %1823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3030

1824:                                             ; preds = %18
  %1825 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1826 = load ptr, ptr %1825, align 8, !tbaa !9
  %1827 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1828 = load ptr, ptr %1827, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1828, align 4, !tbaa !162
  %1829 = icmp eq i32 %13, 0
  br i1 %1829, label %1830, label %1833

1830:                                             ; preds = %1824
  %1831 = load i16, ptr %1826, align 2, !tbaa !78
  %1832 = sitofp i16 %1831 to float
  store float %1832, ptr %1828, align 4, !tbaa !162
  br label %3030

1833:                                             ; preds = %1824
  switch i32 %1, label %2425 [
    i32 1, label %1834
    i32 0, label %2133
  ]

1834:                                             ; preds = %1833
  %1835 = getelementptr inbounds i32, ptr %3, i64 %19
  %1836 = load i32, ptr %1835, align 4, !tbaa !5
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp sgt i32 %5, 0
  br i1 %1837, label %1848, label %1839

1839:                                             ; preds = %1834
  br i1 %1838, label %1840, label %3030

1840:                                             ; preds = %1839
  %1841 = icmp sgt i32 %13, 1
  %1842 = icmp sgt i32 %13, 0
  %1843 = add i32 %13, -2
  %1844 = zext i32 %1843 to i64
  %1845 = zext i32 %13 to i64
  %1846 = add nuw i32 %5, 1
  %1847 = icmp eq i32 %13, 1
  br label %1994

1848:                                             ; preds = %1834
  br i1 %1838, label %1849, label %3030

1849:                                             ; preds = %1848
  %1850 = icmp sgt i32 %13, 1
  %1851 = icmp sgt i32 %13, 0
  %1852 = add i32 %13, -2
  %1853 = zext i32 %1852 to i64
  %1854 = zext i32 %13 to i64
  %1855 = add nuw i32 %5, 1
  %1856 = icmp eq i32 %13, 1
  br label %1857

1857:                                             ; preds = %1849, %1992
  %1858 = phi float [ 0.000000e+00, %1849 ], [ %1942, %1992 ]
  %1859 = phi i32 [ 0, %1849 ], [ %1944, %1992 ]
  %1860 = phi double [ 0.000000e+00, %1849 ], [ %1943, %1992 ]
  %1861 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1850, label %1862, label %1931

1862:                                             ; preds = %1857, %1921
  %1863 = phi i32 [ %1930, %1921 ], [ 0, %1857 ]
  %1864 = phi i64 [ %1872, %1921 ], [ %1854, %1857 ]
  %1865 = phi i64 [ %1929, %1921 ], [ %1853, %1857 ]
  %1866 = phi i32 [ %1927, %1921 ], [ %1861, %1857 ]
  %1867 = sub i32 %1852, %1863
  %1868 = tail call i32 @llvm.smin.i32(i32 %1867, i32 0)
  %1869 = sub i32 %1867, %1868
  %1870 = zext i32 %1869 to i64
  %1871 = add nuw nsw i64 %1870, 1
  %1872 = add nsw i64 %1864, -1
  %1873 = icmp ult i32 %1869, 31
  br i1 %1873, label %1909, label %1874

1874:                                             ; preds = %1862
  %1875 = and i64 %1871, 8589934560
  %1876 = sub i64 %1865, %1875
  br label %1877

1877:                                             ; preds = %1877, %1874
  %1878 = phi i64 [ 0, %1874 ], [ %1901, %1877 ]
  %1879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1897, %1877 ]
  %1880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1898, %1877 ]
  %1881 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1899, %1877 ]
  %1882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1900, %1877 ]
  %1883 = sub i64 %1865, %1878
  %1884 = getelementptr inbounds i32, ptr %9, i64 %1883
  %1885 = getelementptr inbounds i32, ptr %1884, i64 -7
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = getelementptr inbounds i32, ptr %1884, i64 -15
  %1889 = load <8 x i32>, ptr %1888, align 4, !tbaa !5
  %1890 = shufflevector <8 x i32> %1889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1891 = getelementptr inbounds i32, ptr %1884, i64 -23
  %1892 = load <8 x i32>, ptr %1891, align 4, !tbaa !5
  %1893 = shufflevector <8 x i32> %1892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1894 = getelementptr inbounds i32, ptr %1884, i64 -31
  %1895 = load <8 x i32>, ptr %1894, align 4, !tbaa !5
  %1896 = shufflevector <8 x i32> %1895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1897 = mul <8 x i32> %1887, %1879
  %1898 = mul <8 x i32> %1890, %1880
  %1899 = mul <8 x i32> %1893, %1881
  %1900 = mul <8 x i32> %1896, %1882
  %1901 = add nuw i64 %1878, 32
  %1902 = icmp eq i64 %1901, %1875
  br i1 %1902, label %1903, label %1877, !llvm.loop !544

1903:                                             ; preds = %1877
  %1904 = mul <8 x i32> %1898, %1897
  %1905 = mul <8 x i32> %1899, %1904
  %1906 = mul <8 x i32> %1900, %1905
  %1907 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1906)
  %1908 = icmp eq i64 %1871, %1875
  br i1 %1908, label %1921, label %1909

1909:                                             ; preds = %1862, %1903
  %1910 = phi i64 [ %1865, %1862 ], [ %1876, %1903 ]
  %1911 = phi i32 [ 1, %1862 ], [ %1907, %1903 ]
  br label %1912

1912:                                             ; preds = %1909, %1912
  %1913 = phi i64 [ %1918, %1912 ], [ %1910, %1909 ]
  %1914 = phi i32 [ %1917, %1912 ], [ %1911, %1909 ]
  %1915 = getelementptr inbounds i32, ptr %9, i64 %1913
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1914
  %1918 = add nsw i64 %1913, -1
  %1919 = trunc i64 %1913 to i32
  %1920 = icmp sgt i32 %1919, 0
  br i1 %1920, label %1912, label %1921, !llvm.loop !545

1921:                                             ; preds = %1912, %1903
  %1922 = phi i32 [ %1907, %1903 ], [ %1917, %1912 ]
  %1923 = and i64 %1872, 4294967295
  %1924 = getelementptr inbounds i32, ptr %6, i64 %1923
  %1925 = load i32, ptr %1924, align 4, !tbaa !5
  %1926 = mul nsw i32 %1925, %1922
  %1927 = add nsw i32 %1926, %1866
  %1928 = icmp sgt i64 %1864, 2
  %1929 = add nsw i64 %1865, -1
  %1930 = add i32 %1863, 1
  br i1 %1928, label %1862, label %1931, !llvm.loop !546

1931:                                             ; preds = %1921, %1857
  %1932 = phi i32 [ %1861, %1857 ], [ %1927, %1921 ]
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds double, ptr %2, i64 %1933
  %1935 = load double, ptr %1934, align 8, !tbaa !18
  %1936 = getelementptr inbounds i16, ptr %1826, i64 %1933
  %1937 = load i16, ptr %1936, align 2, !tbaa !78
  %1938 = fpext float %1858 to double
  %1939 = sitofp i16 %1937 to double
  %1940 = fmul fast double %1935, %1939
  %1941 = fadd fast double %1940, %1938
  %1942 = fptrunc double %1941 to float
  %1943 = fadd fast double %1935, %1860
  %1944 = add nuw nsw i32 %1859, 1
  br i1 %1851, label %1945, label %1992

1945:                                             ; preds = %1931
  %1946 = load i32, ptr %4, align 4, !tbaa !5
  %1947 = load i32, ptr %12, align 4, !tbaa !5
  %1948 = add nsw i32 %1947, -1
  %1949 = icmp slt i32 %1946, %1948
  br i1 %1949, label %1969, label %1950

1950:                                             ; preds = %1945
  %1951 = icmp eq i32 %1946, %1948
  br i1 %1951, label %1952, label %1985

1952:                                             ; preds = %1950
  store i32 0, ptr %4, align 4, !tbaa !5
  %1953 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1953, ptr %6, align 4, !tbaa !5
  br i1 %1856, label %1992, label %1954

1954:                                             ; preds = %1952, %1979
  %1955 = phi i64 [ %1983, %1979 ], [ 1, %1952 ]
  %1956 = getelementptr inbounds i32, ptr %4, i64 %1955
  %1957 = load i32, ptr %1956, align 4, !tbaa !5
  %1958 = getelementptr inbounds i32, ptr %12, i64 %1955
  %1959 = load i32, ptr %1958, align 4, !tbaa !5
  %1960 = add nsw i32 %1959, -1
  %1961 = icmp slt i32 %1957, %1960
  br i1 %1961, label %1962, label %1977

1962:                                             ; preds = %1954
  br i1 %1949, label %1969, label %1963

1963:                                             ; preds = %1962
  %1964 = getelementptr inbounds i32, ptr %7, i64 %1955
  %1965 = load i32, ptr %1964, align 4, !tbaa !5
  %1966 = getelementptr inbounds i32, ptr %6, i64 %1955
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = add nsw i32 %1967, %1965
  store i32 %1968, ptr %1966, align 4, !tbaa !5
  br label %1987

1969:                                             ; preds = %1945, %1962
  %1970 = phi i32 [ %1957, %1962 ], [ %1946, %1945 ]
  %1971 = phi ptr [ %1956, %1962 ], [ %4, %1945 ]
  %1972 = phi i64 [ %1955, %1962 ], [ 0, %1945 ]
  %1973 = add nsw i32 %1970, 1
  store i32 %1973, ptr %1971, align 4, !tbaa !5
  %1974 = getelementptr inbounds i32, ptr %7, i64 %1972
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %6, i64 %1972
  br label %1987

1977:                                             ; preds = %1954
  %1978 = icmp eq i32 %1957, %1960
  br i1 %1978, label %1979, label %1985

1979:                                             ; preds = %1977
  store i32 0, ptr %1956, align 4, !tbaa !5
  %1980 = getelementptr inbounds i32, ptr %8, i64 %1955
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %6, i64 %1955
  store i32 %1981, ptr %1982, align 4, !tbaa !5
  %1983 = add nuw nsw i64 %1955, 1
  %1984 = icmp eq i64 %1983, %1854
  br i1 %1984, label %1992, label %1954, !llvm.loop !547

1985:                                             ; preds = %1950, %1977
  store float %1942, ptr %1828, align 4, !tbaa !162
  %1986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

1987:                                             ; preds = %1963, %1969
  %1988 = phi ptr [ %1976, %1969 ], [ %1956, %1963 ]
  %1989 = phi i32 [ %1975, %1969 ], [ 1, %1963 ]
  %1990 = load i32, ptr %1988, align 4, !tbaa !5
  %1991 = add nsw i32 %1990, %1989
  store i32 %1991, ptr %1988, align 4, !tbaa !5
  br label %1992

1992:                                             ; preds = %1979, %1987, %1952, %1931
  %1993 = icmp eq i32 %1944, %5
  br i1 %1993, label %3027, label %1857, !llvm.loop !548

1994:                                             ; preds = %1840, %2131
  %1995 = phi float [ 0.000000e+00, %1840 ], [ %2079, %2131 ]
  %1996 = phi i32 [ 0, %1840 ], [ %2080, %2131 ]
  %1997 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1841, label %1998, label %2067

1998:                                             ; preds = %1994, %2057
  %1999 = phi i32 [ %2066, %2057 ], [ 0, %1994 ]
  %2000 = phi i64 [ %2008, %2057 ], [ %1845, %1994 ]
  %2001 = phi i64 [ %2065, %2057 ], [ %1844, %1994 ]
  %2002 = phi i32 [ %2063, %2057 ], [ %1997, %1994 ]
  %2003 = sub i32 %1843, %1999
  %2004 = tail call i32 @llvm.smin.i32(i32 %2003, i32 0)
  %2005 = sub i32 %2003, %2004
  %2006 = zext i32 %2005 to i64
  %2007 = add nuw nsw i64 %2006, 1
  %2008 = add nsw i64 %2000, -1
  %2009 = icmp ult i32 %2005, 31
  br i1 %2009, label %2045, label %2010

2010:                                             ; preds = %1998
  %2011 = and i64 %2007, 8589934560
  %2012 = sub i64 %2001, %2011
  br label %2013

2013:                                             ; preds = %2013, %2010
  %2014 = phi i64 [ 0, %2010 ], [ %2037, %2013 ]
  %2015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2010 ], [ %2033, %2013 ]
  %2016 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2010 ], [ %2034, %2013 ]
  %2017 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2010 ], [ %2035, %2013 ]
  %2018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2010 ], [ %2036, %2013 ]
  %2019 = sub i64 %2001, %2014
  %2020 = getelementptr inbounds i32, ptr %11, i64 %2019
  %2021 = getelementptr inbounds i32, ptr %2020, i64 -7
  %2022 = load <8 x i32>, ptr %2021, align 4, !tbaa !5
  %2023 = shufflevector <8 x i32> %2022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2024 = getelementptr inbounds i32, ptr %2020, i64 -15
  %2025 = load <8 x i32>, ptr %2024, align 4, !tbaa !5
  %2026 = shufflevector <8 x i32> %2025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2027 = getelementptr inbounds i32, ptr %2020, i64 -23
  %2028 = load <8 x i32>, ptr %2027, align 4, !tbaa !5
  %2029 = shufflevector <8 x i32> %2028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2030 = getelementptr inbounds i32, ptr %2020, i64 -31
  %2031 = load <8 x i32>, ptr %2030, align 4, !tbaa !5
  %2032 = shufflevector <8 x i32> %2031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2033 = mul <8 x i32> %2023, %2015
  %2034 = mul <8 x i32> %2026, %2016
  %2035 = mul <8 x i32> %2029, %2017
  %2036 = mul <8 x i32> %2032, %2018
  %2037 = add nuw i64 %2014, 32
  %2038 = icmp eq i64 %2037, %2011
  br i1 %2038, label %2039, label %2013, !llvm.loop !549

2039:                                             ; preds = %2013
  %2040 = mul <8 x i32> %2034, %2033
  %2041 = mul <8 x i32> %2035, %2040
  %2042 = mul <8 x i32> %2036, %2041
  %2043 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2042)
  %2044 = icmp eq i64 %2007, %2011
  br i1 %2044, label %2057, label %2045

2045:                                             ; preds = %1998, %2039
  %2046 = phi i64 [ %2001, %1998 ], [ %2012, %2039 ]
  %2047 = phi i32 [ 1, %1998 ], [ %2043, %2039 ]
  br label %2048

2048:                                             ; preds = %2045, %2048
  %2049 = phi i64 [ %2054, %2048 ], [ %2046, %2045 ]
  %2050 = phi i32 [ %2053, %2048 ], [ %2047, %2045 ]
  %2051 = getelementptr inbounds i32, ptr %11, i64 %2049
  %2052 = load i32, ptr %2051, align 4, !tbaa !5
  %2053 = mul nsw i32 %2052, %2050
  %2054 = add nsw i64 %2049, -1
  %2055 = trunc i64 %2049 to i32
  %2056 = icmp sgt i32 %2055, 0
  br i1 %2056, label %2048, label %2057, !llvm.loop !550

2057:                                             ; preds = %2048, %2039
  %2058 = phi i32 [ %2043, %2039 ], [ %2053, %2048 ]
  %2059 = and i64 %2008, 4294967295
  %2060 = getelementptr inbounds i32, ptr %6, i64 %2059
  %2061 = load i32, ptr %2060, align 4, !tbaa !5
  %2062 = mul nsw i32 %2061, %2058
  %2063 = add nsw i32 %2062, %2002
  %2064 = icmp sgt i64 %2000, 2
  %2065 = add nsw i64 %2001, -1
  %2066 = add i32 %1999, 1
  br i1 %2064, label %1998, label %2067, !llvm.loop !551

2067:                                             ; preds = %2057, %1994
  %2068 = phi i32 [ %1997, %1994 ], [ %2063, %2057 ]
  %2069 = icmp slt i32 %2068, %5
  br i1 %2069, label %2072, label %2070

2070:                                             ; preds = %2067
  %2071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

2072:                                             ; preds = %2067
  %2073 = sext i32 %2068 to i64
  %2074 = getelementptr inbounds i16, ptr %1826, i64 %2073
  %2075 = load i16, ptr %2074, align 2, !tbaa !78
  %2076 = fpext float %1995 to double
  %2077 = sitofp i16 %2075 to double
  %2078 = fadd fast double %2076, %2077
  %2079 = fptrunc double %2078 to float
  store float %2079, ptr %1828, align 4, !tbaa !162
  %2080 = add nuw nsw i32 %1996, 1
  br i1 %1842, label %2081, label %2131

2081:                                             ; preds = %2072
  %2082 = load i32, ptr %4, align 4, !tbaa !5
  %2083 = load i32, ptr %12, align 4, !tbaa !5
  %2084 = add nsw i32 %2083, -1
  %2085 = icmp slt i32 %2082, %2084
  br i1 %2085, label %2108, label %2086

2086:                                             ; preds = %2081
  %2087 = icmp eq i32 %2082, %2084
  br i1 %2087, label %2088, label %2124

2088:                                             ; preds = %2086
  store i32 0, ptr %4, align 4, !tbaa !5
  %2089 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2089, ptr %6, align 4, !tbaa !5
  br i1 %1847, label %2131, label %2090

2090:                                             ; preds = %2088, %2118
  %2091 = phi i64 [ %2122, %2118 ], [ 1, %2088 ]
  %2092 = getelementptr inbounds i32, ptr %4, i64 %2091
  %2093 = load i32, ptr %2092, align 4, !tbaa !5
  %2094 = getelementptr inbounds i32, ptr %12, i64 %2091
  %2095 = load i32, ptr %2094, align 4, !tbaa !5
  %2096 = add nsw i32 %2095, -1
  %2097 = icmp slt i32 %2093, %2096
  br i1 %2097, label %2098, label %2116

2098:                                             ; preds = %2090
  br i1 %2085, label %2108, label %2099

2099:                                             ; preds = %2098
  %2100 = shl i64 %2091, 32
  %2101 = add i64 %2100, -4294967296
  %2102 = ashr exact i64 %2101, 32
  %2103 = getelementptr inbounds i32, ptr %7, i64 %2102
  %2104 = load i32, ptr %2103, align 4, !tbaa !5
  %2105 = getelementptr inbounds i32, ptr %6, i64 %2091
  %2106 = load i32, ptr %2105, align 4, !tbaa !5
  %2107 = add nsw i32 %2106, %2104
  store i32 %2107, ptr %2105, align 4, !tbaa !5
  br label %2126

2108:                                             ; preds = %2081, %2098
  %2109 = phi i32 [ %2093, %2098 ], [ %2082, %2081 ]
  %2110 = phi ptr [ %2092, %2098 ], [ %4, %2081 ]
  %2111 = phi i64 [ %2091, %2098 ], [ 0, %2081 ]
  %2112 = add nsw i32 %2109, 1
  store i32 %2112, ptr %2110, align 4, !tbaa !5
  %2113 = getelementptr inbounds i32, ptr %7, i64 %2111
  %2114 = load i32, ptr %2113, align 4, !tbaa !5
  %2115 = getelementptr inbounds i32, ptr %6, i64 %2111
  br label %2126

2116:                                             ; preds = %2090
  %2117 = icmp eq i32 %2093, %2096
  br i1 %2117, label %2118, label %2124

2118:                                             ; preds = %2116
  store i32 0, ptr %2092, align 4, !tbaa !5
  %2119 = getelementptr inbounds i32, ptr %8, i64 %2091
  %2120 = load i32, ptr %2119, align 4, !tbaa !5
  %2121 = getelementptr inbounds i32, ptr %6, i64 %2091
  store i32 %2120, ptr %2121, align 4, !tbaa !5
  %2122 = add nuw nsw i64 %2091, 1
  %2123 = icmp eq i64 %2122, %1845
  br i1 %2123, label %2131, label %2090, !llvm.loop !552

2124:                                             ; preds = %2086, %2116
  %2125 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2126:                                             ; preds = %2099, %2108
  %2127 = phi ptr [ %2115, %2108 ], [ %2092, %2099 ]
  %2128 = phi i32 [ %2114, %2108 ], [ 1, %2099 ]
  %2129 = load i32, ptr %2127, align 4, !tbaa !5
  %2130 = add nsw i32 %2129, %2128
  store i32 %2130, ptr %2127, align 4, !tbaa !5
  br label %2131

2131:                                             ; preds = %2118, %2126, %2088, %2072
  %2132 = icmp eq i32 %2080, %5
  br i1 %2132, label %3030, label %1994, !llvm.loop !553

2133:                                             ; preds = %1833
  %2134 = getelementptr inbounds i32, ptr %3, i64 %19
  %2135 = load i32, ptr %2134, align 4, !tbaa !5
  %2136 = icmp eq i32 %2135, 0
  %2137 = icmp sgt i32 %5, 0
  br i1 %2136, label %2147, label %2138

2138:                                             ; preds = %2133
  br i1 %2137, label %2139, label %3030

2139:                                             ; preds = %2138
  %2140 = icmp sgt i32 %13, 1
  %2141 = icmp sgt i32 %13, 0
  %2142 = add i32 %13, -2
  %2143 = zext i32 %2142 to i64
  %2144 = zext i32 %13 to i64
  %2145 = add nuw i32 %5, 1
  %2146 = icmp eq i32 %13, 1
  br label %2288

2147:                                             ; preds = %2133
  br i1 %2137, label %2148, label %3030

2148:                                             ; preds = %2147
  %2149 = icmp sgt i32 %13, 1
  %2150 = icmp sgt i32 %13, 0
  %2151 = add i32 %13, -2
  %2152 = zext i32 %2151 to i64
  %2153 = zext i32 %13 to i64
  %2154 = add nuw i32 %5, 1
  %2155 = icmp eq i32 %13, 1
  br label %2156

2156:                                             ; preds = %2148, %2286
  %2157 = phi float [ 0.000000e+00, %2148 ], [ %2236, %2286 ]
  %2158 = phi i32 [ 0, %2148 ], [ %2238, %2286 ]
  %2159 = phi double [ 0.000000e+00, %2148 ], [ %2237, %2286 ]
  %2160 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2149, label %2161, label %2230

2161:                                             ; preds = %2156, %2220
  %2162 = phi i32 [ %2229, %2220 ], [ 0, %2156 ]
  %2163 = phi i64 [ %2171, %2220 ], [ %2153, %2156 ]
  %2164 = phi i64 [ %2228, %2220 ], [ %2152, %2156 ]
  %2165 = phi i32 [ %2226, %2220 ], [ %2160, %2156 ]
  %2166 = sub i32 %2151, %2162
  %2167 = tail call i32 @llvm.smin.i32(i32 %2166, i32 0)
  %2168 = sub i32 %2166, %2167
  %2169 = zext i32 %2168 to i64
  %2170 = add nuw nsw i64 %2169, 1
  %2171 = add nsw i64 %2163, -1
  %2172 = icmp ult i32 %2168, 31
  br i1 %2172, label %2208, label %2173

2173:                                             ; preds = %2161
  %2174 = and i64 %2170, 8589934560
  %2175 = sub i64 %2164, %2174
  br label %2176

2176:                                             ; preds = %2176, %2173
  %2177 = phi i64 [ 0, %2173 ], [ %2200, %2176 ]
  %2178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2173 ], [ %2196, %2176 ]
  %2179 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2173 ], [ %2197, %2176 ]
  %2180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2173 ], [ %2198, %2176 ]
  %2181 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2173 ], [ %2199, %2176 ]
  %2182 = sub i64 %2164, %2177
  %2183 = getelementptr inbounds i32, ptr %9, i64 %2182
  %2184 = getelementptr inbounds i32, ptr %2183, i64 -7
  %2185 = load <8 x i32>, ptr %2184, align 4, !tbaa !5
  %2186 = shufflevector <8 x i32> %2185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2187 = getelementptr inbounds i32, ptr %2183, i64 -15
  %2188 = load <8 x i32>, ptr %2187, align 4, !tbaa !5
  %2189 = shufflevector <8 x i32> %2188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2190 = getelementptr inbounds i32, ptr %2183, i64 -23
  %2191 = load <8 x i32>, ptr %2190, align 4, !tbaa !5
  %2192 = shufflevector <8 x i32> %2191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2193 = getelementptr inbounds i32, ptr %2183, i64 -31
  %2194 = load <8 x i32>, ptr %2193, align 4, !tbaa !5
  %2195 = shufflevector <8 x i32> %2194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2196 = mul <8 x i32> %2186, %2178
  %2197 = mul <8 x i32> %2189, %2179
  %2198 = mul <8 x i32> %2192, %2180
  %2199 = mul <8 x i32> %2195, %2181
  %2200 = add nuw i64 %2177, 32
  %2201 = icmp eq i64 %2200, %2174
  br i1 %2201, label %2202, label %2176, !llvm.loop !554

2202:                                             ; preds = %2176
  %2203 = mul <8 x i32> %2197, %2196
  %2204 = mul <8 x i32> %2198, %2203
  %2205 = mul <8 x i32> %2199, %2204
  %2206 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2205)
  %2207 = icmp eq i64 %2170, %2174
  br i1 %2207, label %2220, label %2208

2208:                                             ; preds = %2161, %2202
  %2209 = phi i64 [ %2164, %2161 ], [ %2175, %2202 ]
  %2210 = phi i32 [ 1, %2161 ], [ %2206, %2202 ]
  br label %2211

2211:                                             ; preds = %2208, %2211
  %2212 = phi i64 [ %2217, %2211 ], [ %2209, %2208 ]
  %2213 = phi i32 [ %2216, %2211 ], [ %2210, %2208 ]
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2212
  %2215 = load i32, ptr %2214, align 4, !tbaa !5
  %2216 = mul nsw i32 %2215, %2213
  %2217 = add nsw i64 %2212, -1
  %2218 = trunc i64 %2212 to i32
  %2219 = icmp sgt i32 %2218, 0
  br i1 %2219, label %2211, label %2220, !llvm.loop !555

2220:                                             ; preds = %2211, %2202
  %2221 = phi i32 [ %2206, %2202 ], [ %2216, %2211 ]
  %2222 = and i64 %2171, 4294967295
  %2223 = getelementptr inbounds i32, ptr %6, i64 %2222
  %2224 = load i32, ptr %2223, align 4, !tbaa !5
  %2225 = mul nsw i32 %2224, %2221
  %2226 = add nsw i32 %2225, %2165
  %2227 = icmp sgt i64 %2163, 2
  %2228 = add nsw i64 %2164, -1
  %2229 = add i32 %2162, 1
  br i1 %2227, label %2161, label %2230, !llvm.loop !556

2230:                                             ; preds = %2220, %2156
  %2231 = phi i32 [ %2160, %2156 ], [ %2226, %2220 ]
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds i16, ptr %1826, i64 %2232
  %2234 = load i16, ptr %2233, align 2, !tbaa !78
  %2235 = sitofp i16 %2234 to float
  %2236 = fadd fast float %2157, %2235
  %2237 = fadd fast double %2159, 1.000000e+00
  %2238 = add nuw nsw i32 %2158, 1
  br i1 %2150, label %2239, label %2286

2239:                                             ; preds = %2230
  %2240 = load i32, ptr %4, align 4, !tbaa !5
  %2241 = load i32, ptr %12, align 4, !tbaa !5
  %2242 = add nsw i32 %2241, -1
  %2243 = icmp slt i32 %2240, %2242
  br i1 %2243, label %2263, label %2244

2244:                                             ; preds = %2239
  %2245 = icmp eq i32 %2240, %2242
  br i1 %2245, label %2246, label %2279

2246:                                             ; preds = %2244
  store i32 0, ptr %4, align 4, !tbaa !5
  %2247 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2247, ptr %6, align 4, !tbaa !5
  br i1 %2155, label %2286, label %2248

2248:                                             ; preds = %2246, %2273
  %2249 = phi i64 [ %2277, %2273 ], [ 1, %2246 ]
  %2250 = getelementptr inbounds i32, ptr %4, i64 %2249
  %2251 = load i32, ptr %2250, align 4, !tbaa !5
  %2252 = getelementptr inbounds i32, ptr %12, i64 %2249
  %2253 = load i32, ptr %2252, align 4, !tbaa !5
  %2254 = add nsw i32 %2253, -1
  %2255 = icmp slt i32 %2251, %2254
  br i1 %2255, label %2256, label %2271

2256:                                             ; preds = %2248
  br i1 %2243, label %2263, label %2257

2257:                                             ; preds = %2256
  %2258 = getelementptr inbounds i32, ptr %7, i64 %2249
  %2259 = load i32, ptr %2258, align 4, !tbaa !5
  %2260 = getelementptr inbounds i32, ptr %6, i64 %2249
  %2261 = load i32, ptr %2260, align 4, !tbaa !5
  %2262 = add nsw i32 %2261, %2259
  store i32 %2262, ptr %2260, align 4, !tbaa !5
  br label %2281

2263:                                             ; preds = %2239, %2256
  %2264 = phi i32 [ %2251, %2256 ], [ %2240, %2239 ]
  %2265 = phi ptr [ %2250, %2256 ], [ %4, %2239 ]
  %2266 = phi i64 [ %2249, %2256 ], [ 0, %2239 ]
  %2267 = add nsw i32 %2264, 1
  store i32 %2267, ptr %2265, align 4, !tbaa !5
  %2268 = getelementptr inbounds i32, ptr %7, i64 %2266
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %6, i64 %2266
  br label %2281

2271:                                             ; preds = %2248
  %2272 = icmp eq i32 %2251, %2254
  br i1 %2272, label %2273, label %2279

2273:                                             ; preds = %2271
  store i32 0, ptr %2250, align 4, !tbaa !5
  %2274 = getelementptr inbounds i32, ptr %8, i64 %2249
  %2275 = load i32, ptr %2274, align 4, !tbaa !5
  %2276 = getelementptr inbounds i32, ptr %6, i64 %2249
  store i32 %2275, ptr %2276, align 4, !tbaa !5
  %2277 = add nuw nsw i64 %2249, 1
  %2278 = icmp eq i64 %2277, %2153
  br i1 %2278, label %2286, label %2248, !llvm.loop !557

2279:                                             ; preds = %2244, %2271
  store float %2236, ptr %1828, align 4, !tbaa !162
  %2280 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2281:                                             ; preds = %2257, %2263
  %2282 = phi ptr [ %2270, %2263 ], [ %2250, %2257 ]
  %2283 = phi i32 [ %2269, %2263 ], [ 1, %2257 ]
  %2284 = load i32, ptr %2282, align 4, !tbaa !5
  %2285 = add nsw i32 %2284, %2283
  store i32 %2285, ptr %2282, align 4, !tbaa !5
  br label %2286

2286:                                             ; preds = %2273, %2281, %2246, %2230
  %2287 = icmp eq i32 %2238, %5
  br i1 %2287, label %3028, label %2156, !llvm.loop !558

2288:                                             ; preds = %2139, %2423
  %2289 = phi float [ 0.000000e+00, %2139 ], [ %2371, %2423 ]
  %2290 = phi i32 [ 0, %2139 ], [ %2372, %2423 ]
  %2291 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2140, label %2292, label %2361

2292:                                             ; preds = %2288, %2351
  %2293 = phi i32 [ %2360, %2351 ], [ 0, %2288 ]
  %2294 = phi i64 [ %2302, %2351 ], [ %2144, %2288 ]
  %2295 = phi i64 [ %2359, %2351 ], [ %2143, %2288 ]
  %2296 = phi i32 [ %2357, %2351 ], [ %2291, %2288 ]
  %2297 = sub i32 %2142, %2293
  %2298 = tail call i32 @llvm.smin.i32(i32 %2297, i32 0)
  %2299 = sub i32 %2297, %2298
  %2300 = zext i32 %2299 to i64
  %2301 = add nuw nsw i64 %2300, 1
  %2302 = add nsw i64 %2294, -1
  %2303 = icmp ult i32 %2299, 31
  br i1 %2303, label %2339, label %2304

2304:                                             ; preds = %2292
  %2305 = and i64 %2301, 8589934560
  %2306 = sub i64 %2295, %2305
  br label %2307

2307:                                             ; preds = %2307, %2304
  %2308 = phi i64 [ 0, %2304 ], [ %2331, %2307 ]
  %2309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2304 ], [ %2327, %2307 ]
  %2310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2304 ], [ %2328, %2307 ]
  %2311 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2304 ], [ %2329, %2307 ]
  %2312 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2304 ], [ %2330, %2307 ]
  %2313 = sub i64 %2295, %2308
  %2314 = getelementptr inbounds i32, ptr %11, i64 %2313
  %2315 = getelementptr inbounds i32, ptr %2314, i64 -7
  %2316 = load <8 x i32>, ptr %2315, align 4, !tbaa !5
  %2317 = shufflevector <8 x i32> %2316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2318 = getelementptr inbounds i32, ptr %2314, i64 -15
  %2319 = load <8 x i32>, ptr %2318, align 4, !tbaa !5
  %2320 = shufflevector <8 x i32> %2319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2321 = getelementptr inbounds i32, ptr %2314, i64 -23
  %2322 = load <8 x i32>, ptr %2321, align 4, !tbaa !5
  %2323 = shufflevector <8 x i32> %2322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2324 = getelementptr inbounds i32, ptr %2314, i64 -31
  %2325 = load <8 x i32>, ptr %2324, align 4, !tbaa !5
  %2326 = shufflevector <8 x i32> %2325, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2327 = mul <8 x i32> %2317, %2309
  %2328 = mul <8 x i32> %2320, %2310
  %2329 = mul <8 x i32> %2323, %2311
  %2330 = mul <8 x i32> %2326, %2312
  %2331 = add nuw i64 %2308, 32
  %2332 = icmp eq i64 %2331, %2305
  br i1 %2332, label %2333, label %2307, !llvm.loop !559

2333:                                             ; preds = %2307
  %2334 = mul <8 x i32> %2328, %2327
  %2335 = mul <8 x i32> %2329, %2334
  %2336 = mul <8 x i32> %2330, %2335
  %2337 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2336)
  %2338 = icmp eq i64 %2301, %2305
  br i1 %2338, label %2351, label %2339

2339:                                             ; preds = %2292, %2333
  %2340 = phi i64 [ %2295, %2292 ], [ %2306, %2333 ]
  %2341 = phi i32 [ 1, %2292 ], [ %2337, %2333 ]
  br label %2342

2342:                                             ; preds = %2339, %2342
  %2343 = phi i64 [ %2348, %2342 ], [ %2340, %2339 ]
  %2344 = phi i32 [ %2347, %2342 ], [ %2341, %2339 ]
  %2345 = getelementptr inbounds i32, ptr %11, i64 %2343
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = mul nsw i32 %2346, %2344
  %2348 = add nsw i64 %2343, -1
  %2349 = trunc i64 %2343 to i32
  %2350 = icmp sgt i32 %2349, 0
  br i1 %2350, label %2342, label %2351, !llvm.loop !560

2351:                                             ; preds = %2342, %2333
  %2352 = phi i32 [ %2337, %2333 ], [ %2347, %2342 ]
  %2353 = and i64 %2302, 4294967295
  %2354 = getelementptr inbounds i32, ptr %6, i64 %2353
  %2355 = load i32, ptr %2354, align 4, !tbaa !5
  %2356 = mul nsw i32 %2355, %2352
  %2357 = add nsw i32 %2356, %2296
  %2358 = icmp sgt i64 %2294, 2
  %2359 = add nsw i64 %2295, -1
  %2360 = add i32 %2293, 1
  br i1 %2358, label %2292, label %2361, !llvm.loop !561

2361:                                             ; preds = %2351, %2288
  %2362 = phi i32 [ %2291, %2288 ], [ %2357, %2351 ]
  %2363 = icmp slt i32 %2362, %5
  br i1 %2363, label %2366, label %2364

2364:                                             ; preds = %2361
  %2365 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

2366:                                             ; preds = %2361
  %2367 = sext i32 %2362 to i64
  %2368 = getelementptr inbounds i16, ptr %1826, i64 %2367
  %2369 = load i16, ptr %2368, align 2, !tbaa !78
  %2370 = sitofp i16 %2369 to float
  %2371 = fadd fast float %2289, %2370
  store float %2371, ptr %1828, align 4, !tbaa !162
  %2372 = add nuw nsw i32 %2290, 1
  br i1 %2141, label %2373, label %2423

2373:                                             ; preds = %2366
  %2374 = load i32, ptr %4, align 4, !tbaa !5
  %2375 = load i32, ptr %12, align 4, !tbaa !5
  %2376 = add nsw i32 %2375, -1
  %2377 = icmp slt i32 %2374, %2376
  br i1 %2377, label %2400, label %2378

2378:                                             ; preds = %2373
  %2379 = icmp eq i32 %2374, %2376
  br i1 %2379, label %2380, label %2416

2380:                                             ; preds = %2378
  store i32 0, ptr %4, align 4, !tbaa !5
  %2381 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2381, ptr %6, align 4, !tbaa !5
  br i1 %2146, label %2423, label %2382

2382:                                             ; preds = %2380, %2410
  %2383 = phi i64 [ %2414, %2410 ], [ 1, %2380 ]
  %2384 = getelementptr inbounds i32, ptr %4, i64 %2383
  %2385 = load i32, ptr %2384, align 4, !tbaa !5
  %2386 = getelementptr inbounds i32, ptr %12, i64 %2383
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = add nsw i32 %2387, -1
  %2389 = icmp slt i32 %2385, %2388
  br i1 %2389, label %2390, label %2408

2390:                                             ; preds = %2382
  br i1 %2377, label %2400, label %2391

2391:                                             ; preds = %2390
  %2392 = shl i64 %2383, 32
  %2393 = add i64 %2392, -4294967296
  %2394 = ashr exact i64 %2393, 32
  %2395 = getelementptr inbounds i32, ptr %7, i64 %2394
  %2396 = load i32, ptr %2395, align 4, !tbaa !5
  %2397 = getelementptr inbounds i32, ptr %6, i64 %2383
  %2398 = load i32, ptr %2397, align 4, !tbaa !5
  %2399 = add nsw i32 %2398, %2396
  store i32 %2399, ptr %2397, align 4, !tbaa !5
  br label %2418

2400:                                             ; preds = %2373, %2390
  %2401 = phi i32 [ %2385, %2390 ], [ %2374, %2373 ]
  %2402 = phi ptr [ %2384, %2390 ], [ %4, %2373 ]
  %2403 = phi i64 [ %2383, %2390 ], [ 0, %2373 ]
  %2404 = add nsw i32 %2401, 1
  store i32 %2404, ptr %2402, align 4, !tbaa !5
  %2405 = getelementptr inbounds i32, ptr %7, i64 %2403
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %6, i64 %2403
  br label %2418

2408:                                             ; preds = %2382
  %2409 = icmp eq i32 %2385, %2388
  br i1 %2409, label %2410, label %2416

2410:                                             ; preds = %2408
  store i32 0, ptr %2384, align 4, !tbaa !5
  %2411 = getelementptr inbounds i32, ptr %8, i64 %2383
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = getelementptr inbounds i32, ptr %6, i64 %2383
  store i32 %2412, ptr %2413, align 4, !tbaa !5
  %2414 = add nuw nsw i64 %2383, 1
  %2415 = icmp eq i64 %2414, %2144
  br i1 %2415, label %2423, label %2382, !llvm.loop !562

2416:                                             ; preds = %2378, %2408
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2418:                                             ; preds = %2391, %2400
  %2419 = phi ptr [ %2407, %2400 ], [ %2384, %2391 ]
  %2420 = phi i32 [ %2406, %2400 ], [ 1, %2391 ]
  %2421 = load i32, ptr %2419, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, %2420
  store i32 %2422, ptr %2419, align 4, !tbaa !5
  br label %2423

2423:                                             ; preds = %2410, %2418, %2380, %2366
  %2424 = icmp eq i32 %2372, %5
  br i1 %2424, label %3030, label %2288, !llvm.loop !563

2425:                                             ; preds = %1833
  %2426 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3030

2427:                                             ; preds = %18
  %2428 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2429 = load ptr, ptr %2428, align 8, !tbaa !9
  %2430 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2431 = load ptr, ptr %2430, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2431, align 8, !tbaa !18
  %2432 = icmp eq i32 %13, 0
  br i1 %2432, label %2433, label %2436

2433:                                             ; preds = %2427
  %2434 = load i16, ptr %2429, align 2, !tbaa !78
  %2435 = sitofp i16 %2434 to double
  store double %2435, ptr %2431, align 8, !tbaa !18
  br label %3030

2436:                                             ; preds = %2427
  switch i32 %1, label %3024 [
    i32 1, label %2437
    i32 0, label %2732
  ]

2437:                                             ; preds = %2436
  %2438 = getelementptr inbounds i32, ptr %3, i64 %19
  %2439 = load i32, ptr %2438, align 4, !tbaa !5
  %2440 = icmp eq i32 %2439, 0
  %2441 = icmp sgt i32 %5, 0
  br i1 %2440, label %2451, label %2442

2442:                                             ; preds = %2437
  br i1 %2441, label %2443, label %3030

2443:                                             ; preds = %2442
  %2444 = icmp sgt i32 %13, 1
  %2445 = icmp sgt i32 %13, 0
  %2446 = add i32 %13, -2
  %2447 = zext i32 %2446 to i64
  %2448 = zext i32 %13 to i64
  %2449 = add nuw i32 %5, 1
  %2450 = icmp eq i32 %13, 1
  br label %2595

2451:                                             ; preds = %2437
  br i1 %2441, label %2452, label %3030

2452:                                             ; preds = %2451
  %2453 = icmp sgt i32 %13, 1
  %2454 = icmp sgt i32 %13, 0
  %2455 = add i32 %13, -2
  %2456 = zext i32 %2455 to i64
  %2457 = zext i32 %13 to i64
  %2458 = add nuw i32 %5, 1
  %2459 = icmp eq i32 %13, 1
  br label %2460

2460:                                             ; preds = %2452, %2593
  %2461 = phi double [ 0.000000e+00, %2452 ], [ %2543, %2593 ]
  %2462 = phi i32 [ 0, %2452 ], [ %2545, %2593 ]
  %2463 = phi double [ 0.000000e+00, %2452 ], [ %2544, %2593 ]
  %2464 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2453, label %2465, label %2534

2465:                                             ; preds = %2460, %2524
  %2466 = phi i32 [ %2533, %2524 ], [ 0, %2460 ]
  %2467 = phi i64 [ %2475, %2524 ], [ %2457, %2460 ]
  %2468 = phi i64 [ %2532, %2524 ], [ %2456, %2460 ]
  %2469 = phi i32 [ %2530, %2524 ], [ %2464, %2460 ]
  %2470 = sub i32 %2455, %2466
  %2471 = tail call i32 @llvm.smin.i32(i32 %2470, i32 0)
  %2472 = sub i32 %2470, %2471
  %2473 = zext i32 %2472 to i64
  %2474 = add nuw nsw i64 %2473, 1
  %2475 = add nsw i64 %2467, -1
  %2476 = icmp ult i32 %2472, 31
  br i1 %2476, label %2512, label %2477

2477:                                             ; preds = %2465
  %2478 = and i64 %2474, 8589934560
  %2479 = sub i64 %2468, %2478
  br label %2480

2480:                                             ; preds = %2480, %2477
  %2481 = phi i64 [ 0, %2477 ], [ %2504, %2480 ]
  %2482 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2477 ], [ %2500, %2480 ]
  %2483 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2477 ], [ %2501, %2480 ]
  %2484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2477 ], [ %2502, %2480 ]
  %2485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2477 ], [ %2503, %2480 ]
  %2486 = sub i64 %2468, %2481
  %2487 = getelementptr inbounds i32, ptr %9, i64 %2486
  %2488 = getelementptr inbounds i32, ptr %2487, i64 -7
  %2489 = load <8 x i32>, ptr %2488, align 4, !tbaa !5
  %2490 = shufflevector <8 x i32> %2489, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2491 = getelementptr inbounds i32, ptr %2487, i64 -15
  %2492 = load <8 x i32>, ptr %2491, align 4, !tbaa !5
  %2493 = shufflevector <8 x i32> %2492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2494 = getelementptr inbounds i32, ptr %2487, i64 -23
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2487, i64 -31
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = mul <8 x i32> %2490, %2482
  %2501 = mul <8 x i32> %2493, %2483
  %2502 = mul <8 x i32> %2496, %2484
  %2503 = mul <8 x i32> %2499, %2485
  %2504 = add nuw i64 %2481, 32
  %2505 = icmp eq i64 %2504, %2478
  br i1 %2505, label %2506, label %2480, !llvm.loop !564

2506:                                             ; preds = %2480
  %2507 = mul <8 x i32> %2501, %2500
  %2508 = mul <8 x i32> %2502, %2507
  %2509 = mul <8 x i32> %2503, %2508
  %2510 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2509)
  %2511 = icmp eq i64 %2474, %2478
  br i1 %2511, label %2524, label %2512

2512:                                             ; preds = %2465, %2506
  %2513 = phi i64 [ %2468, %2465 ], [ %2479, %2506 ]
  %2514 = phi i32 [ 1, %2465 ], [ %2510, %2506 ]
  br label %2515

2515:                                             ; preds = %2512, %2515
  %2516 = phi i64 [ %2521, %2515 ], [ %2513, %2512 ]
  %2517 = phi i32 [ %2520, %2515 ], [ %2514, %2512 ]
  %2518 = getelementptr inbounds i32, ptr %9, i64 %2516
  %2519 = load i32, ptr %2518, align 4, !tbaa !5
  %2520 = mul nsw i32 %2519, %2517
  %2521 = add nsw i64 %2516, -1
  %2522 = trunc i64 %2516 to i32
  %2523 = icmp sgt i32 %2522, 0
  br i1 %2523, label %2515, label %2524, !llvm.loop !565

2524:                                             ; preds = %2515, %2506
  %2525 = phi i32 [ %2510, %2506 ], [ %2520, %2515 ]
  %2526 = and i64 %2475, 4294967295
  %2527 = getelementptr inbounds i32, ptr %6, i64 %2526
  %2528 = load i32, ptr %2527, align 4, !tbaa !5
  %2529 = mul nsw i32 %2528, %2525
  %2530 = add nsw i32 %2529, %2469
  %2531 = icmp sgt i64 %2467, 2
  %2532 = add nsw i64 %2468, -1
  %2533 = add i32 %2466, 1
  br i1 %2531, label %2465, label %2534, !llvm.loop !566

2534:                                             ; preds = %2524, %2460
  %2535 = phi i32 [ %2464, %2460 ], [ %2530, %2524 ]
  %2536 = sext i32 %2535 to i64
  %2537 = getelementptr inbounds double, ptr %2, i64 %2536
  %2538 = load double, ptr %2537, align 8, !tbaa !18
  %2539 = getelementptr inbounds i16, ptr %2429, i64 %2536
  %2540 = load i16, ptr %2539, align 2, !tbaa !78
  %2541 = sitofp i16 %2540 to double
  %2542 = fmul fast double %2538, %2541
  %2543 = fadd fast double %2542, %2461
  store double %2543, ptr %2431, align 8, !tbaa !18
  %2544 = fadd fast double %2538, %2463
  %2545 = add nuw nsw i32 %2462, 1
  br i1 %2454, label %2546, label %2593

2546:                                             ; preds = %2534
  %2547 = load i32, ptr %4, align 4, !tbaa !5
  %2548 = load i32, ptr %12, align 4, !tbaa !5
  %2549 = add nsw i32 %2548, -1
  %2550 = icmp slt i32 %2547, %2549
  br i1 %2550, label %2570, label %2551

2551:                                             ; preds = %2546
  %2552 = icmp eq i32 %2547, %2549
  br i1 %2552, label %2553, label %2586

2553:                                             ; preds = %2551
  store i32 0, ptr %4, align 4, !tbaa !5
  %2554 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2554, ptr %6, align 4, !tbaa !5
  br i1 %2459, label %2593, label %2555

2555:                                             ; preds = %2553, %2580
  %2556 = phi i64 [ %2584, %2580 ], [ 1, %2553 ]
  %2557 = getelementptr inbounds i32, ptr %4, i64 %2556
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %12, i64 %2556
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = add nsw i32 %2560, -1
  %2562 = icmp slt i32 %2558, %2561
  br i1 %2562, label %2563, label %2578

2563:                                             ; preds = %2555
  br i1 %2550, label %2570, label %2564

2564:                                             ; preds = %2563
  %2565 = getelementptr inbounds i32, ptr %7, i64 %2556
  %2566 = load i32, ptr %2565, align 4, !tbaa !5
  %2567 = getelementptr inbounds i32, ptr %6, i64 %2556
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = add nsw i32 %2568, %2566
  store i32 %2569, ptr %2567, align 4, !tbaa !5
  br label %2588

2570:                                             ; preds = %2546, %2563
  %2571 = phi i32 [ %2558, %2563 ], [ %2547, %2546 ]
  %2572 = phi ptr [ %2557, %2563 ], [ %4, %2546 ]
  %2573 = phi i64 [ %2556, %2563 ], [ 0, %2546 ]
  %2574 = add nsw i32 %2571, 1
  store i32 %2574, ptr %2572, align 4, !tbaa !5
  %2575 = getelementptr inbounds i32, ptr %7, i64 %2573
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2573
  br label %2588

2578:                                             ; preds = %2555
  %2579 = icmp eq i32 %2558, %2561
  br i1 %2579, label %2580, label %2586

2580:                                             ; preds = %2578
  store i32 0, ptr %2557, align 4, !tbaa !5
  %2581 = getelementptr inbounds i32, ptr %8, i64 %2556
  %2582 = load i32, ptr %2581, align 4, !tbaa !5
  %2583 = getelementptr inbounds i32, ptr %6, i64 %2556
  store i32 %2582, ptr %2583, align 4, !tbaa !5
  %2584 = add nuw nsw i64 %2556, 1
  %2585 = icmp eq i64 %2584, %2457
  br i1 %2585, label %2593, label %2555, !llvm.loop !567

2586:                                             ; preds = %2551, %2578
  %2587 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2588:                                             ; preds = %2564, %2570
  %2589 = phi ptr [ %2577, %2570 ], [ %2557, %2564 ]
  %2590 = phi i32 [ %2576, %2570 ], [ 1, %2564 ]
  %2591 = load i32, ptr %2589, align 4, !tbaa !5
  %2592 = add nsw i32 %2591, %2590
  store i32 %2592, ptr %2589, align 4, !tbaa !5
  br label %2593

2593:                                             ; preds = %2580, %2588, %2553, %2534
  %2594 = icmp eq i32 %2545, %5
  br i1 %2594, label %3030, label %2460, !llvm.loop !568

2595:                                             ; preds = %2443, %2730
  %2596 = phi double [ 0.000000e+00, %2443 ], [ %2678, %2730 ]
  %2597 = phi i32 [ 0, %2443 ], [ %2679, %2730 ]
  %2598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2444, label %2599, label %2668

2599:                                             ; preds = %2595, %2658
  %2600 = phi i32 [ %2667, %2658 ], [ 0, %2595 ]
  %2601 = phi i64 [ %2609, %2658 ], [ %2448, %2595 ]
  %2602 = phi i64 [ %2666, %2658 ], [ %2447, %2595 ]
  %2603 = phi i32 [ %2664, %2658 ], [ %2598, %2595 ]
  %2604 = sub i32 %2446, %2600
  %2605 = tail call i32 @llvm.smin.i32(i32 %2604, i32 0)
  %2606 = sub i32 %2604, %2605
  %2607 = zext i32 %2606 to i64
  %2608 = add nuw nsw i64 %2607, 1
  %2609 = add nsw i64 %2601, -1
  %2610 = icmp ult i32 %2606, 31
  br i1 %2610, label %2646, label %2611

2611:                                             ; preds = %2599
  %2612 = and i64 %2608, 8589934560
  %2613 = sub i64 %2602, %2612
  br label %2614

2614:                                             ; preds = %2614, %2611
  %2615 = phi i64 [ 0, %2611 ], [ %2638, %2614 ]
  %2616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2611 ], [ %2634, %2614 ]
  %2617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2611 ], [ %2635, %2614 ]
  %2618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2611 ], [ %2636, %2614 ]
  %2619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2611 ], [ %2637, %2614 ]
  %2620 = sub i64 %2602, %2615
  %2621 = getelementptr inbounds i32, ptr %11, i64 %2620
  %2622 = getelementptr inbounds i32, ptr %2621, i64 -7
  %2623 = load <8 x i32>, ptr %2622, align 4, !tbaa !5
  %2624 = shufflevector <8 x i32> %2623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2625 = getelementptr inbounds i32, ptr %2621, i64 -15
  %2626 = load <8 x i32>, ptr %2625, align 4, !tbaa !5
  %2627 = shufflevector <8 x i32> %2626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2628 = getelementptr inbounds i32, ptr %2621, i64 -23
  %2629 = load <8 x i32>, ptr %2628, align 4, !tbaa !5
  %2630 = shufflevector <8 x i32> %2629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2631 = getelementptr inbounds i32, ptr %2621, i64 -31
  %2632 = load <8 x i32>, ptr %2631, align 4, !tbaa !5
  %2633 = shufflevector <8 x i32> %2632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2634 = mul <8 x i32> %2624, %2616
  %2635 = mul <8 x i32> %2627, %2617
  %2636 = mul <8 x i32> %2630, %2618
  %2637 = mul <8 x i32> %2633, %2619
  %2638 = add nuw i64 %2615, 32
  %2639 = icmp eq i64 %2638, %2612
  br i1 %2639, label %2640, label %2614, !llvm.loop !569

2640:                                             ; preds = %2614
  %2641 = mul <8 x i32> %2635, %2634
  %2642 = mul <8 x i32> %2636, %2641
  %2643 = mul <8 x i32> %2637, %2642
  %2644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2643)
  %2645 = icmp eq i64 %2608, %2612
  br i1 %2645, label %2658, label %2646

2646:                                             ; preds = %2599, %2640
  %2647 = phi i64 [ %2602, %2599 ], [ %2613, %2640 ]
  %2648 = phi i32 [ 1, %2599 ], [ %2644, %2640 ]
  br label %2649

2649:                                             ; preds = %2646, %2649
  %2650 = phi i64 [ %2655, %2649 ], [ %2647, %2646 ]
  %2651 = phi i32 [ %2654, %2649 ], [ %2648, %2646 ]
  %2652 = getelementptr inbounds i32, ptr %11, i64 %2650
  %2653 = load i32, ptr %2652, align 4, !tbaa !5
  %2654 = mul nsw i32 %2653, %2651
  %2655 = add nsw i64 %2650, -1
  %2656 = trunc i64 %2650 to i32
  %2657 = icmp sgt i32 %2656, 0
  br i1 %2657, label %2649, label %2658, !llvm.loop !570

2658:                                             ; preds = %2649, %2640
  %2659 = phi i32 [ %2644, %2640 ], [ %2654, %2649 ]
  %2660 = and i64 %2609, 4294967295
  %2661 = getelementptr inbounds i32, ptr %6, i64 %2660
  %2662 = load i32, ptr %2661, align 4, !tbaa !5
  %2663 = mul nsw i32 %2662, %2659
  %2664 = add nsw i32 %2663, %2603
  %2665 = icmp sgt i64 %2601, 2
  %2666 = add nsw i64 %2602, -1
  %2667 = add i32 %2600, 1
  br i1 %2665, label %2599, label %2668, !llvm.loop !571

2668:                                             ; preds = %2658, %2595
  %2669 = phi i32 [ %2598, %2595 ], [ %2664, %2658 ]
  %2670 = icmp slt i32 %2669, %5
  br i1 %2670, label %2673, label %2671

2671:                                             ; preds = %2668
  %2672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

2673:                                             ; preds = %2668
  %2674 = sext i32 %2669 to i64
  %2675 = getelementptr inbounds i16, ptr %2429, i64 %2674
  %2676 = load i16, ptr %2675, align 2, !tbaa !78
  %2677 = sitofp i16 %2676 to double
  %2678 = fadd fast double %2596, %2677
  store double %2678, ptr %2431, align 8, !tbaa !18
  %2679 = add nuw nsw i32 %2597, 1
  br i1 %2445, label %2680, label %2730

2680:                                             ; preds = %2673
  %2681 = load i32, ptr %4, align 4, !tbaa !5
  %2682 = load i32, ptr %12, align 4, !tbaa !5
  %2683 = add nsw i32 %2682, -1
  %2684 = icmp slt i32 %2681, %2683
  br i1 %2684, label %2707, label %2685

2685:                                             ; preds = %2680
  %2686 = icmp eq i32 %2681, %2683
  br i1 %2686, label %2687, label %2723

2687:                                             ; preds = %2685
  store i32 0, ptr %4, align 4, !tbaa !5
  %2688 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2688, ptr %6, align 4, !tbaa !5
  br i1 %2450, label %2730, label %2689

2689:                                             ; preds = %2687, %2717
  %2690 = phi i64 [ %2721, %2717 ], [ 1, %2687 ]
  %2691 = getelementptr inbounds i32, ptr %4, i64 %2690
  %2692 = load i32, ptr %2691, align 4, !tbaa !5
  %2693 = getelementptr inbounds i32, ptr %12, i64 %2690
  %2694 = load i32, ptr %2693, align 4, !tbaa !5
  %2695 = add nsw i32 %2694, -1
  %2696 = icmp slt i32 %2692, %2695
  br i1 %2696, label %2697, label %2715

2697:                                             ; preds = %2689
  br i1 %2684, label %2707, label %2698

2698:                                             ; preds = %2697
  %2699 = shl i64 %2690, 32
  %2700 = add i64 %2699, -4294967296
  %2701 = ashr exact i64 %2700, 32
  %2702 = getelementptr inbounds i32, ptr %7, i64 %2701
  %2703 = load i32, ptr %2702, align 4, !tbaa !5
  %2704 = getelementptr inbounds i32, ptr %6, i64 %2690
  %2705 = load i32, ptr %2704, align 4, !tbaa !5
  %2706 = add nsw i32 %2705, %2703
  store i32 %2706, ptr %2704, align 4, !tbaa !5
  br label %2725

2707:                                             ; preds = %2680, %2697
  %2708 = phi i32 [ %2692, %2697 ], [ %2681, %2680 ]
  %2709 = phi ptr [ %2691, %2697 ], [ %4, %2680 ]
  %2710 = phi i64 [ %2690, %2697 ], [ 0, %2680 ]
  %2711 = add nsw i32 %2708, 1
  store i32 %2711, ptr %2709, align 4, !tbaa !5
  %2712 = getelementptr inbounds i32, ptr %7, i64 %2710
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2710
  br label %2725

2715:                                             ; preds = %2689
  %2716 = icmp eq i32 %2692, %2695
  br i1 %2716, label %2717, label %2723

2717:                                             ; preds = %2715
  store i32 0, ptr %2691, align 4, !tbaa !5
  %2718 = getelementptr inbounds i32, ptr %8, i64 %2690
  %2719 = load i32, ptr %2718, align 4, !tbaa !5
  %2720 = getelementptr inbounds i32, ptr %6, i64 %2690
  store i32 %2719, ptr %2720, align 4, !tbaa !5
  %2721 = add nuw nsw i64 %2690, 1
  %2722 = icmp eq i64 %2721, %2448
  br i1 %2722, label %2730, label %2689, !llvm.loop !572

2723:                                             ; preds = %2685, %2715
  %2724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2725:                                             ; preds = %2698, %2707
  %2726 = phi ptr [ %2714, %2707 ], [ %2691, %2698 ]
  %2727 = phi i32 [ %2713, %2707 ], [ 1, %2698 ]
  %2728 = load i32, ptr %2726, align 4, !tbaa !5
  %2729 = add nsw i32 %2728, %2727
  store i32 %2729, ptr %2726, align 4, !tbaa !5
  br label %2730

2730:                                             ; preds = %2717, %2725, %2687, %2673
  %2731 = icmp eq i32 %2679, %5
  br i1 %2731, label %3030, label %2595, !llvm.loop !573

2732:                                             ; preds = %2436
  %2733 = getelementptr inbounds i32, ptr %3, i64 %19
  %2734 = load i32, ptr %2733, align 4, !tbaa !5
  %2735 = icmp eq i32 %2734, 0
  %2736 = icmp sgt i32 %5, 0
  br i1 %2735, label %2746, label %2737

2737:                                             ; preds = %2732
  br i1 %2736, label %2738, label %3030

2738:                                             ; preds = %2737
  %2739 = icmp sgt i32 %13, 1
  %2740 = icmp sgt i32 %13, 0
  %2741 = add i32 %13, -2
  %2742 = zext i32 %2741 to i64
  %2743 = zext i32 %13 to i64
  %2744 = add nuw i32 %5, 1
  %2745 = icmp eq i32 %13, 1
  br label %2887

2746:                                             ; preds = %2732
  br i1 %2736, label %2747, label %3030

2747:                                             ; preds = %2746
  %2748 = icmp sgt i32 %13, 1
  %2749 = icmp sgt i32 %13, 0
  %2750 = add i32 %13, -2
  %2751 = zext i32 %2750 to i64
  %2752 = zext i32 %13 to i64
  %2753 = add nuw i32 %5, 1
  %2754 = icmp eq i32 %13, 1
  br label %2755

2755:                                             ; preds = %2747, %2885
  %2756 = phi double [ 0.000000e+00, %2747 ], [ %2835, %2885 ]
  %2757 = phi i32 [ 0, %2747 ], [ %2837, %2885 ]
  %2758 = phi double [ 0.000000e+00, %2747 ], [ %2836, %2885 ]
  %2759 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2748, label %2760, label %2829

2760:                                             ; preds = %2755, %2819
  %2761 = phi i32 [ %2828, %2819 ], [ 0, %2755 ]
  %2762 = phi i64 [ %2770, %2819 ], [ %2752, %2755 ]
  %2763 = phi i64 [ %2827, %2819 ], [ %2751, %2755 ]
  %2764 = phi i32 [ %2825, %2819 ], [ %2759, %2755 ]
  %2765 = sub i32 %2750, %2761
  %2766 = tail call i32 @llvm.smin.i32(i32 %2765, i32 0)
  %2767 = sub i32 %2765, %2766
  %2768 = zext i32 %2767 to i64
  %2769 = add nuw nsw i64 %2768, 1
  %2770 = add nsw i64 %2762, -1
  %2771 = icmp ult i32 %2767, 31
  br i1 %2771, label %2807, label %2772

2772:                                             ; preds = %2760
  %2773 = and i64 %2769, 8589934560
  %2774 = sub i64 %2763, %2773
  br label %2775

2775:                                             ; preds = %2775, %2772
  %2776 = phi i64 [ 0, %2772 ], [ %2799, %2775 ]
  %2777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2772 ], [ %2795, %2775 ]
  %2778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2772 ], [ %2796, %2775 ]
  %2779 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2772 ], [ %2797, %2775 ]
  %2780 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2772 ], [ %2798, %2775 ]
  %2781 = sub i64 %2763, %2776
  %2782 = getelementptr inbounds i32, ptr %9, i64 %2781
  %2783 = getelementptr inbounds i32, ptr %2782, i64 -7
  %2784 = load <8 x i32>, ptr %2783, align 4, !tbaa !5
  %2785 = shufflevector <8 x i32> %2784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2786 = getelementptr inbounds i32, ptr %2782, i64 -15
  %2787 = load <8 x i32>, ptr %2786, align 4, !tbaa !5
  %2788 = shufflevector <8 x i32> %2787, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2789 = getelementptr inbounds i32, ptr %2782, i64 -23
  %2790 = load <8 x i32>, ptr %2789, align 4, !tbaa !5
  %2791 = shufflevector <8 x i32> %2790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2792 = getelementptr inbounds i32, ptr %2782, i64 -31
  %2793 = load <8 x i32>, ptr %2792, align 4, !tbaa !5
  %2794 = shufflevector <8 x i32> %2793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2795 = mul <8 x i32> %2785, %2777
  %2796 = mul <8 x i32> %2788, %2778
  %2797 = mul <8 x i32> %2791, %2779
  %2798 = mul <8 x i32> %2794, %2780
  %2799 = add nuw i64 %2776, 32
  %2800 = icmp eq i64 %2799, %2773
  br i1 %2800, label %2801, label %2775, !llvm.loop !574

2801:                                             ; preds = %2775
  %2802 = mul <8 x i32> %2796, %2795
  %2803 = mul <8 x i32> %2797, %2802
  %2804 = mul <8 x i32> %2798, %2803
  %2805 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2804)
  %2806 = icmp eq i64 %2769, %2773
  br i1 %2806, label %2819, label %2807

2807:                                             ; preds = %2760, %2801
  %2808 = phi i64 [ %2763, %2760 ], [ %2774, %2801 ]
  %2809 = phi i32 [ 1, %2760 ], [ %2805, %2801 ]
  br label %2810

2810:                                             ; preds = %2807, %2810
  %2811 = phi i64 [ %2816, %2810 ], [ %2808, %2807 ]
  %2812 = phi i32 [ %2815, %2810 ], [ %2809, %2807 ]
  %2813 = getelementptr inbounds i32, ptr %9, i64 %2811
  %2814 = load i32, ptr %2813, align 4, !tbaa !5
  %2815 = mul nsw i32 %2814, %2812
  %2816 = add nsw i64 %2811, -1
  %2817 = trunc i64 %2811 to i32
  %2818 = icmp sgt i32 %2817, 0
  br i1 %2818, label %2810, label %2819, !llvm.loop !575

2819:                                             ; preds = %2810, %2801
  %2820 = phi i32 [ %2805, %2801 ], [ %2815, %2810 ]
  %2821 = and i64 %2770, 4294967295
  %2822 = getelementptr inbounds i32, ptr %6, i64 %2821
  %2823 = load i32, ptr %2822, align 4, !tbaa !5
  %2824 = mul nsw i32 %2823, %2820
  %2825 = add nsw i32 %2824, %2764
  %2826 = icmp sgt i64 %2762, 2
  %2827 = add nsw i64 %2763, -1
  %2828 = add i32 %2761, 1
  br i1 %2826, label %2760, label %2829, !llvm.loop !576

2829:                                             ; preds = %2819, %2755
  %2830 = phi i32 [ %2759, %2755 ], [ %2825, %2819 ]
  %2831 = sext i32 %2830 to i64
  %2832 = getelementptr inbounds i16, ptr %2429, i64 %2831
  %2833 = load i16, ptr %2832, align 2, !tbaa !78
  %2834 = sitofp i16 %2833 to double
  %2835 = fadd fast double %2756, %2834
  %2836 = fadd fast double %2758, 1.000000e+00
  %2837 = add nuw nsw i32 %2757, 1
  br i1 %2749, label %2838, label %2885

2838:                                             ; preds = %2829
  %2839 = load i32, ptr %4, align 4, !tbaa !5
  %2840 = load i32, ptr %12, align 4, !tbaa !5
  %2841 = add nsw i32 %2840, -1
  %2842 = icmp slt i32 %2839, %2841
  br i1 %2842, label %2862, label %2843

2843:                                             ; preds = %2838
  %2844 = icmp eq i32 %2839, %2841
  br i1 %2844, label %2845, label %2878

2845:                                             ; preds = %2843
  store i32 0, ptr %4, align 4, !tbaa !5
  %2846 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2846, ptr %6, align 4, !tbaa !5
  br i1 %2754, label %2885, label %2847

2847:                                             ; preds = %2845, %2872
  %2848 = phi i64 [ %2876, %2872 ], [ 1, %2845 ]
  %2849 = getelementptr inbounds i32, ptr %4, i64 %2848
  %2850 = load i32, ptr %2849, align 4, !tbaa !5
  %2851 = getelementptr inbounds i32, ptr %12, i64 %2848
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = add nsw i32 %2852, -1
  %2854 = icmp slt i32 %2850, %2853
  br i1 %2854, label %2855, label %2870

2855:                                             ; preds = %2847
  br i1 %2842, label %2862, label %2856

2856:                                             ; preds = %2855
  %2857 = getelementptr inbounds i32, ptr %7, i64 %2848
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2848
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = add nsw i32 %2860, %2858
  store i32 %2861, ptr %2859, align 4, !tbaa !5
  br label %2880

2862:                                             ; preds = %2838, %2855
  %2863 = phi i32 [ %2850, %2855 ], [ %2839, %2838 ]
  %2864 = phi ptr [ %2849, %2855 ], [ %4, %2838 ]
  %2865 = phi i64 [ %2848, %2855 ], [ 0, %2838 ]
  %2866 = add nsw i32 %2863, 1
  store i32 %2866, ptr %2864, align 4, !tbaa !5
  %2867 = getelementptr inbounds i32, ptr %7, i64 %2865
  %2868 = load i32, ptr %2867, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2865
  br label %2880

2870:                                             ; preds = %2847
  %2871 = icmp eq i32 %2850, %2853
  br i1 %2871, label %2872, label %2878

2872:                                             ; preds = %2870
  store i32 0, ptr %2849, align 4, !tbaa !5
  %2873 = getelementptr inbounds i32, ptr %8, i64 %2848
  %2874 = load i32, ptr %2873, align 4, !tbaa !5
  %2875 = getelementptr inbounds i32, ptr %6, i64 %2848
  store i32 %2874, ptr %2875, align 4, !tbaa !5
  %2876 = add nuw nsw i64 %2848, 1
  %2877 = icmp eq i64 %2876, %2752
  br i1 %2877, label %2885, label %2847, !llvm.loop !577

2878:                                             ; preds = %2843, %2870
  store double %2835, ptr %2431, align 8, !tbaa !18
  %2879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

2880:                                             ; preds = %2856, %2862
  %2881 = phi ptr [ %2869, %2862 ], [ %2849, %2856 ]
  %2882 = phi i32 [ %2868, %2862 ], [ 1, %2856 ]
  %2883 = load i32, ptr %2881, align 4, !tbaa !5
  %2884 = add nsw i32 %2883, %2882
  store i32 %2884, ptr %2881, align 4, !tbaa !5
  br label %2885

2885:                                             ; preds = %2872, %2880, %2845, %2829
  %2886 = icmp eq i32 %2837, %5
  br i1 %2886, label %3029, label %2755, !llvm.loop !578

2887:                                             ; preds = %2738, %3022
  %2888 = phi double [ 0.000000e+00, %2738 ], [ %2970, %3022 ]
  %2889 = phi i32 [ 0, %2738 ], [ %2971, %3022 ]
  %2890 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2739, label %2891, label %2960

2891:                                             ; preds = %2887, %2950
  %2892 = phi i32 [ %2959, %2950 ], [ 0, %2887 ]
  %2893 = phi i64 [ %2901, %2950 ], [ %2743, %2887 ]
  %2894 = phi i64 [ %2958, %2950 ], [ %2742, %2887 ]
  %2895 = phi i32 [ %2956, %2950 ], [ %2890, %2887 ]
  %2896 = sub i32 %2741, %2892
  %2897 = tail call i32 @llvm.smin.i32(i32 %2896, i32 0)
  %2898 = sub i32 %2896, %2897
  %2899 = zext i32 %2898 to i64
  %2900 = add nuw nsw i64 %2899, 1
  %2901 = add nsw i64 %2893, -1
  %2902 = icmp ult i32 %2898, 31
  br i1 %2902, label %2938, label %2903

2903:                                             ; preds = %2891
  %2904 = and i64 %2900, 8589934560
  %2905 = sub i64 %2894, %2904
  br label %2906

2906:                                             ; preds = %2906, %2903
  %2907 = phi i64 [ 0, %2903 ], [ %2930, %2906 ]
  %2908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2903 ], [ %2926, %2906 ]
  %2909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2903 ], [ %2927, %2906 ]
  %2910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2903 ], [ %2928, %2906 ]
  %2911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2903 ], [ %2929, %2906 ]
  %2912 = sub i64 %2894, %2907
  %2913 = getelementptr inbounds i32, ptr %11, i64 %2912
  %2914 = getelementptr inbounds i32, ptr %2913, i64 -7
  %2915 = load <8 x i32>, ptr %2914, align 4, !tbaa !5
  %2916 = shufflevector <8 x i32> %2915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2917 = getelementptr inbounds i32, ptr %2913, i64 -15
  %2918 = load <8 x i32>, ptr %2917, align 4, !tbaa !5
  %2919 = shufflevector <8 x i32> %2918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2920 = getelementptr inbounds i32, ptr %2913, i64 -23
  %2921 = load <8 x i32>, ptr %2920, align 4, !tbaa !5
  %2922 = shufflevector <8 x i32> %2921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2923 = getelementptr inbounds i32, ptr %2913, i64 -31
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = mul <8 x i32> %2916, %2908
  %2927 = mul <8 x i32> %2919, %2909
  %2928 = mul <8 x i32> %2922, %2910
  %2929 = mul <8 x i32> %2925, %2911
  %2930 = add nuw i64 %2907, 32
  %2931 = icmp eq i64 %2930, %2904
  br i1 %2931, label %2932, label %2906, !llvm.loop !579

2932:                                             ; preds = %2906
  %2933 = mul <8 x i32> %2927, %2926
  %2934 = mul <8 x i32> %2928, %2933
  %2935 = mul <8 x i32> %2929, %2934
  %2936 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2935)
  %2937 = icmp eq i64 %2900, %2904
  br i1 %2937, label %2950, label %2938

2938:                                             ; preds = %2891, %2932
  %2939 = phi i64 [ %2894, %2891 ], [ %2905, %2932 ]
  %2940 = phi i32 [ 1, %2891 ], [ %2936, %2932 ]
  br label %2941

2941:                                             ; preds = %2938, %2941
  %2942 = phi i64 [ %2947, %2941 ], [ %2939, %2938 ]
  %2943 = phi i32 [ %2946, %2941 ], [ %2940, %2938 ]
  %2944 = getelementptr inbounds i32, ptr %11, i64 %2942
  %2945 = load i32, ptr %2944, align 4, !tbaa !5
  %2946 = mul nsw i32 %2945, %2943
  %2947 = add nsw i64 %2942, -1
  %2948 = trunc i64 %2942 to i32
  %2949 = icmp sgt i32 %2948, 0
  br i1 %2949, label %2941, label %2950, !llvm.loop !580

2950:                                             ; preds = %2941, %2932
  %2951 = phi i32 [ %2936, %2932 ], [ %2946, %2941 ]
  %2952 = and i64 %2901, 4294967295
  %2953 = getelementptr inbounds i32, ptr %6, i64 %2952
  %2954 = load i32, ptr %2953, align 4, !tbaa !5
  %2955 = mul nsw i32 %2954, %2951
  %2956 = add nsw i32 %2955, %2895
  %2957 = icmp sgt i64 %2893, 2
  %2958 = add nsw i64 %2894, -1
  %2959 = add i32 %2892, 1
  br i1 %2957, label %2891, label %2960, !llvm.loop !581

2960:                                             ; preds = %2950, %2887
  %2961 = phi i32 [ %2890, %2887 ], [ %2956, %2950 ]
  %2962 = icmp slt i32 %2961, %5
  br i1 %2962, label %2965, label %2963

2963:                                             ; preds = %2960
  %2964 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3035

2965:                                             ; preds = %2960
  %2966 = sext i32 %2961 to i64
  %2967 = getelementptr inbounds i16, ptr %2429, i64 %2966
  %2968 = load i16, ptr %2967, align 2, !tbaa !78
  %2969 = sitofp i16 %2968 to double
  %2970 = fadd fast double %2888, %2969
  store double %2970, ptr %2431, align 8, !tbaa !18
  %2971 = add nuw nsw i32 %2889, 1
  br i1 %2740, label %2972, label %3022

2972:                                             ; preds = %2965
  %2973 = load i32, ptr %4, align 4, !tbaa !5
  %2974 = load i32, ptr %12, align 4, !tbaa !5
  %2975 = add nsw i32 %2974, -1
  %2976 = icmp slt i32 %2973, %2975
  br i1 %2976, label %2999, label %2977

2977:                                             ; preds = %2972
  %2978 = icmp eq i32 %2973, %2975
  br i1 %2978, label %2979, label %3015

2979:                                             ; preds = %2977
  store i32 0, ptr %4, align 4, !tbaa !5
  %2980 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2980, ptr %6, align 4, !tbaa !5
  br i1 %2745, label %3022, label %2981

2981:                                             ; preds = %2979, %3009
  %2982 = phi i64 [ %3013, %3009 ], [ 1, %2979 ]
  %2983 = getelementptr inbounds i32, ptr %4, i64 %2982
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = getelementptr inbounds i32, ptr %12, i64 %2982
  %2986 = load i32, ptr %2985, align 4, !tbaa !5
  %2987 = add nsw i32 %2986, -1
  %2988 = icmp slt i32 %2984, %2987
  br i1 %2988, label %2989, label %3007

2989:                                             ; preds = %2981
  br i1 %2976, label %2999, label %2990

2990:                                             ; preds = %2989
  %2991 = shl i64 %2982, 32
  %2992 = add i64 %2991, -4294967296
  %2993 = ashr exact i64 %2992, 32
  %2994 = getelementptr inbounds i32, ptr %7, i64 %2993
  %2995 = load i32, ptr %2994, align 4, !tbaa !5
  %2996 = getelementptr inbounds i32, ptr %6, i64 %2982
  %2997 = load i32, ptr %2996, align 4, !tbaa !5
  %2998 = add nsw i32 %2997, %2995
  store i32 %2998, ptr %2996, align 4, !tbaa !5
  br label %3017

2999:                                             ; preds = %2972, %2989
  %3000 = phi i32 [ %2984, %2989 ], [ %2973, %2972 ]
  %3001 = phi ptr [ %2983, %2989 ], [ %4, %2972 ]
  %3002 = phi i64 [ %2982, %2989 ], [ 0, %2972 ]
  %3003 = add nsw i32 %3000, 1
  store i32 %3003, ptr %3001, align 4, !tbaa !5
  %3004 = getelementptr inbounds i32, ptr %7, i64 %3002
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %6, i64 %3002
  br label %3017

3007:                                             ; preds = %2981
  %3008 = icmp eq i32 %2984, %2987
  br i1 %3008, label %3009, label %3015

3009:                                             ; preds = %3007
  store i32 0, ptr %2983, align 4, !tbaa !5
  %3010 = getelementptr inbounds i32, ptr %8, i64 %2982
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = getelementptr inbounds i32, ptr %6, i64 %2982
  store i32 %3011, ptr %3012, align 4, !tbaa !5
  %3013 = add nuw nsw i64 %2982, 1
  %3014 = icmp eq i64 %3013, %2743
  br i1 %3014, label %3022, label %2981, !llvm.loop !582

3015:                                             ; preds = %2977, %3007
  %3016 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3035

3017:                                             ; preds = %2990, %2999
  %3018 = phi ptr [ %3006, %2999 ], [ %2983, %2990 ]
  %3019 = phi i32 [ %3005, %2999 ], [ 1, %2990 ]
  %3020 = load i32, ptr %3018, align 4, !tbaa !5
  %3021 = add nsw i32 %3020, %3019
  store i32 %3021, ptr %3018, align 4, !tbaa !5
  br label %3022

3022:                                             ; preds = %3009, %3017, %2979, %2965
  %3023 = icmp eq i32 %2971, %5
  br i1 %3023, label %3030, label %2887, !llvm.loop !583

3024:                                             ; preds = %2436
  %3025 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3030

3026:                                             ; preds = %1683
  store double %1633, ptr %1229, align 8, !tbaa !18
  br label %3030

3027:                                             ; preds = %1992
  store float %1942, ptr %1828, align 4, !tbaa !162
  br label %3030

3028:                                             ; preds = %2286
  store float %2236, ptr %1828, align 4, !tbaa !162
  br label %3030

3029:                                             ; preds = %2885
  store double %2835, ptr %2431, align 8, !tbaa !18
  br label %3030

3030:                                             ; preds = %3022, %2730, %2593, %2423, %2131, %1820, %1528, %1391, %1221, %1084, %929, %792, %620, %483, %328, %191, %2737, %2746, %3029, %2442, %2451, %2138, %2147, %3028, %1839, %1848, %3027, %1535, %1544, %3026, %1240, %1249, %936, %945, %639, %648, %335, %344, %37, %46, %2433, %3024, %1830, %2425, %1231, %1822, %630, %1223, %28, %622, %18
  %3031 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1223 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1822 ], [ 0.000000e+00, %1231 ], [ 0.000000e+00, %2425 ], [ 0.000000e+00, %1830 ], [ 0.000000e+00, %3024 ], [ 0.000000e+00, %2433 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %945 ], [ 0.000000e+00, %936 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %1240 ], [ %1634, %3026 ], [ 0.000000e+00, %1544 ], [ 0.000000e+00, %1535 ], [ %1943, %3027 ], [ 0.000000e+00, %1848 ], [ 0.000000e+00, %1839 ], [ %2237, %3028 ], [ 0.000000e+00, %2147 ], [ 0.000000e+00, %2138 ], [ 0.000000e+00, %2451 ], [ 0.000000e+00, %2442 ], [ %2836, %3029 ], [ 0.000000e+00, %2746 ], [ 0.000000e+00, %2737 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %743, %792 ], [ 0.000000e+00, %929 ], [ %1035, %1084 ], [ 0.000000e+00, %1221 ], [ %1342, %1391 ], [ 0.000000e+00, %1528 ], [ 0.000000e+00, %1820 ], [ 0.000000e+00, %2131 ], [ 0.000000e+00, %2423 ], [ %2544, %2593 ], [ 0.000000e+00, %2730 ], [ 0.000000e+00, %3022 ]
  %3032 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1223 ], [ 1, %630 ], [ 1, %1822 ], [ 1, %1231 ], [ 1, %2425 ], [ 1, %1830 ], [ 1, %3024 ], [ 1, %2433 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %648 ], [ 1, %639 ], [ 1, %945 ], [ 1, %936 ], [ 1, %1249 ], [ 1, %1240 ], [ %1551, %3026 ], [ 1, %1544 ], [ 1, %1535 ], [ %1855, %3027 ], [ 1, %1848 ], [ 1, %1839 ], [ %2154, %3028 ], [ 1, %2147 ], [ 1, %2138 ], [ 1, %2451 ], [ 1, %2442 ], [ %2753, %3029 ], [ 1, %2746 ], [ 1, %2737 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %655, %792 ], [ %646, %929 ], [ %952, %1084 ], [ %943, %1221 ], [ %1256, %1391 ], [ %1247, %1528 ], [ %1542, %1820 ], [ %1846, %2131 ], [ %2145, %2423 ], [ %2458, %2593 ], [ %2449, %2730 ], [ %2744, %3022 ]
  %3033 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3032, ptr noundef nonnull @.str.5) #3
  %3034 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3031, ptr noundef nonnull @.str.6) #3
  br label %3035

3035:                                             ; preds = %2586, %2671, %2723, %2878, %2963, %3015, %1985, %2070, %2124, %2279, %2364, %2416, %1384, %1469, %1521, %1676, %1761, %1813, %785, %869, %922, %1077, %1161, %1214, %184, %268, %321, %476, %560, %613, %3030
  %3036 = phi i32 [ 0, %3030 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1214 ], [ -1, %1161 ], [ -1, %1077 ], [ -1, %922 ], [ -1, %869 ], [ -1, %785 ], [ -1, %1813 ], [ -1, %1761 ], [ -1, %1676 ], [ -1, %1521 ], [ -1, %1469 ], [ -1, %1384 ], [ -1, %2416 ], [ -1, %2364 ], [ -1, %2279 ], [ -1, %2124 ], [ -1, %2070 ], [ -1, %1985 ], [ -1, %3015 ], [ -1, %2963 ], [ -1, %2878 ], [ -1, %2723 ], [ -1, %2671 ], [ -1, %2586 ]
  ret i32 %3036
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5440 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1221
    i32 104, label %1824
    i32 105, label %2432
    i32 106, label %3029
    i32 107, label %3632
    i32 108, label %4231
    i32 109, label %4833
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5440

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5440

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5440

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !584

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !585

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !586

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i32, ptr %24, i64 %130
  %134 = load i32, ptr %133, align 4, !tbaa !5
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i32 %134, 255
  %138 = sitofp i32 %137 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !587

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5440, label %55, !llvm.loop !588

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !589

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !590

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !591

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i32, ptr %24, i64 %271
  %273 = load i32, ptr %272, align 4, !tbaa !5
  %274 = load i8, ptr %26, align 1, !tbaa !11
  %275 = trunc i32 %273 to i8
  %276 = add i8 %274, %275
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !592

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5440, label %193, !llvm.loop !593

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5440

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5440

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !594

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !595

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !596

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i32, ptr %24, i64 %428
  %430 = load i32, ptr %429, align 4, !tbaa !5
  %431 = load i8, ptr %26, align 1, !tbaa !11
  %432 = trunc i32 %430 to i8
  %433 = add i8 %431, %432
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !597

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5440, label %353, !llvm.loop !598

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !599

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !600

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !601

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds i32, ptr %24, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !5
  %566 = load i8, ptr %26, align 1, !tbaa !11
  %567 = trunc i32 %565 to i8
  %568 = add i8 %566, %567
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !602

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5440, label %485, !llvm.loop !603

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %632

630:                                              ; preds = %624
  %631 = load i32, ptr %626, align 4, !tbaa !5
  store i32 %631, ptr %628, align 4, !tbaa !5
  br label %5440

632:                                              ; preds = %624
  switch i32 %1, label %1219 [
    i32 1, label %633
    i32 0, label %929
  ]

633:                                              ; preds = %632
  %634 = getelementptr inbounds i32, ptr %3, i64 %19
  %635 = load i32, ptr %634, align 4, !tbaa !5
  %636 = icmp eq i32 %635, 0
  %637 = icmp sgt i32 %5, 0
  br i1 %636, label %647, label %638

638:                                              ; preds = %633
  br i1 %637, label %639, label %5440

639:                                              ; preds = %638
  %640 = icmp sgt i32 %13, 1
  %641 = icmp sgt i32 %13, 0
  %642 = add i32 %13, -2
  %643 = zext i32 %642 to i64
  %644 = zext i32 %13 to i64
  %645 = add nuw i32 %5, 1
  %646 = icmp eq i32 %13, 1
  br label %793

647:                                              ; preds = %633
  br i1 %637, label %648, label %5440

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %656

656:                                              ; preds = %648, %791
  %657 = phi i32 [ 0, %648 ], [ %743, %791 ]
  %658 = phi double [ 0.000000e+00, %648 ], [ %742, %791 ]
  %659 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %660, label %729

660:                                              ; preds = %656, %719
  %661 = phi i32 [ %728, %719 ], [ 0, %656 ]
  %662 = phi i64 [ %670, %719 ], [ %653, %656 ]
  %663 = phi i64 [ %727, %719 ], [ %652, %656 ]
  %664 = phi i32 [ %725, %719 ], [ %659, %656 ]
  %665 = sub i32 %651, %661
  %666 = tail call i32 @llvm.smin.i32(i32 %665, i32 0)
  %667 = sub i32 %665, %666
  %668 = zext i32 %667 to i64
  %669 = add nuw nsw i64 %668, 1
  %670 = add nsw i64 %662, -1
  %671 = icmp ult i32 %667, 31
  br i1 %671, label %707, label %672

672:                                              ; preds = %660
  %673 = and i64 %669, 8589934560
  %674 = sub i64 %663, %673
  br label %675

675:                                              ; preds = %675, %672
  %676 = phi i64 [ 0, %672 ], [ %699, %675 ]
  %677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %695, %675 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %696, %675 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %697, %675 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %672 ], [ %698, %675 ]
  %681 = sub i64 %663, %676
  %682 = getelementptr inbounds i32, ptr %9, i64 %681
  %683 = getelementptr inbounds i32, ptr %682, i64 -7
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = getelementptr inbounds i32, ptr %682, i64 -15
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %682, i64 -23
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = getelementptr inbounds i32, ptr %682, i64 -31
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = mul <8 x i32> %685, %677
  %696 = mul <8 x i32> %688, %678
  %697 = mul <8 x i32> %691, %679
  %698 = mul <8 x i32> %694, %680
  %699 = add nuw i64 %676, 32
  %700 = icmp eq i64 %699, %673
  br i1 %700, label %701, label %675, !llvm.loop !604

701:                                              ; preds = %675
  %702 = mul <8 x i32> %696, %695
  %703 = mul <8 x i32> %697, %702
  %704 = mul <8 x i32> %698, %703
  %705 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %704)
  %706 = icmp eq i64 %669, %673
  br i1 %706, label %719, label %707

707:                                              ; preds = %660, %701
  %708 = phi i64 [ %663, %660 ], [ %674, %701 ]
  %709 = phi i32 [ 1, %660 ], [ %705, %701 ]
  br label %710

710:                                              ; preds = %707, %710
  %711 = phi i64 [ %716, %710 ], [ %708, %707 ]
  %712 = phi i32 [ %715, %710 ], [ %709, %707 ]
  %713 = getelementptr inbounds i32, ptr %9, i64 %711
  %714 = load i32, ptr %713, align 4, !tbaa !5
  %715 = mul nsw i32 %714, %712
  %716 = add nsw i64 %711, -1
  %717 = trunc i64 %711 to i32
  %718 = icmp sgt i32 %717, 0
  br i1 %718, label %710, label %719, !llvm.loop !605

719:                                              ; preds = %710, %701
  %720 = phi i32 [ %705, %701 ], [ %715, %710 ]
  %721 = and i64 %670, 4294967295
  %722 = getelementptr inbounds i32, ptr %6, i64 %721
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %720
  %725 = add nsw i32 %724, %664
  %726 = icmp sgt i64 %662, 2
  %727 = add nsw i64 %663, -1
  %728 = add i32 %661, 1
  br i1 %726, label %660, label %729, !llvm.loop !606

729:                                              ; preds = %719, %656
  %730 = phi i32 [ %659, %656 ], [ %725, %719 ]
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds double, ptr %2, i64 %731
  %733 = load double, ptr %732, align 8, !tbaa !18
  %734 = getelementptr inbounds i32, ptr %626, i64 %731
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = load i32, ptr %628, align 4, !tbaa !5
  %737 = sitofp i32 %736 to double
  %738 = sitofp i32 %735 to double
  %739 = fmul fast double %733, %738
  %740 = fadd fast double %739, %737
  %741 = fptosi double %740 to i32
  store i32 %741, ptr %628, align 4, !tbaa !5
  %742 = fadd fast double %733, %658
  %743 = add nuw nsw i32 %657, 1
  br i1 %650, label %744, label %791

744:                                              ; preds = %729
  %745 = load i32, ptr %4, align 4, !tbaa !5
  %746 = load i32, ptr %12, align 4, !tbaa !5
  %747 = add nsw i32 %746, -1
  %748 = icmp slt i32 %745, %747
  br i1 %748, label %768, label %749

749:                                              ; preds = %744
  %750 = icmp eq i32 %745, %747
  br i1 %750, label %751, label %784

751:                                              ; preds = %749
  store i32 0, ptr %4, align 4, !tbaa !5
  %752 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %752, ptr %6, align 4, !tbaa !5
  br i1 %655, label %791, label %753

753:                                              ; preds = %751, %778
  %754 = phi i64 [ %782, %778 ], [ 1, %751 ]
  %755 = getelementptr inbounds i32, ptr %4, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !5
  %757 = getelementptr inbounds i32, ptr %12, i64 %754
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = add nsw i32 %758, -1
  %760 = icmp slt i32 %756, %759
  br i1 %760, label %761, label %776

761:                                              ; preds = %753
  br i1 %748, label %768, label %762

762:                                              ; preds = %761
  %763 = getelementptr inbounds i32, ptr %7, i64 %754
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = getelementptr inbounds i32, ptr %6, i64 %754
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = add nsw i32 %766, %764
  store i32 %767, ptr %765, align 4, !tbaa !5
  br label %786

768:                                              ; preds = %744, %761
  %769 = phi i32 [ %756, %761 ], [ %745, %744 ]
  %770 = phi ptr [ %755, %761 ], [ %4, %744 ]
  %771 = phi i64 [ %754, %761 ], [ 0, %744 ]
  %772 = add nsw i32 %769, 1
  store i32 %772, ptr %770, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %7, i64 %771
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %771
  br label %786

776:                                              ; preds = %753
  %777 = icmp eq i32 %756, %759
  br i1 %777, label %778, label %784

778:                                              ; preds = %776
  store i32 0, ptr %755, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %8, i64 %754
  %780 = load i32, ptr %779, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %6, i64 %754
  store i32 %780, ptr %781, align 4, !tbaa !5
  %782 = add nuw nsw i64 %754, 1
  %783 = icmp eq i64 %782, %653
  br i1 %783, label %791, label %753, !llvm.loop !607

784:                                              ; preds = %749, %776
  %785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

786:                                              ; preds = %762, %768
  %787 = phi ptr [ %775, %768 ], [ %755, %762 ]
  %788 = phi i32 [ %774, %768 ], [ 1, %762 ]
  %789 = load i32, ptr %787, align 4, !tbaa !5
  %790 = add nsw i32 %789, %788
  store i32 %790, ptr %787, align 4, !tbaa !5
  br label %791

791:                                              ; preds = %778, %786, %751, %729
  %792 = icmp eq i32 %743, %5
  br i1 %792, label %5440, label %656, !llvm.loop !608

793:                                              ; preds = %639, %927
  %794 = phi i32 [ 0, %639 ], [ %876, %927 ]
  %795 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %640, label %796, label %865

796:                                              ; preds = %793, %855
  %797 = phi i32 [ %864, %855 ], [ 0, %793 ]
  %798 = phi i64 [ %806, %855 ], [ %644, %793 ]
  %799 = phi i64 [ %863, %855 ], [ %643, %793 ]
  %800 = phi i32 [ %861, %855 ], [ %795, %793 ]
  %801 = sub i32 %642, %797
  %802 = tail call i32 @llvm.smin.i32(i32 %801, i32 0)
  %803 = sub i32 %801, %802
  %804 = zext i32 %803 to i64
  %805 = add nuw nsw i64 %804, 1
  %806 = add nsw i64 %798, -1
  %807 = icmp ult i32 %803, 31
  br i1 %807, label %843, label %808

808:                                              ; preds = %796
  %809 = and i64 %805, 8589934560
  %810 = sub i64 %799, %809
  br label %811

811:                                              ; preds = %811, %808
  %812 = phi i64 [ 0, %808 ], [ %835, %811 ]
  %813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %831, %811 ]
  %814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %832, %811 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %833, %811 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %808 ], [ %834, %811 ]
  %817 = sub i64 %799, %812
  %818 = getelementptr inbounds i32, ptr %11, i64 %817
  %819 = getelementptr inbounds i32, ptr %818, i64 -7
  %820 = load <8 x i32>, ptr %819, align 4, !tbaa !5
  %821 = shufflevector <8 x i32> %820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %822 = getelementptr inbounds i32, ptr %818, i64 -15
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %818, i64 -23
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %818, i64 -31
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = mul <8 x i32> %821, %813
  %832 = mul <8 x i32> %824, %814
  %833 = mul <8 x i32> %827, %815
  %834 = mul <8 x i32> %830, %816
  %835 = add nuw i64 %812, 32
  %836 = icmp eq i64 %835, %809
  br i1 %836, label %837, label %811, !llvm.loop !609

837:                                              ; preds = %811
  %838 = mul <8 x i32> %832, %831
  %839 = mul <8 x i32> %833, %838
  %840 = mul <8 x i32> %834, %839
  %841 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %840)
  %842 = icmp eq i64 %805, %809
  br i1 %842, label %855, label %843

843:                                              ; preds = %796, %837
  %844 = phi i64 [ %799, %796 ], [ %810, %837 ]
  %845 = phi i32 [ 1, %796 ], [ %841, %837 ]
  br label %846

846:                                              ; preds = %843, %846
  %847 = phi i64 [ %852, %846 ], [ %844, %843 ]
  %848 = phi i32 [ %851, %846 ], [ %845, %843 ]
  %849 = getelementptr inbounds i32, ptr %11, i64 %847
  %850 = load i32, ptr %849, align 4, !tbaa !5
  %851 = mul nsw i32 %850, %848
  %852 = add nsw i64 %847, -1
  %853 = trunc i64 %847 to i32
  %854 = icmp sgt i32 %853, 0
  br i1 %854, label %846, label %855, !llvm.loop !610

855:                                              ; preds = %846, %837
  %856 = phi i32 [ %841, %837 ], [ %851, %846 ]
  %857 = and i64 %806, 4294967295
  %858 = getelementptr inbounds i32, ptr %6, i64 %857
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %856
  %861 = add nsw i32 %860, %800
  %862 = icmp sgt i64 %798, 2
  %863 = add nsw i64 %799, -1
  %864 = add i32 %797, 1
  br i1 %862, label %796, label %865, !llvm.loop !611

865:                                              ; preds = %855, %793
  %866 = phi i32 [ %795, %793 ], [ %861, %855 ]
  %867 = icmp slt i32 %866, %5
  br i1 %867, label %870, label %868

868:                                              ; preds = %865
  %869 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

870:                                              ; preds = %865
  %871 = sext i32 %866 to i64
  %872 = getelementptr inbounds i32, ptr %626, i64 %871
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = load i32, ptr %628, align 4, !tbaa !5
  %875 = add i32 %874, %873
  store i32 %875, ptr %628, align 4, !tbaa !5
  %876 = add nuw nsw i32 %794, 1
  br i1 %641, label %877, label %927

877:                                              ; preds = %870
  %878 = load i32, ptr %4, align 4, !tbaa !5
  %879 = load i32, ptr %12, align 4, !tbaa !5
  %880 = add nsw i32 %879, -1
  %881 = icmp slt i32 %878, %880
  br i1 %881, label %904, label %882

882:                                              ; preds = %877
  %883 = icmp eq i32 %878, %880
  br i1 %883, label %884, label %920

884:                                              ; preds = %882
  store i32 0, ptr %4, align 4, !tbaa !5
  %885 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %885, ptr %6, align 4, !tbaa !5
  br i1 %646, label %927, label %886

886:                                              ; preds = %884, %914
  %887 = phi i64 [ %918, %914 ], [ 1, %884 ]
  %888 = getelementptr inbounds i32, ptr %4, i64 %887
  %889 = load i32, ptr %888, align 4, !tbaa !5
  %890 = getelementptr inbounds i32, ptr %12, i64 %887
  %891 = load i32, ptr %890, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %889, %892
  br i1 %893, label %894, label %912

894:                                              ; preds = %886
  br i1 %881, label %904, label %895

895:                                              ; preds = %894
  %896 = shl i64 %887, 32
  %897 = add i64 %896, -4294967296
  %898 = ashr exact i64 %897, 32
  %899 = getelementptr inbounds i32, ptr %7, i64 %898
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = getelementptr inbounds i32, ptr %6, i64 %887
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = add nsw i32 %902, %900
  store i32 %903, ptr %901, align 4, !tbaa !5
  br label %922

904:                                              ; preds = %877, %894
  %905 = phi i32 [ %889, %894 ], [ %878, %877 ]
  %906 = phi ptr [ %888, %894 ], [ %4, %877 ]
  %907 = phi i64 [ %887, %894 ], [ 0, %877 ]
  %908 = add nsw i32 %905, 1
  store i32 %908, ptr %906, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %7, i64 %907
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %6, i64 %907
  br label %922

912:                                              ; preds = %886
  %913 = icmp eq i32 %889, %892
  br i1 %913, label %914, label %920

914:                                              ; preds = %912
  store i32 0, ptr %888, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %8, i64 %887
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %6, i64 %887
  store i32 %916, ptr %917, align 4, !tbaa !5
  %918 = add nuw nsw i64 %887, 1
  %919 = icmp eq i64 %918, %644
  br i1 %919, label %927, label %886, !llvm.loop !612

920:                                              ; preds = %882, %912
  %921 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

922:                                              ; preds = %895, %904
  %923 = phi ptr [ %911, %904 ], [ %888, %895 ]
  %924 = phi i32 [ %910, %904 ], [ 1, %895 ]
  %925 = load i32, ptr %923, align 4, !tbaa !5
  %926 = add nsw i32 %925, %924
  store i32 %926, ptr %923, align 4, !tbaa !5
  br label %927

927:                                              ; preds = %914, %922, %884, %870
  %928 = icmp eq i32 %876, %5
  br i1 %928, label %5440, label %793, !llvm.loop !613

929:                                              ; preds = %632
  %930 = getelementptr inbounds i32, ptr %3, i64 %19
  %931 = load i32, ptr %930, align 4, !tbaa !5
  %932 = icmp eq i32 %931, 0
  %933 = icmp sgt i32 %5, 0
  br i1 %932, label %943, label %934

934:                                              ; preds = %929
  br i1 %933, label %935, label %5440

935:                                              ; preds = %934
  %936 = icmp sgt i32 %13, 1
  %937 = icmp sgt i32 %13, 0
  %938 = add i32 %13, -2
  %939 = zext i32 %938 to i64
  %940 = zext i32 %13 to i64
  %941 = add nuw i32 %5, 1
  %942 = icmp eq i32 %13, 1
  br label %1083

943:                                              ; preds = %929
  br i1 %933, label %944, label %5440

944:                                              ; preds = %943
  %945 = icmp sgt i32 %13, 1
  %946 = icmp sgt i32 %13, 0
  %947 = add i32 %13, -2
  %948 = zext i32 %947 to i64
  %949 = zext i32 %13 to i64
  %950 = add nuw i32 %5, 1
  %951 = icmp eq i32 %13, 1
  br label %952

952:                                              ; preds = %944, %1081
  %953 = phi i32 [ 0, %944 ], [ %1033, %1081 ]
  %954 = phi double [ 0.000000e+00, %944 ], [ %1032, %1081 ]
  %955 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %945, label %956, label %1025

956:                                              ; preds = %952, %1015
  %957 = phi i32 [ %1024, %1015 ], [ 0, %952 ]
  %958 = phi i64 [ %966, %1015 ], [ %949, %952 ]
  %959 = phi i64 [ %1023, %1015 ], [ %948, %952 ]
  %960 = phi i32 [ %1021, %1015 ], [ %955, %952 ]
  %961 = sub i32 %947, %957
  %962 = tail call i32 @llvm.smin.i32(i32 %961, i32 0)
  %963 = sub i32 %961, %962
  %964 = zext i32 %963 to i64
  %965 = add nuw nsw i64 %964, 1
  %966 = add nsw i64 %958, -1
  %967 = icmp ult i32 %963, 31
  br i1 %967, label %1003, label %968

968:                                              ; preds = %956
  %969 = and i64 %965, 8589934560
  %970 = sub i64 %959, %969
  br label %971

971:                                              ; preds = %971, %968
  %972 = phi i64 [ 0, %968 ], [ %995, %971 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %991, %971 ]
  %974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %992, %971 ]
  %975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %993, %971 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %968 ], [ %994, %971 ]
  %977 = sub i64 %959, %972
  %978 = getelementptr inbounds i32, ptr %9, i64 %977
  %979 = getelementptr inbounds i32, ptr %978, i64 -7
  %980 = load <8 x i32>, ptr %979, align 4, !tbaa !5
  %981 = shufflevector <8 x i32> %980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %982 = getelementptr inbounds i32, ptr %978, i64 -15
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %978, i64 -23
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %978, i64 -31
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = mul <8 x i32> %981, %973
  %992 = mul <8 x i32> %984, %974
  %993 = mul <8 x i32> %987, %975
  %994 = mul <8 x i32> %990, %976
  %995 = add nuw i64 %972, 32
  %996 = icmp eq i64 %995, %969
  br i1 %996, label %997, label %971, !llvm.loop !614

997:                                              ; preds = %971
  %998 = mul <8 x i32> %992, %991
  %999 = mul <8 x i32> %993, %998
  %1000 = mul <8 x i32> %994, %999
  %1001 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1000)
  %1002 = icmp eq i64 %965, %969
  br i1 %1002, label %1015, label %1003

1003:                                             ; preds = %956, %997
  %1004 = phi i64 [ %959, %956 ], [ %970, %997 ]
  %1005 = phi i32 [ 1, %956 ], [ %1001, %997 ]
  br label %1006

1006:                                             ; preds = %1003, %1006
  %1007 = phi i64 [ %1012, %1006 ], [ %1004, %1003 ]
  %1008 = phi i32 [ %1011, %1006 ], [ %1005, %1003 ]
  %1009 = getelementptr inbounds i32, ptr %9, i64 %1007
  %1010 = load i32, ptr %1009, align 4, !tbaa !5
  %1011 = mul nsw i32 %1010, %1008
  %1012 = add nsw i64 %1007, -1
  %1013 = trunc i64 %1007 to i32
  %1014 = icmp sgt i32 %1013, 0
  br i1 %1014, label %1006, label %1015, !llvm.loop !615

1015:                                             ; preds = %1006, %997
  %1016 = phi i32 [ %1001, %997 ], [ %1011, %1006 ]
  %1017 = and i64 %966, 4294967295
  %1018 = getelementptr inbounds i32, ptr %6, i64 %1017
  %1019 = load i32, ptr %1018, align 4, !tbaa !5
  %1020 = mul nsw i32 %1019, %1016
  %1021 = add nsw i32 %1020, %960
  %1022 = icmp sgt i64 %958, 2
  %1023 = add nsw i64 %959, -1
  %1024 = add i32 %957, 1
  br i1 %1022, label %956, label %1025, !llvm.loop !616

1025:                                             ; preds = %1015, %952
  %1026 = phi i32 [ %955, %952 ], [ %1021, %1015 ]
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds i32, ptr %626, i64 %1027
  %1029 = load i32, ptr %1028, align 4, !tbaa !5
  %1030 = load i32, ptr %628, align 4, !tbaa !5
  %1031 = add nsw i32 %1030, %1029
  store i32 %1031, ptr %628, align 4, !tbaa !5
  %1032 = fadd fast double %954, 1.000000e+00
  %1033 = add nuw nsw i32 %953, 1
  br i1 %946, label %1034, label %1081

1034:                                             ; preds = %1025
  %1035 = load i32, ptr %4, align 4, !tbaa !5
  %1036 = load i32, ptr %12, align 4, !tbaa !5
  %1037 = add nsw i32 %1036, -1
  %1038 = icmp slt i32 %1035, %1037
  br i1 %1038, label %1058, label %1039

1039:                                             ; preds = %1034
  %1040 = icmp eq i32 %1035, %1037
  br i1 %1040, label %1041, label %1074

1041:                                             ; preds = %1039
  store i32 0, ptr %4, align 4, !tbaa !5
  %1042 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1042, ptr %6, align 4, !tbaa !5
  br i1 %951, label %1081, label %1043

1043:                                             ; preds = %1041, %1068
  %1044 = phi i64 [ %1072, %1068 ], [ 1, %1041 ]
  %1045 = getelementptr inbounds i32, ptr %4, i64 %1044
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = getelementptr inbounds i32, ptr %12, i64 %1044
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, -1
  %1050 = icmp slt i32 %1046, %1049
  br i1 %1050, label %1051, label %1066

1051:                                             ; preds = %1043
  br i1 %1038, label %1058, label %1052

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds i32, ptr %7, i64 %1044
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1044
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, %1054
  store i32 %1057, ptr %1055, align 4, !tbaa !5
  br label %1076

1058:                                             ; preds = %1034, %1051
  %1059 = phi i32 [ %1046, %1051 ], [ %1035, %1034 ]
  %1060 = phi ptr [ %1045, %1051 ], [ %4, %1034 ]
  %1061 = phi i64 [ %1044, %1051 ], [ 0, %1034 ]
  %1062 = add nsw i32 %1059, 1
  store i32 %1062, ptr %1060, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %6, i64 %1061
  br label %1076

1066:                                             ; preds = %1043
  %1067 = icmp eq i32 %1046, %1049
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1066
  store i32 0, ptr %1045, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %8, i64 %1044
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1044
  store i32 %1070, ptr %1071, align 4, !tbaa !5
  %1072 = add nuw nsw i64 %1044, 1
  %1073 = icmp eq i64 %1072, %949
  br i1 %1073, label %1081, label %1043, !llvm.loop !617

1074:                                             ; preds = %1039, %1066
  %1075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1076:                                             ; preds = %1052, %1058
  %1077 = phi ptr [ %1065, %1058 ], [ %1045, %1052 ]
  %1078 = phi i32 [ %1064, %1058 ], [ 1, %1052 ]
  %1079 = load i32, ptr %1077, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, %1078
  store i32 %1080, ptr %1077, align 4, !tbaa !5
  br label %1081

1081:                                             ; preds = %1068, %1076, %1041, %1025
  %1082 = icmp eq i32 %1033, %5
  br i1 %1082, label %5440, label %952, !llvm.loop !618

1083:                                             ; preds = %935, %1217
  %1084 = phi i32 [ 0, %935 ], [ %1166, %1217 ]
  %1085 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %936, label %1086, label %1155

1086:                                             ; preds = %1083, %1145
  %1087 = phi i32 [ %1154, %1145 ], [ 0, %1083 ]
  %1088 = phi i64 [ %1096, %1145 ], [ %940, %1083 ]
  %1089 = phi i64 [ %1153, %1145 ], [ %939, %1083 ]
  %1090 = phi i32 [ %1151, %1145 ], [ %1085, %1083 ]
  %1091 = sub i32 %938, %1087
  %1092 = tail call i32 @llvm.smin.i32(i32 %1091, i32 0)
  %1093 = sub i32 %1091, %1092
  %1094 = zext i32 %1093 to i64
  %1095 = add nuw nsw i64 %1094, 1
  %1096 = add nsw i64 %1088, -1
  %1097 = icmp ult i32 %1093, 31
  br i1 %1097, label %1133, label %1098

1098:                                             ; preds = %1086
  %1099 = and i64 %1095, 8589934560
  %1100 = sub i64 %1089, %1099
  br label %1101

1101:                                             ; preds = %1101, %1098
  %1102 = phi i64 [ 0, %1098 ], [ %1125, %1101 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1121, %1101 ]
  %1104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1122, %1101 ]
  %1105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1123, %1101 ]
  %1106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1098 ], [ %1124, %1101 ]
  %1107 = sub i64 %1089, %1102
  %1108 = getelementptr inbounds i32, ptr %11, i64 %1107
  %1109 = getelementptr inbounds i32, ptr %1108, i64 -7
  %1110 = load <8 x i32>, ptr %1109, align 4, !tbaa !5
  %1111 = shufflevector <8 x i32> %1110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1112 = getelementptr inbounds i32, ptr %1108, i64 -15
  %1113 = load <8 x i32>, ptr %1112, align 4, !tbaa !5
  %1114 = shufflevector <8 x i32> %1113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1115 = getelementptr inbounds i32, ptr %1108, i64 -23
  %1116 = load <8 x i32>, ptr %1115, align 4, !tbaa !5
  %1117 = shufflevector <8 x i32> %1116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1118 = getelementptr inbounds i32, ptr %1108, i64 -31
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = mul <8 x i32> %1111, %1103
  %1122 = mul <8 x i32> %1114, %1104
  %1123 = mul <8 x i32> %1117, %1105
  %1124 = mul <8 x i32> %1120, %1106
  %1125 = add nuw i64 %1102, 32
  %1126 = icmp eq i64 %1125, %1099
  br i1 %1126, label %1127, label %1101, !llvm.loop !619

1127:                                             ; preds = %1101
  %1128 = mul <8 x i32> %1122, %1121
  %1129 = mul <8 x i32> %1123, %1128
  %1130 = mul <8 x i32> %1124, %1129
  %1131 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1130)
  %1132 = icmp eq i64 %1095, %1099
  br i1 %1132, label %1145, label %1133

1133:                                             ; preds = %1086, %1127
  %1134 = phi i64 [ %1089, %1086 ], [ %1100, %1127 ]
  %1135 = phi i32 [ 1, %1086 ], [ %1131, %1127 ]
  br label %1136

1136:                                             ; preds = %1133, %1136
  %1137 = phi i64 [ %1142, %1136 ], [ %1134, %1133 ]
  %1138 = phi i32 [ %1141, %1136 ], [ %1135, %1133 ]
  %1139 = getelementptr inbounds i32, ptr %11, i64 %1137
  %1140 = load i32, ptr %1139, align 4, !tbaa !5
  %1141 = mul nsw i32 %1140, %1138
  %1142 = add nsw i64 %1137, -1
  %1143 = trunc i64 %1137 to i32
  %1144 = icmp sgt i32 %1143, 0
  br i1 %1144, label %1136, label %1145, !llvm.loop !620

1145:                                             ; preds = %1136, %1127
  %1146 = phi i32 [ %1131, %1127 ], [ %1141, %1136 ]
  %1147 = and i64 %1096, 4294967295
  %1148 = getelementptr inbounds i32, ptr %6, i64 %1147
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1146
  %1151 = add nsw i32 %1150, %1090
  %1152 = icmp sgt i64 %1088, 2
  %1153 = add nsw i64 %1089, -1
  %1154 = add i32 %1087, 1
  br i1 %1152, label %1086, label %1155, !llvm.loop !621

1155:                                             ; preds = %1145, %1083
  %1156 = phi i32 [ %1085, %1083 ], [ %1151, %1145 ]
  %1157 = icmp slt i32 %1156, %5
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1155
  %1159 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1160:                                             ; preds = %1155
  %1161 = sext i32 %1156 to i64
  %1162 = getelementptr inbounds i32, ptr %626, i64 %1161
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = load i32, ptr %628, align 4, !tbaa !5
  %1165 = add nsw i32 %1164, %1163
  store i32 %1165, ptr %628, align 4, !tbaa !5
  %1166 = add nuw nsw i32 %1084, 1
  br i1 %937, label %1167, label %1217

1167:                                             ; preds = %1160
  %1168 = load i32, ptr %4, align 4, !tbaa !5
  %1169 = load i32, ptr %12, align 4, !tbaa !5
  %1170 = add nsw i32 %1169, -1
  %1171 = icmp slt i32 %1168, %1170
  br i1 %1171, label %1194, label %1172

1172:                                             ; preds = %1167
  %1173 = icmp eq i32 %1168, %1170
  br i1 %1173, label %1174, label %1210

1174:                                             ; preds = %1172
  store i32 0, ptr %4, align 4, !tbaa !5
  %1175 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1175, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1217, label %1176

1176:                                             ; preds = %1174, %1204
  %1177 = phi i64 [ %1208, %1204 ], [ 1, %1174 ]
  %1178 = getelementptr inbounds i32, ptr %4, i64 %1177
  %1179 = load i32, ptr %1178, align 4, !tbaa !5
  %1180 = getelementptr inbounds i32, ptr %12, i64 %1177
  %1181 = load i32, ptr %1180, align 4, !tbaa !5
  %1182 = add nsw i32 %1181, -1
  %1183 = icmp slt i32 %1179, %1182
  br i1 %1183, label %1184, label %1202

1184:                                             ; preds = %1176
  br i1 %1171, label %1194, label %1185

1185:                                             ; preds = %1184
  %1186 = shl i64 %1177, 32
  %1187 = add i64 %1186, -4294967296
  %1188 = ashr exact i64 %1187, 32
  %1189 = getelementptr inbounds i32, ptr %7, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %6, i64 %1177
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, %1190
  store i32 %1193, ptr %1191, align 4, !tbaa !5
  br label %1212

1194:                                             ; preds = %1167, %1184
  %1195 = phi i32 [ %1179, %1184 ], [ %1168, %1167 ]
  %1196 = phi ptr [ %1178, %1184 ], [ %4, %1167 ]
  %1197 = phi i64 [ %1177, %1184 ], [ 0, %1167 ]
  %1198 = add nsw i32 %1195, 1
  store i32 %1198, ptr %1196, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %7, i64 %1197
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %6, i64 %1197
  br label %1212

1202:                                             ; preds = %1176
  %1203 = icmp eq i32 %1179, %1182
  br i1 %1203, label %1204, label %1210

1204:                                             ; preds = %1202
  store i32 0, ptr %1178, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %8, i64 %1177
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1177
  store i32 %1206, ptr %1207, align 4, !tbaa !5
  %1208 = add nuw nsw i64 %1177, 1
  %1209 = icmp eq i64 %1208, %940
  br i1 %1209, label %1217, label %1176, !llvm.loop !622

1210:                                             ; preds = %1172, %1202
  %1211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1212:                                             ; preds = %1185, %1194
  %1213 = phi ptr [ %1201, %1194 ], [ %1178, %1185 ]
  %1214 = phi i32 [ %1200, %1194 ], [ 1, %1185 ]
  %1215 = load i32, ptr %1213, align 4, !tbaa !5
  %1216 = add nsw i32 %1215, %1214
  store i32 %1216, ptr %1213, align 4, !tbaa !5
  br label %1217

1217:                                             ; preds = %1204, %1212, %1174, %1160
  %1218 = icmp eq i32 %1166, %5
  br i1 %1218, label %5440, label %1083, !llvm.loop !623

1219:                                             ; preds = %632
  %1220 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

1221:                                             ; preds = %18
  %1222 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1223 = load ptr, ptr %1222, align 8, !tbaa !9
  %1224 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1225 = load ptr, ptr %1224, align 8, !tbaa !9
  store i8 0, ptr %1225, align 1, !tbaa !11
  %1226 = icmp eq i32 %13, 0
  br i1 %1226, label %1227, label %1230

1227:                                             ; preds = %1221
  %1228 = load i32, ptr %1223, align 4, !tbaa !5
  %1229 = trunc i32 %1228 to i8
  store i8 %1229, ptr %1225, align 1, !tbaa !11
  br label %5440

1230:                                             ; preds = %1221
  switch i32 %1, label %1822 [
    i32 1, label %1231
    i32 0, label %1530
  ]

1231:                                             ; preds = %1230
  %1232 = getelementptr inbounds i32, ptr %3, i64 %19
  %1233 = load i32, ptr %1232, align 4, !tbaa !5
  %1234 = icmp eq i32 %1233, 0
  %1235 = icmp sgt i32 %5, 0
  br i1 %1234, label %1245, label %1236

1236:                                             ; preds = %1231
  br i1 %1235, label %1237, label %5440

1237:                                             ; preds = %1236
  %1238 = icmp sgt i32 %13, 1
  %1239 = icmp sgt i32 %13, 0
  %1240 = add i32 %13, -2
  %1241 = zext i32 %1240 to i64
  %1242 = zext i32 %13 to i64
  %1243 = add nuw i32 %5, 1
  %1244 = icmp eq i32 %13, 1
  br label %1393

1245:                                             ; preds = %1231
  br i1 %1235, label %1246, label %5440

1246:                                             ; preds = %1245
  %1247 = icmp sgt i32 %13, 1
  %1248 = icmp sgt i32 %13, 0
  %1249 = add i32 %13, -2
  %1250 = zext i32 %1249 to i64
  %1251 = zext i32 %13 to i64
  %1252 = add nuw i32 %5, 1
  %1253 = icmp eq i32 %13, 1
  br label %1254

1254:                                             ; preds = %1246, %1391
  %1255 = phi i32 [ 0, %1246 ], [ %1343, %1391 ]
  %1256 = phi double [ 0.000000e+00, %1246 ], [ %1342, %1391 ]
  %1257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1247, label %1258, label %1327

1258:                                             ; preds = %1254, %1317
  %1259 = phi i32 [ %1326, %1317 ], [ 0, %1254 ]
  %1260 = phi i64 [ %1268, %1317 ], [ %1251, %1254 ]
  %1261 = phi i64 [ %1325, %1317 ], [ %1250, %1254 ]
  %1262 = phi i32 [ %1323, %1317 ], [ %1257, %1254 ]
  %1263 = sub i32 %1249, %1259
  %1264 = tail call i32 @llvm.smin.i32(i32 %1263, i32 0)
  %1265 = sub i32 %1263, %1264
  %1266 = zext i32 %1265 to i64
  %1267 = add nuw nsw i64 %1266, 1
  %1268 = add nsw i64 %1260, -1
  %1269 = icmp ult i32 %1265, 31
  br i1 %1269, label %1305, label %1270

1270:                                             ; preds = %1258
  %1271 = and i64 %1267, 8589934560
  %1272 = sub i64 %1261, %1271
  br label %1273

1273:                                             ; preds = %1273, %1270
  %1274 = phi i64 [ 0, %1270 ], [ %1297, %1273 ]
  %1275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1293, %1273 ]
  %1276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1294, %1273 ]
  %1277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1295, %1273 ]
  %1278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1270 ], [ %1296, %1273 ]
  %1279 = sub i64 %1261, %1274
  %1280 = getelementptr inbounds i32, ptr %9, i64 %1279
  %1281 = getelementptr inbounds i32, ptr %1280, i64 -7
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = getelementptr inbounds i32, ptr %1280, i64 -15
  %1285 = load <8 x i32>, ptr %1284, align 4, !tbaa !5
  %1286 = shufflevector <8 x i32> %1285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1287 = getelementptr inbounds i32, ptr %1280, i64 -23
  %1288 = load <8 x i32>, ptr %1287, align 4, !tbaa !5
  %1289 = shufflevector <8 x i32> %1288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1290 = getelementptr inbounds i32, ptr %1280, i64 -31
  %1291 = load <8 x i32>, ptr %1290, align 4, !tbaa !5
  %1292 = shufflevector <8 x i32> %1291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1293 = mul <8 x i32> %1283, %1275
  %1294 = mul <8 x i32> %1286, %1276
  %1295 = mul <8 x i32> %1289, %1277
  %1296 = mul <8 x i32> %1292, %1278
  %1297 = add nuw i64 %1274, 32
  %1298 = icmp eq i64 %1297, %1271
  br i1 %1298, label %1299, label %1273, !llvm.loop !624

1299:                                             ; preds = %1273
  %1300 = mul <8 x i32> %1294, %1293
  %1301 = mul <8 x i32> %1295, %1300
  %1302 = mul <8 x i32> %1296, %1301
  %1303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1302)
  %1304 = icmp eq i64 %1267, %1271
  br i1 %1304, label %1317, label %1305

1305:                                             ; preds = %1258, %1299
  %1306 = phi i64 [ %1261, %1258 ], [ %1272, %1299 ]
  %1307 = phi i32 [ 1, %1258 ], [ %1303, %1299 ]
  br label %1308

1308:                                             ; preds = %1305, %1308
  %1309 = phi i64 [ %1314, %1308 ], [ %1306, %1305 ]
  %1310 = phi i32 [ %1313, %1308 ], [ %1307, %1305 ]
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1309
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1310
  %1314 = add nsw i64 %1309, -1
  %1315 = trunc i64 %1309 to i32
  %1316 = icmp sgt i32 %1315, 0
  br i1 %1316, label %1308, label %1317, !llvm.loop !625

1317:                                             ; preds = %1308, %1299
  %1318 = phi i32 [ %1303, %1299 ], [ %1313, %1308 ]
  %1319 = and i64 %1268, 4294967295
  %1320 = getelementptr inbounds i32, ptr %6, i64 %1319
  %1321 = load i32, ptr %1320, align 4, !tbaa !5
  %1322 = mul nsw i32 %1321, %1318
  %1323 = add nsw i32 %1322, %1262
  %1324 = icmp sgt i64 %1260, 2
  %1325 = add nsw i64 %1261, -1
  %1326 = add i32 %1259, 1
  br i1 %1324, label %1258, label %1327, !llvm.loop !626

1327:                                             ; preds = %1317, %1254
  %1328 = phi i32 [ %1257, %1254 ], [ %1323, %1317 ]
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds double, ptr %2, i64 %1329
  %1331 = load double, ptr %1330, align 8, !tbaa !18
  %1332 = getelementptr inbounds i32, ptr %1223, i64 %1329
  %1333 = load i32, ptr %1332, align 4, !tbaa !5
  %1334 = load i8, ptr %1225, align 1, !tbaa !11
  %1335 = sitofp i8 %1334 to double
  %1336 = shl i32 %1333, 24
  %1337 = ashr exact i32 %1336, 24
  %1338 = sitofp i32 %1337 to double
  %1339 = fmul fast double %1331, %1338
  %1340 = fadd fast double %1339, %1335
  %1341 = fptosi double %1340 to i8
  store i8 %1341, ptr %1225, align 1, !tbaa !11
  %1342 = fadd fast double %1331, %1256
  %1343 = add nuw nsw i32 %1255, 1
  br i1 %1248, label %1344, label %1391

1344:                                             ; preds = %1327
  %1345 = load i32, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %12, align 4, !tbaa !5
  %1347 = add nsw i32 %1346, -1
  %1348 = icmp slt i32 %1345, %1347
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1344
  %1350 = icmp eq i32 %1345, %1347
  br i1 %1350, label %1351, label %1384

1351:                                             ; preds = %1349
  store i32 0, ptr %4, align 4, !tbaa !5
  %1352 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1352, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1391, label %1353

1353:                                             ; preds = %1351, %1378
  %1354 = phi i64 [ %1382, %1378 ], [ 1, %1351 ]
  %1355 = getelementptr inbounds i32, ptr %4, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = getelementptr inbounds i32, ptr %12, i64 %1354
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = add nsw i32 %1358, -1
  %1360 = icmp slt i32 %1356, %1359
  br i1 %1360, label %1361, label %1376

1361:                                             ; preds = %1353
  br i1 %1348, label %1368, label %1362

1362:                                             ; preds = %1361
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1354
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, %1364
  store i32 %1367, ptr %1365, align 4, !tbaa !5
  br label %1386

1368:                                             ; preds = %1344, %1361
  %1369 = phi i32 [ %1356, %1361 ], [ %1345, %1344 ]
  %1370 = phi ptr [ %1355, %1361 ], [ %4, %1344 ]
  %1371 = phi i64 [ %1354, %1361 ], [ 0, %1344 ]
  %1372 = add nsw i32 %1369, 1
  store i32 %1372, ptr %1370, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1371
  br label %1386

1376:                                             ; preds = %1353
  %1377 = icmp eq i32 %1356, %1359
  br i1 %1377, label %1378, label %1384

1378:                                             ; preds = %1376
  store i32 0, ptr %1355, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %8, i64 %1354
  %1380 = load i32, ptr %1379, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %6, i64 %1354
  store i32 %1380, ptr %1381, align 4, !tbaa !5
  %1382 = add nuw nsw i64 %1354, 1
  %1383 = icmp eq i64 %1382, %1251
  br i1 %1383, label %1391, label %1353, !llvm.loop !627

1384:                                             ; preds = %1349, %1376
  %1385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1386:                                             ; preds = %1362, %1368
  %1387 = phi ptr [ %1375, %1368 ], [ %1355, %1362 ]
  %1388 = phi i32 [ %1374, %1368 ], [ 1, %1362 ]
  %1389 = load i32, ptr %1387, align 4, !tbaa !5
  %1390 = add nsw i32 %1389, %1388
  store i32 %1390, ptr %1387, align 4, !tbaa !5
  br label %1391

1391:                                             ; preds = %1378, %1386, %1351, %1327
  %1392 = icmp eq i32 %1343, %5
  br i1 %1392, label %5440, label %1254, !llvm.loop !628

1393:                                             ; preds = %1237, %1528
  %1394 = phi i32 [ 0, %1237 ], [ %1477, %1528 ]
  %1395 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1238, label %1396, label %1465

1396:                                             ; preds = %1393, %1455
  %1397 = phi i32 [ %1464, %1455 ], [ 0, %1393 ]
  %1398 = phi i64 [ %1406, %1455 ], [ %1242, %1393 ]
  %1399 = phi i64 [ %1463, %1455 ], [ %1241, %1393 ]
  %1400 = phi i32 [ %1461, %1455 ], [ %1395, %1393 ]
  %1401 = sub i32 %1240, %1397
  %1402 = tail call i32 @llvm.smin.i32(i32 %1401, i32 0)
  %1403 = sub i32 %1401, %1402
  %1404 = zext i32 %1403 to i64
  %1405 = add nuw nsw i64 %1404, 1
  %1406 = add nsw i64 %1398, -1
  %1407 = icmp ult i32 %1403, 31
  br i1 %1407, label %1443, label %1408

1408:                                             ; preds = %1396
  %1409 = and i64 %1405, 8589934560
  %1410 = sub i64 %1399, %1409
  br label %1411

1411:                                             ; preds = %1411, %1408
  %1412 = phi i64 [ 0, %1408 ], [ %1435, %1411 ]
  %1413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1431, %1411 ]
  %1414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1432, %1411 ]
  %1415 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1433, %1411 ]
  %1416 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1434, %1411 ]
  %1417 = sub i64 %1399, %1412
  %1418 = getelementptr inbounds i32, ptr %11, i64 %1417
  %1419 = getelementptr inbounds i32, ptr %1418, i64 -7
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1418, i64 -15
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = getelementptr inbounds i32, ptr %1418, i64 -23
  %1426 = load <8 x i32>, ptr %1425, align 4, !tbaa !5
  %1427 = shufflevector <8 x i32> %1426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1428 = getelementptr inbounds i32, ptr %1418, i64 -31
  %1429 = load <8 x i32>, ptr %1428, align 4, !tbaa !5
  %1430 = shufflevector <8 x i32> %1429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1431 = mul <8 x i32> %1421, %1413
  %1432 = mul <8 x i32> %1424, %1414
  %1433 = mul <8 x i32> %1427, %1415
  %1434 = mul <8 x i32> %1430, %1416
  %1435 = add nuw i64 %1412, 32
  %1436 = icmp eq i64 %1435, %1409
  br i1 %1436, label %1437, label %1411, !llvm.loop !629

1437:                                             ; preds = %1411
  %1438 = mul <8 x i32> %1432, %1431
  %1439 = mul <8 x i32> %1433, %1438
  %1440 = mul <8 x i32> %1434, %1439
  %1441 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1440)
  %1442 = icmp eq i64 %1405, %1409
  br i1 %1442, label %1455, label %1443

1443:                                             ; preds = %1396, %1437
  %1444 = phi i64 [ %1399, %1396 ], [ %1410, %1437 ]
  %1445 = phi i32 [ 1, %1396 ], [ %1441, %1437 ]
  br label %1446

1446:                                             ; preds = %1443, %1446
  %1447 = phi i64 [ %1452, %1446 ], [ %1444, %1443 ]
  %1448 = phi i32 [ %1451, %1446 ], [ %1445, %1443 ]
  %1449 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1450 = load i32, ptr %1449, align 4, !tbaa !5
  %1451 = mul nsw i32 %1450, %1448
  %1452 = add nsw i64 %1447, -1
  %1453 = trunc i64 %1447 to i32
  %1454 = icmp sgt i32 %1453, 0
  br i1 %1454, label %1446, label %1455, !llvm.loop !630

1455:                                             ; preds = %1446, %1437
  %1456 = phi i32 [ %1441, %1437 ], [ %1451, %1446 ]
  %1457 = and i64 %1406, 4294967295
  %1458 = getelementptr inbounds i32, ptr %6, i64 %1457
  %1459 = load i32, ptr %1458, align 4, !tbaa !5
  %1460 = mul nsw i32 %1459, %1456
  %1461 = add nsw i32 %1460, %1400
  %1462 = icmp sgt i64 %1398, 2
  %1463 = add nsw i64 %1399, -1
  %1464 = add i32 %1397, 1
  br i1 %1462, label %1396, label %1465, !llvm.loop !631

1465:                                             ; preds = %1455, %1393
  %1466 = phi i32 [ %1395, %1393 ], [ %1461, %1455 ]
  %1467 = icmp slt i32 %1466, %5
  br i1 %1467, label %1470, label %1468

1468:                                             ; preds = %1465
  %1469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1470:                                             ; preds = %1465
  %1471 = sext i32 %1466 to i64
  %1472 = getelementptr inbounds i32, ptr %1223, i64 %1471
  %1473 = load i32, ptr %1472, align 4, !tbaa !5
  %1474 = load i8, ptr %1225, align 1, !tbaa !11
  %1475 = trunc i32 %1473 to i8
  %1476 = add i8 %1474, %1475
  store i8 %1476, ptr %1225, align 1, !tbaa !11
  %1477 = add nuw nsw i32 %1394, 1
  br i1 %1239, label %1478, label %1528

1478:                                             ; preds = %1470
  %1479 = load i32, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %12, align 4, !tbaa !5
  %1481 = add nsw i32 %1480, -1
  %1482 = icmp slt i32 %1479, %1481
  br i1 %1482, label %1505, label %1483

1483:                                             ; preds = %1478
  %1484 = icmp eq i32 %1479, %1481
  br i1 %1484, label %1485, label %1521

1485:                                             ; preds = %1483
  store i32 0, ptr %4, align 4, !tbaa !5
  %1486 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1486, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1528, label %1487

1487:                                             ; preds = %1485, %1515
  %1488 = phi i64 [ %1519, %1515 ], [ 1, %1485 ]
  %1489 = getelementptr inbounds i32, ptr %4, i64 %1488
  %1490 = load i32, ptr %1489, align 4, !tbaa !5
  %1491 = getelementptr inbounds i32, ptr %12, i64 %1488
  %1492 = load i32, ptr %1491, align 4, !tbaa !5
  %1493 = add nsw i32 %1492, -1
  %1494 = icmp slt i32 %1490, %1493
  br i1 %1494, label %1495, label %1513

1495:                                             ; preds = %1487
  br i1 %1482, label %1505, label %1496

1496:                                             ; preds = %1495
  %1497 = shl i64 %1488, 32
  %1498 = add i64 %1497, -4294967296
  %1499 = ashr exact i64 %1498, 32
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1499
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1488
  %1503 = load i32, ptr %1502, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, %1501
  store i32 %1504, ptr %1502, align 4, !tbaa !5
  br label %1523

1505:                                             ; preds = %1478, %1495
  %1506 = phi i32 [ %1490, %1495 ], [ %1479, %1478 ]
  %1507 = phi ptr [ %1489, %1495 ], [ %4, %1478 ]
  %1508 = phi i64 [ %1488, %1495 ], [ 0, %1478 ]
  %1509 = add nsw i32 %1506, 1
  store i32 %1509, ptr %1507, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %7, i64 %1508
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1508
  br label %1523

1513:                                             ; preds = %1487
  %1514 = icmp eq i32 %1490, %1493
  br i1 %1514, label %1515, label %1521

1515:                                             ; preds = %1513
  store i32 0, ptr %1489, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %8, i64 %1488
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = getelementptr inbounds i32, ptr %6, i64 %1488
  store i32 %1517, ptr %1518, align 4, !tbaa !5
  %1519 = add nuw nsw i64 %1488, 1
  %1520 = icmp eq i64 %1519, %1242
  br i1 %1520, label %1528, label %1487, !llvm.loop !632

1521:                                             ; preds = %1483, %1513
  %1522 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1523:                                             ; preds = %1496, %1505
  %1524 = phi ptr [ %1512, %1505 ], [ %1489, %1496 ]
  %1525 = phi i32 [ %1511, %1505 ], [ 1, %1496 ]
  %1526 = load i32, ptr %1524, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1525
  store i32 %1527, ptr %1524, align 4, !tbaa !5
  br label %1528

1528:                                             ; preds = %1515, %1523, %1485, %1470
  %1529 = icmp eq i32 %1477, %5
  br i1 %1529, label %5440, label %1393, !llvm.loop !633

1530:                                             ; preds = %1230
  %1531 = getelementptr inbounds i32, ptr %3, i64 %19
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp sgt i32 %5, 0
  br i1 %1533, label %1544, label %1535

1535:                                             ; preds = %1530
  br i1 %1534, label %1536, label %5440

1536:                                             ; preds = %1535
  %1537 = icmp sgt i32 %13, 1
  %1538 = icmp sgt i32 %13, 0
  %1539 = add i32 %13, -2
  %1540 = zext i32 %1539 to i64
  %1541 = zext i32 %13 to i64
  %1542 = add nuw i32 %5, 1
  %1543 = icmp eq i32 %13, 1
  br label %1685

1544:                                             ; preds = %1530
  br i1 %1534, label %1545, label %5440

1545:                                             ; preds = %1544
  %1546 = icmp sgt i32 %13, 1
  %1547 = icmp sgt i32 %13, 0
  %1548 = add i32 %13, -2
  %1549 = zext i32 %1548 to i64
  %1550 = zext i32 %13 to i64
  %1551 = add nuw i32 %5, 1
  %1552 = icmp eq i32 %13, 1
  br label %1553

1553:                                             ; preds = %1545, %1683
  %1554 = phi i32 [ 0, %1545 ], [ %1635, %1683 ]
  %1555 = phi double [ 0.000000e+00, %1545 ], [ %1634, %1683 ]
  %1556 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1557, label %1626

1557:                                             ; preds = %1553, %1616
  %1558 = phi i32 [ %1625, %1616 ], [ 0, %1553 ]
  %1559 = phi i64 [ %1567, %1616 ], [ %1550, %1553 ]
  %1560 = phi i64 [ %1624, %1616 ], [ %1549, %1553 ]
  %1561 = phi i32 [ %1622, %1616 ], [ %1556, %1553 ]
  %1562 = sub i32 %1548, %1558
  %1563 = tail call i32 @llvm.smin.i32(i32 %1562, i32 0)
  %1564 = sub i32 %1562, %1563
  %1565 = zext i32 %1564 to i64
  %1566 = add nuw nsw i64 %1565, 1
  %1567 = add nsw i64 %1559, -1
  %1568 = icmp ult i32 %1564, 31
  br i1 %1568, label %1604, label %1569

1569:                                             ; preds = %1557
  %1570 = and i64 %1566, 8589934560
  %1571 = sub i64 %1560, %1570
  br label %1572

1572:                                             ; preds = %1572, %1569
  %1573 = phi i64 [ 0, %1569 ], [ %1596, %1572 ]
  %1574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1592, %1572 ]
  %1575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1593, %1572 ]
  %1576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1594, %1572 ]
  %1577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1569 ], [ %1595, %1572 ]
  %1578 = sub i64 %1560, %1573
  %1579 = getelementptr inbounds i32, ptr %9, i64 %1578
  %1580 = getelementptr inbounds i32, ptr %1579, i64 -7
  %1581 = load <8 x i32>, ptr %1580, align 4, !tbaa !5
  %1582 = shufflevector <8 x i32> %1581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1583 = getelementptr inbounds i32, ptr %1579, i64 -15
  %1584 = load <8 x i32>, ptr %1583, align 4, !tbaa !5
  %1585 = shufflevector <8 x i32> %1584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1586 = getelementptr inbounds i32, ptr %1579, i64 -23
  %1587 = load <8 x i32>, ptr %1586, align 4, !tbaa !5
  %1588 = shufflevector <8 x i32> %1587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1589 = getelementptr inbounds i32, ptr %1579, i64 -31
  %1590 = load <8 x i32>, ptr %1589, align 4, !tbaa !5
  %1591 = shufflevector <8 x i32> %1590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1592 = mul <8 x i32> %1582, %1574
  %1593 = mul <8 x i32> %1585, %1575
  %1594 = mul <8 x i32> %1588, %1576
  %1595 = mul <8 x i32> %1591, %1577
  %1596 = add nuw i64 %1573, 32
  %1597 = icmp eq i64 %1596, %1570
  br i1 %1597, label %1598, label %1572, !llvm.loop !634

1598:                                             ; preds = %1572
  %1599 = mul <8 x i32> %1593, %1592
  %1600 = mul <8 x i32> %1594, %1599
  %1601 = mul <8 x i32> %1595, %1600
  %1602 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1601)
  %1603 = icmp eq i64 %1566, %1570
  br i1 %1603, label %1616, label %1604

1604:                                             ; preds = %1557, %1598
  %1605 = phi i64 [ %1560, %1557 ], [ %1571, %1598 ]
  %1606 = phi i32 [ 1, %1557 ], [ %1602, %1598 ]
  br label %1607

1607:                                             ; preds = %1604, %1607
  %1608 = phi i64 [ %1613, %1607 ], [ %1605, %1604 ]
  %1609 = phi i32 [ %1612, %1607 ], [ %1606, %1604 ]
  %1610 = getelementptr inbounds i32, ptr %9, i64 %1608
  %1611 = load i32, ptr %1610, align 4, !tbaa !5
  %1612 = mul nsw i32 %1611, %1609
  %1613 = add nsw i64 %1608, -1
  %1614 = trunc i64 %1608 to i32
  %1615 = icmp sgt i32 %1614, 0
  br i1 %1615, label %1607, label %1616, !llvm.loop !635

1616:                                             ; preds = %1607, %1598
  %1617 = phi i32 [ %1602, %1598 ], [ %1612, %1607 ]
  %1618 = and i64 %1567, 4294967295
  %1619 = getelementptr inbounds i32, ptr %6, i64 %1618
  %1620 = load i32, ptr %1619, align 4, !tbaa !5
  %1621 = mul nsw i32 %1620, %1617
  %1622 = add nsw i32 %1621, %1561
  %1623 = icmp sgt i64 %1559, 2
  %1624 = add nsw i64 %1560, -1
  %1625 = add i32 %1558, 1
  br i1 %1623, label %1557, label %1626, !llvm.loop !636

1626:                                             ; preds = %1616, %1553
  %1627 = phi i32 [ %1556, %1553 ], [ %1622, %1616 ]
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i32, ptr %1223, i64 %1628
  %1630 = load i32, ptr %1629, align 4, !tbaa !5
  %1631 = load i8, ptr %1225, align 1, !tbaa !11
  %1632 = trunc i32 %1630 to i8
  %1633 = add i8 %1631, %1632
  store i8 %1633, ptr %1225, align 1, !tbaa !11
  %1634 = fadd fast double %1555, 1.000000e+00
  %1635 = add nuw nsw i32 %1554, 1
  br i1 %1547, label %1636, label %1683

1636:                                             ; preds = %1626
  %1637 = load i32, ptr %4, align 4, !tbaa !5
  %1638 = load i32, ptr %12, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1637, %1639
  br i1 %1640, label %1660, label %1641

1641:                                             ; preds = %1636
  %1642 = icmp eq i32 %1637, %1639
  br i1 %1642, label %1643, label %1676

1643:                                             ; preds = %1641
  store i32 0, ptr %4, align 4, !tbaa !5
  %1644 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1644, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1683, label %1645

1645:                                             ; preds = %1643, %1670
  %1646 = phi i64 [ %1674, %1670 ], [ 1, %1643 ]
  %1647 = getelementptr inbounds i32, ptr %4, i64 %1646
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %12, i64 %1646
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, -1
  %1652 = icmp slt i32 %1648, %1651
  br i1 %1652, label %1653, label %1668

1653:                                             ; preds = %1645
  br i1 %1640, label %1660, label %1654

1654:                                             ; preds = %1653
  %1655 = getelementptr inbounds i32, ptr %7, i64 %1646
  %1656 = load i32, ptr %1655, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %6, i64 %1646
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = add nsw i32 %1658, %1656
  store i32 %1659, ptr %1657, align 4, !tbaa !5
  br label %1678

1660:                                             ; preds = %1636, %1653
  %1661 = phi i32 [ %1648, %1653 ], [ %1637, %1636 ]
  %1662 = phi ptr [ %1647, %1653 ], [ %4, %1636 ]
  %1663 = phi i64 [ %1646, %1653 ], [ 0, %1636 ]
  %1664 = add nsw i32 %1661, 1
  store i32 %1664, ptr %1662, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %7, i64 %1663
  %1666 = load i32, ptr %1665, align 4, !tbaa !5
  %1667 = getelementptr inbounds i32, ptr %6, i64 %1663
  br label %1678

1668:                                             ; preds = %1645
  %1669 = icmp eq i32 %1648, %1651
  br i1 %1669, label %1670, label %1676

1670:                                             ; preds = %1668
  store i32 0, ptr %1647, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %8, i64 %1646
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %6, i64 %1646
  store i32 %1672, ptr %1673, align 4, !tbaa !5
  %1674 = add nuw nsw i64 %1646, 1
  %1675 = icmp eq i64 %1674, %1550
  br i1 %1675, label %1683, label %1645, !llvm.loop !637

1676:                                             ; preds = %1641, %1668
  %1677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1678:                                             ; preds = %1654, %1660
  %1679 = phi ptr [ %1667, %1660 ], [ %1647, %1654 ]
  %1680 = phi i32 [ %1666, %1660 ], [ 1, %1654 ]
  %1681 = load i32, ptr %1679, align 4, !tbaa !5
  %1682 = add nsw i32 %1681, %1680
  store i32 %1682, ptr %1679, align 4, !tbaa !5
  br label %1683

1683:                                             ; preds = %1670, %1678, %1643, %1626
  %1684 = icmp eq i32 %1635, %5
  br i1 %1684, label %5440, label %1553, !llvm.loop !638

1685:                                             ; preds = %1536, %1820
  %1686 = phi i32 [ 0, %1536 ], [ %1769, %1820 ]
  %1687 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1688, label %1757

1688:                                             ; preds = %1685, %1747
  %1689 = phi i32 [ %1756, %1747 ], [ 0, %1685 ]
  %1690 = phi i64 [ %1698, %1747 ], [ %1541, %1685 ]
  %1691 = phi i64 [ %1755, %1747 ], [ %1540, %1685 ]
  %1692 = phi i32 [ %1753, %1747 ], [ %1687, %1685 ]
  %1693 = sub i32 %1539, %1689
  %1694 = tail call i32 @llvm.smin.i32(i32 %1693, i32 0)
  %1695 = sub i32 %1693, %1694
  %1696 = zext i32 %1695 to i64
  %1697 = add nuw nsw i64 %1696, 1
  %1698 = add nsw i64 %1690, -1
  %1699 = icmp ult i32 %1695, 31
  br i1 %1699, label %1735, label %1700

1700:                                             ; preds = %1688
  %1701 = and i64 %1697, 8589934560
  %1702 = sub i64 %1691, %1701
  br label %1703

1703:                                             ; preds = %1703, %1700
  %1704 = phi i64 [ 0, %1700 ], [ %1727, %1703 ]
  %1705 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1723, %1703 ]
  %1706 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1724, %1703 ]
  %1707 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1725, %1703 ]
  %1708 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1700 ], [ %1726, %1703 ]
  %1709 = sub i64 %1691, %1704
  %1710 = getelementptr inbounds i32, ptr %11, i64 %1709
  %1711 = getelementptr inbounds i32, ptr %1710, i64 -7
  %1712 = load <8 x i32>, ptr %1711, align 4, !tbaa !5
  %1713 = shufflevector <8 x i32> %1712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1714 = getelementptr inbounds i32, ptr %1710, i64 -15
  %1715 = load <8 x i32>, ptr %1714, align 4, !tbaa !5
  %1716 = shufflevector <8 x i32> %1715, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1717 = getelementptr inbounds i32, ptr %1710, i64 -23
  %1718 = load <8 x i32>, ptr %1717, align 4, !tbaa !5
  %1719 = shufflevector <8 x i32> %1718, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1720 = getelementptr inbounds i32, ptr %1710, i64 -31
  %1721 = load <8 x i32>, ptr %1720, align 4, !tbaa !5
  %1722 = shufflevector <8 x i32> %1721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1723 = mul <8 x i32> %1713, %1705
  %1724 = mul <8 x i32> %1716, %1706
  %1725 = mul <8 x i32> %1719, %1707
  %1726 = mul <8 x i32> %1722, %1708
  %1727 = add nuw i64 %1704, 32
  %1728 = icmp eq i64 %1727, %1701
  br i1 %1728, label %1729, label %1703, !llvm.loop !639

1729:                                             ; preds = %1703
  %1730 = mul <8 x i32> %1724, %1723
  %1731 = mul <8 x i32> %1725, %1730
  %1732 = mul <8 x i32> %1726, %1731
  %1733 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1732)
  %1734 = icmp eq i64 %1697, %1701
  br i1 %1734, label %1747, label %1735

1735:                                             ; preds = %1688, %1729
  %1736 = phi i64 [ %1691, %1688 ], [ %1702, %1729 ]
  %1737 = phi i32 [ 1, %1688 ], [ %1733, %1729 ]
  br label %1738

1738:                                             ; preds = %1735, %1738
  %1739 = phi i64 [ %1744, %1738 ], [ %1736, %1735 ]
  %1740 = phi i32 [ %1743, %1738 ], [ %1737, %1735 ]
  %1741 = getelementptr inbounds i32, ptr %11, i64 %1739
  %1742 = load i32, ptr %1741, align 4, !tbaa !5
  %1743 = mul nsw i32 %1742, %1740
  %1744 = add nsw i64 %1739, -1
  %1745 = trunc i64 %1739 to i32
  %1746 = icmp sgt i32 %1745, 0
  br i1 %1746, label %1738, label %1747, !llvm.loop !640

1747:                                             ; preds = %1738, %1729
  %1748 = phi i32 [ %1733, %1729 ], [ %1743, %1738 ]
  %1749 = and i64 %1698, 4294967295
  %1750 = getelementptr inbounds i32, ptr %6, i64 %1749
  %1751 = load i32, ptr %1750, align 4, !tbaa !5
  %1752 = mul nsw i32 %1751, %1748
  %1753 = add nsw i32 %1752, %1692
  %1754 = icmp sgt i64 %1690, 2
  %1755 = add nsw i64 %1691, -1
  %1756 = add i32 %1689, 1
  br i1 %1754, label %1688, label %1757, !llvm.loop !641

1757:                                             ; preds = %1747, %1685
  %1758 = phi i32 [ %1687, %1685 ], [ %1753, %1747 ]
  %1759 = icmp slt i32 %1758, %5
  br i1 %1759, label %1762, label %1760

1760:                                             ; preds = %1757
  %1761 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

1762:                                             ; preds = %1757
  %1763 = sext i32 %1758 to i64
  %1764 = getelementptr inbounds i32, ptr %1223, i64 %1763
  %1765 = load i32, ptr %1764, align 4, !tbaa !5
  %1766 = load i8, ptr %1225, align 1, !tbaa !11
  %1767 = trunc i32 %1765 to i8
  %1768 = add i8 %1766, %1767
  store i8 %1768, ptr %1225, align 1, !tbaa !11
  %1769 = add nuw nsw i32 %1686, 1
  br i1 %1538, label %1770, label %1820

1770:                                             ; preds = %1762
  %1771 = load i32, ptr %4, align 4, !tbaa !5
  %1772 = load i32, ptr %12, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1771, %1773
  br i1 %1774, label %1797, label %1775

1775:                                             ; preds = %1770
  %1776 = icmp eq i32 %1771, %1773
  br i1 %1776, label %1777, label %1813

1777:                                             ; preds = %1775
  store i32 0, ptr %4, align 4, !tbaa !5
  %1778 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1778, ptr %6, align 4, !tbaa !5
  br i1 %1543, label %1820, label %1779

1779:                                             ; preds = %1777, %1807
  %1780 = phi i64 [ %1811, %1807 ], [ 1, %1777 ]
  %1781 = getelementptr inbounds i32, ptr %4, i64 %1780
  %1782 = load i32, ptr %1781, align 4, !tbaa !5
  %1783 = getelementptr inbounds i32, ptr %12, i64 %1780
  %1784 = load i32, ptr %1783, align 4, !tbaa !5
  %1785 = add nsw i32 %1784, -1
  %1786 = icmp slt i32 %1782, %1785
  br i1 %1786, label %1787, label %1805

1787:                                             ; preds = %1779
  br i1 %1774, label %1797, label %1788

1788:                                             ; preds = %1787
  %1789 = shl i64 %1780, 32
  %1790 = add i64 %1789, -4294967296
  %1791 = ashr exact i64 %1790, 32
  %1792 = getelementptr inbounds i32, ptr %7, i64 %1791
  %1793 = load i32, ptr %1792, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %6, i64 %1780
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = add nsw i32 %1795, %1793
  store i32 %1796, ptr %1794, align 4, !tbaa !5
  br label %1815

1797:                                             ; preds = %1770, %1787
  %1798 = phi i32 [ %1782, %1787 ], [ %1771, %1770 ]
  %1799 = phi ptr [ %1781, %1787 ], [ %4, %1770 ]
  %1800 = phi i64 [ %1780, %1787 ], [ 0, %1770 ]
  %1801 = add nsw i32 %1798, 1
  store i32 %1801, ptr %1799, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %7, i64 %1800
  %1803 = load i32, ptr %1802, align 4, !tbaa !5
  %1804 = getelementptr inbounds i32, ptr %6, i64 %1800
  br label %1815

1805:                                             ; preds = %1779
  %1806 = icmp eq i32 %1782, %1785
  br i1 %1806, label %1807, label %1813

1807:                                             ; preds = %1805
  store i32 0, ptr %1781, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %8, i64 %1780
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1780
  store i32 %1809, ptr %1810, align 4, !tbaa !5
  %1811 = add nuw nsw i64 %1780, 1
  %1812 = icmp eq i64 %1811, %1541
  br i1 %1812, label %1820, label %1779, !llvm.loop !642

1813:                                             ; preds = %1775, %1805
  %1814 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1815:                                             ; preds = %1788, %1797
  %1816 = phi ptr [ %1804, %1797 ], [ %1781, %1788 ]
  %1817 = phi i32 [ %1803, %1797 ], [ 1, %1788 ]
  %1818 = load i32, ptr %1816, align 4, !tbaa !5
  %1819 = add nsw i32 %1818, %1817
  store i32 %1819, ptr %1816, align 4, !tbaa !5
  br label %1820

1820:                                             ; preds = %1807, %1815, %1777, %1762
  %1821 = icmp eq i32 %1769, %5
  br i1 %1821, label %5440, label %1685, !llvm.loop !643

1822:                                             ; preds = %1230
  %1823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

1824:                                             ; preds = %18
  %1825 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1826 = load ptr, ptr %1825, align 8, !tbaa !9
  %1827 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1828 = load ptr, ptr %1827, align 8, !tbaa !9
  store i16 0, ptr %1828, align 2, !tbaa !78
  %1829 = icmp eq i32 %13, 0
  br i1 %1829, label %1830, label %1833

1830:                                             ; preds = %1824
  %1831 = load i32, ptr %1826, align 4, !tbaa !5
  %1832 = trunc i32 %1831 to i16
  store i16 %1832, ptr %1828, align 2, !tbaa !78
  br label %5440

1833:                                             ; preds = %1824
  switch i32 %1, label %2430 [
    i32 1, label %1834
    i32 0, label %2138
  ]

1834:                                             ; preds = %1833
  %1835 = getelementptr inbounds i32, ptr %3, i64 %19
  %1836 = load i32, ptr %1835, align 4, !tbaa !5
  %1837 = icmp eq i32 %1836, 0
  %1838 = icmp sgt i32 %5, 0
  br i1 %1837, label %1848, label %1839

1839:                                             ; preds = %1834
  br i1 %1838, label %1840, label %5440

1840:                                             ; preds = %1839
  %1841 = icmp sgt i32 %13, 1
  %1842 = icmp sgt i32 %13, 0
  %1843 = add i32 %13, -2
  %1844 = zext i32 %1843 to i64
  %1845 = zext i32 %13 to i64
  %1846 = add nuw i32 %5, 1
  %1847 = icmp eq i32 %13, 1
  br label %1996

1848:                                             ; preds = %1834
  br i1 %1838, label %1849, label %5440

1849:                                             ; preds = %1848
  %1850 = icmp sgt i32 %13, 1
  %1851 = icmp sgt i32 %13, 0
  %1852 = add i32 %13, -2
  %1853 = zext i32 %1852 to i64
  %1854 = zext i32 %13 to i64
  %1855 = add nuw i32 %5, 1
  %1856 = icmp eq i32 %13, 1
  br label %1857

1857:                                             ; preds = %1849, %1994
  %1858 = phi i16 [ 0, %1849 ], [ %1944, %1994 ]
  %1859 = phi i32 [ 0, %1849 ], [ %1946, %1994 ]
  %1860 = phi double [ 0.000000e+00, %1849 ], [ %1945, %1994 ]
  %1861 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1850, label %1862, label %1931

1862:                                             ; preds = %1857, %1921
  %1863 = phi i32 [ %1930, %1921 ], [ 0, %1857 ]
  %1864 = phi i64 [ %1872, %1921 ], [ %1854, %1857 ]
  %1865 = phi i64 [ %1929, %1921 ], [ %1853, %1857 ]
  %1866 = phi i32 [ %1927, %1921 ], [ %1861, %1857 ]
  %1867 = sub i32 %1852, %1863
  %1868 = tail call i32 @llvm.smin.i32(i32 %1867, i32 0)
  %1869 = sub i32 %1867, %1868
  %1870 = zext i32 %1869 to i64
  %1871 = add nuw nsw i64 %1870, 1
  %1872 = add nsw i64 %1864, -1
  %1873 = icmp ult i32 %1869, 31
  br i1 %1873, label %1909, label %1874

1874:                                             ; preds = %1862
  %1875 = and i64 %1871, 8589934560
  %1876 = sub i64 %1865, %1875
  br label %1877

1877:                                             ; preds = %1877, %1874
  %1878 = phi i64 [ 0, %1874 ], [ %1901, %1877 ]
  %1879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1897, %1877 ]
  %1880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1898, %1877 ]
  %1881 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1899, %1877 ]
  %1882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1874 ], [ %1900, %1877 ]
  %1883 = sub i64 %1865, %1878
  %1884 = getelementptr inbounds i32, ptr %9, i64 %1883
  %1885 = getelementptr inbounds i32, ptr %1884, i64 -7
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = getelementptr inbounds i32, ptr %1884, i64 -15
  %1889 = load <8 x i32>, ptr %1888, align 4, !tbaa !5
  %1890 = shufflevector <8 x i32> %1889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1891 = getelementptr inbounds i32, ptr %1884, i64 -23
  %1892 = load <8 x i32>, ptr %1891, align 4, !tbaa !5
  %1893 = shufflevector <8 x i32> %1892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1894 = getelementptr inbounds i32, ptr %1884, i64 -31
  %1895 = load <8 x i32>, ptr %1894, align 4, !tbaa !5
  %1896 = shufflevector <8 x i32> %1895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1897 = mul <8 x i32> %1887, %1879
  %1898 = mul <8 x i32> %1890, %1880
  %1899 = mul <8 x i32> %1893, %1881
  %1900 = mul <8 x i32> %1896, %1882
  %1901 = add nuw i64 %1878, 32
  %1902 = icmp eq i64 %1901, %1875
  br i1 %1902, label %1903, label %1877, !llvm.loop !644

1903:                                             ; preds = %1877
  %1904 = mul <8 x i32> %1898, %1897
  %1905 = mul <8 x i32> %1899, %1904
  %1906 = mul <8 x i32> %1900, %1905
  %1907 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1906)
  %1908 = icmp eq i64 %1871, %1875
  br i1 %1908, label %1921, label %1909

1909:                                             ; preds = %1862, %1903
  %1910 = phi i64 [ %1865, %1862 ], [ %1876, %1903 ]
  %1911 = phi i32 [ 1, %1862 ], [ %1907, %1903 ]
  br label %1912

1912:                                             ; preds = %1909, %1912
  %1913 = phi i64 [ %1918, %1912 ], [ %1910, %1909 ]
  %1914 = phi i32 [ %1917, %1912 ], [ %1911, %1909 ]
  %1915 = getelementptr inbounds i32, ptr %9, i64 %1913
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1914
  %1918 = add nsw i64 %1913, -1
  %1919 = trunc i64 %1913 to i32
  %1920 = icmp sgt i32 %1919, 0
  br i1 %1920, label %1912, label %1921, !llvm.loop !645

1921:                                             ; preds = %1912, %1903
  %1922 = phi i32 [ %1907, %1903 ], [ %1917, %1912 ]
  %1923 = and i64 %1872, 4294967295
  %1924 = getelementptr inbounds i32, ptr %6, i64 %1923
  %1925 = load i32, ptr %1924, align 4, !tbaa !5
  %1926 = mul nsw i32 %1925, %1922
  %1927 = add nsw i32 %1926, %1866
  %1928 = icmp sgt i64 %1864, 2
  %1929 = add nsw i64 %1865, -1
  %1930 = add i32 %1863, 1
  br i1 %1928, label %1862, label %1931, !llvm.loop !646

1931:                                             ; preds = %1921, %1857
  %1932 = phi i32 [ %1861, %1857 ], [ %1927, %1921 ]
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds double, ptr %2, i64 %1933
  %1935 = load double, ptr %1934, align 8, !tbaa !18
  %1936 = getelementptr inbounds i32, ptr %1826, i64 %1933
  %1937 = load i32, ptr %1936, align 4, !tbaa !5
  %1938 = sitofp i16 %1858 to double
  %1939 = shl i32 %1937, 16
  %1940 = ashr exact i32 %1939, 16
  %1941 = sitofp i32 %1940 to double
  %1942 = fmul fast double %1935, %1941
  %1943 = fadd fast double %1942, %1938
  %1944 = fptosi double %1943 to i16
  %1945 = fadd fast double %1935, %1860
  %1946 = add nuw nsw i32 %1859, 1
  br i1 %1851, label %1947, label %1994

1947:                                             ; preds = %1931
  %1948 = load i32, ptr %4, align 4, !tbaa !5
  %1949 = load i32, ptr %12, align 4, !tbaa !5
  %1950 = add nsw i32 %1949, -1
  %1951 = icmp slt i32 %1948, %1950
  br i1 %1951, label %1971, label %1952

1952:                                             ; preds = %1947
  %1953 = icmp eq i32 %1948, %1950
  br i1 %1953, label %1954, label %1987

1954:                                             ; preds = %1952
  store i32 0, ptr %4, align 4, !tbaa !5
  %1955 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1955, ptr %6, align 4, !tbaa !5
  br i1 %1856, label %1994, label %1956

1956:                                             ; preds = %1954, %1981
  %1957 = phi i64 [ %1985, %1981 ], [ 1, %1954 ]
  %1958 = getelementptr inbounds i32, ptr %4, i64 %1957
  %1959 = load i32, ptr %1958, align 4, !tbaa !5
  %1960 = getelementptr inbounds i32, ptr %12, i64 %1957
  %1961 = load i32, ptr %1960, align 4, !tbaa !5
  %1962 = add nsw i32 %1961, -1
  %1963 = icmp slt i32 %1959, %1962
  br i1 %1963, label %1964, label %1979

1964:                                             ; preds = %1956
  br i1 %1951, label %1971, label %1965

1965:                                             ; preds = %1964
  %1966 = getelementptr inbounds i32, ptr %7, i64 %1957
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %6, i64 %1957
  %1969 = load i32, ptr %1968, align 4, !tbaa !5
  %1970 = add nsw i32 %1969, %1967
  store i32 %1970, ptr %1968, align 4, !tbaa !5
  br label %1989

1971:                                             ; preds = %1947, %1964
  %1972 = phi i32 [ %1959, %1964 ], [ %1948, %1947 ]
  %1973 = phi ptr [ %1958, %1964 ], [ %4, %1947 ]
  %1974 = phi i64 [ %1957, %1964 ], [ 0, %1947 ]
  %1975 = add nsw i32 %1972, 1
  store i32 %1975, ptr %1973, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %7, i64 %1974
  %1977 = load i32, ptr %1976, align 4, !tbaa !5
  %1978 = getelementptr inbounds i32, ptr %6, i64 %1974
  br label %1989

1979:                                             ; preds = %1956
  %1980 = icmp eq i32 %1959, %1962
  br i1 %1980, label %1981, label %1987

1981:                                             ; preds = %1979
  store i32 0, ptr %1958, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %8, i64 %1957
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = getelementptr inbounds i32, ptr %6, i64 %1957
  store i32 %1983, ptr %1984, align 4, !tbaa !5
  %1985 = add nuw nsw i64 %1957, 1
  %1986 = icmp eq i64 %1985, %1854
  br i1 %1986, label %1994, label %1956, !llvm.loop !647

1987:                                             ; preds = %1952, %1979
  store i16 %1944, ptr %1828, align 2, !tbaa !78
  %1988 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

1989:                                             ; preds = %1965, %1971
  %1990 = phi ptr [ %1978, %1971 ], [ %1958, %1965 ]
  %1991 = phi i32 [ %1977, %1971 ], [ 1, %1965 ]
  %1992 = load i32, ptr %1990, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1991
  store i32 %1993, ptr %1990, align 4, !tbaa !5
  br label %1994

1994:                                             ; preds = %1981, %1989, %1954, %1931
  %1995 = icmp eq i32 %1946, %5
  br i1 %1995, label %5432, label %1857, !llvm.loop !648

1996:                                             ; preds = %1840, %2136
  %1997 = phi i64 [ 0, %1840 ], [ %2083, %2136 ]
  %1998 = phi i32 [ 0, %1840 ], [ %2085, %2136 ]
  %1999 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1841, label %2000, label %2069

2000:                                             ; preds = %1996, %2059
  %2001 = phi i32 [ %2068, %2059 ], [ 0, %1996 ]
  %2002 = phi i64 [ %2010, %2059 ], [ %1845, %1996 ]
  %2003 = phi i64 [ %2067, %2059 ], [ %1844, %1996 ]
  %2004 = phi i32 [ %2065, %2059 ], [ %1999, %1996 ]
  %2005 = sub i32 %1843, %2001
  %2006 = tail call i32 @llvm.smin.i32(i32 %2005, i32 0)
  %2007 = sub i32 %2005, %2006
  %2008 = zext i32 %2007 to i64
  %2009 = add nuw nsw i64 %2008, 1
  %2010 = add nsw i64 %2002, -1
  %2011 = icmp ult i32 %2007, 31
  br i1 %2011, label %2047, label %2012

2012:                                             ; preds = %2000
  %2013 = and i64 %2009, 8589934560
  %2014 = sub i64 %2003, %2013
  br label %2015

2015:                                             ; preds = %2015, %2012
  %2016 = phi i64 [ 0, %2012 ], [ %2039, %2015 ]
  %2017 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2035, %2015 ]
  %2018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2036, %2015 ]
  %2019 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2037, %2015 ]
  %2020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2012 ], [ %2038, %2015 ]
  %2021 = sub i64 %2003, %2016
  %2022 = getelementptr inbounds i32, ptr %11, i64 %2021
  %2023 = getelementptr inbounds i32, ptr %2022, i64 -7
  %2024 = load <8 x i32>, ptr %2023, align 4, !tbaa !5
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2026 = getelementptr inbounds i32, ptr %2022, i64 -15
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = getelementptr inbounds i32, ptr %2022, i64 -23
  %2030 = load <8 x i32>, ptr %2029, align 4, !tbaa !5
  %2031 = shufflevector <8 x i32> %2030, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2032 = getelementptr inbounds i32, ptr %2022, i64 -31
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = mul <8 x i32> %2025, %2017
  %2036 = mul <8 x i32> %2028, %2018
  %2037 = mul <8 x i32> %2031, %2019
  %2038 = mul <8 x i32> %2034, %2020
  %2039 = add nuw i64 %2016, 32
  %2040 = icmp eq i64 %2039, %2013
  br i1 %2040, label %2041, label %2015, !llvm.loop !649

2041:                                             ; preds = %2015
  %2042 = mul <8 x i32> %2036, %2035
  %2043 = mul <8 x i32> %2037, %2042
  %2044 = mul <8 x i32> %2038, %2043
  %2045 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2044)
  %2046 = icmp eq i64 %2009, %2013
  br i1 %2046, label %2059, label %2047

2047:                                             ; preds = %2000, %2041
  %2048 = phi i64 [ %2003, %2000 ], [ %2014, %2041 ]
  %2049 = phi i32 [ 1, %2000 ], [ %2045, %2041 ]
  br label %2050

2050:                                             ; preds = %2047, %2050
  %2051 = phi i64 [ %2056, %2050 ], [ %2048, %2047 ]
  %2052 = phi i32 [ %2055, %2050 ], [ %2049, %2047 ]
  %2053 = getelementptr inbounds i32, ptr %11, i64 %2051
  %2054 = load i32, ptr %2053, align 4, !tbaa !5
  %2055 = mul nsw i32 %2054, %2052
  %2056 = add nsw i64 %2051, -1
  %2057 = trunc i64 %2051 to i32
  %2058 = icmp sgt i32 %2057, 0
  br i1 %2058, label %2050, label %2059, !llvm.loop !650

2059:                                             ; preds = %2050, %2041
  %2060 = phi i32 [ %2045, %2041 ], [ %2055, %2050 ]
  %2061 = and i64 %2010, 4294967295
  %2062 = getelementptr inbounds i32, ptr %6, i64 %2061
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = mul nsw i32 %2063, %2060
  %2065 = add nsw i32 %2064, %2004
  %2066 = icmp sgt i64 %2002, 2
  %2067 = add nsw i64 %2003, -1
  %2068 = add i32 %2001, 1
  br i1 %2066, label %2000, label %2069, !llvm.loop !651

2069:                                             ; preds = %2059, %1996
  %2070 = phi i32 [ %1999, %1996 ], [ %2065, %2059 ]
  %2071 = icmp slt i32 %2070, %5
  br i1 %2071, label %2074, label %2072

2072:                                             ; preds = %2069
  %2073 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2074:                                             ; preds = %2069
  %2075 = sext i32 %2070 to i64
  %2076 = getelementptr inbounds i32, ptr %1826, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = shl i64 %1997, 48
  %2079 = ashr exact i64 %2078, 48
  %2080 = shl i32 %2077, 16
  %2081 = ashr exact i32 %2080, 16
  %2082 = sext i32 %2081 to i64
  %2083 = add nsw i64 %2079, %2082
  %2084 = trunc i64 %2083 to i16
  store i16 %2084, ptr %1828, align 2, !tbaa !78
  %2085 = add nuw nsw i32 %1998, 1
  br i1 %1842, label %2086, label %2136

2086:                                             ; preds = %2074
  %2087 = load i32, ptr %4, align 4, !tbaa !5
  %2088 = load i32, ptr %12, align 4, !tbaa !5
  %2089 = add nsw i32 %2088, -1
  %2090 = icmp slt i32 %2087, %2089
  br i1 %2090, label %2113, label %2091

2091:                                             ; preds = %2086
  %2092 = icmp eq i32 %2087, %2089
  br i1 %2092, label %2093, label %2129

2093:                                             ; preds = %2091
  store i32 0, ptr %4, align 4, !tbaa !5
  %2094 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2094, ptr %6, align 4, !tbaa !5
  br i1 %1847, label %2136, label %2095

2095:                                             ; preds = %2093, %2123
  %2096 = phi i64 [ %2127, %2123 ], [ 1, %2093 ]
  %2097 = getelementptr inbounds i32, ptr %4, i64 %2096
  %2098 = load i32, ptr %2097, align 4, !tbaa !5
  %2099 = getelementptr inbounds i32, ptr %12, i64 %2096
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, -1
  %2102 = icmp slt i32 %2098, %2101
  br i1 %2102, label %2103, label %2121

2103:                                             ; preds = %2095
  br i1 %2090, label %2113, label %2104

2104:                                             ; preds = %2103
  %2105 = shl i64 %2096, 32
  %2106 = add i64 %2105, -4294967296
  %2107 = ashr exact i64 %2106, 32
  %2108 = getelementptr inbounds i32, ptr %7, i64 %2107
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = getelementptr inbounds i32, ptr %6, i64 %2096
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = add nsw i32 %2111, %2109
  store i32 %2112, ptr %2110, align 4, !tbaa !5
  br label %2131

2113:                                             ; preds = %2086, %2103
  %2114 = phi i32 [ %2098, %2103 ], [ %2087, %2086 ]
  %2115 = phi ptr [ %2097, %2103 ], [ %4, %2086 ]
  %2116 = phi i64 [ %2096, %2103 ], [ 0, %2086 ]
  %2117 = add nsw i32 %2114, 1
  store i32 %2117, ptr %2115, align 4, !tbaa !5
  %2118 = getelementptr inbounds i32, ptr %7, i64 %2116
  %2119 = load i32, ptr %2118, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %6, i64 %2116
  br label %2131

2121:                                             ; preds = %2095
  %2122 = icmp eq i32 %2098, %2101
  br i1 %2122, label %2123, label %2129

2123:                                             ; preds = %2121
  store i32 0, ptr %2097, align 4, !tbaa !5
  %2124 = getelementptr inbounds i32, ptr %8, i64 %2096
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %6, i64 %2096
  store i32 %2125, ptr %2126, align 4, !tbaa !5
  %2127 = add nuw nsw i64 %2096, 1
  %2128 = icmp eq i64 %2127, %1845
  br i1 %2128, label %2136, label %2095, !llvm.loop !652

2129:                                             ; preds = %2091, %2121
  %2130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2131:                                             ; preds = %2104, %2113
  %2132 = phi ptr [ %2120, %2113 ], [ %2097, %2104 ]
  %2133 = phi i32 [ %2119, %2113 ], [ 1, %2104 ]
  %2134 = load i32, ptr %2132, align 4, !tbaa !5
  %2135 = add nsw i32 %2134, %2133
  store i32 %2135, ptr %2132, align 4, !tbaa !5
  br label %2136

2136:                                             ; preds = %2123, %2131, %2093, %2074
  %2137 = icmp eq i32 %2085, %5
  br i1 %2137, label %5440, label %1996, !llvm.loop !653

2138:                                             ; preds = %1833
  %2139 = getelementptr inbounds i32, ptr %3, i64 %19
  %2140 = load i32, ptr %2139, align 4, !tbaa !5
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp sgt i32 %5, 0
  br i1 %2141, label %2152, label %2143

2143:                                             ; preds = %2138
  br i1 %2142, label %2144, label %5440

2144:                                             ; preds = %2143
  %2145 = icmp sgt i32 %13, 1
  %2146 = icmp sgt i32 %13, 0
  %2147 = add i32 %13, -2
  %2148 = zext i32 %2147 to i64
  %2149 = zext i32 %13 to i64
  %2150 = add nuw i32 %5, 1
  %2151 = icmp eq i32 %13, 1
  br label %2293

2152:                                             ; preds = %2138
  br i1 %2142, label %2153, label %5440

2153:                                             ; preds = %2152
  %2154 = icmp sgt i32 %13, 1
  %2155 = icmp sgt i32 %13, 0
  %2156 = add i32 %13, -2
  %2157 = zext i32 %2156 to i64
  %2158 = zext i32 %13 to i64
  %2159 = add nuw i32 %5, 1
  %2160 = icmp eq i32 %13, 1
  br label %2161

2161:                                             ; preds = %2153, %2291
  %2162 = phi i16 [ 0, %2153 ], [ %2241, %2291 ]
  %2163 = phi i32 [ 0, %2153 ], [ %2243, %2291 ]
  %2164 = phi double [ 0.000000e+00, %2153 ], [ %2242, %2291 ]
  %2165 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2154, label %2166, label %2235

2166:                                             ; preds = %2161, %2225
  %2167 = phi i32 [ %2234, %2225 ], [ 0, %2161 ]
  %2168 = phi i64 [ %2176, %2225 ], [ %2158, %2161 ]
  %2169 = phi i64 [ %2233, %2225 ], [ %2157, %2161 ]
  %2170 = phi i32 [ %2231, %2225 ], [ %2165, %2161 ]
  %2171 = sub i32 %2156, %2167
  %2172 = tail call i32 @llvm.smin.i32(i32 %2171, i32 0)
  %2173 = sub i32 %2171, %2172
  %2174 = zext i32 %2173 to i64
  %2175 = add nuw nsw i64 %2174, 1
  %2176 = add nsw i64 %2168, -1
  %2177 = icmp ult i32 %2173, 31
  br i1 %2177, label %2213, label %2178

2178:                                             ; preds = %2166
  %2179 = and i64 %2175, 8589934560
  %2180 = sub i64 %2169, %2179
  br label %2181

2181:                                             ; preds = %2181, %2178
  %2182 = phi i64 [ 0, %2178 ], [ %2205, %2181 ]
  %2183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2201, %2181 ]
  %2184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2202, %2181 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2203, %2181 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2178 ], [ %2204, %2181 ]
  %2187 = sub i64 %2169, %2182
  %2188 = getelementptr inbounds i32, ptr %9, i64 %2187
  %2189 = getelementptr inbounds i32, ptr %2188, i64 -7
  %2190 = load <8 x i32>, ptr %2189, align 4, !tbaa !5
  %2191 = shufflevector <8 x i32> %2190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2192 = getelementptr inbounds i32, ptr %2188, i64 -15
  %2193 = load <8 x i32>, ptr %2192, align 4, !tbaa !5
  %2194 = shufflevector <8 x i32> %2193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2195 = getelementptr inbounds i32, ptr %2188, i64 -23
  %2196 = load <8 x i32>, ptr %2195, align 4, !tbaa !5
  %2197 = shufflevector <8 x i32> %2196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2198 = getelementptr inbounds i32, ptr %2188, i64 -31
  %2199 = load <8 x i32>, ptr %2198, align 4, !tbaa !5
  %2200 = shufflevector <8 x i32> %2199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2201 = mul <8 x i32> %2191, %2183
  %2202 = mul <8 x i32> %2194, %2184
  %2203 = mul <8 x i32> %2197, %2185
  %2204 = mul <8 x i32> %2200, %2186
  %2205 = add nuw i64 %2182, 32
  %2206 = icmp eq i64 %2205, %2179
  br i1 %2206, label %2207, label %2181, !llvm.loop !654

2207:                                             ; preds = %2181
  %2208 = mul <8 x i32> %2202, %2201
  %2209 = mul <8 x i32> %2203, %2208
  %2210 = mul <8 x i32> %2204, %2209
  %2211 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2210)
  %2212 = icmp eq i64 %2175, %2179
  br i1 %2212, label %2225, label %2213

2213:                                             ; preds = %2166, %2207
  %2214 = phi i64 [ %2169, %2166 ], [ %2180, %2207 ]
  %2215 = phi i32 [ 1, %2166 ], [ %2211, %2207 ]
  br label %2216

2216:                                             ; preds = %2213, %2216
  %2217 = phi i64 [ %2222, %2216 ], [ %2214, %2213 ]
  %2218 = phi i32 [ %2221, %2216 ], [ %2215, %2213 ]
  %2219 = getelementptr inbounds i32, ptr %9, i64 %2217
  %2220 = load i32, ptr %2219, align 4, !tbaa !5
  %2221 = mul nsw i32 %2220, %2218
  %2222 = add nsw i64 %2217, -1
  %2223 = trunc i64 %2217 to i32
  %2224 = icmp sgt i32 %2223, 0
  br i1 %2224, label %2216, label %2225, !llvm.loop !655

2225:                                             ; preds = %2216, %2207
  %2226 = phi i32 [ %2211, %2207 ], [ %2221, %2216 ]
  %2227 = and i64 %2176, 4294967295
  %2228 = getelementptr inbounds i32, ptr %6, i64 %2227
  %2229 = load i32, ptr %2228, align 4, !tbaa !5
  %2230 = mul nsw i32 %2229, %2226
  %2231 = add nsw i32 %2230, %2170
  %2232 = icmp sgt i64 %2168, 2
  %2233 = add nsw i64 %2169, -1
  %2234 = add i32 %2167, 1
  br i1 %2232, label %2166, label %2235, !llvm.loop !656

2235:                                             ; preds = %2225, %2161
  %2236 = phi i32 [ %2165, %2161 ], [ %2231, %2225 ]
  %2237 = sext i32 %2236 to i64
  %2238 = getelementptr inbounds i32, ptr %1826, i64 %2237
  %2239 = load i32, ptr %2238, align 4, !tbaa !5
  %2240 = trunc i32 %2239 to i16
  %2241 = add i16 %2162, %2240
  %2242 = fadd fast double %2164, 1.000000e+00
  %2243 = add nuw nsw i32 %2163, 1
  br i1 %2155, label %2244, label %2291

2244:                                             ; preds = %2235
  %2245 = load i32, ptr %4, align 4, !tbaa !5
  %2246 = load i32, ptr %12, align 4, !tbaa !5
  %2247 = add nsw i32 %2246, -1
  %2248 = icmp slt i32 %2245, %2247
  br i1 %2248, label %2268, label %2249

2249:                                             ; preds = %2244
  %2250 = icmp eq i32 %2245, %2247
  br i1 %2250, label %2251, label %2284

2251:                                             ; preds = %2249
  store i32 0, ptr %4, align 4, !tbaa !5
  %2252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2252, ptr %6, align 4, !tbaa !5
  br i1 %2160, label %2291, label %2253

2253:                                             ; preds = %2251, %2278
  %2254 = phi i64 [ %2282, %2278 ], [ 1, %2251 ]
  %2255 = getelementptr inbounds i32, ptr %4, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = getelementptr inbounds i32, ptr %12, i64 %2254
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = add nsw i32 %2258, -1
  %2260 = icmp slt i32 %2256, %2259
  br i1 %2260, label %2261, label %2276

2261:                                             ; preds = %2253
  br i1 %2248, label %2268, label %2262

2262:                                             ; preds = %2261
  %2263 = getelementptr inbounds i32, ptr %7, i64 %2254
  %2264 = load i32, ptr %2263, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = add nsw i32 %2266, %2264
  store i32 %2267, ptr %2265, align 4, !tbaa !5
  br label %2286

2268:                                             ; preds = %2244, %2261
  %2269 = phi i32 [ %2256, %2261 ], [ %2245, %2244 ]
  %2270 = phi ptr [ %2255, %2261 ], [ %4, %2244 ]
  %2271 = phi i64 [ %2254, %2261 ], [ 0, %2244 ]
  %2272 = add nsw i32 %2269, 1
  store i32 %2272, ptr %2270, align 4, !tbaa !5
  %2273 = getelementptr inbounds i32, ptr %7, i64 %2271
  %2274 = load i32, ptr %2273, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %6, i64 %2271
  br label %2286

2276:                                             ; preds = %2253
  %2277 = icmp eq i32 %2256, %2259
  br i1 %2277, label %2278, label %2284

2278:                                             ; preds = %2276
  store i32 0, ptr %2255, align 4, !tbaa !5
  %2279 = getelementptr inbounds i32, ptr %8, i64 %2254
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %6, i64 %2254
  store i32 %2280, ptr %2281, align 4, !tbaa !5
  %2282 = add nuw nsw i64 %2254, 1
  %2283 = icmp eq i64 %2282, %2158
  br i1 %2283, label %2291, label %2253, !llvm.loop !657

2284:                                             ; preds = %2249, %2276
  store i16 %2241, ptr %1828, align 2, !tbaa !78
  %2285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2286:                                             ; preds = %2262, %2268
  %2287 = phi ptr [ %2275, %2268 ], [ %2255, %2262 ]
  %2288 = phi i32 [ %2274, %2268 ], [ 1, %2262 ]
  %2289 = load i32, ptr %2287, align 4, !tbaa !5
  %2290 = add nsw i32 %2289, %2288
  store i32 %2290, ptr %2287, align 4, !tbaa !5
  br label %2291

2291:                                             ; preds = %2278, %2286, %2251, %2235
  %2292 = icmp eq i32 %2243, %5
  br i1 %2292, label %5433, label %2161, !llvm.loop !658

2293:                                             ; preds = %2144, %2428
  %2294 = phi i16 [ 0, %2144 ], [ %2376, %2428 ]
  %2295 = phi i32 [ 0, %2144 ], [ %2377, %2428 ]
  %2296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2145, label %2297, label %2366

2297:                                             ; preds = %2293, %2356
  %2298 = phi i32 [ %2365, %2356 ], [ 0, %2293 ]
  %2299 = phi i64 [ %2307, %2356 ], [ %2149, %2293 ]
  %2300 = phi i64 [ %2364, %2356 ], [ %2148, %2293 ]
  %2301 = phi i32 [ %2362, %2356 ], [ %2296, %2293 ]
  %2302 = sub i32 %2147, %2298
  %2303 = tail call i32 @llvm.smin.i32(i32 %2302, i32 0)
  %2304 = sub i32 %2302, %2303
  %2305 = zext i32 %2304 to i64
  %2306 = add nuw nsw i64 %2305, 1
  %2307 = add nsw i64 %2299, -1
  %2308 = icmp ult i32 %2304, 31
  br i1 %2308, label %2344, label %2309

2309:                                             ; preds = %2297
  %2310 = and i64 %2306, 8589934560
  %2311 = sub i64 %2300, %2310
  br label %2312

2312:                                             ; preds = %2312, %2309
  %2313 = phi i64 [ 0, %2309 ], [ %2336, %2312 ]
  %2314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2332, %2312 ]
  %2315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2333, %2312 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2334, %2312 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2309 ], [ %2335, %2312 ]
  %2318 = sub i64 %2300, %2313
  %2319 = getelementptr inbounds i32, ptr %11, i64 %2318
  %2320 = getelementptr inbounds i32, ptr %2319, i64 -7
  %2321 = load <8 x i32>, ptr %2320, align 4, !tbaa !5
  %2322 = shufflevector <8 x i32> %2321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2323 = getelementptr inbounds i32, ptr %2319, i64 -15
  %2324 = load <8 x i32>, ptr %2323, align 4, !tbaa !5
  %2325 = shufflevector <8 x i32> %2324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2326 = getelementptr inbounds i32, ptr %2319, i64 -23
  %2327 = load <8 x i32>, ptr %2326, align 4, !tbaa !5
  %2328 = shufflevector <8 x i32> %2327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2329 = getelementptr inbounds i32, ptr %2319, i64 -31
  %2330 = load <8 x i32>, ptr %2329, align 4, !tbaa !5
  %2331 = shufflevector <8 x i32> %2330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2332 = mul <8 x i32> %2322, %2314
  %2333 = mul <8 x i32> %2325, %2315
  %2334 = mul <8 x i32> %2328, %2316
  %2335 = mul <8 x i32> %2331, %2317
  %2336 = add nuw i64 %2313, 32
  %2337 = icmp eq i64 %2336, %2310
  br i1 %2337, label %2338, label %2312, !llvm.loop !659

2338:                                             ; preds = %2312
  %2339 = mul <8 x i32> %2333, %2332
  %2340 = mul <8 x i32> %2334, %2339
  %2341 = mul <8 x i32> %2335, %2340
  %2342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2341)
  %2343 = icmp eq i64 %2306, %2310
  br i1 %2343, label %2356, label %2344

2344:                                             ; preds = %2297, %2338
  %2345 = phi i64 [ %2300, %2297 ], [ %2311, %2338 ]
  %2346 = phi i32 [ 1, %2297 ], [ %2342, %2338 ]
  br label %2347

2347:                                             ; preds = %2344, %2347
  %2348 = phi i64 [ %2353, %2347 ], [ %2345, %2344 ]
  %2349 = phi i32 [ %2352, %2347 ], [ %2346, %2344 ]
  %2350 = getelementptr inbounds i32, ptr %11, i64 %2348
  %2351 = load i32, ptr %2350, align 4, !tbaa !5
  %2352 = mul nsw i32 %2351, %2349
  %2353 = add nsw i64 %2348, -1
  %2354 = trunc i64 %2348 to i32
  %2355 = icmp sgt i32 %2354, 0
  br i1 %2355, label %2347, label %2356, !llvm.loop !660

2356:                                             ; preds = %2347, %2338
  %2357 = phi i32 [ %2342, %2338 ], [ %2352, %2347 ]
  %2358 = and i64 %2307, 4294967295
  %2359 = getelementptr inbounds i32, ptr %6, i64 %2358
  %2360 = load i32, ptr %2359, align 4, !tbaa !5
  %2361 = mul nsw i32 %2360, %2357
  %2362 = add nsw i32 %2361, %2301
  %2363 = icmp sgt i64 %2299, 2
  %2364 = add nsw i64 %2300, -1
  %2365 = add i32 %2298, 1
  br i1 %2363, label %2297, label %2366, !llvm.loop !661

2366:                                             ; preds = %2356, %2293
  %2367 = phi i32 [ %2296, %2293 ], [ %2362, %2356 ]
  %2368 = icmp slt i32 %2367, %5
  br i1 %2368, label %2371, label %2369

2369:                                             ; preds = %2366
  %2370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2371:                                             ; preds = %2366
  %2372 = sext i32 %2367 to i64
  %2373 = getelementptr inbounds i32, ptr %1826, i64 %2372
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = trunc i32 %2374 to i16
  %2376 = add i16 %2294, %2375
  store i16 %2376, ptr %1828, align 2, !tbaa !78
  %2377 = add nuw nsw i32 %2295, 1
  br i1 %2146, label %2378, label %2428

2378:                                             ; preds = %2371
  %2379 = load i32, ptr %4, align 4, !tbaa !5
  %2380 = load i32, ptr %12, align 4, !tbaa !5
  %2381 = add nsw i32 %2380, -1
  %2382 = icmp slt i32 %2379, %2381
  br i1 %2382, label %2405, label %2383

2383:                                             ; preds = %2378
  %2384 = icmp eq i32 %2379, %2381
  br i1 %2384, label %2385, label %2421

2385:                                             ; preds = %2383
  store i32 0, ptr %4, align 4, !tbaa !5
  %2386 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2386, ptr %6, align 4, !tbaa !5
  br i1 %2151, label %2428, label %2387

2387:                                             ; preds = %2385, %2415
  %2388 = phi i64 [ %2419, %2415 ], [ 1, %2385 ]
  %2389 = getelementptr inbounds i32, ptr %4, i64 %2388
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = getelementptr inbounds i32, ptr %12, i64 %2388
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = add nsw i32 %2392, -1
  %2394 = icmp slt i32 %2390, %2393
  br i1 %2394, label %2395, label %2413

2395:                                             ; preds = %2387
  br i1 %2382, label %2405, label %2396

2396:                                             ; preds = %2395
  %2397 = shl i64 %2388, 32
  %2398 = add i64 %2397, -4294967296
  %2399 = ashr exact i64 %2398, 32
  %2400 = getelementptr inbounds i32, ptr %7, i64 %2399
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %6, i64 %2388
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = add nsw i32 %2403, %2401
  store i32 %2404, ptr %2402, align 4, !tbaa !5
  br label %2423

2405:                                             ; preds = %2378, %2395
  %2406 = phi i32 [ %2390, %2395 ], [ %2379, %2378 ]
  %2407 = phi ptr [ %2389, %2395 ], [ %4, %2378 ]
  %2408 = phi i64 [ %2388, %2395 ], [ 0, %2378 ]
  %2409 = add nsw i32 %2406, 1
  store i32 %2409, ptr %2407, align 4, !tbaa !5
  %2410 = getelementptr inbounds i32, ptr %7, i64 %2408
  %2411 = load i32, ptr %2410, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %6, i64 %2408
  br label %2423

2413:                                             ; preds = %2387
  %2414 = icmp eq i32 %2390, %2393
  br i1 %2414, label %2415, label %2421

2415:                                             ; preds = %2413
  store i32 0, ptr %2389, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %8, i64 %2388
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2388
  store i32 %2417, ptr %2418, align 4, !tbaa !5
  %2419 = add nuw nsw i64 %2388, 1
  %2420 = icmp eq i64 %2419, %2149
  br i1 %2420, label %2428, label %2387, !llvm.loop !662

2421:                                             ; preds = %2383, %2413
  %2422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2423:                                             ; preds = %2396, %2405
  %2424 = phi ptr [ %2412, %2405 ], [ %2389, %2396 ]
  %2425 = phi i32 [ %2411, %2405 ], [ 1, %2396 ]
  %2426 = load i32, ptr %2424, align 4, !tbaa !5
  %2427 = add nsw i32 %2426, %2425
  store i32 %2427, ptr %2424, align 4, !tbaa !5
  br label %2428

2428:                                             ; preds = %2415, %2423, %2385, %2371
  %2429 = icmp eq i32 %2377, %5
  br i1 %2429, label %5440, label %2293, !llvm.loop !663

2430:                                             ; preds = %1833
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

2432:                                             ; preds = %18
  %2433 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2434 = load ptr, ptr %2433, align 8, !tbaa !9
  %2435 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  store i32 0, ptr %2436, align 4, !tbaa !5
  %2437 = icmp eq i32 %13, 0
  br i1 %2437, label %2438, label %2440

2438:                                             ; preds = %2432
  %2439 = load i32, ptr %2434, align 4, !tbaa !5
  store i32 %2439, ptr %2436, align 4, !tbaa !5
  br label %5440

2440:                                             ; preds = %2432
  switch i32 %1, label %3027 [
    i32 1, label %2441
    i32 0, label %2737
  ]

2441:                                             ; preds = %2440
  %2442 = getelementptr inbounds i32, ptr %3, i64 %19
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = icmp eq i32 %2443, 0
  %2445 = icmp sgt i32 %5, 0
  br i1 %2444, label %2455, label %2446

2446:                                             ; preds = %2441
  br i1 %2445, label %2447, label %5440

2447:                                             ; preds = %2446
  %2448 = icmp sgt i32 %13, 1
  %2449 = icmp sgt i32 %13, 0
  %2450 = add i32 %13, -2
  %2451 = zext i32 %2450 to i64
  %2452 = zext i32 %13 to i64
  %2453 = add nuw i32 %5, 1
  %2454 = icmp eq i32 %13, 1
  br label %2601

2455:                                             ; preds = %2441
  br i1 %2445, label %2456, label %5440

2456:                                             ; preds = %2455
  %2457 = icmp sgt i32 %13, 1
  %2458 = icmp sgt i32 %13, 0
  %2459 = add i32 %13, -2
  %2460 = zext i32 %2459 to i64
  %2461 = zext i32 %13 to i64
  %2462 = add nuw i32 %5, 1
  %2463 = icmp eq i32 %13, 1
  br label %2464

2464:                                             ; preds = %2456, %2599
  %2465 = phi i32 [ 0, %2456 ], [ %2551, %2599 ]
  %2466 = phi double [ 0.000000e+00, %2456 ], [ %2550, %2599 ]
  %2467 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2468, label %2537

2468:                                             ; preds = %2464, %2527
  %2469 = phi i32 [ %2536, %2527 ], [ 0, %2464 ]
  %2470 = phi i64 [ %2478, %2527 ], [ %2461, %2464 ]
  %2471 = phi i64 [ %2535, %2527 ], [ %2460, %2464 ]
  %2472 = phi i32 [ %2533, %2527 ], [ %2467, %2464 ]
  %2473 = sub i32 %2459, %2469
  %2474 = tail call i32 @llvm.smin.i32(i32 %2473, i32 0)
  %2475 = sub i32 %2473, %2474
  %2476 = zext i32 %2475 to i64
  %2477 = add nuw nsw i64 %2476, 1
  %2478 = add nsw i64 %2470, -1
  %2479 = icmp ult i32 %2475, 31
  br i1 %2479, label %2515, label %2480

2480:                                             ; preds = %2468
  %2481 = and i64 %2477, 8589934560
  %2482 = sub i64 %2471, %2481
  br label %2483

2483:                                             ; preds = %2483, %2480
  %2484 = phi i64 [ 0, %2480 ], [ %2507, %2483 ]
  %2485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2503, %2483 ]
  %2486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2504, %2483 ]
  %2487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2505, %2483 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2480 ], [ %2506, %2483 ]
  %2489 = sub i64 %2471, %2484
  %2490 = getelementptr inbounds i32, ptr %9, i64 %2489
  %2491 = getelementptr inbounds i32, ptr %2490, i64 -7
  %2492 = load <8 x i32>, ptr %2491, align 4, !tbaa !5
  %2493 = shufflevector <8 x i32> %2492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2494 = getelementptr inbounds i32, ptr %2490, i64 -15
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2490, i64 -23
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2490, i64 -31
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = mul <8 x i32> %2493, %2485
  %2504 = mul <8 x i32> %2496, %2486
  %2505 = mul <8 x i32> %2499, %2487
  %2506 = mul <8 x i32> %2502, %2488
  %2507 = add nuw i64 %2484, 32
  %2508 = icmp eq i64 %2507, %2481
  br i1 %2508, label %2509, label %2483, !llvm.loop !664

2509:                                             ; preds = %2483
  %2510 = mul <8 x i32> %2504, %2503
  %2511 = mul <8 x i32> %2505, %2510
  %2512 = mul <8 x i32> %2506, %2511
  %2513 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2512)
  %2514 = icmp eq i64 %2477, %2481
  br i1 %2514, label %2527, label %2515

2515:                                             ; preds = %2468, %2509
  %2516 = phi i64 [ %2471, %2468 ], [ %2482, %2509 ]
  %2517 = phi i32 [ 1, %2468 ], [ %2513, %2509 ]
  br label %2518

2518:                                             ; preds = %2515, %2518
  %2519 = phi i64 [ %2524, %2518 ], [ %2516, %2515 ]
  %2520 = phi i32 [ %2523, %2518 ], [ %2517, %2515 ]
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2519
  %2522 = load i32, ptr %2521, align 4, !tbaa !5
  %2523 = mul nsw i32 %2522, %2520
  %2524 = add nsw i64 %2519, -1
  %2525 = trunc i64 %2519 to i32
  %2526 = icmp sgt i32 %2525, 0
  br i1 %2526, label %2518, label %2527, !llvm.loop !665

2527:                                             ; preds = %2518, %2509
  %2528 = phi i32 [ %2513, %2509 ], [ %2523, %2518 ]
  %2529 = and i64 %2478, 4294967295
  %2530 = getelementptr inbounds i32, ptr %6, i64 %2529
  %2531 = load i32, ptr %2530, align 4, !tbaa !5
  %2532 = mul nsw i32 %2531, %2528
  %2533 = add nsw i32 %2532, %2472
  %2534 = icmp sgt i64 %2470, 2
  %2535 = add nsw i64 %2471, -1
  %2536 = add i32 %2469, 1
  br i1 %2534, label %2468, label %2537, !llvm.loop !666

2537:                                             ; preds = %2527, %2464
  %2538 = phi i32 [ %2467, %2464 ], [ %2533, %2527 ]
  %2539 = sext i32 %2538 to i64
  %2540 = getelementptr inbounds double, ptr %2, i64 %2539
  %2541 = load double, ptr %2540, align 8, !tbaa !18
  %2542 = getelementptr inbounds i32, ptr %2434, i64 %2539
  %2543 = load i32, ptr %2542, align 4, !tbaa !5
  %2544 = load i32, ptr %2436, align 4, !tbaa !5
  %2545 = sitofp i32 %2544 to double
  %2546 = sitofp i32 %2543 to double
  %2547 = fmul fast double %2541, %2546
  %2548 = fadd fast double %2547, %2545
  %2549 = fptosi double %2548 to i32
  store i32 %2549, ptr %2436, align 4, !tbaa !5
  %2550 = fadd fast double %2541, %2466
  %2551 = add nuw nsw i32 %2465, 1
  br i1 %2458, label %2552, label %2599

2552:                                             ; preds = %2537
  %2553 = load i32, ptr %4, align 4, !tbaa !5
  %2554 = load i32, ptr %12, align 4, !tbaa !5
  %2555 = add nsw i32 %2554, -1
  %2556 = icmp slt i32 %2553, %2555
  br i1 %2556, label %2576, label %2557

2557:                                             ; preds = %2552
  %2558 = icmp eq i32 %2553, %2555
  br i1 %2558, label %2559, label %2592

2559:                                             ; preds = %2557
  store i32 0, ptr %4, align 4, !tbaa !5
  %2560 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2560, ptr %6, align 4, !tbaa !5
  br i1 %2463, label %2599, label %2561

2561:                                             ; preds = %2559, %2586
  %2562 = phi i64 [ %2590, %2586 ], [ 1, %2559 ]
  %2563 = getelementptr inbounds i32, ptr %4, i64 %2562
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = getelementptr inbounds i32, ptr %12, i64 %2562
  %2566 = load i32, ptr %2565, align 4, !tbaa !5
  %2567 = add nsw i32 %2566, -1
  %2568 = icmp slt i32 %2564, %2567
  br i1 %2568, label %2569, label %2584

2569:                                             ; preds = %2561
  br i1 %2556, label %2576, label %2570

2570:                                             ; preds = %2569
  %2571 = getelementptr inbounds i32, ptr %7, i64 %2562
  %2572 = load i32, ptr %2571, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %6, i64 %2562
  %2574 = load i32, ptr %2573, align 4, !tbaa !5
  %2575 = add nsw i32 %2574, %2572
  store i32 %2575, ptr %2573, align 4, !tbaa !5
  br label %2594

2576:                                             ; preds = %2552, %2569
  %2577 = phi i32 [ %2564, %2569 ], [ %2553, %2552 ]
  %2578 = phi ptr [ %2563, %2569 ], [ %4, %2552 ]
  %2579 = phi i64 [ %2562, %2569 ], [ 0, %2552 ]
  %2580 = add nsw i32 %2577, 1
  store i32 %2580, ptr %2578, align 4, !tbaa !5
  %2581 = getelementptr inbounds i32, ptr %7, i64 %2579
  %2582 = load i32, ptr %2581, align 4, !tbaa !5
  %2583 = getelementptr inbounds i32, ptr %6, i64 %2579
  br label %2594

2584:                                             ; preds = %2561
  %2585 = icmp eq i32 %2564, %2567
  br i1 %2585, label %2586, label %2592

2586:                                             ; preds = %2584
  store i32 0, ptr %2563, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %8, i64 %2562
  %2588 = load i32, ptr %2587, align 4, !tbaa !5
  %2589 = getelementptr inbounds i32, ptr %6, i64 %2562
  store i32 %2588, ptr %2589, align 4, !tbaa !5
  %2590 = add nuw nsw i64 %2562, 1
  %2591 = icmp eq i64 %2590, %2461
  br i1 %2591, label %2599, label %2561, !llvm.loop !667

2592:                                             ; preds = %2557, %2584
  %2593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2594:                                             ; preds = %2570, %2576
  %2595 = phi ptr [ %2583, %2576 ], [ %2563, %2570 ]
  %2596 = phi i32 [ %2582, %2576 ], [ 1, %2570 ]
  %2597 = load i32, ptr %2595, align 4, !tbaa !5
  %2598 = add nsw i32 %2597, %2596
  store i32 %2598, ptr %2595, align 4, !tbaa !5
  br label %2599

2599:                                             ; preds = %2586, %2594, %2559, %2537
  %2600 = icmp eq i32 %2551, %5
  br i1 %2600, label %5440, label %2464, !llvm.loop !668

2601:                                             ; preds = %2447, %2735
  %2602 = phi i32 [ 0, %2447 ], [ %2684, %2735 ]
  %2603 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2448, label %2604, label %2673

2604:                                             ; preds = %2601, %2663
  %2605 = phi i32 [ %2672, %2663 ], [ 0, %2601 ]
  %2606 = phi i64 [ %2614, %2663 ], [ %2452, %2601 ]
  %2607 = phi i64 [ %2671, %2663 ], [ %2451, %2601 ]
  %2608 = phi i32 [ %2669, %2663 ], [ %2603, %2601 ]
  %2609 = sub i32 %2450, %2605
  %2610 = tail call i32 @llvm.smin.i32(i32 %2609, i32 0)
  %2611 = sub i32 %2609, %2610
  %2612 = zext i32 %2611 to i64
  %2613 = add nuw nsw i64 %2612, 1
  %2614 = add nsw i64 %2606, -1
  %2615 = icmp ult i32 %2611, 31
  br i1 %2615, label %2651, label %2616

2616:                                             ; preds = %2604
  %2617 = and i64 %2613, 8589934560
  %2618 = sub i64 %2607, %2617
  br label %2619

2619:                                             ; preds = %2619, %2616
  %2620 = phi i64 [ 0, %2616 ], [ %2643, %2619 ]
  %2621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2639, %2619 ]
  %2622 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2640, %2619 ]
  %2623 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2641, %2619 ]
  %2624 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2616 ], [ %2642, %2619 ]
  %2625 = sub i64 %2607, %2620
  %2626 = getelementptr inbounds i32, ptr %11, i64 %2625
  %2627 = getelementptr inbounds i32, ptr %2626, i64 -7
  %2628 = load <8 x i32>, ptr %2627, align 4, !tbaa !5
  %2629 = shufflevector <8 x i32> %2628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2630 = getelementptr inbounds i32, ptr %2626, i64 -15
  %2631 = load <8 x i32>, ptr %2630, align 4, !tbaa !5
  %2632 = shufflevector <8 x i32> %2631, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2633 = getelementptr inbounds i32, ptr %2626, i64 -23
  %2634 = load <8 x i32>, ptr %2633, align 4, !tbaa !5
  %2635 = shufflevector <8 x i32> %2634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2636 = getelementptr inbounds i32, ptr %2626, i64 -31
  %2637 = load <8 x i32>, ptr %2636, align 4, !tbaa !5
  %2638 = shufflevector <8 x i32> %2637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2639 = mul <8 x i32> %2629, %2621
  %2640 = mul <8 x i32> %2632, %2622
  %2641 = mul <8 x i32> %2635, %2623
  %2642 = mul <8 x i32> %2638, %2624
  %2643 = add nuw i64 %2620, 32
  %2644 = icmp eq i64 %2643, %2617
  br i1 %2644, label %2645, label %2619, !llvm.loop !669

2645:                                             ; preds = %2619
  %2646 = mul <8 x i32> %2640, %2639
  %2647 = mul <8 x i32> %2641, %2646
  %2648 = mul <8 x i32> %2642, %2647
  %2649 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2648)
  %2650 = icmp eq i64 %2613, %2617
  br i1 %2650, label %2663, label %2651

2651:                                             ; preds = %2604, %2645
  %2652 = phi i64 [ %2607, %2604 ], [ %2618, %2645 ]
  %2653 = phi i32 [ 1, %2604 ], [ %2649, %2645 ]
  br label %2654

2654:                                             ; preds = %2651, %2654
  %2655 = phi i64 [ %2660, %2654 ], [ %2652, %2651 ]
  %2656 = phi i32 [ %2659, %2654 ], [ %2653, %2651 ]
  %2657 = getelementptr inbounds i32, ptr %11, i64 %2655
  %2658 = load i32, ptr %2657, align 4, !tbaa !5
  %2659 = mul nsw i32 %2658, %2656
  %2660 = add nsw i64 %2655, -1
  %2661 = trunc i64 %2655 to i32
  %2662 = icmp sgt i32 %2661, 0
  br i1 %2662, label %2654, label %2663, !llvm.loop !670

2663:                                             ; preds = %2654, %2645
  %2664 = phi i32 [ %2649, %2645 ], [ %2659, %2654 ]
  %2665 = and i64 %2614, 4294967295
  %2666 = getelementptr inbounds i32, ptr %6, i64 %2665
  %2667 = load i32, ptr %2666, align 4, !tbaa !5
  %2668 = mul nsw i32 %2667, %2664
  %2669 = add nsw i32 %2668, %2608
  %2670 = icmp sgt i64 %2606, 2
  %2671 = add nsw i64 %2607, -1
  %2672 = add i32 %2605, 1
  br i1 %2670, label %2604, label %2673, !llvm.loop !671

2673:                                             ; preds = %2663, %2601
  %2674 = phi i32 [ %2603, %2601 ], [ %2669, %2663 ]
  %2675 = icmp slt i32 %2674, %5
  br i1 %2675, label %2678, label %2676

2676:                                             ; preds = %2673
  %2677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2678:                                             ; preds = %2673
  %2679 = sext i32 %2674 to i64
  %2680 = getelementptr inbounds i32, ptr %2434, i64 %2679
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = load i32, ptr %2436, align 4, !tbaa !5
  %2683 = add i32 %2682, %2681
  store i32 %2683, ptr %2436, align 4, !tbaa !5
  %2684 = add nuw nsw i32 %2602, 1
  br i1 %2449, label %2685, label %2735

2685:                                             ; preds = %2678
  %2686 = load i32, ptr %4, align 4, !tbaa !5
  %2687 = load i32, ptr %12, align 4, !tbaa !5
  %2688 = add nsw i32 %2687, -1
  %2689 = icmp slt i32 %2686, %2688
  br i1 %2689, label %2712, label %2690

2690:                                             ; preds = %2685
  %2691 = icmp eq i32 %2686, %2688
  br i1 %2691, label %2692, label %2728

2692:                                             ; preds = %2690
  store i32 0, ptr %4, align 4, !tbaa !5
  %2693 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2693, ptr %6, align 4, !tbaa !5
  br i1 %2454, label %2735, label %2694

2694:                                             ; preds = %2692, %2722
  %2695 = phi i64 [ %2726, %2722 ], [ 1, %2692 ]
  %2696 = getelementptr inbounds i32, ptr %4, i64 %2695
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = getelementptr inbounds i32, ptr %12, i64 %2695
  %2699 = load i32, ptr %2698, align 4, !tbaa !5
  %2700 = add nsw i32 %2699, -1
  %2701 = icmp slt i32 %2697, %2700
  br i1 %2701, label %2702, label %2720

2702:                                             ; preds = %2694
  br i1 %2689, label %2712, label %2703

2703:                                             ; preds = %2702
  %2704 = shl i64 %2695, 32
  %2705 = add i64 %2704, -4294967296
  %2706 = ashr exact i64 %2705, 32
  %2707 = getelementptr inbounds i32, ptr %7, i64 %2706
  %2708 = load i32, ptr %2707, align 4, !tbaa !5
  %2709 = getelementptr inbounds i32, ptr %6, i64 %2695
  %2710 = load i32, ptr %2709, align 4, !tbaa !5
  %2711 = add nsw i32 %2710, %2708
  store i32 %2711, ptr %2709, align 4, !tbaa !5
  br label %2730

2712:                                             ; preds = %2685, %2702
  %2713 = phi i32 [ %2697, %2702 ], [ %2686, %2685 ]
  %2714 = phi ptr [ %2696, %2702 ], [ %4, %2685 ]
  %2715 = phi i64 [ %2695, %2702 ], [ 0, %2685 ]
  %2716 = add nsw i32 %2713, 1
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  %2717 = getelementptr inbounds i32, ptr %7, i64 %2715
  %2718 = load i32, ptr %2717, align 4, !tbaa !5
  %2719 = getelementptr inbounds i32, ptr %6, i64 %2715
  br label %2730

2720:                                             ; preds = %2694
  %2721 = icmp eq i32 %2697, %2700
  br i1 %2721, label %2722, label %2728

2722:                                             ; preds = %2720
  store i32 0, ptr %2696, align 4, !tbaa !5
  %2723 = getelementptr inbounds i32, ptr %8, i64 %2695
  %2724 = load i32, ptr %2723, align 4, !tbaa !5
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2695
  store i32 %2724, ptr %2725, align 4, !tbaa !5
  %2726 = add nuw nsw i64 %2695, 1
  %2727 = icmp eq i64 %2726, %2452
  br i1 %2727, label %2735, label %2694, !llvm.loop !672

2728:                                             ; preds = %2690, %2720
  %2729 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2730:                                             ; preds = %2703, %2712
  %2731 = phi ptr [ %2719, %2712 ], [ %2696, %2703 ]
  %2732 = phi i32 [ %2718, %2712 ], [ 1, %2703 ]
  %2733 = load i32, ptr %2731, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, %2732
  store i32 %2734, ptr %2731, align 4, !tbaa !5
  br label %2735

2735:                                             ; preds = %2722, %2730, %2692, %2678
  %2736 = icmp eq i32 %2684, %5
  br i1 %2736, label %5440, label %2601, !llvm.loop !673

2737:                                             ; preds = %2440
  %2738 = getelementptr inbounds i32, ptr %3, i64 %19
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = icmp eq i32 %2739, 0
  %2741 = icmp sgt i32 %5, 0
  br i1 %2740, label %2751, label %2742

2742:                                             ; preds = %2737
  br i1 %2741, label %2743, label %5440

2743:                                             ; preds = %2742
  %2744 = icmp sgt i32 %13, 1
  %2745 = icmp sgt i32 %13, 0
  %2746 = add i32 %13, -2
  %2747 = zext i32 %2746 to i64
  %2748 = zext i32 %13 to i64
  %2749 = add nuw i32 %5, 1
  %2750 = icmp eq i32 %13, 1
  br label %2891

2751:                                             ; preds = %2737
  br i1 %2741, label %2752, label %5440

2752:                                             ; preds = %2751
  %2753 = icmp sgt i32 %13, 1
  %2754 = icmp sgt i32 %13, 0
  %2755 = add i32 %13, -2
  %2756 = zext i32 %2755 to i64
  %2757 = zext i32 %13 to i64
  %2758 = add nuw i32 %5, 1
  %2759 = icmp eq i32 %13, 1
  br label %2760

2760:                                             ; preds = %2752, %2889
  %2761 = phi i32 [ 0, %2752 ], [ %2841, %2889 ]
  %2762 = phi double [ 0.000000e+00, %2752 ], [ %2840, %2889 ]
  %2763 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2753, label %2764, label %2833

2764:                                             ; preds = %2760, %2823
  %2765 = phi i32 [ %2832, %2823 ], [ 0, %2760 ]
  %2766 = phi i64 [ %2774, %2823 ], [ %2757, %2760 ]
  %2767 = phi i64 [ %2831, %2823 ], [ %2756, %2760 ]
  %2768 = phi i32 [ %2829, %2823 ], [ %2763, %2760 ]
  %2769 = sub i32 %2755, %2765
  %2770 = tail call i32 @llvm.smin.i32(i32 %2769, i32 0)
  %2771 = sub i32 %2769, %2770
  %2772 = zext i32 %2771 to i64
  %2773 = add nuw nsw i64 %2772, 1
  %2774 = add nsw i64 %2766, -1
  %2775 = icmp ult i32 %2771, 31
  br i1 %2775, label %2811, label %2776

2776:                                             ; preds = %2764
  %2777 = and i64 %2773, 8589934560
  %2778 = sub i64 %2767, %2777
  br label %2779

2779:                                             ; preds = %2779, %2776
  %2780 = phi i64 [ 0, %2776 ], [ %2803, %2779 ]
  %2781 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2799, %2779 ]
  %2782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2800, %2779 ]
  %2783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2801, %2779 ]
  %2784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2776 ], [ %2802, %2779 ]
  %2785 = sub i64 %2767, %2780
  %2786 = getelementptr inbounds i32, ptr %9, i64 %2785
  %2787 = getelementptr inbounds i32, ptr %2786, i64 -7
  %2788 = load <8 x i32>, ptr %2787, align 4, !tbaa !5
  %2789 = shufflevector <8 x i32> %2788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2790 = getelementptr inbounds i32, ptr %2786, i64 -15
  %2791 = load <8 x i32>, ptr %2790, align 4, !tbaa !5
  %2792 = shufflevector <8 x i32> %2791, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2793 = getelementptr inbounds i32, ptr %2786, i64 -23
  %2794 = load <8 x i32>, ptr %2793, align 4, !tbaa !5
  %2795 = shufflevector <8 x i32> %2794, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2796 = getelementptr inbounds i32, ptr %2786, i64 -31
  %2797 = load <8 x i32>, ptr %2796, align 4, !tbaa !5
  %2798 = shufflevector <8 x i32> %2797, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2799 = mul <8 x i32> %2789, %2781
  %2800 = mul <8 x i32> %2792, %2782
  %2801 = mul <8 x i32> %2795, %2783
  %2802 = mul <8 x i32> %2798, %2784
  %2803 = add nuw i64 %2780, 32
  %2804 = icmp eq i64 %2803, %2777
  br i1 %2804, label %2805, label %2779, !llvm.loop !674

2805:                                             ; preds = %2779
  %2806 = mul <8 x i32> %2800, %2799
  %2807 = mul <8 x i32> %2801, %2806
  %2808 = mul <8 x i32> %2802, %2807
  %2809 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2808)
  %2810 = icmp eq i64 %2773, %2777
  br i1 %2810, label %2823, label %2811

2811:                                             ; preds = %2764, %2805
  %2812 = phi i64 [ %2767, %2764 ], [ %2778, %2805 ]
  %2813 = phi i32 [ 1, %2764 ], [ %2809, %2805 ]
  br label %2814

2814:                                             ; preds = %2811, %2814
  %2815 = phi i64 [ %2820, %2814 ], [ %2812, %2811 ]
  %2816 = phi i32 [ %2819, %2814 ], [ %2813, %2811 ]
  %2817 = getelementptr inbounds i32, ptr %9, i64 %2815
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = mul nsw i32 %2818, %2816
  %2820 = add nsw i64 %2815, -1
  %2821 = trunc i64 %2815 to i32
  %2822 = icmp sgt i32 %2821, 0
  br i1 %2822, label %2814, label %2823, !llvm.loop !675

2823:                                             ; preds = %2814, %2805
  %2824 = phi i32 [ %2809, %2805 ], [ %2819, %2814 ]
  %2825 = and i64 %2774, 4294967295
  %2826 = getelementptr inbounds i32, ptr %6, i64 %2825
  %2827 = load i32, ptr %2826, align 4, !tbaa !5
  %2828 = mul nsw i32 %2827, %2824
  %2829 = add nsw i32 %2828, %2768
  %2830 = icmp sgt i64 %2766, 2
  %2831 = add nsw i64 %2767, -1
  %2832 = add i32 %2765, 1
  br i1 %2830, label %2764, label %2833, !llvm.loop !676

2833:                                             ; preds = %2823, %2760
  %2834 = phi i32 [ %2763, %2760 ], [ %2829, %2823 ]
  %2835 = sext i32 %2834 to i64
  %2836 = getelementptr inbounds i32, ptr %2434, i64 %2835
  %2837 = load i32, ptr %2836, align 4, !tbaa !5
  %2838 = load i32, ptr %2436, align 4, !tbaa !5
  %2839 = add nsw i32 %2838, %2837
  store i32 %2839, ptr %2436, align 4, !tbaa !5
  %2840 = fadd fast double %2762, 1.000000e+00
  %2841 = add nuw nsw i32 %2761, 1
  br i1 %2754, label %2842, label %2889

2842:                                             ; preds = %2833
  %2843 = load i32, ptr %4, align 4, !tbaa !5
  %2844 = load i32, ptr %12, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, -1
  %2846 = icmp slt i32 %2843, %2845
  br i1 %2846, label %2866, label %2847

2847:                                             ; preds = %2842
  %2848 = icmp eq i32 %2843, %2845
  br i1 %2848, label %2849, label %2882

2849:                                             ; preds = %2847
  store i32 0, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2850, ptr %6, align 4, !tbaa !5
  br i1 %2759, label %2889, label %2851

2851:                                             ; preds = %2849, %2876
  %2852 = phi i64 [ %2880, %2876 ], [ 1, %2849 ]
  %2853 = getelementptr inbounds i32, ptr %4, i64 %2852
  %2854 = load i32, ptr %2853, align 4, !tbaa !5
  %2855 = getelementptr inbounds i32, ptr %12, i64 %2852
  %2856 = load i32, ptr %2855, align 4, !tbaa !5
  %2857 = add nsw i32 %2856, -1
  %2858 = icmp slt i32 %2854, %2857
  br i1 %2858, label %2859, label %2874

2859:                                             ; preds = %2851
  br i1 %2846, label %2866, label %2860

2860:                                             ; preds = %2859
  %2861 = getelementptr inbounds i32, ptr %7, i64 %2852
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %6, i64 %2852
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = add nsw i32 %2864, %2862
  store i32 %2865, ptr %2863, align 4, !tbaa !5
  br label %2884

2866:                                             ; preds = %2842, %2859
  %2867 = phi i32 [ %2854, %2859 ], [ %2843, %2842 ]
  %2868 = phi ptr [ %2853, %2859 ], [ %4, %2842 ]
  %2869 = phi i64 [ %2852, %2859 ], [ 0, %2842 ]
  %2870 = add nsw i32 %2867, 1
  store i32 %2870, ptr %2868, align 4, !tbaa !5
  %2871 = getelementptr inbounds i32, ptr %7, i64 %2869
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = getelementptr inbounds i32, ptr %6, i64 %2869
  br label %2884

2874:                                             ; preds = %2851
  %2875 = icmp eq i32 %2854, %2857
  br i1 %2875, label %2876, label %2882

2876:                                             ; preds = %2874
  store i32 0, ptr %2853, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %8, i64 %2852
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2852
  store i32 %2878, ptr %2879, align 4, !tbaa !5
  %2880 = add nuw nsw i64 %2852, 1
  %2881 = icmp eq i64 %2880, %2757
  br i1 %2881, label %2889, label %2851, !llvm.loop !677

2882:                                             ; preds = %2847, %2874
  %2883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

2884:                                             ; preds = %2860, %2866
  %2885 = phi ptr [ %2873, %2866 ], [ %2853, %2860 ]
  %2886 = phi i32 [ %2872, %2866 ], [ 1, %2860 ]
  %2887 = load i32, ptr %2885, align 4, !tbaa !5
  %2888 = add nsw i32 %2887, %2886
  store i32 %2888, ptr %2885, align 4, !tbaa !5
  br label %2889

2889:                                             ; preds = %2876, %2884, %2849, %2833
  %2890 = icmp eq i32 %2841, %5
  br i1 %2890, label %5440, label %2760, !llvm.loop !678

2891:                                             ; preds = %2743, %3025
  %2892 = phi i32 [ 0, %2743 ], [ %2974, %3025 ]
  %2893 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2744, label %2894, label %2963

2894:                                             ; preds = %2891, %2953
  %2895 = phi i32 [ %2962, %2953 ], [ 0, %2891 ]
  %2896 = phi i64 [ %2904, %2953 ], [ %2748, %2891 ]
  %2897 = phi i64 [ %2961, %2953 ], [ %2747, %2891 ]
  %2898 = phi i32 [ %2959, %2953 ], [ %2893, %2891 ]
  %2899 = sub i32 %2746, %2895
  %2900 = tail call i32 @llvm.smin.i32(i32 %2899, i32 0)
  %2901 = sub i32 %2899, %2900
  %2902 = zext i32 %2901 to i64
  %2903 = add nuw nsw i64 %2902, 1
  %2904 = add nsw i64 %2896, -1
  %2905 = icmp ult i32 %2901, 31
  br i1 %2905, label %2941, label %2906

2906:                                             ; preds = %2894
  %2907 = and i64 %2903, 8589934560
  %2908 = sub i64 %2897, %2907
  br label %2909

2909:                                             ; preds = %2909, %2906
  %2910 = phi i64 [ 0, %2906 ], [ %2933, %2909 ]
  %2911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2929, %2909 ]
  %2912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2930, %2909 ]
  %2913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2931, %2909 ]
  %2914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2906 ], [ %2932, %2909 ]
  %2915 = sub i64 %2897, %2910
  %2916 = getelementptr inbounds i32, ptr %11, i64 %2915
  %2917 = getelementptr inbounds i32, ptr %2916, i64 -7
  %2918 = load <8 x i32>, ptr %2917, align 4, !tbaa !5
  %2919 = shufflevector <8 x i32> %2918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2920 = getelementptr inbounds i32, ptr %2916, i64 -15
  %2921 = load <8 x i32>, ptr %2920, align 4, !tbaa !5
  %2922 = shufflevector <8 x i32> %2921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2923 = getelementptr inbounds i32, ptr %2916, i64 -23
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2916, i64 -31
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = mul <8 x i32> %2919, %2911
  %2930 = mul <8 x i32> %2922, %2912
  %2931 = mul <8 x i32> %2925, %2913
  %2932 = mul <8 x i32> %2928, %2914
  %2933 = add nuw i64 %2910, 32
  %2934 = icmp eq i64 %2933, %2907
  br i1 %2934, label %2935, label %2909, !llvm.loop !679

2935:                                             ; preds = %2909
  %2936 = mul <8 x i32> %2930, %2929
  %2937 = mul <8 x i32> %2931, %2936
  %2938 = mul <8 x i32> %2932, %2937
  %2939 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2938)
  %2940 = icmp eq i64 %2903, %2907
  br i1 %2940, label %2953, label %2941

2941:                                             ; preds = %2894, %2935
  %2942 = phi i64 [ %2897, %2894 ], [ %2908, %2935 ]
  %2943 = phi i32 [ 1, %2894 ], [ %2939, %2935 ]
  br label %2944

2944:                                             ; preds = %2941, %2944
  %2945 = phi i64 [ %2950, %2944 ], [ %2942, %2941 ]
  %2946 = phi i32 [ %2949, %2944 ], [ %2943, %2941 ]
  %2947 = getelementptr inbounds i32, ptr %11, i64 %2945
  %2948 = load i32, ptr %2947, align 4, !tbaa !5
  %2949 = mul nsw i32 %2948, %2946
  %2950 = add nsw i64 %2945, -1
  %2951 = trunc i64 %2945 to i32
  %2952 = icmp sgt i32 %2951, 0
  br i1 %2952, label %2944, label %2953, !llvm.loop !680

2953:                                             ; preds = %2944, %2935
  %2954 = phi i32 [ %2939, %2935 ], [ %2949, %2944 ]
  %2955 = and i64 %2904, 4294967295
  %2956 = getelementptr inbounds i32, ptr %6, i64 %2955
  %2957 = load i32, ptr %2956, align 4, !tbaa !5
  %2958 = mul nsw i32 %2957, %2954
  %2959 = add nsw i32 %2958, %2898
  %2960 = icmp sgt i64 %2896, 2
  %2961 = add nsw i64 %2897, -1
  %2962 = add i32 %2895, 1
  br i1 %2960, label %2894, label %2963, !llvm.loop !681

2963:                                             ; preds = %2953, %2891
  %2964 = phi i32 [ %2893, %2891 ], [ %2959, %2953 ]
  %2965 = icmp slt i32 %2964, %5
  br i1 %2965, label %2968, label %2966

2966:                                             ; preds = %2963
  %2967 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

2968:                                             ; preds = %2963
  %2969 = sext i32 %2964 to i64
  %2970 = getelementptr inbounds i32, ptr %2434, i64 %2969
  %2971 = load i32, ptr %2970, align 4, !tbaa !5
  %2972 = load i32, ptr %2436, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2971
  store i32 %2973, ptr %2436, align 4, !tbaa !5
  %2974 = add nuw nsw i32 %2892, 1
  br i1 %2745, label %2975, label %3025

2975:                                             ; preds = %2968
  %2976 = load i32, ptr %4, align 4, !tbaa !5
  %2977 = load i32, ptr %12, align 4, !tbaa !5
  %2978 = add nsw i32 %2977, -1
  %2979 = icmp slt i32 %2976, %2978
  br i1 %2979, label %3002, label %2980

2980:                                             ; preds = %2975
  %2981 = icmp eq i32 %2976, %2978
  br i1 %2981, label %2982, label %3018

2982:                                             ; preds = %2980
  store i32 0, ptr %4, align 4, !tbaa !5
  %2983 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2983, ptr %6, align 4, !tbaa !5
  br i1 %2750, label %3025, label %2984

2984:                                             ; preds = %2982, %3012
  %2985 = phi i64 [ %3016, %3012 ], [ 1, %2982 ]
  %2986 = getelementptr inbounds i32, ptr %4, i64 %2985
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = getelementptr inbounds i32, ptr %12, i64 %2985
  %2989 = load i32, ptr %2988, align 4, !tbaa !5
  %2990 = add nsw i32 %2989, -1
  %2991 = icmp slt i32 %2987, %2990
  br i1 %2991, label %2992, label %3010

2992:                                             ; preds = %2984
  br i1 %2979, label %3002, label %2993

2993:                                             ; preds = %2992
  %2994 = shl i64 %2985, 32
  %2995 = add i64 %2994, -4294967296
  %2996 = ashr exact i64 %2995, 32
  %2997 = getelementptr inbounds i32, ptr %7, i64 %2996
  %2998 = load i32, ptr %2997, align 4, !tbaa !5
  %2999 = getelementptr inbounds i32, ptr %6, i64 %2985
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = add nsw i32 %3000, %2998
  store i32 %3001, ptr %2999, align 4, !tbaa !5
  br label %3020

3002:                                             ; preds = %2975, %2992
  %3003 = phi i32 [ %2987, %2992 ], [ %2976, %2975 ]
  %3004 = phi ptr [ %2986, %2992 ], [ %4, %2975 ]
  %3005 = phi i64 [ %2985, %2992 ], [ 0, %2975 ]
  %3006 = add nsw i32 %3003, 1
  store i32 %3006, ptr %3004, align 4, !tbaa !5
  %3007 = getelementptr inbounds i32, ptr %7, i64 %3005
  %3008 = load i32, ptr %3007, align 4, !tbaa !5
  %3009 = getelementptr inbounds i32, ptr %6, i64 %3005
  br label %3020

3010:                                             ; preds = %2984
  %3011 = icmp eq i32 %2987, %2990
  br i1 %3011, label %3012, label %3018

3012:                                             ; preds = %3010
  store i32 0, ptr %2986, align 4, !tbaa !5
  %3013 = getelementptr inbounds i32, ptr %8, i64 %2985
  %3014 = load i32, ptr %3013, align 4, !tbaa !5
  %3015 = getelementptr inbounds i32, ptr %6, i64 %2985
  store i32 %3014, ptr %3015, align 4, !tbaa !5
  %3016 = add nuw nsw i64 %2985, 1
  %3017 = icmp eq i64 %3016, %2748
  br i1 %3017, label %3025, label %2984, !llvm.loop !682

3018:                                             ; preds = %2980, %3010
  %3019 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3020:                                             ; preds = %2993, %3002
  %3021 = phi ptr [ %3009, %3002 ], [ %2986, %2993 ]
  %3022 = phi i32 [ %3008, %3002 ], [ 1, %2993 ]
  %3023 = load i32, ptr %3021, align 4, !tbaa !5
  %3024 = add nsw i32 %3023, %3022
  store i32 %3024, ptr %3021, align 4, !tbaa !5
  br label %3025

3025:                                             ; preds = %3012, %3020, %2982, %2968
  %3026 = icmp eq i32 %2974, %5
  br i1 %3026, label %5440, label %2891, !llvm.loop !683

3027:                                             ; preds = %2440
  %3028 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

3029:                                             ; preds = %18
  %3030 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3031 = load ptr, ptr %3030, align 8, !tbaa !9
  %3032 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3033 = load ptr, ptr %3032, align 8, !tbaa !9
  store i64 0, ptr %3033, align 8, !tbaa !120
  %3034 = icmp eq i32 %13, 0
  br i1 %3034, label %3035, label %3038

3035:                                             ; preds = %3029
  %3036 = load i32, ptr %3031, align 4, !tbaa !5
  %3037 = sext i32 %3036 to i64
  store i64 %3037, ptr %3033, align 8, !tbaa !120
  br label %5440

3038:                                             ; preds = %3029
  switch i32 %1, label %3630 [
    i32 1, label %3039
    i32 0, label %3338
  ]

3039:                                             ; preds = %3038
  %3040 = getelementptr inbounds i32, ptr %3, i64 %19
  %3041 = load i32, ptr %3040, align 4, !tbaa !5
  %3042 = icmp eq i32 %3041, 0
  %3043 = icmp sgt i32 %5, 0
  br i1 %3042, label %3053, label %3044

3044:                                             ; preds = %3039
  br i1 %3043, label %3045, label %5440

3045:                                             ; preds = %3044
  %3046 = icmp sgt i32 %13, 1
  %3047 = icmp sgt i32 %13, 0
  %3048 = add i32 %13, -2
  %3049 = zext i32 %3048 to i64
  %3050 = zext i32 %13 to i64
  %3051 = add nuw i32 %5, 1
  %3052 = icmp eq i32 %13, 1
  br label %3199

3053:                                             ; preds = %3039
  br i1 %3043, label %3054, label %5440

3054:                                             ; preds = %3053
  %3055 = icmp sgt i32 %13, 1
  %3056 = icmp sgt i32 %13, 0
  %3057 = add i32 %13, -2
  %3058 = zext i32 %3057 to i64
  %3059 = zext i32 %13 to i64
  %3060 = add nuw i32 %5, 1
  %3061 = icmp eq i32 %13, 1
  br label %3062

3062:                                             ; preds = %3054, %3197
  %3063 = phi i64 [ 0, %3054 ], [ %3147, %3197 ]
  %3064 = phi i32 [ 0, %3054 ], [ %3149, %3197 ]
  %3065 = phi double [ 0.000000e+00, %3054 ], [ %3148, %3197 ]
  %3066 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3055, label %3067, label %3136

3067:                                             ; preds = %3062, %3126
  %3068 = phi i32 [ %3135, %3126 ], [ 0, %3062 ]
  %3069 = phi i64 [ %3077, %3126 ], [ %3059, %3062 ]
  %3070 = phi i64 [ %3134, %3126 ], [ %3058, %3062 ]
  %3071 = phi i32 [ %3132, %3126 ], [ %3066, %3062 ]
  %3072 = sub i32 %3057, %3068
  %3073 = tail call i32 @llvm.smin.i32(i32 %3072, i32 0)
  %3074 = sub i32 %3072, %3073
  %3075 = zext i32 %3074 to i64
  %3076 = add nuw nsw i64 %3075, 1
  %3077 = add nsw i64 %3069, -1
  %3078 = icmp ult i32 %3074, 31
  br i1 %3078, label %3114, label %3079

3079:                                             ; preds = %3067
  %3080 = and i64 %3076, 8589934560
  %3081 = sub i64 %3070, %3080
  br label %3082

3082:                                             ; preds = %3082, %3079
  %3083 = phi i64 [ 0, %3079 ], [ %3106, %3082 ]
  %3084 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3102, %3082 ]
  %3085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3103, %3082 ]
  %3086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3104, %3082 ]
  %3087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3079 ], [ %3105, %3082 ]
  %3088 = sub i64 %3070, %3083
  %3089 = getelementptr inbounds i32, ptr %9, i64 %3088
  %3090 = getelementptr inbounds i32, ptr %3089, i64 -7
  %3091 = load <8 x i32>, ptr %3090, align 4, !tbaa !5
  %3092 = shufflevector <8 x i32> %3091, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3093 = getelementptr inbounds i32, ptr %3089, i64 -15
  %3094 = load <8 x i32>, ptr %3093, align 4, !tbaa !5
  %3095 = shufflevector <8 x i32> %3094, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3096 = getelementptr inbounds i32, ptr %3089, i64 -23
  %3097 = load <8 x i32>, ptr %3096, align 4, !tbaa !5
  %3098 = shufflevector <8 x i32> %3097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3099 = getelementptr inbounds i32, ptr %3089, i64 -31
  %3100 = load <8 x i32>, ptr %3099, align 4, !tbaa !5
  %3101 = shufflevector <8 x i32> %3100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3102 = mul <8 x i32> %3092, %3084
  %3103 = mul <8 x i32> %3095, %3085
  %3104 = mul <8 x i32> %3098, %3086
  %3105 = mul <8 x i32> %3101, %3087
  %3106 = add nuw i64 %3083, 32
  %3107 = icmp eq i64 %3106, %3080
  br i1 %3107, label %3108, label %3082, !llvm.loop !684

3108:                                             ; preds = %3082
  %3109 = mul <8 x i32> %3103, %3102
  %3110 = mul <8 x i32> %3104, %3109
  %3111 = mul <8 x i32> %3105, %3110
  %3112 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3111)
  %3113 = icmp eq i64 %3076, %3080
  br i1 %3113, label %3126, label %3114

3114:                                             ; preds = %3067, %3108
  %3115 = phi i64 [ %3070, %3067 ], [ %3081, %3108 ]
  %3116 = phi i32 [ 1, %3067 ], [ %3112, %3108 ]
  br label %3117

3117:                                             ; preds = %3114, %3117
  %3118 = phi i64 [ %3123, %3117 ], [ %3115, %3114 ]
  %3119 = phi i32 [ %3122, %3117 ], [ %3116, %3114 ]
  %3120 = getelementptr inbounds i32, ptr %9, i64 %3118
  %3121 = load i32, ptr %3120, align 4, !tbaa !5
  %3122 = mul nsw i32 %3121, %3119
  %3123 = add nsw i64 %3118, -1
  %3124 = trunc i64 %3118 to i32
  %3125 = icmp sgt i32 %3124, 0
  br i1 %3125, label %3117, label %3126, !llvm.loop !685

3126:                                             ; preds = %3117, %3108
  %3127 = phi i32 [ %3112, %3108 ], [ %3122, %3117 ]
  %3128 = and i64 %3077, 4294967295
  %3129 = getelementptr inbounds i32, ptr %6, i64 %3128
  %3130 = load i32, ptr %3129, align 4, !tbaa !5
  %3131 = mul nsw i32 %3130, %3127
  %3132 = add nsw i32 %3131, %3071
  %3133 = icmp sgt i64 %3069, 2
  %3134 = add nsw i64 %3070, -1
  %3135 = add i32 %3068, 1
  br i1 %3133, label %3067, label %3136, !llvm.loop !686

3136:                                             ; preds = %3126, %3062
  %3137 = phi i32 [ %3066, %3062 ], [ %3132, %3126 ]
  %3138 = sext i32 %3137 to i64
  %3139 = getelementptr inbounds double, ptr %2, i64 %3138
  %3140 = load double, ptr %3139, align 8, !tbaa !18
  %3141 = getelementptr inbounds i32, ptr %3031, i64 %3138
  %3142 = load i32, ptr %3141, align 4, !tbaa !5
  %3143 = sitofp i64 %3063 to double
  %3144 = sitofp i32 %3142 to double
  %3145 = fmul fast double %3140, %3144
  %3146 = fadd fast double %3145, %3143
  %3147 = fptosi double %3146 to i64
  %3148 = fadd fast double %3140, %3065
  %3149 = add nuw nsw i32 %3064, 1
  br i1 %3056, label %3150, label %3197

3150:                                             ; preds = %3136
  %3151 = load i32, ptr %4, align 4, !tbaa !5
  %3152 = load i32, ptr %12, align 4, !tbaa !5
  %3153 = add nsw i32 %3152, -1
  %3154 = icmp slt i32 %3151, %3153
  br i1 %3154, label %3174, label %3155

3155:                                             ; preds = %3150
  %3156 = icmp eq i32 %3151, %3153
  br i1 %3156, label %3157, label %3190

3157:                                             ; preds = %3155
  store i32 0, ptr %4, align 4, !tbaa !5
  %3158 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3158, ptr %6, align 4, !tbaa !5
  br i1 %3061, label %3197, label %3159

3159:                                             ; preds = %3157, %3184
  %3160 = phi i64 [ %3188, %3184 ], [ 1, %3157 ]
  %3161 = getelementptr inbounds i32, ptr %4, i64 %3160
  %3162 = load i32, ptr %3161, align 4, !tbaa !5
  %3163 = getelementptr inbounds i32, ptr %12, i64 %3160
  %3164 = load i32, ptr %3163, align 4, !tbaa !5
  %3165 = add nsw i32 %3164, -1
  %3166 = icmp slt i32 %3162, %3165
  br i1 %3166, label %3167, label %3182

3167:                                             ; preds = %3159
  br i1 %3154, label %3174, label %3168

3168:                                             ; preds = %3167
  %3169 = getelementptr inbounds i32, ptr %7, i64 %3160
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %6, i64 %3160
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, %3170
  store i32 %3173, ptr %3171, align 4, !tbaa !5
  br label %3192

3174:                                             ; preds = %3150, %3167
  %3175 = phi i32 [ %3162, %3167 ], [ %3151, %3150 ]
  %3176 = phi ptr [ %3161, %3167 ], [ %4, %3150 ]
  %3177 = phi i64 [ %3160, %3167 ], [ 0, %3150 ]
  %3178 = add nsw i32 %3175, 1
  store i32 %3178, ptr %3176, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %7, i64 %3177
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = getelementptr inbounds i32, ptr %6, i64 %3177
  br label %3192

3182:                                             ; preds = %3159
  %3183 = icmp eq i32 %3162, %3165
  br i1 %3183, label %3184, label %3190

3184:                                             ; preds = %3182
  store i32 0, ptr %3161, align 4, !tbaa !5
  %3185 = getelementptr inbounds i32, ptr %8, i64 %3160
  %3186 = load i32, ptr %3185, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %6, i64 %3160
  store i32 %3186, ptr %3187, align 4, !tbaa !5
  %3188 = add nuw nsw i64 %3160, 1
  %3189 = icmp eq i64 %3188, %3059
  br i1 %3189, label %3197, label %3159, !llvm.loop !687

3190:                                             ; preds = %3155, %3182
  store i64 %3147, ptr %3033, align 8, !tbaa !120
  %3191 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3192:                                             ; preds = %3168, %3174
  %3193 = phi ptr [ %3181, %3174 ], [ %3161, %3168 ]
  %3194 = phi i32 [ %3180, %3174 ], [ 1, %3168 ]
  %3195 = load i32, ptr %3193, align 4, !tbaa !5
  %3196 = add nsw i32 %3195, %3194
  store i32 %3196, ptr %3193, align 4, !tbaa !5
  br label %3197

3197:                                             ; preds = %3184, %3192, %3157, %3136
  %3198 = icmp eq i32 %3149, %5
  br i1 %3198, label %5434, label %3062, !llvm.loop !688

3199:                                             ; preds = %3045, %3336
  %3200 = phi i64 [ 0, %3045 ], [ %3284, %3336 ]
  %3201 = phi i32 [ 0, %3045 ], [ %3285, %3336 ]
  %3202 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3046, label %3203, label %3272

3203:                                             ; preds = %3199, %3262
  %3204 = phi i32 [ %3271, %3262 ], [ 0, %3199 ]
  %3205 = phi i64 [ %3213, %3262 ], [ %3050, %3199 ]
  %3206 = phi i64 [ %3270, %3262 ], [ %3049, %3199 ]
  %3207 = phi i32 [ %3268, %3262 ], [ %3202, %3199 ]
  %3208 = sub i32 %3048, %3204
  %3209 = tail call i32 @llvm.smin.i32(i32 %3208, i32 0)
  %3210 = sub i32 %3208, %3209
  %3211 = zext i32 %3210 to i64
  %3212 = add nuw nsw i64 %3211, 1
  %3213 = add nsw i64 %3205, -1
  %3214 = icmp ult i32 %3210, 31
  br i1 %3214, label %3250, label %3215

3215:                                             ; preds = %3203
  %3216 = and i64 %3212, 8589934560
  %3217 = sub i64 %3206, %3216
  br label %3218

3218:                                             ; preds = %3218, %3215
  %3219 = phi i64 [ 0, %3215 ], [ %3242, %3218 ]
  %3220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3238, %3218 ]
  %3221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3239, %3218 ]
  %3222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3240, %3218 ]
  %3223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3215 ], [ %3241, %3218 ]
  %3224 = sub i64 %3206, %3219
  %3225 = getelementptr inbounds i32, ptr %11, i64 %3224
  %3226 = getelementptr inbounds i32, ptr %3225, i64 -7
  %3227 = load <8 x i32>, ptr %3226, align 4, !tbaa !5
  %3228 = shufflevector <8 x i32> %3227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3229 = getelementptr inbounds i32, ptr %3225, i64 -15
  %3230 = load <8 x i32>, ptr %3229, align 4, !tbaa !5
  %3231 = shufflevector <8 x i32> %3230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3232 = getelementptr inbounds i32, ptr %3225, i64 -23
  %3233 = load <8 x i32>, ptr %3232, align 4, !tbaa !5
  %3234 = shufflevector <8 x i32> %3233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3235 = getelementptr inbounds i32, ptr %3225, i64 -31
  %3236 = load <8 x i32>, ptr %3235, align 4, !tbaa !5
  %3237 = shufflevector <8 x i32> %3236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3238 = mul <8 x i32> %3228, %3220
  %3239 = mul <8 x i32> %3231, %3221
  %3240 = mul <8 x i32> %3234, %3222
  %3241 = mul <8 x i32> %3237, %3223
  %3242 = add nuw i64 %3219, 32
  %3243 = icmp eq i64 %3242, %3216
  br i1 %3243, label %3244, label %3218, !llvm.loop !689

3244:                                             ; preds = %3218
  %3245 = mul <8 x i32> %3239, %3238
  %3246 = mul <8 x i32> %3240, %3245
  %3247 = mul <8 x i32> %3241, %3246
  %3248 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3247)
  %3249 = icmp eq i64 %3212, %3216
  br i1 %3249, label %3262, label %3250

3250:                                             ; preds = %3203, %3244
  %3251 = phi i64 [ %3206, %3203 ], [ %3217, %3244 ]
  %3252 = phi i32 [ 1, %3203 ], [ %3248, %3244 ]
  br label %3253

3253:                                             ; preds = %3250, %3253
  %3254 = phi i64 [ %3259, %3253 ], [ %3251, %3250 ]
  %3255 = phi i32 [ %3258, %3253 ], [ %3252, %3250 ]
  %3256 = getelementptr inbounds i32, ptr %11, i64 %3254
  %3257 = load i32, ptr %3256, align 4, !tbaa !5
  %3258 = mul nsw i32 %3257, %3255
  %3259 = add nsw i64 %3254, -1
  %3260 = trunc i64 %3254 to i32
  %3261 = icmp sgt i32 %3260, 0
  br i1 %3261, label %3253, label %3262, !llvm.loop !690

3262:                                             ; preds = %3253, %3244
  %3263 = phi i32 [ %3248, %3244 ], [ %3258, %3253 ]
  %3264 = and i64 %3213, 4294967295
  %3265 = getelementptr inbounds i32, ptr %6, i64 %3264
  %3266 = load i32, ptr %3265, align 4, !tbaa !5
  %3267 = mul nsw i32 %3266, %3263
  %3268 = add nsw i32 %3267, %3207
  %3269 = icmp sgt i64 %3205, 2
  %3270 = add nsw i64 %3206, -1
  %3271 = add i32 %3204, 1
  br i1 %3269, label %3203, label %3272, !llvm.loop !691

3272:                                             ; preds = %3262, %3199
  %3273 = phi i32 [ %3202, %3199 ], [ %3268, %3262 ]
  %3274 = icmp slt i32 %3273, %5
  br i1 %3274, label %3277, label %3275

3275:                                             ; preds = %3272
  %3276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3277:                                             ; preds = %3272
  %3278 = sext i32 %3273 to i64
  %3279 = getelementptr inbounds i32, ptr %3031, i64 %3278
  %3280 = load i32, ptr %3279, align 4, !tbaa !5
  %3281 = sitofp i64 %3200 to double
  %3282 = sitofp i32 %3280 to double
  %3283 = fadd fast double %3281, %3282
  %3284 = fptosi double %3283 to i64
  store i64 %3284, ptr %3033, align 8, !tbaa !120
  %3285 = add nuw nsw i32 %3201, 1
  br i1 %3047, label %3286, label %3336

3286:                                             ; preds = %3277
  %3287 = load i32, ptr %4, align 4, !tbaa !5
  %3288 = load i32, ptr %12, align 4, !tbaa !5
  %3289 = add nsw i32 %3288, -1
  %3290 = icmp slt i32 %3287, %3289
  br i1 %3290, label %3313, label %3291

3291:                                             ; preds = %3286
  %3292 = icmp eq i32 %3287, %3289
  br i1 %3292, label %3293, label %3329

3293:                                             ; preds = %3291
  store i32 0, ptr %4, align 4, !tbaa !5
  %3294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3294, ptr %6, align 4, !tbaa !5
  br i1 %3052, label %3336, label %3295

3295:                                             ; preds = %3293, %3323
  %3296 = phi i64 [ %3327, %3323 ], [ 1, %3293 ]
  %3297 = getelementptr inbounds i32, ptr %4, i64 %3296
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = getelementptr inbounds i32, ptr %12, i64 %3296
  %3300 = load i32, ptr %3299, align 4, !tbaa !5
  %3301 = add nsw i32 %3300, -1
  %3302 = icmp slt i32 %3298, %3301
  br i1 %3302, label %3303, label %3321

3303:                                             ; preds = %3295
  br i1 %3290, label %3313, label %3304

3304:                                             ; preds = %3303
  %3305 = shl i64 %3296, 32
  %3306 = add i64 %3305, -4294967296
  %3307 = ashr exact i64 %3306, 32
  %3308 = getelementptr inbounds i32, ptr %7, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = getelementptr inbounds i32, ptr %6, i64 %3296
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = add nsw i32 %3311, %3309
  store i32 %3312, ptr %3310, align 4, !tbaa !5
  br label %3331

3313:                                             ; preds = %3286, %3303
  %3314 = phi i32 [ %3298, %3303 ], [ %3287, %3286 ]
  %3315 = phi ptr [ %3297, %3303 ], [ %4, %3286 ]
  %3316 = phi i64 [ %3296, %3303 ], [ 0, %3286 ]
  %3317 = add nsw i32 %3314, 1
  store i32 %3317, ptr %3315, align 4, !tbaa !5
  %3318 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3319 = load i32, ptr %3318, align 4, !tbaa !5
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3316
  br label %3331

3321:                                             ; preds = %3295
  %3322 = icmp eq i32 %3298, %3301
  br i1 %3322, label %3323, label %3329

3323:                                             ; preds = %3321
  store i32 0, ptr %3297, align 4, !tbaa !5
  %3324 = getelementptr inbounds i32, ptr %8, i64 %3296
  %3325 = load i32, ptr %3324, align 4, !tbaa !5
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3296
  store i32 %3325, ptr %3326, align 4, !tbaa !5
  %3327 = add nuw nsw i64 %3296, 1
  %3328 = icmp eq i64 %3327, %3050
  br i1 %3328, label %3336, label %3295, !llvm.loop !692

3329:                                             ; preds = %3291, %3321
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3331:                                             ; preds = %3304, %3313
  %3332 = phi ptr [ %3320, %3313 ], [ %3297, %3304 ]
  %3333 = phi i32 [ %3319, %3313 ], [ 1, %3304 ]
  %3334 = load i32, ptr %3332, align 4, !tbaa !5
  %3335 = add nsw i32 %3334, %3333
  store i32 %3335, ptr %3332, align 4, !tbaa !5
  br label %3336

3336:                                             ; preds = %3323, %3331, %3293, %3277
  %3337 = icmp eq i32 %3285, %5
  br i1 %3337, label %5440, label %3199, !llvm.loop !693

3338:                                             ; preds = %3038
  %3339 = getelementptr inbounds i32, ptr %3, i64 %19
  %3340 = load i32, ptr %3339, align 4, !tbaa !5
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp sgt i32 %5, 0
  br i1 %3341, label %3352, label %3343

3343:                                             ; preds = %3338
  br i1 %3342, label %3344, label %5440

3344:                                             ; preds = %3343
  %3345 = icmp sgt i32 %13, 1
  %3346 = icmp sgt i32 %13, 0
  %3347 = add i32 %13, -2
  %3348 = zext i32 %3347 to i64
  %3349 = zext i32 %13 to i64
  %3350 = add nuw i32 %5, 1
  %3351 = icmp eq i32 %13, 1
  br label %3493

3352:                                             ; preds = %3338
  br i1 %3342, label %3353, label %5440

3353:                                             ; preds = %3352
  %3354 = icmp sgt i32 %13, 1
  %3355 = icmp sgt i32 %13, 0
  %3356 = add i32 %13, -2
  %3357 = zext i32 %3356 to i64
  %3358 = zext i32 %13 to i64
  %3359 = add nuw i32 %5, 1
  %3360 = icmp eq i32 %13, 1
  br label %3361

3361:                                             ; preds = %3353, %3491
  %3362 = phi i64 [ 0, %3353 ], [ %3441, %3491 ]
  %3363 = phi i32 [ 0, %3353 ], [ %3443, %3491 ]
  %3364 = phi double [ 0.000000e+00, %3353 ], [ %3442, %3491 ]
  %3365 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3354, label %3366, label %3435

3366:                                             ; preds = %3361, %3425
  %3367 = phi i32 [ %3434, %3425 ], [ 0, %3361 ]
  %3368 = phi i64 [ %3376, %3425 ], [ %3358, %3361 ]
  %3369 = phi i64 [ %3433, %3425 ], [ %3357, %3361 ]
  %3370 = phi i32 [ %3431, %3425 ], [ %3365, %3361 ]
  %3371 = sub i32 %3356, %3367
  %3372 = tail call i32 @llvm.smin.i32(i32 %3371, i32 0)
  %3373 = sub i32 %3371, %3372
  %3374 = zext i32 %3373 to i64
  %3375 = add nuw nsw i64 %3374, 1
  %3376 = add nsw i64 %3368, -1
  %3377 = icmp ult i32 %3373, 31
  br i1 %3377, label %3413, label %3378

3378:                                             ; preds = %3366
  %3379 = and i64 %3375, 8589934560
  %3380 = sub i64 %3369, %3379
  br label %3381

3381:                                             ; preds = %3381, %3378
  %3382 = phi i64 [ 0, %3378 ], [ %3405, %3381 ]
  %3383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3401, %3381 ]
  %3384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3402, %3381 ]
  %3385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3403, %3381 ]
  %3386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3378 ], [ %3404, %3381 ]
  %3387 = sub i64 %3369, %3382
  %3388 = getelementptr inbounds i32, ptr %9, i64 %3387
  %3389 = getelementptr inbounds i32, ptr %3388, i64 -7
  %3390 = load <8 x i32>, ptr %3389, align 4, !tbaa !5
  %3391 = shufflevector <8 x i32> %3390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3392 = getelementptr inbounds i32, ptr %3388, i64 -15
  %3393 = load <8 x i32>, ptr %3392, align 4, !tbaa !5
  %3394 = shufflevector <8 x i32> %3393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3395 = getelementptr inbounds i32, ptr %3388, i64 -23
  %3396 = load <8 x i32>, ptr %3395, align 4, !tbaa !5
  %3397 = shufflevector <8 x i32> %3396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3398 = getelementptr inbounds i32, ptr %3388, i64 -31
  %3399 = load <8 x i32>, ptr %3398, align 4, !tbaa !5
  %3400 = shufflevector <8 x i32> %3399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3401 = mul <8 x i32> %3391, %3383
  %3402 = mul <8 x i32> %3394, %3384
  %3403 = mul <8 x i32> %3397, %3385
  %3404 = mul <8 x i32> %3400, %3386
  %3405 = add nuw i64 %3382, 32
  %3406 = icmp eq i64 %3405, %3379
  br i1 %3406, label %3407, label %3381, !llvm.loop !694

3407:                                             ; preds = %3381
  %3408 = mul <8 x i32> %3402, %3401
  %3409 = mul <8 x i32> %3403, %3408
  %3410 = mul <8 x i32> %3404, %3409
  %3411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3410)
  %3412 = icmp eq i64 %3375, %3379
  br i1 %3412, label %3425, label %3413

3413:                                             ; preds = %3366, %3407
  %3414 = phi i64 [ %3369, %3366 ], [ %3380, %3407 ]
  %3415 = phi i32 [ 1, %3366 ], [ %3411, %3407 ]
  br label %3416

3416:                                             ; preds = %3413, %3416
  %3417 = phi i64 [ %3422, %3416 ], [ %3414, %3413 ]
  %3418 = phi i32 [ %3421, %3416 ], [ %3415, %3413 ]
  %3419 = getelementptr inbounds i32, ptr %9, i64 %3417
  %3420 = load i32, ptr %3419, align 4, !tbaa !5
  %3421 = mul nsw i32 %3420, %3418
  %3422 = add nsw i64 %3417, -1
  %3423 = trunc i64 %3417 to i32
  %3424 = icmp sgt i32 %3423, 0
  br i1 %3424, label %3416, label %3425, !llvm.loop !695

3425:                                             ; preds = %3416, %3407
  %3426 = phi i32 [ %3411, %3407 ], [ %3421, %3416 ]
  %3427 = and i64 %3376, 4294967295
  %3428 = getelementptr inbounds i32, ptr %6, i64 %3427
  %3429 = load i32, ptr %3428, align 4, !tbaa !5
  %3430 = mul nsw i32 %3429, %3426
  %3431 = add nsw i32 %3430, %3370
  %3432 = icmp sgt i64 %3368, 2
  %3433 = add nsw i64 %3369, -1
  %3434 = add i32 %3367, 1
  br i1 %3432, label %3366, label %3435, !llvm.loop !696

3435:                                             ; preds = %3425, %3361
  %3436 = phi i32 [ %3365, %3361 ], [ %3431, %3425 ]
  %3437 = sext i32 %3436 to i64
  %3438 = getelementptr inbounds i32, ptr %3031, i64 %3437
  %3439 = load i32, ptr %3438, align 4, !tbaa !5
  %3440 = sext i32 %3439 to i64
  %3441 = add nsw i64 %3362, %3440
  %3442 = fadd fast double %3364, 1.000000e+00
  %3443 = add nuw nsw i32 %3363, 1
  br i1 %3355, label %3444, label %3491

3444:                                             ; preds = %3435
  %3445 = load i32, ptr %4, align 4, !tbaa !5
  %3446 = load i32, ptr %12, align 4, !tbaa !5
  %3447 = add nsw i32 %3446, -1
  %3448 = icmp slt i32 %3445, %3447
  br i1 %3448, label %3468, label %3449

3449:                                             ; preds = %3444
  %3450 = icmp eq i32 %3445, %3447
  br i1 %3450, label %3451, label %3484

3451:                                             ; preds = %3449
  store i32 0, ptr %4, align 4, !tbaa !5
  %3452 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3452, ptr %6, align 4, !tbaa !5
  br i1 %3360, label %3491, label %3453

3453:                                             ; preds = %3451, %3478
  %3454 = phi i64 [ %3482, %3478 ], [ 1, %3451 ]
  %3455 = getelementptr inbounds i32, ptr %4, i64 %3454
  %3456 = load i32, ptr %3455, align 4, !tbaa !5
  %3457 = getelementptr inbounds i32, ptr %12, i64 %3454
  %3458 = load i32, ptr %3457, align 4, !tbaa !5
  %3459 = add nsw i32 %3458, -1
  %3460 = icmp slt i32 %3456, %3459
  br i1 %3460, label %3461, label %3476

3461:                                             ; preds = %3453
  br i1 %3448, label %3468, label %3462

3462:                                             ; preds = %3461
  %3463 = getelementptr inbounds i32, ptr %7, i64 %3454
  %3464 = load i32, ptr %3463, align 4, !tbaa !5
  %3465 = getelementptr inbounds i32, ptr %6, i64 %3454
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = add nsw i32 %3466, %3464
  store i32 %3467, ptr %3465, align 4, !tbaa !5
  br label %3486

3468:                                             ; preds = %3444, %3461
  %3469 = phi i32 [ %3456, %3461 ], [ %3445, %3444 ]
  %3470 = phi ptr [ %3455, %3461 ], [ %4, %3444 ]
  %3471 = phi i64 [ %3454, %3461 ], [ 0, %3444 ]
  %3472 = add nsw i32 %3469, 1
  store i32 %3472, ptr %3470, align 4, !tbaa !5
  %3473 = getelementptr inbounds i32, ptr %7, i64 %3471
  %3474 = load i32, ptr %3473, align 4, !tbaa !5
  %3475 = getelementptr inbounds i32, ptr %6, i64 %3471
  br label %3486

3476:                                             ; preds = %3453
  %3477 = icmp eq i32 %3456, %3459
  br i1 %3477, label %3478, label %3484

3478:                                             ; preds = %3476
  store i32 0, ptr %3455, align 4, !tbaa !5
  %3479 = getelementptr inbounds i32, ptr %8, i64 %3454
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = getelementptr inbounds i32, ptr %6, i64 %3454
  store i32 %3480, ptr %3481, align 4, !tbaa !5
  %3482 = add nuw nsw i64 %3454, 1
  %3483 = icmp eq i64 %3482, %3358
  br i1 %3483, label %3491, label %3453, !llvm.loop !697

3484:                                             ; preds = %3449, %3476
  store i64 %3441, ptr %3033, align 8, !tbaa !120
  %3485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3486:                                             ; preds = %3462, %3468
  %3487 = phi ptr [ %3475, %3468 ], [ %3455, %3462 ]
  %3488 = phi i32 [ %3474, %3468 ], [ 1, %3462 ]
  %3489 = load i32, ptr %3487, align 4, !tbaa !5
  %3490 = add nsw i32 %3489, %3488
  store i32 %3490, ptr %3487, align 4, !tbaa !5
  br label %3491

3491:                                             ; preds = %3478, %3486, %3451, %3435
  %3492 = icmp eq i32 %3443, %5
  br i1 %3492, label %5435, label %3361, !llvm.loop !698

3493:                                             ; preds = %3344, %3628
  %3494 = phi i64 [ 0, %3344 ], [ %3576, %3628 ]
  %3495 = phi i32 [ 0, %3344 ], [ %3577, %3628 ]
  %3496 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3345, label %3497, label %3566

3497:                                             ; preds = %3493, %3556
  %3498 = phi i32 [ %3565, %3556 ], [ 0, %3493 ]
  %3499 = phi i64 [ %3507, %3556 ], [ %3349, %3493 ]
  %3500 = phi i64 [ %3564, %3556 ], [ %3348, %3493 ]
  %3501 = phi i32 [ %3562, %3556 ], [ %3496, %3493 ]
  %3502 = sub i32 %3347, %3498
  %3503 = tail call i32 @llvm.smin.i32(i32 %3502, i32 0)
  %3504 = sub i32 %3502, %3503
  %3505 = zext i32 %3504 to i64
  %3506 = add nuw nsw i64 %3505, 1
  %3507 = add nsw i64 %3499, -1
  %3508 = icmp ult i32 %3504, 31
  br i1 %3508, label %3544, label %3509

3509:                                             ; preds = %3497
  %3510 = and i64 %3506, 8589934560
  %3511 = sub i64 %3500, %3510
  br label %3512

3512:                                             ; preds = %3512, %3509
  %3513 = phi i64 [ 0, %3509 ], [ %3536, %3512 ]
  %3514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3532, %3512 ]
  %3515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3533, %3512 ]
  %3516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3534, %3512 ]
  %3517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3509 ], [ %3535, %3512 ]
  %3518 = sub i64 %3500, %3513
  %3519 = getelementptr inbounds i32, ptr %11, i64 %3518
  %3520 = getelementptr inbounds i32, ptr %3519, i64 -7
  %3521 = load <8 x i32>, ptr %3520, align 4, !tbaa !5
  %3522 = shufflevector <8 x i32> %3521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3523 = getelementptr inbounds i32, ptr %3519, i64 -15
  %3524 = load <8 x i32>, ptr %3523, align 4, !tbaa !5
  %3525 = shufflevector <8 x i32> %3524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3526 = getelementptr inbounds i32, ptr %3519, i64 -23
  %3527 = load <8 x i32>, ptr %3526, align 4, !tbaa !5
  %3528 = shufflevector <8 x i32> %3527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3529 = getelementptr inbounds i32, ptr %3519, i64 -31
  %3530 = load <8 x i32>, ptr %3529, align 4, !tbaa !5
  %3531 = shufflevector <8 x i32> %3530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3532 = mul <8 x i32> %3522, %3514
  %3533 = mul <8 x i32> %3525, %3515
  %3534 = mul <8 x i32> %3528, %3516
  %3535 = mul <8 x i32> %3531, %3517
  %3536 = add nuw i64 %3513, 32
  %3537 = icmp eq i64 %3536, %3510
  br i1 %3537, label %3538, label %3512, !llvm.loop !699

3538:                                             ; preds = %3512
  %3539 = mul <8 x i32> %3533, %3532
  %3540 = mul <8 x i32> %3534, %3539
  %3541 = mul <8 x i32> %3535, %3540
  %3542 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3541)
  %3543 = icmp eq i64 %3506, %3510
  br i1 %3543, label %3556, label %3544

3544:                                             ; preds = %3497, %3538
  %3545 = phi i64 [ %3500, %3497 ], [ %3511, %3538 ]
  %3546 = phi i32 [ 1, %3497 ], [ %3542, %3538 ]
  br label %3547

3547:                                             ; preds = %3544, %3547
  %3548 = phi i64 [ %3553, %3547 ], [ %3545, %3544 ]
  %3549 = phi i32 [ %3552, %3547 ], [ %3546, %3544 ]
  %3550 = getelementptr inbounds i32, ptr %11, i64 %3548
  %3551 = load i32, ptr %3550, align 4, !tbaa !5
  %3552 = mul nsw i32 %3551, %3549
  %3553 = add nsw i64 %3548, -1
  %3554 = trunc i64 %3548 to i32
  %3555 = icmp sgt i32 %3554, 0
  br i1 %3555, label %3547, label %3556, !llvm.loop !700

3556:                                             ; preds = %3547, %3538
  %3557 = phi i32 [ %3542, %3538 ], [ %3552, %3547 ]
  %3558 = and i64 %3507, 4294967295
  %3559 = getelementptr inbounds i32, ptr %6, i64 %3558
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = mul nsw i32 %3560, %3557
  %3562 = add nsw i32 %3561, %3501
  %3563 = icmp sgt i64 %3499, 2
  %3564 = add nsw i64 %3500, -1
  %3565 = add i32 %3498, 1
  br i1 %3563, label %3497, label %3566, !llvm.loop !701

3566:                                             ; preds = %3556, %3493
  %3567 = phi i32 [ %3496, %3493 ], [ %3562, %3556 ]
  %3568 = icmp slt i32 %3567, %5
  br i1 %3568, label %3571, label %3569

3569:                                             ; preds = %3566
  %3570 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3571:                                             ; preds = %3566
  %3572 = sext i32 %3567 to i64
  %3573 = getelementptr inbounds i32, ptr %3031, i64 %3572
  %3574 = load i32, ptr %3573, align 4, !tbaa !5
  %3575 = sext i32 %3574 to i64
  %3576 = add nsw i64 %3494, %3575
  store i64 %3576, ptr %3033, align 8, !tbaa !120
  %3577 = add nuw nsw i32 %3495, 1
  br i1 %3346, label %3578, label %3628

3578:                                             ; preds = %3571
  %3579 = load i32, ptr %4, align 4, !tbaa !5
  %3580 = load i32, ptr %12, align 4, !tbaa !5
  %3581 = add nsw i32 %3580, -1
  %3582 = icmp slt i32 %3579, %3581
  br i1 %3582, label %3605, label %3583

3583:                                             ; preds = %3578
  %3584 = icmp eq i32 %3579, %3581
  br i1 %3584, label %3585, label %3621

3585:                                             ; preds = %3583
  store i32 0, ptr %4, align 4, !tbaa !5
  %3586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3586, ptr %6, align 4, !tbaa !5
  br i1 %3351, label %3628, label %3587

3587:                                             ; preds = %3585, %3615
  %3588 = phi i64 [ %3619, %3615 ], [ 1, %3585 ]
  %3589 = getelementptr inbounds i32, ptr %4, i64 %3588
  %3590 = load i32, ptr %3589, align 4, !tbaa !5
  %3591 = getelementptr inbounds i32, ptr %12, i64 %3588
  %3592 = load i32, ptr %3591, align 4, !tbaa !5
  %3593 = add nsw i32 %3592, -1
  %3594 = icmp slt i32 %3590, %3593
  br i1 %3594, label %3595, label %3613

3595:                                             ; preds = %3587
  br i1 %3582, label %3605, label %3596

3596:                                             ; preds = %3595
  %3597 = shl i64 %3588, 32
  %3598 = add i64 %3597, -4294967296
  %3599 = ashr exact i64 %3598, 32
  %3600 = getelementptr inbounds i32, ptr %7, i64 %3599
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = getelementptr inbounds i32, ptr %6, i64 %3588
  %3603 = load i32, ptr %3602, align 4, !tbaa !5
  %3604 = add nsw i32 %3603, %3601
  store i32 %3604, ptr %3602, align 4, !tbaa !5
  br label %3623

3605:                                             ; preds = %3578, %3595
  %3606 = phi i32 [ %3590, %3595 ], [ %3579, %3578 ]
  %3607 = phi ptr [ %3589, %3595 ], [ %4, %3578 ]
  %3608 = phi i64 [ %3588, %3595 ], [ 0, %3578 ]
  %3609 = add nsw i32 %3606, 1
  store i32 %3609, ptr %3607, align 4, !tbaa !5
  %3610 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3611 = load i32, ptr %3610, align 4, !tbaa !5
  %3612 = getelementptr inbounds i32, ptr %6, i64 %3608
  br label %3623

3613:                                             ; preds = %3587
  %3614 = icmp eq i32 %3590, %3593
  br i1 %3614, label %3615, label %3621

3615:                                             ; preds = %3613
  store i32 0, ptr %3589, align 4, !tbaa !5
  %3616 = getelementptr inbounds i32, ptr %8, i64 %3588
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = getelementptr inbounds i32, ptr %6, i64 %3588
  store i32 %3617, ptr %3618, align 4, !tbaa !5
  %3619 = add nuw nsw i64 %3588, 1
  %3620 = icmp eq i64 %3619, %3349
  br i1 %3620, label %3628, label %3587, !llvm.loop !702

3621:                                             ; preds = %3583, %3613
  %3622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3623:                                             ; preds = %3596, %3605
  %3624 = phi ptr [ %3612, %3605 ], [ %3589, %3596 ]
  %3625 = phi i32 [ %3611, %3605 ], [ 1, %3596 ]
  %3626 = load i32, ptr %3624, align 4, !tbaa !5
  %3627 = add nsw i32 %3626, %3625
  store i32 %3627, ptr %3624, align 4, !tbaa !5
  br label %3628

3628:                                             ; preds = %3615, %3623, %3585, %3571
  %3629 = icmp eq i32 %3577, %5
  br i1 %3629, label %5440, label %3493, !llvm.loop !703

3630:                                             ; preds = %3038
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

3632:                                             ; preds = %18
  %3633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3634 = load ptr, ptr %3633, align 8, !tbaa !9
  %3635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3636 = load ptr, ptr %3635, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3636, align 8, !tbaa !18
  %3637 = icmp eq i32 %13, 0
  br i1 %3637, label %3638, label %3641

3638:                                             ; preds = %3632
  %3639 = load i32, ptr %3634, align 4, !tbaa !5
  %3640 = sitofp i32 %3639 to double
  store double %3640, ptr %3636, align 8, !tbaa !18
  br label %5440

3641:                                             ; preds = %3632
  switch i32 %1, label %4229 [
    i32 1, label %3642
    i32 0, label %3937
  ]

3642:                                             ; preds = %3641
  %3643 = getelementptr inbounds i32, ptr %3, i64 %19
  %3644 = load i32, ptr %3643, align 4, !tbaa !5
  %3645 = icmp eq i32 %3644, 0
  %3646 = icmp sgt i32 %5, 0
  br i1 %3645, label %3656, label %3647

3647:                                             ; preds = %3642
  br i1 %3646, label %3648, label %5440

3648:                                             ; preds = %3647
  %3649 = icmp sgt i32 %13, 1
  %3650 = icmp sgt i32 %13, 0
  %3651 = add i32 %13, -2
  %3652 = zext i32 %3651 to i64
  %3653 = zext i32 %13 to i64
  %3654 = add nuw i32 %5, 1
  %3655 = icmp eq i32 %13, 1
  br label %3800

3656:                                             ; preds = %3642
  br i1 %3646, label %3657, label %5440

3657:                                             ; preds = %3656
  %3658 = icmp sgt i32 %13, 1
  %3659 = icmp sgt i32 %13, 0
  %3660 = add i32 %13, -2
  %3661 = zext i32 %3660 to i64
  %3662 = zext i32 %13 to i64
  %3663 = add nuw i32 %5, 1
  %3664 = icmp eq i32 %13, 1
  br label %3665

3665:                                             ; preds = %3657, %3798
  %3666 = phi double [ 0.000000e+00, %3657 ], [ %3748, %3798 ]
  %3667 = phi i32 [ 0, %3657 ], [ %3750, %3798 ]
  %3668 = phi double [ 0.000000e+00, %3657 ], [ %3749, %3798 ]
  %3669 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3658, label %3670, label %3739

3670:                                             ; preds = %3665, %3729
  %3671 = phi i32 [ %3738, %3729 ], [ 0, %3665 ]
  %3672 = phi i64 [ %3680, %3729 ], [ %3662, %3665 ]
  %3673 = phi i64 [ %3737, %3729 ], [ %3661, %3665 ]
  %3674 = phi i32 [ %3735, %3729 ], [ %3669, %3665 ]
  %3675 = sub i32 %3660, %3671
  %3676 = tail call i32 @llvm.smin.i32(i32 %3675, i32 0)
  %3677 = sub i32 %3675, %3676
  %3678 = zext i32 %3677 to i64
  %3679 = add nuw nsw i64 %3678, 1
  %3680 = add nsw i64 %3672, -1
  %3681 = icmp ult i32 %3677, 31
  br i1 %3681, label %3717, label %3682

3682:                                             ; preds = %3670
  %3683 = and i64 %3679, 8589934560
  %3684 = sub i64 %3673, %3683
  br label %3685

3685:                                             ; preds = %3685, %3682
  %3686 = phi i64 [ 0, %3682 ], [ %3709, %3685 ]
  %3687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3705, %3685 ]
  %3688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3706, %3685 ]
  %3689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3707, %3685 ]
  %3690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3682 ], [ %3708, %3685 ]
  %3691 = sub i64 %3673, %3686
  %3692 = getelementptr inbounds i32, ptr %9, i64 %3691
  %3693 = getelementptr inbounds i32, ptr %3692, i64 -7
  %3694 = load <8 x i32>, ptr %3693, align 4, !tbaa !5
  %3695 = shufflevector <8 x i32> %3694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3696 = getelementptr inbounds i32, ptr %3692, i64 -15
  %3697 = load <8 x i32>, ptr %3696, align 4, !tbaa !5
  %3698 = shufflevector <8 x i32> %3697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3699 = getelementptr inbounds i32, ptr %3692, i64 -23
  %3700 = load <8 x i32>, ptr %3699, align 4, !tbaa !5
  %3701 = shufflevector <8 x i32> %3700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3702 = getelementptr inbounds i32, ptr %3692, i64 -31
  %3703 = load <8 x i32>, ptr %3702, align 4, !tbaa !5
  %3704 = shufflevector <8 x i32> %3703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3705 = mul <8 x i32> %3695, %3687
  %3706 = mul <8 x i32> %3698, %3688
  %3707 = mul <8 x i32> %3701, %3689
  %3708 = mul <8 x i32> %3704, %3690
  %3709 = add nuw i64 %3686, 32
  %3710 = icmp eq i64 %3709, %3683
  br i1 %3710, label %3711, label %3685, !llvm.loop !704

3711:                                             ; preds = %3685
  %3712 = mul <8 x i32> %3706, %3705
  %3713 = mul <8 x i32> %3707, %3712
  %3714 = mul <8 x i32> %3708, %3713
  %3715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3714)
  %3716 = icmp eq i64 %3679, %3683
  br i1 %3716, label %3729, label %3717

3717:                                             ; preds = %3670, %3711
  %3718 = phi i64 [ %3673, %3670 ], [ %3684, %3711 ]
  %3719 = phi i32 [ 1, %3670 ], [ %3715, %3711 ]
  br label %3720

3720:                                             ; preds = %3717, %3720
  %3721 = phi i64 [ %3726, %3720 ], [ %3718, %3717 ]
  %3722 = phi i32 [ %3725, %3720 ], [ %3719, %3717 ]
  %3723 = getelementptr inbounds i32, ptr %9, i64 %3721
  %3724 = load i32, ptr %3723, align 4, !tbaa !5
  %3725 = mul nsw i32 %3724, %3722
  %3726 = add nsw i64 %3721, -1
  %3727 = trunc i64 %3721 to i32
  %3728 = icmp sgt i32 %3727, 0
  br i1 %3728, label %3720, label %3729, !llvm.loop !705

3729:                                             ; preds = %3720, %3711
  %3730 = phi i32 [ %3715, %3711 ], [ %3725, %3720 ]
  %3731 = and i64 %3680, 4294967295
  %3732 = getelementptr inbounds i32, ptr %6, i64 %3731
  %3733 = load i32, ptr %3732, align 4, !tbaa !5
  %3734 = mul nsw i32 %3733, %3730
  %3735 = add nsw i32 %3734, %3674
  %3736 = icmp sgt i64 %3672, 2
  %3737 = add nsw i64 %3673, -1
  %3738 = add i32 %3671, 1
  br i1 %3736, label %3670, label %3739, !llvm.loop !706

3739:                                             ; preds = %3729, %3665
  %3740 = phi i32 [ %3669, %3665 ], [ %3735, %3729 ]
  %3741 = sext i32 %3740 to i64
  %3742 = getelementptr inbounds double, ptr %2, i64 %3741
  %3743 = load double, ptr %3742, align 8, !tbaa !18
  %3744 = getelementptr inbounds i32, ptr %3634, i64 %3741
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = sitofp i32 %3745 to double
  %3747 = fmul fast double %3743, %3746
  %3748 = fadd fast double %3747, %3666
  store double %3748, ptr %3636, align 8, !tbaa !18
  %3749 = fadd fast double %3743, %3668
  %3750 = add nuw nsw i32 %3667, 1
  br i1 %3659, label %3751, label %3798

3751:                                             ; preds = %3739
  %3752 = load i32, ptr %4, align 4, !tbaa !5
  %3753 = load i32, ptr %12, align 4, !tbaa !5
  %3754 = add nsw i32 %3753, -1
  %3755 = icmp slt i32 %3752, %3754
  br i1 %3755, label %3775, label %3756

3756:                                             ; preds = %3751
  %3757 = icmp eq i32 %3752, %3754
  br i1 %3757, label %3758, label %3791

3758:                                             ; preds = %3756
  store i32 0, ptr %4, align 4, !tbaa !5
  %3759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3759, ptr %6, align 4, !tbaa !5
  br i1 %3664, label %3798, label %3760

3760:                                             ; preds = %3758, %3785
  %3761 = phi i64 [ %3789, %3785 ], [ 1, %3758 ]
  %3762 = getelementptr inbounds i32, ptr %4, i64 %3761
  %3763 = load i32, ptr %3762, align 4, !tbaa !5
  %3764 = getelementptr inbounds i32, ptr %12, i64 %3761
  %3765 = load i32, ptr %3764, align 4, !tbaa !5
  %3766 = add nsw i32 %3765, -1
  %3767 = icmp slt i32 %3763, %3766
  br i1 %3767, label %3768, label %3783

3768:                                             ; preds = %3760
  br i1 %3755, label %3775, label %3769

3769:                                             ; preds = %3768
  %3770 = getelementptr inbounds i32, ptr %7, i64 %3761
  %3771 = load i32, ptr %3770, align 4, !tbaa !5
  %3772 = getelementptr inbounds i32, ptr %6, i64 %3761
  %3773 = load i32, ptr %3772, align 4, !tbaa !5
  %3774 = add nsw i32 %3773, %3771
  store i32 %3774, ptr %3772, align 4, !tbaa !5
  br label %3793

3775:                                             ; preds = %3751, %3768
  %3776 = phi i32 [ %3763, %3768 ], [ %3752, %3751 ]
  %3777 = phi ptr [ %3762, %3768 ], [ %4, %3751 ]
  %3778 = phi i64 [ %3761, %3768 ], [ 0, %3751 ]
  %3779 = add nsw i32 %3776, 1
  store i32 %3779, ptr %3777, align 4, !tbaa !5
  %3780 = getelementptr inbounds i32, ptr %7, i64 %3778
  %3781 = load i32, ptr %3780, align 4, !tbaa !5
  %3782 = getelementptr inbounds i32, ptr %6, i64 %3778
  br label %3793

3783:                                             ; preds = %3760
  %3784 = icmp eq i32 %3763, %3766
  br i1 %3784, label %3785, label %3791

3785:                                             ; preds = %3783
  store i32 0, ptr %3762, align 4, !tbaa !5
  %3786 = getelementptr inbounds i32, ptr %8, i64 %3761
  %3787 = load i32, ptr %3786, align 4, !tbaa !5
  %3788 = getelementptr inbounds i32, ptr %6, i64 %3761
  store i32 %3787, ptr %3788, align 4, !tbaa !5
  %3789 = add nuw nsw i64 %3761, 1
  %3790 = icmp eq i64 %3789, %3662
  br i1 %3790, label %3798, label %3760, !llvm.loop !707

3791:                                             ; preds = %3756, %3783
  %3792 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3793:                                             ; preds = %3769, %3775
  %3794 = phi ptr [ %3782, %3775 ], [ %3762, %3769 ]
  %3795 = phi i32 [ %3781, %3775 ], [ 1, %3769 ]
  %3796 = load i32, ptr %3794, align 4, !tbaa !5
  %3797 = add nsw i32 %3796, %3795
  store i32 %3797, ptr %3794, align 4, !tbaa !5
  br label %3798

3798:                                             ; preds = %3785, %3793, %3758, %3739
  %3799 = icmp eq i32 %3750, %5
  br i1 %3799, label %5440, label %3665, !llvm.loop !708

3800:                                             ; preds = %3648, %3935
  %3801 = phi double [ 0.000000e+00, %3648 ], [ %3883, %3935 ]
  %3802 = phi i32 [ 0, %3648 ], [ %3884, %3935 ]
  %3803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3649, label %3804, label %3873

3804:                                             ; preds = %3800, %3863
  %3805 = phi i32 [ %3872, %3863 ], [ 0, %3800 ]
  %3806 = phi i64 [ %3814, %3863 ], [ %3653, %3800 ]
  %3807 = phi i64 [ %3871, %3863 ], [ %3652, %3800 ]
  %3808 = phi i32 [ %3869, %3863 ], [ %3803, %3800 ]
  %3809 = sub i32 %3651, %3805
  %3810 = tail call i32 @llvm.smin.i32(i32 %3809, i32 0)
  %3811 = sub i32 %3809, %3810
  %3812 = zext i32 %3811 to i64
  %3813 = add nuw nsw i64 %3812, 1
  %3814 = add nsw i64 %3806, -1
  %3815 = icmp ult i32 %3811, 31
  br i1 %3815, label %3851, label %3816

3816:                                             ; preds = %3804
  %3817 = and i64 %3813, 8589934560
  %3818 = sub i64 %3807, %3817
  br label %3819

3819:                                             ; preds = %3819, %3816
  %3820 = phi i64 [ 0, %3816 ], [ %3843, %3819 ]
  %3821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3839, %3819 ]
  %3822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3840, %3819 ]
  %3823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3841, %3819 ]
  %3824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3816 ], [ %3842, %3819 ]
  %3825 = sub i64 %3807, %3820
  %3826 = getelementptr inbounds i32, ptr %11, i64 %3825
  %3827 = getelementptr inbounds i32, ptr %3826, i64 -7
  %3828 = load <8 x i32>, ptr %3827, align 4, !tbaa !5
  %3829 = shufflevector <8 x i32> %3828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3830 = getelementptr inbounds i32, ptr %3826, i64 -15
  %3831 = load <8 x i32>, ptr %3830, align 4, !tbaa !5
  %3832 = shufflevector <8 x i32> %3831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3833 = getelementptr inbounds i32, ptr %3826, i64 -23
  %3834 = load <8 x i32>, ptr %3833, align 4, !tbaa !5
  %3835 = shufflevector <8 x i32> %3834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3836 = getelementptr inbounds i32, ptr %3826, i64 -31
  %3837 = load <8 x i32>, ptr %3836, align 4, !tbaa !5
  %3838 = shufflevector <8 x i32> %3837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3839 = mul <8 x i32> %3829, %3821
  %3840 = mul <8 x i32> %3832, %3822
  %3841 = mul <8 x i32> %3835, %3823
  %3842 = mul <8 x i32> %3838, %3824
  %3843 = add nuw i64 %3820, 32
  %3844 = icmp eq i64 %3843, %3817
  br i1 %3844, label %3845, label %3819, !llvm.loop !709

3845:                                             ; preds = %3819
  %3846 = mul <8 x i32> %3840, %3839
  %3847 = mul <8 x i32> %3841, %3846
  %3848 = mul <8 x i32> %3842, %3847
  %3849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3848)
  %3850 = icmp eq i64 %3813, %3817
  br i1 %3850, label %3863, label %3851

3851:                                             ; preds = %3804, %3845
  %3852 = phi i64 [ %3807, %3804 ], [ %3818, %3845 ]
  %3853 = phi i32 [ 1, %3804 ], [ %3849, %3845 ]
  br label %3854

3854:                                             ; preds = %3851, %3854
  %3855 = phi i64 [ %3860, %3854 ], [ %3852, %3851 ]
  %3856 = phi i32 [ %3859, %3854 ], [ %3853, %3851 ]
  %3857 = getelementptr inbounds i32, ptr %11, i64 %3855
  %3858 = load i32, ptr %3857, align 4, !tbaa !5
  %3859 = mul nsw i32 %3858, %3856
  %3860 = add nsw i64 %3855, -1
  %3861 = trunc i64 %3855 to i32
  %3862 = icmp sgt i32 %3861, 0
  br i1 %3862, label %3854, label %3863, !llvm.loop !710

3863:                                             ; preds = %3854, %3845
  %3864 = phi i32 [ %3849, %3845 ], [ %3859, %3854 ]
  %3865 = and i64 %3814, 4294967295
  %3866 = getelementptr inbounds i32, ptr %6, i64 %3865
  %3867 = load i32, ptr %3866, align 4, !tbaa !5
  %3868 = mul nsw i32 %3867, %3864
  %3869 = add nsw i32 %3868, %3808
  %3870 = icmp sgt i64 %3806, 2
  %3871 = add nsw i64 %3807, -1
  %3872 = add i32 %3805, 1
  br i1 %3870, label %3804, label %3873, !llvm.loop !711

3873:                                             ; preds = %3863, %3800
  %3874 = phi i32 [ %3803, %3800 ], [ %3869, %3863 ]
  %3875 = icmp slt i32 %3874, %5
  br i1 %3875, label %3878, label %3876

3876:                                             ; preds = %3873
  %3877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

3878:                                             ; preds = %3873
  %3879 = sext i32 %3874 to i64
  %3880 = getelementptr inbounds i32, ptr %3634, i64 %3879
  %3881 = load i32, ptr %3880, align 4, !tbaa !5
  %3882 = sitofp i32 %3881 to double
  %3883 = fadd fast double %3801, %3882
  store double %3883, ptr %3636, align 8, !tbaa !18
  %3884 = add nuw nsw i32 %3802, 1
  br i1 %3650, label %3885, label %3935

3885:                                             ; preds = %3878
  %3886 = load i32, ptr %4, align 4, !tbaa !5
  %3887 = load i32, ptr %12, align 4, !tbaa !5
  %3888 = add nsw i32 %3887, -1
  %3889 = icmp slt i32 %3886, %3888
  br i1 %3889, label %3912, label %3890

3890:                                             ; preds = %3885
  %3891 = icmp eq i32 %3886, %3888
  br i1 %3891, label %3892, label %3928

3892:                                             ; preds = %3890
  store i32 0, ptr %4, align 4, !tbaa !5
  %3893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3893, ptr %6, align 4, !tbaa !5
  br i1 %3655, label %3935, label %3894

3894:                                             ; preds = %3892, %3922
  %3895 = phi i64 [ %3926, %3922 ], [ 1, %3892 ]
  %3896 = getelementptr inbounds i32, ptr %4, i64 %3895
  %3897 = load i32, ptr %3896, align 4, !tbaa !5
  %3898 = getelementptr inbounds i32, ptr %12, i64 %3895
  %3899 = load i32, ptr %3898, align 4, !tbaa !5
  %3900 = add nsw i32 %3899, -1
  %3901 = icmp slt i32 %3897, %3900
  br i1 %3901, label %3902, label %3920

3902:                                             ; preds = %3894
  br i1 %3889, label %3912, label %3903

3903:                                             ; preds = %3902
  %3904 = shl i64 %3895, 32
  %3905 = add i64 %3904, -4294967296
  %3906 = ashr exact i64 %3905, 32
  %3907 = getelementptr inbounds i32, ptr %7, i64 %3906
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = getelementptr inbounds i32, ptr %6, i64 %3895
  %3910 = load i32, ptr %3909, align 4, !tbaa !5
  %3911 = add nsw i32 %3910, %3908
  store i32 %3911, ptr %3909, align 4, !tbaa !5
  br label %3930

3912:                                             ; preds = %3885, %3902
  %3913 = phi i32 [ %3897, %3902 ], [ %3886, %3885 ]
  %3914 = phi ptr [ %3896, %3902 ], [ %4, %3885 ]
  %3915 = phi i64 [ %3895, %3902 ], [ 0, %3885 ]
  %3916 = add nsw i32 %3913, 1
  store i32 %3916, ptr %3914, align 4, !tbaa !5
  %3917 = getelementptr inbounds i32, ptr %7, i64 %3915
  %3918 = load i32, ptr %3917, align 4, !tbaa !5
  %3919 = getelementptr inbounds i32, ptr %6, i64 %3915
  br label %3930

3920:                                             ; preds = %3894
  %3921 = icmp eq i32 %3897, %3900
  br i1 %3921, label %3922, label %3928

3922:                                             ; preds = %3920
  store i32 0, ptr %3896, align 4, !tbaa !5
  %3923 = getelementptr inbounds i32, ptr %8, i64 %3895
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = getelementptr inbounds i32, ptr %6, i64 %3895
  store i32 %3924, ptr %3925, align 4, !tbaa !5
  %3926 = add nuw nsw i64 %3895, 1
  %3927 = icmp eq i64 %3926, %3653
  br i1 %3927, label %3935, label %3894, !llvm.loop !712

3928:                                             ; preds = %3890, %3920
  %3929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

3930:                                             ; preds = %3903, %3912
  %3931 = phi ptr [ %3919, %3912 ], [ %3896, %3903 ]
  %3932 = phi i32 [ %3918, %3912 ], [ 1, %3903 ]
  %3933 = load i32, ptr %3931, align 4, !tbaa !5
  %3934 = add nsw i32 %3933, %3932
  store i32 %3934, ptr %3931, align 4, !tbaa !5
  br label %3935

3935:                                             ; preds = %3922, %3930, %3892, %3878
  %3936 = icmp eq i32 %3884, %5
  br i1 %3936, label %5440, label %3800, !llvm.loop !713

3937:                                             ; preds = %3641
  %3938 = getelementptr inbounds i32, ptr %3, i64 %19
  %3939 = load i32, ptr %3938, align 4, !tbaa !5
  %3940 = icmp eq i32 %3939, 0
  %3941 = icmp sgt i32 %5, 0
  br i1 %3940, label %3951, label %3942

3942:                                             ; preds = %3937
  br i1 %3941, label %3943, label %5440

3943:                                             ; preds = %3942
  %3944 = icmp sgt i32 %13, 1
  %3945 = icmp sgt i32 %13, 0
  %3946 = add i32 %13, -2
  %3947 = zext i32 %3946 to i64
  %3948 = zext i32 %13 to i64
  %3949 = add nuw i32 %5, 1
  %3950 = icmp eq i32 %13, 1
  br label %4092

3951:                                             ; preds = %3937
  br i1 %3941, label %3952, label %5440

3952:                                             ; preds = %3951
  %3953 = icmp sgt i32 %13, 1
  %3954 = icmp sgt i32 %13, 0
  %3955 = add i32 %13, -2
  %3956 = zext i32 %3955 to i64
  %3957 = zext i32 %13 to i64
  %3958 = add nuw i32 %5, 1
  %3959 = icmp eq i32 %13, 1
  br label %3960

3960:                                             ; preds = %3952, %4090
  %3961 = phi double [ 0.000000e+00, %3952 ], [ %4040, %4090 ]
  %3962 = phi i32 [ 0, %3952 ], [ %4042, %4090 ]
  %3963 = phi double [ 0.000000e+00, %3952 ], [ %4041, %4090 ]
  %3964 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3953, label %3965, label %4034

3965:                                             ; preds = %3960, %4024
  %3966 = phi i32 [ %4033, %4024 ], [ 0, %3960 ]
  %3967 = phi i64 [ %3975, %4024 ], [ %3957, %3960 ]
  %3968 = phi i64 [ %4032, %4024 ], [ %3956, %3960 ]
  %3969 = phi i32 [ %4030, %4024 ], [ %3964, %3960 ]
  %3970 = sub i32 %3955, %3966
  %3971 = tail call i32 @llvm.smin.i32(i32 %3970, i32 0)
  %3972 = sub i32 %3970, %3971
  %3973 = zext i32 %3972 to i64
  %3974 = add nuw nsw i64 %3973, 1
  %3975 = add nsw i64 %3967, -1
  %3976 = icmp ult i32 %3972, 31
  br i1 %3976, label %4012, label %3977

3977:                                             ; preds = %3965
  %3978 = and i64 %3974, 8589934560
  %3979 = sub i64 %3968, %3978
  br label %3980

3980:                                             ; preds = %3980, %3977
  %3981 = phi i64 [ 0, %3977 ], [ %4004, %3980 ]
  %3982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4000, %3980 ]
  %3983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4001, %3980 ]
  %3984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4002, %3980 ]
  %3985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3977 ], [ %4003, %3980 ]
  %3986 = sub i64 %3968, %3981
  %3987 = getelementptr inbounds i32, ptr %9, i64 %3986
  %3988 = getelementptr inbounds i32, ptr %3987, i64 -7
  %3989 = load <8 x i32>, ptr %3988, align 4, !tbaa !5
  %3990 = shufflevector <8 x i32> %3989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3991 = getelementptr inbounds i32, ptr %3987, i64 -15
  %3992 = load <8 x i32>, ptr %3991, align 4, !tbaa !5
  %3993 = shufflevector <8 x i32> %3992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3994 = getelementptr inbounds i32, ptr %3987, i64 -23
  %3995 = load <8 x i32>, ptr %3994, align 4, !tbaa !5
  %3996 = shufflevector <8 x i32> %3995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3997 = getelementptr inbounds i32, ptr %3987, i64 -31
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = mul <8 x i32> %3990, %3982
  %4001 = mul <8 x i32> %3993, %3983
  %4002 = mul <8 x i32> %3996, %3984
  %4003 = mul <8 x i32> %3999, %3985
  %4004 = add nuw i64 %3981, 32
  %4005 = icmp eq i64 %4004, %3978
  br i1 %4005, label %4006, label %3980, !llvm.loop !714

4006:                                             ; preds = %3980
  %4007 = mul <8 x i32> %4001, %4000
  %4008 = mul <8 x i32> %4002, %4007
  %4009 = mul <8 x i32> %4003, %4008
  %4010 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4009)
  %4011 = icmp eq i64 %3974, %3978
  br i1 %4011, label %4024, label %4012

4012:                                             ; preds = %3965, %4006
  %4013 = phi i64 [ %3968, %3965 ], [ %3979, %4006 ]
  %4014 = phi i32 [ 1, %3965 ], [ %4010, %4006 ]
  br label %4015

4015:                                             ; preds = %4012, %4015
  %4016 = phi i64 [ %4021, %4015 ], [ %4013, %4012 ]
  %4017 = phi i32 [ %4020, %4015 ], [ %4014, %4012 ]
  %4018 = getelementptr inbounds i32, ptr %9, i64 %4016
  %4019 = load i32, ptr %4018, align 4, !tbaa !5
  %4020 = mul nsw i32 %4019, %4017
  %4021 = add nsw i64 %4016, -1
  %4022 = trunc i64 %4016 to i32
  %4023 = icmp sgt i32 %4022, 0
  br i1 %4023, label %4015, label %4024, !llvm.loop !715

4024:                                             ; preds = %4015, %4006
  %4025 = phi i32 [ %4010, %4006 ], [ %4020, %4015 ]
  %4026 = and i64 %3975, 4294967295
  %4027 = getelementptr inbounds i32, ptr %6, i64 %4026
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = mul nsw i32 %4028, %4025
  %4030 = add nsw i32 %4029, %3969
  %4031 = icmp sgt i64 %3967, 2
  %4032 = add nsw i64 %3968, -1
  %4033 = add i32 %3966, 1
  br i1 %4031, label %3965, label %4034, !llvm.loop !716

4034:                                             ; preds = %4024, %3960
  %4035 = phi i32 [ %3964, %3960 ], [ %4030, %4024 ]
  %4036 = sext i32 %4035 to i64
  %4037 = getelementptr inbounds i32, ptr %3634, i64 %4036
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = sitofp i32 %4038 to double
  %4040 = fadd fast double %3961, %4039
  %4041 = fadd fast double %3963, 1.000000e+00
  %4042 = add nuw nsw i32 %3962, 1
  br i1 %3954, label %4043, label %4090

4043:                                             ; preds = %4034
  %4044 = load i32, ptr %4, align 4, !tbaa !5
  %4045 = load i32, ptr %12, align 4, !tbaa !5
  %4046 = add nsw i32 %4045, -1
  %4047 = icmp slt i32 %4044, %4046
  br i1 %4047, label %4067, label %4048

4048:                                             ; preds = %4043
  %4049 = icmp eq i32 %4044, %4046
  br i1 %4049, label %4050, label %4083

4050:                                             ; preds = %4048
  store i32 0, ptr %4, align 4, !tbaa !5
  %4051 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4051, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %4090, label %4052

4052:                                             ; preds = %4050, %4077
  %4053 = phi i64 [ %4081, %4077 ], [ 1, %4050 ]
  %4054 = getelementptr inbounds i32, ptr %4, i64 %4053
  %4055 = load i32, ptr %4054, align 4, !tbaa !5
  %4056 = getelementptr inbounds i32, ptr %12, i64 %4053
  %4057 = load i32, ptr %4056, align 4, !tbaa !5
  %4058 = add nsw i32 %4057, -1
  %4059 = icmp slt i32 %4055, %4058
  br i1 %4059, label %4060, label %4075

4060:                                             ; preds = %4052
  br i1 %4047, label %4067, label %4061

4061:                                             ; preds = %4060
  %4062 = getelementptr inbounds i32, ptr %7, i64 %4053
  %4063 = load i32, ptr %4062, align 4, !tbaa !5
  %4064 = getelementptr inbounds i32, ptr %6, i64 %4053
  %4065 = load i32, ptr %4064, align 4, !tbaa !5
  %4066 = add nsw i32 %4065, %4063
  store i32 %4066, ptr %4064, align 4, !tbaa !5
  br label %4085

4067:                                             ; preds = %4043, %4060
  %4068 = phi i32 [ %4055, %4060 ], [ %4044, %4043 ]
  %4069 = phi ptr [ %4054, %4060 ], [ %4, %4043 ]
  %4070 = phi i64 [ %4053, %4060 ], [ 0, %4043 ]
  %4071 = add nsw i32 %4068, 1
  store i32 %4071, ptr %4069, align 4, !tbaa !5
  %4072 = getelementptr inbounds i32, ptr %7, i64 %4070
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = getelementptr inbounds i32, ptr %6, i64 %4070
  br label %4085

4075:                                             ; preds = %4052
  %4076 = icmp eq i32 %4055, %4058
  br i1 %4076, label %4077, label %4083

4077:                                             ; preds = %4075
  store i32 0, ptr %4054, align 4, !tbaa !5
  %4078 = getelementptr inbounds i32, ptr %8, i64 %4053
  %4079 = load i32, ptr %4078, align 4, !tbaa !5
  %4080 = getelementptr inbounds i32, ptr %6, i64 %4053
  store i32 %4079, ptr %4080, align 4, !tbaa !5
  %4081 = add nuw nsw i64 %4053, 1
  %4082 = icmp eq i64 %4081, %3957
  br i1 %4082, label %4090, label %4052, !llvm.loop !717

4083:                                             ; preds = %4048, %4075
  store double %4040, ptr %3636, align 8, !tbaa !18
  %4084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4085:                                             ; preds = %4061, %4067
  %4086 = phi ptr [ %4074, %4067 ], [ %4054, %4061 ]
  %4087 = phi i32 [ %4073, %4067 ], [ 1, %4061 ]
  %4088 = load i32, ptr %4086, align 4, !tbaa !5
  %4089 = add nsw i32 %4088, %4087
  store i32 %4089, ptr %4086, align 4, !tbaa !5
  br label %4090

4090:                                             ; preds = %4077, %4085, %4050, %4034
  %4091 = icmp eq i32 %4042, %5
  br i1 %4091, label %5436, label %3960, !llvm.loop !718

4092:                                             ; preds = %3943, %4227
  %4093 = phi double [ 0.000000e+00, %3943 ], [ %4175, %4227 ]
  %4094 = phi i32 [ 0, %3943 ], [ %4176, %4227 ]
  %4095 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3944, label %4096, label %4165

4096:                                             ; preds = %4092, %4155
  %4097 = phi i32 [ %4164, %4155 ], [ 0, %4092 ]
  %4098 = phi i64 [ %4106, %4155 ], [ %3948, %4092 ]
  %4099 = phi i64 [ %4163, %4155 ], [ %3947, %4092 ]
  %4100 = phi i32 [ %4161, %4155 ], [ %4095, %4092 ]
  %4101 = sub i32 %3946, %4097
  %4102 = tail call i32 @llvm.smin.i32(i32 %4101, i32 0)
  %4103 = sub i32 %4101, %4102
  %4104 = zext i32 %4103 to i64
  %4105 = add nuw nsw i64 %4104, 1
  %4106 = add nsw i64 %4098, -1
  %4107 = icmp ult i32 %4103, 31
  br i1 %4107, label %4143, label %4108

4108:                                             ; preds = %4096
  %4109 = and i64 %4105, 8589934560
  %4110 = sub i64 %4099, %4109
  br label %4111

4111:                                             ; preds = %4111, %4108
  %4112 = phi i64 [ 0, %4108 ], [ %4135, %4111 ]
  %4113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4131, %4111 ]
  %4114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4132, %4111 ]
  %4115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4133, %4111 ]
  %4116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4108 ], [ %4134, %4111 ]
  %4117 = sub i64 %4099, %4112
  %4118 = getelementptr inbounds i32, ptr %11, i64 %4117
  %4119 = getelementptr inbounds i32, ptr %4118, i64 -7
  %4120 = load <8 x i32>, ptr %4119, align 4, !tbaa !5
  %4121 = shufflevector <8 x i32> %4120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4122 = getelementptr inbounds i32, ptr %4118, i64 -15
  %4123 = load <8 x i32>, ptr %4122, align 4, !tbaa !5
  %4124 = shufflevector <8 x i32> %4123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4125 = getelementptr inbounds i32, ptr %4118, i64 -23
  %4126 = load <8 x i32>, ptr %4125, align 4, !tbaa !5
  %4127 = shufflevector <8 x i32> %4126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4128 = getelementptr inbounds i32, ptr %4118, i64 -31
  %4129 = load <8 x i32>, ptr %4128, align 4, !tbaa !5
  %4130 = shufflevector <8 x i32> %4129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4131 = mul <8 x i32> %4121, %4113
  %4132 = mul <8 x i32> %4124, %4114
  %4133 = mul <8 x i32> %4127, %4115
  %4134 = mul <8 x i32> %4130, %4116
  %4135 = add nuw i64 %4112, 32
  %4136 = icmp eq i64 %4135, %4109
  br i1 %4136, label %4137, label %4111, !llvm.loop !719

4137:                                             ; preds = %4111
  %4138 = mul <8 x i32> %4132, %4131
  %4139 = mul <8 x i32> %4133, %4138
  %4140 = mul <8 x i32> %4134, %4139
  %4141 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4140)
  %4142 = icmp eq i64 %4105, %4109
  br i1 %4142, label %4155, label %4143

4143:                                             ; preds = %4096, %4137
  %4144 = phi i64 [ %4099, %4096 ], [ %4110, %4137 ]
  %4145 = phi i32 [ 1, %4096 ], [ %4141, %4137 ]
  br label %4146

4146:                                             ; preds = %4143, %4146
  %4147 = phi i64 [ %4152, %4146 ], [ %4144, %4143 ]
  %4148 = phi i32 [ %4151, %4146 ], [ %4145, %4143 ]
  %4149 = getelementptr inbounds i32, ptr %11, i64 %4147
  %4150 = load i32, ptr %4149, align 4, !tbaa !5
  %4151 = mul nsw i32 %4150, %4148
  %4152 = add nsw i64 %4147, -1
  %4153 = trunc i64 %4147 to i32
  %4154 = icmp sgt i32 %4153, 0
  br i1 %4154, label %4146, label %4155, !llvm.loop !720

4155:                                             ; preds = %4146, %4137
  %4156 = phi i32 [ %4141, %4137 ], [ %4151, %4146 ]
  %4157 = and i64 %4106, 4294967295
  %4158 = getelementptr inbounds i32, ptr %6, i64 %4157
  %4159 = load i32, ptr %4158, align 4, !tbaa !5
  %4160 = mul nsw i32 %4159, %4156
  %4161 = add nsw i32 %4160, %4100
  %4162 = icmp sgt i64 %4098, 2
  %4163 = add nsw i64 %4099, -1
  %4164 = add i32 %4097, 1
  br i1 %4162, label %4096, label %4165, !llvm.loop !721

4165:                                             ; preds = %4155, %4092
  %4166 = phi i32 [ %4095, %4092 ], [ %4161, %4155 ]
  %4167 = icmp slt i32 %4166, %5
  br i1 %4167, label %4170, label %4168

4168:                                             ; preds = %4165
  %4169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4170:                                             ; preds = %4165
  %4171 = sext i32 %4166 to i64
  %4172 = getelementptr inbounds i32, ptr %3634, i64 %4171
  %4173 = load i32, ptr %4172, align 4, !tbaa !5
  %4174 = sitofp i32 %4173 to double
  %4175 = fadd fast double %4093, %4174
  store double %4175, ptr %3636, align 8, !tbaa !18
  %4176 = add nuw nsw i32 %4094, 1
  br i1 %3945, label %4177, label %4227

4177:                                             ; preds = %4170
  %4178 = load i32, ptr %4, align 4, !tbaa !5
  %4179 = load i32, ptr %12, align 4, !tbaa !5
  %4180 = add nsw i32 %4179, -1
  %4181 = icmp slt i32 %4178, %4180
  br i1 %4181, label %4204, label %4182

4182:                                             ; preds = %4177
  %4183 = icmp eq i32 %4178, %4180
  br i1 %4183, label %4184, label %4220

4184:                                             ; preds = %4182
  store i32 0, ptr %4, align 4, !tbaa !5
  %4185 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4185, ptr %6, align 4, !tbaa !5
  br i1 %3950, label %4227, label %4186

4186:                                             ; preds = %4184, %4214
  %4187 = phi i64 [ %4218, %4214 ], [ 1, %4184 ]
  %4188 = getelementptr inbounds i32, ptr %4, i64 %4187
  %4189 = load i32, ptr %4188, align 4, !tbaa !5
  %4190 = getelementptr inbounds i32, ptr %12, i64 %4187
  %4191 = load i32, ptr %4190, align 4, !tbaa !5
  %4192 = add nsw i32 %4191, -1
  %4193 = icmp slt i32 %4189, %4192
  br i1 %4193, label %4194, label %4212

4194:                                             ; preds = %4186
  br i1 %4181, label %4204, label %4195

4195:                                             ; preds = %4194
  %4196 = shl i64 %4187, 32
  %4197 = add i64 %4196, -4294967296
  %4198 = ashr exact i64 %4197, 32
  %4199 = getelementptr inbounds i32, ptr %7, i64 %4198
  %4200 = load i32, ptr %4199, align 4, !tbaa !5
  %4201 = getelementptr inbounds i32, ptr %6, i64 %4187
  %4202 = load i32, ptr %4201, align 4, !tbaa !5
  %4203 = add nsw i32 %4202, %4200
  store i32 %4203, ptr %4201, align 4, !tbaa !5
  br label %4222

4204:                                             ; preds = %4177, %4194
  %4205 = phi i32 [ %4189, %4194 ], [ %4178, %4177 ]
  %4206 = phi ptr [ %4188, %4194 ], [ %4, %4177 ]
  %4207 = phi i64 [ %4187, %4194 ], [ 0, %4177 ]
  %4208 = add nsw i32 %4205, 1
  store i32 %4208, ptr %4206, align 4, !tbaa !5
  %4209 = getelementptr inbounds i32, ptr %7, i64 %4207
  %4210 = load i32, ptr %4209, align 4, !tbaa !5
  %4211 = getelementptr inbounds i32, ptr %6, i64 %4207
  br label %4222

4212:                                             ; preds = %4186
  %4213 = icmp eq i32 %4189, %4192
  br i1 %4213, label %4214, label %4220

4214:                                             ; preds = %4212
  store i32 0, ptr %4188, align 4, !tbaa !5
  %4215 = getelementptr inbounds i32, ptr %8, i64 %4187
  %4216 = load i32, ptr %4215, align 4, !tbaa !5
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4187
  store i32 %4216, ptr %4217, align 4, !tbaa !5
  %4218 = add nuw nsw i64 %4187, 1
  %4219 = icmp eq i64 %4218, %3948
  br i1 %4219, label %4227, label %4186, !llvm.loop !722

4220:                                             ; preds = %4182, %4212
  %4221 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4222:                                             ; preds = %4195, %4204
  %4223 = phi ptr [ %4211, %4204 ], [ %4188, %4195 ]
  %4224 = phi i32 [ %4210, %4204 ], [ 1, %4195 ]
  %4225 = load i32, ptr %4223, align 4, !tbaa !5
  %4226 = add nsw i32 %4225, %4224
  store i32 %4226, ptr %4223, align 4, !tbaa !5
  br label %4227

4227:                                             ; preds = %4214, %4222, %4184, %4170
  %4228 = icmp eq i32 %4176, %5
  br i1 %4228, label %5440, label %4092, !llvm.loop !723

4229:                                             ; preds = %3641
  %4230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

4231:                                             ; preds = %18
  %4232 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4233 = load ptr, ptr %4232, align 8, !tbaa !9
  %4234 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4235 = load ptr, ptr %4234, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4235, align 4, !tbaa !162
  %4236 = icmp eq i32 %13, 0
  br i1 %4236, label %4237, label %4240

4237:                                             ; preds = %4231
  %4238 = load i32, ptr %4233, align 4, !tbaa !5
  %4239 = sitofp i32 %4238 to float
  store float %4239, ptr %4235, align 4, !tbaa !162
  br label %5440

4240:                                             ; preds = %4231
  switch i32 %1, label %4831 [
    i32 1, label %4241
    i32 0, label %4539
  ]

4241:                                             ; preds = %4240
  %4242 = getelementptr inbounds i32, ptr %3, i64 %19
  %4243 = load i32, ptr %4242, align 4, !tbaa !5
  %4244 = icmp eq i32 %4243, 0
  %4245 = icmp sgt i32 %5, 0
  br i1 %4244, label %4255, label %4246

4246:                                             ; preds = %4241
  br i1 %4245, label %4247, label %5440

4247:                                             ; preds = %4246
  %4248 = icmp sgt i32 %13, 1
  %4249 = icmp sgt i32 %13, 0
  %4250 = add i32 %13, -2
  %4251 = zext i32 %4250 to i64
  %4252 = zext i32 %13 to i64
  %4253 = add nuw i32 %5, 1
  %4254 = icmp eq i32 %13, 1
  br label %4402

4255:                                             ; preds = %4241
  br i1 %4245, label %4256, label %5440

4256:                                             ; preds = %4255
  %4257 = icmp sgt i32 %13, 1
  %4258 = icmp sgt i32 %13, 0
  %4259 = add i32 %13, -2
  %4260 = zext i32 %4259 to i64
  %4261 = zext i32 %13 to i64
  %4262 = add nuw i32 %5, 1
  %4263 = icmp eq i32 %13, 1
  br label %4264

4264:                                             ; preds = %4256, %4400
  %4265 = phi float [ 0.000000e+00, %4256 ], [ %4350, %4400 ]
  %4266 = phi i32 [ 0, %4256 ], [ %4352, %4400 ]
  %4267 = phi double [ 0.000000e+00, %4256 ], [ %4351, %4400 ]
  %4268 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4257, label %4269, label %4338

4269:                                             ; preds = %4264, %4328
  %4270 = phi i32 [ %4337, %4328 ], [ 0, %4264 ]
  %4271 = phi i64 [ %4279, %4328 ], [ %4261, %4264 ]
  %4272 = phi i64 [ %4336, %4328 ], [ %4260, %4264 ]
  %4273 = phi i32 [ %4334, %4328 ], [ %4268, %4264 ]
  %4274 = sub i32 %4259, %4270
  %4275 = tail call i32 @llvm.smin.i32(i32 %4274, i32 0)
  %4276 = sub i32 %4274, %4275
  %4277 = zext i32 %4276 to i64
  %4278 = add nuw nsw i64 %4277, 1
  %4279 = add nsw i64 %4271, -1
  %4280 = icmp ult i32 %4276, 31
  br i1 %4280, label %4316, label %4281

4281:                                             ; preds = %4269
  %4282 = and i64 %4278, 8589934560
  %4283 = sub i64 %4272, %4282
  br label %4284

4284:                                             ; preds = %4284, %4281
  %4285 = phi i64 [ 0, %4281 ], [ %4308, %4284 ]
  %4286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4304, %4284 ]
  %4287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4305, %4284 ]
  %4288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4306, %4284 ]
  %4289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4281 ], [ %4307, %4284 ]
  %4290 = sub i64 %4272, %4285
  %4291 = getelementptr inbounds i32, ptr %9, i64 %4290
  %4292 = getelementptr inbounds i32, ptr %4291, i64 -7
  %4293 = load <8 x i32>, ptr %4292, align 4, !tbaa !5
  %4294 = shufflevector <8 x i32> %4293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4295 = getelementptr inbounds i32, ptr %4291, i64 -15
  %4296 = load <8 x i32>, ptr %4295, align 4, !tbaa !5
  %4297 = shufflevector <8 x i32> %4296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4298 = getelementptr inbounds i32, ptr %4291, i64 -23
  %4299 = load <8 x i32>, ptr %4298, align 4, !tbaa !5
  %4300 = shufflevector <8 x i32> %4299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4301 = getelementptr inbounds i32, ptr %4291, i64 -31
  %4302 = load <8 x i32>, ptr %4301, align 4, !tbaa !5
  %4303 = shufflevector <8 x i32> %4302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4304 = mul <8 x i32> %4294, %4286
  %4305 = mul <8 x i32> %4297, %4287
  %4306 = mul <8 x i32> %4300, %4288
  %4307 = mul <8 x i32> %4303, %4289
  %4308 = add nuw i64 %4285, 32
  %4309 = icmp eq i64 %4308, %4282
  br i1 %4309, label %4310, label %4284, !llvm.loop !724

4310:                                             ; preds = %4284
  %4311 = mul <8 x i32> %4305, %4304
  %4312 = mul <8 x i32> %4306, %4311
  %4313 = mul <8 x i32> %4307, %4312
  %4314 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4313)
  %4315 = icmp eq i64 %4278, %4282
  br i1 %4315, label %4328, label %4316

4316:                                             ; preds = %4269, %4310
  %4317 = phi i64 [ %4272, %4269 ], [ %4283, %4310 ]
  %4318 = phi i32 [ 1, %4269 ], [ %4314, %4310 ]
  br label %4319

4319:                                             ; preds = %4316, %4319
  %4320 = phi i64 [ %4325, %4319 ], [ %4317, %4316 ]
  %4321 = phi i32 [ %4324, %4319 ], [ %4318, %4316 ]
  %4322 = getelementptr inbounds i32, ptr %9, i64 %4320
  %4323 = load i32, ptr %4322, align 4, !tbaa !5
  %4324 = mul nsw i32 %4323, %4321
  %4325 = add nsw i64 %4320, -1
  %4326 = trunc i64 %4320 to i32
  %4327 = icmp sgt i32 %4326, 0
  br i1 %4327, label %4319, label %4328, !llvm.loop !725

4328:                                             ; preds = %4319, %4310
  %4329 = phi i32 [ %4314, %4310 ], [ %4324, %4319 ]
  %4330 = and i64 %4279, 4294967295
  %4331 = getelementptr inbounds i32, ptr %6, i64 %4330
  %4332 = load i32, ptr %4331, align 4, !tbaa !5
  %4333 = mul nsw i32 %4332, %4329
  %4334 = add nsw i32 %4333, %4273
  %4335 = icmp sgt i64 %4271, 2
  %4336 = add nsw i64 %4272, -1
  %4337 = add i32 %4270, 1
  br i1 %4335, label %4269, label %4338, !llvm.loop !726

4338:                                             ; preds = %4328, %4264
  %4339 = phi i32 [ %4268, %4264 ], [ %4334, %4328 ]
  %4340 = sext i32 %4339 to i64
  %4341 = getelementptr inbounds double, ptr %2, i64 %4340
  %4342 = load double, ptr %4341, align 8, !tbaa !18
  %4343 = getelementptr inbounds i32, ptr %4233, i64 %4340
  %4344 = load i32, ptr %4343, align 4, !tbaa !5
  %4345 = sitofp i32 %4344 to float
  %4346 = fpext float %4265 to double
  %4347 = fpext float %4345 to double
  %4348 = fmul fast double %4342, %4347
  %4349 = fadd fast double %4348, %4346
  %4350 = fptrunc double %4349 to float
  %4351 = fadd fast double %4342, %4267
  %4352 = add nuw nsw i32 %4266, 1
  br i1 %4258, label %4353, label %4400

4353:                                             ; preds = %4338
  %4354 = load i32, ptr %4, align 4, !tbaa !5
  %4355 = load i32, ptr %12, align 4, !tbaa !5
  %4356 = add nsw i32 %4355, -1
  %4357 = icmp slt i32 %4354, %4356
  br i1 %4357, label %4377, label %4358

4358:                                             ; preds = %4353
  %4359 = icmp eq i32 %4354, %4356
  br i1 %4359, label %4360, label %4393

4360:                                             ; preds = %4358
  store i32 0, ptr %4, align 4, !tbaa !5
  %4361 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4361, ptr %6, align 4, !tbaa !5
  br i1 %4263, label %4400, label %4362

4362:                                             ; preds = %4360, %4387
  %4363 = phi i64 [ %4391, %4387 ], [ 1, %4360 ]
  %4364 = getelementptr inbounds i32, ptr %4, i64 %4363
  %4365 = load i32, ptr %4364, align 4, !tbaa !5
  %4366 = getelementptr inbounds i32, ptr %12, i64 %4363
  %4367 = load i32, ptr %4366, align 4, !tbaa !5
  %4368 = add nsw i32 %4367, -1
  %4369 = icmp slt i32 %4365, %4368
  br i1 %4369, label %4370, label %4385

4370:                                             ; preds = %4362
  br i1 %4357, label %4377, label %4371

4371:                                             ; preds = %4370
  %4372 = getelementptr inbounds i32, ptr %7, i64 %4363
  %4373 = load i32, ptr %4372, align 4, !tbaa !5
  %4374 = getelementptr inbounds i32, ptr %6, i64 %4363
  %4375 = load i32, ptr %4374, align 4, !tbaa !5
  %4376 = add nsw i32 %4375, %4373
  store i32 %4376, ptr %4374, align 4, !tbaa !5
  br label %4395

4377:                                             ; preds = %4353, %4370
  %4378 = phi i32 [ %4365, %4370 ], [ %4354, %4353 ]
  %4379 = phi ptr [ %4364, %4370 ], [ %4, %4353 ]
  %4380 = phi i64 [ %4363, %4370 ], [ 0, %4353 ]
  %4381 = add nsw i32 %4378, 1
  store i32 %4381, ptr %4379, align 4, !tbaa !5
  %4382 = getelementptr inbounds i32, ptr %7, i64 %4380
  %4383 = load i32, ptr %4382, align 4, !tbaa !5
  %4384 = getelementptr inbounds i32, ptr %6, i64 %4380
  br label %4395

4385:                                             ; preds = %4362
  %4386 = icmp eq i32 %4365, %4368
  br i1 %4386, label %4387, label %4393

4387:                                             ; preds = %4385
  store i32 0, ptr %4364, align 4, !tbaa !5
  %4388 = getelementptr inbounds i32, ptr %8, i64 %4363
  %4389 = load i32, ptr %4388, align 4, !tbaa !5
  %4390 = getelementptr inbounds i32, ptr %6, i64 %4363
  store i32 %4389, ptr %4390, align 4, !tbaa !5
  %4391 = add nuw nsw i64 %4363, 1
  %4392 = icmp eq i64 %4391, %4261
  br i1 %4392, label %4400, label %4362, !llvm.loop !727

4393:                                             ; preds = %4358, %4385
  store float %4350, ptr %4235, align 4, !tbaa !162
  %4394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4395:                                             ; preds = %4371, %4377
  %4396 = phi ptr [ %4384, %4377 ], [ %4364, %4371 ]
  %4397 = phi i32 [ %4383, %4377 ], [ 1, %4371 ]
  %4398 = load i32, ptr %4396, align 4, !tbaa !5
  %4399 = add nsw i32 %4398, %4397
  store i32 %4399, ptr %4396, align 4, !tbaa !5
  br label %4400

4400:                                             ; preds = %4387, %4395, %4360, %4338
  %4401 = icmp eq i32 %4352, %5
  br i1 %4401, label %5437, label %4264, !llvm.loop !728

4402:                                             ; preds = %4247, %4537
  %4403 = phi float [ 0.000000e+00, %4247 ], [ %4485, %4537 ]
  %4404 = phi i32 [ 0, %4247 ], [ %4486, %4537 ]
  %4405 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4248, label %4406, label %4475

4406:                                             ; preds = %4402, %4465
  %4407 = phi i32 [ %4474, %4465 ], [ 0, %4402 ]
  %4408 = phi i64 [ %4416, %4465 ], [ %4252, %4402 ]
  %4409 = phi i64 [ %4473, %4465 ], [ %4251, %4402 ]
  %4410 = phi i32 [ %4471, %4465 ], [ %4405, %4402 ]
  %4411 = sub i32 %4250, %4407
  %4412 = tail call i32 @llvm.smin.i32(i32 %4411, i32 0)
  %4413 = sub i32 %4411, %4412
  %4414 = zext i32 %4413 to i64
  %4415 = add nuw nsw i64 %4414, 1
  %4416 = add nsw i64 %4408, -1
  %4417 = icmp ult i32 %4413, 31
  br i1 %4417, label %4453, label %4418

4418:                                             ; preds = %4406
  %4419 = and i64 %4415, 8589934560
  %4420 = sub i64 %4409, %4419
  br label %4421

4421:                                             ; preds = %4421, %4418
  %4422 = phi i64 [ 0, %4418 ], [ %4445, %4421 ]
  %4423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4441, %4421 ]
  %4424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4442, %4421 ]
  %4425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4443, %4421 ]
  %4426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4418 ], [ %4444, %4421 ]
  %4427 = sub i64 %4409, %4422
  %4428 = getelementptr inbounds i32, ptr %11, i64 %4427
  %4429 = getelementptr inbounds i32, ptr %4428, i64 -7
  %4430 = load <8 x i32>, ptr %4429, align 4, !tbaa !5
  %4431 = shufflevector <8 x i32> %4430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4432 = getelementptr inbounds i32, ptr %4428, i64 -15
  %4433 = load <8 x i32>, ptr %4432, align 4, !tbaa !5
  %4434 = shufflevector <8 x i32> %4433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4435 = getelementptr inbounds i32, ptr %4428, i64 -23
  %4436 = load <8 x i32>, ptr %4435, align 4, !tbaa !5
  %4437 = shufflevector <8 x i32> %4436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4438 = getelementptr inbounds i32, ptr %4428, i64 -31
  %4439 = load <8 x i32>, ptr %4438, align 4, !tbaa !5
  %4440 = shufflevector <8 x i32> %4439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4441 = mul <8 x i32> %4431, %4423
  %4442 = mul <8 x i32> %4434, %4424
  %4443 = mul <8 x i32> %4437, %4425
  %4444 = mul <8 x i32> %4440, %4426
  %4445 = add nuw i64 %4422, 32
  %4446 = icmp eq i64 %4445, %4419
  br i1 %4446, label %4447, label %4421, !llvm.loop !729

4447:                                             ; preds = %4421
  %4448 = mul <8 x i32> %4442, %4441
  %4449 = mul <8 x i32> %4443, %4448
  %4450 = mul <8 x i32> %4444, %4449
  %4451 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4450)
  %4452 = icmp eq i64 %4415, %4419
  br i1 %4452, label %4465, label %4453

4453:                                             ; preds = %4406, %4447
  %4454 = phi i64 [ %4409, %4406 ], [ %4420, %4447 ]
  %4455 = phi i32 [ 1, %4406 ], [ %4451, %4447 ]
  br label %4456

4456:                                             ; preds = %4453, %4456
  %4457 = phi i64 [ %4462, %4456 ], [ %4454, %4453 ]
  %4458 = phi i32 [ %4461, %4456 ], [ %4455, %4453 ]
  %4459 = getelementptr inbounds i32, ptr %11, i64 %4457
  %4460 = load i32, ptr %4459, align 4, !tbaa !5
  %4461 = mul nsw i32 %4460, %4458
  %4462 = add nsw i64 %4457, -1
  %4463 = trunc i64 %4457 to i32
  %4464 = icmp sgt i32 %4463, 0
  br i1 %4464, label %4456, label %4465, !llvm.loop !730

4465:                                             ; preds = %4456, %4447
  %4466 = phi i32 [ %4451, %4447 ], [ %4461, %4456 ]
  %4467 = and i64 %4416, 4294967295
  %4468 = getelementptr inbounds i32, ptr %6, i64 %4467
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = mul nsw i32 %4469, %4466
  %4471 = add nsw i32 %4470, %4410
  %4472 = icmp sgt i64 %4408, 2
  %4473 = add nsw i64 %4409, -1
  %4474 = add i32 %4407, 1
  br i1 %4472, label %4406, label %4475, !llvm.loop !731

4475:                                             ; preds = %4465, %4402
  %4476 = phi i32 [ %4405, %4402 ], [ %4471, %4465 ]
  %4477 = icmp slt i32 %4476, %5
  br i1 %4477, label %4480, label %4478

4478:                                             ; preds = %4475
  %4479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4480:                                             ; preds = %4475
  %4481 = sext i32 %4476 to i64
  %4482 = getelementptr inbounds i32, ptr %4233, i64 %4481
  %4483 = load i32, ptr %4482, align 4, !tbaa !5
  %4484 = sitofp i32 %4483 to float
  %4485 = fadd fast float %4403, %4484
  store float %4485, ptr %4235, align 4, !tbaa !162
  %4486 = add nuw nsw i32 %4404, 1
  br i1 %4249, label %4487, label %4537

4487:                                             ; preds = %4480
  %4488 = load i32, ptr %4, align 4, !tbaa !5
  %4489 = load i32, ptr %12, align 4, !tbaa !5
  %4490 = add nsw i32 %4489, -1
  %4491 = icmp slt i32 %4488, %4490
  br i1 %4491, label %4514, label %4492

4492:                                             ; preds = %4487
  %4493 = icmp eq i32 %4488, %4490
  br i1 %4493, label %4494, label %4530

4494:                                             ; preds = %4492
  store i32 0, ptr %4, align 4, !tbaa !5
  %4495 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4495, ptr %6, align 4, !tbaa !5
  br i1 %4254, label %4537, label %4496

4496:                                             ; preds = %4494, %4524
  %4497 = phi i64 [ %4528, %4524 ], [ 1, %4494 ]
  %4498 = getelementptr inbounds i32, ptr %4, i64 %4497
  %4499 = load i32, ptr %4498, align 4, !tbaa !5
  %4500 = getelementptr inbounds i32, ptr %12, i64 %4497
  %4501 = load i32, ptr %4500, align 4, !tbaa !5
  %4502 = add nsw i32 %4501, -1
  %4503 = icmp slt i32 %4499, %4502
  br i1 %4503, label %4504, label %4522

4504:                                             ; preds = %4496
  br i1 %4491, label %4514, label %4505

4505:                                             ; preds = %4504
  %4506 = shl i64 %4497, 32
  %4507 = add i64 %4506, -4294967296
  %4508 = ashr exact i64 %4507, 32
  %4509 = getelementptr inbounds i32, ptr %7, i64 %4508
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4497
  %4512 = load i32, ptr %4511, align 4, !tbaa !5
  %4513 = add nsw i32 %4512, %4510
  store i32 %4513, ptr %4511, align 4, !tbaa !5
  br label %4532

4514:                                             ; preds = %4487, %4504
  %4515 = phi i32 [ %4499, %4504 ], [ %4488, %4487 ]
  %4516 = phi ptr [ %4498, %4504 ], [ %4, %4487 ]
  %4517 = phi i64 [ %4497, %4504 ], [ 0, %4487 ]
  %4518 = add nsw i32 %4515, 1
  store i32 %4518, ptr %4516, align 4, !tbaa !5
  %4519 = getelementptr inbounds i32, ptr %7, i64 %4517
  %4520 = load i32, ptr %4519, align 4, !tbaa !5
  %4521 = getelementptr inbounds i32, ptr %6, i64 %4517
  br label %4532

4522:                                             ; preds = %4496
  %4523 = icmp eq i32 %4499, %4502
  br i1 %4523, label %4524, label %4530

4524:                                             ; preds = %4522
  store i32 0, ptr %4498, align 4, !tbaa !5
  %4525 = getelementptr inbounds i32, ptr %8, i64 %4497
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = getelementptr inbounds i32, ptr %6, i64 %4497
  store i32 %4526, ptr %4527, align 4, !tbaa !5
  %4528 = add nuw nsw i64 %4497, 1
  %4529 = icmp eq i64 %4528, %4252
  br i1 %4529, label %4537, label %4496, !llvm.loop !732

4530:                                             ; preds = %4492, %4522
  %4531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4532:                                             ; preds = %4505, %4514
  %4533 = phi ptr [ %4521, %4514 ], [ %4498, %4505 ]
  %4534 = phi i32 [ %4520, %4514 ], [ 1, %4505 ]
  %4535 = load i32, ptr %4533, align 4, !tbaa !5
  %4536 = add nsw i32 %4535, %4534
  store i32 %4536, ptr %4533, align 4, !tbaa !5
  br label %4537

4537:                                             ; preds = %4524, %4532, %4494, %4480
  %4538 = icmp eq i32 %4486, %5
  br i1 %4538, label %5440, label %4402, !llvm.loop !733

4539:                                             ; preds = %4240
  %4540 = getelementptr inbounds i32, ptr %3, i64 %19
  %4541 = load i32, ptr %4540, align 4, !tbaa !5
  %4542 = icmp eq i32 %4541, 0
  %4543 = icmp sgt i32 %5, 0
  br i1 %4542, label %4553, label %4544

4544:                                             ; preds = %4539
  br i1 %4543, label %4545, label %5440

4545:                                             ; preds = %4544
  %4546 = icmp sgt i32 %13, 1
  %4547 = icmp sgt i32 %13, 0
  %4548 = add i32 %13, -2
  %4549 = zext i32 %4548 to i64
  %4550 = zext i32 %13 to i64
  %4551 = add nuw i32 %5, 1
  %4552 = icmp eq i32 %13, 1
  br label %4694

4553:                                             ; preds = %4539
  br i1 %4543, label %4554, label %5440

4554:                                             ; preds = %4553
  %4555 = icmp sgt i32 %13, 1
  %4556 = icmp sgt i32 %13, 0
  %4557 = add i32 %13, -2
  %4558 = zext i32 %4557 to i64
  %4559 = zext i32 %13 to i64
  %4560 = add nuw i32 %5, 1
  %4561 = icmp eq i32 %13, 1
  br label %4562

4562:                                             ; preds = %4554, %4692
  %4563 = phi float [ 0.000000e+00, %4554 ], [ %4642, %4692 ]
  %4564 = phi i32 [ 0, %4554 ], [ %4644, %4692 ]
  %4565 = phi double [ 0.000000e+00, %4554 ], [ %4643, %4692 ]
  %4566 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4555, label %4567, label %4636

4567:                                             ; preds = %4562, %4626
  %4568 = phi i32 [ %4635, %4626 ], [ 0, %4562 ]
  %4569 = phi i64 [ %4577, %4626 ], [ %4559, %4562 ]
  %4570 = phi i64 [ %4634, %4626 ], [ %4558, %4562 ]
  %4571 = phi i32 [ %4632, %4626 ], [ %4566, %4562 ]
  %4572 = sub i32 %4557, %4568
  %4573 = tail call i32 @llvm.smin.i32(i32 %4572, i32 0)
  %4574 = sub i32 %4572, %4573
  %4575 = zext i32 %4574 to i64
  %4576 = add nuw nsw i64 %4575, 1
  %4577 = add nsw i64 %4569, -1
  %4578 = icmp ult i32 %4574, 31
  br i1 %4578, label %4614, label %4579

4579:                                             ; preds = %4567
  %4580 = and i64 %4576, 8589934560
  %4581 = sub i64 %4570, %4580
  br label %4582

4582:                                             ; preds = %4582, %4579
  %4583 = phi i64 [ 0, %4579 ], [ %4606, %4582 ]
  %4584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4602, %4582 ]
  %4585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4603, %4582 ]
  %4586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4604, %4582 ]
  %4587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4579 ], [ %4605, %4582 ]
  %4588 = sub i64 %4570, %4583
  %4589 = getelementptr inbounds i32, ptr %9, i64 %4588
  %4590 = getelementptr inbounds i32, ptr %4589, i64 -7
  %4591 = load <8 x i32>, ptr %4590, align 4, !tbaa !5
  %4592 = shufflevector <8 x i32> %4591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4593 = getelementptr inbounds i32, ptr %4589, i64 -15
  %4594 = load <8 x i32>, ptr %4593, align 4, !tbaa !5
  %4595 = shufflevector <8 x i32> %4594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4596 = getelementptr inbounds i32, ptr %4589, i64 -23
  %4597 = load <8 x i32>, ptr %4596, align 4, !tbaa !5
  %4598 = shufflevector <8 x i32> %4597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4599 = getelementptr inbounds i32, ptr %4589, i64 -31
  %4600 = load <8 x i32>, ptr %4599, align 4, !tbaa !5
  %4601 = shufflevector <8 x i32> %4600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4602 = mul <8 x i32> %4592, %4584
  %4603 = mul <8 x i32> %4595, %4585
  %4604 = mul <8 x i32> %4598, %4586
  %4605 = mul <8 x i32> %4601, %4587
  %4606 = add nuw i64 %4583, 32
  %4607 = icmp eq i64 %4606, %4580
  br i1 %4607, label %4608, label %4582, !llvm.loop !734

4608:                                             ; preds = %4582
  %4609 = mul <8 x i32> %4603, %4602
  %4610 = mul <8 x i32> %4604, %4609
  %4611 = mul <8 x i32> %4605, %4610
  %4612 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4611)
  %4613 = icmp eq i64 %4576, %4580
  br i1 %4613, label %4626, label %4614

4614:                                             ; preds = %4567, %4608
  %4615 = phi i64 [ %4570, %4567 ], [ %4581, %4608 ]
  %4616 = phi i32 [ 1, %4567 ], [ %4612, %4608 ]
  br label %4617

4617:                                             ; preds = %4614, %4617
  %4618 = phi i64 [ %4623, %4617 ], [ %4615, %4614 ]
  %4619 = phi i32 [ %4622, %4617 ], [ %4616, %4614 ]
  %4620 = getelementptr inbounds i32, ptr %9, i64 %4618
  %4621 = load i32, ptr %4620, align 4, !tbaa !5
  %4622 = mul nsw i32 %4621, %4619
  %4623 = add nsw i64 %4618, -1
  %4624 = trunc i64 %4618 to i32
  %4625 = icmp sgt i32 %4624, 0
  br i1 %4625, label %4617, label %4626, !llvm.loop !735

4626:                                             ; preds = %4617, %4608
  %4627 = phi i32 [ %4612, %4608 ], [ %4622, %4617 ]
  %4628 = and i64 %4577, 4294967295
  %4629 = getelementptr inbounds i32, ptr %6, i64 %4628
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = mul nsw i32 %4630, %4627
  %4632 = add nsw i32 %4631, %4571
  %4633 = icmp sgt i64 %4569, 2
  %4634 = add nsw i64 %4570, -1
  %4635 = add i32 %4568, 1
  br i1 %4633, label %4567, label %4636, !llvm.loop !736

4636:                                             ; preds = %4626, %4562
  %4637 = phi i32 [ %4566, %4562 ], [ %4632, %4626 ]
  %4638 = sext i32 %4637 to i64
  %4639 = getelementptr inbounds i32, ptr %4233, i64 %4638
  %4640 = load i32, ptr %4639, align 4, !tbaa !5
  %4641 = sitofp i32 %4640 to float
  %4642 = fadd fast float %4563, %4641
  %4643 = fadd fast double %4565, 1.000000e+00
  %4644 = add nuw nsw i32 %4564, 1
  br i1 %4556, label %4645, label %4692

4645:                                             ; preds = %4636
  %4646 = load i32, ptr %4, align 4, !tbaa !5
  %4647 = load i32, ptr %12, align 4, !tbaa !5
  %4648 = add nsw i32 %4647, -1
  %4649 = icmp slt i32 %4646, %4648
  br i1 %4649, label %4669, label %4650

4650:                                             ; preds = %4645
  %4651 = icmp eq i32 %4646, %4648
  br i1 %4651, label %4652, label %4685

4652:                                             ; preds = %4650
  store i32 0, ptr %4, align 4, !tbaa !5
  %4653 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4653, ptr %6, align 4, !tbaa !5
  br i1 %4561, label %4692, label %4654

4654:                                             ; preds = %4652, %4679
  %4655 = phi i64 [ %4683, %4679 ], [ 1, %4652 ]
  %4656 = getelementptr inbounds i32, ptr %4, i64 %4655
  %4657 = load i32, ptr %4656, align 4, !tbaa !5
  %4658 = getelementptr inbounds i32, ptr %12, i64 %4655
  %4659 = load i32, ptr %4658, align 4, !tbaa !5
  %4660 = add nsw i32 %4659, -1
  %4661 = icmp slt i32 %4657, %4660
  br i1 %4661, label %4662, label %4677

4662:                                             ; preds = %4654
  br i1 %4649, label %4669, label %4663

4663:                                             ; preds = %4662
  %4664 = getelementptr inbounds i32, ptr %7, i64 %4655
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = getelementptr inbounds i32, ptr %6, i64 %4655
  %4667 = load i32, ptr %4666, align 4, !tbaa !5
  %4668 = add nsw i32 %4667, %4665
  store i32 %4668, ptr %4666, align 4, !tbaa !5
  br label %4687

4669:                                             ; preds = %4645, %4662
  %4670 = phi i32 [ %4657, %4662 ], [ %4646, %4645 ]
  %4671 = phi ptr [ %4656, %4662 ], [ %4, %4645 ]
  %4672 = phi i64 [ %4655, %4662 ], [ 0, %4645 ]
  %4673 = add nsw i32 %4670, 1
  store i32 %4673, ptr %4671, align 4, !tbaa !5
  %4674 = getelementptr inbounds i32, ptr %7, i64 %4672
  %4675 = load i32, ptr %4674, align 4, !tbaa !5
  %4676 = getelementptr inbounds i32, ptr %6, i64 %4672
  br label %4687

4677:                                             ; preds = %4654
  %4678 = icmp eq i32 %4657, %4660
  br i1 %4678, label %4679, label %4685

4679:                                             ; preds = %4677
  store i32 0, ptr %4656, align 4, !tbaa !5
  %4680 = getelementptr inbounds i32, ptr %8, i64 %4655
  %4681 = load i32, ptr %4680, align 4, !tbaa !5
  %4682 = getelementptr inbounds i32, ptr %6, i64 %4655
  store i32 %4681, ptr %4682, align 4, !tbaa !5
  %4683 = add nuw nsw i64 %4655, 1
  %4684 = icmp eq i64 %4683, %4559
  br i1 %4684, label %4692, label %4654, !llvm.loop !737

4685:                                             ; preds = %4650, %4677
  store float %4642, ptr %4235, align 4, !tbaa !162
  %4686 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4687:                                             ; preds = %4663, %4669
  %4688 = phi ptr [ %4676, %4669 ], [ %4656, %4663 ]
  %4689 = phi i32 [ %4675, %4669 ], [ 1, %4663 ]
  %4690 = load i32, ptr %4688, align 4, !tbaa !5
  %4691 = add nsw i32 %4690, %4689
  store i32 %4691, ptr %4688, align 4, !tbaa !5
  br label %4692

4692:                                             ; preds = %4679, %4687, %4652, %4636
  %4693 = icmp eq i32 %4644, %5
  br i1 %4693, label %5438, label %4562, !llvm.loop !738

4694:                                             ; preds = %4545, %4829
  %4695 = phi float [ 0.000000e+00, %4545 ], [ %4777, %4829 ]
  %4696 = phi i32 [ 0, %4545 ], [ %4778, %4829 ]
  %4697 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4546, label %4698, label %4767

4698:                                             ; preds = %4694, %4757
  %4699 = phi i32 [ %4766, %4757 ], [ 0, %4694 ]
  %4700 = phi i64 [ %4708, %4757 ], [ %4550, %4694 ]
  %4701 = phi i64 [ %4765, %4757 ], [ %4549, %4694 ]
  %4702 = phi i32 [ %4763, %4757 ], [ %4697, %4694 ]
  %4703 = sub i32 %4548, %4699
  %4704 = tail call i32 @llvm.smin.i32(i32 %4703, i32 0)
  %4705 = sub i32 %4703, %4704
  %4706 = zext i32 %4705 to i64
  %4707 = add nuw nsw i64 %4706, 1
  %4708 = add nsw i64 %4700, -1
  %4709 = icmp ult i32 %4705, 31
  br i1 %4709, label %4745, label %4710

4710:                                             ; preds = %4698
  %4711 = and i64 %4707, 8589934560
  %4712 = sub i64 %4701, %4711
  br label %4713

4713:                                             ; preds = %4713, %4710
  %4714 = phi i64 [ 0, %4710 ], [ %4737, %4713 ]
  %4715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4733, %4713 ]
  %4716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4734, %4713 ]
  %4717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4735, %4713 ]
  %4718 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4710 ], [ %4736, %4713 ]
  %4719 = sub i64 %4701, %4714
  %4720 = getelementptr inbounds i32, ptr %11, i64 %4719
  %4721 = getelementptr inbounds i32, ptr %4720, i64 -7
  %4722 = load <8 x i32>, ptr %4721, align 4, !tbaa !5
  %4723 = shufflevector <8 x i32> %4722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4724 = getelementptr inbounds i32, ptr %4720, i64 -15
  %4725 = load <8 x i32>, ptr %4724, align 4, !tbaa !5
  %4726 = shufflevector <8 x i32> %4725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4727 = getelementptr inbounds i32, ptr %4720, i64 -23
  %4728 = load <8 x i32>, ptr %4727, align 4, !tbaa !5
  %4729 = shufflevector <8 x i32> %4728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4730 = getelementptr inbounds i32, ptr %4720, i64 -31
  %4731 = load <8 x i32>, ptr %4730, align 4, !tbaa !5
  %4732 = shufflevector <8 x i32> %4731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4733 = mul <8 x i32> %4723, %4715
  %4734 = mul <8 x i32> %4726, %4716
  %4735 = mul <8 x i32> %4729, %4717
  %4736 = mul <8 x i32> %4732, %4718
  %4737 = add nuw i64 %4714, 32
  %4738 = icmp eq i64 %4737, %4711
  br i1 %4738, label %4739, label %4713, !llvm.loop !739

4739:                                             ; preds = %4713
  %4740 = mul <8 x i32> %4734, %4733
  %4741 = mul <8 x i32> %4735, %4740
  %4742 = mul <8 x i32> %4736, %4741
  %4743 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4742)
  %4744 = icmp eq i64 %4707, %4711
  br i1 %4744, label %4757, label %4745

4745:                                             ; preds = %4698, %4739
  %4746 = phi i64 [ %4701, %4698 ], [ %4712, %4739 ]
  %4747 = phi i32 [ 1, %4698 ], [ %4743, %4739 ]
  br label %4748

4748:                                             ; preds = %4745, %4748
  %4749 = phi i64 [ %4754, %4748 ], [ %4746, %4745 ]
  %4750 = phi i32 [ %4753, %4748 ], [ %4747, %4745 ]
  %4751 = getelementptr inbounds i32, ptr %11, i64 %4749
  %4752 = load i32, ptr %4751, align 4, !tbaa !5
  %4753 = mul nsw i32 %4752, %4750
  %4754 = add nsw i64 %4749, -1
  %4755 = trunc i64 %4749 to i32
  %4756 = icmp sgt i32 %4755, 0
  br i1 %4756, label %4748, label %4757, !llvm.loop !740

4757:                                             ; preds = %4748, %4739
  %4758 = phi i32 [ %4743, %4739 ], [ %4753, %4748 ]
  %4759 = and i64 %4708, 4294967295
  %4760 = getelementptr inbounds i32, ptr %6, i64 %4759
  %4761 = load i32, ptr %4760, align 4, !tbaa !5
  %4762 = mul nsw i32 %4761, %4758
  %4763 = add nsw i32 %4762, %4702
  %4764 = icmp sgt i64 %4700, 2
  %4765 = add nsw i64 %4701, -1
  %4766 = add i32 %4699, 1
  br i1 %4764, label %4698, label %4767, !llvm.loop !741

4767:                                             ; preds = %4757, %4694
  %4768 = phi i32 [ %4697, %4694 ], [ %4763, %4757 ]
  %4769 = icmp slt i32 %4768, %5
  br i1 %4769, label %4772, label %4770

4770:                                             ; preds = %4767
  %4771 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

4772:                                             ; preds = %4767
  %4773 = sext i32 %4768 to i64
  %4774 = getelementptr inbounds i32, ptr %4233, i64 %4773
  %4775 = load i32, ptr %4774, align 4, !tbaa !5
  %4776 = sitofp i32 %4775 to float
  %4777 = fadd fast float %4695, %4776
  store float %4777, ptr %4235, align 4, !tbaa !162
  %4778 = add nuw nsw i32 %4696, 1
  br i1 %4547, label %4779, label %4829

4779:                                             ; preds = %4772
  %4780 = load i32, ptr %4, align 4, !tbaa !5
  %4781 = load i32, ptr %12, align 4, !tbaa !5
  %4782 = add nsw i32 %4781, -1
  %4783 = icmp slt i32 %4780, %4782
  br i1 %4783, label %4806, label %4784

4784:                                             ; preds = %4779
  %4785 = icmp eq i32 %4780, %4782
  br i1 %4785, label %4786, label %4822

4786:                                             ; preds = %4784
  store i32 0, ptr %4, align 4, !tbaa !5
  %4787 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4787, ptr %6, align 4, !tbaa !5
  br i1 %4552, label %4829, label %4788

4788:                                             ; preds = %4786, %4816
  %4789 = phi i64 [ %4820, %4816 ], [ 1, %4786 ]
  %4790 = getelementptr inbounds i32, ptr %4, i64 %4789
  %4791 = load i32, ptr %4790, align 4, !tbaa !5
  %4792 = getelementptr inbounds i32, ptr %12, i64 %4789
  %4793 = load i32, ptr %4792, align 4, !tbaa !5
  %4794 = add nsw i32 %4793, -1
  %4795 = icmp slt i32 %4791, %4794
  br i1 %4795, label %4796, label %4814

4796:                                             ; preds = %4788
  br i1 %4783, label %4806, label %4797

4797:                                             ; preds = %4796
  %4798 = shl i64 %4789, 32
  %4799 = add i64 %4798, -4294967296
  %4800 = ashr exact i64 %4799, 32
  %4801 = getelementptr inbounds i32, ptr %7, i64 %4800
  %4802 = load i32, ptr %4801, align 4, !tbaa !5
  %4803 = getelementptr inbounds i32, ptr %6, i64 %4789
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = add nsw i32 %4804, %4802
  store i32 %4805, ptr %4803, align 4, !tbaa !5
  br label %4824

4806:                                             ; preds = %4779, %4796
  %4807 = phi i32 [ %4791, %4796 ], [ %4780, %4779 ]
  %4808 = phi ptr [ %4790, %4796 ], [ %4, %4779 ]
  %4809 = phi i64 [ %4789, %4796 ], [ 0, %4779 ]
  %4810 = add nsw i32 %4807, 1
  store i32 %4810, ptr %4808, align 4, !tbaa !5
  %4811 = getelementptr inbounds i32, ptr %7, i64 %4809
  %4812 = load i32, ptr %4811, align 4, !tbaa !5
  %4813 = getelementptr inbounds i32, ptr %6, i64 %4809
  br label %4824

4814:                                             ; preds = %4788
  %4815 = icmp eq i32 %4791, %4794
  br i1 %4815, label %4816, label %4822

4816:                                             ; preds = %4814
  store i32 0, ptr %4790, align 4, !tbaa !5
  %4817 = getelementptr inbounds i32, ptr %8, i64 %4789
  %4818 = load i32, ptr %4817, align 4, !tbaa !5
  %4819 = getelementptr inbounds i32, ptr %6, i64 %4789
  store i32 %4818, ptr %4819, align 4, !tbaa !5
  %4820 = add nuw nsw i64 %4789, 1
  %4821 = icmp eq i64 %4820, %4550
  br i1 %4821, label %4829, label %4788, !llvm.loop !742

4822:                                             ; preds = %4784, %4814
  %4823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4824:                                             ; preds = %4797, %4806
  %4825 = phi ptr [ %4813, %4806 ], [ %4790, %4797 ]
  %4826 = phi i32 [ %4812, %4806 ], [ 1, %4797 ]
  %4827 = load i32, ptr %4825, align 4, !tbaa !5
  %4828 = add nsw i32 %4827, %4826
  store i32 %4828, ptr %4825, align 4, !tbaa !5
  br label %4829

4829:                                             ; preds = %4816, %4824, %4786, %4772
  %4830 = icmp eq i32 %4778, %5
  br i1 %4830, label %5440, label %4694, !llvm.loop !743

4831:                                             ; preds = %4240
  %4832 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

4833:                                             ; preds = %18
  %4834 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4835 = load ptr, ptr %4834, align 8, !tbaa !9
  %4836 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4837 = load ptr, ptr %4836, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4837, align 8, !tbaa !18
  %4838 = icmp eq i32 %13, 0
  br i1 %4838, label %4839, label %4842

4839:                                             ; preds = %4833
  %4840 = load i32, ptr %4835, align 4, !tbaa !5
  %4841 = sitofp i32 %4840 to double
  store double %4841, ptr %4837, align 8, !tbaa !18
  br label %5440

4842:                                             ; preds = %4833
  switch i32 %1, label %5430 [
    i32 1, label %4843
    i32 0, label %5138
  ]

4843:                                             ; preds = %4842
  %4844 = getelementptr inbounds i32, ptr %3, i64 %19
  %4845 = load i32, ptr %4844, align 4, !tbaa !5
  %4846 = icmp eq i32 %4845, 0
  %4847 = icmp sgt i32 %5, 0
  br i1 %4846, label %4857, label %4848

4848:                                             ; preds = %4843
  br i1 %4847, label %4849, label %5440

4849:                                             ; preds = %4848
  %4850 = icmp sgt i32 %13, 1
  %4851 = icmp sgt i32 %13, 0
  %4852 = add i32 %13, -2
  %4853 = zext i32 %4852 to i64
  %4854 = zext i32 %13 to i64
  %4855 = add nuw i32 %5, 1
  %4856 = icmp eq i32 %13, 1
  br label %5001

4857:                                             ; preds = %4843
  br i1 %4847, label %4858, label %5440

4858:                                             ; preds = %4857
  %4859 = icmp sgt i32 %13, 1
  %4860 = icmp sgt i32 %13, 0
  %4861 = add i32 %13, -2
  %4862 = zext i32 %4861 to i64
  %4863 = zext i32 %13 to i64
  %4864 = add nuw i32 %5, 1
  %4865 = icmp eq i32 %13, 1
  br label %4866

4866:                                             ; preds = %4858, %4999
  %4867 = phi double [ 0.000000e+00, %4858 ], [ %4949, %4999 ]
  %4868 = phi i32 [ 0, %4858 ], [ %4951, %4999 ]
  %4869 = phi double [ 0.000000e+00, %4858 ], [ %4950, %4999 ]
  %4870 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %4871, label %4940

4871:                                             ; preds = %4866, %4930
  %4872 = phi i32 [ %4939, %4930 ], [ 0, %4866 ]
  %4873 = phi i64 [ %4881, %4930 ], [ %4863, %4866 ]
  %4874 = phi i64 [ %4938, %4930 ], [ %4862, %4866 ]
  %4875 = phi i32 [ %4936, %4930 ], [ %4870, %4866 ]
  %4876 = sub i32 %4861, %4872
  %4877 = tail call i32 @llvm.smin.i32(i32 %4876, i32 0)
  %4878 = sub i32 %4876, %4877
  %4879 = zext i32 %4878 to i64
  %4880 = add nuw nsw i64 %4879, 1
  %4881 = add nsw i64 %4873, -1
  %4882 = icmp ult i32 %4878, 31
  br i1 %4882, label %4918, label %4883

4883:                                             ; preds = %4871
  %4884 = and i64 %4880, 8589934560
  %4885 = sub i64 %4874, %4884
  br label %4886

4886:                                             ; preds = %4886, %4883
  %4887 = phi i64 [ 0, %4883 ], [ %4910, %4886 ]
  %4888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4906, %4886 ]
  %4889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4907, %4886 ]
  %4890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4908, %4886 ]
  %4891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4883 ], [ %4909, %4886 ]
  %4892 = sub i64 %4874, %4887
  %4893 = getelementptr inbounds i32, ptr %9, i64 %4892
  %4894 = getelementptr inbounds i32, ptr %4893, i64 -7
  %4895 = load <8 x i32>, ptr %4894, align 4, !tbaa !5
  %4896 = shufflevector <8 x i32> %4895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4897 = getelementptr inbounds i32, ptr %4893, i64 -15
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = getelementptr inbounds i32, ptr %4893, i64 -23
  %4901 = load <8 x i32>, ptr %4900, align 4, !tbaa !5
  %4902 = shufflevector <8 x i32> %4901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4903 = getelementptr inbounds i32, ptr %4893, i64 -31
  %4904 = load <8 x i32>, ptr %4903, align 4, !tbaa !5
  %4905 = shufflevector <8 x i32> %4904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4906 = mul <8 x i32> %4896, %4888
  %4907 = mul <8 x i32> %4899, %4889
  %4908 = mul <8 x i32> %4902, %4890
  %4909 = mul <8 x i32> %4905, %4891
  %4910 = add nuw i64 %4887, 32
  %4911 = icmp eq i64 %4910, %4884
  br i1 %4911, label %4912, label %4886, !llvm.loop !744

4912:                                             ; preds = %4886
  %4913 = mul <8 x i32> %4907, %4906
  %4914 = mul <8 x i32> %4908, %4913
  %4915 = mul <8 x i32> %4909, %4914
  %4916 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4915)
  %4917 = icmp eq i64 %4880, %4884
  br i1 %4917, label %4930, label %4918

4918:                                             ; preds = %4871, %4912
  %4919 = phi i64 [ %4874, %4871 ], [ %4885, %4912 ]
  %4920 = phi i32 [ 1, %4871 ], [ %4916, %4912 ]
  br label %4921

4921:                                             ; preds = %4918, %4921
  %4922 = phi i64 [ %4927, %4921 ], [ %4919, %4918 ]
  %4923 = phi i32 [ %4926, %4921 ], [ %4920, %4918 ]
  %4924 = getelementptr inbounds i32, ptr %9, i64 %4922
  %4925 = load i32, ptr %4924, align 4, !tbaa !5
  %4926 = mul nsw i32 %4925, %4923
  %4927 = add nsw i64 %4922, -1
  %4928 = trunc i64 %4922 to i32
  %4929 = icmp sgt i32 %4928, 0
  br i1 %4929, label %4921, label %4930, !llvm.loop !745

4930:                                             ; preds = %4921, %4912
  %4931 = phi i32 [ %4916, %4912 ], [ %4926, %4921 ]
  %4932 = and i64 %4881, 4294967295
  %4933 = getelementptr inbounds i32, ptr %6, i64 %4932
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = mul nsw i32 %4934, %4931
  %4936 = add nsw i32 %4935, %4875
  %4937 = icmp sgt i64 %4873, 2
  %4938 = add nsw i64 %4874, -1
  %4939 = add i32 %4872, 1
  br i1 %4937, label %4871, label %4940, !llvm.loop !746

4940:                                             ; preds = %4930, %4866
  %4941 = phi i32 [ %4870, %4866 ], [ %4936, %4930 ]
  %4942 = sext i32 %4941 to i64
  %4943 = getelementptr inbounds double, ptr %2, i64 %4942
  %4944 = load double, ptr %4943, align 8, !tbaa !18
  %4945 = getelementptr inbounds i32, ptr %4835, i64 %4942
  %4946 = load i32, ptr %4945, align 4, !tbaa !5
  %4947 = sitofp i32 %4946 to double
  %4948 = fmul fast double %4944, %4947
  %4949 = fadd fast double %4948, %4867
  store double %4949, ptr %4837, align 8, !tbaa !18
  %4950 = fadd fast double %4944, %4869
  %4951 = add nuw nsw i32 %4868, 1
  br i1 %4860, label %4952, label %4999

4952:                                             ; preds = %4940
  %4953 = load i32, ptr %4, align 4, !tbaa !5
  %4954 = load i32, ptr %12, align 4, !tbaa !5
  %4955 = add nsw i32 %4954, -1
  %4956 = icmp slt i32 %4953, %4955
  br i1 %4956, label %4976, label %4957

4957:                                             ; preds = %4952
  %4958 = icmp eq i32 %4953, %4955
  br i1 %4958, label %4959, label %4992

4959:                                             ; preds = %4957
  store i32 0, ptr %4, align 4, !tbaa !5
  %4960 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4960, ptr %6, align 4, !tbaa !5
  br i1 %4865, label %4999, label %4961

4961:                                             ; preds = %4959, %4986
  %4962 = phi i64 [ %4990, %4986 ], [ 1, %4959 ]
  %4963 = getelementptr inbounds i32, ptr %4, i64 %4962
  %4964 = load i32, ptr %4963, align 4, !tbaa !5
  %4965 = getelementptr inbounds i32, ptr %12, i64 %4962
  %4966 = load i32, ptr %4965, align 4, !tbaa !5
  %4967 = add nsw i32 %4966, -1
  %4968 = icmp slt i32 %4964, %4967
  br i1 %4968, label %4969, label %4984

4969:                                             ; preds = %4961
  br i1 %4956, label %4976, label %4970

4970:                                             ; preds = %4969
  %4971 = getelementptr inbounds i32, ptr %7, i64 %4962
  %4972 = load i32, ptr %4971, align 4, !tbaa !5
  %4973 = getelementptr inbounds i32, ptr %6, i64 %4962
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = add nsw i32 %4974, %4972
  store i32 %4975, ptr %4973, align 4, !tbaa !5
  br label %4994

4976:                                             ; preds = %4952, %4969
  %4977 = phi i32 [ %4964, %4969 ], [ %4953, %4952 ]
  %4978 = phi ptr [ %4963, %4969 ], [ %4, %4952 ]
  %4979 = phi i64 [ %4962, %4969 ], [ 0, %4952 ]
  %4980 = add nsw i32 %4977, 1
  store i32 %4980, ptr %4978, align 4, !tbaa !5
  %4981 = getelementptr inbounds i32, ptr %7, i64 %4979
  %4982 = load i32, ptr %4981, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %6, i64 %4979
  br label %4994

4984:                                             ; preds = %4961
  %4985 = icmp eq i32 %4964, %4967
  br i1 %4985, label %4986, label %4992

4986:                                             ; preds = %4984
  store i32 0, ptr %4963, align 4, !tbaa !5
  %4987 = getelementptr inbounds i32, ptr %8, i64 %4962
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4962
  store i32 %4988, ptr %4989, align 4, !tbaa !5
  %4990 = add nuw nsw i64 %4962, 1
  %4991 = icmp eq i64 %4990, %4863
  br i1 %4991, label %4999, label %4961, !llvm.loop !747

4992:                                             ; preds = %4957, %4984
  %4993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

4994:                                             ; preds = %4970, %4976
  %4995 = phi ptr [ %4983, %4976 ], [ %4963, %4970 ]
  %4996 = phi i32 [ %4982, %4976 ], [ 1, %4970 ]
  %4997 = load i32, ptr %4995, align 4, !tbaa !5
  %4998 = add nsw i32 %4997, %4996
  store i32 %4998, ptr %4995, align 4, !tbaa !5
  br label %4999

4999:                                             ; preds = %4986, %4994, %4959, %4940
  %5000 = icmp eq i32 %4951, %5
  br i1 %5000, label %5440, label %4866, !llvm.loop !748

5001:                                             ; preds = %4849, %5136
  %5002 = phi double [ 0.000000e+00, %4849 ], [ %5084, %5136 ]
  %5003 = phi i32 [ 0, %4849 ], [ %5085, %5136 ]
  %5004 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4850, label %5005, label %5074

5005:                                             ; preds = %5001, %5064
  %5006 = phi i32 [ %5073, %5064 ], [ 0, %5001 ]
  %5007 = phi i64 [ %5015, %5064 ], [ %4854, %5001 ]
  %5008 = phi i64 [ %5072, %5064 ], [ %4853, %5001 ]
  %5009 = phi i32 [ %5070, %5064 ], [ %5004, %5001 ]
  %5010 = sub i32 %4852, %5006
  %5011 = tail call i32 @llvm.smin.i32(i32 %5010, i32 0)
  %5012 = sub i32 %5010, %5011
  %5013 = zext i32 %5012 to i64
  %5014 = add nuw nsw i64 %5013, 1
  %5015 = add nsw i64 %5007, -1
  %5016 = icmp ult i32 %5012, 31
  br i1 %5016, label %5052, label %5017

5017:                                             ; preds = %5005
  %5018 = and i64 %5014, 8589934560
  %5019 = sub i64 %5008, %5018
  br label %5020

5020:                                             ; preds = %5020, %5017
  %5021 = phi i64 [ 0, %5017 ], [ %5044, %5020 ]
  %5022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5040, %5020 ]
  %5023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5041, %5020 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5042, %5020 ]
  %5025 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5017 ], [ %5043, %5020 ]
  %5026 = sub i64 %5008, %5021
  %5027 = getelementptr inbounds i32, ptr %11, i64 %5026
  %5028 = getelementptr inbounds i32, ptr %5027, i64 -7
  %5029 = load <8 x i32>, ptr %5028, align 4, !tbaa !5
  %5030 = shufflevector <8 x i32> %5029, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5031 = getelementptr inbounds i32, ptr %5027, i64 -15
  %5032 = load <8 x i32>, ptr %5031, align 4, !tbaa !5
  %5033 = shufflevector <8 x i32> %5032, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5034 = getelementptr inbounds i32, ptr %5027, i64 -23
  %5035 = load <8 x i32>, ptr %5034, align 4, !tbaa !5
  %5036 = shufflevector <8 x i32> %5035, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5037 = getelementptr inbounds i32, ptr %5027, i64 -31
  %5038 = load <8 x i32>, ptr %5037, align 4, !tbaa !5
  %5039 = shufflevector <8 x i32> %5038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5040 = mul <8 x i32> %5030, %5022
  %5041 = mul <8 x i32> %5033, %5023
  %5042 = mul <8 x i32> %5036, %5024
  %5043 = mul <8 x i32> %5039, %5025
  %5044 = add nuw i64 %5021, 32
  %5045 = icmp eq i64 %5044, %5018
  br i1 %5045, label %5046, label %5020, !llvm.loop !749

5046:                                             ; preds = %5020
  %5047 = mul <8 x i32> %5041, %5040
  %5048 = mul <8 x i32> %5042, %5047
  %5049 = mul <8 x i32> %5043, %5048
  %5050 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5049)
  %5051 = icmp eq i64 %5014, %5018
  br i1 %5051, label %5064, label %5052

5052:                                             ; preds = %5005, %5046
  %5053 = phi i64 [ %5008, %5005 ], [ %5019, %5046 ]
  %5054 = phi i32 [ 1, %5005 ], [ %5050, %5046 ]
  br label %5055

5055:                                             ; preds = %5052, %5055
  %5056 = phi i64 [ %5061, %5055 ], [ %5053, %5052 ]
  %5057 = phi i32 [ %5060, %5055 ], [ %5054, %5052 ]
  %5058 = getelementptr inbounds i32, ptr %11, i64 %5056
  %5059 = load i32, ptr %5058, align 4, !tbaa !5
  %5060 = mul nsw i32 %5059, %5057
  %5061 = add nsw i64 %5056, -1
  %5062 = trunc i64 %5056 to i32
  %5063 = icmp sgt i32 %5062, 0
  br i1 %5063, label %5055, label %5064, !llvm.loop !750

5064:                                             ; preds = %5055, %5046
  %5065 = phi i32 [ %5050, %5046 ], [ %5060, %5055 ]
  %5066 = and i64 %5015, 4294967295
  %5067 = getelementptr inbounds i32, ptr %6, i64 %5066
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = mul nsw i32 %5068, %5065
  %5070 = add nsw i32 %5069, %5009
  %5071 = icmp sgt i64 %5007, 2
  %5072 = add nsw i64 %5008, -1
  %5073 = add i32 %5006, 1
  br i1 %5071, label %5005, label %5074, !llvm.loop !751

5074:                                             ; preds = %5064, %5001
  %5075 = phi i32 [ %5004, %5001 ], [ %5070, %5064 ]
  %5076 = icmp slt i32 %5075, %5
  br i1 %5076, label %5079, label %5077

5077:                                             ; preds = %5074
  %5078 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

5079:                                             ; preds = %5074
  %5080 = sext i32 %5075 to i64
  %5081 = getelementptr inbounds i32, ptr %4835, i64 %5080
  %5082 = load i32, ptr %5081, align 4, !tbaa !5
  %5083 = sitofp i32 %5082 to double
  %5084 = fadd fast double %5002, %5083
  store double %5084, ptr %4837, align 8, !tbaa !18
  %5085 = add nuw nsw i32 %5003, 1
  br i1 %4851, label %5086, label %5136

5086:                                             ; preds = %5079
  %5087 = load i32, ptr %4, align 4, !tbaa !5
  %5088 = load i32, ptr %12, align 4, !tbaa !5
  %5089 = add nsw i32 %5088, -1
  %5090 = icmp slt i32 %5087, %5089
  br i1 %5090, label %5113, label %5091

5091:                                             ; preds = %5086
  %5092 = icmp eq i32 %5087, %5089
  br i1 %5092, label %5093, label %5129

5093:                                             ; preds = %5091
  store i32 0, ptr %4, align 4, !tbaa !5
  %5094 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5094, ptr %6, align 4, !tbaa !5
  br i1 %4856, label %5136, label %5095

5095:                                             ; preds = %5093, %5123
  %5096 = phi i64 [ %5127, %5123 ], [ 1, %5093 ]
  %5097 = getelementptr inbounds i32, ptr %4, i64 %5096
  %5098 = load i32, ptr %5097, align 4, !tbaa !5
  %5099 = getelementptr inbounds i32, ptr %12, i64 %5096
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, -1
  %5102 = icmp slt i32 %5098, %5101
  br i1 %5102, label %5103, label %5121

5103:                                             ; preds = %5095
  br i1 %5090, label %5113, label %5104

5104:                                             ; preds = %5103
  %5105 = shl i64 %5096, 32
  %5106 = add i64 %5105, -4294967296
  %5107 = ashr exact i64 %5106, 32
  %5108 = getelementptr inbounds i32, ptr %7, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = getelementptr inbounds i32, ptr %6, i64 %5096
  %5111 = load i32, ptr %5110, align 4, !tbaa !5
  %5112 = add nsw i32 %5111, %5109
  store i32 %5112, ptr %5110, align 4, !tbaa !5
  br label %5131

5113:                                             ; preds = %5086, %5103
  %5114 = phi i32 [ %5098, %5103 ], [ %5087, %5086 ]
  %5115 = phi ptr [ %5097, %5103 ], [ %4, %5086 ]
  %5116 = phi i64 [ %5096, %5103 ], [ 0, %5086 ]
  %5117 = add nsw i32 %5114, 1
  store i32 %5117, ptr %5115, align 4, !tbaa !5
  %5118 = getelementptr inbounds i32, ptr %7, i64 %5116
  %5119 = load i32, ptr %5118, align 4, !tbaa !5
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5116
  br label %5131

5121:                                             ; preds = %5095
  %5122 = icmp eq i32 %5098, %5101
  br i1 %5122, label %5123, label %5129

5123:                                             ; preds = %5121
  store i32 0, ptr %5097, align 4, !tbaa !5
  %5124 = getelementptr inbounds i32, ptr %8, i64 %5096
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = getelementptr inbounds i32, ptr %6, i64 %5096
  store i32 %5125, ptr %5126, align 4, !tbaa !5
  %5127 = add nuw nsw i64 %5096, 1
  %5128 = icmp eq i64 %5127, %4854
  br i1 %5128, label %5136, label %5095, !llvm.loop !752

5129:                                             ; preds = %5091, %5121
  %5130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5131:                                             ; preds = %5104, %5113
  %5132 = phi ptr [ %5120, %5113 ], [ %5097, %5104 ]
  %5133 = phi i32 [ %5119, %5113 ], [ 1, %5104 ]
  %5134 = load i32, ptr %5132, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, %5133
  store i32 %5135, ptr %5132, align 4, !tbaa !5
  br label %5136

5136:                                             ; preds = %5123, %5131, %5093, %5079
  %5137 = icmp eq i32 %5085, %5
  br i1 %5137, label %5440, label %5001, !llvm.loop !753

5138:                                             ; preds = %4842
  %5139 = getelementptr inbounds i32, ptr %3, i64 %19
  %5140 = load i32, ptr %5139, align 4, !tbaa !5
  %5141 = icmp eq i32 %5140, 0
  %5142 = icmp sgt i32 %5, 0
  br i1 %5141, label %5152, label %5143

5143:                                             ; preds = %5138
  br i1 %5142, label %5144, label %5440

5144:                                             ; preds = %5143
  %5145 = icmp sgt i32 %13, 1
  %5146 = icmp sgt i32 %13, 0
  %5147 = add i32 %13, -2
  %5148 = zext i32 %5147 to i64
  %5149 = zext i32 %13 to i64
  %5150 = add nuw i32 %5, 1
  %5151 = icmp eq i32 %13, 1
  br label %5293

5152:                                             ; preds = %5138
  br i1 %5142, label %5153, label %5440

5153:                                             ; preds = %5152
  %5154 = icmp sgt i32 %13, 1
  %5155 = icmp sgt i32 %13, 0
  %5156 = add i32 %13, -2
  %5157 = zext i32 %5156 to i64
  %5158 = zext i32 %13 to i64
  %5159 = add nuw i32 %5, 1
  %5160 = icmp eq i32 %13, 1
  br label %5161

5161:                                             ; preds = %5153, %5291
  %5162 = phi double [ 0.000000e+00, %5153 ], [ %5241, %5291 ]
  %5163 = phi i32 [ 0, %5153 ], [ %5243, %5291 ]
  %5164 = phi double [ 0.000000e+00, %5153 ], [ %5242, %5291 ]
  %5165 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5154, label %5166, label %5235

5166:                                             ; preds = %5161, %5225
  %5167 = phi i32 [ %5234, %5225 ], [ 0, %5161 ]
  %5168 = phi i64 [ %5176, %5225 ], [ %5158, %5161 ]
  %5169 = phi i64 [ %5233, %5225 ], [ %5157, %5161 ]
  %5170 = phi i32 [ %5231, %5225 ], [ %5165, %5161 ]
  %5171 = sub i32 %5156, %5167
  %5172 = tail call i32 @llvm.smin.i32(i32 %5171, i32 0)
  %5173 = sub i32 %5171, %5172
  %5174 = zext i32 %5173 to i64
  %5175 = add nuw nsw i64 %5174, 1
  %5176 = add nsw i64 %5168, -1
  %5177 = icmp ult i32 %5173, 31
  br i1 %5177, label %5213, label %5178

5178:                                             ; preds = %5166
  %5179 = and i64 %5175, 8589934560
  %5180 = sub i64 %5169, %5179
  br label %5181

5181:                                             ; preds = %5181, %5178
  %5182 = phi i64 [ 0, %5178 ], [ %5205, %5181 ]
  %5183 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5201, %5181 ]
  %5184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5202, %5181 ]
  %5185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5203, %5181 ]
  %5186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5178 ], [ %5204, %5181 ]
  %5187 = sub i64 %5169, %5182
  %5188 = getelementptr inbounds i32, ptr %9, i64 %5187
  %5189 = getelementptr inbounds i32, ptr %5188, i64 -7
  %5190 = load <8 x i32>, ptr %5189, align 4, !tbaa !5
  %5191 = shufflevector <8 x i32> %5190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5192 = getelementptr inbounds i32, ptr %5188, i64 -15
  %5193 = load <8 x i32>, ptr %5192, align 4, !tbaa !5
  %5194 = shufflevector <8 x i32> %5193, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5195 = getelementptr inbounds i32, ptr %5188, i64 -23
  %5196 = load <8 x i32>, ptr %5195, align 4, !tbaa !5
  %5197 = shufflevector <8 x i32> %5196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5198 = getelementptr inbounds i32, ptr %5188, i64 -31
  %5199 = load <8 x i32>, ptr %5198, align 4, !tbaa !5
  %5200 = shufflevector <8 x i32> %5199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5201 = mul <8 x i32> %5191, %5183
  %5202 = mul <8 x i32> %5194, %5184
  %5203 = mul <8 x i32> %5197, %5185
  %5204 = mul <8 x i32> %5200, %5186
  %5205 = add nuw i64 %5182, 32
  %5206 = icmp eq i64 %5205, %5179
  br i1 %5206, label %5207, label %5181, !llvm.loop !754

5207:                                             ; preds = %5181
  %5208 = mul <8 x i32> %5202, %5201
  %5209 = mul <8 x i32> %5203, %5208
  %5210 = mul <8 x i32> %5204, %5209
  %5211 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5210)
  %5212 = icmp eq i64 %5175, %5179
  br i1 %5212, label %5225, label %5213

5213:                                             ; preds = %5166, %5207
  %5214 = phi i64 [ %5169, %5166 ], [ %5180, %5207 ]
  %5215 = phi i32 [ 1, %5166 ], [ %5211, %5207 ]
  br label %5216

5216:                                             ; preds = %5213, %5216
  %5217 = phi i64 [ %5222, %5216 ], [ %5214, %5213 ]
  %5218 = phi i32 [ %5221, %5216 ], [ %5215, %5213 ]
  %5219 = getelementptr inbounds i32, ptr %9, i64 %5217
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = mul nsw i32 %5220, %5218
  %5222 = add nsw i64 %5217, -1
  %5223 = trunc i64 %5217 to i32
  %5224 = icmp sgt i32 %5223, 0
  br i1 %5224, label %5216, label %5225, !llvm.loop !755

5225:                                             ; preds = %5216, %5207
  %5226 = phi i32 [ %5211, %5207 ], [ %5221, %5216 ]
  %5227 = and i64 %5176, 4294967295
  %5228 = getelementptr inbounds i32, ptr %6, i64 %5227
  %5229 = load i32, ptr %5228, align 4, !tbaa !5
  %5230 = mul nsw i32 %5229, %5226
  %5231 = add nsw i32 %5230, %5170
  %5232 = icmp sgt i64 %5168, 2
  %5233 = add nsw i64 %5169, -1
  %5234 = add i32 %5167, 1
  br i1 %5232, label %5166, label %5235, !llvm.loop !756

5235:                                             ; preds = %5225, %5161
  %5236 = phi i32 [ %5165, %5161 ], [ %5231, %5225 ]
  %5237 = sext i32 %5236 to i64
  %5238 = getelementptr inbounds i32, ptr %4835, i64 %5237
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = sitofp i32 %5239 to double
  %5241 = fadd fast double %5162, %5240
  %5242 = fadd fast double %5164, 1.000000e+00
  %5243 = add nuw nsw i32 %5163, 1
  br i1 %5155, label %5244, label %5291

5244:                                             ; preds = %5235
  %5245 = load i32, ptr %4, align 4, !tbaa !5
  %5246 = load i32, ptr %12, align 4, !tbaa !5
  %5247 = add nsw i32 %5246, -1
  %5248 = icmp slt i32 %5245, %5247
  br i1 %5248, label %5268, label %5249

5249:                                             ; preds = %5244
  %5250 = icmp eq i32 %5245, %5247
  br i1 %5250, label %5251, label %5284

5251:                                             ; preds = %5249
  store i32 0, ptr %4, align 4, !tbaa !5
  %5252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5252, ptr %6, align 4, !tbaa !5
  br i1 %5160, label %5291, label %5253

5253:                                             ; preds = %5251, %5278
  %5254 = phi i64 [ %5282, %5278 ], [ 1, %5251 ]
  %5255 = getelementptr inbounds i32, ptr %4, i64 %5254
  %5256 = load i32, ptr %5255, align 4, !tbaa !5
  %5257 = getelementptr inbounds i32, ptr %12, i64 %5254
  %5258 = load i32, ptr %5257, align 4, !tbaa !5
  %5259 = add nsw i32 %5258, -1
  %5260 = icmp slt i32 %5256, %5259
  br i1 %5260, label %5261, label %5276

5261:                                             ; preds = %5253
  br i1 %5248, label %5268, label %5262

5262:                                             ; preds = %5261
  %5263 = getelementptr inbounds i32, ptr %7, i64 %5254
  %5264 = load i32, ptr %5263, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %6, i64 %5254
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = add nsw i32 %5266, %5264
  store i32 %5267, ptr %5265, align 4, !tbaa !5
  br label %5286

5268:                                             ; preds = %5244, %5261
  %5269 = phi i32 [ %5256, %5261 ], [ %5245, %5244 ]
  %5270 = phi ptr [ %5255, %5261 ], [ %4, %5244 ]
  %5271 = phi i64 [ %5254, %5261 ], [ 0, %5244 ]
  %5272 = add nsw i32 %5269, 1
  store i32 %5272, ptr %5270, align 4, !tbaa !5
  %5273 = getelementptr inbounds i32, ptr %7, i64 %5271
  %5274 = load i32, ptr %5273, align 4, !tbaa !5
  %5275 = getelementptr inbounds i32, ptr %6, i64 %5271
  br label %5286

5276:                                             ; preds = %5253
  %5277 = icmp eq i32 %5256, %5259
  br i1 %5277, label %5278, label %5284

5278:                                             ; preds = %5276
  store i32 0, ptr %5255, align 4, !tbaa !5
  %5279 = getelementptr inbounds i32, ptr %8, i64 %5254
  %5280 = load i32, ptr %5279, align 4, !tbaa !5
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5254
  store i32 %5280, ptr %5281, align 4, !tbaa !5
  %5282 = add nuw nsw i64 %5254, 1
  %5283 = icmp eq i64 %5282, %5158
  br i1 %5283, label %5291, label %5253, !llvm.loop !757

5284:                                             ; preds = %5249, %5276
  store double %5241, ptr %4837, align 8, !tbaa !18
  %5285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5286:                                             ; preds = %5262, %5268
  %5287 = phi ptr [ %5275, %5268 ], [ %5255, %5262 ]
  %5288 = phi i32 [ %5274, %5268 ], [ 1, %5262 ]
  %5289 = load i32, ptr %5287, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, %5288
  store i32 %5290, ptr %5287, align 4, !tbaa !5
  br label %5291

5291:                                             ; preds = %5278, %5286, %5251, %5235
  %5292 = icmp eq i32 %5243, %5
  br i1 %5292, label %5439, label %5161, !llvm.loop !758

5293:                                             ; preds = %5144, %5428
  %5294 = phi double [ 0.000000e+00, %5144 ], [ %5376, %5428 ]
  %5295 = phi i32 [ 0, %5144 ], [ %5377, %5428 ]
  %5296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5145, label %5297, label %5366

5297:                                             ; preds = %5293, %5356
  %5298 = phi i32 [ %5365, %5356 ], [ 0, %5293 ]
  %5299 = phi i64 [ %5307, %5356 ], [ %5149, %5293 ]
  %5300 = phi i64 [ %5364, %5356 ], [ %5148, %5293 ]
  %5301 = phi i32 [ %5362, %5356 ], [ %5296, %5293 ]
  %5302 = sub i32 %5147, %5298
  %5303 = tail call i32 @llvm.smin.i32(i32 %5302, i32 0)
  %5304 = sub i32 %5302, %5303
  %5305 = zext i32 %5304 to i64
  %5306 = add nuw nsw i64 %5305, 1
  %5307 = add nsw i64 %5299, -1
  %5308 = icmp ult i32 %5304, 31
  br i1 %5308, label %5344, label %5309

5309:                                             ; preds = %5297
  %5310 = and i64 %5306, 8589934560
  %5311 = sub i64 %5300, %5310
  br label %5312

5312:                                             ; preds = %5312, %5309
  %5313 = phi i64 [ 0, %5309 ], [ %5336, %5312 ]
  %5314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5332, %5312 ]
  %5315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5333, %5312 ]
  %5316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5334, %5312 ]
  %5317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5335, %5312 ]
  %5318 = sub i64 %5300, %5313
  %5319 = getelementptr inbounds i32, ptr %11, i64 %5318
  %5320 = getelementptr inbounds i32, ptr %5319, i64 -7
  %5321 = load <8 x i32>, ptr %5320, align 4, !tbaa !5
  %5322 = shufflevector <8 x i32> %5321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5323 = getelementptr inbounds i32, ptr %5319, i64 -15
  %5324 = load <8 x i32>, ptr %5323, align 4, !tbaa !5
  %5325 = shufflevector <8 x i32> %5324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5326 = getelementptr inbounds i32, ptr %5319, i64 -23
  %5327 = load <8 x i32>, ptr %5326, align 4, !tbaa !5
  %5328 = shufflevector <8 x i32> %5327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5329 = getelementptr inbounds i32, ptr %5319, i64 -31
  %5330 = load <8 x i32>, ptr %5329, align 4, !tbaa !5
  %5331 = shufflevector <8 x i32> %5330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5332 = mul <8 x i32> %5322, %5314
  %5333 = mul <8 x i32> %5325, %5315
  %5334 = mul <8 x i32> %5328, %5316
  %5335 = mul <8 x i32> %5331, %5317
  %5336 = add nuw i64 %5313, 32
  %5337 = icmp eq i64 %5336, %5310
  br i1 %5337, label %5338, label %5312, !llvm.loop !759

5338:                                             ; preds = %5312
  %5339 = mul <8 x i32> %5333, %5332
  %5340 = mul <8 x i32> %5334, %5339
  %5341 = mul <8 x i32> %5335, %5340
  %5342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5341)
  %5343 = icmp eq i64 %5306, %5310
  br i1 %5343, label %5356, label %5344

5344:                                             ; preds = %5297, %5338
  %5345 = phi i64 [ %5300, %5297 ], [ %5311, %5338 ]
  %5346 = phi i32 [ 1, %5297 ], [ %5342, %5338 ]
  br label %5347

5347:                                             ; preds = %5344, %5347
  %5348 = phi i64 [ %5353, %5347 ], [ %5345, %5344 ]
  %5349 = phi i32 [ %5352, %5347 ], [ %5346, %5344 ]
  %5350 = getelementptr inbounds i32, ptr %11, i64 %5348
  %5351 = load i32, ptr %5350, align 4, !tbaa !5
  %5352 = mul nsw i32 %5351, %5349
  %5353 = add nsw i64 %5348, -1
  %5354 = trunc i64 %5348 to i32
  %5355 = icmp sgt i32 %5354, 0
  br i1 %5355, label %5347, label %5356, !llvm.loop !760

5356:                                             ; preds = %5347, %5338
  %5357 = phi i32 [ %5342, %5338 ], [ %5352, %5347 ]
  %5358 = and i64 %5307, 4294967295
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5358
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = mul nsw i32 %5360, %5357
  %5362 = add nsw i32 %5361, %5301
  %5363 = icmp sgt i64 %5299, 2
  %5364 = add nsw i64 %5300, -1
  %5365 = add i32 %5298, 1
  br i1 %5363, label %5297, label %5366, !llvm.loop !761

5366:                                             ; preds = %5356, %5293
  %5367 = phi i32 [ %5296, %5293 ], [ %5362, %5356 ]
  %5368 = icmp slt i32 %5367, %5
  br i1 %5368, label %5371, label %5369

5369:                                             ; preds = %5366
  %5370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5445

5371:                                             ; preds = %5366
  %5372 = sext i32 %5367 to i64
  %5373 = getelementptr inbounds i32, ptr %4835, i64 %5372
  %5374 = load i32, ptr %5373, align 4, !tbaa !5
  %5375 = sitofp i32 %5374 to double
  %5376 = fadd fast double %5294, %5375
  store double %5376, ptr %4837, align 8, !tbaa !18
  %5377 = add nuw nsw i32 %5295, 1
  br i1 %5146, label %5378, label %5428

5378:                                             ; preds = %5371
  %5379 = load i32, ptr %4, align 4, !tbaa !5
  %5380 = load i32, ptr %12, align 4, !tbaa !5
  %5381 = add nsw i32 %5380, -1
  %5382 = icmp slt i32 %5379, %5381
  br i1 %5382, label %5405, label %5383

5383:                                             ; preds = %5378
  %5384 = icmp eq i32 %5379, %5381
  br i1 %5384, label %5385, label %5421

5385:                                             ; preds = %5383
  store i32 0, ptr %4, align 4, !tbaa !5
  %5386 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5386, ptr %6, align 4, !tbaa !5
  br i1 %5151, label %5428, label %5387

5387:                                             ; preds = %5385, %5415
  %5388 = phi i64 [ %5419, %5415 ], [ 1, %5385 ]
  %5389 = getelementptr inbounds i32, ptr %4, i64 %5388
  %5390 = load i32, ptr %5389, align 4, !tbaa !5
  %5391 = getelementptr inbounds i32, ptr %12, i64 %5388
  %5392 = load i32, ptr %5391, align 4, !tbaa !5
  %5393 = add nsw i32 %5392, -1
  %5394 = icmp slt i32 %5390, %5393
  br i1 %5394, label %5395, label %5413

5395:                                             ; preds = %5387
  br i1 %5382, label %5405, label %5396

5396:                                             ; preds = %5395
  %5397 = shl i64 %5388, 32
  %5398 = add i64 %5397, -4294967296
  %5399 = ashr exact i64 %5398, 32
  %5400 = getelementptr inbounds i32, ptr %7, i64 %5399
  %5401 = load i32, ptr %5400, align 4, !tbaa !5
  %5402 = getelementptr inbounds i32, ptr %6, i64 %5388
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = add nsw i32 %5403, %5401
  store i32 %5404, ptr %5402, align 4, !tbaa !5
  br label %5423

5405:                                             ; preds = %5378, %5395
  %5406 = phi i32 [ %5390, %5395 ], [ %5379, %5378 ]
  %5407 = phi ptr [ %5389, %5395 ], [ %4, %5378 ]
  %5408 = phi i64 [ %5388, %5395 ], [ 0, %5378 ]
  %5409 = add nsw i32 %5406, 1
  store i32 %5409, ptr %5407, align 4, !tbaa !5
  %5410 = getelementptr inbounds i32, ptr %7, i64 %5408
  %5411 = load i32, ptr %5410, align 4, !tbaa !5
  %5412 = getelementptr inbounds i32, ptr %6, i64 %5408
  br label %5423

5413:                                             ; preds = %5387
  %5414 = icmp eq i32 %5390, %5393
  br i1 %5414, label %5415, label %5421

5415:                                             ; preds = %5413
  store i32 0, ptr %5389, align 4, !tbaa !5
  %5416 = getelementptr inbounds i32, ptr %8, i64 %5388
  %5417 = load i32, ptr %5416, align 4, !tbaa !5
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5388
  store i32 %5417, ptr %5418, align 4, !tbaa !5
  %5419 = add nuw nsw i64 %5388, 1
  %5420 = icmp eq i64 %5419, %5149
  br i1 %5420, label %5428, label %5387, !llvm.loop !762

5421:                                             ; preds = %5383, %5413
  %5422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5445

5423:                                             ; preds = %5396, %5405
  %5424 = phi ptr [ %5412, %5405 ], [ %5389, %5396 ]
  %5425 = phi i32 [ %5411, %5405 ], [ 1, %5396 ]
  %5426 = load i32, ptr %5424, align 4, !tbaa !5
  %5427 = add nsw i32 %5426, %5425
  store i32 %5427, ptr %5424, align 4, !tbaa !5
  br label %5428

5428:                                             ; preds = %5415, %5423, %5385, %5371
  %5429 = icmp eq i32 %5377, %5
  br i1 %5429, label %5440, label %5293, !llvm.loop !763

5430:                                             ; preds = %4842
  %5431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5440

5432:                                             ; preds = %1994
  store i16 %1944, ptr %1828, align 2, !tbaa !78
  br label %5440

5433:                                             ; preds = %2291
  store i16 %2241, ptr %1828, align 2, !tbaa !78
  br label %5440

5434:                                             ; preds = %3197
  store i64 %3147, ptr %3033, align 8, !tbaa !120
  br label %5440

5435:                                             ; preds = %3491
  store i64 %3441, ptr %3033, align 8, !tbaa !120
  br label %5440

5436:                                             ; preds = %4090
  store double %4040, ptr %3636, align 8, !tbaa !18
  br label %5440

5437:                                             ; preds = %4400
  store float %4350, ptr %4235, align 4, !tbaa !162
  br label %5440

5438:                                             ; preds = %4692
  store float %4642, ptr %4235, align 4, !tbaa !162
  br label %5440

5439:                                             ; preds = %5291
  store double %5241, ptr %4837, align 8, !tbaa !18
  br label %5440

5440:                                             ; preds = %5428, %5136, %4999, %4829, %4537, %4227, %3935, %3798, %3628, %3336, %3025, %2889, %2735, %2599, %2428, %2136, %1820, %1683, %1528, %1391, %1217, %1081, %927, %791, %620, %483, %328, %191, %5143, %5152, %5439, %4848, %4857, %4544, %4553, %5438, %4246, %4255, %5437, %3942, %3951, %5436, %3647, %3656, %3343, %3352, %5435, %3044, %3053, %5434, %2742, %2751, %2446, %2455, %2143, %2152, %5433, %1839, %1848, %5432, %1535, %1544, %1236, %1245, %934, %943, %638, %647, %335, %344, %37, %46, %4839, %5430, %4237, %4831, %3638, %4229, %3035, %3630, %2438, %3027, %1830, %2430, %1227, %1822, %630, %1219, %28, %622, %18
  %5441 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1219 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1822 ], [ 0.000000e+00, %1227 ], [ 0.000000e+00, %2430 ], [ 0.000000e+00, %1830 ], [ 0.000000e+00, %3027 ], [ 0.000000e+00, %2438 ], [ 0.000000e+00, %3630 ], [ 0.000000e+00, %3035 ], [ 0.000000e+00, %4229 ], [ 0.000000e+00, %3638 ], [ 0.000000e+00, %4831 ], [ 0.000000e+00, %4237 ], [ 0.000000e+00, %5430 ], [ 0.000000e+00, %4839 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %943 ], [ 0.000000e+00, %934 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %1236 ], [ 0.000000e+00, %1544 ], [ 0.000000e+00, %1535 ], [ %1945, %5432 ], [ 0.000000e+00, %1848 ], [ 0.000000e+00, %1839 ], [ %2242, %5433 ], [ 0.000000e+00, %2152 ], [ 0.000000e+00, %2143 ], [ 0.000000e+00, %2455 ], [ 0.000000e+00, %2446 ], [ 0.000000e+00, %2751 ], [ 0.000000e+00, %2742 ], [ %3148, %5434 ], [ 0.000000e+00, %3053 ], [ 0.000000e+00, %3044 ], [ %3442, %5435 ], [ 0.000000e+00, %3352 ], [ 0.000000e+00, %3343 ], [ 0.000000e+00, %3656 ], [ 0.000000e+00, %3647 ], [ %4041, %5436 ], [ 0.000000e+00, %3951 ], [ 0.000000e+00, %3942 ], [ %4351, %5437 ], [ 0.000000e+00, %4255 ], [ 0.000000e+00, %4246 ], [ %4643, %5438 ], [ 0.000000e+00, %4553 ], [ 0.000000e+00, %4544 ], [ 0.000000e+00, %4857 ], [ 0.000000e+00, %4848 ], [ %5242, %5439 ], [ 0.000000e+00, %5152 ], [ 0.000000e+00, %5143 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %742, %791 ], [ 0.000000e+00, %927 ], [ %1032, %1081 ], [ 0.000000e+00, %1217 ], [ %1342, %1391 ], [ 0.000000e+00, %1528 ], [ %1634, %1683 ], [ 0.000000e+00, %1820 ], [ 0.000000e+00, %2136 ], [ 0.000000e+00, %2428 ], [ %2550, %2599 ], [ 0.000000e+00, %2735 ], [ %2840, %2889 ], [ 0.000000e+00, %3025 ], [ 0.000000e+00, %3336 ], [ 0.000000e+00, %3628 ], [ %3749, %3798 ], [ 0.000000e+00, %3935 ], [ 0.000000e+00, %4227 ], [ 0.000000e+00, %4537 ], [ 0.000000e+00, %4829 ], [ %4950, %4999 ], [ 0.000000e+00, %5136 ], [ 0.000000e+00, %5428 ]
  %5442 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1219 ], [ 1, %630 ], [ 1, %1822 ], [ 1, %1227 ], [ 1, %2430 ], [ 1, %1830 ], [ 1, %3027 ], [ 1, %2438 ], [ 1, %3630 ], [ 1, %3035 ], [ 1, %4229 ], [ 1, %3638 ], [ 1, %4831 ], [ 1, %4237 ], [ 1, %5430 ], [ 1, %4839 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %647 ], [ 1, %638 ], [ 1, %943 ], [ 1, %934 ], [ 1, %1245 ], [ 1, %1236 ], [ 1, %1544 ], [ 1, %1535 ], [ %1855, %5432 ], [ 1, %1848 ], [ 1, %1839 ], [ %2159, %5433 ], [ 1, %2152 ], [ 1, %2143 ], [ 1, %2455 ], [ 1, %2446 ], [ 1, %2751 ], [ 1, %2742 ], [ %3060, %5434 ], [ 1, %3053 ], [ 1, %3044 ], [ %3359, %5435 ], [ 1, %3352 ], [ 1, %3343 ], [ 1, %3656 ], [ 1, %3647 ], [ %3958, %5436 ], [ 1, %3951 ], [ 1, %3942 ], [ %4262, %5437 ], [ 1, %4255 ], [ 1, %4246 ], [ %4560, %5438 ], [ 1, %4553 ], [ 1, %4544 ], [ 1, %4857 ], [ 1, %4848 ], [ %5159, %5439 ], [ 1, %5152 ], [ 1, %5143 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %654, %791 ], [ %645, %927 ], [ %950, %1081 ], [ %941, %1217 ], [ %1252, %1391 ], [ %1243, %1528 ], [ %1551, %1683 ], [ %1542, %1820 ], [ %1846, %2136 ], [ %2150, %2428 ], [ %2462, %2599 ], [ %2453, %2735 ], [ %2758, %2889 ], [ %2749, %3025 ], [ %3051, %3336 ], [ %3350, %3628 ], [ %3663, %3798 ], [ %3654, %3935 ], [ %3949, %4227 ], [ %4253, %4537 ], [ %4551, %4829 ], [ %4864, %4999 ], [ %4855, %5136 ], [ %5150, %5428 ]
  %5443 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5442, ptr noundef nonnull @.str.5) #3
  %5444 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5441, ptr noundef nonnull @.str.6) #3
  br label %5445

5445:                                             ; preds = %4992, %5077, %5129, %5284, %5369, %5421, %4393, %4478, %4530, %4685, %4770, %4822, %3791, %3876, %3928, %4083, %4168, %4220, %3190, %3275, %3329, %3484, %3569, %3621, %2592, %2676, %2728, %2882, %2966, %3018, %1987, %2072, %2129, %2284, %2369, %2421, %1384, %1468, %1521, %1676, %1760, %1813, %784, %868, %920, %1074, %1158, %1210, %184, %268, %321, %476, %560, %613, %5440
  %5446 = phi i32 [ 0, %5440 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1210 ], [ -1, %1158 ], [ -1, %1074 ], [ -1, %920 ], [ -1, %868 ], [ -1, %784 ], [ -1, %1813 ], [ -1, %1760 ], [ -1, %1676 ], [ -1, %1521 ], [ -1, %1468 ], [ -1, %1384 ], [ -1, %2421 ], [ -1, %2369 ], [ -1, %2284 ], [ -1, %2129 ], [ -1, %2072 ], [ -1, %1987 ], [ -1, %3018 ], [ -1, %2966 ], [ -1, %2882 ], [ -1, %2728 ], [ -1, %2676 ], [ -1, %2592 ], [ -1, %3621 ], [ -1, %3569 ], [ -1, %3484 ], [ -1, %3329 ], [ -1, %3275 ], [ -1, %3190 ], [ -1, %4220 ], [ -1, %4168 ], [ -1, %4083 ], [ -1, %3928 ], [ -1, %3876 ], [ -1, %3791 ], [ -1, %4822 ], [ -1, %4770 ], [ -1, %4685 ], [ -1, %4530 ], [ -1, %4478 ], [ -1, %4393 ], [ -1, %5421 ], [ -1, %5369 ], [ -1, %5284 ], [ -1, %5129 ], [ -1, %5077 ], [ -1, %4992 ]
  ret i32 %5446
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5447 [
    i32 101, label %22
    i32 102, label %625
    i32 103, label %1227
    i32 104, label %1831
    i32 105, label %2439
    i32 106, label %3041
    i32 107, label %3641
    i32 108, label %4240
    i32 109, label %4842
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !120
  %30 = trunc i64 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5447

31:                                               ; preds = %22
  switch i32 %1, label %623 [
    i32 1, label %32
    i32 0, label %331
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5447

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %194

46:                                               ; preds = %32
  br i1 %36, label %47, label %5447

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %192
  %56 = phi i32 [ 0, %47 ], [ %144, %192 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %143, %192 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !764

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !765

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !766

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i64, ptr %24, i64 %130
  %134 = load i64, ptr %133, align 8, !tbaa !120
  %135 = trunc i64 %134 to i32
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = and i32 %135, 255
  %139 = sitofp i32 %138 to double
  %140 = fmul fast double %132, %139
  %141 = fadd fast double %140, %137
  %142 = fptoui double %141 to i8
  store i8 %142, ptr %26, align 1, !tbaa !11
  %143 = fadd fast double %132, %57
  %144 = add nuw nsw i32 %56, 1
  br i1 %49, label %145, label %192

145:                                              ; preds = %128
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %54, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %52
  br i1 %184, label %192, label %154, !llvm.loop !767

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %128
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5447, label %55, !llvm.loop !768

194:                                              ; preds = %38, %329
  %195 = phi i32 [ 0, %38 ], [ %278, %329 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %43, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %42, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %41, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !769

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !770

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !771

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

271:                                              ; preds = %266
  %272 = sext i32 %267 to i64
  %273 = getelementptr inbounds i64, ptr %24, i64 %272
  %274 = load i64, ptr %273, align 8, !tbaa !120
  %275 = load i8, ptr %26, align 1, !tbaa !11
  %276 = trunc i64 %274 to i8
  %277 = add i8 %275, %276
  store i8 %277, ptr %26, align 1, !tbaa !11
  %278 = add nuw nsw i32 %195, 1
  br i1 %40, label %279, label %329

279:                                              ; preds = %271
  %280 = load i32, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %12, align 4, !tbaa !5
  %282 = add nsw i32 %281, -1
  %283 = icmp slt i32 %280, %282
  br i1 %283, label %306, label %284

284:                                              ; preds = %279
  %285 = icmp eq i32 %280, %282
  br i1 %285, label %286, label %322

286:                                              ; preds = %284
  store i32 0, ptr %4, align 4, !tbaa !5
  %287 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %287, ptr %6, align 4, !tbaa !5
  br i1 %45, label %329, label %288

288:                                              ; preds = %286, %316
  %289 = phi i64 [ %320, %316 ], [ 1, %286 ]
  %290 = getelementptr inbounds i32, ptr %4, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = getelementptr inbounds i32, ptr %12, i64 %289
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %291, %294
  br i1 %295, label %296, label %314

296:                                              ; preds = %288
  br i1 %283, label %306, label %297

297:                                              ; preds = %296
  %298 = shl i64 %289, 32
  %299 = add i64 %298, -4294967296
  %300 = ashr exact i64 %299, 32
  %301 = getelementptr inbounds i32, ptr %7, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = getelementptr inbounds i32, ptr %6, i64 %289
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = add nsw i32 %304, %302
  store i32 %305, ptr %303, align 4, !tbaa !5
  br label %324

306:                                              ; preds = %279, %296
  %307 = phi i32 [ %291, %296 ], [ %280, %279 ]
  %308 = phi ptr [ %290, %296 ], [ %4, %279 ]
  %309 = phi i64 [ %289, %296 ], [ 0, %279 ]
  %310 = add nsw i32 %307, 1
  store i32 %310, ptr %308, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %7, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %309
  br label %324

314:                                              ; preds = %288
  %315 = icmp eq i32 %291, %294
  br i1 %315, label %316, label %322

316:                                              ; preds = %314
  store i32 0, ptr %290, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %8, i64 %289
  %318 = load i32, ptr %317, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %6, i64 %289
  store i32 %318, ptr %319, align 4, !tbaa !5
  %320 = add nuw nsw i64 %289, 1
  %321 = icmp eq i64 %320, %43
  br i1 %321, label %329, label %288, !llvm.loop !772

322:                                              ; preds = %284, %314
  %323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

324:                                              ; preds = %297, %306
  %325 = phi ptr [ %313, %306 ], [ %290, %297 ]
  %326 = phi i32 [ %312, %306 ], [ 1, %297 ]
  %327 = load i32, ptr %325, align 4, !tbaa !5
  %328 = add nsw i32 %327, %326
  store i32 %328, ptr %325, align 4, !tbaa !5
  br label %329

329:                                              ; preds = %316, %324, %286, %271
  %330 = icmp eq i32 %278, %5
  br i1 %330, label %5447, label %194, !llvm.loop !773

331:                                              ; preds = %31
  %332 = getelementptr inbounds i32, ptr %3, i64 %19
  %333 = load i32, ptr %332, align 4, !tbaa !5
  %334 = icmp eq i32 %333, 0
  %335 = icmp sgt i32 %5, 0
  br i1 %334, label %345, label %336

336:                                              ; preds = %331
  br i1 %335, label %337, label %5447

337:                                              ; preds = %336
  %338 = icmp sgt i32 %13, 1
  %339 = icmp sgt i32 %13, 0
  %340 = add i32 %13, -2
  %341 = zext i32 %340 to i64
  %342 = zext i32 %13 to i64
  %343 = add nuw i32 %5, 1
  %344 = icmp eq i32 %13, 1
  br label %486

345:                                              ; preds = %331
  br i1 %335, label %346, label %5447

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %354

354:                                              ; preds = %346, %484
  %355 = phi i32 [ 0, %346 ], [ %436, %484 ]
  %356 = phi double [ 0.000000e+00, %346 ], [ %435, %484 ]
  %357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %358, label %427

358:                                              ; preds = %354, %417
  %359 = phi i32 [ %426, %417 ], [ 0, %354 ]
  %360 = phi i64 [ %368, %417 ], [ %351, %354 ]
  %361 = phi i64 [ %425, %417 ], [ %350, %354 ]
  %362 = phi i32 [ %423, %417 ], [ %357, %354 ]
  %363 = sub i32 %349, %359
  %364 = tail call i32 @llvm.smin.i32(i32 %363, i32 0)
  %365 = sub i32 %363, %364
  %366 = zext i32 %365 to i64
  %367 = add nuw nsw i64 %366, 1
  %368 = add nsw i64 %360, -1
  %369 = icmp ult i32 %365, 31
  br i1 %369, label %405, label %370

370:                                              ; preds = %358
  %371 = and i64 %367, 8589934560
  %372 = sub i64 %361, %371
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i64 [ 0, %370 ], [ %397, %373 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %393, %373 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %394, %373 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %395, %373 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %370 ], [ %396, %373 ]
  %379 = sub i64 %361, %374
  %380 = getelementptr inbounds i32, ptr %9, i64 %379
  %381 = getelementptr inbounds i32, ptr %380, i64 -7
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %380, i64 -15
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %380, i64 -23
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = getelementptr inbounds i32, ptr %380, i64 -31
  %391 = load <8 x i32>, ptr %390, align 4, !tbaa !5
  %392 = shufflevector <8 x i32> %391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %393 = mul <8 x i32> %383, %375
  %394 = mul <8 x i32> %386, %376
  %395 = mul <8 x i32> %389, %377
  %396 = mul <8 x i32> %392, %378
  %397 = add nuw i64 %374, 32
  %398 = icmp eq i64 %397, %371
  br i1 %398, label %399, label %373, !llvm.loop !774

399:                                              ; preds = %373
  %400 = mul <8 x i32> %394, %393
  %401 = mul <8 x i32> %395, %400
  %402 = mul <8 x i32> %396, %401
  %403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %402)
  %404 = icmp eq i64 %367, %371
  br i1 %404, label %417, label %405

405:                                              ; preds = %358, %399
  %406 = phi i64 [ %361, %358 ], [ %372, %399 ]
  %407 = phi i32 [ 1, %358 ], [ %403, %399 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i64 [ %414, %408 ], [ %406, %405 ]
  %410 = phi i32 [ %413, %408 ], [ %407, %405 ]
  %411 = getelementptr inbounds i32, ptr %9, i64 %409
  %412 = load i32, ptr %411, align 4, !tbaa !5
  %413 = mul nsw i32 %412, %410
  %414 = add nsw i64 %409, -1
  %415 = trunc i64 %409 to i32
  %416 = icmp sgt i32 %415, 0
  br i1 %416, label %408, label %417, !llvm.loop !775

417:                                              ; preds = %408, %399
  %418 = phi i32 [ %403, %399 ], [ %413, %408 ]
  %419 = and i64 %368, 4294967295
  %420 = getelementptr inbounds i32, ptr %6, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !5
  %422 = mul nsw i32 %421, %418
  %423 = add nsw i32 %422, %362
  %424 = icmp sgt i64 %360, 2
  %425 = add nsw i64 %361, -1
  %426 = add i32 %359, 1
  br i1 %424, label %358, label %427, !llvm.loop !776

427:                                              ; preds = %417, %354
  %428 = phi i32 [ %357, %354 ], [ %423, %417 ]
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i64, ptr %24, i64 %429
  %431 = load i64, ptr %430, align 8, !tbaa !120
  %432 = trunc i64 %431 to i8
  %433 = load i8, ptr %26, align 1, !tbaa !11
  %434 = add i8 %433, %432
  store i8 %434, ptr %26, align 1, !tbaa !11
  %435 = fadd fast double %356, 1.000000e+00
  %436 = add nuw nsw i32 %355, 1
  br i1 %348, label %437, label %484

437:                                              ; preds = %427
  %438 = load i32, ptr %4, align 4, !tbaa !5
  %439 = load i32, ptr %12, align 4, !tbaa !5
  %440 = add nsw i32 %439, -1
  %441 = icmp slt i32 %438, %440
  br i1 %441, label %461, label %442

442:                                              ; preds = %437
  %443 = icmp eq i32 %438, %440
  br i1 %443, label %444, label %477

444:                                              ; preds = %442
  store i32 0, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %445, ptr %6, align 4, !tbaa !5
  br i1 %353, label %484, label %446

446:                                              ; preds = %444, %471
  %447 = phi i64 [ %475, %471 ], [ 1, %444 ]
  %448 = getelementptr inbounds i32, ptr %4, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = getelementptr inbounds i32, ptr %12, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %449, %452
  br i1 %453, label %454, label %469

454:                                              ; preds = %446
  br i1 %441, label %461, label %455

455:                                              ; preds = %454
  %456 = getelementptr inbounds i32, ptr %7, i64 %447
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %6, i64 %447
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, %457
  store i32 %460, ptr %458, align 4, !tbaa !5
  br label %479

461:                                              ; preds = %437, %454
  %462 = phi i32 [ %449, %454 ], [ %438, %437 ]
  %463 = phi ptr [ %448, %454 ], [ %4, %437 ]
  %464 = phi i64 [ %447, %454 ], [ 0, %437 ]
  %465 = add nsw i32 %462, 1
  store i32 %465, ptr %463, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %7, i64 %464
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %6, i64 %464
  br label %479

469:                                              ; preds = %446
  %470 = icmp eq i32 %449, %452
  br i1 %470, label %471, label %477

471:                                              ; preds = %469
  store i32 0, ptr %448, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %8, i64 %447
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %447
  store i32 %473, ptr %474, align 4, !tbaa !5
  %475 = add nuw nsw i64 %447, 1
  %476 = icmp eq i64 %475, %351
  br i1 %476, label %484, label %446, !llvm.loop !777

477:                                              ; preds = %442, %469
  %478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

479:                                              ; preds = %455, %461
  %480 = phi ptr [ %468, %461 ], [ %448, %455 ]
  %481 = phi i32 [ %467, %461 ], [ 1, %455 ]
  %482 = load i32, ptr %480, align 4, !tbaa !5
  %483 = add nsw i32 %482, %481
  store i32 %483, ptr %480, align 4, !tbaa !5
  br label %484

484:                                              ; preds = %471, %479, %444, %427
  %485 = icmp eq i32 %436, %5
  br i1 %485, label %5447, label %354, !llvm.loop !778

486:                                              ; preds = %337, %621
  %487 = phi i32 [ 0, %337 ], [ %570, %621 ]
  %488 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %338, label %489, label %558

489:                                              ; preds = %486, %548
  %490 = phi i32 [ %557, %548 ], [ 0, %486 ]
  %491 = phi i64 [ %499, %548 ], [ %342, %486 ]
  %492 = phi i64 [ %556, %548 ], [ %341, %486 ]
  %493 = phi i32 [ %554, %548 ], [ %488, %486 ]
  %494 = sub i32 %340, %490
  %495 = tail call i32 @llvm.smin.i32(i32 %494, i32 0)
  %496 = sub i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = add nuw nsw i64 %497, 1
  %499 = add nsw i64 %491, -1
  %500 = icmp ult i32 %496, 31
  br i1 %500, label %536, label %501

501:                                              ; preds = %489
  %502 = and i64 %498, 8589934560
  %503 = sub i64 %492, %502
  br label %504

504:                                              ; preds = %504, %501
  %505 = phi i64 [ 0, %501 ], [ %528, %504 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %524, %504 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %525, %504 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %526, %504 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %501 ], [ %527, %504 ]
  %510 = sub i64 %492, %505
  %511 = getelementptr inbounds i32, ptr %11, i64 %510
  %512 = getelementptr inbounds i32, ptr %511, i64 -7
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = getelementptr inbounds i32, ptr %511, i64 -15
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %511, i64 -23
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %511, i64 -31
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = mul <8 x i32> %514, %506
  %525 = mul <8 x i32> %517, %507
  %526 = mul <8 x i32> %520, %508
  %527 = mul <8 x i32> %523, %509
  %528 = add nuw i64 %505, 32
  %529 = icmp eq i64 %528, %502
  br i1 %529, label %530, label %504, !llvm.loop !779

530:                                              ; preds = %504
  %531 = mul <8 x i32> %525, %524
  %532 = mul <8 x i32> %526, %531
  %533 = mul <8 x i32> %527, %532
  %534 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %533)
  %535 = icmp eq i64 %498, %502
  br i1 %535, label %548, label %536

536:                                              ; preds = %489, %530
  %537 = phi i64 [ %492, %489 ], [ %503, %530 ]
  %538 = phi i32 [ 1, %489 ], [ %534, %530 ]
  br label %539

539:                                              ; preds = %536, %539
  %540 = phi i64 [ %545, %539 ], [ %537, %536 ]
  %541 = phi i32 [ %544, %539 ], [ %538, %536 ]
  %542 = getelementptr inbounds i32, ptr %11, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %541
  %545 = add nsw i64 %540, -1
  %546 = trunc i64 %540 to i32
  %547 = icmp sgt i32 %546, 0
  br i1 %547, label %539, label %548, !llvm.loop !780

548:                                              ; preds = %539, %530
  %549 = phi i32 [ %534, %530 ], [ %544, %539 ]
  %550 = and i64 %499, 4294967295
  %551 = getelementptr inbounds i32, ptr %6, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !5
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %493
  %555 = icmp sgt i64 %491, 2
  %556 = add nsw i64 %492, -1
  %557 = add i32 %490, 1
  br i1 %555, label %489, label %558, !llvm.loop !781

558:                                              ; preds = %548, %486
  %559 = phi i32 [ %488, %486 ], [ %554, %548 ]
  %560 = icmp slt i32 %559, %5
  br i1 %560, label %563, label %561

561:                                              ; preds = %558
  %562 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

563:                                              ; preds = %558
  %564 = sext i32 %559 to i64
  %565 = getelementptr inbounds i64, ptr %24, i64 %564
  %566 = load i64, ptr %565, align 8, !tbaa !120
  %567 = trunc i64 %566 to i8
  %568 = load i8, ptr %26, align 1, !tbaa !11
  %569 = add i8 %568, %567
  store i8 %569, ptr %26, align 1, !tbaa !11
  %570 = add nuw nsw i32 %487, 1
  br i1 %339, label %571, label %621

571:                                              ; preds = %563
  %572 = load i32, ptr %4, align 4, !tbaa !5
  %573 = load i32, ptr %12, align 4, !tbaa !5
  %574 = add nsw i32 %573, -1
  %575 = icmp slt i32 %572, %574
  br i1 %575, label %598, label %576

576:                                              ; preds = %571
  %577 = icmp eq i32 %572, %574
  br i1 %577, label %578, label %614

578:                                              ; preds = %576
  store i32 0, ptr %4, align 4, !tbaa !5
  %579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %579, ptr %6, align 4, !tbaa !5
  br i1 %344, label %621, label %580

580:                                              ; preds = %578, %608
  %581 = phi i64 [ %612, %608 ], [ 1, %578 ]
  %582 = getelementptr inbounds i32, ptr %4, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !5
  %584 = getelementptr inbounds i32, ptr %12, i64 %581
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = add nsw i32 %585, -1
  %587 = icmp slt i32 %583, %586
  br i1 %587, label %588, label %606

588:                                              ; preds = %580
  br i1 %575, label %598, label %589

589:                                              ; preds = %588
  %590 = shl i64 %581, 32
  %591 = add i64 %590, -4294967296
  %592 = ashr exact i64 %591, 32
  %593 = getelementptr inbounds i32, ptr %7, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %581
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = add nsw i32 %596, %594
  store i32 %597, ptr %595, align 4, !tbaa !5
  br label %616

598:                                              ; preds = %571, %588
  %599 = phi i32 [ %583, %588 ], [ %572, %571 ]
  %600 = phi ptr [ %582, %588 ], [ %4, %571 ]
  %601 = phi i64 [ %581, %588 ], [ 0, %571 ]
  %602 = add nsw i32 %599, 1
  store i32 %602, ptr %600, align 4, !tbaa !5
  %603 = getelementptr inbounds i32, ptr %7, i64 %601
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %6, i64 %601
  br label %616

606:                                              ; preds = %580
  %607 = icmp eq i32 %583, %586
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  store i32 0, ptr %582, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %8, i64 %581
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %581
  store i32 %610, ptr %611, align 4, !tbaa !5
  %612 = add nuw nsw i64 %581, 1
  %613 = icmp eq i64 %612, %342
  br i1 %613, label %621, label %580, !llvm.loop !782

614:                                              ; preds = %576, %606
  %615 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

616:                                              ; preds = %589, %598
  %617 = phi ptr [ %605, %598 ], [ %582, %589 ]
  %618 = phi i32 [ %604, %598 ], [ 1, %589 ]
  %619 = load i32, ptr %617, align 4, !tbaa !5
  %620 = add nsw i32 %619, %618
  store i32 %620, ptr %617, align 4, !tbaa !5
  br label %621

621:                                              ; preds = %608, %616, %578, %563
  %622 = icmp eq i32 %570, %5
  br i1 %622, label %5447, label %486, !llvm.loop !783

623:                                              ; preds = %31
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

625:                                              ; preds = %18
  %626 = getelementptr inbounds ptr, ptr %14, i64 %19
  %627 = load ptr, ptr %626, align 8, !tbaa !9
  %628 = getelementptr inbounds ptr, ptr %16, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  store i32 0, ptr %629, align 4, !tbaa !5
  %630 = icmp eq i32 %13, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %625
  %632 = load i64, ptr %627, align 8, !tbaa !120
  %633 = trunc i64 %632 to i32
  store i32 %633, ptr %629, align 4, !tbaa !5
  br label %5447

634:                                              ; preds = %625
  switch i32 %1, label %1225 [
    i32 1, label %635
    i32 0, label %933
  ]

635:                                              ; preds = %634
  %636 = getelementptr inbounds i32, ptr %3, i64 %19
  %637 = load i32, ptr %636, align 4, !tbaa !5
  %638 = icmp eq i32 %637, 0
  %639 = icmp sgt i32 %5, 0
  br i1 %638, label %649, label %640

640:                                              ; preds = %635
  br i1 %639, label %641, label %5447

641:                                              ; preds = %640
  %642 = icmp sgt i32 %13, 1
  %643 = icmp sgt i32 %13, 0
  %644 = add i32 %13, -2
  %645 = zext i32 %644 to i64
  %646 = zext i32 %13 to i64
  %647 = add nuw i32 %5, 1
  %648 = icmp eq i32 %13, 1
  br label %796

649:                                              ; preds = %635
  br i1 %639, label %650, label %5447

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %658

658:                                              ; preds = %650, %794
  %659 = phi i32 [ 0, %650 ], [ %746, %794 ]
  %660 = phi double [ 0.000000e+00, %650 ], [ %745, %794 ]
  %661 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %651, label %662, label %731

662:                                              ; preds = %658, %721
  %663 = phi i32 [ %730, %721 ], [ 0, %658 ]
  %664 = phi i64 [ %672, %721 ], [ %655, %658 ]
  %665 = phi i64 [ %729, %721 ], [ %654, %658 ]
  %666 = phi i32 [ %727, %721 ], [ %661, %658 ]
  %667 = sub i32 %653, %663
  %668 = tail call i32 @llvm.smin.i32(i32 %667, i32 0)
  %669 = sub i32 %667, %668
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 1
  %672 = add nsw i64 %664, -1
  %673 = icmp ult i32 %669, 31
  br i1 %673, label %709, label %674

674:                                              ; preds = %662
  %675 = and i64 %671, 8589934560
  %676 = sub i64 %665, %675
  br label %677

677:                                              ; preds = %677, %674
  %678 = phi i64 [ 0, %674 ], [ %701, %677 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %697, %677 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %698, %677 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %699, %677 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %700, %677 ]
  %683 = sub i64 %665, %678
  %684 = getelementptr inbounds i32, ptr %9, i64 %683
  %685 = getelementptr inbounds i32, ptr %684, i64 -7
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %684, i64 -15
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %684, i64 -23
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %684, i64 -31
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = mul <8 x i32> %687, %679
  %698 = mul <8 x i32> %690, %680
  %699 = mul <8 x i32> %693, %681
  %700 = mul <8 x i32> %696, %682
  %701 = add nuw i64 %678, 32
  %702 = icmp eq i64 %701, %675
  br i1 %702, label %703, label %677, !llvm.loop !784

703:                                              ; preds = %677
  %704 = mul <8 x i32> %698, %697
  %705 = mul <8 x i32> %699, %704
  %706 = mul <8 x i32> %700, %705
  %707 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %706)
  %708 = icmp eq i64 %671, %675
  br i1 %708, label %721, label %709

709:                                              ; preds = %662, %703
  %710 = phi i64 [ %665, %662 ], [ %676, %703 ]
  %711 = phi i32 [ 1, %662 ], [ %707, %703 ]
  br label %712

712:                                              ; preds = %709, %712
  %713 = phi i64 [ %718, %712 ], [ %710, %709 ]
  %714 = phi i32 [ %717, %712 ], [ %711, %709 ]
  %715 = getelementptr inbounds i32, ptr %9, i64 %713
  %716 = load i32, ptr %715, align 4, !tbaa !5
  %717 = mul nsw i32 %716, %714
  %718 = add nsw i64 %713, -1
  %719 = trunc i64 %713 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %712, label %721, !llvm.loop !785

721:                                              ; preds = %712, %703
  %722 = phi i32 [ %707, %703 ], [ %717, %712 ]
  %723 = and i64 %672, 4294967295
  %724 = getelementptr inbounds i32, ptr %6, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !5
  %726 = mul nsw i32 %725, %722
  %727 = add nsw i32 %726, %666
  %728 = icmp sgt i64 %664, 2
  %729 = add nsw i64 %665, -1
  %730 = add i32 %663, 1
  br i1 %728, label %662, label %731, !llvm.loop !786

731:                                              ; preds = %721, %658
  %732 = phi i32 [ %661, %658 ], [ %727, %721 ]
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %2, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !18
  %736 = getelementptr inbounds i64, ptr %627, i64 %733
  %737 = load i64, ptr %736, align 8, !tbaa !120
  %738 = trunc i64 %737 to i32
  %739 = load i32, ptr %629, align 4, !tbaa !5
  %740 = sitofp i32 %739 to double
  %741 = sitofp i32 %738 to double
  %742 = fmul fast double %735, %741
  %743 = fadd fast double %742, %740
  %744 = fptosi double %743 to i32
  store i32 %744, ptr %629, align 4, !tbaa !5
  %745 = fadd fast double %735, %660
  %746 = add nuw nsw i32 %659, 1
  br i1 %652, label %747, label %794

747:                                              ; preds = %731
  %748 = load i32, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %12, align 4, !tbaa !5
  %750 = add nsw i32 %749, -1
  %751 = icmp slt i32 %748, %750
  br i1 %751, label %771, label %752

752:                                              ; preds = %747
  %753 = icmp eq i32 %748, %750
  br i1 %753, label %754, label %787

754:                                              ; preds = %752
  store i32 0, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %755, ptr %6, align 4, !tbaa !5
  br i1 %657, label %794, label %756

756:                                              ; preds = %754, %781
  %757 = phi i64 [ %785, %781 ], [ 1, %754 ]
  %758 = getelementptr inbounds i32, ptr %4, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %12, i64 %757
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %759, %762
  br i1 %763, label %764, label %779

764:                                              ; preds = %756
  br i1 %751, label %771, label %765

765:                                              ; preds = %764
  %766 = getelementptr inbounds i32, ptr %7, i64 %757
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %6, i64 %757
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = add nsw i32 %769, %767
  store i32 %770, ptr %768, align 4, !tbaa !5
  br label %789

771:                                              ; preds = %747, %764
  %772 = phi i32 [ %759, %764 ], [ %748, %747 ]
  %773 = phi ptr [ %758, %764 ], [ %4, %747 ]
  %774 = phi i64 [ %757, %764 ], [ 0, %747 ]
  %775 = add nsw i32 %772, 1
  store i32 %775, ptr %773, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %7, i64 %774
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %774
  br label %789

779:                                              ; preds = %756
  %780 = icmp eq i32 %759, %762
  br i1 %780, label %781, label %787

781:                                              ; preds = %779
  store i32 0, ptr %758, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %8, i64 %757
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %757
  store i32 %783, ptr %784, align 4, !tbaa !5
  %785 = add nuw nsw i64 %757, 1
  %786 = icmp eq i64 %785, %655
  br i1 %786, label %794, label %756, !llvm.loop !787

787:                                              ; preds = %752, %779
  %788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

789:                                              ; preds = %765, %771
  %790 = phi ptr [ %778, %771 ], [ %758, %765 ]
  %791 = phi i32 [ %777, %771 ], [ 1, %765 ]
  %792 = load i32, ptr %790, align 4, !tbaa !5
  %793 = add nsw i32 %792, %791
  store i32 %793, ptr %790, align 4, !tbaa !5
  br label %794

794:                                              ; preds = %781, %789, %754, %731
  %795 = icmp eq i32 %746, %5
  br i1 %795, label %5447, label %658, !llvm.loop !788

796:                                              ; preds = %641, %931
  %797 = phi i32 [ 0, %641 ], [ %880, %931 ]
  %798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %642, label %799, label %868

799:                                              ; preds = %796, %858
  %800 = phi i32 [ %867, %858 ], [ 0, %796 ]
  %801 = phi i64 [ %809, %858 ], [ %646, %796 ]
  %802 = phi i64 [ %866, %858 ], [ %645, %796 ]
  %803 = phi i32 [ %864, %858 ], [ %798, %796 ]
  %804 = sub i32 %644, %800
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 0)
  %806 = sub i32 %804, %805
  %807 = zext i32 %806 to i64
  %808 = add nuw nsw i64 %807, 1
  %809 = add nsw i64 %801, -1
  %810 = icmp ult i32 %806, 31
  br i1 %810, label %846, label %811

811:                                              ; preds = %799
  %812 = and i64 %808, 8589934560
  %813 = sub i64 %802, %812
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %838, %814 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %834, %814 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %835, %814 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %836, %814 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %837, %814 ]
  %820 = sub i64 %802, %815
  %821 = getelementptr inbounds i32, ptr %11, i64 %820
  %822 = getelementptr inbounds i32, ptr %821, i64 -7
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %821, i64 -15
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %821, i64 -23
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %821, i64 -31
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = mul <8 x i32> %824, %816
  %835 = mul <8 x i32> %827, %817
  %836 = mul <8 x i32> %830, %818
  %837 = mul <8 x i32> %833, %819
  %838 = add nuw i64 %815, 32
  %839 = icmp eq i64 %838, %812
  br i1 %839, label %840, label %814, !llvm.loop !789

840:                                              ; preds = %814
  %841 = mul <8 x i32> %835, %834
  %842 = mul <8 x i32> %836, %841
  %843 = mul <8 x i32> %837, %842
  %844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %843)
  %845 = icmp eq i64 %808, %812
  br i1 %845, label %858, label %846

846:                                              ; preds = %799, %840
  %847 = phi i64 [ %802, %799 ], [ %813, %840 ]
  %848 = phi i32 [ 1, %799 ], [ %844, %840 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %855, %849 ], [ %847, %846 ]
  %851 = phi i32 [ %854, %849 ], [ %848, %846 ]
  %852 = getelementptr inbounds i32, ptr %11, i64 %850
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %851
  %855 = add nsw i64 %850, -1
  %856 = trunc i64 %850 to i32
  %857 = icmp sgt i32 %856, 0
  br i1 %857, label %849, label %858, !llvm.loop !790

858:                                              ; preds = %849, %840
  %859 = phi i32 [ %844, %840 ], [ %854, %849 ]
  %860 = and i64 %809, 4294967295
  %861 = getelementptr inbounds i32, ptr %6, i64 %860
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = mul nsw i32 %862, %859
  %864 = add nsw i32 %863, %803
  %865 = icmp sgt i64 %801, 2
  %866 = add nsw i64 %802, -1
  %867 = add i32 %800, 1
  br i1 %865, label %799, label %868, !llvm.loop !791

868:                                              ; preds = %858, %796
  %869 = phi i32 [ %798, %796 ], [ %864, %858 ]
  %870 = icmp slt i32 %869, %5
  br i1 %870, label %873, label %871

871:                                              ; preds = %868
  %872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

873:                                              ; preds = %868
  %874 = sext i32 %869 to i64
  %875 = getelementptr inbounds i64, ptr %627, i64 %874
  %876 = load i64, ptr %875, align 8, !tbaa !120
  %877 = load i32, ptr %629, align 4, !tbaa !5
  %878 = trunc i64 %876 to i32
  %879 = add i32 %877, %878
  store i32 %879, ptr %629, align 4, !tbaa !5
  %880 = add nuw nsw i32 %797, 1
  br i1 %643, label %881, label %931

881:                                              ; preds = %873
  %882 = load i32, ptr %4, align 4, !tbaa !5
  %883 = load i32, ptr %12, align 4, !tbaa !5
  %884 = add nsw i32 %883, -1
  %885 = icmp slt i32 %882, %884
  br i1 %885, label %908, label %886

886:                                              ; preds = %881
  %887 = icmp eq i32 %882, %884
  br i1 %887, label %888, label %924

888:                                              ; preds = %886
  store i32 0, ptr %4, align 4, !tbaa !5
  %889 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %889, ptr %6, align 4, !tbaa !5
  br i1 %648, label %931, label %890

890:                                              ; preds = %888, %918
  %891 = phi i64 [ %922, %918 ], [ 1, %888 ]
  %892 = getelementptr inbounds i32, ptr %4, i64 %891
  %893 = load i32, ptr %892, align 4, !tbaa !5
  %894 = getelementptr inbounds i32, ptr %12, i64 %891
  %895 = load i32, ptr %894, align 4, !tbaa !5
  %896 = add nsw i32 %895, -1
  %897 = icmp slt i32 %893, %896
  br i1 %897, label %898, label %916

898:                                              ; preds = %890
  br i1 %885, label %908, label %899

899:                                              ; preds = %898
  %900 = shl i64 %891, 32
  %901 = add i64 %900, -4294967296
  %902 = ashr exact i64 %901, 32
  %903 = getelementptr inbounds i32, ptr %7, i64 %902
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = getelementptr inbounds i32, ptr %6, i64 %891
  %906 = load i32, ptr %905, align 4, !tbaa !5
  %907 = add nsw i32 %906, %904
  store i32 %907, ptr %905, align 4, !tbaa !5
  br label %926

908:                                              ; preds = %881, %898
  %909 = phi i32 [ %893, %898 ], [ %882, %881 ]
  %910 = phi ptr [ %892, %898 ], [ %4, %881 ]
  %911 = phi i64 [ %891, %898 ], [ 0, %881 ]
  %912 = add nsw i32 %909, 1
  store i32 %912, ptr %910, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %7, i64 %911
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %911
  br label %926

916:                                              ; preds = %890
  %917 = icmp eq i32 %893, %896
  br i1 %917, label %918, label %924

918:                                              ; preds = %916
  store i32 0, ptr %892, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %8, i64 %891
  %920 = load i32, ptr %919, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %6, i64 %891
  store i32 %920, ptr %921, align 4, !tbaa !5
  %922 = add nuw nsw i64 %891, 1
  %923 = icmp eq i64 %922, %646
  br i1 %923, label %931, label %890, !llvm.loop !792

924:                                              ; preds = %886, %916
  %925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

926:                                              ; preds = %899, %908
  %927 = phi ptr [ %915, %908 ], [ %892, %899 ]
  %928 = phi i32 [ %914, %908 ], [ 1, %899 ]
  %929 = load i32, ptr %927, align 4, !tbaa !5
  %930 = add nsw i32 %929, %928
  store i32 %930, ptr %927, align 4, !tbaa !5
  br label %931

931:                                              ; preds = %918, %926, %888, %873
  %932 = icmp eq i32 %880, %5
  br i1 %932, label %5447, label %796, !llvm.loop !793

933:                                              ; preds = %634
  %934 = getelementptr inbounds i32, ptr %3, i64 %19
  %935 = load i32, ptr %934, align 4, !tbaa !5
  %936 = icmp eq i32 %935, 0
  %937 = icmp sgt i32 %5, 0
  br i1 %936, label %947, label %938

938:                                              ; preds = %933
  br i1 %937, label %939, label %5447

939:                                              ; preds = %938
  %940 = icmp sgt i32 %13, 1
  %941 = icmp sgt i32 %13, 0
  %942 = add i32 %13, -2
  %943 = zext i32 %942 to i64
  %944 = zext i32 %13 to i64
  %945 = add nuw i32 %5, 1
  %946 = icmp eq i32 %13, 1
  br label %1088

947:                                              ; preds = %933
  br i1 %937, label %948, label %5447

948:                                              ; preds = %947
  %949 = icmp sgt i32 %13, 1
  %950 = icmp sgt i32 %13, 0
  %951 = add i32 %13, -2
  %952 = zext i32 %951 to i64
  %953 = zext i32 %13 to i64
  %954 = add nuw i32 %5, 1
  %955 = icmp eq i32 %13, 1
  br label %956

956:                                              ; preds = %948, %1086
  %957 = phi i32 [ 0, %948 ], [ %1038, %1086 ]
  %958 = phi double [ 0.000000e+00, %948 ], [ %1037, %1086 ]
  %959 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %949, label %960, label %1029

960:                                              ; preds = %956, %1019
  %961 = phi i32 [ %1028, %1019 ], [ 0, %956 ]
  %962 = phi i64 [ %970, %1019 ], [ %953, %956 ]
  %963 = phi i64 [ %1027, %1019 ], [ %952, %956 ]
  %964 = phi i32 [ %1025, %1019 ], [ %959, %956 ]
  %965 = sub i32 %951, %961
  %966 = tail call i32 @llvm.smin.i32(i32 %965, i32 0)
  %967 = sub i32 %965, %966
  %968 = zext i32 %967 to i64
  %969 = add nuw nsw i64 %968, 1
  %970 = add nsw i64 %962, -1
  %971 = icmp ult i32 %967, 31
  br i1 %971, label %1007, label %972

972:                                              ; preds = %960
  %973 = and i64 %969, 8589934560
  %974 = sub i64 %963, %973
  br label %975

975:                                              ; preds = %975, %972
  %976 = phi i64 [ 0, %972 ], [ %999, %975 ]
  %977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %972 ], [ %995, %975 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %972 ], [ %996, %975 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %972 ], [ %997, %975 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %972 ], [ %998, %975 ]
  %981 = sub i64 %963, %976
  %982 = getelementptr inbounds i32, ptr %9, i64 %981
  %983 = getelementptr inbounds i32, ptr %982, i64 -7
  %984 = load <8 x i32>, ptr %983, align 4, !tbaa !5
  %985 = shufflevector <8 x i32> %984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %986 = getelementptr inbounds i32, ptr %982, i64 -15
  %987 = load <8 x i32>, ptr %986, align 4, !tbaa !5
  %988 = shufflevector <8 x i32> %987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %989 = getelementptr inbounds i32, ptr %982, i64 -23
  %990 = load <8 x i32>, ptr %989, align 4, !tbaa !5
  %991 = shufflevector <8 x i32> %990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %992 = getelementptr inbounds i32, ptr %982, i64 -31
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = mul <8 x i32> %985, %977
  %996 = mul <8 x i32> %988, %978
  %997 = mul <8 x i32> %991, %979
  %998 = mul <8 x i32> %994, %980
  %999 = add nuw i64 %976, 32
  %1000 = icmp eq i64 %999, %973
  br i1 %1000, label %1001, label %975, !llvm.loop !794

1001:                                             ; preds = %975
  %1002 = mul <8 x i32> %996, %995
  %1003 = mul <8 x i32> %997, %1002
  %1004 = mul <8 x i32> %998, %1003
  %1005 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1004)
  %1006 = icmp eq i64 %969, %973
  br i1 %1006, label %1019, label %1007

1007:                                             ; preds = %960, %1001
  %1008 = phi i64 [ %963, %960 ], [ %974, %1001 ]
  %1009 = phi i32 [ 1, %960 ], [ %1005, %1001 ]
  br label %1010

1010:                                             ; preds = %1007, %1010
  %1011 = phi i64 [ %1016, %1010 ], [ %1008, %1007 ]
  %1012 = phi i32 [ %1015, %1010 ], [ %1009, %1007 ]
  %1013 = getelementptr inbounds i32, ptr %9, i64 %1011
  %1014 = load i32, ptr %1013, align 4, !tbaa !5
  %1015 = mul nsw i32 %1014, %1012
  %1016 = add nsw i64 %1011, -1
  %1017 = trunc i64 %1011 to i32
  %1018 = icmp sgt i32 %1017, 0
  br i1 %1018, label %1010, label %1019, !llvm.loop !795

1019:                                             ; preds = %1010, %1001
  %1020 = phi i32 [ %1005, %1001 ], [ %1015, %1010 ]
  %1021 = and i64 %970, 4294967295
  %1022 = getelementptr inbounds i32, ptr %6, i64 %1021
  %1023 = load i32, ptr %1022, align 4, !tbaa !5
  %1024 = mul nsw i32 %1023, %1020
  %1025 = add nsw i32 %1024, %964
  %1026 = icmp sgt i64 %962, 2
  %1027 = add nsw i64 %963, -1
  %1028 = add i32 %961, 1
  br i1 %1026, label %960, label %1029, !llvm.loop !796

1029:                                             ; preds = %1019, %956
  %1030 = phi i32 [ %959, %956 ], [ %1025, %1019 ]
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds i64, ptr %627, i64 %1031
  %1033 = load i64, ptr %1032, align 8, !tbaa !120
  %1034 = trunc i64 %1033 to i32
  %1035 = load i32, ptr %629, align 4, !tbaa !5
  %1036 = add nsw i32 %1035, %1034
  store i32 %1036, ptr %629, align 4, !tbaa !5
  %1037 = fadd fast double %958, 1.000000e+00
  %1038 = add nuw nsw i32 %957, 1
  br i1 %950, label %1039, label %1086

1039:                                             ; preds = %1029
  %1040 = load i32, ptr %4, align 4, !tbaa !5
  %1041 = load i32, ptr %12, align 4, !tbaa !5
  %1042 = add nsw i32 %1041, -1
  %1043 = icmp slt i32 %1040, %1042
  br i1 %1043, label %1063, label %1044

1044:                                             ; preds = %1039
  %1045 = icmp eq i32 %1040, %1042
  br i1 %1045, label %1046, label %1079

1046:                                             ; preds = %1044
  store i32 0, ptr %4, align 4, !tbaa !5
  %1047 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1047, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1086, label %1048

1048:                                             ; preds = %1046, %1073
  %1049 = phi i64 [ %1077, %1073 ], [ 1, %1046 ]
  %1050 = getelementptr inbounds i32, ptr %4, i64 %1049
  %1051 = load i32, ptr %1050, align 4, !tbaa !5
  %1052 = getelementptr inbounds i32, ptr %12, i64 %1049
  %1053 = load i32, ptr %1052, align 4, !tbaa !5
  %1054 = add nsw i32 %1053, -1
  %1055 = icmp slt i32 %1051, %1054
  br i1 %1055, label %1056, label %1071

1056:                                             ; preds = %1048
  br i1 %1043, label %1063, label %1057

1057:                                             ; preds = %1056
  %1058 = getelementptr inbounds i32, ptr %7, i64 %1049
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = getelementptr inbounds i32, ptr %6, i64 %1049
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = add nsw i32 %1061, %1059
  store i32 %1062, ptr %1060, align 4, !tbaa !5
  br label %1081

1063:                                             ; preds = %1039, %1056
  %1064 = phi i32 [ %1051, %1056 ], [ %1040, %1039 ]
  %1065 = phi ptr [ %1050, %1056 ], [ %4, %1039 ]
  %1066 = phi i64 [ %1049, %1056 ], [ 0, %1039 ]
  %1067 = add nsw i32 %1064, 1
  store i32 %1067, ptr %1065, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %7, i64 %1066
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %6, i64 %1066
  br label %1081

1071:                                             ; preds = %1048
  %1072 = icmp eq i32 %1051, %1054
  br i1 %1072, label %1073, label %1079

1073:                                             ; preds = %1071
  store i32 0, ptr %1050, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %8, i64 %1049
  %1075 = load i32, ptr %1074, align 4, !tbaa !5
  %1076 = getelementptr inbounds i32, ptr %6, i64 %1049
  store i32 %1075, ptr %1076, align 4, !tbaa !5
  %1077 = add nuw nsw i64 %1049, 1
  %1078 = icmp eq i64 %1077, %953
  br i1 %1078, label %1086, label %1048, !llvm.loop !797

1079:                                             ; preds = %1044, %1071
  %1080 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1081:                                             ; preds = %1057, %1063
  %1082 = phi ptr [ %1070, %1063 ], [ %1050, %1057 ]
  %1083 = phi i32 [ %1069, %1063 ], [ 1, %1057 ]
  %1084 = load i32, ptr %1082, align 4, !tbaa !5
  %1085 = add nsw i32 %1084, %1083
  store i32 %1085, ptr %1082, align 4, !tbaa !5
  br label %1086

1086:                                             ; preds = %1073, %1081, %1046, %1029
  %1087 = icmp eq i32 %1038, %5
  br i1 %1087, label %5447, label %956, !llvm.loop !798

1088:                                             ; preds = %939, %1223
  %1089 = phi i32 [ 0, %939 ], [ %1172, %1223 ]
  %1090 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %940, label %1091, label %1160

1091:                                             ; preds = %1088, %1150
  %1092 = phi i32 [ %1159, %1150 ], [ 0, %1088 ]
  %1093 = phi i64 [ %1101, %1150 ], [ %944, %1088 ]
  %1094 = phi i64 [ %1158, %1150 ], [ %943, %1088 ]
  %1095 = phi i32 [ %1156, %1150 ], [ %1090, %1088 ]
  %1096 = sub i32 %942, %1092
  %1097 = tail call i32 @llvm.smin.i32(i32 %1096, i32 0)
  %1098 = sub i32 %1096, %1097
  %1099 = zext i32 %1098 to i64
  %1100 = add nuw nsw i64 %1099, 1
  %1101 = add nsw i64 %1093, -1
  %1102 = icmp ult i32 %1098, 31
  br i1 %1102, label %1138, label %1103

1103:                                             ; preds = %1091
  %1104 = and i64 %1100, 8589934560
  %1105 = sub i64 %1094, %1104
  br label %1106

1106:                                             ; preds = %1106, %1103
  %1107 = phi i64 [ 0, %1103 ], [ %1130, %1106 ]
  %1108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1126, %1106 ]
  %1109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1127, %1106 ]
  %1110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1128, %1106 ]
  %1111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1129, %1106 ]
  %1112 = sub i64 %1094, %1107
  %1113 = getelementptr inbounds i32, ptr %11, i64 %1112
  %1114 = getelementptr inbounds i32, ptr %1113, i64 -7
  %1115 = load <8 x i32>, ptr %1114, align 4, !tbaa !5
  %1116 = shufflevector <8 x i32> %1115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1117 = getelementptr inbounds i32, ptr %1113, i64 -15
  %1118 = load <8 x i32>, ptr %1117, align 4, !tbaa !5
  %1119 = shufflevector <8 x i32> %1118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1120 = getelementptr inbounds i32, ptr %1113, i64 -23
  %1121 = load <8 x i32>, ptr %1120, align 4, !tbaa !5
  %1122 = shufflevector <8 x i32> %1121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1123 = getelementptr inbounds i32, ptr %1113, i64 -31
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = mul <8 x i32> %1116, %1108
  %1127 = mul <8 x i32> %1119, %1109
  %1128 = mul <8 x i32> %1122, %1110
  %1129 = mul <8 x i32> %1125, %1111
  %1130 = add nuw i64 %1107, 32
  %1131 = icmp eq i64 %1130, %1104
  br i1 %1131, label %1132, label %1106, !llvm.loop !799

1132:                                             ; preds = %1106
  %1133 = mul <8 x i32> %1127, %1126
  %1134 = mul <8 x i32> %1128, %1133
  %1135 = mul <8 x i32> %1129, %1134
  %1136 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1135)
  %1137 = icmp eq i64 %1100, %1104
  br i1 %1137, label %1150, label %1138

1138:                                             ; preds = %1091, %1132
  %1139 = phi i64 [ %1094, %1091 ], [ %1105, %1132 ]
  %1140 = phi i32 [ 1, %1091 ], [ %1136, %1132 ]
  br label %1141

1141:                                             ; preds = %1138, %1141
  %1142 = phi i64 [ %1147, %1141 ], [ %1139, %1138 ]
  %1143 = phi i32 [ %1146, %1141 ], [ %1140, %1138 ]
  %1144 = getelementptr inbounds i32, ptr %11, i64 %1142
  %1145 = load i32, ptr %1144, align 4, !tbaa !5
  %1146 = mul nsw i32 %1145, %1143
  %1147 = add nsw i64 %1142, -1
  %1148 = trunc i64 %1142 to i32
  %1149 = icmp sgt i32 %1148, 0
  br i1 %1149, label %1141, label %1150, !llvm.loop !800

1150:                                             ; preds = %1141, %1132
  %1151 = phi i32 [ %1136, %1132 ], [ %1146, %1141 ]
  %1152 = and i64 %1101, 4294967295
  %1153 = getelementptr inbounds i32, ptr %6, i64 %1152
  %1154 = load i32, ptr %1153, align 4, !tbaa !5
  %1155 = mul nsw i32 %1154, %1151
  %1156 = add nsw i32 %1155, %1095
  %1157 = icmp sgt i64 %1093, 2
  %1158 = add nsw i64 %1094, -1
  %1159 = add i32 %1092, 1
  br i1 %1157, label %1091, label %1160, !llvm.loop !801

1160:                                             ; preds = %1150, %1088
  %1161 = phi i32 [ %1090, %1088 ], [ %1156, %1150 ]
  %1162 = icmp slt i32 %1161, %5
  br i1 %1162, label %1165, label %1163

1163:                                             ; preds = %1160
  %1164 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

1165:                                             ; preds = %1160
  %1166 = sext i32 %1161 to i64
  %1167 = getelementptr inbounds i64, ptr %627, i64 %1166
  %1168 = load i64, ptr %1167, align 8, !tbaa !120
  %1169 = trunc i64 %1168 to i32
  %1170 = load i32, ptr %629, align 4, !tbaa !5
  %1171 = add nsw i32 %1170, %1169
  store i32 %1171, ptr %629, align 4, !tbaa !5
  %1172 = add nuw nsw i32 %1089, 1
  br i1 %941, label %1173, label %1223

1173:                                             ; preds = %1165
  %1174 = load i32, ptr %4, align 4, !tbaa !5
  %1175 = load i32, ptr %12, align 4, !tbaa !5
  %1176 = add nsw i32 %1175, -1
  %1177 = icmp slt i32 %1174, %1176
  br i1 %1177, label %1200, label %1178

1178:                                             ; preds = %1173
  %1179 = icmp eq i32 %1174, %1176
  br i1 %1179, label %1180, label %1216

1180:                                             ; preds = %1178
  store i32 0, ptr %4, align 4, !tbaa !5
  %1181 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1181, ptr %6, align 4, !tbaa !5
  br i1 %946, label %1223, label %1182

1182:                                             ; preds = %1180, %1210
  %1183 = phi i64 [ %1214, %1210 ], [ 1, %1180 ]
  %1184 = getelementptr inbounds i32, ptr %4, i64 %1183
  %1185 = load i32, ptr %1184, align 4, !tbaa !5
  %1186 = getelementptr inbounds i32, ptr %12, i64 %1183
  %1187 = load i32, ptr %1186, align 4, !tbaa !5
  %1188 = add nsw i32 %1187, -1
  %1189 = icmp slt i32 %1185, %1188
  br i1 %1189, label %1190, label %1208

1190:                                             ; preds = %1182
  br i1 %1177, label %1200, label %1191

1191:                                             ; preds = %1190
  %1192 = shl i64 %1183, 32
  %1193 = add i64 %1192, -4294967296
  %1194 = ashr exact i64 %1193, 32
  %1195 = getelementptr inbounds i32, ptr %7, i64 %1194
  %1196 = load i32, ptr %1195, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %6, i64 %1183
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = add nsw i32 %1198, %1196
  store i32 %1199, ptr %1197, align 4, !tbaa !5
  br label %1218

1200:                                             ; preds = %1173, %1190
  %1201 = phi i32 [ %1185, %1190 ], [ %1174, %1173 ]
  %1202 = phi ptr [ %1184, %1190 ], [ %4, %1173 ]
  %1203 = phi i64 [ %1183, %1190 ], [ 0, %1173 ]
  %1204 = add nsw i32 %1201, 1
  store i32 %1204, ptr %1202, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1203
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1203
  br label %1218

1208:                                             ; preds = %1182
  %1209 = icmp eq i32 %1185, %1188
  br i1 %1209, label %1210, label %1216

1210:                                             ; preds = %1208
  store i32 0, ptr %1184, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %8, i64 %1183
  %1212 = load i32, ptr %1211, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1183
  store i32 %1212, ptr %1213, align 4, !tbaa !5
  %1214 = add nuw nsw i64 %1183, 1
  %1215 = icmp eq i64 %1214, %944
  br i1 %1215, label %1223, label %1182, !llvm.loop !802

1216:                                             ; preds = %1178, %1208
  %1217 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1218:                                             ; preds = %1191, %1200
  %1219 = phi ptr [ %1207, %1200 ], [ %1184, %1191 ]
  %1220 = phi i32 [ %1206, %1200 ], [ 1, %1191 ]
  %1221 = load i32, ptr %1219, align 4, !tbaa !5
  %1222 = add nsw i32 %1221, %1220
  store i32 %1222, ptr %1219, align 4, !tbaa !5
  br label %1223

1223:                                             ; preds = %1210, %1218, %1180, %1165
  %1224 = icmp eq i32 %1172, %5
  br i1 %1224, label %5447, label %1088, !llvm.loop !803

1225:                                             ; preds = %634
  %1226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

1227:                                             ; preds = %18
  %1228 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1229 = load ptr, ptr %1228, align 8, !tbaa !9
  %1230 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1231 = load ptr, ptr %1230, align 8, !tbaa !9
  store i8 0, ptr %1231, align 1, !tbaa !11
  %1232 = icmp eq i32 %13, 0
  br i1 %1232, label %1233, label %1236

1233:                                             ; preds = %1227
  %1234 = load i64, ptr %1229, align 8, !tbaa !120
  %1235 = trunc i64 %1234 to i8
  store i8 %1235, ptr %1231, align 1, !tbaa !11
  br label %5447

1236:                                             ; preds = %1227
  switch i32 %1, label %1829 [
    i32 1, label %1237
    i32 0, label %1537
  ]

1237:                                             ; preds = %1236
  %1238 = getelementptr inbounds i32, ptr %3, i64 %19
  %1239 = load i32, ptr %1238, align 4, !tbaa !5
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp sgt i32 %5, 0
  br i1 %1240, label %1251, label %1242

1242:                                             ; preds = %1237
  br i1 %1241, label %1243, label %5447

1243:                                             ; preds = %1242
  %1244 = icmp sgt i32 %13, 1
  %1245 = icmp sgt i32 %13, 0
  %1246 = add i32 %13, -2
  %1247 = zext i32 %1246 to i64
  %1248 = zext i32 %13 to i64
  %1249 = add nuw i32 %5, 1
  %1250 = icmp eq i32 %13, 1
  br label %1400

1251:                                             ; preds = %1237
  br i1 %1241, label %1252, label %5447

1252:                                             ; preds = %1251
  %1253 = icmp sgt i32 %13, 1
  %1254 = icmp sgt i32 %13, 0
  %1255 = add i32 %13, -2
  %1256 = zext i32 %1255 to i64
  %1257 = zext i32 %13 to i64
  %1258 = add nuw i32 %5, 1
  %1259 = icmp eq i32 %13, 1
  br label %1260

1260:                                             ; preds = %1252, %1398
  %1261 = phi i32 [ 0, %1252 ], [ %1350, %1398 ]
  %1262 = phi double [ 0.000000e+00, %1252 ], [ %1349, %1398 ]
  %1263 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1264, label %1333

1264:                                             ; preds = %1260, %1323
  %1265 = phi i32 [ %1332, %1323 ], [ 0, %1260 ]
  %1266 = phi i64 [ %1274, %1323 ], [ %1257, %1260 ]
  %1267 = phi i64 [ %1331, %1323 ], [ %1256, %1260 ]
  %1268 = phi i32 [ %1329, %1323 ], [ %1263, %1260 ]
  %1269 = sub i32 %1255, %1265
  %1270 = tail call i32 @llvm.smin.i32(i32 %1269, i32 0)
  %1271 = sub i32 %1269, %1270
  %1272 = zext i32 %1271 to i64
  %1273 = add nuw nsw i64 %1272, 1
  %1274 = add nsw i64 %1266, -1
  %1275 = icmp ult i32 %1271, 31
  br i1 %1275, label %1311, label %1276

1276:                                             ; preds = %1264
  %1277 = and i64 %1273, 8589934560
  %1278 = sub i64 %1267, %1277
  br label %1279

1279:                                             ; preds = %1279, %1276
  %1280 = phi i64 [ 0, %1276 ], [ %1303, %1279 ]
  %1281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1276 ], [ %1299, %1279 ]
  %1282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1276 ], [ %1300, %1279 ]
  %1283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1276 ], [ %1301, %1279 ]
  %1284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1276 ], [ %1302, %1279 ]
  %1285 = sub i64 %1267, %1280
  %1286 = getelementptr inbounds i32, ptr %9, i64 %1285
  %1287 = getelementptr inbounds i32, ptr %1286, i64 -7
  %1288 = load <8 x i32>, ptr %1287, align 4, !tbaa !5
  %1289 = shufflevector <8 x i32> %1288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1290 = getelementptr inbounds i32, ptr %1286, i64 -15
  %1291 = load <8 x i32>, ptr %1290, align 4, !tbaa !5
  %1292 = shufflevector <8 x i32> %1291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1293 = getelementptr inbounds i32, ptr %1286, i64 -23
  %1294 = load <8 x i32>, ptr %1293, align 4, !tbaa !5
  %1295 = shufflevector <8 x i32> %1294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1296 = getelementptr inbounds i32, ptr %1286, i64 -31
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = mul <8 x i32> %1289, %1281
  %1300 = mul <8 x i32> %1292, %1282
  %1301 = mul <8 x i32> %1295, %1283
  %1302 = mul <8 x i32> %1298, %1284
  %1303 = add nuw i64 %1280, 32
  %1304 = icmp eq i64 %1303, %1277
  br i1 %1304, label %1305, label %1279, !llvm.loop !804

1305:                                             ; preds = %1279
  %1306 = mul <8 x i32> %1300, %1299
  %1307 = mul <8 x i32> %1301, %1306
  %1308 = mul <8 x i32> %1302, %1307
  %1309 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1308)
  %1310 = icmp eq i64 %1273, %1277
  br i1 %1310, label %1323, label %1311

1311:                                             ; preds = %1264, %1305
  %1312 = phi i64 [ %1267, %1264 ], [ %1278, %1305 ]
  %1313 = phi i32 [ 1, %1264 ], [ %1309, %1305 ]
  br label %1314

1314:                                             ; preds = %1311, %1314
  %1315 = phi i64 [ %1320, %1314 ], [ %1312, %1311 ]
  %1316 = phi i32 [ %1319, %1314 ], [ %1313, %1311 ]
  %1317 = getelementptr inbounds i32, ptr %9, i64 %1315
  %1318 = load i32, ptr %1317, align 4, !tbaa !5
  %1319 = mul nsw i32 %1318, %1316
  %1320 = add nsw i64 %1315, -1
  %1321 = trunc i64 %1315 to i32
  %1322 = icmp sgt i32 %1321, 0
  br i1 %1322, label %1314, label %1323, !llvm.loop !805

1323:                                             ; preds = %1314, %1305
  %1324 = phi i32 [ %1309, %1305 ], [ %1319, %1314 ]
  %1325 = and i64 %1274, 4294967295
  %1326 = getelementptr inbounds i32, ptr %6, i64 %1325
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1324
  %1329 = add nsw i32 %1328, %1268
  %1330 = icmp sgt i64 %1266, 2
  %1331 = add nsw i64 %1267, -1
  %1332 = add i32 %1265, 1
  br i1 %1330, label %1264, label %1333, !llvm.loop !806

1333:                                             ; preds = %1323, %1260
  %1334 = phi i32 [ %1263, %1260 ], [ %1329, %1323 ]
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds double, ptr %2, i64 %1335
  %1337 = load double, ptr %1336, align 8, !tbaa !18
  %1338 = getelementptr inbounds i64, ptr %1229, i64 %1335
  %1339 = load i64, ptr %1338, align 8, !tbaa !120
  %1340 = trunc i64 %1339 to i32
  %1341 = load i8, ptr %1231, align 1, !tbaa !11
  %1342 = sitofp i8 %1341 to double
  %1343 = shl i32 %1340, 24
  %1344 = ashr exact i32 %1343, 24
  %1345 = sitofp i32 %1344 to double
  %1346 = fmul fast double %1337, %1345
  %1347 = fadd fast double %1346, %1342
  %1348 = fptosi double %1347 to i8
  store i8 %1348, ptr %1231, align 1, !tbaa !11
  %1349 = fadd fast double %1337, %1262
  %1350 = add nuw nsw i32 %1261, 1
  br i1 %1254, label %1351, label %1398

1351:                                             ; preds = %1333
  %1352 = load i32, ptr %4, align 4, !tbaa !5
  %1353 = load i32, ptr %12, align 4, !tbaa !5
  %1354 = add nsw i32 %1353, -1
  %1355 = icmp slt i32 %1352, %1354
  br i1 %1355, label %1375, label %1356

1356:                                             ; preds = %1351
  %1357 = icmp eq i32 %1352, %1354
  br i1 %1357, label %1358, label %1391

1358:                                             ; preds = %1356
  store i32 0, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1359, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1398, label %1360

1360:                                             ; preds = %1358, %1385
  %1361 = phi i64 [ %1389, %1385 ], [ 1, %1358 ]
  %1362 = getelementptr inbounds i32, ptr %4, i64 %1361
  %1363 = load i32, ptr %1362, align 4, !tbaa !5
  %1364 = getelementptr inbounds i32, ptr %12, i64 %1361
  %1365 = load i32, ptr %1364, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1363, %1366
  br i1 %1367, label %1368, label %1383

1368:                                             ; preds = %1360
  br i1 %1355, label %1375, label %1369

1369:                                             ; preds = %1368
  %1370 = getelementptr inbounds i32, ptr %7, i64 %1361
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = getelementptr inbounds i32, ptr %6, i64 %1361
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = add nsw i32 %1373, %1371
  store i32 %1374, ptr %1372, align 4, !tbaa !5
  br label %1393

1375:                                             ; preds = %1351, %1368
  %1376 = phi i32 [ %1363, %1368 ], [ %1352, %1351 ]
  %1377 = phi ptr [ %1362, %1368 ], [ %4, %1351 ]
  %1378 = phi i64 [ %1361, %1368 ], [ 0, %1351 ]
  %1379 = add nsw i32 %1376, 1
  store i32 %1379, ptr %1377, align 4, !tbaa !5
  %1380 = getelementptr inbounds i32, ptr %7, i64 %1378
  %1381 = load i32, ptr %1380, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %6, i64 %1378
  br label %1393

1383:                                             ; preds = %1360
  %1384 = icmp eq i32 %1363, %1366
  br i1 %1384, label %1385, label %1391

1385:                                             ; preds = %1383
  store i32 0, ptr %1362, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %8, i64 %1361
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1361
  store i32 %1387, ptr %1388, align 4, !tbaa !5
  %1389 = add nuw nsw i64 %1361, 1
  %1390 = icmp eq i64 %1389, %1257
  br i1 %1390, label %1398, label %1360, !llvm.loop !807

1391:                                             ; preds = %1356, %1383
  %1392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1393:                                             ; preds = %1369, %1375
  %1394 = phi ptr [ %1382, %1375 ], [ %1362, %1369 ]
  %1395 = phi i32 [ %1381, %1375 ], [ 1, %1369 ]
  %1396 = load i32, ptr %1394, align 4, !tbaa !5
  %1397 = add nsw i32 %1396, %1395
  store i32 %1397, ptr %1394, align 4, !tbaa !5
  br label %1398

1398:                                             ; preds = %1385, %1393, %1358, %1333
  %1399 = icmp eq i32 %1350, %5
  br i1 %1399, label %5447, label %1260, !llvm.loop !808

1400:                                             ; preds = %1243, %1535
  %1401 = phi i32 [ 0, %1243 ], [ %1484, %1535 ]
  %1402 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1403, label %1472

1403:                                             ; preds = %1400, %1462
  %1404 = phi i32 [ %1471, %1462 ], [ 0, %1400 ]
  %1405 = phi i64 [ %1413, %1462 ], [ %1248, %1400 ]
  %1406 = phi i64 [ %1470, %1462 ], [ %1247, %1400 ]
  %1407 = phi i32 [ %1468, %1462 ], [ %1402, %1400 ]
  %1408 = sub i32 %1246, %1404
  %1409 = tail call i32 @llvm.smin.i32(i32 %1408, i32 0)
  %1410 = sub i32 %1408, %1409
  %1411 = zext i32 %1410 to i64
  %1412 = add nuw nsw i64 %1411, 1
  %1413 = add nsw i64 %1405, -1
  %1414 = icmp ult i32 %1410, 31
  br i1 %1414, label %1450, label %1415

1415:                                             ; preds = %1403
  %1416 = and i64 %1412, 8589934560
  %1417 = sub i64 %1406, %1416
  br label %1418

1418:                                             ; preds = %1418, %1415
  %1419 = phi i64 [ 0, %1415 ], [ %1442, %1418 ]
  %1420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1415 ], [ %1438, %1418 ]
  %1421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1415 ], [ %1439, %1418 ]
  %1422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1415 ], [ %1440, %1418 ]
  %1423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1415 ], [ %1441, %1418 ]
  %1424 = sub i64 %1406, %1419
  %1425 = getelementptr inbounds i32, ptr %11, i64 %1424
  %1426 = getelementptr inbounds i32, ptr %1425, i64 -7
  %1427 = load <8 x i32>, ptr %1426, align 4, !tbaa !5
  %1428 = shufflevector <8 x i32> %1427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1429 = getelementptr inbounds i32, ptr %1425, i64 -15
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = getelementptr inbounds i32, ptr %1425, i64 -23
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = getelementptr inbounds i32, ptr %1425, i64 -31
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = mul <8 x i32> %1428, %1420
  %1439 = mul <8 x i32> %1431, %1421
  %1440 = mul <8 x i32> %1434, %1422
  %1441 = mul <8 x i32> %1437, %1423
  %1442 = add nuw i64 %1419, 32
  %1443 = icmp eq i64 %1442, %1416
  br i1 %1443, label %1444, label %1418, !llvm.loop !809

1444:                                             ; preds = %1418
  %1445 = mul <8 x i32> %1439, %1438
  %1446 = mul <8 x i32> %1440, %1445
  %1447 = mul <8 x i32> %1441, %1446
  %1448 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1447)
  %1449 = icmp eq i64 %1412, %1416
  br i1 %1449, label %1462, label %1450

1450:                                             ; preds = %1403, %1444
  %1451 = phi i64 [ %1406, %1403 ], [ %1417, %1444 ]
  %1452 = phi i32 [ 1, %1403 ], [ %1448, %1444 ]
  br label %1453

1453:                                             ; preds = %1450, %1453
  %1454 = phi i64 [ %1459, %1453 ], [ %1451, %1450 ]
  %1455 = phi i32 [ %1458, %1453 ], [ %1452, %1450 ]
  %1456 = getelementptr inbounds i32, ptr %11, i64 %1454
  %1457 = load i32, ptr %1456, align 4, !tbaa !5
  %1458 = mul nsw i32 %1457, %1455
  %1459 = add nsw i64 %1454, -1
  %1460 = trunc i64 %1454 to i32
  %1461 = icmp sgt i32 %1460, 0
  br i1 %1461, label %1453, label %1462, !llvm.loop !810

1462:                                             ; preds = %1453, %1444
  %1463 = phi i32 [ %1448, %1444 ], [ %1458, %1453 ]
  %1464 = and i64 %1413, 4294967295
  %1465 = getelementptr inbounds i32, ptr %6, i64 %1464
  %1466 = load i32, ptr %1465, align 4, !tbaa !5
  %1467 = mul nsw i32 %1466, %1463
  %1468 = add nsw i32 %1467, %1407
  %1469 = icmp sgt i64 %1405, 2
  %1470 = add nsw i64 %1406, -1
  %1471 = add i32 %1404, 1
  br i1 %1469, label %1403, label %1472, !llvm.loop !811

1472:                                             ; preds = %1462, %1400
  %1473 = phi i32 [ %1402, %1400 ], [ %1468, %1462 ]
  %1474 = icmp slt i32 %1473, %5
  br i1 %1474, label %1477, label %1475

1475:                                             ; preds = %1472
  %1476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

1477:                                             ; preds = %1472
  %1478 = sext i32 %1473 to i64
  %1479 = getelementptr inbounds i64, ptr %1229, i64 %1478
  %1480 = load i64, ptr %1479, align 8, !tbaa !120
  %1481 = load i8, ptr %1231, align 1, !tbaa !11
  %1482 = trunc i64 %1480 to i8
  %1483 = add i8 %1481, %1482
  store i8 %1483, ptr %1231, align 1, !tbaa !11
  %1484 = add nuw nsw i32 %1401, 1
  br i1 %1245, label %1485, label %1535

1485:                                             ; preds = %1477
  %1486 = load i32, ptr %4, align 4, !tbaa !5
  %1487 = load i32, ptr %12, align 4, !tbaa !5
  %1488 = add nsw i32 %1487, -1
  %1489 = icmp slt i32 %1486, %1488
  br i1 %1489, label %1512, label %1490

1490:                                             ; preds = %1485
  %1491 = icmp eq i32 %1486, %1488
  br i1 %1491, label %1492, label %1528

1492:                                             ; preds = %1490
  store i32 0, ptr %4, align 4, !tbaa !5
  %1493 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1493, ptr %6, align 4, !tbaa !5
  br i1 %1250, label %1535, label %1494

1494:                                             ; preds = %1492, %1522
  %1495 = phi i64 [ %1526, %1522 ], [ 1, %1492 ]
  %1496 = getelementptr inbounds i32, ptr %4, i64 %1495
  %1497 = load i32, ptr %1496, align 4, !tbaa !5
  %1498 = getelementptr inbounds i32, ptr %12, i64 %1495
  %1499 = load i32, ptr %1498, align 4, !tbaa !5
  %1500 = add nsw i32 %1499, -1
  %1501 = icmp slt i32 %1497, %1500
  br i1 %1501, label %1502, label %1520

1502:                                             ; preds = %1494
  br i1 %1489, label %1512, label %1503

1503:                                             ; preds = %1502
  %1504 = shl i64 %1495, 32
  %1505 = add i64 %1504, -4294967296
  %1506 = ashr exact i64 %1505, 32
  %1507 = getelementptr inbounds i32, ptr %7, i64 %1506
  %1508 = load i32, ptr %1507, align 4, !tbaa !5
  %1509 = getelementptr inbounds i32, ptr %6, i64 %1495
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = add nsw i32 %1510, %1508
  store i32 %1511, ptr %1509, align 4, !tbaa !5
  br label %1530

1512:                                             ; preds = %1485, %1502
  %1513 = phi i32 [ %1497, %1502 ], [ %1486, %1485 ]
  %1514 = phi ptr [ %1496, %1502 ], [ %4, %1485 ]
  %1515 = phi i64 [ %1495, %1502 ], [ 0, %1485 ]
  %1516 = add nsw i32 %1513, 1
  store i32 %1516, ptr %1514, align 4, !tbaa !5
  %1517 = getelementptr inbounds i32, ptr %7, i64 %1515
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = getelementptr inbounds i32, ptr %6, i64 %1515
  br label %1530

1520:                                             ; preds = %1494
  %1521 = icmp eq i32 %1497, %1500
  br i1 %1521, label %1522, label %1528

1522:                                             ; preds = %1520
  store i32 0, ptr %1496, align 4, !tbaa !5
  %1523 = getelementptr inbounds i32, ptr %8, i64 %1495
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1495
  store i32 %1524, ptr %1525, align 4, !tbaa !5
  %1526 = add nuw nsw i64 %1495, 1
  %1527 = icmp eq i64 %1526, %1248
  br i1 %1527, label %1535, label %1494, !llvm.loop !812

1528:                                             ; preds = %1490, %1520
  %1529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1530:                                             ; preds = %1503, %1512
  %1531 = phi ptr [ %1519, %1512 ], [ %1496, %1503 ]
  %1532 = phi i32 [ %1518, %1512 ], [ 1, %1503 ]
  %1533 = load i32, ptr %1531, align 4, !tbaa !5
  %1534 = add nsw i32 %1533, %1532
  store i32 %1534, ptr %1531, align 4, !tbaa !5
  br label %1535

1535:                                             ; preds = %1522, %1530, %1492, %1477
  %1536 = icmp eq i32 %1484, %5
  br i1 %1536, label %5447, label %1400, !llvm.loop !813

1537:                                             ; preds = %1236
  %1538 = getelementptr inbounds i32, ptr %3, i64 %19
  %1539 = load i32, ptr %1538, align 4, !tbaa !5
  %1540 = icmp eq i32 %1539, 0
  %1541 = icmp sgt i32 %5, 0
  br i1 %1540, label %1551, label %1542

1542:                                             ; preds = %1537
  br i1 %1541, label %1543, label %5447

1543:                                             ; preds = %1542
  %1544 = icmp sgt i32 %13, 1
  %1545 = icmp sgt i32 %13, 0
  %1546 = add i32 %13, -2
  %1547 = zext i32 %1546 to i64
  %1548 = zext i32 %13 to i64
  %1549 = add nuw i32 %5, 1
  %1550 = icmp eq i32 %13, 1
  br label %1692

1551:                                             ; preds = %1537
  br i1 %1541, label %1552, label %5447

1552:                                             ; preds = %1551
  %1553 = icmp sgt i32 %13, 1
  %1554 = icmp sgt i32 %13, 0
  %1555 = add i32 %13, -2
  %1556 = zext i32 %1555 to i64
  %1557 = zext i32 %13 to i64
  %1558 = add nuw i32 %5, 1
  %1559 = icmp eq i32 %13, 1
  br label %1560

1560:                                             ; preds = %1552, %1690
  %1561 = phi i32 [ 0, %1552 ], [ %1642, %1690 ]
  %1562 = phi double [ 0.000000e+00, %1552 ], [ %1641, %1690 ]
  %1563 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1553, label %1564, label %1633

1564:                                             ; preds = %1560, %1623
  %1565 = phi i32 [ %1632, %1623 ], [ 0, %1560 ]
  %1566 = phi i64 [ %1574, %1623 ], [ %1557, %1560 ]
  %1567 = phi i64 [ %1631, %1623 ], [ %1556, %1560 ]
  %1568 = phi i32 [ %1629, %1623 ], [ %1563, %1560 ]
  %1569 = sub i32 %1555, %1565
  %1570 = tail call i32 @llvm.smin.i32(i32 %1569, i32 0)
  %1571 = sub i32 %1569, %1570
  %1572 = zext i32 %1571 to i64
  %1573 = add nuw nsw i64 %1572, 1
  %1574 = add nsw i64 %1566, -1
  %1575 = icmp ult i32 %1571, 31
  br i1 %1575, label %1611, label %1576

1576:                                             ; preds = %1564
  %1577 = and i64 %1573, 8589934560
  %1578 = sub i64 %1567, %1577
  br label %1579

1579:                                             ; preds = %1579, %1576
  %1580 = phi i64 [ 0, %1576 ], [ %1603, %1579 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1576 ], [ %1599, %1579 ]
  %1582 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1576 ], [ %1600, %1579 ]
  %1583 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1576 ], [ %1601, %1579 ]
  %1584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1576 ], [ %1602, %1579 ]
  %1585 = sub i64 %1567, %1580
  %1586 = getelementptr inbounds i32, ptr %9, i64 %1585
  %1587 = getelementptr inbounds i32, ptr %1586, i64 -7
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !5
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1586, i64 -15
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1586, i64 -23
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = getelementptr inbounds i32, ptr %1586, i64 -31
  %1597 = load <8 x i32>, ptr %1596, align 4, !tbaa !5
  %1598 = shufflevector <8 x i32> %1597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1599 = mul <8 x i32> %1589, %1581
  %1600 = mul <8 x i32> %1592, %1582
  %1601 = mul <8 x i32> %1595, %1583
  %1602 = mul <8 x i32> %1598, %1584
  %1603 = add nuw i64 %1580, 32
  %1604 = icmp eq i64 %1603, %1577
  br i1 %1604, label %1605, label %1579, !llvm.loop !814

1605:                                             ; preds = %1579
  %1606 = mul <8 x i32> %1600, %1599
  %1607 = mul <8 x i32> %1601, %1606
  %1608 = mul <8 x i32> %1602, %1607
  %1609 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1608)
  %1610 = icmp eq i64 %1573, %1577
  br i1 %1610, label %1623, label %1611

1611:                                             ; preds = %1564, %1605
  %1612 = phi i64 [ %1567, %1564 ], [ %1578, %1605 ]
  %1613 = phi i32 [ 1, %1564 ], [ %1609, %1605 ]
  br label %1614

1614:                                             ; preds = %1611, %1614
  %1615 = phi i64 [ %1620, %1614 ], [ %1612, %1611 ]
  %1616 = phi i32 [ %1619, %1614 ], [ %1613, %1611 ]
  %1617 = getelementptr inbounds i32, ptr %9, i64 %1615
  %1618 = load i32, ptr %1617, align 4, !tbaa !5
  %1619 = mul nsw i32 %1618, %1616
  %1620 = add nsw i64 %1615, -1
  %1621 = trunc i64 %1615 to i32
  %1622 = icmp sgt i32 %1621, 0
  br i1 %1622, label %1614, label %1623, !llvm.loop !815

1623:                                             ; preds = %1614, %1605
  %1624 = phi i32 [ %1609, %1605 ], [ %1619, %1614 ]
  %1625 = and i64 %1574, 4294967295
  %1626 = getelementptr inbounds i32, ptr %6, i64 %1625
  %1627 = load i32, ptr %1626, align 4, !tbaa !5
  %1628 = mul nsw i32 %1627, %1624
  %1629 = add nsw i32 %1628, %1568
  %1630 = icmp sgt i64 %1566, 2
  %1631 = add nsw i64 %1567, -1
  %1632 = add i32 %1565, 1
  br i1 %1630, label %1564, label %1633, !llvm.loop !816

1633:                                             ; preds = %1623, %1560
  %1634 = phi i32 [ %1563, %1560 ], [ %1629, %1623 ]
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds i64, ptr %1229, i64 %1635
  %1637 = load i64, ptr %1636, align 8, !tbaa !120
  %1638 = trunc i64 %1637 to i8
  %1639 = load i8, ptr %1231, align 1, !tbaa !11
  %1640 = add i8 %1639, %1638
  store i8 %1640, ptr %1231, align 1, !tbaa !11
  %1641 = fadd fast double %1562, 1.000000e+00
  %1642 = add nuw nsw i32 %1561, 1
  br i1 %1554, label %1643, label %1690

1643:                                             ; preds = %1633
  %1644 = load i32, ptr %4, align 4, !tbaa !5
  %1645 = load i32, ptr %12, align 4, !tbaa !5
  %1646 = add nsw i32 %1645, -1
  %1647 = icmp slt i32 %1644, %1646
  br i1 %1647, label %1667, label %1648

1648:                                             ; preds = %1643
  %1649 = icmp eq i32 %1644, %1646
  br i1 %1649, label %1650, label %1683

1650:                                             ; preds = %1648
  store i32 0, ptr %4, align 4, !tbaa !5
  %1651 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1651, ptr %6, align 4, !tbaa !5
  br i1 %1559, label %1690, label %1652

1652:                                             ; preds = %1650, %1677
  %1653 = phi i64 [ %1681, %1677 ], [ 1, %1650 ]
  %1654 = getelementptr inbounds i32, ptr %4, i64 %1653
  %1655 = load i32, ptr %1654, align 4, !tbaa !5
  %1656 = getelementptr inbounds i32, ptr %12, i64 %1653
  %1657 = load i32, ptr %1656, align 4, !tbaa !5
  %1658 = add nsw i32 %1657, -1
  %1659 = icmp slt i32 %1655, %1658
  br i1 %1659, label %1660, label %1675

1660:                                             ; preds = %1652
  br i1 %1647, label %1667, label %1661

1661:                                             ; preds = %1660
  %1662 = getelementptr inbounds i32, ptr %7, i64 %1653
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %6, i64 %1653
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, %1663
  store i32 %1666, ptr %1664, align 4, !tbaa !5
  br label %1685

1667:                                             ; preds = %1643, %1660
  %1668 = phi i32 [ %1655, %1660 ], [ %1644, %1643 ]
  %1669 = phi ptr [ %1654, %1660 ], [ %4, %1643 ]
  %1670 = phi i64 [ %1653, %1660 ], [ 0, %1643 ]
  %1671 = add nsw i32 %1668, 1
  store i32 %1671, ptr %1669, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = getelementptr inbounds i32, ptr %6, i64 %1670
  br label %1685

1675:                                             ; preds = %1652
  %1676 = icmp eq i32 %1655, %1658
  br i1 %1676, label %1677, label %1683

1677:                                             ; preds = %1675
  store i32 0, ptr %1654, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %8, i64 %1653
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %6, i64 %1653
  store i32 %1679, ptr %1680, align 4, !tbaa !5
  %1681 = add nuw nsw i64 %1653, 1
  %1682 = icmp eq i64 %1681, %1557
  br i1 %1682, label %1690, label %1652, !llvm.loop !817

1683:                                             ; preds = %1648, %1675
  %1684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1685:                                             ; preds = %1661, %1667
  %1686 = phi ptr [ %1674, %1667 ], [ %1654, %1661 ]
  %1687 = phi i32 [ %1673, %1667 ], [ 1, %1661 ]
  %1688 = load i32, ptr %1686, align 4, !tbaa !5
  %1689 = add nsw i32 %1688, %1687
  store i32 %1689, ptr %1686, align 4, !tbaa !5
  br label %1690

1690:                                             ; preds = %1677, %1685, %1650, %1633
  %1691 = icmp eq i32 %1642, %5
  br i1 %1691, label %5447, label %1560, !llvm.loop !818

1692:                                             ; preds = %1543, %1827
  %1693 = phi i32 [ 0, %1543 ], [ %1776, %1827 ]
  %1694 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1544, label %1695, label %1764

1695:                                             ; preds = %1692, %1754
  %1696 = phi i32 [ %1763, %1754 ], [ 0, %1692 ]
  %1697 = phi i64 [ %1705, %1754 ], [ %1548, %1692 ]
  %1698 = phi i64 [ %1762, %1754 ], [ %1547, %1692 ]
  %1699 = phi i32 [ %1760, %1754 ], [ %1694, %1692 ]
  %1700 = sub i32 %1546, %1696
  %1701 = tail call i32 @llvm.smin.i32(i32 %1700, i32 0)
  %1702 = sub i32 %1700, %1701
  %1703 = zext i32 %1702 to i64
  %1704 = add nuw nsw i64 %1703, 1
  %1705 = add nsw i64 %1697, -1
  %1706 = icmp ult i32 %1702, 31
  br i1 %1706, label %1742, label %1707

1707:                                             ; preds = %1695
  %1708 = and i64 %1704, 8589934560
  %1709 = sub i64 %1698, %1708
  br label %1710

1710:                                             ; preds = %1710, %1707
  %1711 = phi i64 [ 0, %1707 ], [ %1734, %1710 ]
  %1712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1707 ], [ %1730, %1710 ]
  %1713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1707 ], [ %1731, %1710 ]
  %1714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1707 ], [ %1732, %1710 ]
  %1715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1707 ], [ %1733, %1710 ]
  %1716 = sub i64 %1698, %1711
  %1717 = getelementptr inbounds i32, ptr %11, i64 %1716
  %1718 = getelementptr inbounds i32, ptr %1717, i64 -7
  %1719 = load <8 x i32>, ptr %1718, align 4, !tbaa !5
  %1720 = shufflevector <8 x i32> %1719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1721 = getelementptr inbounds i32, ptr %1717, i64 -15
  %1722 = load <8 x i32>, ptr %1721, align 4, !tbaa !5
  %1723 = shufflevector <8 x i32> %1722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1724 = getelementptr inbounds i32, ptr %1717, i64 -23
  %1725 = load <8 x i32>, ptr %1724, align 4, !tbaa !5
  %1726 = shufflevector <8 x i32> %1725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1727 = getelementptr inbounds i32, ptr %1717, i64 -31
  %1728 = load <8 x i32>, ptr %1727, align 4, !tbaa !5
  %1729 = shufflevector <8 x i32> %1728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1730 = mul <8 x i32> %1720, %1712
  %1731 = mul <8 x i32> %1723, %1713
  %1732 = mul <8 x i32> %1726, %1714
  %1733 = mul <8 x i32> %1729, %1715
  %1734 = add nuw i64 %1711, 32
  %1735 = icmp eq i64 %1734, %1708
  br i1 %1735, label %1736, label %1710, !llvm.loop !819

1736:                                             ; preds = %1710
  %1737 = mul <8 x i32> %1731, %1730
  %1738 = mul <8 x i32> %1732, %1737
  %1739 = mul <8 x i32> %1733, %1738
  %1740 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1739)
  %1741 = icmp eq i64 %1704, %1708
  br i1 %1741, label %1754, label %1742

1742:                                             ; preds = %1695, %1736
  %1743 = phi i64 [ %1698, %1695 ], [ %1709, %1736 ]
  %1744 = phi i32 [ 1, %1695 ], [ %1740, %1736 ]
  br label %1745

1745:                                             ; preds = %1742, %1745
  %1746 = phi i64 [ %1751, %1745 ], [ %1743, %1742 ]
  %1747 = phi i32 [ %1750, %1745 ], [ %1744, %1742 ]
  %1748 = getelementptr inbounds i32, ptr %11, i64 %1746
  %1749 = load i32, ptr %1748, align 4, !tbaa !5
  %1750 = mul nsw i32 %1749, %1747
  %1751 = add nsw i64 %1746, -1
  %1752 = trunc i64 %1746 to i32
  %1753 = icmp sgt i32 %1752, 0
  br i1 %1753, label %1745, label %1754, !llvm.loop !820

1754:                                             ; preds = %1745, %1736
  %1755 = phi i32 [ %1740, %1736 ], [ %1750, %1745 ]
  %1756 = and i64 %1705, 4294967295
  %1757 = getelementptr inbounds i32, ptr %6, i64 %1756
  %1758 = load i32, ptr %1757, align 4, !tbaa !5
  %1759 = mul nsw i32 %1758, %1755
  %1760 = add nsw i32 %1759, %1699
  %1761 = icmp sgt i64 %1697, 2
  %1762 = add nsw i64 %1698, -1
  %1763 = add i32 %1696, 1
  br i1 %1761, label %1695, label %1764, !llvm.loop !821

1764:                                             ; preds = %1754, %1692
  %1765 = phi i32 [ %1694, %1692 ], [ %1760, %1754 ]
  %1766 = icmp slt i32 %1765, %5
  br i1 %1766, label %1769, label %1767

1767:                                             ; preds = %1764
  %1768 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

1769:                                             ; preds = %1764
  %1770 = sext i32 %1765 to i64
  %1771 = getelementptr inbounds i64, ptr %1229, i64 %1770
  %1772 = load i64, ptr %1771, align 8, !tbaa !120
  %1773 = trunc i64 %1772 to i8
  %1774 = load i8, ptr %1231, align 1, !tbaa !11
  %1775 = add i8 %1774, %1773
  store i8 %1775, ptr %1231, align 1, !tbaa !11
  %1776 = add nuw nsw i32 %1693, 1
  br i1 %1545, label %1777, label %1827

1777:                                             ; preds = %1769
  %1778 = load i32, ptr %4, align 4, !tbaa !5
  %1779 = load i32, ptr %12, align 4, !tbaa !5
  %1780 = add nsw i32 %1779, -1
  %1781 = icmp slt i32 %1778, %1780
  br i1 %1781, label %1804, label %1782

1782:                                             ; preds = %1777
  %1783 = icmp eq i32 %1778, %1780
  br i1 %1783, label %1784, label %1820

1784:                                             ; preds = %1782
  store i32 0, ptr %4, align 4, !tbaa !5
  %1785 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1785, ptr %6, align 4, !tbaa !5
  br i1 %1550, label %1827, label %1786

1786:                                             ; preds = %1784, %1814
  %1787 = phi i64 [ %1818, %1814 ], [ 1, %1784 ]
  %1788 = getelementptr inbounds i32, ptr %4, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !5
  %1790 = getelementptr inbounds i32, ptr %12, i64 %1787
  %1791 = load i32, ptr %1790, align 4, !tbaa !5
  %1792 = add nsw i32 %1791, -1
  %1793 = icmp slt i32 %1789, %1792
  br i1 %1793, label %1794, label %1812

1794:                                             ; preds = %1786
  br i1 %1781, label %1804, label %1795

1795:                                             ; preds = %1794
  %1796 = shl i64 %1787, 32
  %1797 = add i64 %1796, -4294967296
  %1798 = ashr exact i64 %1797, 32
  %1799 = getelementptr inbounds i32, ptr %7, i64 %1798
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = getelementptr inbounds i32, ptr %6, i64 %1787
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = add nsw i32 %1802, %1800
  store i32 %1803, ptr %1801, align 4, !tbaa !5
  br label %1822

1804:                                             ; preds = %1777, %1794
  %1805 = phi i32 [ %1789, %1794 ], [ %1778, %1777 ]
  %1806 = phi ptr [ %1788, %1794 ], [ %4, %1777 ]
  %1807 = phi i64 [ %1787, %1794 ], [ 0, %1777 ]
  %1808 = add nsw i32 %1805, 1
  store i32 %1808, ptr %1806, align 4, !tbaa !5
  %1809 = getelementptr inbounds i32, ptr %7, i64 %1807
  %1810 = load i32, ptr %1809, align 4, !tbaa !5
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1807
  br label %1822

1812:                                             ; preds = %1786
  %1813 = icmp eq i32 %1789, %1792
  br i1 %1813, label %1814, label %1820

1814:                                             ; preds = %1812
  store i32 0, ptr %1788, align 4, !tbaa !5
  %1815 = getelementptr inbounds i32, ptr %8, i64 %1787
  %1816 = load i32, ptr %1815, align 4, !tbaa !5
  %1817 = getelementptr inbounds i32, ptr %6, i64 %1787
  store i32 %1816, ptr %1817, align 4, !tbaa !5
  %1818 = add nuw nsw i64 %1787, 1
  %1819 = icmp eq i64 %1818, %1548
  br i1 %1819, label %1827, label %1786, !llvm.loop !822

1820:                                             ; preds = %1782, %1812
  %1821 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1822:                                             ; preds = %1795, %1804
  %1823 = phi ptr [ %1811, %1804 ], [ %1788, %1795 ]
  %1824 = phi i32 [ %1810, %1804 ], [ 1, %1795 ]
  %1825 = load i32, ptr %1823, align 4, !tbaa !5
  %1826 = add nsw i32 %1825, %1824
  store i32 %1826, ptr %1823, align 4, !tbaa !5
  br label %1827

1827:                                             ; preds = %1814, %1822, %1784, %1769
  %1828 = icmp eq i32 %1776, %5
  br i1 %1828, label %5447, label %1692, !llvm.loop !823

1829:                                             ; preds = %1236
  %1830 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

1831:                                             ; preds = %18
  %1832 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1833 = load ptr, ptr %1832, align 8, !tbaa !9
  %1834 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1835 = load ptr, ptr %1834, align 8, !tbaa !9
  store i16 0, ptr %1835, align 2, !tbaa !78
  %1836 = icmp eq i32 %13, 0
  br i1 %1836, label %1837, label %1840

1837:                                             ; preds = %1831
  %1838 = load i64, ptr %1833, align 8, !tbaa !120
  %1839 = trunc i64 %1838 to i16
  store i16 %1839, ptr %1835, align 2, !tbaa !78
  br label %5447

1840:                                             ; preds = %1831
  switch i32 %1, label %2437 [
    i32 1, label %1841
    i32 0, label %2145
  ]

1841:                                             ; preds = %1840
  %1842 = getelementptr inbounds i32, ptr %3, i64 %19
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = icmp eq i32 %1843, 0
  %1845 = icmp sgt i32 %5, 0
  br i1 %1844, label %1855, label %1846

1846:                                             ; preds = %1841
  br i1 %1845, label %1847, label %5447

1847:                                             ; preds = %1846
  %1848 = icmp sgt i32 %13, 1
  %1849 = icmp sgt i32 %13, 0
  %1850 = add i32 %13, -2
  %1851 = zext i32 %1850 to i64
  %1852 = zext i32 %13 to i64
  %1853 = add nuw i32 %5, 1
  %1854 = icmp eq i32 %13, 1
  br label %2004

1855:                                             ; preds = %1841
  br i1 %1845, label %1856, label %5447

1856:                                             ; preds = %1855
  %1857 = icmp sgt i32 %13, 1
  %1858 = icmp sgt i32 %13, 0
  %1859 = add i32 %13, -2
  %1860 = zext i32 %1859 to i64
  %1861 = zext i32 %13 to i64
  %1862 = add nuw i32 %5, 1
  %1863 = icmp eq i32 %13, 1
  br label %1864

1864:                                             ; preds = %1856, %2002
  %1865 = phi i16 [ 0, %1856 ], [ %1952, %2002 ]
  %1866 = phi i32 [ 0, %1856 ], [ %1954, %2002 ]
  %1867 = phi double [ 0.000000e+00, %1856 ], [ %1953, %2002 ]
  %1868 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1857, label %1869, label %1938

1869:                                             ; preds = %1864, %1928
  %1870 = phi i32 [ %1937, %1928 ], [ 0, %1864 ]
  %1871 = phi i64 [ %1879, %1928 ], [ %1861, %1864 ]
  %1872 = phi i64 [ %1936, %1928 ], [ %1860, %1864 ]
  %1873 = phi i32 [ %1934, %1928 ], [ %1868, %1864 ]
  %1874 = sub i32 %1859, %1870
  %1875 = tail call i32 @llvm.smin.i32(i32 %1874, i32 0)
  %1876 = sub i32 %1874, %1875
  %1877 = zext i32 %1876 to i64
  %1878 = add nuw nsw i64 %1877, 1
  %1879 = add nsw i64 %1871, -1
  %1880 = icmp ult i32 %1876, 31
  br i1 %1880, label %1916, label %1881

1881:                                             ; preds = %1869
  %1882 = and i64 %1878, 8589934560
  %1883 = sub i64 %1872, %1882
  br label %1884

1884:                                             ; preds = %1884, %1881
  %1885 = phi i64 [ 0, %1881 ], [ %1908, %1884 ]
  %1886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1881 ], [ %1904, %1884 ]
  %1887 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1881 ], [ %1905, %1884 ]
  %1888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1881 ], [ %1906, %1884 ]
  %1889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1881 ], [ %1907, %1884 ]
  %1890 = sub i64 %1872, %1885
  %1891 = getelementptr inbounds i32, ptr %9, i64 %1890
  %1892 = getelementptr inbounds i32, ptr %1891, i64 -7
  %1893 = load <8 x i32>, ptr %1892, align 4, !tbaa !5
  %1894 = shufflevector <8 x i32> %1893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1895 = getelementptr inbounds i32, ptr %1891, i64 -15
  %1896 = load <8 x i32>, ptr %1895, align 4, !tbaa !5
  %1897 = shufflevector <8 x i32> %1896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1898 = getelementptr inbounds i32, ptr %1891, i64 -23
  %1899 = load <8 x i32>, ptr %1898, align 4, !tbaa !5
  %1900 = shufflevector <8 x i32> %1899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1901 = getelementptr inbounds i32, ptr %1891, i64 -31
  %1902 = load <8 x i32>, ptr %1901, align 4, !tbaa !5
  %1903 = shufflevector <8 x i32> %1902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1904 = mul <8 x i32> %1894, %1886
  %1905 = mul <8 x i32> %1897, %1887
  %1906 = mul <8 x i32> %1900, %1888
  %1907 = mul <8 x i32> %1903, %1889
  %1908 = add nuw i64 %1885, 32
  %1909 = icmp eq i64 %1908, %1882
  br i1 %1909, label %1910, label %1884, !llvm.loop !824

1910:                                             ; preds = %1884
  %1911 = mul <8 x i32> %1905, %1904
  %1912 = mul <8 x i32> %1906, %1911
  %1913 = mul <8 x i32> %1907, %1912
  %1914 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1913)
  %1915 = icmp eq i64 %1878, %1882
  br i1 %1915, label %1928, label %1916

1916:                                             ; preds = %1869, %1910
  %1917 = phi i64 [ %1872, %1869 ], [ %1883, %1910 ]
  %1918 = phi i32 [ 1, %1869 ], [ %1914, %1910 ]
  br label %1919

1919:                                             ; preds = %1916, %1919
  %1920 = phi i64 [ %1925, %1919 ], [ %1917, %1916 ]
  %1921 = phi i32 [ %1924, %1919 ], [ %1918, %1916 ]
  %1922 = getelementptr inbounds i32, ptr %9, i64 %1920
  %1923 = load i32, ptr %1922, align 4, !tbaa !5
  %1924 = mul nsw i32 %1923, %1921
  %1925 = add nsw i64 %1920, -1
  %1926 = trunc i64 %1920 to i32
  %1927 = icmp sgt i32 %1926, 0
  br i1 %1927, label %1919, label %1928, !llvm.loop !825

1928:                                             ; preds = %1919, %1910
  %1929 = phi i32 [ %1914, %1910 ], [ %1924, %1919 ]
  %1930 = and i64 %1879, 4294967295
  %1931 = getelementptr inbounds i32, ptr %6, i64 %1930
  %1932 = load i32, ptr %1931, align 4, !tbaa !5
  %1933 = mul nsw i32 %1932, %1929
  %1934 = add nsw i32 %1933, %1873
  %1935 = icmp sgt i64 %1871, 2
  %1936 = add nsw i64 %1872, -1
  %1937 = add i32 %1870, 1
  br i1 %1935, label %1869, label %1938, !llvm.loop !826

1938:                                             ; preds = %1928, %1864
  %1939 = phi i32 [ %1868, %1864 ], [ %1934, %1928 ]
  %1940 = sext i32 %1939 to i64
  %1941 = getelementptr inbounds double, ptr %2, i64 %1940
  %1942 = load double, ptr %1941, align 8, !tbaa !18
  %1943 = getelementptr inbounds i64, ptr %1833, i64 %1940
  %1944 = load i64, ptr %1943, align 8, !tbaa !120
  %1945 = trunc i64 %1944 to i32
  %1946 = sitofp i16 %1865 to double
  %1947 = shl i32 %1945, 16
  %1948 = ashr exact i32 %1947, 16
  %1949 = sitofp i32 %1948 to double
  %1950 = fmul fast double %1942, %1949
  %1951 = fadd fast double %1950, %1946
  %1952 = fptosi double %1951 to i16
  %1953 = fadd fast double %1942, %1867
  %1954 = add nuw nsw i32 %1866, 1
  br i1 %1858, label %1955, label %2002

1955:                                             ; preds = %1938
  %1956 = load i32, ptr %4, align 4, !tbaa !5
  %1957 = load i32, ptr %12, align 4, !tbaa !5
  %1958 = add nsw i32 %1957, -1
  %1959 = icmp slt i32 %1956, %1958
  br i1 %1959, label %1979, label %1960

1960:                                             ; preds = %1955
  %1961 = icmp eq i32 %1956, %1958
  br i1 %1961, label %1962, label %1995

1962:                                             ; preds = %1960
  store i32 0, ptr %4, align 4, !tbaa !5
  %1963 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1963, ptr %6, align 4, !tbaa !5
  br i1 %1863, label %2002, label %1964

1964:                                             ; preds = %1962, %1989
  %1965 = phi i64 [ %1993, %1989 ], [ 1, %1962 ]
  %1966 = getelementptr inbounds i32, ptr %4, i64 %1965
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %12, i64 %1965
  %1969 = load i32, ptr %1968, align 4, !tbaa !5
  %1970 = add nsw i32 %1969, -1
  %1971 = icmp slt i32 %1967, %1970
  br i1 %1971, label %1972, label %1987

1972:                                             ; preds = %1964
  br i1 %1959, label %1979, label %1973

1973:                                             ; preds = %1972
  %1974 = getelementptr inbounds i32, ptr %7, i64 %1965
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %6, i64 %1965
  %1977 = load i32, ptr %1976, align 4, !tbaa !5
  %1978 = add nsw i32 %1977, %1975
  store i32 %1978, ptr %1976, align 4, !tbaa !5
  br label %1997

1979:                                             ; preds = %1955, %1972
  %1980 = phi i32 [ %1967, %1972 ], [ %1956, %1955 ]
  %1981 = phi ptr [ %1966, %1972 ], [ %4, %1955 ]
  %1982 = phi i64 [ %1965, %1972 ], [ 0, %1955 ]
  %1983 = add nsw i32 %1980, 1
  store i32 %1983, ptr %1981, align 4, !tbaa !5
  %1984 = getelementptr inbounds i32, ptr %7, i64 %1982
  %1985 = load i32, ptr %1984, align 4, !tbaa !5
  %1986 = getelementptr inbounds i32, ptr %6, i64 %1982
  br label %1997

1987:                                             ; preds = %1964
  %1988 = icmp eq i32 %1967, %1970
  br i1 %1988, label %1989, label %1995

1989:                                             ; preds = %1987
  store i32 0, ptr %1966, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %8, i64 %1965
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %6, i64 %1965
  store i32 %1991, ptr %1992, align 4, !tbaa !5
  %1993 = add nuw nsw i64 %1965, 1
  %1994 = icmp eq i64 %1993, %1861
  br i1 %1994, label %2002, label %1964, !llvm.loop !827

1995:                                             ; preds = %1960, %1987
  store i16 %1952, ptr %1835, align 2, !tbaa !78
  %1996 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

1997:                                             ; preds = %1973, %1979
  %1998 = phi ptr [ %1986, %1979 ], [ %1966, %1973 ]
  %1999 = phi i32 [ %1985, %1979 ], [ 1, %1973 ]
  %2000 = load i32, ptr %1998, align 4, !tbaa !5
  %2001 = add nsw i32 %2000, %1999
  store i32 %2001, ptr %1998, align 4, !tbaa !5
  br label %2002

2002:                                             ; preds = %1989, %1997, %1962, %1938
  %2003 = icmp eq i32 %1954, %5
  br i1 %2003, label %5441, label %1864, !llvm.loop !828

2004:                                             ; preds = %1847, %2143
  %2005 = phi i64 [ 0, %1847 ], [ %2090, %2143 ]
  %2006 = phi i32 [ 0, %1847 ], [ %2092, %2143 ]
  %2007 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1848, label %2008, label %2077

2008:                                             ; preds = %2004, %2067
  %2009 = phi i32 [ %2076, %2067 ], [ 0, %2004 ]
  %2010 = phi i64 [ %2018, %2067 ], [ %1852, %2004 ]
  %2011 = phi i64 [ %2075, %2067 ], [ %1851, %2004 ]
  %2012 = phi i32 [ %2073, %2067 ], [ %2007, %2004 ]
  %2013 = sub i32 %1850, %2009
  %2014 = tail call i32 @llvm.smin.i32(i32 %2013, i32 0)
  %2015 = sub i32 %2013, %2014
  %2016 = zext i32 %2015 to i64
  %2017 = add nuw nsw i64 %2016, 1
  %2018 = add nsw i64 %2010, -1
  %2019 = icmp ult i32 %2015, 31
  br i1 %2019, label %2055, label %2020

2020:                                             ; preds = %2008
  %2021 = and i64 %2017, 8589934560
  %2022 = sub i64 %2011, %2021
  br label %2023

2023:                                             ; preds = %2023, %2020
  %2024 = phi i64 [ 0, %2020 ], [ %2047, %2023 ]
  %2025 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2020 ], [ %2043, %2023 ]
  %2026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2020 ], [ %2044, %2023 ]
  %2027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2020 ], [ %2045, %2023 ]
  %2028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2020 ], [ %2046, %2023 ]
  %2029 = sub i64 %2011, %2024
  %2030 = getelementptr inbounds i32, ptr %11, i64 %2029
  %2031 = getelementptr inbounds i32, ptr %2030, i64 -7
  %2032 = load <8 x i32>, ptr %2031, align 4, !tbaa !5
  %2033 = shufflevector <8 x i32> %2032, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2034 = getelementptr inbounds i32, ptr %2030, i64 -15
  %2035 = load <8 x i32>, ptr %2034, align 4, !tbaa !5
  %2036 = shufflevector <8 x i32> %2035, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2037 = getelementptr inbounds i32, ptr %2030, i64 -23
  %2038 = load <8 x i32>, ptr %2037, align 4, !tbaa !5
  %2039 = shufflevector <8 x i32> %2038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2040 = getelementptr inbounds i32, ptr %2030, i64 -31
  %2041 = load <8 x i32>, ptr %2040, align 4, !tbaa !5
  %2042 = shufflevector <8 x i32> %2041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2043 = mul <8 x i32> %2033, %2025
  %2044 = mul <8 x i32> %2036, %2026
  %2045 = mul <8 x i32> %2039, %2027
  %2046 = mul <8 x i32> %2042, %2028
  %2047 = add nuw i64 %2024, 32
  %2048 = icmp eq i64 %2047, %2021
  br i1 %2048, label %2049, label %2023, !llvm.loop !829

2049:                                             ; preds = %2023
  %2050 = mul <8 x i32> %2044, %2043
  %2051 = mul <8 x i32> %2045, %2050
  %2052 = mul <8 x i32> %2046, %2051
  %2053 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2052)
  %2054 = icmp eq i64 %2017, %2021
  br i1 %2054, label %2067, label %2055

2055:                                             ; preds = %2008, %2049
  %2056 = phi i64 [ %2011, %2008 ], [ %2022, %2049 ]
  %2057 = phi i32 [ 1, %2008 ], [ %2053, %2049 ]
  br label %2058

2058:                                             ; preds = %2055, %2058
  %2059 = phi i64 [ %2064, %2058 ], [ %2056, %2055 ]
  %2060 = phi i32 [ %2063, %2058 ], [ %2057, %2055 ]
  %2061 = getelementptr inbounds i32, ptr %11, i64 %2059
  %2062 = load i32, ptr %2061, align 4, !tbaa !5
  %2063 = mul nsw i32 %2062, %2060
  %2064 = add nsw i64 %2059, -1
  %2065 = trunc i64 %2059 to i32
  %2066 = icmp sgt i32 %2065, 0
  br i1 %2066, label %2058, label %2067, !llvm.loop !830

2067:                                             ; preds = %2058, %2049
  %2068 = phi i32 [ %2053, %2049 ], [ %2063, %2058 ]
  %2069 = and i64 %2018, 4294967295
  %2070 = getelementptr inbounds i32, ptr %6, i64 %2069
  %2071 = load i32, ptr %2070, align 4, !tbaa !5
  %2072 = mul nsw i32 %2071, %2068
  %2073 = add nsw i32 %2072, %2012
  %2074 = icmp sgt i64 %2010, 2
  %2075 = add nsw i64 %2011, -1
  %2076 = add i32 %2009, 1
  br i1 %2074, label %2008, label %2077, !llvm.loop !831

2077:                                             ; preds = %2067, %2004
  %2078 = phi i32 [ %2007, %2004 ], [ %2073, %2067 ]
  %2079 = icmp slt i32 %2078, %5
  br i1 %2079, label %2082, label %2080

2080:                                             ; preds = %2077
  %2081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

2082:                                             ; preds = %2077
  %2083 = sext i32 %2078 to i64
  %2084 = getelementptr inbounds i64, ptr %1833, i64 %2083
  %2085 = load i64, ptr %2084, align 8, !tbaa !120
  %2086 = shl i64 %2005, 48
  %2087 = ashr exact i64 %2086, 48
  %2088 = shl i64 %2085, 48
  %2089 = ashr exact i64 %2088, 48
  %2090 = add nsw i64 %2089, %2087
  %2091 = trunc i64 %2090 to i16
  store i16 %2091, ptr %1835, align 2, !tbaa !78
  %2092 = add nuw nsw i32 %2006, 1
  br i1 %1849, label %2093, label %2143

2093:                                             ; preds = %2082
  %2094 = load i32, ptr %4, align 4, !tbaa !5
  %2095 = load i32, ptr %12, align 4, !tbaa !5
  %2096 = add nsw i32 %2095, -1
  %2097 = icmp slt i32 %2094, %2096
  br i1 %2097, label %2120, label %2098

2098:                                             ; preds = %2093
  %2099 = icmp eq i32 %2094, %2096
  br i1 %2099, label %2100, label %2136

2100:                                             ; preds = %2098
  store i32 0, ptr %4, align 4, !tbaa !5
  %2101 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2101, ptr %6, align 4, !tbaa !5
  br i1 %1854, label %2143, label %2102

2102:                                             ; preds = %2100, %2130
  %2103 = phi i64 [ %2134, %2130 ], [ 1, %2100 ]
  %2104 = getelementptr inbounds i32, ptr %4, i64 %2103
  %2105 = load i32, ptr %2104, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %12, i64 %2103
  %2107 = load i32, ptr %2106, align 4, !tbaa !5
  %2108 = add nsw i32 %2107, -1
  %2109 = icmp slt i32 %2105, %2108
  br i1 %2109, label %2110, label %2128

2110:                                             ; preds = %2102
  br i1 %2097, label %2120, label %2111

2111:                                             ; preds = %2110
  %2112 = shl i64 %2103, 32
  %2113 = add i64 %2112, -4294967296
  %2114 = ashr exact i64 %2113, 32
  %2115 = getelementptr inbounds i32, ptr %7, i64 %2114
  %2116 = load i32, ptr %2115, align 4, !tbaa !5
  %2117 = getelementptr inbounds i32, ptr %6, i64 %2103
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = add nsw i32 %2118, %2116
  store i32 %2119, ptr %2117, align 4, !tbaa !5
  br label %2138

2120:                                             ; preds = %2093, %2110
  %2121 = phi i32 [ %2105, %2110 ], [ %2094, %2093 ]
  %2122 = phi ptr [ %2104, %2110 ], [ %4, %2093 ]
  %2123 = phi i64 [ %2103, %2110 ], [ 0, %2093 ]
  %2124 = add nsw i32 %2121, 1
  store i32 %2124, ptr %2122, align 4, !tbaa !5
  %2125 = getelementptr inbounds i32, ptr %7, i64 %2123
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = getelementptr inbounds i32, ptr %6, i64 %2123
  br label %2138

2128:                                             ; preds = %2102
  %2129 = icmp eq i32 %2105, %2108
  br i1 %2129, label %2130, label %2136

2130:                                             ; preds = %2128
  store i32 0, ptr %2104, align 4, !tbaa !5
  %2131 = getelementptr inbounds i32, ptr %8, i64 %2103
  %2132 = load i32, ptr %2131, align 4, !tbaa !5
  %2133 = getelementptr inbounds i32, ptr %6, i64 %2103
  store i32 %2132, ptr %2133, align 4, !tbaa !5
  %2134 = add nuw nsw i64 %2103, 1
  %2135 = icmp eq i64 %2134, %1852
  br i1 %2135, label %2143, label %2102, !llvm.loop !832

2136:                                             ; preds = %2098, %2128
  %2137 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2138:                                             ; preds = %2111, %2120
  %2139 = phi ptr [ %2127, %2120 ], [ %2104, %2111 ]
  %2140 = phi i32 [ %2126, %2120 ], [ 1, %2111 ]
  %2141 = load i32, ptr %2139, align 4, !tbaa !5
  %2142 = add nsw i32 %2141, %2140
  store i32 %2142, ptr %2139, align 4, !tbaa !5
  br label %2143

2143:                                             ; preds = %2130, %2138, %2100, %2082
  %2144 = icmp eq i32 %2092, %5
  br i1 %2144, label %5447, label %2004, !llvm.loop !833

2145:                                             ; preds = %1840
  %2146 = getelementptr inbounds i32, ptr %3, i64 %19
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = icmp eq i32 %2147, 0
  %2149 = icmp sgt i32 %5, 0
  br i1 %2148, label %2159, label %2150

2150:                                             ; preds = %2145
  br i1 %2149, label %2151, label %5447

2151:                                             ; preds = %2150
  %2152 = icmp sgt i32 %13, 1
  %2153 = icmp sgt i32 %13, 0
  %2154 = add i32 %13, -2
  %2155 = zext i32 %2154 to i64
  %2156 = zext i32 %13 to i64
  %2157 = add nuw i32 %5, 1
  %2158 = icmp eq i32 %13, 1
  br label %2300

2159:                                             ; preds = %2145
  br i1 %2149, label %2160, label %5447

2160:                                             ; preds = %2159
  %2161 = icmp sgt i32 %13, 1
  %2162 = icmp sgt i32 %13, 0
  %2163 = add i32 %13, -2
  %2164 = zext i32 %2163 to i64
  %2165 = zext i32 %13 to i64
  %2166 = add nuw i32 %5, 1
  %2167 = icmp eq i32 %13, 1
  br label %2168

2168:                                             ; preds = %2160, %2298
  %2169 = phi i16 [ 0, %2160 ], [ %2248, %2298 ]
  %2170 = phi i32 [ 0, %2160 ], [ %2250, %2298 ]
  %2171 = phi double [ 0.000000e+00, %2160 ], [ %2249, %2298 ]
  %2172 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2161, label %2173, label %2242

2173:                                             ; preds = %2168, %2232
  %2174 = phi i32 [ %2241, %2232 ], [ 0, %2168 ]
  %2175 = phi i64 [ %2183, %2232 ], [ %2165, %2168 ]
  %2176 = phi i64 [ %2240, %2232 ], [ %2164, %2168 ]
  %2177 = phi i32 [ %2238, %2232 ], [ %2172, %2168 ]
  %2178 = sub i32 %2163, %2174
  %2179 = tail call i32 @llvm.smin.i32(i32 %2178, i32 0)
  %2180 = sub i32 %2178, %2179
  %2181 = zext i32 %2180 to i64
  %2182 = add nuw nsw i64 %2181, 1
  %2183 = add nsw i64 %2175, -1
  %2184 = icmp ult i32 %2180, 31
  br i1 %2184, label %2220, label %2185

2185:                                             ; preds = %2173
  %2186 = and i64 %2182, 8589934560
  %2187 = sub i64 %2176, %2186
  br label %2188

2188:                                             ; preds = %2188, %2185
  %2189 = phi i64 [ 0, %2185 ], [ %2212, %2188 ]
  %2190 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2185 ], [ %2208, %2188 ]
  %2191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2185 ], [ %2209, %2188 ]
  %2192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2185 ], [ %2210, %2188 ]
  %2193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2185 ], [ %2211, %2188 ]
  %2194 = sub i64 %2176, %2189
  %2195 = getelementptr inbounds i32, ptr %9, i64 %2194
  %2196 = getelementptr inbounds i32, ptr %2195, i64 -7
  %2197 = load <8 x i32>, ptr %2196, align 4, !tbaa !5
  %2198 = shufflevector <8 x i32> %2197, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2199 = getelementptr inbounds i32, ptr %2195, i64 -15
  %2200 = load <8 x i32>, ptr %2199, align 4, !tbaa !5
  %2201 = shufflevector <8 x i32> %2200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2202 = getelementptr inbounds i32, ptr %2195, i64 -23
  %2203 = load <8 x i32>, ptr %2202, align 4, !tbaa !5
  %2204 = shufflevector <8 x i32> %2203, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2205 = getelementptr inbounds i32, ptr %2195, i64 -31
  %2206 = load <8 x i32>, ptr %2205, align 4, !tbaa !5
  %2207 = shufflevector <8 x i32> %2206, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2208 = mul <8 x i32> %2198, %2190
  %2209 = mul <8 x i32> %2201, %2191
  %2210 = mul <8 x i32> %2204, %2192
  %2211 = mul <8 x i32> %2207, %2193
  %2212 = add nuw i64 %2189, 32
  %2213 = icmp eq i64 %2212, %2186
  br i1 %2213, label %2214, label %2188, !llvm.loop !834

2214:                                             ; preds = %2188
  %2215 = mul <8 x i32> %2209, %2208
  %2216 = mul <8 x i32> %2210, %2215
  %2217 = mul <8 x i32> %2211, %2216
  %2218 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2217)
  %2219 = icmp eq i64 %2182, %2186
  br i1 %2219, label %2232, label %2220

2220:                                             ; preds = %2173, %2214
  %2221 = phi i64 [ %2176, %2173 ], [ %2187, %2214 ]
  %2222 = phi i32 [ 1, %2173 ], [ %2218, %2214 ]
  br label %2223

2223:                                             ; preds = %2220, %2223
  %2224 = phi i64 [ %2229, %2223 ], [ %2221, %2220 ]
  %2225 = phi i32 [ %2228, %2223 ], [ %2222, %2220 ]
  %2226 = getelementptr inbounds i32, ptr %9, i64 %2224
  %2227 = load i32, ptr %2226, align 4, !tbaa !5
  %2228 = mul nsw i32 %2227, %2225
  %2229 = add nsw i64 %2224, -1
  %2230 = trunc i64 %2224 to i32
  %2231 = icmp sgt i32 %2230, 0
  br i1 %2231, label %2223, label %2232, !llvm.loop !835

2232:                                             ; preds = %2223, %2214
  %2233 = phi i32 [ %2218, %2214 ], [ %2228, %2223 ]
  %2234 = and i64 %2183, 4294967295
  %2235 = getelementptr inbounds i32, ptr %6, i64 %2234
  %2236 = load i32, ptr %2235, align 4, !tbaa !5
  %2237 = mul nsw i32 %2236, %2233
  %2238 = add nsw i32 %2237, %2177
  %2239 = icmp sgt i64 %2175, 2
  %2240 = add nsw i64 %2176, -1
  %2241 = add i32 %2174, 1
  br i1 %2239, label %2173, label %2242, !llvm.loop !836

2242:                                             ; preds = %2232, %2168
  %2243 = phi i32 [ %2172, %2168 ], [ %2238, %2232 ]
  %2244 = sext i32 %2243 to i64
  %2245 = getelementptr inbounds i64, ptr %1833, i64 %2244
  %2246 = load i64, ptr %2245, align 8, !tbaa !120
  %2247 = trunc i64 %2246 to i16
  %2248 = add i16 %2169, %2247
  %2249 = fadd fast double %2171, 1.000000e+00
  %2250 = add nuw nsw i32 %2170, 1
  br i1 %2162, label %2251, label %2298

2251:                                             ; preds = %2242
  %2252 = load i32, ptr %4, align 4, !tbaa !5
  %2253 = load i32, ptr %12, align 4, !tbaa !5
  %2254 = add nsw i32 %2253, -1
  %2255 = icmp slt i32 %2252, %2254
  br i1 %2255, label %2275, label %2256

2256:                                             ; preds = %2251
  %2257 = icmp eq i32 %2252, %2254
  br i1 %2257, label %2258, label %2291

2258:                                             ; preds = %2256
  store i32 0, ptr %4, align 4, !tbaa !5
  %2259 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2259, ptr %6, align 4, !tbaa !5
  br i1 %2167, label %2298, label %2260

2260:                                             ; preds = %2258, %2285
  %2261 = phi i64 [ %2289, %2285 ], [ 1, %2258 ]
  %2262 = getelementptr inbounds i32, ptr %4, i64 %2261
  %2263 = load i32, ptr %2262, align 4, !tbaa !5
  %2264 = getelementptr inbounds i32, ptr %12, i64 %2261
  %2265 = load i32, ptr %2264, align 4, !tbaa !5
  %2266 = add nsw i32 %2265, -1
  %2267 = icmp slt i32 %2263, %2266
  br i1 %2267, label %2268, label %2283

2268:                                             ; preds = %2260
  br i1 %2255, label %2275, label %2269

2269:                                             ; preds = %2268
  %2270 = getelementptr inbounds i32, ptr %7, i64 %2261
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = getelementptr inbounds i32, ptr %6, i64 %2261
  %2273 = load i32, ptr %2272, align 4, !tbaa !5
  %2274 = add nsw i32 %2273, %2271
  store i32 %2274, ptr %2272, align 4, !tbaa !5
  br label %2293

2275:                                             ; preds = %2251, %2268
  %2276 = phi i32 [ %2263, %2268 ], [ %2252, %2251 ]
  %2277 = phi ptr [ %2262, %2268 ], [ %4, %2251 ]
  %2278 = phi i64 [ %2261, %2268 ], [ 0, %2251 ]
  %2279 = add nsw i32 %2276, 1
  store i32 %2279, ptr %2277, align 4, !tbaa !5
  %2280 = getelementptr inbounds i32, ptr %7, i64 %2278
  %2281 = load i32, ptr %2280, align 4, !tbaa !5
  %2282 = getelementptr inbounds i32, ptr %6, i64 %2278
  br label %2293

2283:                                             ; preds = %2260
  %2284 = icmp eq i32 %2263, %2266
  br i1 %2284, label %2285, label %2291

2285:                                             ; preds = %2283
  store i32 0, ptr %2262, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %8, i64 %2261
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %6, i64 %2261
  store i32 %2287, ptr %2288, align 4, !tbaa !5
  %2289 = add nuw nsw i64 %2261, 1
  %2290 = icmp eq i64 %2289, %2165
  br i1 %2290, label %2298, label %2260, !llvm.loop !837

2291:                                             ; preds = %2256, %2283
  store i16 %2248, ptr %1835, align 2, !tbaa !78
  %2292 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2293:                                             ; preds = %2269, %2275
  %2294 = phi ptr [ %2282, %2275 ], [ %2262, %2269 ]
  %2295 = phi i32 [ %2281, %2275 ], [ 1, %2269 ]
  %2296 = load i32, ptr %2294, align 4, !tbaa !5
  %2297 = add nsw i32 %2296, %2295
  store i32 %2297, ptr %2294, align 4, !tbaa !5
  br label %2298

2298:                                             ; preds = %2285, %2293, %2258, %2242
  %2299 = icmp eq i32 %2250, %5
  br i1 %2299, label %5442, label %2168, !llvm.loop !838

2300:                                             ; preds = %2151, %2435
  %2301 = phi i16 [ 0, %2151 ], [ %2383, %2435 ]
  %2302 = phi i32 [ 0, %2151 ], [ %2384, %2435 ]
  %2303 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2152, label %2304, label %2373

2304:                                             ; preds = %2300, %2363
  %2305 = phi i32 [ %2372, %2363 ], [ 0, %2300 ]
  %2306 = phi i64 [ %2314, %2363 ], [ %2156, %2300 ]
  %2307 = phi i64 [ %2371, %2363 ], [ %2155, %2300 ]
  %2308 = phi i32 [ %2369, %2363 ], [ %2303, %2300 ]
  %2309 = sub i32 %2154, %2305
  %2310 = tail call i32 @llvm.smin.i32(i32 %2309, i32 0)
  %2311 = sub i32 %2309, %2310
  %2312 = zext i32 %2311 to i64
  %2313 = add nuw nsw i64 %2312, 1
  %2314 = add nsw i64 %2306, -1
  %2315 = icmp ult i32 %2311, 31
  br i1 %2315, label %2351, label %2316

2316:                                             ; preds = %2304
  %2317 = and i64 %2313, 8589934560
  %2318 = sub i64 %2307, %2317
  br label %2319

2319:                                             ; preds = %2319, %2316
  %2320 = phi i64 [ 0, %2316 ], [ %2343, %2319 ]
  %2321 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2316 ], [ %2339, %2319 ]
  %2322 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2316 ], [ %2340, %2319 ]
  %2323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2316 ], [ %2341, %2319 ]
  %2324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2316 ], [ %2342, %2319 ]
  %2325 = sub i64 %2307, %2320
  %2326 = getelementptr inbounds i32, ptr %11, i64 %2325
  %2327 = getelementptr inbounds i32, ptr %2326, i64 -7
  %2328 = load <8 x i32>, ptr %2327, align 4, !tbaa !5
  %2329 = shufflevector <8 x i32> %2328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2330 = getelementptr inbounds i32, ptr %2326, i64 -15
  %2331 = load <8 x i32>, ptr %2330, align 4, !tbaa !5
  %2332 = shufflevector <8 x i32> %2331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2333 = getelementptr inbounds i32, ptr %2326, i64 -23
  %2334 = load <8 x i32>, ptr %2333, align 4, !tbaa !5
  %2335 = shufflevector <8 x i32> %2334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2336 = getelementptr inbounds i32, ptr %2326, i64 -31
  %2337 = load <8 x i32>, ptr %2336, align 4, !tbaa !5
  %2338 = shufflevector <8 x i32> %2337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2339 = mul <8 x i32> %2329, %2321
  %2340 = mul <8 x i32> %2332, %2322
  %2341 = mul <8 x i32> %2335, %2323
  %2342 = mul <8 x i32> %2338, %2324
  %2343 = add nuw i64 %2320, 32
  %2344 = icmp eq i64 %2343, %2317
  br i1 %2344, label %2345, label %2319, !llvm.loop !839

2345:                                             ; preds = %2319
  %2346 = mul <8 x i32> %2340, %2339
  %2347 = mul <8 x i32> %2341, %2346
  %2348 = mul <8 x i32> %2342, %2347
  %2349 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2348)
  %2350 = icmp eq i64 %2313, %2317
  br i1 %2350, label %2363, label %2351

2351:                                             ; preds = %2304, %2345
  %2352 = phi i64 [ %2307, %2304 ], [ %2318, %2345 ]
  %2353 = phi i32 [ 1, %2304 ], [ %2349, %2345 ]
  br label %2354

2354:                                             ; preds = %2351, %2354
  %2355 = phi i64 [ %2360, %2354 ], [ %2352, %2351 ]
  %2356 = phi i32 [ %2359, %2354 ], [ %2353, %2351 ]
  %2357 = getelementptr inbounds i32, ptr %11, i64 %2355
  %2358 = load i32, ptr %2357, align 4, !tbaa !5
  %2359 = mul nsw i32 %2358, %2356
  %2360 = add nsw i64 %2355, -1
  %2361 = trunc i64 %2355 to i32
  %2362 = icmp sgt i32 %2361, 0
  br i1 %2362, label %2354, label %2363, !llvm.loop !840

2363:                                             ; preds = %2354, %2345
  %2364 = phi i32 [ %2349, %2345 ], [ %2359, %2354 ]
  %2365 = and i64 %2314, 4294967295
  %2366 = getelementptr inbounds i32, ptr %6, i64 %2365
  %2367 = load i32, ptr %2366, align 4, !tbaa !5
  %2368 = mul nsw i32 %2367, %2364
  %2369 = add nsw i32 %2368, %2308
  %2370 = icmp sgt i64 %2306, 2
  %2371 = add nsw i64 %2307, -1
  %2372 = add i32 %2305, 1
  br i1 %2370, label %2304, label %2373, !llvm.loop !841

2373:                                             ; preds = %2363, %2300
  %2374 = phi i32 [ %2303, %2300 ], [ %2369, %2363 ]
  %2375 = icmp slt i32 %2374, %5
  br i1 %2375, label %2378, label %2376

2376:                                             ; preds = %2373
  %2377 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

2378:                                             ; preds = %2373
  %2379 = sext i32 %2374 to i64
  %2380 = getelementptr inbounds i64, ptr %1833, i64 %2379
  %2381 = load i64, ptr %2380, align 8, !tbaa !120
  %2382 = trunc i64 %2381 to i16
  %2383 = add i16 %2301, %2382
  store i16 %2383, ptr %1835, align 2, !tbaa !78
  %2384 = add nuw nsw i32 %2302, 1
  br i1 %2153, label %2385, label %2435

2385:                                             ; preds = %2378
  %2386 = load i32, ptr %4, align 4, !tbaa !5
  %2387 = load i32, ptr %12, align 4, !tbaa !5
  %2388 = add nsw i32 %2387, -1
  %2389 = icmp slt i32 %2386, %2388
  br i1 %2389, label %2412, label %2390

2390:                                             ; preds = %2385
  %2391 = icmp eq i32 %2386, %2388
  br i1 %2391, label %2392, label %2428

2392:                                             ; preds = %2390
  store i32 0, ptr %4, align 4, !tbaa !5
  %2393 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2393, ptr %6, align 4, !tbaa !5
  br i1 %2158, label %2435, label %2394

2394:                                             ; preds = %2392, %2422
  %2395 = phi i64 [ %2426, %2422 ], [ 1, %2392 ]
  %2396 = getelementptr inbounds i32, ptr %4, i64 %2395
  %2397 = load i32, ptr %2396, align 4, !tbaa !5
  %2398 = getelementptr inbounds i32, ptr %12, i64 %2395
  %2399 = load i32, ptr %2398, align 4, !tbaa !5
  %2400 = add nsw i32 %2399, -1
  %2401 = icmp slt i32 %2397, %2400
  br i1 %2401, label %2402, label %2420

2402:                                             ; preds = %2394
  br i1 %2389, label %2412, label %2403

2403:                                             ; preds = %2402
  %2404 = shl i64 %2395, 32
  %2405 = add i64 %2404, -4294967296
  %2406 = ashr exact i64 %2405, 32
  %2407 = getelementptr inbounds i32, ptr %7, i64 %2406
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = getelementptr inbounds i32, ptr %6, i64 %2395
  %2410 = load i32, ptr %2409, align 4, !tbaa !5
  %2411 = add nsw i32 %2410, %2408
  store i32 %2411, ptr %2409, align 4, !tbaa !5
  br label %2430

2412:                                             ; preds = %2385, %2402
  %2413 = phi i32 [ %2397, %2402 ], [ %2386, %2385 ]
  %2414 = phi ptr [ %2396, %2402 ], [ %4, %2385 ]
  %2415 = phi i64 [ %2395, %2402 ], [ 0, %2385 ]
  %2416 = add nsw i32 %2413, 1
  store i32 %2416, ptr %2414, align 4, !tbaa !5
  %2417 = getelementptr inbounds i32, ptr %7, i64 %2415
  %2418 = load i32, ptr %2417, align 4, !tbaa !5
  %2419 = getelementptr inbounds i32, ptr %6, i64 %2415
  br label %2430

2420:                                             ; preds = %2394
  %2421 = icmp eq i32 %2397, %2400
  br i1 %2421, label %2422, label %2428

2422:                                             ; preds = %2420
  store i32 0, ptr %2396, align 4, !tbaa !5
  %2423 = getelementptr inbounds i32, ptr %8, i64 %2395
  %2424 = load i32, ptr %2423, align 4, !tbaa !5
  %2425 = getelementptr inbounds i32, ptr %6, i64 %2395
  store i32 %2424, ptr %2425, align 4, !tbaa !5
  %2426 = add nuw nsw i64 %2395, 1
  %2427 = icmp eq i64 %2426, %2156
  br i1 %2427, label %2435, label %2394, !llvm.loop !842

2428:                                             ; preds = %2390, %2420
  %2429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2430:                                             ; preds = %2403, %2412
  %2431 = phi ptr [ %2419, %2412 ], [ %2396, %2403 ]
  %2432 = phi i32 [ %2418, %2412 ], [ 1, %2403 ]
  %2433 = load i32, ptr %2431, align 4, !tbaa !5
  %2434 = add nsw i32 %2433, %2432
  store i32 %2434, ptr %2431, align 4, !tbaa !5
  br label %2435

2435:                                             ; preds = %2422, %2430, %2392, %2378
  %2436 = icmp eq i32 %2384, %5
  br i1 %2436, label %5447, label %2300, !llvm.loop !843

2437:                                             ; preds = %1840
  %2438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

2439:                                             ; preds = %18
  %2440 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2441 = load ptr, ptr %2440, align 8, !tbaa !9
  %2442 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2443 = load ptr, ptr %2442, align 8, !tbaa !9
  store i32 0, ptr %2443, align 4, !tbaa !5
  %2444 = icmp eq i32 %13, 0
  br i1 %2444, label %2445, label %2448

2445:                                             ; preds = %2439
  %2446 = load i64, ptr %2441, align 8, !tbaa !120
  %2447 = trunc i64 %2446 to i32
  store i32 %2447, ptr %2443, align 4, !tbaa !5
  br label %5447

2448:                                             ; preds = %2439
  switch i32 %1, label %3039 [
    i32 1, label %2449
    i32 0, label %2747
  ]

2449:                                             ; preds = %2448
  %2450 = getelementptr inbounds i32, ptr %3, i64 %19
  %2451 = load i32, ptr %2450, align 4, !tbaa !5
  %2452 = icmp eq i32 %2451, 0
  %2453 = icmp sgt i32 %5, 0
  br i1 %2452, label %2463, label %2454

2454:                                             ; preds = %2449
  br i1 %2453, label %2455, label %5447

2455:                                             ; preds = %2454
  %2456 = icmp sgt i32 %13, 1
  %2457 = icmp sgt i32 %13, 0
  %2458 = add i32 %13, -2
  %2459 = zext i32 %2458 to i64
  %2460 = zext i32 %13 to i64
  %2461 = add nuw i32 %5, 1
  %2462 = icmp eq i32 %13, 1
  br label %2610

2463:                                             ; preds = %2449
  br i1 %2453, label %2464, label %5447

2464:                                             ; preds = %2463
  %2465 = icmp sgt i32 %13, 1
  %2466 = icmp sgt i32 %13, 0
  %2467 = add i32 %13, -2
  %2468 = zext i32 %2467 to i64
  %2469 = zext i32 %13 to i64
  %2470 = add nuw i32 %5, 1
  %2471 = icmp eq i32 %13, 1
  br label %2472

2472:                                             ; preds = %2464, %2608
  %2473 = phi i32 [ 0, %2464 ], [ %2560, %2608 ]
  %2474 = phi double [ 0.000000e+00, %2464 ], [ %2559, %2608 ]
  %2475 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2465, label %2476, label %2545

2476:                                             ; preds = %2472, %2535
  %2477 = phi i32 [ %2544, %2535 ], [ 0, %2472 ]
  %2478 = phi i64 [ %2486, %2535 ], [ %2469, %2472 ]
  %2479 = phi i64 [ %2543, %2535 ], [ %2468, %2472 ]
  %2480 = phi i32 [ %2541, %2535 ], [ %2475, %2472 ]
  %2481 = sub i32 %2467, %2477
  %2482 = tail call i32 @llvm.smin.i32(i32 %2481, i32 0)
  %2483 = sub i32 %2481, %2482
  %2484 = zext i32 %2483 to i64
  %2485 = add nuw nsw i64 %2484, 1
  %2486 = add nsw i64 %2478, -1
  %2487 = icmp ult i32 %2483, 31
  br i1 %2487, label %2523, label %2488

2488:                                             ; preds = %2476
  %2489 = and i64 %2485, 8589934560
  %2490 = sub i64 %2479, %2489
  br label %2491

2491:                                             ; preds = %2491, %2488
  %2492 = phi i64 [ 0, %2488 ], [ %2515, %2491 ]
  %2493 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2488 ], [ %2511, %2491 ]
  %2494 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2488 ], [ %2512, %2491 ]
  %2495 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2488 ], [ %2513, %2491 ]
  %2496 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2488 ], [ %2514, %2491 ]
  %2497 = sub i64 %2479, %2492
  %2498 = getelementptr inbounds i32, ptr %9, i64 %2497
  %2499 = getelementptr inbounds i32, ptr %2498, i64 -7
  %2500 = load <8 x i32>, ptr %2499, align 4, !tbaa !5
  %2501 = shufflevector <8 x i32> %2500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2502 = getelementptr inbounds i32, ptr %2498, i64 -15
  %2503 = load <8 x i32>, ptr %2502, align 4, !tbaa !5
  %2504 = shufflevector <8 x i32> %2503, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2505 = getelementptr inbounds i32, ptr %2498, i64 -23
  %2506 = load <8 x i32>, ptr %2505, align 4, !tbaa !5
  %2507 = shufflevector <8 x i32> %2506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2508 = getelementptr inbounds i32, ptr %2498, i64 -31
  %2509 = load <8 x i32>, ptr %2508, align 4, !tbaa !5
  %2510 = shufflevector <8 x i32> %2509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2511 = mul <8 x i32> %2501, %2493
  %2512 = mul <8 x i32> %2504, %2494
  %2513 = mul <8 x i32> %2507, %2495
  %2514 = mul <8 x i32> %2510, %2496
  %2515 = add nuw i64 %2492, 32
  %2516 = icmp eq i64 %2515, %2489
  br i1 %2516, label %2517, label %2491, !llvm.loop !844

2517:                                             ; preds = %2491
  %2518 = mul <8 x i32> %2512, %2511
  %2519 = mul <8 x i32> %2513, %2518
  %2520 = mul <8 x i32> %2514, %2519
  %2521 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2520)
  %2522 = icmp eq i64 %2485, %2489
  br i1 %2522, label %2535, label %2523

2523:                                             ; preds = %2476, %2517
  %2524 = phi i64 [ %2479, %2476 ], [ %2490, %2517 ]
  %2525 = phi i32 [ 1, %2476 ], [ %2521, %2517 ]
  br label %2526

2526:                                             ; preds = %2523, %2526
  %2527 = phi i64 [ %2532, %2526 ], [ %2524, %2523 ]
  %2528 = phi i32 [ %2531, %2526 ], [ %2525, %2523 ]
  %2529 = getelementptr inbounds i32, ptr %9, i64 %2527
  %2530 = load i32, ptr %2529, align 4, !tbaa !5
  %2531 = mul nsw i32 %2530, %2528
  %2532 = add nsw i64 %2527, -1
  %2533 = trunc i64 %2527 to i32
  %2534 = icmp sgt i32 %2533, 0
  br i1 %2534, label %2526, label %2535, !llvm.loop !845

2535:                                             ; preds = %2526, %2517
  %2536 = phi i32 [ %2521, %2517 ], [ %2531, %2526 ]
  %2537 = and i64 %2486, 4294967295
  %2538 = getelementptr inbounds i32, ptr %6, i64 %2537
  %2539 = load i32, ptr %2538, align 4, !tbaa !5
  %2540 = mul nsw i32 %2539, %2536
  %2541 = add nsw i32 %2540, %2480
  %2542 = icmp sgt i64 %2478, 2
  %2543 = add nsw i64 %2479, -1
  %2544 = add i32 %2477, 1
  br i1 %2542, label %2476, label %2545, !llvm.loop !846

2545:                                             ; preds = %2535, %2472
  %2546 = phi i32 [ %2475, %2472 ], [ %2541, %2535 ]
  %2547 = sext i32 %2546 to i64
  %2548 = getelementptr inbounds double, ptr %2, i64 %2547
  %2549 = load double, ptr %2548, align 8, !tbaa !18
  %2550 = getelementptr inbounds i64, ptr %2441, i64 %2547
  %2551 = load i64, ptr %2550, align 8, !tbaa !120
  %2552 = trunc i64 %2551 to i32
  %2553 = load i32, ptr %2443, align 4, !tbaa !5
  %2554 = sitofp i32 %2553 to double
  %2555 = sitofp i32 %2552 to double
  %2556 = fmul fast double %2549, %2555
  %2557 = fadd fast double %2556, %2554
  %2558 = fptosi double %2557 to i32
  store i32 %2558, ptr %2443, align 4, !tbaa !5
  %2559 = fadd fast double %2549, %2474
  %2560 = add nuw nsw i32 %2473, 1
  br i1 %2466, label %2561, label %2608

2561:                                             ; preds = %2545
  %2562 = load i32, ptr %4, align 4, !tbaa !5
  %2563 = load i32, ptr %12, align 4, !tbaa !5
  %2564 = add nsw i32 %2563, -1
  %2565 = icmp slt i32 %2562, %2564
  br i1 %2565, label %2585, label %2566

2566:                                             ; preds = %2561
  %2567 = icmp eq i32 %2562, %2564
  br i1 %2567, label %2568, label %2601

2568:                                             ; preds = %2566
  store i32 0, ptr %4, align 4, !tbaa !5
  %2569 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2569, ptr %6, align 4, !tbaa !5
  br i1 %2471, label %2608, label %2570

2570:                                             ; preds = %2568, %2595
  %2571 = phi i64 [ %2599, %2595 ], [ 1, %2568 ]
  %2572 = getelementptr inbounds i32, ptr %4, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !5
  %2574 = getelementptr inbounds i32, ptr %12, i64 %2571
  %2575 = load i32, ptr %2574, align 4, !tbaa !5
  %2576 = add nsw i32 %2575, -1
  %2577 = icmp slt i32 %2573, %2576
  br i1 %2577, label %2578, label %2593

2578:                                             ; preds = %2570
  br i1 %2565, label %2585, label %2579

2579:                                             ; preds = %2578
  %2580 = getelementptr inbounds i32, ptr %7, i64 %2571
  %2581 = load i32, ptr %2580, align 4, !tbaa !5
  %2582 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2583 = load i32, ptr %2582, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, %2581
  store i32 %2584, ptr %2582, align 4, !tbaa !5
  br label %2603

2585:                                             ; preds = %2561, %2578
  %2586 = phi i32 [ %2573, %2578 ], [ %2562, %2561 ]
  %2587 = phi ptr [ %2572, %2578 ], [ %4, %2561 ]
  %2588 = phi i64 [ %2571, %2578 ], [ 0, %2561 ]
  %2589 = add nsw i32 %2586, 1
  store i32 %2589, ptr %2587, align 4, !tbaa !5
  %2590 = getelementptr inbounds i32, ptr %7, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2588
  br label %2603

2593:                                             ; preds = %2570
  %2594 = icmp eq i32 %2573, %2576
  br i1 %2594, label %2595, label %2601

2595:                                             ; preds = %2593
  store i32 0, ptr %2572, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %8, i64 %2571
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2571
  store i32 %2597, ptr %2598, align 4, !tbaa !5
  %2599 = add nuw nsw i64 %2571, 1
  %2600 = icmp eq i64 %2599, %2469
  br i1 %2600, label %2608, label %2570, !llvm.loop !847

2601:                                             ; preds = %2566, %2593
  %2602 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2603:                                             ; preds = %2579, %2585
  %2604 = phi ptr [ %2592, %2585 ], [ %2572, %2579 ]
  %2605 = phi i32 [ %2591, %2585 ], [ 1, %2579 ]
  %2606 = load i32, ptr %2604, align 4, !tbaa !5
  %2607 = add nsw i32 %2606, %2605
  store i32 %2607, ptr %2604, align 4, !tbaa !5
  br label %2608

2608:                                             ; preds = %2595, %2603, %2568, %2545
  %2609 = icmp eq i32 %2560, %5
  br i1 %2609, label %5447, label %2472, !llvm.loop !848

2610:                                             ; preds = %2455, %2745
  %2611 = phi i32 [ 0, %2455 ], [ %2694, %2745 ]
  %2612 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2456, label %2613, label %2682

2613:                                             ; preds = %2610, %2672
  %2614 = phi i32 [ %2681, %2672 ], [ 0, %2610 ]
  %2615 = phi i64 [ %2623, %2672 ], [ %2460, %2610 ]
  %2616 = phi i64 [ %2680, %2672 ], [ %2459, %2610 ]
  %2617 = phi i32 [ %2678, %2672 ], [ %2612, %2610 ]
  %2618 = sub i32 %2458, %2614
  %2619 = tail call i32 @llvm.smin.i32(i32 %2618, i32 0)
  %2620 = sub i32 %2618, %2619
  %2621 = zext i32 %2620 to i64
  %2622 = add nuw nsw i64 %2621, 1
  %2623 = add nsw i64 %2615, -1
  %2624 = icmp ult i32 %2620, 31
  br i1 %2624, label %2660, label %2625

2625:                                             ; preds = %2613
  %2626 = and i64 %2622, 8589934560
  %2627 = sub i64 %2616, %2626
  br label %2628

2628:                                             ; preds = %2628, %2625
  %2629 = phi i64 [ 0, %2625 ], [ %2652, %2628 ]
  %2630 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2625 ], [ %2648, %2628 ]
  %2631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2625 ], [ %2649, %2628 ]
  %2632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2625 ], [ %2650, %2628 ]
  %2633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2625 ], [ %2651, %2628 ]
  %2634 = sub i64 %2616, %2629
  %2635 = getelementptr inbounds i32, ptr %11, i64 %2634
  %2636 = getelementptr inbounds i32, ptr %2635, i64 -7
  %2637 = load <8 x i32>, ptr %2636, align 4, !tbaa !5
  %2638 = shufflevector <8 x i32> %2637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2639 = getelementptr inbounds i32, ptr %2635, i64 -15
  %2640 = load <8 x i32>, ptr %2639, align 4, !tbaa !5
  %2641 = shufflevector <8 x i32> %2640, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2642 = getelementptr inbounds i32, ptr %2635, i64 -23
  %2643 = load <8 x i32>, ptr %2642, align 4, !tbaa !5
  %2644 = shufflevector <8 x i32> %2643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2645 = getelementptr inbounds i32, ptr %2635, i64 -31
  %2646 = load <8 x i32>, ptr %2645, align 4, !tbaa !5
  %2647 = shufflevector <8 x i32> %2646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2648 = mul <8 x i32> %2638, %2630
  %2649 = mul <8 x i32> %2641, %2631
  %2650 = mul <8 x i32> %2644, %2632
  %2651 = mul <8 x i32> %2647, %2633
  %2652 = add nuw i64 %2629, 32
  %2653 = icmp eq i64 %2652, %2626
  br i1 %2653, label %2654, label %2628, !llvm.loop !849

2654:                                             ; preds = %2628
  %2655 = mul <8 x i32> %2649, %2648
  %2656 = mul <8 x i32> %2650, %2655
  %2657 = mul <8 x i32> %2651, %2656
  %2658 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2657)
  %2659 = icmp eq i64 %2622, %2626
  br i1 %2659, label %2672, label %2660

2660:                                             ; preds = %2613, %2654
  %2661 = phi i64 [ %2616, %2613 ], [ %2627, %2654 ]
  %2662 = phi i32 [ 1, %2613 ], [ %2658, %2654 ]
  br label %2663

2663:                                             ; preds = %2660, %2663
  %2664 = phi i64 [ %2669, %2663 ], [ %2661, %2660 ]
  %2665 = phi i32 [ %2668, %2663 ], [ %2662, %2660 ]
  %2666 = getelementptr inbounds i32, ptr %11, i64 %2664
  %2667 = load i32, ptr %2666, align 4, !tbaa !5
  %2668 = mul nsw i32 %2667, %2665
  %2669 = add nsw i64 %2664, -1
  %2670 = trunc i64 %2664 to i32
  %2671 = icmp sgt i32 %2670, 0
  br i1 %2671, label %2663, label %2672, !llvm.loop !850

2672:                                             ; preds = %2663, %2654
  %2673 = phi i32 [ %2658, %2654 ], [ %2668, %2663 ]
  %2674 = and i64 %2623, 4294967295
  %2675 = getelementptr inbounds i32, ptr %6, i64 %2674
  %2676 = load i32, ptr %2675, align 4, !tbaa !5
  %2677 = mul nsw i32 %2676, %2673
  %2678 = add nsw i32 %2677, %2617
  %2679 = icmp sgt i64 %2615, 2
  %2680 = add nsw i64 %2616, -1
  %2681 = add i32 %2614, 1
  br i1 %2679, label %2613, label %2682, !llvm.loop !851

2682:                                             ; preds = %2672, %2610
  %2683 = phi i32 [ %2612, %2610 ], [ %2678, %2672 ]
  %2684 = icmp slt i32 %2683, %5
  br i1 %2684, label %2687, label %2685

2685:                                             ; preds = %2682
  %2686 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

2687:                                             ; preds = %2682
  %2688 = sext i32 %2683 to i64
  %2689 = getelementptr inbounds i64, ptr %2441, i64 %2688
  %2690 = load i64, ptr %2689, align 8, !tbaa !120
  %2691 = load i32, ptr %2443, align 4, !tbaa !5
  %2692 = trunc i64 %2690 to i32
  %2693 = add i32 %2691, %2692
  store i32 %2693, ptr %2443, align 4, !tbaa !5
  %2694 = add nuw nsw i32 %2611, 1
  br i1 %2457, label %2695, label %2745

2695:                                             ; preds = %2687
  %2696 = load i32, ptr %4, align 4, !tbaa !5
  %2697 = load i32, ptr %12, align 4, !tbaa !5
  %2698 = add nsw i32 %2697, -1
  %2699 = icmp slt i32 %2696, %2698
  br i1 %2699, label %2722, label %2700

2700:                                             ; preds = %2695
  %2701 = icmp eq i32 %2696, %2698
  br i1 %2701, label %2702, label %2738

2702:                                             ; preds = %2700
  store i32 0, ptr %4, align 4, !tbaa !5
  %2703 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2703, ptr %6, align 4, !tbaa !5
  br i1 %2462, label %2745, label %2704

2704:                                             ; preds = %2702, %2732
  %2705 = phi i64 [ %2736, %2732 ], [ 1, %2702 ]
  %2706 = getelementptr inbounds i32, ptr %4, i64 %2705
  %2707 = load i32, ptr %2706, align 4, !tbaa !5
  %2708 = getelementptr inbounds i32, ptr %12, i64 %2705
  %2709 = load i32, ptr %2708, align 4, !tbaa !5
  %2710 = add nsw i32 %2709, -1
  %2711 = icmp slt i32 %2707, %2710
  br i1 %2711, label %2712, label %2730

2712:                                             ; preds = %2704
  br i1 %2699, label %2722, label %2713

2713:                                             ; preds = %2712
  %2714 = shl i64 %2705, 32
  %2715 = add i64 %2714, -4294967296
  %2716 = ashr exact i64 %2715, 32
  %2717 = getelementptr inbounds i32, ptr %7, i64 %2716
  %2718 = load i32, ptr %2717, align 4, !tbaa !5
  %2719 = getelementptr inbounds i32, ptr %6, i64 %2705
  %2720 = load i32, ptr %2719, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, %2718
  store i32 %2721, ptr %2719, align 4, !tbaa !5
  br label %2740

2722:                                             ; preds = %2695, %2712
  %2723 = phi i32 [ %2707, %2712 ], [ %2696, %2695 ]
  %2724 = phi ptr [ %2706, %2712 ], [ %4, %2695 ]
  %2725 = phi i64 [ %2705, %2712 ], [ 0, %2695 ]
  %2726 = add nsw i32 %2723, 1
  store i32 %2726, ptr %2724, align 4, !tbaa !5
  %2727 = getelementptr inbounds i32, ptr %7, i64 %2725
  %2728 = load i32, ptr %2727, align 4, !tbaa !5
  %2729 = getelementptr inbounds i32, ptr %6, i64 %2725
  br label %2740

2730:                                             ; preds = %2704
  %2731 = icmp eq i32 %2707, %2710
  br i1 %2731, label %2732, label %2738

2732:                                             ; preds = %2730
  store i32 0, ptr %2706, align 4, !tbaa !5
  %2733 = getelementptr inbounds i32, ptr %8, i64 %2705
  %2734 = load i32, ptr %2733, align 4, !tbaa !5
  %2735 = getelementptr inbounds i32, ptr %6, i64 %2705
  store i32 %2734, ptr %2735, align 4, !tbaa !5
  %2736 = add nuw nsw i64 %2705, 1
  %2737 = icmp eq i64 %2736, %2460
  br i1 %2737, label %2745, label %2704, !llvm.loop !852

2738:                                             ; preds = %2700, %2730
  %2739 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2740:                                             ; preds = %2713, %2722
  %2741 = phi ptr [ %2729, %2722 ], [ %2706, %2713 ]
  %2742 = phi i32 [ %2728, %2722 ], [ 1, %2713 ]
  %2743 = load i32, ptr %2741, align 4, !tbaa !5
  %2744 = add nsw i32 %2743, %2742
  store i32 %2744, ptr %2741, align 4, !tbaa !5
  br label %2745

2745:                                             ; preds = %2732, %2740, %2702, %2687
  %2746 = icmp eq i32 %2694, %5
  br i1 %2746, label %5447, label %2610, !llvm.loop !853

2747:                                             ; preds = %2448
  %2748 = getelementptr inbounds i32, ptr %3, i64 %19
  %2749 = load i32, ptr %2748, align 4, !tbaa !5
  %2750 = icmp eq i32 %2749, 0
  %2751 = icmp sgt i32 %5, 0
  br i1 %2750, label %2761, label %2752

2752:                                             ; preds = %2747
  br i1 %2751, label %2753, label %5447

2753:                                             ; preds = %2752
  %2754 = icmp sgt i32 %13, 1
  %2755 = icmp sgt i32 %13, 0
  %2756 = add i32 %13, -2
  %2757 = zext i32 %2756 to i64
  %2758 = zext i32 %13 to i64
  %2759 = add nuw i32 %5, 1
  %2760 = icmp eq i32 %13, 1
  br label %2902

2761:                                             ; preds = %2747
  br i1 %2751, label %2762, label %5447

2762:                                             ; preds = %2761
  %2763 = icmp sgt i32 %13, 1
  %2764 = icmp sgt i32 %13, 0
  %2765 = add i32 %13, -2
  %2766 = zext i32 %2765 to i64
  %2767 = zext i32 %13 to i64
  %2768 = add nuw i32 %5, 1
  %2769 = icmp eq i32 %13, 1
  br label %2770

2770:                                             ; preds = %2762, %2900
  %2771 = phi i32 [ 0, %2762 ], [ %2852, %2900 ]
  %2772 = phi double [ 0.000000e+00, %2762 ], [ %2851, %2900 ]
  %2773 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2763, label %2774, label %2843

2774:                                             ; preds = %2770, %2833
  %2775 = phi i32 [ %2842, %2833 ], [ 0, %2770 ]
  %2776 = phi i64 [ %2784, %2833 ], [ %2767, %2770 ]
  %2777 = phi i64 [ %2841, %2833 ], [ %2766, %2770 ]
  %2778 = phi i32 [ %2839, %2833 ], [ %2773, %2770 ]
  %2779 = sub i32 %2765, %2775
  %2780 = tail call i32 @llvm.smin.i32(i32 %2779, i32 0)
  %2781 = sub i32 %2779, %2780
  %2782 = zext i32 %2781 to i64
  %2783 = add nuw nsw i64 %2782, 1
  %2784 = add nsw i64 %2776, -1
  %2785 = icmp ult i32 %2781, 31
  br i1 %2785, label %2821, label %2786

2786:                                             ; preds = %2774
  %2787 = and i64 %2783, 8589934560
  %2788 = sub i64 %2777, %2787
  br label %2789

2789:                                             ; preds = %2789, %2786
  %2790 = phi i64 [ 0, %2786 ], [ %2813, %2789 ]
  %2791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2786 ], [ %2809, %2789 ]
  %2792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2786 ], [ %2810, %2789 ]
  %2793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2786 ], [ %2811, %2789 ]
  %2794 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2786 ], [ %2812, %2789 ]
  %2795 = sub i64 %2777, %2790
  %2796 = getelementptr inbounds i32, ptr %9, i64 %2795
  %2797 = getelementptr inbounds i32, ptr %2796, i64 -7
  %2798 = load <8 x i32>, ptr %2797, align 4, !tbaa !5
  %2799 = shufflevector <8 x i32> %2798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2800 = getelementptr inbounds i32, ptr %2796, i64 -15
  %2801 = load <8 x i32>, ptr %2800, align 4, !tbaa !5
  %2802 = shufflevector <8 x i32> %2801, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2803 = getelementptr inbounds i32, ptr %2796, i64 -23
  %2804 = load <8 x i32>, ptr %2803, align 4, !tbaa !5
  %2805 = shufflevector <8 x i32> %2804, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2806 = getelementptr inbounds i32, ptr %2796, i64 -31
  %2807 = load <8 x i32>, ptr %2806, align 4, !tbaa !5
  %2808 = shufflevector <8 x i32> %2807, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2809 = mul <8 x i32> %2799, %2791
  %2810 = mul <8 x i32> %2802, %2792
  %2811 = mul <8 x i32> %2805, %2793
  %2812 = mul <8 x i32> %2808, %2794
  %2813 = add nuw i64 %2790, 32
  %2814 = icmp eq i64 %2813, %2787
  br i1 %2814, label %2815, label %2789, !llvm.loop !854

2815:                                             ; preds = %2789
  %2816 = mul <8 x i32> %2810, %2809
  %2817 = mul <8 x i32> %2811, %2816
  %2818 = mul <8 x i32> %2812, %2817
  %2819 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2818)
  %2820 = icmp eq i64 %2783, %2787
  br i1 %2820, label %2833, label %2821

2821:                                             ; preds = %2774, %2815
  %2822 = phi i64 [ %2777, %2774 ], [ %2788, %2815 ]
  %2823 = phi i32 [ 1, %2774 ], [ %2819, %2815 ]
  br label %2824

2824:                                             ; preds = %2821, %2824
  %2825 = phi i64 [ %2830, %2824 ], [ %2822, %2821 ]
  %2826 = phi i32 [ %2829, %2824 ], [ %2823, %2821 ]
  %2827 = getelementptr inbounds i32, ptr %9, i64 %2825
  %2828 = load i32, ptr %2827, align 4, !tbaa !5
  %2829 = mul nsw i32 %2828, %2826
  %2830 = add nsw i64 %2825, -1
  %2831 = trunc i64 %2825 to i32
  %2832 = icmp sgt i32 %2831, 0
  br i1 %2832, label %2824, label %2833, !llvm.loop !855

2833:                                             ; preds = %2824, %2815
  %2834 = phi i32 [ %2819, %2815 ], [ %2829, %2824 ]
  %2835 = and i64 %2784, 4294967295
  %2836 = getelementptr inbounds i32, ptr %6, i64 %2835
  %2837 = load i32, ptr %2836, align 4, !tbaa !5
  %2838 = mul nsw i32 %2837, %2834
  %2839 = add nsw i32 %2838, %2778
  %2840 = icmp sgt i64 %2776, 2
  %2841 = add nsw i64 %2777, -1
  %2842 = add i32 %2775, 1
  br i1 %2840, label %2774, label %2843, !llvm.loop !856

2843:                                             ; preds = %2833, %2770
  %2844 = phi i32 [ %2773, %2770 ], [ %2839, %2833 ]
  %2845 = sext i32 %2844 to i64
  %2846 = getelementptr inbounds i64, ptr %2441, i64 %2845
  %2847 = load i64, ptr %2846, align 8, !tbaa !120
  %2848 = trunc i64 %2847 to i32
  %2849 = load i32, ptr %2443, align 4, !tbaa !5
  %2850 = add nsw i32 %2849, %2848
  store i32 %2850, ptr %2443, align 4, !tbaa !5
  %2851 = fadd fast double %2772, 1.000000e+00
  %2852 = add nuw nsw i32 %2771, 1
  br i1 %2764, label %2853, label %2900

2853:                                             ; preds = %2843
  %2854 = load i32, ptr %4, align 4, !tbaa !5
  %2855 = load i32, ptr %12, align 4, !tbaa !5
  %2856 = add nsw i32 %2855, -1
  %2857 = icmp slt i32 %2854, %2856
  br i1 %2857, label %2877, label %2858

2858:                                             ; preds = %2853
  %2859 = icmp eq i32 %2854, %2856
  br i1 %2859, label %2860, label %2893

2860:                                             ; preds = %2858
  store i32 0, ptr %4, align 4, !tbaa !5
  %2861 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2861, ptr %6, align 4, !tbaa !5
  br i1 %2769, label %2900, label %2862

2862:                                             ; preds = %2860, %2887
  %2863 = phi i64 [ %2891, %2887 ], [ 1, %2860 ]
  %2864 = getelementptr inbounds i32, ptr %4, i64 %2863
  %2865 = load i32, ptr %2864, align 4, !tbaa !5
  %2866 = getelementptr inbounds i32, ptr %12, i64 %2863
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = add nsw i32 %2867, -1
  %2869 = icmp slt i32 %2865, %2868
  br i1 %2869, label %2870, label %2885

2870:                                             ; preds = %2862
  br i1 %2857, label %2877, label %2871

2871:                                             ; preds = %2870
  %2872 = getelementptr inbounds i32, ptr %7, i64 %2863
  %2873 = load i32, ptr %2872, align 4, !tbaa !5
  %2874 = getelementptr inbounds i32, ptr %6, i64 %2863
  %2875 = load i32, ptr %2874, align 4, !tbaa !5
  %2876 = add nsw i32 %2875, %2873
  store i32 %2876, ptr %2874, align 4, !tbaa !5
  br label %2895

2877:                                             ; preds = %2853, %2870
  %2878 = phi i32 [ %2865, %2870 ], [ %2854, %2853 ]
  %2879 = phi ptr [ %2864, %2870 ], [ %4, %2853 ]
  %2880 = phi i64 [ %2863, %2870 ], [ 0, %2853 ]
  %2881 = add nsw i32 %2878, 1
  store i32 %2881, ptr %2879, align 4, !tbaa !5
  %2882 = getelementptr inbounds i32, ptr %7, i64 %2880
  %2883 = load i32, ptr %2882, align 4, !tbaa !5
  %2884 = getelementptr inbounds i32, ptr %6, i64 %2880
  br label %2895

2885:                                             ; preds = %2862
  %2886 = icmp eq i32 %2865, %2868
  br i1 %2886, label %2887, label %2893

2887:                                             ; preds = %2885
  store i32 0, ptr %2864, align 4, !tbaa !5
  %2888 = getelementptr inbounds i32, ptr %8, i64 %2863
  %2889 = load i32, ptr %2888, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %6, i64 %2863
  store i32 %2889, ptr %2890, align 4, !tbaa !5
  %2891 = add nuw nsw i64 %2863, 1
  %2892 = icmp eq i64 %2891, %2767
  br i1 %2892, label %2900, label %2862, !llvm.loop !857

2893:                                             ; preds = %2858, %2885
  %2894 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

2895:                                             ; preds = %2871, %2877
  %2896 = phi ptr [ %2884, %2877 ], [ %2864, %2871 ]
  %2897 = phi i32 [ %2883, %2877 ], [ 1, %2871 ]
  %2898 = load i32, ptr %2896, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, %2897
  store i32 %2899, ptr %2896, align 4, !tbaa !5
  br label %2900

2900:                                             ; preds = %2887, %2895, %2860, %2843
  %2901 = icmp eq i32 %2852, %5
  br i1 %2901, label %5447, label %2770, !llvm.loop !858

2902:                                             ; preds = %2753, %3037
  %2903 = phi i32 [ 0, %2753 ], [ %2986, %3037 ]
  %2904 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2754, label %2905, label %2974

2905:                                             ; preds = %2902, %2964
  %2906 = phi i32 [ %2973, %2964 ], [ 0, %2902 ]
  %2907 = phi i64 [ %2915, %2964 ], [ %2758, %2902 ]
  %2908 = phi i64 [ %2972, %2964 ], [ %2757, %2902 ]
  %2909 = phi i32 [ %2970, %2964 ], [ %2904, %2902 ]
  %2910 = sub i32 %2756, %2906
  %2911 = tail call i32 @llvm.smin.i32(i32 %2910, i32 0)
  %2912 = sub i32 %2910, %2911
  %2913 = zext i32 %2912 to i64
  %2914 = add nuw nsw i64 %2913, 1
  %2915 = add nsw i64 %2907, -1
  %2916 = icmp ult i32 %2912, 31
  br i1 %2916, label %2952, label %2917

2917:                                             ; preds = %2905
  %2918 = and i64 %2914, 8589934560
  %2919 = sub i64 %2908, %2918
  br label %2920

2920:                                             ; preds = %2920, %2917
  %2921 = phi i64 [ 0, %2917 ], [ %2944, %2920 ]
  %2922 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2917 ], [ %2940, %2920 ]
  %2923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2917 ], [ %2941, %2920 ]
  %2924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2917 ], [ %2942, %2920 ]
  %2925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2917 ], [ %2943, %2920 ]
  %2926 = sub i64 %2908, %2921
  %2927 = getelementptr inbounds i32, ptr %11, i64 %2926
  %2928 = getelementptr inbounds i32, ptr %2927, i64 -7
  %2929 = load <8 x i32>, ptr %2928, align 4, !tbaa !5
  %2930 = shufflevector <8 x i32> %2929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2931 = getelementptr inbounds i32, ptr %2927, i64 -15
  %2932 = load <8 x i32>, ptr %2931, align 4, !tbaa !5
  %2933 = shufflevector <8 x i32> %2932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2934 = getelementptr inbounds i32, ptr %2927, i64 -23
  %2935 = load <8 x i32>, ptr %2934, align 4, !tbaa !5
  %2936 = shufflevector <8 x i32> %2935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2937 = getelementptr inbounds i32, ptr %2927, i64 -31
  %2938 = load <8 x i32>, ptr %2937, align 4, !tbaa !5
  %2939 = shufflevector <8 x i32> %2938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2940 = mul <8 x i32> %2930, %2922
  %2941 = mul <8 x i32> %2933, %2923
  %2942 = mul <8 x i32> %2936, %2924
  %2943 = mul <8 x i32> %2939, %2925
  %2944 = add nuw i64 %2921, 32
  %2945 = icmp eq i64 %2944, %2918
  br i1 %2945, label %2946, label %2920, !llvm.loop !859

2946:                                             ; preds = %2920
  %2947 = mul <8 x i32> %2941, %2940
  %2948 = mul <8 x i32> %2942, %2947
  %2949 = mul <8 x i32> %2943, %2948
  %2950 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2949)
  %2951 = icmp eq i64 %2914, %2918
  br i1 %2951, label %2964, label %2952

2952:                                             ; preds = %2905, %2946
  %2953 = phi i64 [ %2908, %2905 ], [ %2919, %2946 ]
  %2954 = phi i32 [ 1, %2905 ], [ %2950, %2946 ]
  br label %2955

2955:                                             ; preds = %2952, %2955
  %2956 = phi i64 [ %2961, %2955 ], [ %2953, %2952 ]
  %2957 = phi i32 [ %2960, %2955 ], [ %2954, %2952 ]
  %2958 = getelementptr inbounds i32, ptr %11, i64 %2956
  %2959 = load i32, ptr %2958, align 4, !tbaa !5
  %2960 = mul nsw i32 %2959, %2957
  %2961 = add nsw i64 %2956, -1
  %2962 = trunc i64 %2956 to i32
  %2963 = icmp sgt i32 %2962, 0
  br i1 %2963, label %2955, label %2964, !llvm.loop !860

2964:                                             ; preds = %2955, %2946
  %2965 = phi i32 [ %2950, %2946 ], [ %2960, %2955 ]
  %2966 = and i64 %2915, 4294967295
  %2967 = getelementptr inbounds i32, ptr %6, i64 %2966
  %2968 = load i32, ptr %2967, align 4, !tbaa !5
  %2969 = mul nsw i32 %2968, %2965
  %2970 = add nsw i32 %2969, %2909
  %2971 = icmp sgt i64 %2907, 2
  %2972 = add nsw i64 %2908, -1
  %2973 = add i32 %2906, 1
  br i1 %2971, label %2905, label %2974, !llvm.loop !861

2974:                                             ; preds = %2964, %2902
  %2975 = phi i32 [ %2904, %2902 ], [ %2970, %2964 ]
  %2976 = icmp slt i32 %2975, %5
  br i1 %2976, label %2979, label %2977

2977:                                             ; preds = %2974
  %2978 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

2979:                                             ; preds = %2974
  %2980 = sext i32 %2975 to i64
  %2981 = getelementptr inbounds i64, ptr %2441, i64 %2980
  %2982 = load i64, ptr %2981, align 8, !tbaa !120
  %2983 = trunc i64 %2982 to i32
  %2984 = load i32, ptr %2443, align 4, !tbaa !5
  %2985 = add nsw i32 %2984, %2983
  store i32 %2985, ptr %2443, align 4, !tbaa !5
  %2986 = add nuw nsw i32 %2903, 1
  br i1 %2755, label %2987, label %3037

2987:                                             ; preds = %2979
  %2988 = load i32, ptr %4, align 4, !tbaa !5
  %2989 = load i32, ptr %12, align 4, !tbaa !5
  %2990 = add nsw i32 %2989, -1
  %2991 = icmp slt i32 %2988, %2990
  br i1 %2991, label %3014, label %2992

2992:                                             ; preds = %2987
  %2993 = icmp eq i32 %2988, %2990
  br i1 %2993, label %2994, label %3030

2994:                                             ; preds = %2992
  store i32 0, ptr %4, align 4, !tbaa !5
  %2995 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2995, ptr %6, align 4, !tbaa !5
  br i1 %2760, label %3037, label %2996

2996:                                             ; preds = %2994, %3024
  %2997 = phi i64 [ %3028, %3024 ], [ 1, %2994 ]
  %2998 = getelementptr inbounds i32, ptr %4, i64 %2997
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = getelementptr inbounds i32, ptr %12, i64 %2997
  %3001 = load i32, ptr %3000, align 4, !tbaa !5
  %3002 = add nsw i32 %3001, -1
  %3003 = icmp slt i32 %2999, %3002
  br i1 %3003, label %3004, label %3022

3004:                                             ; preds = %2996
  br i1 %2991, label %3014, label %3005

3005:                                             ; preds = %3004
  %3006 = shl i64 %2997, 32
  %3007 = add i64 %3006, -4294967296
  %3008 = ashr exact i64 %3007, 32
  %3009 = getelementptr inbounds i32, ptr %7, i64 %3008
  %3010 = load i32, ptr %3009, align 4, !tbaa !5
  %3011 = getelementptr inbounds i32, ptr %6, i64 %2997
  %3012 = load i32, ptr %3011, align 4, !tbaa !5
  %3013 = add nsw i32 %3012, %3010
  store i32 %3013, ptr %3011, align 4, !tbaa !5
  br label %3032

3014:                                             ; preds = %2987, %3004
  %3015 = phi i32 [ %2999, %3004 ], [ %2988, %2987 ]
  %3016 = phi ptr [ %2998, %3004 ], [ %4, %2987 ]
  %3017 = phi i64 [ %2997, %3004 ], [ 0, %2987 ]
  %3018 = add nsw i32 %3015, 1
  store i32 %3018, ptr %3016, align 4, !tbaa !5
  %3019 = getelementptr inbounds i32, ptr %7, i64 %3017
  %3020 = load i32, ptr %3019, align 4, !tbaa !5
  %3021 = getelementptr inbounds i32, ptr %6, i64 %3017
  br label %3032

3022:                                             ; preds = %2996
  %3023 = icmp eq i32 %2999, %3002
  br i1 %3023, label %3024, label %3030

3024:                                             ; preds = %3022
  store i32 0, ptr %2998, align 4, !tbaa !5
  %3025 = getelementptr inbounds i32, ptr %8, i64 %2997
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = getelementptr inbounds i32, ptr %6, i64 %2997
  store i32 %3026, ptr %3027, align 4, !tbaa !5
  %3028 = add nuw nsw i64 %2997, 1
  %3029 = icmp eq i64 %3028, %2758
  br i1 %3029, label %3037, label %2996, !llvm.loop !862

3030:                                             ; preds = %2992, %3022
  %3031 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3032:                                             ; preds = %3005, %3014
  %3033 = phi ptr [ %3021, %3014 ], [ %2998, %3005 ]
  %3034 = phi i32 [ %3020, %3014 ], [ 1, %3005 ]
  %3035 = load i32, ptr %3033, align 4, !tbaa !5
  %3036 = add nsw i32 %3035, %3034
  store i32 %3036, ptr %3033, align 4, !tbaa !5
  br label %3037

3037:                                             ; preds = %3024, %3032, %2994, %2979
  %3038 = icmp eq i32 %2986, %5
  br i1 %3038, label %5447, label %2902, !llvm.loop !863

3039:                                             ; preds = %2448
  %3040 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

3041:                                             ; preds = %18
  %3042 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3043 = load ptr, ptr %3042, align 8, !tbaa !9
  %3044 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3045 = load ptr, ptr %3044, align 8, !tbaa !9
  store i64 0, ptr %3045, align 8, !tbaa !120
  %3046 = icmp eq i32 %13, 0
  br i1 %3046, label %3047, label %3049

3047:                                             ; preds = %3041
  %3048 = load i64, ptr %3043, align 8, !tbaa !120
  store i64 %3048, ptr %3045, align 8, !tbaa !120
  br label %5447

3049:                                             ; preds = %3041
  switch i32 %1, label %3639 [
    i32 1, label %3050
    i32 0, label %3349
  ]

3050:                                             ; preds = %3049
  %3051 = getelementptr inbounds i32, ptr %3, i64 %19
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = icmp eq i32 %3052, 0
  %3054 = icmp sgt i32 %5, 0
  br i1 %3053, label %3064, label %3055

3055:                                             ; preds = %3050
  br i1 %3054, label %3056, label %5447

3056:                                             ; preds = %3055
  %3057 = icmp sgt i32 %13, 1
  %3058 = icmp sgt i32 %13, 0
  %3059 = add i32 %13, -2
  %3060 = zext i32 %3059 to i64
  %3061 = zext i32 %13 to i64
  %3062 = add nuw i32 %5, 1
  %3063 = icmp eq i32 %13, 1
  br label %3210

3064:                                             ; preds = %3050
  br i1 %3054, label %3065, label %5447

3065:                                             ; preds = %3064
  %3066 = icmp sgt i32 %13, 1
  %3067 = icmp sgt i32 %13, 0
  %3068 = add i32 %13, -2
  %3069 = zext i32 %3068 to i64
  %3070 = zext i32 %13 to i64
  %3071 = add nuw i32 %5, 1
  %3072 = icmp eq i32 %13, 1
  br label %3073

3073:                                             ; preds = %3065, %3208
  %3074 = phi i64 [ 0, %3065 ], [ %3158, %3208 ]
  %3075 = phi i32 [ 0, %3065 ], [ %3160, %3208 ]
  %3076 = phi double [ 0.000000e+00, %3065 ], [ %3159, %3208 ]
  %3077 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3066, label %3078, label %3147

3078:                                             ; preds = %3073, %3137
  %3079 = phi i32 [ %3146, %3137 ], [ 0, %3073 ]
  %3080 = phi i64 [ %3088, %3137 ], [ %3070, %3073 ]
  %3081 = phi i64 [ %3145, %3137 ], [ %3069, %3073 ]
  %3082 = phi i32 [ %3143, %3137 ], [ %3077, %3073 ]
  %3083 = sub i32 %3068, %3079
  %3084 = tail call i32 @llvm.smin.i32(i32 %3083, i32 0)
  %3085 = sub i32 %3083, %3084
  %3086 = zext i32 %3085 to i64
  %3087 = add nuw nsw i64 %3086, 1
  %3088 = add nsw i64 %3080, -1
  %3089 = icmp ult i32 %3085, 31
  br i1 %3089, label %3125, label %3090

3090:                                             ; preds = %3078
  %3091 = and i64 %3087, 8589934560
  %3092 = sub i64 %3081, %3091
  br label %3093

3093:                                             ; preds = %3093, %3090
  %3094 = phi i64 [ 0, %3090 ], [ %3117, %3093 ]
  %3095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3090 ], [ %3113, %3093 ]
  %3096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3090 ], [ %3114, %3093 ]
  %3097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3090 ], [ %3115, %3093 ]
  %3098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3090 ], [ %3116, %3093 ]
  %3099 = sub i64 %3081, %3094
  %3100 = getelementptr inbounds i32, ptr %9, i64 %3099
  %3101 = getelementptr inbounds i32, ptr %3100, i64 -7
  %3102 = load <8 x i32>, ptr %3101, align 4, !tbaa !5
  %3103 = shufflevector <8 x i32> %3102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3104 = getelementptr inbounds i32, ptr %3100, i64 -15
  %3105 = load <8 x i32>, ptr %3104, align 4, !tbaa !5
  %3106 = shufflevector <8 x i32> %3105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3107 = getelementptr inbounds i32, ptr %3100, i64 -23
  %3108 = load <8 x i32>, ptr %3107, align 4, !tbaa !5
  %3109 = shufflevector <8 x i32> %3108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3110 = getelementptr inbounds i32, ptr %3100, i64 -31
  %3111 = load <8 x i32>, ptr %3110, align 4, !tbaa !5
  %3112 = shufflevector <8 x i32> %3111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3113 = mul <8 x i32> %3103, %3095
  %3114 = mul <8 x i32> %3106, %3096
  %3115 = mul <8 x i32> %3109, %3097
  %3116 = mul <8 x i32> %3112, %3098
  %3117 = add nuw i64 %3094, 32
  %3118 = icmp eq i64 %3117, %3091
  br i1 %3118, label %3119, label %3093, !llvm.loop !864

3119:                                             ; preds = %3093
  %3120 = mul <8 x i32> %3114, %3113
  %3121 = mul <8 x i32> %3115, %3120
  %3122 = mul <8 x i32> %3116, %3121
  %3123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3122)
  %3124 = icmp eq i64 %3087, %3091
  br i1 %3124, label %3137, label %3125

3125:                                             ; preds = %3078, %3119
  %3126 = phi i64 [ %3081, %3078 ], [ %3092, %3119 ]
  %3127 = phi i32 [ 1, %3078 ], [ %3123, %3119 ]
  br label %3128

3128:                                             ; preds = %3125, %3128
  %3129 = phi i64 [ %3134, %3128 ], [ %3126, %3125 ]
  %3130 = phi i32 [ %3133, %3128 ], [ %3127, %3125 ]
  %3131 = getelementptr inbounds i32, ptr %9, i64 %3129
  %3132 = load i32, ptr %3131, align 4, !tbaa !5
  %3133 = mul nsw i32 %3132, %3130
  %3134 = add nsw i64 %3129, -1
  %3135 = trunc i64 %3129 to i32
  %3136 = icmp sgt i32 %3135, 0
  br i1 %3136, label %3128, label %3137, !llvm.loop !865

3137:                                             ; preds = %3128, %3119
  %3138 = phi i32 [ %3123, %3119 ], [ %3133, %3128 ]
  %3139 = and i64 %3088, 4294967295
  %3140 = getelementptr inbounds i32, ptr %6, i64 %3139
  %3141 = load i32, ptr %3140, align 4, !tbaa !5
  %3142 = mul nsw i32 %3141, %3138
  %3143 = add nsw i32 %3142, %3082
  %3144 = icmp sgt i64 %3080, 2
  %3145 = add nsw i64 %3081, -1
  %3146 = add i32 %3079, 1
  br i1 %3144, label %3078, label %3147, !llvm.loop !866

3147:                                             ; preds = %3137, %3073
  %3148 = phi i32 [ %3077, %3073 ], [ %3143, %3137 ]
  %3149 = sext i32 %3148 to i64
  %3150 = getelementptr inbounds double, ptr %2, i64 %3149
  %3151 = load double, ptr %3150, align 8, !tbaa !18
  %3152 = getelementptr inbounds i64, ptr %3043, i64 %3149
  %3153 = load i64, ptr %3152, align 8, !tbaa !120
  %3154 = sitofp i64 %3074 to double
  %3155 = sitofp i64 %3153 to double
  %3156 = fmul fast double %3151, %3155
  %3157 = fadd fast double %3156, %3154
  %3158 = fptosi double %3157 to i64
  store i64 %3158, ptr %3045, align 8, !tbaa !120
  %3159 = fadd fast double %3151, %3076
  %3160 = add nuw nsw i32 %3075, 1
  br i1 %3067, label %3161, label %3208

3161:                                             ; preds = %3147
  %3162 = load i32, ptr %4, align 4, !tbaa !5
  %3163 = load i32, ptr %12, align 4, !tbaa !5
  %3164 = add nsw i32 %3163, -1
  %3165 = icmp slt i32 %3162, %3164
  br i1 %3165, label %3185, label %3166

3166:                                             ; preds = %3161
  %3167 = icmp eq i32 %3162, %3164
  br i1 %3167, label %3168, label %3201

3168:                                             ; preds = %3166
  store i32 0, ptr %4, align 4, !tbaa !5
  %3169 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3169, ptr %6, align 4, !tbaa !5
  br i1 %3072, label %3208, label %3170

3170:                                             ; preds = %3168, %3195
  %3171 = phi i64 [ %3199, %3195 ], [ 1, %3168 ]
  %3172 = getelementptr inbounds i32, ptr %4, i64 %3171
  %3173 = load i32, ptr %3172, align 4, !tbaa !5
  %3174 = getelementptr inbounds i32, ptr %12, i64 %3171
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = add nsw i32 %3175, -1
  %3177 = icmp slt i32 %3173, %3176
  br i1 %3177, label %3178, label %3193

3178:                                             ; preds = %3170
  br i1 %3165, label %3185, label %3179

3179:                                             ; preds = %3178
  %3180 = getelementptr inbounds i32, ptr %7, i64 %3171
  %3181 = load i32, ptr %3180, align 4, !tbaa !5
  %3182 = getelementptr inbounds i32, ptr %6, i64 %3171
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = add nsw i32 %3183, %3181
  store i32 %3184, ptr %3182, align 4, !tbaa !5
  br label %3203

3185:                                             ; preds = %3161, %3178
  %3186 = phi i32 [ %3173, %3178 ], [ %3162, %3161 ]
  %3187 = phi ptr [ %3172, %3178 ], [ %4, %3161 ]
  %3188 = phi i64 [ %3171, %3178 ], [ 0, %3161 ]
  %3189 = add nsw i32 %3186, 1
  store i32 %3189, ptr %3187, align 4, !tbaa !5
  %3190 = getelementptr inbounds i32, ptr %7, i64 %3188
  %3191 = load i32, ptr %3190, align 4, !tbaa !5
  %3192 = getelementptr inbounds i32, ptr %6, i64 %3188
  br label %3203

3193:                                             ; preds = %3170
  %3194 = icmp eq i32 %3173, %3176
  br i1 %3194, label %3195, label %3201

3195:                                             ; preds = %3193
  store i32 0, ptr %3172, align 4, !tbaa !5
  %3196 = getelementptr inbounds i32, ptr %8, i64 %3171
  %3197 = load i32, ptr %3196, align 4, !tbaa !5
  %3198 = getelementptr inbounds i32, ptr %6, i64 %3171
  store i32 %3197, ptr %3198, align 4, !tbaa !5
  %3199 = add nuw nsw i64 %3171, 1
  %3200 = icmp eq i64 %3199, %3070
  br i1 %3200, label %3208, label %3170, !llvm.loop !867

3201:                                             ; preds = %3166, %3193
  %3202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3203:                                             ; preds = %3179, %3185
  %3204 = phi ptr [ %3192, %3185 ], [ %3172, %3179 ]
  %3205 = phi i32 [ %3191, %3185 ], [ 1, %3179 ]
  %3206 = load i32, ptr %3204, align 4, !tbaa !5
  %3207 = add nsw i32 %3206, %3205
  store i32 %3207, ptr %3204, align 4, !tbaa !5
  br label %3208

3208:                                             ; preds = %3195, %3203, %3168, %3147
  %3209 = icmp eq i32 %3160, %5
  br i1 %3209, label %5447, label %3073, !llvm.loop !868

3210:                                             ; preds = %3056, %3347
  %3211 = phi i64 [ 0, %3056 ], [ %3295, %3347 ]
  %3212 = phi i32 [ 0, %3056 ], [ %3296, %3347 ]
  %3213 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3057, label %3214, label %3283

3214:                                             ; preds = %3210, %3273
  %3215 = phi i32 [ %3282, %3273 ], [ 0, %3210 ]
  %3216 = phi i64 [ %3224, %3273 ], [ %3061, %3210 ]
  %3217 = phi i64 [ %3281, %3273 ], [ %3060, %3210 ]
  %3218 = phi i32 [ %3279, %3273 ], [ %3213, %3210 ]
  %3219 = sub i32 %3059, %3215
  %3220 = tail call i32 @llvm.smin.i32(i32 %3219, i32 0)
  %3221 = sub i32 %3219, %3220
  %3222 = zext i32 %3221 to i64
  %3223 = add nuw nsw i64 %3222, 1
  %3224 = add nsw i64 %3216, -1
  %3225 = icmp ult i32 %3221, 31
  br i1 %3225, label %3261, label %3226

3226:                                             ; preds = %3214
  %3227 = and i64 %3223, 8589934560
  %3228 = sub i64 %3217, %3227
  br label %3229

3229:                                             ; preds = %3229, %3226
  %3230 = phi i64 [ 0, %3226 ], [ %3253, %3229 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3226 ], [ %3249, %3229 ]
  %3232 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3226 ], [ %3250, %3229 ]
  %3233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3226 ], [ %3251, %3229 ]
  %3234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3226 ], [ %3252, %3229 ]
  %3235 = sub i64 %3217, %3230
  %3236 = getelementptr inbounds i32, ptr %11, i64 %3235
  %3237 = getelementptr inbounds i32, ptr %3236, i64 -7
  %3238 = load <8 x i32>, ptr %3237, align 4, !tbaa !5
  %3239 = shufflevector <8 x i32> %3238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3240 = getelementptr inbounds i32, ptr %3236, i64 -15
  %3241 = load <8 x i32>, ptr %3240, align 4, !tbaa !5
  %3242 = shufflevector <8 x i32> %3241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3243 = getelementptr inbounds i32, ptr %3236, i64 -23
  %3244 = load <8 x i32>, ptr %3243, align 4, !tbaa !5
  %3245 = shufflevector <8 x i32> %3244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3246 = getelementptr inbounds i32, ptr %3236, i64 -31
  %3247 = load <8 x i32>, ptr %3246, align 4, !tbaa !5
  %3248 = shufflevector <8 x i32> %3247, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3249 = mul <8 x i32> %3239, %3231
  %3250 = mul <8 x i32> %3242, %3232
  %3251 = mul <8 x i32> %3245, %3233
  %3252 = mul <8 x i32> %3248, %3234
  %3253 = add nuw i64 %3230, 32
  %3254 = icmp eq i64 %3253, %3227
  br i1 %3254, label %3255, label %3229, !llvm.loop !869

3255:                                             ; preds = %3229
  %3256 = mul <8 x i32> %3250, %3249
  %3257 = mul <8 x i32> %3251, %3256
  %3258 = mul <8 x i32> %3252, %3257
  %3259 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3258)
  %3260 = icmp eq i64 %3223, %3227
  br i1 %3260, label %3273, label %3261

3261:                                             ; preds = %3214, %3255
  %3262 = phi i64 [ %3217, %3214 ], [ %3228, %3255 ]
  %3263 = phi i32 [ 1, %3214 ], [ %3259, %3255 ]
  br label %3264

3264:                                             ; preds = %3261, %3264
  %3265 = phi i64 [ %3270, %3264 ], [ %3262, %3261 ]
  %3266 = phi i32 [ %3269, %3264 ], [ %3263, %3261 ]
  %3267 = getelementptr inbounds i32, ptr %11, i64 %3265
  %3268 = load i32, ptr %3267, align 4, !tbaa !5
  %3269 = mul nsw i32 %3268, %3266
  %3270 = add nsw i64 %3265, -1
  %3271 = trunc i64 %3265 to i32
  %3272 = icmp sgt i32 %3271, 0
  br i1 %3272, label %3264, label %3273, !llvm.loop !870

3273:                                             ; preds = %3264, %3255
  %3274 = phi i32 [ %3259, %3255 ], [ %3269, %3264 ]
  %3275 = and i64 %3224, 4294967295
  %3276 = getelementptr inbounds i32, ptr %6, i64 %3275
  %3277 = load i32, ptr %3276, align 4, !tbaa !5
  %3278 = mul nsw i32 %3277, %3274
  %3279 = add nsw i32 %3278, %3218
  %3280 = icmp sgt i64 %3216, 2
  %3281 = add nsw i64 %3217, -1
  %3282 = add i32 %3215, 1
  br i1 %3280, label %3214, label %3283, !llvm.loop !871

3283:                                             ; preds = %3273, %3210
  %3284 = phi i32 [ %3213, %3210 ], [ %3279, %3273 ]
  %3285 = icmp slt i32 %3284, %5
  br i1 %3285, label %3288, label %3286

3286:                                             ; preds = %3283
  %3287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

3288:                                             ; preds = %3283
  %3289 = sext i32 %3284 to i64
  %3290 = getelementptr inbounds i64, ptr %3043, i64 %3289
  %3291 = load i64, ptr %3290, align 8, !tbaa !120
  %3292 = sitofp i64 %3211 to double
  %3293 = sitofp i64 %3291 to double
  %3294 = fadd fast double %3292, %3293
  %3295 = fptosi double %3294 to i64
  store i64 %3295, ptr %3045, align 8, !tbaa !120
  %3296 = add nuw nsw i32 %3212, 1
  br i1 %3058, label %3297, label %3347

3297:                                             ; preds = %3288
  %3298 = load i32, ptr %4, align 4, !tbaa !5
  %3299 = load i32, ptr %12, align 4, !tbaa !5
  %3300 = add nsw i32 %3299, -1
  %3301 = icmp slt i32 %3298, %3300
  br i1 %3301, label %3324, label %3302

3302:                                             ; preds = %3297
  %3303 = icmp eq i32 %3298, %3300
  br i1 %3303, label %3304, label %3340

3304:                                             ; preds = %3302
  store i32 0, ptr %4, align 4, !tbaa !5
  %3305 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3305, ptr %6, align 4, !tbaa !5
  br i1 %3063, label %3347, label %3306

3306:                                             ; preds = %3304, %3334
  %3307 = phi i64 [ %3338, %3334 ], [ 1, %3304 ]
  %3308 = getelementptr inbounds i32, ptr %4, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = getelementptr inbounds i32, ptr %12, i64 %3307
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = add nsw i32 %3311, -1
  %3313 = icmp slt i32 %3309, %3312
  br i1 %3313, label %3314, label %3332

3314:                                             ; preds = %3306
  br i1 %3301, label %3324, label %3315

3315:                                             ; preds = %3314
  %3316 = shl i64 %3307, 32
  %3317 = add i64 %3316, -4294967296
  %3318 = ashr exact i64 %3317, 32
  %3319 = getelementptr inbounds i32, ptr %7, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = getelementptr inbounds i32, ptr %6, i64 %3307
  %3322 = load i32, ptr %3321, align 4, !tbaa !5
  %3323 = add nsw i32 %3322, %3320
  store i32 %3323, ptr %3321, align 4, !tbaa !5
  br label %3342

3324:                                             ; preds = %3297, %3314
  %3325 = phi i32 [ %3309, %3314 ], [ %3298, %3297 ]
  %3326 = phi ptr [ %3308, %3314 ], [ %4, %3297 ]
  %3327 = phi i64 [ %3307, %3314 ], [ 0, %3297 ]
  %3328 = add nsw i32 %3325, 1
  store i32 %3328, ptr %3326, align 4, !tbaa !5
  %3329 = getelementptr inbounds i32, ptr %7, i64 %3327
  %3330 = load i32, ptr %3329, align 4, !tbaa !5
  %3331 = getelementptr inbounds i32, ptr %6, i64 %3327
  br label %3342

3332:                                             ; preds = %3306
  %3333 = icmp eq i32 %3309, %3312
  br i1 %3333, label %3334, label %3340

3334:                                             ; preds = %3332
  store i32 0, ptr %3308, align 4, !tbaa !5
  %3335 = getelementptr inbounds i32, ptr %8, i64 %3307
  %3336 = load i32, ptr %3335, align 4, !tbaa !5
  %3337 = getelementptr inbounds i32, ptr %6, i64 %3307
  store i32 %3336, ptr %3337, align 4, !tbaa !5
  %3338 = add nuw nsw i64 %3307, 1
  %3339 = icmp eq i64 %3338, %3061
  br i1 %3339, label %3347, label %3306, !llvm.loop !872

3340:                                             ; preds = %3302, %3332
  %3341 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3342:                                             ; preds = %3315, %3324
  %3343 = phi ptr [ %3331, %3324 ], [ %3308, %3315 ]
  %3344 = phi i32 [ %3330, %3324 ], [ 1, %3315 ]
  %3345 = load i32, ptr %3343, align 4, !tbaa !5
  %3346 = add nsw i32 %3345, %3344
  store i32 %3346, ptr %3343, align 4, !tbaa !5
  br label %3347

3347:                                             ; preds = %3334, %3342, %3304, %3288
  %3348 = icmp eq i32 %3296, %5
  br i1 %3348, label %5447, label %3210, !llvm.loop !873

3349:                                             ; preds = %3049
  %3350 = getelementptr inbounds i32, ptr %3, i64 %19
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = icmp eq i32 %3351, 0
  %3353 = icmp sgt i32 %5, 0
  br i1 %3352, label %3363, label %3354

3354:                                             ; preds = %3349
  br i1 %3353, label %3355, label %5447

3355:                                             ; preds = %3354
  %3356 = icmp sgt i32 %13, 1
  %3357 = icmp sgt i32 %13, 0
  %3358 = add i32 %13, -2
  %3359 = zext i32 %3358 to i64
  %3360 = zext i32 %13 to i64
  %3361 = add nuw i32 %5, 1
  %3362 = icmp eq i32 %13, 1
  br label %3503

3363:                                             ; preds = %3349
  br i1 %3353, label %3364, label %5447

3364:                                             ; preds = %3363
  %3365 = icmp sgt i32 %13, 1
  %3366 = icmp sgt i32 %13, 0
  %3367 = add i32 %13, -2
  %3368 = zext i32 %3367 to i64
  %3369 = zext i32 %13 to i64
  %3370 = add nuw i32 %5, 1
  %3371 = icmp eq i32 %13, 1
  br label %3372

3372:                                             ; preds = %3364, %3501
  %3373 = phi i64 [ 0, %3364 ], [ %3451, %3501 ]
  %3374 = phi i32 [ 0, %3364 ], [ %3453, %3501 ]
  %3375 = phi double [ 0.000000e+00, %3364 ], [ %3452, %3501 ]
  %3376 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3365, label %3377, label %3446

3377:                                             ; preds = %3372, %3436
  %3378 = phi i32 [ %3445, %3436 ], [ 0, %3372 ]
  %3379 = phi i64 [ %3387, %3436 ], [ %3369, %3372 ]
  %3380 = phi i64 [ %3444, %3436 ], [ %3368, %3372 ]
  %3381 = phi i32 [ %3442, %3436 ], [ %3376, %3372 ]
  %3382 = sub i32 %3367, %3378
  %3383 = tail call i32 @llvm.smin.i32(i32 %3382, i32 0)
  %3384 = sub i32 %3382, %3383
  %3385 = zext i32 %3384 to i64
  %3386 = add nuw nsw i64 %3385, 1
  %3387 = add nsw i64 %3379, -1
  %3388 = icmp ult i32 %3384, 31
  br i1 %3388, label %3424, label %3389

3389:                                             ; preds = %3377
  %3390 = and i64 %3386, 8589934560
  %3391 = sub i64 %3380, %3390
  br label %3392

3392:                                             ; preds = %3392, %3389
  %3393 = phi i64 [ 0, %3389 ], [ %3416, %3392 ]
  %3394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3389 ], [ %3412, %3392 ]
  %3395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3389 ], [ %3413, %3392 ]
  %3396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3389 ], [ %3414, %3392 ]
  %3397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3389 ], [ %3415, %3392 ]
  %3398 = sub i64 %3380, %3393
  %3399 = getelementptr inbounds i32, ptr %9, i64 %3398
  %3400 = getelementptr inbounds i32, ptr %3399, i64 -7
  %3401 = load <8 x i32>, ptr %3400, align 4, !tbaa !5
  %3402 = shufflevector <8 x i32> %3401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3403 = getelementptr inbounds i32, ptr %3399, i64 -15
  %3404 = load <8 x i32>, ptr %3403, align 4, !tbaa !5
  %3405 = shufflevector <8 x i32> %3404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3406 = getelementptr inbounds i32, ptr %3399, i64 -23
  %3407 = load <8 x i32>, ptr %3406, align 4, !tbaa !5
  %3408 = shufflevector <8 x i32> %3407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3409 = getelementptr inbounds i32, ptr %3399, i64 -31
  %3410 = load <8 x i32>, ptr %3409, align 4, !tbaa !5
  %3411 = shufflevector <8 x i32> %3410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3412 = mul <8 x i32> %3402, %3394
  %3413 = mul <8 x i32> %3405, %3395
  %3414 = mul <8 x i32> %3408, %3396
  %3415 = mul <8 x i32> %3411, %3397
  %3416 = add nuw i64 %3393, 32
  %3417 = icmp eq i64 %3416, %3390
  br i1 %3417, label %3418, label %3392, !llvm.loop !874

3418:                                             ; preds = %3392
  %3419 = mul <8 x i32> %3413, %3412
  %3420 = mul <8 x i32> %3414, %3419
  %3421 = mul <8 x i32> %3415, %3420
  %3422 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3421)
  %3423 = icmp eq i64 %3386, %3390
  br i1 %3423, label %3436, label %3424

3424:                                             ; preds = %3377, %3418
  %3425 = phi i64 [ %3380, %3377 ], [ %3391, %3418 ]
  %3426 = phi i32 [ 1, %3377 ], [ %3422, %3418 ]
  br label %3427

3427:                                             ; preds = %3424, %3427
  %3428 = phi i64 [ %3433, %3427 ], [ %3425, %3424 ]
  %3429 = phi i32 [ %3432, %3427 ], [ %3426, %3424 ]
  %3430 = getelementptr inbounds i32, ptr %9, i64 %3428
  %3431 = load i32, ptr %3430, align 4, !tbaa !5
  %3432 = mul nsw i32 %3431, %3429
  %3433 = add nsw i64 %3428, -1
  %3434 = trunc i64 %3428 to i32
  %3435 = icmp sgt i32 %3434, 0
  br i1 %3435, label %3427, label %3436, !llvm.loop !875

3436:                                             ; preds = %3427, %3418
  %3437 = phi i32 [ %3422, %3418 ], [ %3432, %3427 ]
  %3438 = and i64 %3387, 4294967295
  %3439 = getelementptr inbounds i32, ptr %6, i64 %3438
  %3440 = load i32, ptr %3439, align 4, !tbaa !5
  %3441 = mul nsw i32 %3440, %3437
  %3442 = add nsw i32 %3441, %3381
  %3443 = icmp sgt i64 %3379, 2
  %3444 = add nsw i64 %3380, -1
  %3445 = add i32 %3378, 1
  br i1 %3443, label %3377, label %3446, !llvm.loop !876

3446:                                             ; preds = %3436, %3372
  %3447 = phi i32 [ %3376, %3372 ], [ %3442, %3436 ]
  %3448 = sext i32 %3447 to i64
  %3449 = getelementptr inbounds i64, ptr %3043, i64 %3448
  %3450 = load i64, ptr %3449, align 8, !tbaa !120
  %3451 = add nsw i64 %3373, %3450
  store i64 %3451, ptr %3045, align 8, !tbaa !120
  %3452 = fadd fast double %3375, 1.000000e+00
  %3453 = add nuw nsw i32 %3374, 1
  br i1 %3366, label %3454, label %3501

3454:                                             ; preds = %3446
  %3455 = load i32, ptr %4, align 4, !tbaa !5
  %3456 = load i32, ptr %12, align 4, !tbaa !5
  %3457 = add nsw i32 %3456, -1
  %3458 = icmp slt i32 %3455, %3457
  br i1 %3458, label %3478, label %3459

3459:                                             ; preds = %3454
  %3460 = icmp eq i32 %3455, %3457
  br i1 %3460, label %3461, label %3494

3461:                                             ; preds = %3459
  store i32 0, ptr %4, align 4, !tbaa !5
  %3462 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3462, ptr %6, align 4, !tbaa !5
  br i1 %3371, label %3501, label %3463

3463:                                             ; preds = %3461, %3488
  %3464 = phi i64 [ %3492, %3488 ], [ 1, %3461 ]
  %3465 = getelementptr inbounds i32, ptr %4, i64 %3464
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = getelementptr inbounds i32, ptr %12, i64 %3464
  %3468 = load i32, ptr %3467, align 4, !tbaa !5
  %3469 = add nsw i32 %3468, -1
  %3470 = icmp slt i32 %3466, %3469
  br i1 %3470, label %3471, label %3486

3471:                                             ; preds = %3463
  br i1 %3458, label %3478, label %3472

3472:                                             ; preds = %3471
  %3473 = getelementptr inbounds i32, ptr %7, i64 %3464
  %3474 = load i32, ptr %3473, align 4, !tbaa !5
  %3475 = getelementptr inbounds i32, ptr %6, i64 %3464
  %3476 = load i32, ptr %3475, align 4, !tbaa !5
  %3477 = add nsw i32 %3476, %3474
  store i32 %3477, ptr %3475, align 4, !tbaa !5
  br label %3496

3478:                                             ; preds = %3454, %3471
  %3479 = phi i32 [ %3466, %3471 ], [ %3455, %3454 ]
  %3480 = phi ptr [ %3465, %3471 ], [ %4, %3454 ]
  %3481 = phi i64 [ %3464, %3471 ], [ 0, %3454 ]
  %3482 = add nsw i32 %3479, 1
  store i32 %3482, ptr %3480, align 4, !tbaa !5
  %3483 = getelementptr inbounds i32, ptr %7, i64 %3481
  %3484 = load i32, ptr %3483, align 4, !tbaa !5
  %3485 = getelementptr inbounds i32, ptr %6, i64 %3481
  br label %3496

3486:                                             ; preds = %3463
  %3487 = icmp eq i32 %3466, %3469
  br i1 %3487, label %3488, label %3494

3488:                                             ; preds = %3486
  store i32 0, ptr %3465, align 4, !tbaa !5
  %3489 = getelementptr inbounds i32, ptr %8, i64 %3464
  %3490 = load i32, ptr %3489, align 4, !tbaa !5
  %3491 = getelementptr inbounds i32, ptr %6, i64 %3464
  store i32 %3490, ptr %3491, align 4, !tbaa !5
  %3492 = add nuw nsw i64 %3464, 1
  %3493 = icmp eq i64 %3492, %3369
  br i1 %3493, label %3501, label %3463, !llvm.loop !877

3494:                                             ; preds = %3459, %3486
  %3495 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3496:                                             ; preds = %3472, %3478
  %3497 = phi ptr [ %3485, %3478 ], [ %3465, %3472 ]
  %3498 = phi i32 [ %3484, %3478 ], [ 1, %3472 ]
  %3499 = load i32, ptr %3497, align 4, !tbaa !5
  %3500 = add nsw i32 %3499, %3498
  store i32 %3500, ptr %3497, align 4, !tbaa !5
  br label %3501

3501:                                             ; preds = %3488, %3496, %3461, %3446
  %3502 = icmp eq i32 %3453, %5
  br i1 %3502, label %5447, label %3372, !llvm.loop !878

3503:                                             ; preds = %3355, %3637
  %3504 = phi i64 [ 0, %3355 ], [ %3585, %3637 ]
  %3505 = phi i32 [ 0, %3355 ], [ %3586, %3637 ]
  %3506 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3356, label %3507, label %3576

3507:                                             ; preds = %3503, %3566
  %3508 = phi i32 [ %3575, %3566 ], [ 0, %3503 ]
  %3509 = phi i64 [ %3517, %3566 ], [ %3360, %3503 ]
  %3510 = phi i64 [ %3574, %3566 ], [ %3359, %3503 ]
  %3511 = phi i32 [ %3572, %3566 ], [ %3506, %3503 ]
  %3512 = sub i32 %3358, %3508
  %3513 = tail call i32 @llvm.smin.i32(i32 %3512, i32 0)
  %3514 = sub i32 %3512, %3513
  %3515 = zext i32 %3514 to i64
  %3516 = add nuw nsw i64 %3515, 1
  %3517 = add nsw i64 %3509, -1
  %3518 = icmp ult i32 %3514, 31
  br i1 %3518, label %3554, label %3519

3519:                                             ; preds = %3507
  %3520 = and i64 %3516, 8589934560
  %3521 = sub i64 %3510, %3520
  br label %3522

3522:                                             ; preds = %3522, %3519
  %3523 = phi i64 [ 0, %3519 ], [ %3546, %3522 ]
  %3524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3519 ], [ %3542, %3522 ]
  %3525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3519 ], [ %3543, %3522 ]
  %3526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3519 ], [ %3544, %3522 ]
  %3527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3519 ], [ %3545, %3522 ]
  %3528 = sub i64 %3510, %3523
  %3529 = getelementptr inbounds i32, ptr %11, i64 %3528
  %3530 = getelementptr inbounds i32, ptr %3529, i64 -7
  %3531 = load <8 x i32>, ptr %3530, align 4, !tbaa !5
  %3532 = shufflevector <8 x i32> %3531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3533 = getelementptr inbounds i32, ptr %3529, i64 -15
  %3534 = load <8 x i32>, ptr %3533, align 4, !tbaa !5
  %3535 = shufflevector <8 x i32> %3534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3536 = getelementptr inbounds i32, ptr %3529, i64 -23
  %3537 = load <8 x i32>, ptr %3536, align 4, !tbaa !5
  %3538 = shufflevector <8 x i32> %3537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3539 = getelementptr inbounds i32, ptr %3529, i64 -31
  %3540 = load <8 x i32>, ptr %3539, align 4, !tbaa !5
  %3541 = shufflevector <8 x i32> %3540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3542 = mul <8 x i32> %3532, %3524
  %3543 = mul <8 x i32> %3535, %3525
  %3544 = mul <8 x i32> %3538, %3526
  %3545 = mul <8 x i32> %3541, %3527
  %3546 = add nuw i64 %3523, 32
  %3547 = icmp eq i64 %3546, %3520
  br i1 %3547, label %3548, label %3522, !llvm.loop !879

3548:                                             ; preds = %3522
  %3549 = mul <8 x i32> %3543, %3542
  %3550 = mul <8 x i32> %3544, %3549
  %3551 = mul <8 x i32> %3545, %3550
  %3552 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3551)
  %3553 = icmp eq i64 %3516, %3520
  br i1 %3553, label %3566, label %3554

3554:                                             ; preds = %3507, %3548
  %3555 = phi i64 [ %3510, %3507 ], [ %3521, %3548 ]
  %3556 = phi i32 [ 1, %3507 ], [ %3552, %3548 ]
  br label %3557

3557:                                             ; preds = %3554, %3557
  %3558 = phi i64 [ %3563, %3557 ], [ %3555, %3554 ]
  %3559 = phi i32 [ %3562, %3557 ], [ %3556, %3554 ]
  %3560 = getelementptr inbounds i32, ptr %11, i64 %3558
  %3561 = load i32, ptr %3560, align 4, !tbaa !5
  %3562 = mul nsw i32 %3561, %3559
  %3563 = add nsw i64 %3558, -1
  %3564 = trunc i64 %3558 to i32
  %3565 = icmp sgt i32 %3564, 0
  br i1 %3565, label %3557, label %3566, !llvm.loop !880

3566:                                             ; preds = %3557, %3548
  %3567 = phi i32 [ %3552, %3548 ], [ %3562, %3557 ]
  %3568 = and i64 %3517, 4294967295
  %3569 = getelementptr inbounds i32, ptr %6, i64 %3568
  %3570 = load i32, ptr %3569, align 4, !tbaa !5
  %3571 = mul nsw i32 %3570, %3567
  %3572 = add nsw i32 %3571, %3511
  %3573 = icmp sgt i64 %3509, 2
  %3574 = add nsw i64 %3510, -1
  %3575 = add i32 %3508, 1
  br i1 %3573, label %3507, label %3576, !llvm.loop !881

3576:                                             ; preds = %3566, %3503
  %3577 = phi i32 [ %3506, %3503 ], [ %3572, %3566 ]
  %3578 = icmp slt i32 %3577, %5
  br i1 %3578, label %3581, label %3579

3579:                                             ; preds = %3576
  %3580 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

3581:                                             ; preds = %3576
  %3582 = sext i32 %3577 to i64
  %3583 = getelementptr inbounds i64, ptr %3043, i64 %3582
  %3584 = load i64, ptr %3583, align 8, !tbaa !120
  %3585 = add nsw i64 %3504, %3584
  store i64 %3585, ptr %3045, align 8, !tbaa !120
  %3586 = add nuw nsw i32 %3505, 1
  br i1 %3357, label %3587, label %3637

3587:                                             ; preds = %3581
  %3588 = load i32, ptr %4, align 4, !tbaa !5
  %3589 = load i32, ptr %12, align 4, !tbaa !5
  %3590 = add nsw i32 %3589, -1
  %3591 = icmp slt i32 %3588, %3590
  br i1 %3591, label %3614, label %3592

3592:                                             ; preds = %3587
  %3593 = icmp eq i32 %3588, %3590
  br i1 %3593, label %3594, label %3630

3594:                                             ; preds = %3592
  store i32 0, ptr %4, align 4, !tbaa !5
  %3595 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3595, ptr %6, align 4, !tbaa !5
  br i1 %3362, label %3637, label %3596

3596:                                             ; preds = %3594, %3624
  %3597 = phi i64 [ %3628, %3624 ], [ 1, %3594 ]
  %3598 = getelementptr inbounds i32, ptr %4, i64 %3597
  %3599 = load i32, ptr %3598, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %12, i64 %3597
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = add nsw i32 %3601, -1
  %3603 = icmp slt i32 %3599, %3602
  br i1 %3603, label %3604, label %3622

3604:                                             ; preds = %3596
  br i1 %3591, label %3614, label %3605

3605:                                             ; preds = %3604
  %3606 = shl i64 %3597, 32
  %3607 = add i64 %3606, -4294967296
  %3608 = ashr exact i64 %3607, 32
  %3609 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3597
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = add nsw i32 %3612, %3610
  store i32 %3613, ptr %3611, align 4, !tbaa !5
  br label %3632

3614:                                             ; preds = %3587, %3604
  %3615 = phi i32 [ %3599, %3604 ], [ %3588, %3587 ]
  %3616 = phi ptr [ %3598, %3604 ], [ %4, %3587 ]
  %3617 = phi i64 [ %3597, %3604 ], [ 0, %3587 ]
  %3618 = add nsw i32 %3615, 1
  store i32 %3618, ptr %3616, align 4, !tbaa !5
  %3619 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3617
  br label %3632

3622:                                             ; preds = %3596
  %3623 = icmp eq i32 %3599, %3602
  br i1 %3623, label %3624, label %3630

3624:                                             ; preds = %3622
  store i32 0, ptr %3598, align 4, !tbaa !5
  %3625 = getelementptr inbounds i32, ptr %8, i64 %3597
  %3626 = load i32, ptr %3625, align 4, !tbaa !5
  %3627 = getelementptr inbounds i32, ptr %6, i64 %3597
  store i32 %3626, ptr %3627, align 4, !tbaa !5
  %3628 = add nuw nsw i64 %3597, 1
  %3629 = icmp eq i64 %3628, %3360
  br i1 %3629, label %3637, label %3596, !llvm.loop !882

3630:                                             ; preds = %3592, %3622
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3632:                                             ; preds = %3605, %3614
  %3633 = phi ptr [ %3621, %3614 ], [ %3598, %3605 ]
  %3634 = phi i32 [ %3620, %3614 ], [ 1, %3605 ]
  %3635 = load i32, ptr %3633, align 4, !tbaa !5
  %3636 = add nsw i32 %3635, %3634
  store i32 %3636, ptr %3633, align 4, !tbaa !5
  br label %3637

3637:                                             ; preds = %3624, %3632, %3594, %3581
  %3638 = icmp eq i32 %3586, %5
  br i1 %3638, label %5447, label %3503, !llvm.loop !883

3639:                                             ; preds = %3049
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

3641:                                             ; preds = %18
  %3642 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3643 = load ptr, ptr %3642, align 8, !tbaa !9
  %3644 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3645 = load ptr, ptr %3644, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3645, align 8, !tbaa !18
  %3646 = icmp eq i32 %13, 0
  br i1 %3646, label %3647, label %3650

3647:                                             ; preds = %3641
  %3648 = load i64, ptr %3643, align 8, !tbaa !120
  %3649 = sitofp i64 %3648 to double
  store double %3649, ptr %3645, align 8, !tbaa !18
  br label %5447

3650:                                             ; preds = %3641
  switch i32 %1, label %4238 [
    i32 1, label %3651
    i32 0, label %3946
  ]

3651:                                             ; preds = %3650
  %3652 = getelementptr inbounds i32, ptr %3, i64 %19
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = icmp eq i32 %3653, 0
  %3655 = icmp sgt i32 %5, 0
  br i1 %3654, label %3665, label %3656

3656:                                             ; preds = %3651
  br i1 %3655, label %3657, label %5447

3657:                                             ; preds = %3656
  %3658 = icmp sgt i32 %13, 1
  %3659 = icmp sgt i32 %13, 0
  %3660 = add i32 %13, -2
  %3661 = zext i32 %3660 to i64
  %3662 = zext i32 %13 to i64
  %3663 = add nuw i32 %5, 1
  %3664 = icmp eq i32 %13, 1
  br label %3809

3665:                                             ; preds = %3651
  br i1 %3655, label %3666, label %5447

3666:                                             ; preds = %3665
  %3667 = icmp sgt i32 %13, 1
  %3668 = icmp sgt i32 %13, 0
  %3669 = add i32 %13, -2
  %3670 = zext i32 %3669 to i64
  %3671 = zext i32 %13 to i64
  %3672 = add nuw i32 %5, 1
  %3673 = icmp eq i32 %13, 1
  br label %3674

3674:                                             ; preds = %3666, %3807
  %3675 = phi double [ 0.000000e+00, %3666 ], [ %3757, %3807 ]
  %3676 = phi i32 [ 0, %3666 ], [ %3759, %3807 ]
  %3677 = phi double [ 0.000000e+00, %3666 ], [ %3758, %3807 ]
  %3678 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3667, label %3679, label %3748

3679:                                             ; preds = %3674, %3738
  %3680 = phi i32 [ %3747, %3738 ], [ 0, %3674 ]
  %3681 = phi i64 [ %3689, %3738 ], [ %3671, %3674 ]
  %3682 = phi i64 [ %3746, %3738 ], [ %3670, %3674 ]
  %3683 = phi i32 [ %3744, %3738 ], [ %3678, %3674 ]
  %3684 = sub i32 %3669, %3680
  %3685 = tail call i32 @llvm.smin.i32(i32 %3684, i32 0)
  %3686 = sub i32 %3684, %3685
  %3687 = zext i32 %3686 to i64
  %3688 = add nuw nsw i64 %3687, 1
  %3689 = add nsw i64 %3681, -1
  %3690 = icmp ult i32 %3686, 31
  br i1 %3690, label %3726, label %3691

3691:                                             ; preds = %3679
  %3692 = and i64 %3688, 8589934560
  %3693 = sub i64 %3682, %3692
  br label %3694

3694:                                             ; preds = %3694, %3691
  %3695 = phi i64 [ 0, %3691 ], [ %3718, %3694 ]
  %3696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3714, %3694 ]
  %3697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3715, %3694 ]
  %3698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3716, %3694 ]
  %3699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3717, %3694 ]
  %3700 = sub i64 %3682, %3695
  %3701 = getelementptr inbounds i32, ptr %9, i64 %3700
  %3702 = getelementptr inbounds i32, ptr %3701, i64 -7
  %3703 = load <8 x i32>, ptr %3702, align 4, !tbaa !5
  %3704 = shufflevector <8 x i32> %3703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3705 = getelementptr inbounds i32, ptr %3701, i64 -15
  %3706 = load <8 x i32>, ptr %3705, align 4, !tbaa !5
  %3707 = shufflevector <8 x i32> %3706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3708 = getelementptr inbounds i32, ptr %3701, i64 -23
  %3709 = load <8 x i32>, ptr %3708, align 4, !tbaa !5
  %3710 = shufflevector <8 x i32> %3709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3711 = getelementptr inbounds i32, ptr %3701, i64 -31
  %3712 = load <8 x i32>, ptr %3711, align 4, !tbaa !5
  %3713 = shufflevector <8 x i32> %3712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3714 = mul <8 x i32> %3704, %3696
  %3715 = mul <8 x i32> %3707, %3697
  %3716 = mul <8 x i32> %3710, %3698
  %3717 = mul <8 x i32> %3713, %3699
  %3718 = add nuw i64 %3695, 32
  %3719 = icmp eq i64 %3718, %3692
  br i1 %3719, label %3720, label %3694, !llvm.loop !884

3720:                                             ; preds = %3694
  %3721 = mul <8 x i32> %3715, %3714
  %3722 = mul <8 x i32> %3716, %3721
  %3723 = mul <8 x i32> %3717, %3722
  %3724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3723)
  %3725 = icmp eq i64 %3688, %3692
  br i1 %3725, label %3738, label %3726

3726:                                             ; preds = %3679, %3720
  %3727 = phi i64 [ %3682, %3679 ], [ %3693, %3720 ]
  %3728 = phi i32 [ 1, %3679 ], [ %3724, %3720 ]
  br label %3729

3729:                                             ; preds = %3726, %3729
  %3730 = phi i64 [ %3735, %3729 ], [ %3727, %3726 ]
  %3731 = phi i32 [ %3734, %3729 ], [ %3728, %3726 ]
  %3732 = getelementptr inbounds i32, ptr %9, i64 %3730
  %3733 = load i32, ptr %3732, align 4, !tbaa !5
  %3734 = mul nsw i32 %3733, %3731
  %3735 = add nsw i64 %3730, -1
  %3736 = trunc i64 %3730 to i32
  %3737 = icmp sgt i32 %3736, 0
  br i1 %3737, label %3729, label %3738, !llvm.loop !885

3738:                                             ; preds = %3729, %3720
  %3739 = phi i32 [ %3724, %3720 ], [ %3734, %3729 ]
  %3740 = and i64 %3689, 4294967295
  %3741 = getelementptr inbounds i32, ptr %6, i64 %3740
  %3742 = load i32, ptr %3741, align 4, !tbaa !5
  %3743 = mul nsw i32 %3742, %3739
  %3744 = add nsw i32 %3743, %3683
  %3745 = icmp sgt i64 %3681, 2
  %3746 = add nsw i64 %3682, -1
  %3747 = add i32 %3680, 1
  br i1 %3745, label %3679, label %3748, !llvm.loop !886

3748:                                             ; preds = %3738, %3674
  %3749 = phi i32 [ %3678, %3674 ], [ %3744, %3738 ]
  %3750 = sext i32 %3749 to i64
  %3751 = getelementptr inbounds double, ptr %2, i64 %3750
  %3752 = load double, ptr %3751, align 8, !tbaa !18
  %3753 = getelementptr inbounds i64, ptr %3643, i64 %3750
  %3754 = load i64, ptr %3753, align 8, !tbaa !120
  %3755 = sitofp i64 %3754 to double
  %3756 = fmul fast double %3752, %3755
  %3757 = fadd fast double %3756, %3675
  store double %3757, ptr %3645, align 8, !tbaa !18
  %3758 = fadd fast double %3752, %3677
  %3759 = add nuw nsw i32 %3676, 1
  br i1 %3668, label %3760, label %3807

3760:                                             ; preds = %3748
  %3761 = load i32, ptr %4, align 4, !tbaa !5
  %3762 = load i32, ptr %12, align 4, !tbaa !5
  %3763 = add nsw i32 %3762, -1
  %3764 = icmp slt i32 %3761, %3763
  br i1 %3764, label %3784, label %3765

3765:                                             ; preds = %3760
  %3766 = icmp eq i32 %3761, %3763
  br i1 %3766, label %3767, label %3800

3767:                                             ; preds = %3765
  store i32 0, ptr %4, align 4, !tbaa !5
  %3768 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3768, ptr %6, align 4, !tbaa !5
  br i1 %3673, label %3807, label %3769

3769:                                             ; preds = %3767, %3794
  %3770 = phi i64 [ %3798, %3794 ], [ 1, %3767 ]
  %3771 = getelementptr inbounds i32, ptr %4, i64 %3770
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = getelementptr inbounds i32, ptr %12, i64 %3770
  %3774 = load i32, ptr %3773, align 4, !tbaa !5
  %3775 = add nsw i32 %3774, -1
  %3776 = icmp slt i32 %3772, %3775
  br i1 %3776, label %3777, label %3792

3777:                                             ; preds = %3769
  br i1 %3764, label %3784, label %3778

3778:                                             ; preds = %3777
  %3779 = getelementptr inbounds i32, ptr %7, i64 %3770
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3770
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = add nsw i32 %3782, %3780
  store i32 %3783, ptr %3781, align 4, !tbaa !5
  br label %3802

3784:                                             ; preds = %3760, %3777
  %3785 = phi i32 [ %3772, %3777 ], [ %3761, %3760 ]
  %3786 = phi ptr [ %3771, %3777 ], [ %4, %3760 ]
  %3787 = phi i64 [ %3770, %3777 ], [ 0, %3760 ]
  %3788 = add nsw i32 %3785, 1
  store i32 %3788, ptr %3786, align 4, !tbaa !5
  %3789 = getelementptr inbounds i32, ptr %7, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = getelementptr inbounds i32, ptr %6, i64 %3787
  br label %3802

3792:                                             ; preds = %3769
  %3793 = icmp eq i32 %3772, %3775
  br i1 %3793, label %3794, label %3800

3794:                                             ; preds = %3792
  store i32 0, ptr %3771, align 4, !tbaa !5
  %3795 = getelementptr inbounds i32, ptr %8, i64 %3770
  %3796 = load i32, ptr %3795, align 4, !tbaa !5
  %3797 = getelementptr inbounds i32, ptr %6, i64 %3770
  store i32 %3796, ptr %3797, align 4, !tbaa !5
  %3798 = add nuw nsw i64 %3770, 1
  %3799 = icmp eq i64 %3798, %3671
  br i1 %3799, label %3807, label %3769, !llvm.loop !887

3800:                                             ; preds = %3765, %3792
  %3801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3802:                                             ; preds = %3778, %3784
  %3803 = phi ptr [ %3791, %3784 ], [ %3771, %3778 ]
  %3804 = phi i32 [ %3790, %3784 ], [ 1, %3778 ]
  %3805 = load i32, ptr %3803, align 4, !tbaa !5
  %3806 = add nsw i32 %3805, %3804
  store i32 %3806, ptr %3803, align 4, !tbaa !5
  br label %3807

3807:                                             ; preds = %3794, %3802, %3767, %3748
  %3808 = icmp eq i32 %3759, %5
  br i1 %3808, label %5447, label %3674, !llvm.loop !888

3809:                                             ; preds = %3657, %3944
  %3810 = phi double [ 0.000000e+00, %3657 ], [ %3892, %3944 ]
  %3811 = phi i32 [ 0, %3657 ], [ %3893, %3944 ]
  %3812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3658, label %3813, label %3882

3813:                                             ; preds = %3809, %3872
  %3814 = phi i32 [ %3881, %3872 ], [ 0, %3809 ]
  %3815 = phi i64 [ %3823, %3872 ], [ %3662, %3809 ]
  %3816 = phi i64 [ %3880, %3872 ], [ %3661, %3809 ]
  %3817 = phi i32 [ %3878, %3872 ], [ %3812, %3809 ]
  %3818 = sub i32 %3660, %3814
  %3819 = tail call i32 @llvm.smin.i32(i32 %3818, i32 0)
  %3820 = sub i32 %3818, %3819
  %3821 = zext i32 %3820 to i64
  %3822 = add nuw nsw i64 %3821, 1
  %3823 = add nsw i64 %3815, -1
  %3824 = icmp ult i32 %3820, 31
  br i1 %3824, label %3860, label %3825

3825:                                             ; preds = %3813
  %3826 = and i64 %3822, 8589934560
  %3827 = sub i64 %3816, %3826
  br label %3828

3828:                                             ; preds = %3828, %3825
  %3829 = phi i64 [ 0, %3825 ], [ %3852, %3828 ]
  %3830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3848, %3828 ]
  %3831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3849, %3828 ]
  %3832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3850, %3828 ]
  %3833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3851, %3828 ]
  %3834 = sub i64 %3816, %3829
  %3835 = getelementptr inbounds i32, ptr %11, i64 %3834
  %3836 = getelementptr inbounds i32, ptr %3835, i64 -7
  %3837 = load <8 x i32>, ptr %3836, align 4, !tbaa !5
  %3838 = shufflevector <8 x i32> %3837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3839 = getelementptr inbounds i32, ptr %3835, i64 -15
  %3840 = load <8 x i32>, ptr %3839, align 4, !tbaa !5
  %3841 = shufflevector <8 x i32> %3840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3842 = getelementptr inbounds i32, ptr %3835, i64 -23
  %3843 = load <8 x i32>, ptr %3842, align 4, !tbaa !5
  %3844 = shufflevector <8 x i32> %3843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3845 = getelementptr inbounds i32, ptr %3835, i64 -31
  %3846 = load <8 x i32>, ptr %3845, align 4, !tbaa !5
  %3847 = shufflevector <8 x i32> %3846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3848 = mul <8 x i32> %3838, %3830
  %3849 = mul <8 x i32> %3841, %3831
  %3850 = mul <8 x i32> %3844, %3832
  %3851 = mul <8 x i32> %3847, %3833
  %3852 = add nuw i64 %3829, 32
  %3853 = icmp eq i64 %3852, %3826
  br i1 %3853, label %3854, label %3828, !llvm.loop !889

3854:                                             ; preds = %3828
  %3855 = mul <8 x i32> %3849, %3848
  %3856 = mul <8 x i32> %3850, %3855
  %3857 = mul <8 x i32> %3851, %3856
  %3858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3857)
  %3859 = icmp eq i64 %3822, %3826
  br i1 %3859, label %3872, label %3860

3860:                                             ; preds = %3813, %3854
  %3861 = phi i64 [ %3816, %3813 ], [ %3827, %3854 ]
  %3862 = phi i32 [ 1, %3813 ], [ %3858, %3854 ]
  br label %3863

3863:                                             ; preds = %3860, %3863
  %3864 = phi i64 [ %3869, %3863 ], [ %3861, %3860 ]
  %3865 = phi i32 [ %3868, %3863 ], [ %3862, %3860 ]
  %3866 = getelementptr inbounds i32, ptr %11, i64 %3864
  %3867 = load i32, ptr %3866, align 4, !tbaa !5
  %3868 = mul nsw i32 %3867, %3865
  %3869 = add nsw i64 %3864, -1
  %3870 = trunc i64 %3864 to i32
  %3871 = icmp sgt i32 %3870, 0
  br i1 %3871, label %3863, label %3872, !llvm.loop !890

3872:                                             ; preds = %3863, %3854
  %3873 = phi i32 [ %3858, %3854 ], [ %3868, %3863 ]
  %3874 = and i64 %3823, 4294967295
  %3875 = getelementptr inbounds i32, ptr %6, i64 %3874
  %3876 = load i32, ptr %3875, align 4, !tbaa !5
  %3877 = mul nsw i32 %3876, %3873
  %3878 = add nsw i32 %3877, %3817
  %3879 = icmp sgt i64 %3815, 2
  %3880 = add nsw i64 %3816, -1
  %3881 = add i32 %3814, 1
  br i1 %3879, label %3813, label %3882, !llvm.loop !891

3882:                                             ; preds = %3872, %3809
  %3883 = phi i32 [ %3812, %3809 ], [ %3878, %3872 ]
  %3884 = icmp slt i32 %3883, %5
  br i1 %3884, label %3887, label %3885

3885:                                             ; preds = %3882
  %3886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

3887:                                             ; preds = %3882
  %3888 = sext i32 %3883 to i64
  %3889 = getelementptr inbounds i64, ptr %3643, i64 %3888
  %3890 = load i64, ptr %3889, align 8, !tbaa !120
  %3891 = sitofp i64 %3890 to double
  %3892 = fadd fast double %3810, %3891
  store double %3892, ptr %3645, align 8, !tbaa !18
  %3893 = add nuw nsw i32 %3811, 1
  br i1 %3659, label %3894, label %3944

3894:                                             ; preds = %3887
  %3895 = load i32, ptr %4, align 4, !tbaa !5
  %3896 = load i32, ptr %12, align 4, !tbaa !5
  %3897 = add nsw i32 %3896, -1
  %3898 = icmp slt i32 %3895, %3897
  br i1 %3898, label %3921, label %3899

3899:                                             ; preds = %3894
  %3900 = icmp eq i32 %3895, %3897
  br i1 %3900, label %3901, label %3937

3901:                                             ; preds = %3899
  store i32 0, ptr %4, align 4, !tbaa !5
  %3902 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3902, ptr %6, align 4, !tbaa !5
  br i1 %3664, label %3944, label %3903

3903:                                             ; preds = %3901, %3931
  %3904 = phi i64 [ %3935, %3931 ], [ 1, %3901 ]
  %3905 = getelementptr inbounds i32, ptr %4, i64 %3904
  %3906 = load i32, ptr %3905, align 4, !tbaa !5
  %3907 = getelementptr inbounds i32, ptr %12, i64 %3904
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = add nsw i32 %3908, -1
  %3910 = icmp slt i32 %3906, %3909
  br i1 %3910, label %3911, label %3929

3911:                                             ; preds = %3903
  br i1 %3898, label %3921, label %3912

3912:                                             ; preds = %3911
  %3913 = shl i64 %3904, 32
  %3914 = add i64 %3913, -4294967296
  %3915 = ashr exact i64 %3914, 32
  %3916 = getelementptr inbounds i32, ptr %7, i64 %3915
  %3917 = load i32, ptr %3916, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %6, i64 %3904
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = add nsw i32 %3919, %3917
  store i32 %3920, ptr %3918, align 4, !tbaa !5
  br label %3939

3921:                                             ; preds = %3894, %3911
  %3922 = phi i32 [ %3906, %3911 ], [ %3895, %3894 ]
  %3923 = phi ptr [ %3905, %3911 ], [ %4, %3894 ]
  %3924 = phi i64 [ %3904, %3911 ], [ 0, %3894 ]
  %3925 = add nsw i32 %3922, 1
  store i32 %3925, ptr %3923, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %7, i64 %3924
  %3927 = load i32, ptr %3926, align 4, !tbaa !5
  %3928 = getelementptr inbounds i32, ptr %6, i64 %3924
  br label %3939

3929:                                             ; preds = %3903
  %3930 = icmp eq i32 %3906, %3909
  br i1 %3930, label %3931, label %3937

3931:                                             ; preds = %3929
  store i32 0, ptr %3905, align 4, !tbaa !5
  %3932 = getelementptr inbounds i32, ptr %8, i64 %3904
  %3933 = load i32, ptr %3932, align 4, !tbaa !5
  %3934 = getelementptr inbounds i32, ptr %6, i64 %3904
  store i32 %3933, ptr %3934, align 4, !tbaa !5
  %3935 = add nuw nsw i64 %3904, 1
  %3936 = icmp eq i64 %3935, %3662
  br i1 %3936, label %3944, label %3903, !llvm.loop !892

3937:                                             ; preds = %3899, %3929
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

3939:                                             ; preds = %3912, %3921
  %3940 = phi ptr [ %3928, %3921 ], [ %3905, %3912 ]
  %3941 = phi i32 [ %3927, %3921 ], [ 1, %3912 ]
  %3942 = load i32, ptr %3940, align 4, !tbaa !5
  %3943 = add nsw i32 %3942, %3941
  store i32 %3943, ptr %3940, align 4, !tbaa !5
  br label %3944

3944:                                             ; preds = %3931, %3939, %3901, %3887
  %3945 = icmp eq i32 %3893, %5
  br i1 %3945, label %5447, label %3809, !llvm.loop !893

3946:                                             ; preds = %3650
  %3947 = getelementptr inbounds i32, ptr %3, i64 %19
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = icmp eq i32 %3948, 0
  %3950 = icmp sgt i32 %5, 0
  br i1 %3949, label %3960, label %3951

3951:                                             ; preds = %3946
  br i1 %3950, label %3952, label %5447

3952:                                             ; preds = %3951
  %3953 = icmp sgt i32 %13, 1
  %3954 = icmp sgt i32 %13, 0
  %3955 = add i32 %13, -2
  %3956 = zext i32 %3955 to i64
  %3957 = zext i32 %13 to i64
  %3958 = add nuw i32 %5, 1
  %3959 = icmp eq i32 %13, 1
  br label %4101

3960:                                             ; preds = %3946
  br i1 %3950, label %3961, label %5447

3961:                                             ; preds = %3960
  %3962 = icmp sgt i32 %13, 1
  %3963 = icmp sgt i32 %13, 0
  %3964 = add i32 %13, -2
  %3965 = zext i32 %3964 to i64
  %3966 = zext i32 %13 to i64
  %3967 = add nuw i32 %5, 1
  %3968 = icmp eq i32 %13, 1
  br label %3969

3969:                                             ; preds = %3961, %4099
  %3970 = phi double [ 0.000000e+00, %3961 ], [ %4049, %4099 ]
  %3971 = phi i32 [ 0, %3961 ], [ %4051, %4099 ]
  %3972 = phi double [ 0.000000e+00, %3961 ], [ %4050, %4099 ]
  %3973 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3962, label %3974, label %4043

3974:                                             ; preds = %3969, %4033
  %3975 = phi i32 [ %4042, %4033 ], [ 0, %3969 ]
  %3976 = phi i64 [ %3984, %4033 ], [ %3966, %3969 ]
  %3977 = phi i64 [ %4041, %4033 ], [ %3965, %3969 ]
  %3978 = phi i32 [ %4039, %4033 ], [ %3973, %3969 ]
  %3979 = sub i32 %3964, %3975
  %3980 = tail call i32 @llvm.smin.i32(i32 %3979, i32 0)
  %3981 = sub i32 %3979, %3980
  %3982 = zext i32 %3981 to i64
  %3983 = add nuw nsw i64 %3982, 1
  %3984 = add nsw i64 %3976, -1
  %3985 = icmp ult i32 %3981, 31
  br i1 %3985, label %4021, label %3986

3986:                                             ; preds = %3974
  %3987 = and i64 %3983, 8589934560
  %3988 = sub i64 %3977, %3987
  br label %3989

3989:                                             ; preds = %3989, %3986
  %3990 = phi i64 [ 0, %3986 ], [ %4013, %3989 ]
  %3991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4009, %3989 ]
  %3992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4010, %3989 ]
  %3993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4011, %3989 ]
  %3994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4012, %3989 ]
  %3995 = sub i64 %3977, %3990
  %3996 = getelementptr inbounds i32, ptr %9, i64 %3995
  %3997 = getelementptr inbounds i32, ptr %3996, i64 -7
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = getelementptr inbounds i32, ptr %3996, i64 -15
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !5
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3996, i64 -23
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !5
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = getelementptr inbounds i32, ptr %3996, i64 -31
  %4007 = load <8 x i32>, ptr %4006, align 4, !tbaa !5
  %4008 = shufflevector <8 x i32> %4007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4009 = mul <8 x i32> %3999, %3991
  %4010 = mul <8 x i32> %4002, %3992
  %4011 = mul <8 x i32> %4005, %3993
  %4012 = mul <8 x i32> %4008, %3994
  %4013 = add nuw i64 %3990, 32
  %4014 = icmp eq i64 %4013, %3987
  br i1 %4014, label %4015, label %3989, !llvm.loop !894

4015:                                             ; preds = %3989
  %4016 = mul <8 x i32> %4010, %4009
  %4017 = mul <8 x i32> %4011, %4016
  %4018 = mul <8 x i32> %4012, %4017
  %4019 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4018)
  %4020 = icmp eq i64 %3983, %3987
  br i1 %4020, label %4033, label %4021

4021:                                             ; preds = %3974, %4015
  %4022 = phi i64 [ %3977, %3974 ], [ %3988, %4015 ]
  %4023 = phi i32 [ 1, %3974 ], [ %4019, %4015 ]
  br label %4024

4024:                                             ; preds = %4021, %4024
  %4025 = phi i64 [ %4030, %4024 ], [ %4022, %4021 ]
  %4026 = phi i32 [ %4029, %4024 ], [ %4023, %4021 ]
  %4027 = getelementptr inbounds i32, ptr %9, i64 %4025
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = mul nsw i32 %4028, %4026
  %4030 = add nsw i64 %4025, -1
  %4031 = trunc i64 %4025 to i32
  %4032 = icmp sgt i32 %4031, 0
  br i1 %4032, label %4024, label %4033, !llvm.loop !895

4033:                                             ; preds = %4024, %4015
  %4034 = phi i32 [ %4019, %4015 ], [ %4029, %4024 ]
  %4035 = and i64 %3984, 4294967295
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4035
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = mul nsw i32 %4037, %4034
  %4039 = add nsw i32 %4038, %3978
  %4040 = icmp sgt i64 %3976, 2
  %4041 = add nsw i64 %3977, -1
  %4042 = add i32 %3975, 1
  br i1 %4040, label %3974, label %4043, !llvm.loop !896

4043:                                             ; preds = %4033, %3969
  %4044 = phi i32 [ %3973, %3969 ], [ %4039, %4033 ]
  %4045 = sext i32 %4044 to i64
  %4046 = getelementptr inbounds i64, ptr %3643, i64 %4045
  %4047 = load i64, ptr %4046, align 8, !tbaa !120
  %4048 = sitofp i64 %4047 to double
  %4049 = fadd fast double %3970, %4048
  %4050 = fadd fast double %3972, 1.000000e+00
  %4051 = add nuw nsw i32 %3971, 1
  br i1 %3963, label %4052, label %4099

4052:                                             ; preds = %4043
  %4053 = load i32, ptr %4, align 4, !tbaa !5
  %4054 = load i32, ptr %12, align 4, !tbaa !5
  %4055 = add nsw i32 %4054, -1
  %4056 = icmp slt i32 %4053, %4055
  br i1 %4056, label %4076, label %4057

4057:                                             ; preds = %4052
  %4058 = icmp eq i32 %4053, %4055
  br i1 %4058, label %4059, label %4092

4059:                                             ; preds = %4057
  store i32 0, ptr %4, align 4, !tbaa !5
  %4060 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4060, ptr %6, align 4, !tbaa !5
  br i1 %3968, label %4099, label %4061

4061:                                             ; preds = %4059, %4086
  %4062 = phi i64 [ %4090, %4086 ], [ 1, %4059 ]
  %4063 = getelementptr inbounds i32, ptr %4, i64 %4062
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = getelementptr inbounds i32, ptr %12, i64 %4062
  %4066 = load i32, ptr %4065, align 4, !tbaa !5
  %4067 = add nsw i32 %4066, -1
  %4068 = icmp slt i32 %4064, %4067
  br i1 %4068, label %4069, label %4084

4069:                                             ; preds = %4061
  br i1 %4056, label %4076, label %4070

4070:                                             ; preds = %4069
  %4071 = getelementptr inbounds i32, ptr %7, i64 %4062
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = getelementptr inbounds i32, ptr %6, i64 %4062
  %4074 = load i32, ptr %4073, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, %4072
  store i32 %4075, ptr %4073, align 4, !tbaa !5
  br label %4094

4076:                                             ; preds = %4052, %4069
  %4077 = phi i32 [ %4064, %4069 ], [ %4053, %4052 ]
  %4078 = phi ptr [ %4063, %4069 ], [ %4, %4052 ]
  %4079 = phi i64 [ %4062, %4069 ], [ 0, %4052 ]
  %4080 = add nsw i32 %4077, 1
  store i32 %4080, ptr %4078, align 4, !tbaa !5
  %4081 = getelementptr inbounds i32, ptr %7, i64 %4079
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = getelementptr inbounds i32, ptr %6, i64 %4079
  br label %4094

4084:                                             ; preds = %4061
  %4085 = icmp eq i32 %4064, %4067
  br i1 %4085, label %4086, label %4092

4086:                                             ; preds = %4084
  store i32 0, ptr %4063, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %8, i64 %4062
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = getelementptr inbounds i32, ptr %6, i64 %4062
  store i32 %4088, ptr %4089, align 4, !tbaa !5
  %4090 = add nuw nsw i64 %4062, 1
  %4091 = icmp eq i64 %4090, %3966
  br i1 %4091, label %4099, label %4061, !llvm.loop !897

4092:                                             ; preds = %4057, %4084
  store double %4049, ptr %3645, align 8, !tbaa !18
  %4093 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4094:                                             ; preds = %4070, %4076
  %4095 = phi ptr [ %4083, %4076 ], [ %4063, %4070 ]
  %4096 = phi i32 [ %4082, %4076 ], [ 1, %4070 ]
  %4097 = load i32, ptr %4095, align 4, !tbaa !5
  %4098 = add nsw i32 %4097, %4096
  store i32 %4098, ptr %4095, align 4, !tbaa !5
  br label %4099

4099:                                             ; preds = %4086, %4094, %4059, %4043
  %4100 = icmp eq i32 %4051, %5
  br i1 %4100, label %5443, label %3969, !llvm.loop !898

4101:                                             ; preds = %3952, %4236
  %4102 = phi double [ 0.000000e+00, %3952 ], [ %4184, %4236 ]
  %4103 = phi i32 [ 0, %3952 ], [ %4185, %4236 ]
  %4104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3953, label %4105, label %4174

4105:                                             ; preds = %4101, %4164
  %4106 = phi i32 [ %4173, %4164 ], [ 0, %4101 ]
  %4107 = phi i64 [ %4115, %4164 ], [ %3957, %4101 ]
  %4108 = phi i64 [ %4172, %4164 ], [ %3956, %4101 ]
  %4109 = phi i32 [ %4170, %4164 ], [ %4104, %4101 ]
  %4110 = sub i32 %3955, %4106
  %4111 = tail call i32 @llvm.smin.i32(i32 %4110, i32 0)
  %4112 = sub i32 %4110, %4111
  %4113 = zext i32 %4112 to i64
  %4114 = add nuw nsw i64 %4113, 1
  %4115 = add nsw i64 %4107, -1
  %4116 = icmp ult i32 %4112, 31
  br i1 %4116, label %4152, label %4117

4117:                                             ; preds = %4105
  %4118 = and i64 %4114, 8589934560
  %4119 = sub i64 %4108, %4118
  br label %4120

4120:                                             ; preds = %4120, %4117
  %4121 = phi i64 [ 0, %4117 ], [ %4144, %4120 ]
  %4122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4140, %4120 ]
  %4123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4141, %4120 ]
  %4124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4142, %4120 ]
  %4125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4143, %4120 ]
  %4126 = sub i64 %4108, %4121
  %4127 = getelementptr inbounds i32, ptr %11, i64 %4126
  %4128 = getelementptr inbounds i32, ptr %4127, i64 -7
  %4129 = load <8 x i32>, ptr %4128, align 4, !tbaa !5
  %4130 = shufflevector <8 x i32> %4129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4131 = getelementptr inbounds i32, ptr %4127, i64 -15
  %4132 = load <8 x i32>, ptr %4131, align 4, !tbaa !5
  %4133 = shufflevector <8 x i32> %4132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4134 = getelementptr inbounds i32, ptr %4127, i64 -23
  %4135 = load <8 x i32>, ptr %4134, align 4, !tbaa !5
  %4136 = shufflevector <8 x i32> %4135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4137 = getelementptr inbounds i32, ptr %4127, i64 -31
  %4138 = load <8 x i32>, ptr %4137, align 4, !tbaa !5
  %4139 = shufflevector <8 x i32> %4138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4140 = mul <8 x i32> %4130, %4122
  %4141 = mul <8 x i32> %4133, %4123
  %4142 = mul <8 x i32> %4136, %4124
  %4143 = mul <8 x i32> %4139, %4125
  %4144 = add nuw i64 %4121, 32
  %4145 = icmp eq i64 %4144, %4118
  br i1 %4145, label %4146, label %4120, !llvm.loop !899

4146:                                             ; preds = %4120
  %4147 = mul <8 x i32> %4141, %4140
  %4148 = mul <8 x i32> %4142, %4147
  %4149 = mul <8 x i32> %4143, %4148
  %4150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4149)
  %4151 = icmp eq i64 %4114, %4118
  br i1 %4151, label %4164, label %4152

4152:                                             ; preds = %4105, %4146
  %4153 = phi i64 [ %4108, %4105 ], [ %4119, %4146 ]
  %4154 = phi i32 [ 1, %4105 ], [ %4150, %4146 ]
  br label %4155

4155:                                             ; preds = %4152, %4155
  %4156 = phi i64 [ %4161, %4155 ], [ %4153, %4152 ]
  %4157 = phi i32 [ %4160, %4155 ], [ %4154, %4152 ]
  %4158 = getelementptr inbounds i32, ptr %11, i64 %4156
  %4159 = load i32, ptr %4158, align 4, !tbaa !5
  %4160 = mul nsw i32 %4159, %4157
  %4161 = add nsw i64 %4156, -1
  %4162 = trunc i64 %4156 to i32
  %4163 = icmp sgt i32 %4162, 0
  br i1 %4163, label %4155, label %4164, !llvm.loop !900

4164:                                             ; preds = %4155, %4146
  %4165 = phi i32 [ %4150, %4146 ], [ %4160, %4155 ]
  %4166 = and i64 %4115, 4294967295
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4166
  %4168 = load i32, ptr %4167, align 4, !tbaa !5
  %4169 = mul nsw i32 %4168, %4165
  %4170 = add nsw i32 %4169, %4109
  %4171 = icmp sgt i64 %4107, 2
  %4172 = add nsw i64 %4108, -1
  %4173 = add i32 %4106, 1
  br i1 %4171, label %4105, label %4174, !llvm.loop !901

4174:                                             ; preds = %4164, %4101
  %4175 = phi i32 [ %4104, %4101 ], [ %4170, %4164 ]
  %4176 = icmp slt i32 %4175, %5
  br i1 %4176, label %4179, label %4177

4177:                                             ; preds = %4174
  %4178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

4179:                                             ; preds = %4174
  %4180 = sext i32 %4175 to i64
  %4181 = getelementptr inbounds i64, ptr %3643, i64 %4180
  %4182 = load i64, ptr %4181, align 8, !tbaa !120
  %4183 = sitofp i64 %4182 to double
  %4184 = fadd fast double %4102, %4183
  store double %4184, ptr %3645, align 8, !tbaa !18
  %4185 = add nuw nsw i32 %4103, 1
  br i1 %3954, label %4186, label %4236

4186:                                             ; preds = %4179
  %4187 = load i32, ptr %4, align 4, !tbaa !5
  %4188 = load i32, ptr %12, align 4, !tbaa !5
  %4189 = add nsw i32 %4188, -1
  %4190 = icmp slt i32 %4187, %4189
  br i1 %4190, label %4213, label %4191

4191:                                             ; preds = %4186
  %4192 = icmp eq i32 %4187, %4189
  br i1 %4192, label %4193, label %4229

4193:                                             ; preds = %4191
  store i32 0, ptr %4, align 4, !tbaa !5
  %4194 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4194, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %4236, label %4195

4195:                                             ; preds = %4193, %4223
  %4196 = phi i64 [ %4227, %4223 ], [ 1, %4193 ]
  %4197 = getelementptr inbounds i32, ptr %4, i64 %4196
  %4198 = load i32, ptr %4197, align 4, !tbaa !5
  %4199 = getelementptr inbounds i32, ptr %12, i64 %4196
  %4200 = load i32, ptr %4199, align 4, !tbaa !5
  %4201 = add nsw i32 %4200, -1
  %4202 = icmp slt i32 %4198, %4201
  br i1 %4202, label %4203, label %4221

4203:                                             ; preds = %4195
  br i1 %4190, label %4213, label %4204

4204:                                             ; preds = %4203
  %4205 = shl i64 %4196, 32
  %4206 = add i64 %4205, -4294967296
  %4207 = ashr exact i64 %4206, 32
  %4208 = getelementptr inbounds i32, ptr %7, i64 %4207
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4196
  %4211 = load i32, ptr %4210, align 4, !tbaa !5
  %4212 = add nsw i32 %4211, %4209
  store i32 %4212, ptr %4210, align 4, !tbaa !5
  br label %4231

4213:                                             ; preds = %4186, %4203
  %4214 = phi i32 [ %4198, %4203 ], [ %4187, %4186 ]
  %4215 = phi ptr [ %4197, %4203 ], [ %4, %4186 ]
  %4216 = phi i64 [ %4196, %4203 ], [ 0, %4186 ]
  %4217 = add nsw i32 %4214, 1
  store i32 %4217, ptr %4215, align 4, !tbaa !5
  %4218 = getelementptr inbounds i32, ptr %7, i64 %4216
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = getelementptr inbounds i32, ptr %6, i64 %4216
  br label %4231

4221:                                             ; preds = %4195
  %4222 = icmp eq i32 %4198, %4201
  br i1 %4222, label %4223, label %4229

4223:                                             ; preds = %4221
  store i32 0, ptr %4197, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %8, i64 %4196
  %4225 = load i32, ptr %4224, align 4, !tbaa !5
  %4226 = getelementptr inbounds i32, ptr %6, i64 %4196
  store i32 %4225, ptr %4226, align 4, !tbaa !5
  %4227 = add nuw nsw i64 %4196, 1
  %4228 = icmp eq i64 %4227, %3957
  br i1 %4228, label %4236, label %4195, !llvm.loop !902

4229:                                             ; preds = %4191, %4221
  %4230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4231:                                             ; preds = %4204, %4213
  %4232 = phi ptr [ %4220, %4213 ], [ %4197, %4204 ]
  %4233 = phi i32 [ %4219, %4213 ], [ 1, %4204 ]
  %4234 = load i32, ptr %4232, align 4, !tbaa !5
  %4235 = add nsw i32 %4234, %4233
  store i32 %4235, ptr %4232, align 4, !tbaa !5
  br label %4236

4236:                                             ; preds = %4223, %4231, %4193, %4179
  %4237 = icmp eq i32 %4185, %5
  br i1 %4237, label %5447, label %4101, !llvm.loop !903

4238:                                             ; preds = %3650
  %4239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

4240:                                             ; preds = %18
  %4241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4242 = load ptr, ptr %4241, align 8, !tbaa !9
  %4243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4244 = load ptr, ptr %4243, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4244, align 4, !tbaa !162
  %4245 = icmp eq i32 %13, 0
  br i1 %4245, label %4246, label %4249

4246:                                             ; preds = %4240
  %4247 = load i64, ptr %4242, align 8, !tbaa !120
  %4248 = sitofp i64 %4247 to float
  store float %4248, ptr %4244, align 4, !tbaa !162
  br label %5447

4249:                                             ; preds = %4240
  switch i32 %1, label %4840 [
    i32 1, label %4250
    i32 0, label %4548
  ]

4250:                                             ; preds = %4249
  %4251 = getelementptr inbounds i32, ptr %3, i64 %19
  %4252 = load i32, ptr %4251, align 4, !tbaa !5
  %4253 = icmp eq i32 %4252, 0
  %4254 = icmp sgt i32 %5, 0
  br i1 %4253, label %4264, label %4255

4255:                                             ; preds = %4250
  br i1 %4254, label %4256, label %5447

4256:                                             ; preds = %4255
  %4257 = icmp sgt i32 %13, 1
  %4258 = icmp sgt i32 %13, 0
  %4259 = add i32 %13, -2
  %4260 = zext i32 %4259 to i64
  %4261 = zext i32 %13 to i64
  %4262 = add nuw i32 %5, 1
  %4263 = icmp eq i32 %13, 1
  br label %4411

4264:                                             ; preds = %4250
  br i1 %4254, label %4265, label %5447

4265:                                             ; preds = %4264
  %4266 = icmp sgt i32 %13, 1
  %4267 = icmp sgt i32 %13, 0
  %4268 = add i32 %13, -2
  %4269 = zext i32 %4268 to i64
  %4270 = zext i32 %13 to i64
  %4271 = add nuw i32 %5, 1
  %4272 = icmp eq i32 %13, 1
  br label %4273

4273:                                             ; preds = %4265, %4409
  %4274 = phi float [ 0.000000e+00, %4265 ], [ %4359, %4409 ]
  %4275 = phi i32 [ 0, %4265 ], [ %4361, %4409 ]
  %4276 = phi double [ 0.000000e+00, %4265 ], [ %4360, %4409 ]
  %4277 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4266, label %4278, label %4347

4278:                                             ; preds = %4273, %4337
  %4279 = phi i32 [ %4346, %4337 ], [ 0, %4273 ]
  %4280 = phi i64 [ %4288, %4337 ], [ %4270, %4273 ]
  %4281 = phi i64 [ %4345, %4337 ], [ %4269, %4273 ]
  %4282 = phi i32 [ %4343, %4337 ], [ %4277, %4273 ]
  %4283 = sub i32 %4268, %4279
  %4284 = tail call i32 @llvm.smin.i32(i32 %4283, i32 0)
  %4285 = sub i32 %4283, %4284
  %4286 = zext i32 %4285 to i64
  %4287 = add nuw nsw i64 %4286, 1
  %4288 = add nsw i64 %4280, -1
  %4289 = icmp ult i32 %4285, 31
  br i1 %4289, label %4325, label %4290

4290:                                             ; preds = %4278
  %4291 = and i64 %4287, 8589934560
  %4292 = sub i64 %4281, %4291
  br label %4293

4293:                                             ; preds = %4293, %4290
  %4294 = phi i64 [ 0, %4290 ], [ %4317, %4293 ]
  %4295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4313, %4293 ]
  %4296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4314, %4293 ]
  %4297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4315, %4293 ]
  %4298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4290 ], [ %4316, %4293 ]
  %4299 = sub i64 %4281, %4294
  %4300 = getelementptr inbounds i32, ptr %9, i64 %4299
  %4301 = getelementptr inbounds i32, ptr %4300, i64 -7
  %4302 = load <8 x i32>, ptr %4301, align 4, !tbaa !5
  %4303 = shufflevector <8 x i32> %4302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4304 = getelementptr inbounds i32, ptr %4300, i64 -15
  %4305 = load <8 x i32>, ptr %4304, align 4, !tbaa !5
  %4306 = shufflevector <8 x i32> %4305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4307 = getelementptr inbounds i32, ptr %4300, i64 -23
  %4308 = load <8 x i32>, ptr %4307, align 4, !tbaa !5
  %4309 = shufflevector <8 x i32> %4308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4310 = getelementptr inbounds i32, ptr %4300, i64 -31
  %4311 = load <8 x i32>, ptr %4310, align 4, !tbaa !5
  %4312 = shufflevector <8 x i32> %4311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4313 = mul <8 x i32> %4303, %4295
  %4314 = mul <8 x i32> %4306, %4296
  %4315 = mul <8 x i32> %4309, %4297
  %4316 = mul <8 x i32> %4312, %4298
  %4317 = add nuw i64 %4294, 32
  %4318 = icmp eq i64 %4317, %4291
  br i1 %4318, label %4319, label %4293, !llvm.loop !904

4319:                                             ; preds = %4293
  %4320 = mul <8 x i32> %4314, %4313
  %4321 = mul <8 x i32> %4315, %4320
  %4322 = mul <8 x i32> %4316, %4321
  %4323 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4322)
  %4324 = icmp eq i64 %4287, %4291
  br i1 %4324, label %4337, label %4325

4325:                                             ; preds = %4278, %4319
  %4326 = phi i64 [ %4281, %4278 ], [ %4292, %4319 ]
  %4327 = phi i32 [ 1, %4278 ], [ %4323, %4319 ]
  br label %4328

4328:                                             ; preds = %4325, %4328
  %4329 = phi i64 [ %4334, %4328 ], [ %4326, %4325 ]
  %4330 = phi i32 [ %4333, %4328 ], [ %4327, %4325 ]
  %4331 = getelementptr inbounds i32, ptr %9, i64 %4329
  %4332 = load i32, ptr %4331, align 4, !tbaa !5
  %4333 = mul nsw i32 %4332, %4330
  %4334 = add nsw i64 %4329, -1
  %4335 = trunc i64 %4329 to i32
  %4336 = icmp sgt i32 %4335, 0
  br i1 %4336, label %4328, label %4337, !llvm.loop !905

4337:                                             ; preds = %4328, %4319
  %4338 = phi i32 [ %4323, %4319 ], [ %4333, %4328 ]
  %4339 = and i64 %4288, 4294967295
  %4340 = getelementptr inbounds i32, ptr %6, i64 %4339
  %4341 = load i32, ptr %4340, align 4, !tbaa !5
  %4342 = mul nsw i32 %4341, %4338
  %4343 = add nsw i32 %4342, %4282
  %4344 = icmp sgt i64 %4280, 2
  %4345 = add nsw i64 %4281, -1
  %4346 = add i32 %4279, 1
  br i1 %4344, label %4278, label %4347, !llvm.loop !906

4347:                                             ; preds = %4337, %4273
  %4348 = phi i32 [ %4277, %4273 ], [ %4343, %4337 ]
  %4349 = sext i32 %4348 to i64
  %4350 = getelementptr inbounds double, ptr %2, i64 %4349
  %4351 = load double, ptr %4350, align 8, !tbaa !18
  %4352 = getelementptr inbounds i64, ptr %4242, i64 %4349
  %4353 = load i64, ptr %4352, align 8, !tbaa !120
  %4354 = sitofp i64 %4353 to float
  %4355 = fpext float %4274 to double
  %4356 = fpext float %4354 to double
  %4357 = fmul fast double %4351, %4356
  %4358 = fadd fast double %4357, %4355
  %4359 = fptrunc double %4358 to float
  %4360 = fadd fast double %4351, %4276
  %4361 = add nuw nsw i32 %4275, 1
  br i1 %4267, label %4362, label %4409

4362:                                             ; preds = %4347
  %4363 = load i32, ptr %4, align 4, !tbaa !5
  %4364 = load i32, ptr %12, align 4, !tbaa !5
  %4365 = add nsw i32 %4364, -1
  %4366 = icmp slt i32 %4363, %4365
  br i1 %4366, label %4386, label %4367

4367:                                             ; preds = %4362
  %4368 = icmp eq i32 %4363, %4365
  br i1 %4368, label %4369, label %4402

4369:                                             ; preds = %4367
  store i32 0, ptr %4, align 4, !tbaa !5
  %4370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4370, ptr %6, align 4, !tbaa !5
  br i1 %4272, label %4409, label %4371

4371:                                             ; preds = %4369, %4396
  %4372 = phi i64 [ %4400, %4396 ], [ 1, %4369 ]
  %4373 = getelementptr inbounds i32, ptr %4, i64 %4372
  %4374 = load i32, ptr %4373, align 4, !tbaa !5
  %4375 = getelementptr inbounds i32, ptr %12, i64 %4372
  %4376 = load i32, ptr %4375, align 4, !tbaa !5
  %4377 = add nsw i32 %4376, -1
  %4378 = icmp slt i32 %4374, %4377
  br i1 %4378, label %4379, label %4394

4379:                                             ; preds = %4371
  br i1 %4366, label %4386, label %4380

4380:                                             ; preds = %4379
  %4381 = getelementptr inbounds i32, ptr %7, i64 %4372
  %4382 = load i32, ptr %4381, align 4, !tbaa !5
  %4383 = getelementptr inbounds i32, ptr %6, i64 %4372
  %4384 = load i32, ptr %4383, align 4, !tbaa !5
  %4385 = add nsw i32 %4384, %4382
  store i32 %4385, ptr %4383, align 4, !tbaa !5
  br label %4404

4386:                                             ; preds = %4362, %4379
  %4387 = phi i32 [ %4374, %4379 ], [ %4363, %4362 ]
  %4388 = phi ptr [ %4373, %4379 ], [ %4, %4362 ]
  %4389 = phi i64 [ %4372, %4379 ], [ 0, %4362 ]
  %4390 = add nsw i32 %4387, 1
  store i32 %4390, ptr %4388, align 4, !tbaa !5
  %4391 = getelementptr inbounds i32, ptr %7, i64 %4389
  %4392 = load i32, ptr %4391, align 4, !tbaa !5
  %4393 = getelementptr inbounds i32, ptr %6, i64 %4389
  br label %4404

4394:                                             ; preds = %4371
  %4395 = icmp eq i32 %4374, %4377
  br i1 %4395, label %4396, label %4402

4396:                                             ; preds = %4394
  store i32 0, ptr %4373, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %8, i64 %4372
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = getelementptr inbounds i32, ptr %6, i64 %4372
  store i32 %4398, ptr %4399, align 4, !tbaa !5
  %4400 = add nuw nsw i64 %4372, 1
  %4401 = icmp eq i64 %4400, %4270
  br i1 %4401, label %4409, label %4371, !llvm.loop !907

4402:                                             ; preds = %4367, %4394
  store float %4359, ptr %4244, align 4, !tbaa !162
  %4403 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4404:                                             ; preds = %4380, %4386
  %4405 = phi ptr [ %4393, %4386 ], [ %4373, %4380 ]
  %4406 = phi i32 [ %4392, %4386 ], [ 1, %4380 ]
  %4407 = load i32, ptr %4405, align 4, !tbaa !5
  %4408 = add nsw i32 %4407, %4406
  store i32 %4408, ptr %4405, align 4, !tbaa !5
  br label %4409

4409:                                             ; preds = %4396, %4404, %4369, %4347
  %4410 = icmp eq i32 %4361, %5
  br i1 %4410, label %5444, label %4273, !llvm.loop !908

4411:                                             ; preds = %4256, %4546
  %4412 = phi float [ 0.000000e+00, %4256 ], [ %4494, %4546 ]
  %4413 = phi i32 [ 0, %4256 ], [ %4495, %4546 ]
  %4414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4257, label %4415, label %4484

4415:                                             ; preds = %4411, %4474
  %4416 = phi i32 [ %4483, %4474 ], [ 0, %4411 ]
  %4417 = phi i64 [ %4425, %4474 ], [ %4261, %4411 ]
  %4418 = phi i64 [ %4482, %4474 ], [ %4260, %4411 ]
  %4419 = phi i32 [ %4480, %4474 ], [ %4414, %4411 ]
  %4420 = sub i32 %4259, %4416
  %4421 = tail call i32 @llvm.smin.i32(i32 %4420, i32 0)
  %4422 = sub i32 %4420, %4421
  %4423 = zext i32 %4422 to i64
  %4424 = add nuw nsw i64 %4423, 1
  %4425 = add nsw i64 %4417, -1
  %4426 = icmp ult i32 %4422, 31
  br i1 %4426, label %4462, label %4427

4427:                                             ; preds = %4415
  %4428 = and i64 %4424, 8589934560
  %4429 = sub i64 %4418, %4428
  br label %4430

4430:                                             ; preds = %4430, %4427
  %4431 = phi i64 [ 0, %4427 ], [ %4454, %4430 ]
  %4432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4450, %4430 ]
  %4433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4451, %4430 ]
  %4434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4452, %4430 ]
  %4435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4427 ], [ %4453, %4430 ]
  %4436 = sub i64 %4418, %4431
  %4437 = getelementptr inbounds i32, ptr %11, i64 %4436
  %4438 = getelementptr inbounds i32, ptr %4437, i64 -7
  %4439 = load <8 x i32>, ptr %4438, align 4, !tbaa !5
  %4440 = shufflevector <8 x i32> %4439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4441 = getelementptr inbounds i32, ptr %4437, i64 -15
  %4442 = load <8 x i32>, ptr %4441, align 4, !tbaa !5
  %4443 = shufflevector <8 x i32> %4442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4444 = getelementptr inbounds i32, ptr %4437, i64 -23
  %4445 = load <8 x i32>, ptr %4444, align 4, !tbaa !5
  %4446 = shufflevector <8 x i32> %4445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4447 = getelementptr inbounds i32, ptr %4437, i64 -31
  %4448 = load <8 x i32>, ptr %4447, align 4, !tbaa !5
  %4449 = shufflevector <8 x i32> %4448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4450 = mul <8 x i32> %4440, %4432
  %4451 = mul <8 x i32> %4443, %4433
  %4452 = mul <8 x i32> %4446, %4434
  %4453 = mul <8 x i32> %4449, %4435
  %4454 = add nuw i64 %4431, 32
  %4455 = icmp eq i64 %4454, %4428
  br i1 %4455, label %4456, label %4430, !llvm.loop !909

4456:                                             ; preds = %4430
  %4457 = mul <8 x i32> %4451, %4450
  %4458 = mul <8 x i32> %4452, %4457
  %4459 = mul <8 x i32> %4453, %4458
  %4460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4459)
  %4461 = icmp eq i64 %4424, %4428
  br i1 %4461, label %4474, label %4462

4462:                                             ; preds = %4415, %4456
  %4463 = phi i64 [ %4418, %4415 ], [ %4429, %4456 ]
  %4464 = phi i32 [ 1, %4415 ], [ %4460, %4456 ]
  br label %4465

4465:                                             ; preds = %4462, %4465
  %4466 = phi i64 [ %4471, %4465 ], [ %4463, %4462 ]
  %4467 = phi i32 [ %4470, %4465 ], [ %4464, %4462 ]
  %4468 = getelementptr inbounds i32, ptr %11, i64 %4466
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = mul nsw i32 %4469, %4467
  %4471 = add nsw i64 %4466, -1
  %4472 = trunc i64 %4466 to i32
  %4473 = icmp sgt i32 %4472, 0
  br i1 %4473, label %4465, label %4474, !llvm.loop !910

4474:                                             ; preds = %4465, %4456
  %4475 = phi i32 [ %4460, %4456 ], [ %4470, %4465 ]
  %4476 = and i64 %4425, 4294967295
  %4477 = getelementptr inbounds i32, ptr %6, i64 %4476
  %4478 = load i32, ptr %4477, align 4, !tbaa !5
  %4479 = mul nsw i32 %4478, %4475
  %4480 = add nsw i32 %4479, %4419
  %4481 = icmp sgt i64 %4417, 2
  %4482 = add nsw i64 %4418, -1
  %4483 = add i32 %4416, 1
  br i1 %4481, label %4415, label %4484, !llvm.loop !911

4484:                                             ; preds = %4474, %4411
  %4485 = phi i32 [ %4414, %4411 ], [ %4480, %4474 ]
  %4486 = icmp slt i32 %4485, %5
  br i1 %4486, label %4489, label %4487

4487:                                             ; preds = %4484
  %4488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

4489:                                             ; preds = %4484
  %4490 = sext i32 %4485 to i64
  %4491 = getelementptr inbounds i64, ptr %4242, i64 %4490
  %4492 = load i64, ptr %4491, align 8, !tbaa !120
  %4493 = sitofp i64 %4492 to float
  %4494 = fadd fast float %4412, %4493
  store float %4494, ptr %4244, align 4, !tbaa !162
  %4495 = add nuw nsw i32 %4413, 1
  br i1 %4258, label %4496, label %4546

4496:                                             ; preds = %4489
  %4497 = load i32, ptr %4, align 4, !tbaa !5
  %4498 = load i32, ptr %12, align 4, !tbaa !5
  %4499 = add nsw i32 %4498, -1
  %4500 = icmp slt i32 %4497, %4499
  br i1 %4500, label %4523, label %4501

4501:                                             ; preds = %4496
  %4502 = icmp eq i32 %4497, %4499
  br i1 %4502, label %4503, label %4539

4503:                                             ; preds = %4501
  store i32 0, ptr %4, align 4, !tbaa !5
  %4504 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4504, ptr %6, align 4, !tbaa !5
  br i1 %4263, label %4546, label %4505

4505:                                             ; preds = %4503, %4533
  %4506 = phi i64 [ %4537, %4533 ], [ 1, %4503 ]
  %4507 = getelementptr inbounds i32, ptr %4, i64 %4506
  %4508 = load i32, ptr %4507, align 4, !tbaa !5
  %4509 = getelementptr inbounds i32, ptr %12, i64 %4506
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = add nsw i32 %4510, -1
  %4512 = icmp slt i32 %4508, %4511
  br i1 %4512, label %4513, label %4531

4513:                                             ; preds = %4505
  br i1 %4500, label %4523, label %4514

4514:                                             ; preds = %4513
  %4515 = shl i64 %4506, 32
  %4516 = add i64 %4515, -4294967296
  %4517 = ashr exact i64 %4516, 32
  %4518 = getelementptr inbounds i32, ptr %7, i64 %4517
  %4519 = load i32, ptr %4518, align 4, !tbaa !5
  %4520 = getelementptr inbounds i32, ptr %6, i64 %4506
  %4521 = load i32, ptr %4520, align 4, !tbaa !5
  %4522 = add nsw i32 %4521, %4519
  store i32 %4522, ptr %4520, align 4, !tbaa !5
  br label %4541

4523:                                             ; preds = %4496, %4513
  %4524 = phi i32 [ %4508, %4513 ], [ %4497, %4496 ]
  %4525 = phi ptr [ %4507, %4513 ], [ %4, %4496 ]
  %4526 = phi i64 [ %4506, %4513 ], [ 0, %4496 ]
  %4527 = add nsw i32 %4524, 1
  store i32 %4527, ptr %4525, align 4, !tbaa !5
  %4528 = getelementptr inbounds i32, ptr %7, i64 %4526
  %4529 = load i32, ptr %4528, align 4, !tbaa !5
  %4530 = getelementptr inbounds i32, ptr %6, i64 %4526
  br label %4541

4531:                                             ; preds = %4505
  %4532 = icmp eq i32 %4508, %4511
  br i1 %4532, label %4533, label %4539

4533:                                             ; preds = %4531
  store i32 0, ptr %4507, align 4, !tbaa !5
  %4534 = getelementptr inbounds i32, ptr %8, i64 %4506
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = getelementptr inbounds i32, ptr %6, i64 %4506
  store i32 %4535, ptr %4536, align 4, !tbaa !5
  %4537 = add nuw nsw i64 %4506, 1
  %4538 = icmp eq i64 %4537, %4261
  br i1 %4538, label %4546, label %4505, !llvm.loop !912

4539:                                             ; preds = %4501, %4531
  %4540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4541:                                             ; preds = %4514, %4523
  %4542 = phi ptr [ %4530, %4523 ], [ %4507, %4514 ]
  %4543 = phi i32 [ %4529, %4523 ], [ 1, %4514 ]
  %4544 = load i32, ptr %4542, align 4, !tbaa !5
  %4545 = add nsw i32 %4544, %4543
  store i32 %4545, ptr %4542, align 4, !tbaa !5
  br label %4546

4546:                                             ; preds = %4533, %4541, %4503, %4489
  %4547 = icmp eq i32 %4495, %5
  br i1 %4547, label %5447, label %4411, !llvm.loop !913

4548:                                             ; preds = %4249
  %4549 = getelementptr inbounds i32, ptr %3, i64 %19
  %4550 = load i32, ptr %4549, align 4, !tbaa !5
  %4551 = icmp eq i32 %4550, 0
  %4552 = icmp sgt i32 %5, 0
  br i1 %4551, label %4562, label %4553

4553:                                             ; preds = %4548
  br i1 %4552, label %4554, label %5447

4554:                                             ; preds = %4553
  %4555 = icmp sgt i32 %13, 1
  %4556 = icmp sgt i32 %13, 0
  %4557 = add i32 %13, -2
  %4558 = zext i32 %4557 to i64
  %4559 = zext i32 %13 to i64
  %4560 = add nuw i32 %5, 1
  %4561 = icmp eq i32 %13, 1
  br label %4703

4562:                                             ; preds = %4548
  br i1 %4552, label %4563, label %5447

4563:                                             ; preds = %4562
  %4564 = icmp sgt i32 %13, 1
  %4565 = icmp sgt i32 %13, 0
  %4566 = add i32 %13, -2
  %4567 = zext i32 %4566 to i64
  %4568 = zext i32 %13 to i64
  %4569 = add nuw i32 %5, 1
  %4570 = icmp eq i32 %13, 1
  br label %4571

4571:                                             ; preds = %4563, %4701
  %4572 = phi float [ 0.000000e+00, %4563 ], [ %4651, %4701 ]
  %4573 = phi i32 [ 0, %4563 ], [ %4653, %4701 ]
  %4574 = phi double [ 0.000000e+00, %4563 ], [ %4652, %4701 ]
  %4575 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4564, label %4576, label %4645

4576:                                             ; preds = %4571, %4635
  %4577 = phi i32 [ %4644, %4635 ], [ 0, %4571 ]
  %4578 = phi i64 [ %4586, %4635 ], [ %4568, %4571 ]
  %4579 = phi i64 [ %4643, %4635 ], [ %4567, %4571 ]
  %4580 = phi i32 [ %4641, %4635 ], [ %4575, %4571 ]
  %4581 = sub i32 %4566, %4577
  %4582 = tail call i32 @llvm.smin.i32(i32 %4581, i32 0)
  %4583 = sub i32 %4581, %4582
  %4584 = zext i32 %4583 to i64
  %4585 = add nuw nsw i64 %4584, 1
  %4586 = add nsw i64 %4578, -1
  %4587 = icmp ult i32 %4583, 31
  br i1 %4587, label %4623, label %4588

4588:                                             ; preds = %4576
  %4589 = and i64 %4585, 8589934560
  %4590 = sub i64 %4579, %4589
  br label %4591

4591:                                             ; preds = %4591, %4588
  %4592 = phi i64 [ 0, %4588 ], [ %4615, %4591 ]
  %4593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4588 ], [ %4611, %4591 ]
  %4594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4588 ], [ %4612, %4591 ]
  %4595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4588 ], [ %4613, %4591 ]
  %4596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4588 ], [ %4614, %4591 ]
  %4597 = sub i64 %4579, %4592
  %4598 = getelementptr inbounds i32, ptr %9, i64 %4597
  %4599 = getelementptr inbounds i32, ptr %4598, i64 -7
  %4600 = load <8 x i32>, ptr %4599, align 4, !tbaa !5
  %4601 = shufflevector <8 x i32> %4600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4602 = getelementptr inbounds i32, ptr %4598, i64 -15
  %4603 = load <8 x i32>, ptr %4602, align 4, !tbaa !5
  %4604 = shufflevector <8 x i32> %4603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4605 = getelementptr inbounds i32, ptr %4598, i64 -23
  %4606 = load <8 x i32>, ptr %4605, align 4, !tbaa !5
  %4607 = shufflevector <8 x i32> %4606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4608 = getelementptr inbounds i32, ptr %4598, i64 -31
  %4609 = load <8 x i32>, ptr %4608, align 4, !tbaa !5
  %4610 = shufflevector <8 x i32> %4609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4611 = mul <8 x i32> %4601, %4593
  %4612 = mul <8 x i32> %4604, %4594
  %4613 = mul <8 x i32> %4607, %4595
  %4614 = mul <8 x i32> %4610, %4596
  %4615 = add nuw i64 %4592, 32
  %4616 = icmp eq i64 %4615, %4589
  br i1 %4616, label %4617, label %4591, !llvm.loop !914

4617:                                             ; preds = %4591
  %4618 = mul <8 x i32> %4612, %4611
  %4619 = mul <8 x i32> %4613, %4618
  %4620 = mul <8 x i32> %4614, %4619
  %4621 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4620)
  %4622 = icmp eq i64 %4585, %4589
  br i1 %4622, label %4635, label %4623

4623:                                             ; preds = %4576, %4617
  %4624 = phi i64 [ %4579, %4576 ], [ %4590, %4617 ]
  %4625 = phi i32 [ 1, %4576 ], [ %4621, %4617 ]
  br label %4626

4626:                                             ; preds = %4623, %4626
  %4627 = phi i64 [ %4632, %4626 ], [ %4624, %4623 ]
  %4628 = phi i32 [ %4631, %4626 ], [ %4625, %4623 ]
  %4629 = getelementptr inbounds i32, ptr %9, i64 %4627
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = mul nsw i32 %4630, %4628
  %4632 = add nsw i64 %4627, -1
  %4633 = trunc i64 %4627 to i32
  %4634 = icmp sgt i32 %4633, 0
  br i1 %4634, label %4626, label %4635, !llvm.loop !915

4635:                                             ; preds = %4626, %4617
  %4636 = phi i32 [ %4621, %4617 ], [ %4631, %4626 ]
  %4637 = and i64 %4586, 4294967295
  %4638 = getelementptr inbounds i32, ptr %6, i64 %4637
  %4639 = load i32, ptr %4638, align 4, !tbaa !5
  %4640 = mul nsw i32 %4639, %4636
  %4641 = add nsw i32 %4640, %4580
  %4642 = icmp sgt i64 %4578, 2
  %4643 = add nsw i64 %4579, -1
  %4644 = add i32 %4577, 1
  br i1 %4642, label %4576, label %4645, !llvm.loop !916

4645:                                             ; preds = %4635, %4571
  %4646 = phi i32 [ %4575, %4571 ], [ %4641, %4635 ]
  %4647 = sext i32 %4646 to i64
  %4648 = getelementptr inbounds i64, ptr %4242, i64 %4647
  %4649 = load i64, ptr %4648, align 8, !tbaa !120
  %4650 = sitofp i64 %4649 to float
  %4651 = fadd fast float %4572, %4650
  %4652 = fadd fast double %4574, 1.000000e+00
  %4653 = add nuw nsw i32 %4573, 1
  br i1 %4565, label %4654, label %4701

4654:                                             ; preds = %4645
  %4655 = load i32, ptr %4, align 4, !tbaa !5
  %4656 = load i32, ptr %12, align 4, !tbaa !5
  %4657 = add nsw i32 %4656, -1
  %4658 = icmp slt i32 %4655, %4657
  br i1 %4658, label %4678, label %4659

4659:                                             ; preds = %4654
  %4660 = icmp eq i32 %4655, %4657
  br i1 %4660, label %4661, label %4694

4661:                                             ; preds = %4659
  store i32 0, ptr %4, align 4, !tbaa !5
  %4662 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4662, ptr %6, align 4, !tbaa !5
  br i1 %4570, label %4701, label %4663

4663:                                             ; preds = %4661, %4688
  %4664 = phi i64 [ %4692, %4688 ], [ 1, %4661 ]
  %4665 = getelementptr inbounds i32, ptr %4, i64 %4664
  %4666 = load i32, ptr %4665, align 4, !tbaa !5
  %4667 = getelementptr inbounds i32, ptr %12, i64 %4664
  %4668 = load i32, ptr %4667, align 4, !tbaa !5
  %4669 = add nsw i32 %4668, -1
  %4670 = icmp slt i32 %4666, %4669
  br i1 %4670, label %4671, label %4686

4671:                                             ; preds = %4663
  br i1 %4658, label %4678, label %4672

4672:                                             ; preds = %4671
  %4673 = getelementptr inbounds i32, ptr %7, i64 %4664
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = getelementptr inbounds i32, ptr %6, i64 %4664
  %4676 = load i32, ptr %4675, align 4, !tbaa !5
  %4677 = add nsw i32 %4676, %4674
  store i32 %4677, ptr %4675, align 4, !tbaa !5
  br label %4696

4678:                                             ; preds = %4654, %4671
  %4679 = phi i32 [ %4666, %4671 ], [ %4655, %4654 ]
  %4680 = phi ptr [ %4665, %4671 ], [ %4, %4654 ]
  %4681 = phi i64 [ %4664, %4671 ], [ 0, %4654 ]
  %4682 = add nsw i32 %4679, 1
  store i32 %4682, ptr %4680, align 4, !tbaa !5
  %4683 = getelementptr inbounds i32, ptr %7, i64 %4681
  %4684 = load i32, ptr %4683, align 4, !tbaa !5
  %4685 = getelementptr inbounds i32, ptr %6, i64 %4681
  br label %4696

4686:                                             ; preds = %4663
  %4687 = icmp eq i32 %4666, %4669
  br i1 %4687, label %4688, label %4694

4688:                                             ; preds = %4686
  store i32 0, ptr %4665, align 4, !tbaa !5
  %4689 = getelementptr inbounds i32, ptr %8, i64 %4664
  %4690 = load i32, ptr %4689, align 4, !tbaa !5
  %4691 = getelementptr inbounds i32, ptr %6, i64 %4664
  store i32 %4690, ptr %4691, align 4, !tbaa !5
  %4692 = add nuw nsw i64 %4664, 1
  %4693 = icmp eq i64 %4692, %4568
  br i1 %4693, label %4701, label %4663, !llvm.loop !917

4694:                                             ; preds = %4659, %4686
  store float %4651, ptr %4244, align 4, !tbaa !162
  %4695 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4696:                                             ; preds = %4672, %4678
  %4697 = phi ptr [ %4685, %4678 ], [ %4665, %4672 ]
  %4698 = phi i32 [ %4684, %4678 ], [ 1, %4672 ]
  %4699 = load i32, ptr %4697, align 4, !tbaa !5
  %4700 = add nsw i32 %4699, %4698
  store i32 %4700, ptr %4697, align 4, !tbaa !5
  br label %4701

4701:                                             ; preds = %4688, %4696, %4661, %4645
  %4702 = icmp eq i32 %4653, %5
  br i1 %4702, label %5445, label %4571, !llvm.loop !918

4703:                                             ; preds = %4554, %4838
  %4704 = phi float [ 0.000000e+00, %4554 ], [ %4786, %4838 ]
  %4705 = phi i32 [ 0, %4554 ], [ %4787, %4838 ]
  %4706 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4555, label %4707, label %4776

4707:                                             ; preds = %4703, %4766
  %4708 = phi i32 [ %4775, %4766 ], [ 0, %4703 ]
  %4709 = phi i64 [ %4717, %4766 ], [ %4559, %4703 ]
  %4710 = phi i64 [ %4774, %4766 ], [ %4558, %4703 ]
  %4711 = phi i32 [ %4772, %4766 ], [ %4706, %4703 ]
  %4712 = sub i32 %4557, %4708
  %4713 = tail call i32 @llvm.smin.i32(i32 %4712, i32 0)
  %4714 = sub i32 %4712, %4713
  %4715 = zext i32 %4714 to i64
  %4716 = add nuw nsw i64 %4715, 1
  %4717 = add nsw i64 %4709, -1
  %4718 = icmp ult i32 %4714, 31
  br i1 %4718, label %4754, label %4719

4719:                                             ; preds = %4707
  %4720 = and i64 %4716, 8589934560
  %4721 = sub i64 %4710, %4720
  br label %4722

4722:                                             ; preds = %4722, %4719
  %4723 = phi i64 [ 0, %4719 ], [ %4746, %4722 ]
  %4724 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4719 ], [ %4742, %4722 ]
  %4725 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4719 ], [ %4743, %4722 ]
  %4726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4719 ], [ %4744, %4722 ]
  %4727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4719 ], [ %4745, %4722 ]
  %4728 = sub i64 %4710, %4723
  %4729 = getelementptr inbounds i32, ptr %11, i64 %4728
  %4730 = getelementptr inbounds i32, ptr %4729, i64 -7
  %4731 = load <8 x i32>, ptr %4730, align 4, !tbaa !5
  %4732 = shufflevector <8 x i32> %4731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4733 = getelementptr inbounds i32, ptr %4729, i64 -15
  %4734 = load <8 x i32>, ptr %4733, align 4, !tbaa !5
  %4735 = shufflevector <8 x i32> %4734, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4736 = getelementptr inbounds i32, ptr %4729, i64 -23
  %4737 = load <8 x i32>, ptr %4736, align 4, !tbaa !5
  %4738 = shufflevector <8 x i32> %4737, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4739 = getelementptr inbounds i32, ptr %4729, i64 -31
  %4740 = load <8 x i32>, ptr %4739, align 4, !tbaa !5
  %4741 = shufflevector <8 x i32> %4740, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4742 = mul <8 x i32> %4732, %4724
  %4743 = mul <8 x i32> %4735, %4725
  %4744 = mul <8 x i32> %4738, %4726
  %4745 = mul <8 x i32> %4741, %4727
  %4746 = add nuw i64 %4723, 32
  %4747 = icmp eq i64 %4746, %4720
  br i1 %4747, label %4748, label %4722, !llvm.loop !919

4748:                                             ; preds = %4722
  %4749 = mul <8 x i32> %4743, %4742
  %4750 = mul <8 x i32> %4744, %4749
  %4751 = mul <8 x i32> %4745, %4750
  %4752 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4751)
  %4753 = icmp eq i64 %4716, %4720
  br i1 %4753, label %4766, label %4754

4754:                                             ; preds = %4707, %4748
  %4755 = phi i64 [ %4710, %4707 ], [ %4721, %4748 ]
  %4756 = phi i32 [ 1, %4707 ], [ %4752, %4748 ]
  br label %4757

4757:                                             ; preds = %4754, %4757
  %4758 = phi i64 [ %4763, %4757 ], [ %4755, %4754 ]
  %4759 = phi i32 [ %4762, %4757 ], [ %4756, %4754 ]
  %4760 = getelementptr inbounds i32, ptr %11, i64 %4758
  %4761 = load i32, ptr %4760, align 4, !tbaa !5
  %4762 = mul nsw i32 %4761, %4759
  %4763 = add nsw i64 %4758, -1
  %4764 = trunc i64 %4758 to i32
  %4765 = icmp sgt i32 %4764, 0
  br i1 %4765, label %4757, label %4766, !llvm.loop !920

4766:                                             ; preds = %4757, %4748
  %4767 = phi i32 [ %4752, %4748 ], [ %4762, %4757 ]
  %4768 = and i64 %4717, 4294967295
  %4769 = getelementptr inbounds i32, ptr %6, i64 %4768
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = mul nsw i32 %4770, %4767
  %4772 = add nsw i32 %4771, %4711
  %4773 = icmp sgt i64 %4709, 2
  %4774 = add nsw i64 %4710, -1
  %4775 = add i32 %4708, 1
  br i1 %4773, label %4707, label %4776, !llvm.loop !921

4776:                                             ; preds = %4766, %4703
  %4777 = phi i32 [ %4706, %4703 ], [ %4772, %4766 ]
  %4778 = icmp slt i32 %4777, %5
  br i1 %4778, label %4781, label %4779

4779:                                             ; preds = %4776
  %4780 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

4781:                                             ; preds = %4776
  %4782 = sext i32 %4777 to i64
  %4783 = getelementptr inbounds i64, ptr %4242, i64 %4782
  %4784 = load i64, ptr %4783, align 8, !tbaa !120
  %4785 = sitofp i64 %4784 to float
  %4786 = fadd fast float %4704, %4785
  store float %4786, ptr %4244, align 4, !tbaa !162
  %4787 = add nuw nsw i32 %4705, 1
  br i1 %4556, label %4788, label %4838

4788:                                             ; preds = %4781
  %4789 = load i32, ptr %4, align 4, !tbaa !5
  %4790 = load i32, ptr %12, align 4, !tbaa !5
  %4791 = add nsw i32 %4790, -1
  %4792 = icmp slt i32 %4789, %4791
  br i1 %4792, label %4815, label %4793

4793:                                             ; preds = %4788
  %4794 = icmp eq i32 %4789, %4791
  br i1 %4794, label %4795, label %4831

4795:                                             ; preds = %4793
  store i32 0, ptr %4, align 4, !tbaa !5
  %4796 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4796, ptr %6, align 4, !tbaa !5
  br i1 %4561, label %4838, label %4797

4797:                                             ; preds = %4795, %4825
  %4798 = phi i64 [ %4829, %4825 ], [ 1, %4795 ]
  %4799 = getelementptr inbounds i32, ptr %4, i64 %4798
  %4800 = load i32, ptr %4799, align 4, !tbaa !5
  %4801 = getelementptr inbounds i32, ptr %12, i64 %4798
  %4802 = load i32, ptr %4801, align 4, !tbaa !5
  %4803 = add nsw i32 %4802, -1
  %4804 = icmp slt i32 %4800, %4803
  br i1 %4804, label %4805, label %4823

4805:                                             ; preds = %4797
  br i1 %4792, label %4815, label %4806

4806:                                             ; preds = %4805
  %4807 = shl i64 %4798, 32
  %4808 = add i64 %4807, -4294967296
  %4809 = ashr exact i64 %4808, 32
  %4810 = getelementptr inbounds i32, ptr %7, i64 %4809
  %4811 = load i32, ptr %4810, align 4, !tbaa !5
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4798
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = add nsw i32 %4813, %4811
  store i32 %4814, ptr %4812, align 4, !tbaa !5
  br label %4833

4815:                                             ; preds = %4788, %4805
  %4816 = phi i32 [ %4800, %4805 ], [ %4789, %4788 ]
  %4817 = phi ptr [ %4799, %4805 ], [ %4, %4788 ]
  %4818 = phi i64 [ %4798, %4805 ], [ 0, %4788 ]
  %4819 = add nsw i32 %4816, 1
  store i32 %4819, ptr %4817, align 4, !tbaa !5
  %4820 = getelementptr inbounds i32, ptr %7, i64 %4818
  %4821 = load i32, ptr %4820, align 4, !tbaa !5
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4818
  br label %4833

4823:                                             ; preds = %4797
  %4824 = icmp eq i32 %4800, %4803
  br i1 %4824, label %4825, label %4831

4825:                                             ; preds = %4823
  store i32 0, ptr %4799, align 4, !tbaa !5
  %4826 = getelementptr inbounds i32, ptr %8, i64 %4798
  %4827 = load i32, ptr %4826, align 4, !tbaa !5
  %4828 = getelementptr inbounds i32, ptr %6, i64 %4798
  store i32 %4827, ptr %4828, align 4, !tbaa !5
  %4829 = add nuw nsw i64 %4798, 1
  %4830 = icmp eq i64 %4829, %4559
  br i1 %4830, label %4838, label %4797, !llvm.loop !922

4831:                                             ; preds = %4793, %4823
  %4832 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

4833:                                             ; preds = %4806, %4815
  %4834 = phi ptr [ %4822, %4815 ], [ %4799, %4806 ]
  %4835 = phi i32 [ %4821, %4815 ], [ 1, %4806 ]
  %4836 = load i32, ptr %4834, align 4, !tbaa !5
  %4837 = add nsw i32 %4836, %4835
  store i32 %4837, ptr %4834, align 4, !tbaa !5
  br label %4838

4838:                                             ; preds = %4825, %4833, %4795, %4781
  %4839 = icmp eq i32 %4787, %5
  br i1 %4839, label %5447, label %4703, !llvm.loop !923

4840:                                             ; preds = %4249
  %4841 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

4842:                                             ; preds = %18
  %4843 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4844 = load ptr, ptr %4843, align 8, !tbaa !9
  %4845 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4846 = load ptr, ptr %4845, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4846, align 8, !tbaa !18
  %4847 = icmp eq i32 %13, 0
  br i1 %4847, label %4848, label %4851

4848:                                             ; preds = %4842
  %4849 = load i64, ptr %4844, align 8, !tbaa !120
  %4850 = sitofp i64 %4849 to double
  store double %4850, ptr %4846, align 8, !tbaa !18
  br label %5447

4851:                                             ; preds = %4842
  switch i32 %1, label %5439 [
    i32 1, label %4852
    i32 0, label %5147
  ]

4852:                                             ; preds = %4851
  %4853 = getelementptr inbounds i32, ptr %3, i64 %19
  %4854 = load i32, ptr %4853, align 4, !tbaa !5
  %4855 = icmp eq i32 %4854, 0
  %4856 = icmp sgt i32 %5, 0
  br i1 %4855, label %4866, label %4857

4857:                                             ; preds = %4852
  br i1 %4856, label %4858, label %5447

4858:                                             ; preds = %4857
  %4859 = icmp sgt i32 %13, 1
  %4860 = icmp sgt i32 %13, 0
  %4861 = add i32 %13, -2
  %4862 = zext i32 %4861 to i64
  %4863 = zext i32 %13 to i64
  %4864 = add nuw i32 %5, 1
  %4865 = icmp eq i32 %13, 1
  br label %5010

4866:                                             ; preds = %4852
  br i1 %4856, label %4867, label %5447

4867:                                             ; preds = %4866
  %4868 = icmp sgt i32 %13, 1
  %4869 = icmp sgt i32 %13, 0
  %4870 = add i32 %13, -2
  %4871 = zext i32 %4870 to i64
  %4872 = zext i32 %13 to i64
  %4873 = add nuw i32 %5, 1
  %4874 = icmp eq i32 %13, 1
  br label %4875

4875:                                             ; preds = %4867, %5008
  %4876 = phi double [ 0.000000e+00, %4867 ], [ %4958, %5008 ]
  %4877 = phi i32 [ 0, %4867 ], [ %4960, %5008 ]
  %4878 = phi double [ 0.000000e+00, %4867 ], [ %4959, %5008 ]
  %4879 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4868, label %4880, label %4949

4880:                                             ; preds = %4875, %4939
  %4881 = phi i32 [ %4948, %4939 ], [ 0, %4875 ]
  %4882 = phi i64 [ %4890, %4939 ], [ %4872, %4875 ]
  %4883 = phi i64 [ %4947, %4939 ], [ %4871, %4875 ]
  %4884 = phi i32 [ %4945, %4939 ], [ %4879, %4875 ]
  %4885 = sub i32 %4870, %4881
  %4886 = tail call i32 @llvm.smin.i32(i32 %4885, i32 0)
  %4887 = sub i32 %4885, %4886
  %4888 = zext i32 %4887 to i64
  %4889 = add nuw nsw i64 %4888, 1
  %4890 = add nsw i64 %4882, -1
  %4891 = icmp ult i32 %4887, 31
  br i1 %4891, label %4927, label %4892

4892:                                             ; preds = %4880
  %4893 = and i64 %4889, 8589934560
  %4894 = sub i64 %4883, %4893
  br label %4895

4895:                                             ; preds = %4895, %4892
  %4896 = phi i64 [ 0, %4892 ], [ %4919, %4895 ]
  %4897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4892 ], [ %4915, %4895 ]
  %4898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4892 ], [ %4916, %4895 ]
  %4899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4892 ], [ %4917, %4895 ]
  %4900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4892 ], [ %4918, %4895 ]
  %4901 = sub i64 %4883, %4896
  %4902 = getelementptr inbounds i32, ptr %9, i64 %4901
  %4903 = getelementptr inbounds i32, ptr %4902, i64 -7
  %4904 = load <8 x i32>, ptr %4903, align 4, !tbaa !5
  %4905 = shufflevector <8 x i32> %4904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4906 = getelementptr inbounds i32, ptr %4902, i64 -15
  %4907 = load <8 x i32>, ptr %4906, align 4, !tbaa !5
  %4908 = shufflevector <8 x i32> %4907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4909 = getelementptr inbounds i32, ptr %4902, i64 -23
  %4910 = load <8 x i32>, ptr %4909, align 4, !tbaa !5
  %4911 = shufflevector <8 x i32> %4910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4912 = getelementptr inbounds i32, ptr %4902, i64 -31
  %4913 = load <8 x i32>, ptr %4912, align 4, !tbaa !5
  %4914 = shufflevector <8 x i32> %4913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4915 = mul <8 x i32> %4905, %4897
  %4916 = mul <8 x i32> %4908, %4898
  %4917 = mul <8 x i32> %4911, %4899
  %4918 = mul <8 x i32> %4914, %4900
  %4919 = add nuw i64 %4896, 32
  %4920 = icmp eq i64 %4919, %4893
  br i1 %4920, label %4921, label %4895, !llvm.loop !924

4921:                                             ; preds = %4895
  %4922 = mul <8 x i32> %4916, %4915
  %4923 = mul <8 x i32> %4917, %4922
  %4924 = mul <8 x i32> %4918, %4923
  %4925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4924)
  %4926 = icmp eq i64 %4889, %4893
  br i1 %4926, label %4939, label %4927

4927:                                             ; preds = %4880, %4921
  %4928 = phi i64 [ %4883, %4880 ], [ %4894, %4921 ]
  %4929 = phi i32 [ 1, %4880 ], [ %4925, %4921 ]
  br label %4930

4930:                                             ; preds = %4927, %4930
  %4931 = phi i64 [ %4936, %4930 ], [ %4928, %4927 ]
  %4932 = phi i32 [ %4935, %4930 ], [ %4929, %4927 ]
  %4933 = getelementptr inbounds i32, ptr %9, i64 %4931
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = mul nsw i32 %4934, %4932
  %4936 = add nsw i64 %4931, -1
  %4937 = trunc i64 %4931 to i32
  %4938 = icmp sgt i32 %4937, 0
  br i1 %4938, label %4930, label %4939, !llvm.loop !925

4939:                                             ; preds = %4930, %4921
  %4940 = phi i32 [ %4925, %4921 ], [ %4935, %4930 ]
  %4941 = and i64 %4890, 4294967295
  %4942 = getelementptr inbounds i32, ptr %6, i64 %4941
  %4943 = load i32, ptr %4942, align 4, !tbaa !5
  %4944 = mul nsw i32 %4943, %4940
  %4945 = add nsw i32 %4944, %4884
  %4946 = icmp sgt i64 %4882, 2
  %4947 = add nsw i64 %4883, -1
  %4948 = add i32 %4881, 1
  br i1 %4946, label %4880, label %4949, !llvm.loop !926

4949:                                             ; preds = %4939, %4875
  %4950 = phi i32 [ %4879, %4875 ], [ %4945, %4939 ]
  %4951 = sext i32 %4950 to i64
  %4952 = getelementptr inbounds double, ptr %2, i64 %4951
  %4953 = load double, ptr %4952, align 8, !tbaa !18
  %4954 = getelementptr inbounds i64, ptr %4844, i64 %4951
  %4955 = load i64, ptr %4954, align 8, !tbaa !120
  %4956 = sitofp i64 %4955 to double
  %4957 = fmul fast double %4953, %4956
  %4958 = fadd fast double %4957, %4876
  store double %4958, ptr %4846, align 8, !tbaa !18
  %4959 = fadd fast double %4953, %4878
  %4960 = add nuw nsw i32 %4877, 1
  br i1 %4869, label %4961, label %5008

4961:                                             ; preds = %4949
  %4962 = load i32, ptr %4, align 4, !tbaa !5
  %4963 = load i32, ptr %12, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, -1
  %4965 = icmp slt i32 %4962, %4964
  br i1 %4965, label %4985, label %4966

4966:                                             ; preds = %4961
  %4967 = icmp eq i32 %4962, %4964
  br i1 %4967, label %4968, label %5001

4968:                                             ; preds = %4966
  store i32 0, ptr %4, align 4, !tbaa !5
  %4969 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4969, ptr %6, align 4, !tbaa !5
  br i1 %4874, label %5008, label %4970

4970:                                             ; preds = %4968, %4995
  %4971 = phi i64 [ %4999, %4995 ], [ 1, %4968 ]
  %4972 = getelementptr inbounds i32, ptr %4, i64 %4971
  %4973 = load i32, ptr %4972, align 4, !tbaa !5
  %4974 = getelementptr inbounds i32, ptr %12, i64 %4971
  %4975 = load i32, ptr %4974, align 4, !tbaa !5
  %4976 = add nsw i32 %4975, -1
  %4977 = icmp slt i32 %4973, %4976
  br i1 %4977, label %4978, label %4993

4978:                                             ; preds = %4970
  br i1 %4965, label %4985, label %4979

4979:                                             ; preds = %4978
  %4980 = getelementptr inbounds i32, ptr %7, i64 %4971
  %4981 = load i32, ptr %4980, align 4, !tbaa !5
  %4982 = getelementptr inbounds i32, ptr %6, i64 %4971
  %4983 = load i32, ptr %4982, align 4, !tbaa !5
  %4984 = add nsw i32 %4983, %4981
  store i32 %4984, ptr %4982, align 4, !tbaa !5
  br label %5003

4985:                                             ; preds = %4961, %4978
  %4986 = phi i32 [ %4973, %4978 ], [ %4962, %4961 ]
  %4987 = phi ptr [ %4972, %4978 ], [ %4, %4961 ]
  %4988 = phi i64 [ %4971, %4978 ], [ 0, %4961 ]
  %4989 = add nsw i32 %4986, 1
  store i32 %4989, ptr %4987, align 4, !tbaa !5
  %4990 = getelementptr inbounds i32, ptr %7, i64 %4988
  %4991 = load i32, ptr %4990, align 4, !tbaa !5
  %4992 = getelementptr inbounds i32, ptr %6, i64 %4988
  br label %5003

4993:                                             ; preds = %4970
  %4994 = icmp eq i32 %4973, %4976
  br i1 %4994, label %4995, label %5001

4995:                                             ; preds = %4993
  store i32 0, ptr %4972, align 4, !tbaa !5
  %4996 = getelementptr inbounds i32, ptr %8, i64 %4971
  %4997 = load i32, ptr %4996, align 4, !tbaa !5
  %4998 = getelementptr inbounds i32, ptr %6, i64 %4971
  store i32 %4997, ptr %4998, align 4, !tbaa !5
  %4999 = add nuw nsw i64 %4971, 1
  %5000 = icmp eq i64 %4999, %4872
  br i1 %5000, label %5008, label %4970, !llvm.loop !927

5001:                                             ; preds = %4966, %4993
  %5002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

5003:                                             ; preds = %4979, %4985
  %5004 = phi ptr [ %4992, %4985 ], [ %4972, %4979 ]
  %5005 = phi i32 [ %4991, %4985 ], [ 1, %4979 ]
  %5006 = load i32, ptr %5004, align 4, !tbaa !5
  %5007 = add nsw i32 %5006, %5005
  store i32 %5007, ptr %5004, align 4, !tbaa !5
  br label %5008

5008:                                             ; preds = %4995, %5003, %4968, %4949
  %5009 = icmp eq i32 %4960, %5
  br i1 %5009, label %5447, label %4875, !llvm.loop !928

5010:                                             ; preds = %4858, %5145
  %5011 = phi double [ 0.000000e+00, %4858 ], [ %5093, %5145 ]
  %5012 = phi i32 [ 0, %4858 ], [ %5094, %5145 ]
  %5013 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %5014, label %5083

5014:                                             ; preds = %5010, %5073
  %5015 = phi i32 [ %5082, %5073 ], [ 0, %5010 ]
  %5016 = phi i64 [ %5024, %5073 ], [ %4863, %5010 ]
  %5017 = phi i64 [ %5081, %5073 ], [ %4862, %5010 ]
  %5018 = phi i32 [ %5079, %5073 ], [ %5013, %5010 ]
  %5019 = sub i32 %4861, %5015
  %5020 = tail call i32 @llvm.smin.i32(i32 %5019, i32 0)
  %5021 = sub i32 %5019, %5020
  %5022 = zext i32 %5021 to i64
  %5023 = add nuw nsw i64 %5022, 1
  %5024 = add nsw i64 %5016, -1
  %5025 = icmp ult i32 %5021, 31
  br i1 %5025, label %5061, label %5026

5026:                                             ; preds = %5014
  %5027 = and i64 %5023, 8589934560
  %5028 = sub i64 %5017, %5027
  br label %5029

5029:                                             ; preds = %5029, %5026
  %5030 = phi i64 [ 0, %5026 ], [ %5053, %5029 ]
  %5031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5026 ], [ %5049, %5029 ]
  %5032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5026 ], [ %5050, %5029 ]
  %5033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5026 ], [ %5051, %5029 ]
  %5034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5026 ], [ %5052, %5029 ]
  %5035 = sub i64 %5017, %5030
  %5036 = getelementptr inbounds i32, ptr %11, i64 %5035
  %5037 = getelementptr inbounds i32, ptr %5036, i64 -7
  %5038 = load <8 x i32>, ptr %5037, align 4, !tbaa !5
  %5039 = shufflevector <8 x i32> %5038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5040 = getelementptr inbounds i32, ptr %5036, i64 -15
  %5041 = load <8 x i32>, ptr %5040, align 4, !tbaa !5
  %5042 = shufflevector <8 x i32> %5041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5043 = getelementptr inbounds i32, ptr %5036, i64 -23
  %5044 = load <8 x i32>, ptr %5043, align 4, !tbaa !5
  %5045 = shufflevector <8 x i32> %5044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5046 = getelementptr inbounds i32, ptr %5036, i64 -31
  %5047 = load <8 x i32>, ptr %5046, align 4, !tbaa !5
  %5048 = shufflevector <8 x i32> %5047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5049 = mul <8 x i32> %5039, %5031
  %5050 = mul <8 x i32> %5042, %5032
  %5051 = mul <8 x i32> %5045, %5033
  %5052 = mul <8 x i32> %5048, %5034
  %5053 = add nuw i64 %5030, 32
  %5054 = icmp eq i64 %5053, %5027
  br i1 %5054, label %5055, label %5029, !llvm.loop !929

5055:                                             ; preds = %5029
  %5056 = mul <8 x i32> %5050, %5049
  %5057 = mul <8 x i32> %5051, %5056
  %5058 = mul <8 x i32> %5052, %5057
  %5059 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5058)
  %5060 = icmp eq i64 %5023, %5027
  br i1 %5060, label %5073, label %5061

5061:                                             ; preds = %5014, %5055
  %5062 = phi i64 [ %5017, %5014 ], [ %5028, %5055 ]
  %5063 = phi i32 [ 1, %5014 ], [ %5059, %5055 ]
  br label %5064

5064:                                             ; preds = %5061, %5064
  %5065 = phi i64 [ %5070, %5064 ], [ %5062, %5061 ]
  %5066 = phi i32 [ %5069, %5064 ], [ %5063, %5061 ]
  %5067 = getelementptr inbounds i32, ptr %11, i64 %5065
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = mul nsw i32 %5068, %5066
  %5070 = add nsw i64 %5065, -1
  %5071 = trunc i64 %5065 to i32
  %5072 = icmp sgt i32 %5071, 0
  br i1 %5072, label %5064, label %5073, !llvm.loop !930

5073:                                             ; preds = %5064, %5055
  %5074 = phi i32 [ %5059, %5055 ], [ %5069, %5064 ]
  %5075 = and i64 %5024, 4294967295
  %5076 = getelementptr inbounds i32, ptr %6, i64 %5075
  %5077 = load i32, ptr %5076, align 4, !tbaa !5
  %5078 = mul nsw i32 %5077, %5074
  %5079 = add nsw i32 %5078, %5018
  %5080 = icmp sgt i64 %5016, 2
  %5081 = add nsw i64 %5017, -1
  %5082 = add i32 %5015, 1
  br i1 %5080, label %5014, label %5083, !llvm.loop !931

5083:                                             ; preds = %5073, %5010
  %5084 = phi i32 [ %5013, %5010 ], [ %5079, %5073 ]
  %5085 = icmp slt i32 %5084, %5
  br i1 %5085, label %5088, label %5086

5086:                                             ; preds = %5083
  %5087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

5088:                                             ; preds = %5083
  %5089 = sext i32 %5084 to i64
  %5090 = getelementptr inbounds i64, ptr %4844, i64 %5089
  %5091 = load i64, ptr %5090, align 8, !tbaa !120
  %5092 = sitofp i64 %5091 to double
  %5093 = fadd fast double %5011, %5092
  store double %5093, ptr %4846, align 8, !tbaa !18
  %5094 = add nuw nsw i32 %5012, 1
  br i1 %4860, label %5095, label %5145

5095:                                             ; preds = %5088
  %5096 = load i32, ptr %4, align 4, !tbaa !5
  %5097 = load i32, ptr %12, align 4, !tbaa !5
  %5098 = add nsw i32 %5097, -1
  %5099 = icmp slt i32 %5096, %5098
  br i1 %5099, label %5122, label %5100

5100:                                             ; preds = %5095
  %5101 = icmp eq i32 %5096, %5098
  br i1 %5101, label %5102, label %5138

5102:                                             ; preds = %5100
  store i32 0, ptr %4, align 4, !tbaa !5
  %5103 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5103, ptr %6, align 4, !tbaa !5
  br i1 %4865, label %5145, label %5104

5104:                                             ; preds = %5102, %5132
  %5105 = phi i64 [ %5136, %5132 ], [ 1, %5102 ]
  %5106 = getelementptr inbounds i32, ptr %4, i64 %5105
  %5107 = load i32, ptr %5106, align 4, !tbaa !5
  %5108 = getelementptr inbounds i32, ptr %12, i64 %5105
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = add nsw i32 %5109, -1
  %5111 = icmp slt i32 %5107, %5110
  br i1 %5111, label %5112, label %5130

5112:                                             ; preds = %5104
  br i1 %5099, label %5122, label %5113

5113:                                             ; preds = %5112
  %5114 = shl i64 %5105, 32
  %5115 = add i64 %5114, -4294967296
  %5116 = ashr exact i64 %5115, 32
  %5117 = getelementptr inbounds i32, ptr %7, i64 %5116
  %5118 = load i32, ptr %5117, align 4, !tbaa !5
  %5119 = getelementptr inbounds i32, ptr %6, i64 %5105
  %5120 = load i32, ptr %5119, align 4, !tbaa !5
  %5121 = add nsw i32 %5120, %5118
  store i32 %5121, ptr %5119, align 4, !tbaa !5
  br label %5140

5122:                                             ; preds = %5095, %5112
  %5123 = phi i32 [ %5107, %5112 ], [ %5096, %5095 ]
  %5124 = phi ptr [ %5106, %5112 ], [ %4, %5095 ]
  %5125 = phi i64 [ %5105, %5112 ], [ 0, %5095 ]
  %5126 = add nsw i32 %5123, 1
  store i32 %5126, ptr %5124, align 4, !tbaa !5
  %5127 = getelementptr inbounds i32, ptr %7, i64 %5125
  %5128 = load i32, ptr %5127, align 4, !tbaa !5
  %5129 = getelementptr inbounds i32, ptr %6, i64 %5125
  br label %5140

5130:                                             ; preds = %5104
  %5131 = icmp eq i32 %5107, %5110
  br i1 %5131, label %5132, label %5138

5132:                                             ; preds = %5130
  store i32 0, ptr %5106, align 4, !tbaa !5
  %5133 = getelementptr inbounds i32, ptr %8, i64 %5105
  %5134 = load i32, ptr %5133, align 4, !tbaa !5
  %5135 = getelementptr inbounds i32, ptr %6, i64 %5105
  store i32 %5134, ptr %5135, align 4, !tbaa !5
  %5136 = add nuw nsw i64 %5105, 1
  %5137 = icmp eq i64 %5136, %4863
  br i1 %5137, label %5145, label %5104, !llvm.loop !932

5138:                                             ; preds = %5100, %5130
  %5139 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

5140:                                             ; preds = %5113, %5122
  %5141 = phi ptr [ %5129, %5122 ], [ %5106, %5113 ]
  %5142 = phi i32 [ %5128, %5122 ], [ 1, %5113 ]
  %5143 = load i32, ptr %5141, align 4, !tbaa !5
  %5144 = add nsw i32 %5143, %5142
  store i32 %5144, ptr %5141, align 4, !tbaa !5
  br label %5145

5145:                                             ; preds = %5132, %5140, %5102, %5088
  %5146 = icmp eq i32 %5094, %5
  br i1 %5146, label %5447, label %5010, !llvm.loop !933

5147:                                             ; preds = %4851
  %5148 = getelementptr inbounds i32, ptr %3, i64 %19
  %5149 = load i32, ptr %5148, align 4, !tbaa !5
  %5150 = icmp eq i32 %5149, 0
  %5151 = icmp sgt i32 %5, 0
  br i1 %5150, label %5161, label %5152

5152:                                             ; preds = %5147
  br i1 %5151, label %5153, label %5447

5153:                                             ; preds = %5152
  %5154 = icmp sgt i32 %13, 1
  %5155 = icmp sgt i32 %13, 0
  %5156 = add i32 %13, -2
  %5157 = zext i32 %5156 to i64
  %5158 = zext i32 %13 to i64
  %5159 = add nuw i32 %5, 1
  %5160 = icmp eq i32 %13, 1
  br label %5302

5161:                                             ; preds = %5147
  br i1 %5151, label %5162, label %5447

5162:                                             ; preds = %5161
  %5163 = icmp sgt i32 %13, 1
  %5164 = icmp sgt i32 %13, 0
  %5165 = add i32 %13, -2
  %5166 = zext i32 %5165 to i64
  %5167 = zext i32 %13 to i64
  %5168 = add nuw i32 %5, 1
  %5169 = icmp eq i32 %13, 1
  br label %5170

5170:                                             ; preds = %5162, %5300
  %5171 = phi double [ 0.000000e+00, %5162 ], [ %5250, %5300 ]
  %5172 = phi i32 [ 0, %5162 ], [ %5252, %5300 ]
  %5173 = phi double [ 0.000000e+00, %5162 ], [ %5251, %5300 ]
  %5174 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5163, label %5175, label %5244

5175:                                             ; preds = %5170, %5234
  %5176 = phi i32 [ %5243, %5234 ], [ 0, %5170 ]
  %5177 = phi i64 [ %5185, %5234 ], [ %5167, %5170 ]
  %5178 = phi i64 [ %5242, %5234 ], [ %5166, %5170 ]
  %5179 = phi i32 [ %5240, %5234 ], [ %5174, %5170 ]
  %5180 = sub i32 %5165, %5176
  %5181 = tail call i32 @llvm.smin.i32(i32 %5180, i32 0)
  %5182 = sub i32 %5180, %5181
  %5183 = zext i32 %5182 to i64
  %5184 = add nuw nsw i64 %5183, 1
  %5185 = add nsw i64 %5177, -1
  %5186 = icmp ult i32 %5182, 31
  br i1 %5186, label %5222, label %5187

5187:                                             ; preds = %5175
  %5188 = and i64 %5184, 8589934560
  %5189 = sub i64 %5178, %5188
  br label %5190

5190:                                             ; preds = %5190, %5187
  %5191 = phi i64 [ 0, %5187 ], [ %5214, %5190 ]
  %5192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5187 ], [ %5210, %5190 ]
  %5193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5187 ], [ %5211, %5190 ]
  %5194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5187 ], [ %5212, %5190 ]
  %5195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5187 ], [ %5213, %5190 ]
  %5196 = sub i64 %5178, %5191
  %5197 = getelementptr inbounds i32, ptr %9, i64 %5196
  %5198 = getelementptr inbounds i32, ptr %5197, i64 -7
  %5199 = load <8 x i32>, ptr %5198, align 4, !tbaa !5
  %5200 = shufflevector <8 x i32> %5199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5201 = getelementptr inbounds i32, ptr %5197, i64 -15
  %5202 = load <8 x i32>, ptr %5201, align 4, !tbaa !5
  %5203 = shufflevector <8 x i32> %5202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5204 = getelementptr inbounds i32, ptr %5197, i64 -23
  %5205 = load <8 x i32>, ptr %5204, align 4, !tbaa !5
  %5206 = shufflevector <8 x i32> %5205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5207 = getelementptr inbounds i32, ptr %5197, i64 -31
  %5208 = load <8 x i32>, ptr %5207, align 4, !tbaa !5
  %5209 = shufflevector <8 x i32> %5208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5210 = mul <8 x i32> %5200, %5192
  %5211 = mul <8 x i32> %5203, %5193
  %5212 = mul <8 x i32> %5206, %5194
  %5213 = mul <8 x i32> %5209, %5195
  %5214 = add nuw i64 %5191, 32
  %5215 = icmp eq i64 %5214, %5188
  br i1 %5215, label %5216, label %5190, !llvm.loop !934

5216:                                             ; preds = %5190
  %5217 = mul <8 x i32> %5211, %5210
  %5218 = mul <8 x i32> %5212, %5217
  %5219 = mul <8 x i32> %5213, %5218
  %5220 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5219)
  %5221 = icmp eq i64 %5184, %5188
  br i1 %5221, label %5234, label %5222

5222:                                             ; preds = %5175, %5216
  %5223 = phi i64 [ %5178, %5175 ], [ %5189, %5216 ]
  %5224 = phi i32 [ 1, %5175 ], [ %5220, %5216 ]
  br label %5225

5225:                                             ; preds = %5222, %5225
  %5226 = phi i64 [ %5231, %5225 ], [ %5223, %5222 ]
  %5227 = phi i32 [ %5230, %5225 ], [ %5224, %5222 ]
  %5228 = getelementptr inbounds i32, ptr %9, i64 %5226
  %5229 = load i32, ptr %5228, align 4, !tbaa !5
  %5230 = mul nsw i32 %5229, %5227
  %5231 = add nsw i64 %5226, -1
  %5232 = trunc i64 %5226 to i32
  %5233 = icmp sgt i32 %5232, 0
  br i1 %5233, label %5225, label %5234, !llvm.loop !935

5234:                                             ; preds = %5225, %5216
  %5235 = phi i32 [ %5220, %5216 ], [ %5230, %5225 ]
  %5236 = and i64 %5185, 4294967295
  %5237 = getelementptr inbounds i32, ptr %6, i64 %5236
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = mul nsw i32 %5238, %5235
  %5240 = add nsw i32 %5239, %5179
  %5241 = icmp sgt i64 %5177, 2
  %5242 = add nsw i64 %5178, -1
  %5243 = add i32 %5176, 1
  br i1 %5241, label %5175, label %5244, !llvm.loop !936

5244:                                             ; preds = %5234, %5170
  %5245 = phi i32 [ %5174, %5170 ], [ %5240, %5234 ]
  %5246 = sext i32 %5245 to i64
  %5247 = getelementptr inbounds i64, ptr %4844, i64 %5246
  %5248 = load i64, ptr %5247, align 8, !tbaa !120
  %5249 = sitofp i64 %5248 to double
  %5250 = fadd fast double %5171, %5249
  %5251 = fadd fast double %5173, 1.000000e+00
  %5252 = add nuw nsw i32 %5172, 1
  br i1 %5164, label %5253, label %5300

5253:                                             ; preds = %5244
  %5254 = load i32, ptr %4, align 4, !tbaa !5
  %5255 = load i32, ptr %12, align 4, !tbaa !5
  %5256 = add nsw i32 %5255, -1
  %5257 = icmp slt i32 %5254, %5256
  br i1 %5257, label %5277, label %5258

5258:                                             ; preds = %5253
  %5259 = icmp eq i32 %5254, %5256
  br i1 %5259, label %5260, label %5293

5260:                                             ; preds = %5258
  store i32 0, ptr %4, align 4, !tbaa !5
  %5261 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5261, ptr %6, align 4, !tbaa !5
  br i1 %5169, label %5300, label %5262

5262:                                             ; preds = %5260, %5287
  %5263 = phi i64 [ %5291, %5287 ], [ 1, %5260 ]
  %5264 = getelementptr inbounds i32, ptr %4, i64 %5263
  %5265 = load i32, ptr %5264, align 4, !tbaa !5
  %5266 = getelementptr inbounds i32, ptr %12, i64 %5263
  %5267 = load i32, ptr %5266, align 4, !tbaa !5
  %5268 = add nsw i32 %5267, -1
  %5269 = icmp slt i32 %5265, %5268
  br i1 %5269, label %5270, label %5285

5270:                                             ; preds = %5262
  br i1 %5257, label %5277, label %5271

5271:                                             ; preds = %5270
  %5272 = getelementptr inbounds i32, ptr %7, i64 %5263
  %5273 = load i32, ptr %5272, align 4, !tbaa !5
  %5274 = getelementptr inbounds i32, ptr %6, i64 %5263
  %5275 = load i32, ptr %5274, align 4, !tbaa !5
  %5276 = add nsw i32 %5275, %5273
  store i32 %5276, ptr %5274, align 4, !tbaa !5
  br label %5295

5277:                                             ; preds = %5253, %5270
  %5278 = phi i32 [ %5265, %5270 ], [ %5254, %5253 ]
  %5279 = phi ptr [ %5264, %5270 ], [ %4, %5253 ]
  %5280 = phi i64 [ %5263, %5270 ], [ 0, %5253 ]
  %5281 = add nsw i32 %5278, 1
  store i32 %5281, ptr %5279, align 4, !tbaa !5
  %5282 = getelementptr inbounds i32, ptr %7, i64 %5280
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = getelementptr inbounds i32, ptr %6, i64 %5280
  br label %5295

5285:                                             ; preds = %5262
  %5286 = icmp eq i32 %5265, %5268
  br i1 %5286, label %5287, label %5293

5287:                                             ; preds = %5285
  store i32 0, ptr %5264, align 4, !tbaa !5
  %5288 = getelementptr inbounds i32, ptr %8, i64 %5263
  %5289 = load i32, ptr %5288, align 4, !tbaa !5
  %5290 = getelementptr inbounds i32, ptr %6, i64 %5263
  store i32 %5289, ptr %5290, align 4, !tbaa !5
  %5291 = add nuw nsw i64 %5263, 1
  %5292 = icmp eq i64 %5291, %5167
  br i1 %5292, label %5300, label %5262, !llvm.loop !937

5293:                                             ; preds = %5258, %5285
  store double %5250, ptr %4846, align 8, !tbaa !18
  %5294 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

5295:                                             ; preds = %5271, %5277
  %5296 = phi ptr [ %5284, %5277 ], [ %5264, %5271 ]
  %5297 = phi i32 [ %5283, %5277 ], [ 1, %5271 ]
  %5298 = load i32, ptr %5296, align 4, !tbaa !5
  %5299 = add nsw i32 %5298, %5297
  store i32 %5299, ptr %5296, align 4, !tbaa !5
  br label %5300

5300:                                             ; preds = %5287, %5295, %5260, %5244
  %5301 = icmp eq i32 %5252, %5
  br i1 %5301, label %5446, label %5170, !llvm.loop !938

5302:                                             ; preds = %5153, %5437
  %5303 = phi double [ 0.000000e+00, %5153 ], [ %5385, %5437 ]
  %5304 = phi i32 [ 0, %5153 ], [ %5386, %5437 ]
  %5305 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5154, label %5306, label %5375

5306:                                             ; preds = %5302, %5365
  %5307 = phi i32 [ %5374, %5365 ], [ 0, %5302 ]
  %5308 = phi i64 [ %5316, %5365 ], [ %5158, %5302 ]
  %5309 = phi i64 [ %5373, %5365 ], [ %5157, %5302 ]
  %5310 = phi i32 [ %5371, %5365 ], [ %5305, %5302 ]
  %5311 = sub i32 %5156, %5307
  %5312 = tail call i32 @llvm.smin.i32(i32 %5311, i32 0)
  %5313 = sub i32 %5311, %5312
  %5314 = zext i32 %5313 to i64
  %5315 = add nuw nsw i64 %5314, 1
  %5316 = add nsw i64 %5308, -1
  %5317 = icmp ult i32 %5313, 31
  br i1 %5317, label %5353, label %5318

5318:                                             ; preds = %5306
  %5319 = and i64 %5315, 8589934560
  %5320 = sub i64 %5309, %5319
  br label %5321

5321:                                             ; preds = %5321, %5318
  %5322 = phi i64 [ 0, %5318 ], [ %5345, %5321 ]
  %5323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5318 ], [ %5341, %5321 ]
  %5324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5318 ], [ %5342, %5321 ]
  %5325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5318 ], [ %5343, %5321 ]
  %5326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5318 ], [ %5344, %5321 ]
  %5327 = sub i64 %5309, %5322
  %5328 = getelementptr inbounds i32, ptr %11, i64 %5327
  %5329 = getelementptr inbounds i32, ptr %5328, i64 -7
  %5330 = load <8 x i32>, ptr %5329, align 4, !tbaa !5
  %5331 = shufflevector <8 x i32> %5330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5332 = getelementptr inbounds i32, ptr %5328, i64 -15
  %5333 = load <8 x i32>, ptr %5332, align 4, !tbaa !5
  %5334 = shufflevector <8 x i32> %5333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5335 = getelementptr inbounds i32, ptr %5328, i64 -23
  %5336 = load <8 x i32>, ptr %5335, align 4, !tbaa !5
  %5337 = shufflevector <8 x i32> %5336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5338 = getelementptr inbounds i32, ptr %5328, i64 -31
  %5339 = load <8 x i32>, ptr %5338, align 4, !tbaa !5
  %5340 = shufflevector <8 x i32> %5339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5341 = mul <8 x i32> %5331, %5323
  %5342 = mul <8 x i32> %5334, %5324
  %5343 = mul <8 x i32> %5337, %5325
  %5344 = mul <8 x i32> %5340, %5326
  %5345 = add nuw i64 %5322, 32
  %5346 = icmp eq i64 %5345, %5319
  br i1 %5346, label %5347, label %5321, !llvm.loop !939

5347:                                             ; preds = %5321
  %5348 = mul <8 x i32> %5342, %5341
  %5349 = mul <8 x i32> %5343, %5348
  %5350 = mul <8 x i32> %5344, %5349
  %5351 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5350)
  %5352 = icmp eq i64 %5315, %5319
  br i1 %5352, label %5365, label %5353

5353:                                             ; preds = %5306, %5347
  %5354 = phi i64 [ %5309, %5306 ], [ %5320, %5347 ]
  %5355 = phi i32 [ 1, %5306 ], [ %5351, %5347 ]
  br label %5356

5356:                                             ; preds = %5353, %5356
  %5357 = phi i64 [ %5362, %5356 ], [ %5354, %5353 ]
  %5358 = phi i32 [ %5361, %5356 ], [ %5355, %5353 ]
  %5359 = getelementptr inbounds i32, ptr %11, i64 %5357
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = mul nsw i32 %5360, %5358
  %5362 = add nsw i64 %5357, -1
  %5363 = trunc i64 %5357 to i32
  %5364 = icmp sgt i32 %5363, 0
  br i1 %5364, label %5356, label %5365, !llvm.loop !940

5365:                                             ; preds = %5356, %5347
  %5366 = phi i32 [ %5351, %5347 ], [ %5361, %5356 ]
  %5367 = and i64 %5316, 4294967295
  %5368 = getelementptr inbounds i32, ptr %6, i64 %5367
  %5369 = load i32, ptr %5368, align 4, !tbaa !5
  %5370 = mul nsw i32 %5369, %5366
  %5371 = add nsw i32 %5370, %5310
  %5372 = icmp sgt i64 %5308, 2
  %5373 = add nsw i64 %5309, -1
  %5374 = add i32 %5307, 1
  br i1 %5372, label %5306, label %5375, !llvm.loop !941

5375:                                             ; preds = %5365, %5302
  %5376 = phi i32 [ %5305, %5302 ], [ %5371, %5365 ]
  %5377 = icmp slt i32 %5376, %5
  br i1 %5377, label %5380, label %5378

5378:                                             ; preds = %5375
  %5379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5452

5380:                                             ; preds = %5375
  %5381 = sext i32 %5376 to i64
  %5382 = getelementptr inbounds i64, ptr %4844, i64 %5381
  %5383 = load i64, ptr %5382, align 8, !tbaa !120
  %5384 = sitofp i64 %5383 to double
  %5385 = fadd fast double %5303, %5384
  store double %5385, ptr %4846, align 8, !tbaa !18
  %5386 = add nuw nsw i32 %5304, 1
  br i1 %5155, label %5387, label %5437

5387:                                             ; preds = %5380
  %5388 = load i32, ptr %4, align 4, !tbaa !5
  %5389 = load i32, ptr %12, align 4, !tbaa !5
  %5390 = add nsw i32 %5389, -1
  %5391 = icmp slt i32 %5388, %5390
  br i1 %5391, label %5414, label %5392

5392:                                             ; preds = %5387
  %5393 = icmp eq i32 %5388, %5390
  br i1 %5393, label %5394, label %5430

5394:                                             ; preds = %5392
  store i32 0, ptr %4, align 4, !tbaa !5
  %5395 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5395, ptr %6, align 4, !tbaa !5
  br i1 %5160, label %5437, label %5396

5396:                                             ; preds = %5394, %5424
  %5397 = phi i64 [ %5428, %5424 ], [ 1, %5394 ]
  %5398 = getelementptr inbounds i32, ptr %4, i64 %5397
  %5399 = load i32, ptr %5398, align 4, !tbaa !5
  %5400 = getelementptr inbounds i32, ptr %12, i64 %5397
  %5401 = load i32, ptr %5400, align 4, !tbaa !5
  %5402 = add nsw i32 %5401, -1
  %5403 = icmp slt i32 %5399, %5402
  br i1 %5403, label %5404, label %5422

5404:                                             ; preds = %5396
  br i1 %5391, label %5414, label %5405

5405:                                             ; preds = %5404
  %5406 = shl i64 %5397, 32
  %5407 = add i64 %5406, -4294967296
  %5408 = ashr exact i64 %5407, 32
  %5409 = getelementptr inbounds i32, ptr %7, i64 %5408
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = getelementptr inbounds i32, ptr %6, i64 %5397
  %5412 = load i32, ptr %5411, align 4, !tbaa !5
  %5413 = add nsw i32 %5412, %5410
  store i32 %5413, ptr %5411, align 4, !tbaa !5
  br label %5432

5414:                                             ; preds = %5387, %5404
  %5415 = phi i32 [ %5399, %5404 ], [ %5388, %5387 ]
  %5416 = phi ptr [ %5398, %5404 ], [ %4, %5387 ]
  %5417 = phi i64 [ %5397, %5404 ], [ 0, %5387 ]
  %5418 = add nsw i32 %5415, 1
  store i32 %5418, ptr %5416, align 4, !tbaa !5
  %5419 = getelementptr inbounds i32, ptr %7, i64 %5417
  %5420 = load i32, ptr %5419, align 4, !tbaa !5
  %5421 = getelementptr inbounds i32, ptr %6, i64 %5417
  br label %5432

5422:                                             ; preds = %5396
  %5423 = icmp eq i32 %5399, %5402
  br i1 %5423, label %5424, label %5430

5424:                                             ; preds = %5422
  store i32 0, ptr %5398, align 4, !tbaa !5
  %5425 = getelementptr inbounds i32, ptr %8, i64 %5397
  %5426 = load i32, ptr %5425, align 4, !tbaa !5
  %5427 = getelementptr inbounds i32, ptr %6, i64 %5397
  store i32 %5426, ptr %5427, align 4, !tbaa !5
  %5428 = add nuw nsw i64 %5397, 1
  %5429 = icmp eq i64 %5428, %5158
  br i1 %5429, label %5437, label %5396, !llvm.loop !942

5430:                                             ; preds = %5392, %5422
  %5431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5452

5432:                                             ; preds = %5405, %5414
  %5433 = phi ptr [ %5421, %5414 ], [ %5398, %5405 ]
  %5434 = phi i32 [ %5420, %5414 ], [ 1, %5405 ]
  %5435 = load i32, ptr %5433, align 4, !tbaa !5
  %5436 = add nsw i32 %5435, %5434
  store i32 %5436, ptr %5433, align 4, !tbaa !5
  br label %5437

5437:                                             ; preds = %5424, %5432, %5394, %5380
  %5438 = icmp eq i32 %5386, %5
  br i1 %5438, label %5447, label %5302, !llvm.loop !943

5439:                                             ; preds = %4851
  %5440 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5447

5441:                                             ; preds = %2002
  store i16 %1952, ptr %1835, align 2, !tbaa !78
  br label %5447

5442:                                             ; preds = %2298
  store i16 %2248, ptr %1835, align 2, !tbaa !78
  br label %5447

5443:                                             ; preds = %4099
  store double %4049, ptr %3645, align 8, !tbaa !18
  br label %5447

5444:                                             ; preds = %4409
  store float %4359, ptr %4244, align 4, !tbaa !162
  br label %5447

5445:                                             ; preds = %4701
  store float %4651, ptr %4244, align 4, !tbaa !162
  br label %5447

5446:                                             ; preds = %5300
  store double %5250, ptr %4846, align 8, !tbaa !18
  br label %5447

5447:                                             ; preds = %5437, %5145, %5008, %4838, %4546, %4236, %3944, %3807, %3637, %3501, %3347, %3208, %3037, %2900, %2745, %2608, %2435, %2143, %1827, %1690, %1535, %1398, %1223, %1086, %931, %794, %621, %484, %329, %192, %5152, %5161, %5446, %4857, %4866, %4553, %4562, %5445, %4255, %4264, %5444, %3951, %3960, %5443, %3656, %3665, %3354, %3363, %3055, %3064, %2752, %2761, %2454, %2463, %2150, %2159, %5442, %1846, %1855, %5441, %1542, %1551, %1242, %1251, %938, %947, %640, %649, %336, %345, %37, %46, %4848, %5439, %4246, %4840, %3647, %4238, %3047, %3639, %2445, %3039, %1837, %2437, %1233, %1829, %631, %1225, %28, %623, %18
  %5448 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %623 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1225 ], [ 0.000000e+00, %631 ], [ 0.000000e+00, %1829 ], [ 0.000000e+00, %1233 ], [ 0.000000e+00, %2437 ], [ 0.000000e+00, %1837 ], [ 0.000000e+00, %3039 ], [ 0.000000e+00, %2445 ], [ 0.000000e+00, %3639 ], [ 0.000000e+00, %3047 ], [ 0.000000e+00, %4238 ], [ 0.000000e+00, %3647 ], [ 0.000000e+00, %4840 ], [ 0.000000e+00, %4246 ], [ 0.000000e+00, %5439 ], [ 0.000000e+00, %4848 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %345 ], [ 0.000000e+00, %336 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %947 ], [ 0.000000e+00, %938 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %1242 ], [ 0.000000e+00, %1551 ], [ 0.000000e+00, %1542 ], [ %1953, %5441 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %1846 ], [ %2249, %5442 ], [ 0.000000e+00, %2159 ], [ 0.000000e+00, %2150 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %2454 ], [ 0.000000e+00, %2761 ], [ 0.000000e+00, %2752 ], [ 0.000000e+00, %3064 ], [ 0.000000e+00, %3055 ], [ 0.000000e+00, %3363 ], [ 0.000000e+00, %3354 ], [ 0.000000e+00, %3665 ], [ 0.000000e+00, %3656 ], [ %4050, %5443 ], [ 0.000000e+00, %3960 ], [ 0.000000e+00, %3951 ], [ %4360, %5444 ], [ 0.000000e+00, %4264 ], [ 0.000000e+00, %4255 ], [ %4652, %5445 ], [ 0.000000e+00, %4562 ], [ 0.000000e+00, %4553 ], [ 0.000000e+00, %4866 ], [ 0.000000e+00, %4857 ], [ %5251, %5446 ], [ 0.000000e+00, %5161 ], [ 0.000000e+00, %5152 ], [ %143, %192 ], [ 0.000000e+00, %329 ], [ %435, %484 ], [ 0.000000e+00, %621 ], [ %745, %794 ], [ 0.000000e+00, %931 ], [ %1037, %1086 ], [ 0.000000e+00, %1223 ], [ %1349, %1398 ], [ 0.000000e+00, %1535 ], [ %1641, %1690 ], [ 0.000000e+00, %1827 ], [ 0.000000e+00, %2143 ], [ 0.000000e+00, %2435 ], [ %2559, %2608 ], [ 0.000000e+00, %2745 ], [ %2851, %2900 ], [ 0.000000e+00, %3037 ], [ %3159, %3208 ], [ 0.000000e+00, %3347 ], [ %3452, %3501 ], [ 0.000000e+00, %3637 ], [ %3758, %3807 ], [ 0.000000e+00, %3944 ], [ 0.000000e+00, %4236 ], [ 0.000000e+00, %4546 ], [ 0.000000e+00, %4838 ], [ %4959, %5008 ], [ 0.000000e+00, %5145 ], [ 0.000000e+00, %5437 ]
  %5449 = phi i32 [ %10, %18 ], [ 1, %623 ], [ 1, %28 ], [ 1, %1225 ], [ 1, %631 ], [ 1, %1829 ], [ 1, %1233 ], [ 1, %2437 ], [ 1, %1837 ], [ 1, %3039 ], [ 1, %2445 ], [ 1, %3639 ], [ 1, %3047 ], [ 1, %4238 ], [ 1, %3647 ], [ 1, %4840 ], [ 1, %4246 ], [ 1, %5439 ], [ 1, %4848 ], [ 1, %46 ], [ 1, %37 ], [ 1, %345 ], [ 1, %336 ], [ 1, %649 ], [ 1, %640 ], [ 1, %947 ], [ 1, %938 ], [ 1, %1251 ], [ 1, %1242 ], [ 1, %1551 ], [ 1, %1542 ], [ %1862, %5441 ], [ 1, %1855 ], [ 1, %1846 ], [ %2166, %5442 ], [ 1, %2159 ], [ 1, %2150 ], [ 1, %2463 ], [ 1, %2454 ], [ 1, %2761 ], [ 1, %2752 ], [ 1, %3064 ], [ 1, %3055 ], [ 1, %3363 ], [ 1, %3354 ], [ 1, %3665 ], [ 1, %3656 ], [ %3967, %5443 ], [ 1, %3960 ], [ 1, %3951 ], [ %4271, %5444 ], [ 1, %4264 ], [ 1, %4255 ], [ %4569, %5445 ], [ 1, %4562 ], [ 1, %4553 ], [ 1, %4866 ], [ 1, %4857 ], [ %5168, %5446 ], [ 1, %5161 ], [ 1, %5152 ], [ %53, %192 ], [ %44, %329 ], [ %352, %484 ], [ %343, %621 ], [ %656, %794 ], [ %647, %931 ], [ %954, %1086 ], [ %945, %1223 ], [ %1258, %1398 ], [ %1249, %1535 ], [ %1558, %1690 ], [ %1549, %1827 ], [ %1853, %2143 ], [ %2157, %2435 ], [ %2470, %2608 ], [ %2461, %2745 ], [ %2768, %2900 ], [ %2759, %3037 ], [ %3071, %3208 ], [ %3062, %3347 ], [ %3370, %3501 ], [ %3361, %3637 ], [ %3672, %3807 ], [ %3663, %3944 ], [ %3958, %4236 ], [ %4262, %4546 ], [ %4560, %4838 ], [ %4873, %5008 ], [ %4864, %5145 ], [ %5159, %5437 ]
  %5450 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5449, ptr noundef nonnull @.str.5) #3
  %5451 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5448, ptr noundef nonnull @.str.6) #3
  br label %5452

5452:                                             ; preds = %5001, %5086, %5138, %5293, %5378, %5430, %4402, %4487, %4539, %4694, %4779, %4831, %3800, %3885, %3937, %4092, %4177, %4229, %3201, %3286, %3340, %3494, %3579, %3630, %2601, %2685, %2738, %2893, %2977, %3030, %1995, %2080, %2136, %2291, %2376, %2428, %1391, %1475, %1528, %1683, %1767, %1820, %787, %871, %924, %1079, %1163, %1216, %185, %269, %322, %477, %561, %614, %5447
  %5453 = phi i32 [ 0, %5447 ], [ -1, %614 ], [ -1, %561 ], [ -1, %477 ], [ -1, %322 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1216 ], [ -1, %1163 ], [ -1, %1079 ], [ -1, %924 ], [ -1, %871 ], [ -1, %787 ], [ -1, %1820 ], [ -1, %1767 ], [ -1, %1683 ], [ -1, %1528 ], [ -1, %1475 ], [ -1, %1391 ], [ -1, %2428 ], [ -1, %2376 ], [ -1, %2291 ], [ -1, %2136 ], [ -1, %2080 ], [ -1, %1995 ], [ -1, %3030 ], [ -1, %2977 ], [ -1, %2893 ], [ -1, %2738 ], [ -1, %2685 ], [ -1, %2601 ], [ -1, %3630 ], [ -1, %3579 ], [ -1, %3494 ], [ -1, %3340 ], [ -1, %3286 ], [ -1, %3201 ], [ -1, %4229 ], [ -1, %4177 ], [ -1, %4092 ], [ -1, %3937 ], [ -1, %3885 ], [ -1, %3800 ], [ -1, %4831 ], [ -1, %4779 ], [ -1, %4694 ], [ -1, %4539 ], [ -1, %4487 ], [ -1, %4402 ], [ -1, %5430 ], [ -1, %5378 ], [ -1, %5293 ], [ -1, %5138 ], [ -1, %5086 ], [ -1, %5001 ]
  ret i32 %5453
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5437 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1226
    i32 104, label %1828
    i32 105, label %2434
    i32 106, label %3036
    i32 107, label %3641
    i32 108, label %4235
    i32 109, label %4837
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5437

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5437

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5437

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !944

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !945

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !946

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %137
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !947

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5437, label %55, !llvm.loop !948

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !949

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !950

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !951

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds double, ptr %24, i64 %271
  %273 = load double, ptr %272, align 8, !tbaa !18
  %274 = fptoui double %273 to i8
  %275 = load i8, ptr %26, align 1, !tbaa !11
  %276 = add i8 %275, %274
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !952

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5437, label %193, !llvm.loop !953

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5437

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5437

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !954

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !955

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !956

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds double, ptr %24, i64 %428
  %430 = load double, ptr %429, align 8, !tbaa !18
  %431 = fptoui double %430 to i8
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = add i8 %432, %431
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !957

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5437, label %353, !llvm.loop !958

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !959

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !960

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !961

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds double, ptr %24, i64 %563
  %565 = load double, ptr %564, align 8, !tbaa !18
  %566 = fptoui double %565 to i8
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = add i8 %567, %566
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !962

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5437, label %485, !llvm.loop !963

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %624
  %631 = load double, ptr %626, align 8, !tbaa !18
  %632 = fptosi double %631 to i32
  store i32 %632, ptr %628, align 4, !tbaa !5
  br label %5437

633:                                              ; preds = %624
  switch i32 %1, label %1224 [
    i32 1, label %634
    i32 0, label %932
  ]

634:                                              ; preds = %633
  %635 = getelementptr inbounds i32, ptr %3, i64 %19
  %636 = load i32, ptr %635, align 4, !tbaa !5
  %637 = icmp eq i32 %636, 0
  %638 = icmp sgt i32 %5, 0
  br i1 %637, label %648, label %639

639:                                              ; preds = %634
  br i1 %638, label %640, label %5437

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %795

648:                                              ; preds = %634
  br i1 %638, label %649, label %5437

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %657

657:                                              ; preds = %649, %793
  %658 = phi i32 [ 0, %649 ], [ %745, %793 ]
  %659 = phi double [ 0.000000e+00, %649 ], [ %744, %793 ]
  %660 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %650, label %661, label %730

661:                                              ; preds = %657, %720
  %662 = phi i32 [ %729, %720 ], [ 0, %657 ]
  %663 = phi i64 [ %671, %720 ], [ %654, %657 ]
  %664 = phi i64 [ %728, %720 ], [ %653, %657 ]
  %665 = phi i32 [ %726, %720 ], [ %660, %657 ]
  %666 = sub i32 %652, %662
  %667 = tail call i32 @llvm.smin.i32(i32 %666, i32 0)
  %668 = sub i32 %666, %667
  %669 = zext i32 %668 to i64
  %670 = add nuw nsw i64 %669, 1
  %671 = add nsw i64 %663, -1
  %672 = icmp ult i32 %668, 31
  br i1 %672, label %708, label %673

673:                                              ; preds = %661
  %674 = and i64 %670, 8589934560
  %675 = sub i64 %664, %674
  br label %676

676:                                              ; preds = %676, %673
  %677 = phi i64 [ 0, %673 ], [ %700, %676 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %696, %676 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %697, %676 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %698, %676 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %699, %676 ]
  %682 = sub i64 %664, %677
  %683 = getelementptr inbounds i32, ptr %9, i64 %682
  %684 = getelementptr inbounds i32, ptr %683, i64 -7
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %683, i64 -15
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %683, i64 -23
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %683, i64 -31
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = mul <8 x i32> %686, %678
  %697 = mul <8 x i32> %689, %679
  %698 = mul <8 x i32> %692, %680
  %699 = mul <8 x i32> %695, %681
  %700 = add nuw i64 %677, 32
  %701 = icmp eq i64 %700, %674
  br i1 %701, label %702, label %676, !llvm.loop !964

702:                                              ; preds = %676
  %703 = mul <8 x i32> %697, %696
  %704 = mul <8 x i32> %698, %703
  %705 = mul <8 x i32> %699, %704
  %706 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %705)
  %707 = icmp eq i64 %670, %674
  br i1 %707, label %720, label %708

708:                                              ; preds = %661, %702
  %709 = phi i64 [ %664, %661 ], [ %675, %702 ]
  %710 = phi i32 [ 1, %661 ], [ %706, %702 ]
  br label %711

711:                                              ; preds = %708, %711
  %712 = phi i64 [ %717, %711 ], [ %709, %708 ]
  %713 = phi i32 [ %716, %711 ], [ %710, %708 ]
  %714 = getelementptr inbounds i32, ptr %9, i64 %712
  %715 = load i32, ptr %714, align 4, !tbaa !5
  %716 = mul nsw i32 %715, %713
  %717 = add nsw i64 %712, -1
  %718 = trunc i64 %712 to i32
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %711, label %720, !llvm.loop !965

720:                                              ; preds = %711, %702
  %721 = phi i32 [ %706, %702 ], [ %716, %711 ]
  %722 = and i64 %671, 4294967295
  %723 = getelementptr inbounds i32, ptr %6, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !5
  %725 = mul nsw i32 %724, %721
  %726 = add nsw i32 %725, %665
  %727 = icmp sgt i64 %663, 2
  %728 = add nsw i64 %664, -1
  %729 = add i32 %662, 1
  br i1 %727, label %661, label %730, !llvm.loop !966

730:                                              ; preds = %720, %657
  %731 = phi i32 [ %660, %657 ], [ %726, %720 ]
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds double, ptr %2, i64 %732
  %734 = load double, ptr %733, align 8, !tbaa !18
  %735 = getelementptr inbounds double, ptr %626, i64 %732
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = fptosi double %736 to i32
  %738 = load i32, ptr %628, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i32 %737 to double
  %741 = fmul fast double %734, %740
  %742 = fadd fast double %741, %739
  %743 = fptosi double %742 to i32
  store i32 %743, ptr %628, align 4, !tbaa !5
  %744 = fadd fast double %734, %659
  %745 = add nuw nsw i32 %658, 1
  br i1 %651, label %746, label %793

746:                                              ; preds = %730
  %747 = load i32, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %12, align 4, !tbaa !5
  %749 = add nsw i32 %748, -1
  %750 = icmp slt i32 %747, %749
  br i1 %750, label %770, label %751

751:                                              ; preds = %746
  %752 = icmp eq i32 %747, %749
  br i1 %752, label %753, label %786

753:                                              ; preds = %751
  store i32 0, ptr %4, align 4, !tbaa !5
  %754 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %754, ptr %6, align 4, !tbaa !5
  br i1 %656, label %793, label %755

755:                                              ; preds = %753, %780
  %756 = phi i64 [ %784, %780 ], [ 1, %753 ]
  %757 = getelementptr inbounds i32, ptr %4, i64 %756
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = getelementptr inbounds i32, ptr %12, i64 %756
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = add nsw i32 %760, -1
  %762 = icmp slt i32 %758, %761
  br i1 %762, label %763, label %778

763:                                              ; preds = %755
  br i1 %750, label %770, label %764

764:                                              ; preds = %763
  %765 = getelementptr inbounds i32, ptr %7, i64 %756
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %6, i64 %756
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, %766
  store i32 %769, ptr %767, align 4, !tbaa !5
  br label %788

770:                                              ; preds = %746, %763
  %771 = phi i32 [ %758, %763 ], [ %747, %746 ]
  %772 = phi ptr [ %757, %763 ], [ %4, %746 ]
  %773 = phi i64 [ %756, %763 ], [ 0, %746 ]
  %774 = add nsw i32 %771, 1
  store i32 %774, ptr %772, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %7, i64 %773
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %773
  br label %788

778:                                              ; preds = %755
  %779 = icmp eq i32 %758, %761
  br i1 %779, label %780, label %786

780:                                              ; preds = %778
  store i32 0, ptr %757, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %8, i64 %756
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %756
  store i32 %782, ptr %783, align 4, !tbaa !5
  %784 = add nuw nsw i64 %756, 1
  %785 = icmp eq i64 %784, %654
  br i1 %785, label %793, label %755, !llvm.loop !967

786:                                              ; preds = %751, %778
  %787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

788:                                              ; preds = %764, %770
  %789 = phi ptr [ %777, %770 ], [ %757, %764 ]
  %790 = phi i32 [ %776, %770 ], [ 1, %764 ]
  %791 = load i32, ptr %789, align 4, !tbaa !5
  %792 = add nsw i32 %791, %790
  store i32 %792, ptr %789, align 4, !tbaa !5
  br label %793

793:                                              ; preds = %780, %788, %753, %730
  %794 = icmp eq i32 %745, %5
  br i1 %794, label %5437, label %657, !llvm.loop !968

795:                                              ; preds = %640, %930
  %796 = phi i32 [ 0, %640 ], [ %879, %930 ]
  %797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %798, label %867

798:                                              ; preds = %795, %857
  %799 = phi i32 [ %866, %857 ], [ 0, %795 ]
  %800 = phi i64 [ %808, %857 ], [ %645, %795 ]
  %801 = phi i64 [ %865, %857 ], [ %644, %795 ]
  %802 = phi i32 [ %863, %857 ], [ %797, %795 ]
  %803 = sub i32 %643, %799
  %804 = tail call i32 @llvm.smin.i32(i32 %803, i32 0)
  %805 = sub i32 %803, %804
  %806 = zext i32 %805 to i64
  %807 = add nuw nsw i64 %806, 1
  %808 = add nsw i64 %800, -1
  %809 = icmp ult i32 %805, 31
  br i1 %809, label %845, label %810

810:                                              ; preds = %798
  %811 = and i64 %807, 8589934560
  %812 = sub i64 %801, %811
  br label %813

813:                                              ; preds = %813, %810
  %814 = phi i64 [ 0, %810 ], [ %837, %813 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %833, %813 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %834, %813 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %835, %813 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %836, %813 ]
  %819 = sub i64 %801, %814
  %820 = getelementptr inbounds i32, ptr %11, i64 %819
  %821 = getelementptr inbounds i32, ptr %820, i64 -7
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %820, i64 -15
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %820, i64 -23
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %820, i64 -31
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = mul <8 x i32> %823, %815
  %834 = mul <8 x i32> %826, %816
  %835 = mul <8 x i32> %829, %817
  %836 = mul <8 x i32> %832, %818
  %837 = add nuw i64 %814, 32
  %838 = icmp eq i64 %837, %811
  br i1 %838, label %839, label %813, !llvm.loop !969

839:                                              ; preds = %813
  %840 = mul <8 x i32> %834, %833
  %841 = mul <8 x i32> %835, %840
  %842 = mul <8 x i32> %836, %841
  %843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %842)
  %844 = icmp eq i64 %807, %811
  br i1 %844, label %857, label %845

845:                                              ; preds = %798, %839
  %846 = phi i64 [ %801, %798 ], [ %812, %839 ]
  %847 = phi i32 [ 1, %798 ], [ %843, %839 ]
  br label %848

848:                                              ; preds = %845, %848
  %849 = phi i64 [ %854, %848 ], [ %846, %845 ]
  %850 = phi i32 [ %853, %848 ], [ %847, %845 ]
  %851 = getelementptr inbounds i32, ptr %11, i64 %849
  %852 = load i32, ptr %851, align 4, !tbaa !5
  %853 = mul nsw i32 %852, %850
  %854 = add nsw i64 %849, -1
  %855 = trunc i64 %849 to i32
  %856 = icmp sgt i32 %855, 0
  br i1 %856, label %848, label %857, !llvm.loop !970

857:                                              ; preds = %848, %839
  %858 = phi i32 [ %843, %839 ], [ %853, %848 ]
  %859 = and i64 %808, 4294967295
  %860 = getelementptr inbounds i32, ptr %6, i64 %859
  %861 = load i32, ptr %860, align 4, !tbaa !5
  %862 = mul nsw i32 %861, %858
  %863 = add nsw i32 %862, %802
  %864 = icmp sgt i64 %800, 2
  %865 = add nsw i64 %801, -1
  %866 = add i32 %799, 1
  br i1 %864, label %798, label %867, !llvm.loop !971

867:                                              ; preds = %857, %795
  %868 = phi i32 [ %797, %795 ], [ %863, %857 ]
  %869 = icmp slt i32 %868, %5
  br i1 %869, label %872, label %870

870:                                              ; preds = %867
  %871 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

872:                                              ; preds = %867
  %873 = sext i32 %868 to i64
  %874 = getelementptr inbounds double, ptr %626, i64 %873
  %875 = load double, ptr %874, align 8, !tbaa !18
  %876 = fptosi double %875 to i32
  %877 = load i32, ptr %628, align 4, !tbaa !5
  %878 = add i32 %877, %876
  store i32 %878, ptr %628, align 4, !tbaa !5
  %879 = add nuw nsw i32 %796, 1
  br i1 %642, label %880, label %930

880:                                              ; preds = %872
  %881 = load i32, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %12, align 4, !tbaa !5
  %883 = add nsw i32 %882, -1
  %884 = icmp slt i32 %881, %883
  br i1 %884, label %907, label %885

885:                                              ; preds = %880
  %886 = icmp eq i32 %881, %883
  br i1 %886, label %887, label %923

887:                                              ; preds = %885
  store i32 0, ptr %4, align 4, !tbaa !5
  %888 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %888, ptr %6, align 4, !tbaa !5
  br i1 %647, label %930, label %889

889:                                              ; preds = %887, %917
  %890 = phi i64 [ %921, %917 ], [ 1, %887 ]
  %891 = getelementptr inbounds i32, ptr %4, i64 %890
  %892 = load i32, ptr %891, align 4, !tbaa !5
  %893 = getelementptr inbounds i32, ptr %12, i64 %890
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = add nsw i32 %894, -1
  %896 = icmp slt i32 %892, %895
  br i1 %896, label %897, label %915

897:                                              ; preds = %889
  br i1 %884, label %907, label %898

898:                                              ; preds = %897
  %899 = shl i64 %890, 32
  %900 = add i64 %899, -4294967296
  %901 = ashr exact i64 %900, 32
  %902 = getelementptr inbounds i32, ptr %7, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %6, i64 %890
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, %903
  store i32 %906, ptr %904, align 4, !tbaa !5
  br label %925

907:                                              ; preds = %880, %897
  %908 = phi i32 [ %892, %897 ], [ %881, %880 ]
  %909 = phi ptr [ %891, %897 ], [ %4, %880 ]
  %910 = phi i64 [ %890, %897 ], [ 0, %880 ]
  %911 = add nsw i32 %908, 1
  store i32 %911, ptr %909, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %7, i64 %910
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %910
  br label %925

915:                                              ; preds = %889
  %916 = icmp eq i32 %892, %895
  br i1 %916, label %917, label %923

917:                                              ; preds = %915
  store i32 0, ptr %891, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %8, i64 %890
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %890
  store i32 %919, ptr %920, align 4, !tbaa !5
  %921 = add nuw nsw i64 %890, 1
  %922 = icmp eq i64 %921, %645
  br i1 %922, label %930, label %889, !llvm.loop !972

923:                                              ; preds = %885, %915
  %924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

925:                                              ; preds = %898, %907
  %926 = phi ptr [ %914, %907 ], [ %891, %898 ]
  %927 = phi i32 [ %913, %907 ], [ 1, %898 ]
  %928 = load i32, ptr %926, align 4, !tbaa !5
  %929 = add nsw i32 %928, %927
  store i32 %929, ptr %926, align 4, !tbaa !5
  br label %930

930:                                              ; preds = %917, %925, %887, %872
  %931 = icmp eq i32 %879, %5
  br i1 %931, label %5437, label %795, !llvm.loop !973

932:                                              ; preds = %633
  %933 = getelementptr inbounds i32, ptr %3, i64 %19
  %934 = load i32, ptr %933, align 4, !tbaa !5
  %935 = icmp eq i32 %934, 0
  %936 = icmp sgt i32 %5, 0
  br i1 %935, label %946, label %937

937:                                              ; preds = %932
  br i1 %936, label %938, label %5437

938:                                              ; preds = %937
  %939 = icmp sgt i32 %13, 1
  %940 = icmp sgt i32 %13, 0
  %941 = add i32 %13, -2
  %942 = zext i32 %941 to i64
  %943 = zext i32 %13 to i64
  %944 = add nuw i32 %5, 1
  %945 = icmp eq i32 %13, 1
  br label %1087

946:                                              ; preds = %932
  br i1 %936, label %947, label %5437

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %955

955:                                              ; preds = %947, %1085
  %956 = phi i32 [ 0, %947 ], [ %1037, %1085 ]
  %957 = phi double [ 0.000000e+00, %947 ], [ %1036, %1085 ]
  %958 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %959, label %1028

959:                                              ; preds = %955, %1018
  %960 = phi i32 [ %1027, %1018 ], [ 0, %955 ]
  %961 = phi i64 [ %969, %1018 ], [ %952, %955 ]
  %962 = phi i64 [ %1026, %1018 ], [ %951, %955 ]
  %963 = phi i32 [ %1024, %1018 ], [ %958, %955 ]
  %964 = sub i32 %950, %960
  %965 = tail call i32 @llvm.smin.i32(i32 %964, i32 0)
  %966 = sub i32 %964, %965
  %967 = zext i32 %966 to i64
  %968 = add nuw nsw i64 %967, 1
  %969 = add nsw i64 %961, -1
  %970 = icmp ult i32 %966, 31
  br i1 %970, label %1006, label %971

971:                                              ; preds = %959
  %972 = and i64 %968, 8589934560
  %973 = sub i64 %962, %972
  br label %974

974:                                              ; preds = %974, %971
  %975 = phi i64 [ 0, %971 ], [ %998, %974 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %994, %974 ]
  %977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %995, %974 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %996, %974 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %997, %974 ]
  %980 = sub i64 %962, %975
  %981 = getelementptr inbounds i32, ptr %9, i64 %980
  %982 = getelementptr inbounds i32, ptr %981, i64 -7
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %981, i64 -15
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %981, i64 -23
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %981, i64 -31
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = mul <8 x i32> %984, %976
  %995 = mul <8 x i32> %987, %977
  %996 = mul <8 x i32> %990, %978
  %997 = mul <8 x i32> %993, %979
  %998 = add nuw i64 %975, 32
  %999 = icmp eq i64 %998, %972
  br i1 %999, label %1000, label %974, !llvm.loop !974

1000:                                             ; preds = %974
  %1001 = mul <8 x i32> %995, %994
  %1002 = mul <8 x i32> %996, %1001
  %1003 = mul <8 x i32> %997, %1002
  %1004 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1003)
  %1005 = icmp eq i64 %968, %972
  br i1 %1005, label %1018, label %1006

1006:                                             ; preds = %959, %1000
  %1007 = phi i64 [ %962, %959 ], [ %973, %1000 ]
  %1008 = phi i32 [ 1, %959 ], [ %1004, %1000 ]
  br label %1009

1009:                                             ; preds = %1006, %1009
  %1010 = phi i64 [ %1015, %1009 ], [ %1007, %1006 ]
  %1011 = phi i32 [ %1014, %1009 ], [ %1008, %1006 ]
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1010
  %1013 = load i32, ptr %1012, align 4, !tbaa !5
  %1014 = mul nsw i32 %1013, %1011
  %1015 = add nsw i64 %1010, -1
  %1016 = trunc i64 %1010 to i32
  %1017 = icmp sgt i32 %1016, 0
  br i1 %1017, label %1009, label %1018, !llvm.loop !975

1018:                                             ; preds = %1009, %1000
  %1019 = phi i32 [ %1004, %1000 ], [ %1014, %1009 ]
  %1020 = and i64 %969, 4294967295
  %1021 = getelementptr inbounds i32, ptr %6, i64 %1020
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1019
  %1024 = add nsw i32 %1023, %963
  %1025 = icmp sgt i64 %961, 2
  %1026 = add nsw i64 %962, -1
  %1027 = add i32 %960, 1
  br i1 %1025, label %959, label %1028, !llvm.loop !976

1028:                                             ; preds = %1018, %955
  %1029 = phi i32 [ %958, %955 ], [ %1024, %1018 ]
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds double, ptr %626, i64 %1030
  %1032 = load double, ptr %1031, align 8, !tbaa !18
  %1033 = fptosi double %1032 to i32
  %1034 = load i32, ptr %628, align 4, !tbaa !5
  %1035 = add nsw i32 %1034, %1033
  store i32 %1035, ptr %628, align 4, !tbaa !5
  %1036 = fadd fast double %957, 1.000000e+00
  %1037 = add nuw nsw i32 %956, 1
  br i1 %949, label %1038, label %1085

1038:                                             ; preds = %1028
  %1039 = load i32, ptr %4, align 4, !tbaa !5
  %1040 = load i32, ptr %12, align 4, !tbaa !5
  %1041 = add nsw i32 %1040, -1
  %1042 = icmp slt i32 %1039, %1041
  br i1 %1042, label %1062, label %1043

1043:                                             ; preds = %1038
  %1044 = icmp eq i32 %1039, %1041
  br i1 %1044, label %1045, label %1078

1045:                                             ; preds = %1043
  store i32 0, ptr %4, align 4, !tbaa !5
  %1046 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1046, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1085, label %1047

1047:                                             ; preds = %1045, %1072
  %1048 = phi i64 [ %1076, %1072 ], [ 1, %1045 ]
  %1049 = getelementptr inbounds i32, ptr %4, i64 %1048
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %12, i64 %1048
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1050, %1053
  br i1 %1054, label %1055, label %1070

1055:                                             ; preds = %1047
  br i1 %1042, label %1062, label %1056

1056:                                             ; preds = %1055
  %1057 = getelementptr inbounds i32, ptr %7, i64 %1048
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %6, i64 %1048
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = add nsw i32 %1060, %1058
  store i32 %1061, ptr %1059, align 4, !tbaa !5
  br label %1080

1062:                                             ; preds = %1038, %1055
  %1063 = phi i32 [ %1050, %1055 ], [ %1039, %1038 ]
  %1064 = phi ptr [ %1049, %1055 ], [ %4, %1038 ]
  %1065 = phi i64 [ %1048, %1055 ], [ 0, %1038 ]
  %1066 = add nsw i32 %1063, 1
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1065
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1065
  br label %1080

1070:                                             ; preds = %1047
  %1071 = icmp eq i32 %1050, %1053
  br i1 %1071, label %1072, label %1078

1072:                                             ; preds = %1070
  store i32 0, ptr %1049, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %8, i64 %1048
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %6, i64 %1048
  store i32 %1074, ptr %1075, align 4, !tbaa !5
  %1076 = add nuw nsw i64 %1048, 1
  %1077 = icmp eq i64 %1076, %952
  br i1 %1077, label %1085, label %1047, !llvm.loop !977

1078:                                             ; preds = %1043, %1070
  %1079 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1080:                                             ; preds = %1056, %1062
  %1081 = phi ptr [ %1069, %1062 ], [ %1049, %1056 ]
  %1082 = phi i32 [ %1068, %1062 ], [ 1, %1056 ]
  %1083 = load i32, ptr %1081, align 4, !tbaa !5
  %1084 = add nsw i32 %1083, %1082
  store i32 %1084, ptr %1081, align 4, !tbaa !5
  br label %1085

1085:                                             ; preds = %1072, %1080, %1045, %1028
  %1086 = icmp eq i32 %1037, %5
  br i1 %1086, label %5437, label %955, !llvm.loop !978

1087:                                             ; preds = %938, %1222
  %1088 = phi i32 [ 0, %938 ], [ %1171, %1222 ]
  %1089 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1090, label %1159

1090:                                             ; preds = %1087, %1149
  %1091 = phi i32 [ %1158, %1149 ], [ 0, %1087 ]
  %1092 = phi i64 [ %1100, %1149 ], [ %943, %1087 ]
  %1093 = phi i64 [ %1157, %1149 ], [ %942, %1087 ]
  %1094 = phi i32 [ %1155, %1149 ], [ %1089, %1087 ]
  %1095 = sub i32 %941, %1091
  %1096 = tail call i32 @llvm.smin.i32(i32 %1095, i32 0)
  %1097 = sub i32 %1095, %1096
  %1098 = zext i32 %1097 to i64
  %1099 = add nuw nsw i64 %1098, 1
  %1100 = add nsw i64 %1092, -1
  %1101 = icmp ult i32 %1097, 31
  br i1 %1101, label %1137, label %1102

1102:                                             ; preds = %1090
  %1103 = and i64 %1099, 8589934560
  %1104 = sub i64 %1093, %1103
  br label %1105

1105:                                             ; preds = %1105, %1102
  %1106 = phi i64 [ 0, %1102 ], [ %1129, %1105 ]
  %1107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1125, %1105 ]
  %1108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1126, %1105 ]
  %1109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1127, %1105 ]
  %1110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1128, %1105 ]
  %1111 = sub i64 %1093, %1106
  %1112 = getelementptr inbounds i32, ptr %11, i64 %1111
  %1113 = getelementptr inbounds i32, ptr %1112, i64 -7
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = getelementptr inbounds i32, ptr %1112, i64 -15
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = getelementptr inbounds i32, ptr %1112, i64 -23
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1112, i64 -31
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = mul <8 x i32> %1115, %1107
  %1126 = mul <8 x i32> %1118, %1108
  %1127 = mul <8 x i32> %1121, %1109
  %1128 = mul <8 x i32> %1124, %1110
  %1129 = add nuw i64 %1106, 32
  %1130 = icmp eq i64 %1129, %1103
  br i1 %1130, label %1131, label %1105, !llvm.loop !979

1131:                                             ; preds = %1105
  %1132 = mul <8 x i32> %1126, %1125
  %1133 = mul <8 x i32> %1127, %1132
  %1134 = mul <8 x i32> %1128, %1133
  %1135 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1134)
  %1136 = icmp eq i64 %1099, %1103
  br i1 %1136, label %1149, label %1137

1137:                                             ; preds = %1090, %1131
  %1138 = phi i64 [ %1093, %1090 ], [ %1104, %1131 ]
  %1139 = phi i32 [ 1, %1090 ], [ %1135, %1131 ]
  br label %1140

1140:                                             ; preds = %1137, %1140
  %1141 = phi i64 [ %1146, %1140 ], [ %1138, %1137 ]
  %1142 = phi i32 [ %1145, %1140 ], [ %1139, %1137 ]
  %1143 = getelementptr inbounds i32, ptr %11, i64 %1141
  %1144 = load i32, ptr %1143, align 4, !tbaa !5
  %1145 = mul nsw i32 %1144, %1142
  %1146 = add nsw i64 %1141, -1
  %1147 = trunc i64 %1141 to i32
  %1148 = icmp sgt i32 %1147, 0
  br i1 %1148, label %1140, label %1149, !llvm.loop !980

1149:                                             ; preds = %1140, %1131
  %1150 = phi i32 [ %1135, %1131 ], [ %1145, %1140 ]
  %1151 = and i64 %1100, 4294967295
  %1152 = getelementptr inbounds i32, ptr %6, i64 %1151
  %1153 = load i32, ptr %1152, align 4, !tbaa !5
  %1154 = mul nsw i32 %1153, %1150
  %1155 = add nsw i32 %1154, %1094
  %1156 = icmp sgt i64 %1092, 2
  %1157 = add nsw i64 %1093, -1
  %1158 = add i32 %1091, 1
  br i1 %1156, label %1090, label %1159, !llvm.loop !981

1159:                                             ; preds = %1149, %1087
  %1160 = phi i32 [ %1089, %1087 ], [ %1155, %1149 ]
  %1161 = icmp slt i32 %1160, %5
  br i1 %1161, label %1164, label %1162

1162:                                             ; preds = %1159
  %1163 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1164:                                             ; preds = %1159
  %1165 = sext i32 %1160 to i64
  %1166 = getelementptr inbounds double, ptr %626, i64 %1165
  %1167 = load double, ptr %1166, align 8, !tbaa !18
  %1168 = fptosi double %1167 to i32
  %1169 = load i32, ptr %628, align 4, !tbaa !5
  %1170 = add nsw i32 %1169, %1168
  store i32 %1170, ptr %628, align 4, !tbaa !5
  %1171 = add nuw nsw i32 %1088, 1
  br i1 %940, label %1172, label %1222

1172:                                             ; preds = %1164
  %1173 = load i32, ptr %4, align 4, !tbaa !5
  %1174 = load i32, ptr %12, align 4, !tbaa !5
  %1175 = add nsw i32 %1174, -1
  %1176 = icmp slt i32 %1173, %1175
  br i1 %1176, label %1199, label %1177

1177:                                             ; preds = %1172
  %1178 = icmp eq i32 %1173, %1175
  br i1 %1178, label %1179, label %1215

1179:                                             ; preds = %1177
  store i32 0, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1180, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1222, label %1181

1181:                                             ; preds = %1179, %1209
  %1182 = phi i64 [ %1213, %1209 ], [ 1, %1179 ]
  %1183 = getelementptr inbounds i32, ptr %4, i64 %1182
  %1184 = load i32, ptr %1183, align 4, !tbaa !5
  %1185 = getelementptr inbounds i32, ptr %12, i64 %1182
  %1186 = load i32, ptr %1185, align 4, !tbaa !5
  %1187 = add nsw i32 %1186, -1
  %1188 = icmp slt i32 %1184, %1187
  br i1 %1188, label %1189, label %1207

1189:                                             ; preds = %1181
  br i1 %1176, label %1199, label %1190

1190:                                             ; preds = %1189
  %1191 = shl i64 %1182, 32
  %1192 = add i64 %1191, -4294967296
  %1193 = ashr exact i64 %1192, 32
  %1194 = getelementptr inbounds i32, ptr %7, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %6, i64 %1182
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, %1195
  store i32 %1198, ptr %1196, align 4, !tbaa !5
  br label %1217

1199:                                             ; preds = %1172, %1189
  %1200 = phi i32 [ %1184, %1189 ], [ %1173, %1172 ]
  %1201 = phi ptr [ %1183, %1189 ], [ %4, %1172 ]
  %1202 = phi i64 [ %1182, %1189 ], [ 0, %1172 ]
  %1203 = add nsw i32 %1200, 1
  store i32 %1203, ptr %1201, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %7, i64 %1202
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1202
  br label %1217

1207:                                             ; preds = %1181
  %1208 = icmp eq i32 %1184, %1187
  br i1 %1208, label %1209, label %1215

1209:                                             ; preds = %1207
  store i32 0, ptr %1183, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %8, i64 %1182
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1182
  store i32 %1211, ptr %1212, align 4, !tbaa !5
  %1213 = add nuw nsw i64 %1182, 1
  %1214 = icmp eq i64 %1213, %943
  br i1 %1214, label %1222, label %1181, !llvm.loop !982

1215:                                             ; preds = %1177, %1207
  %1216 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1217:                                             ; preds = %1190, %1199
  %1218 = phi ptr [ %1206, %1199 ], [ %1183, %1190 ]
  %1219 = phi i32 [ %1205, %1199 ], [ 1, %1190 ]
  %1220 = load i32, ptr %1218, align 4, !tbaa !5
  %1221 = add nsw i32 %1220, %1219
  store i32 %1221, ptr %1218, align 4, !tbaa !5
  br label %1222

1222:                                             ; preds = %1209, %1217, %1179, %1164
  %1223 = icmp eq i32 %1171, %5
  br i1 %1223, label %5437, label %1087, !llvm.loop !983

1224:                                             ; preds = %633
  %1225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

1226:                                             ; preds = %18
  %1227 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1228 = load ptr, ptr %1227, align 8, !tbaa !9
  %1229 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1230 = load ptr, ptr %1229, align 8, !tbaa !9
  store i8 0, ptr %1230, align 1, !tbaa !11
  %1231 = icmp eq i32 %13, 0
  br i1 %1231, label %1232, label %1235

1232:                                             ; preds = %1226
  %1233 = load double, ptr %1228, align 8, !tbaa !18
  %1234 = fptosi double %1233 to i8
  store i8 %1234, ptr %1230, align 1, !tbaa !11
  br label %5437

1235:                                             ; preds = %1226
  switch i32 %1, label %1826 [
    i32 1, label %1236
    i32 0, label %1534
  ]

1236:                                             ; preds = %1235
  %1237 = getelementptr inbounds i32, ptr %3, i64 %19
  %1238 = load i32, ptr %1237, align 4, !tbaa !5
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp sgt i32 %5, 0
  br i1 %1239, label %1250, label %1241

1241:                                             ; preds = %1236
  br i1 %1240, label %1242, label %5437

1242:                                             ; preds = %1241
  %1243 = icmp sgt i32 %13, 1
  %1244 = icmp sgt i32 %13, 0
  %1245 = add i32 %13, -2
  %1246 = zext i32 %1245 to i64
  %1247 = zext i32 %13 to i64
  %1248 = add nuw i32 %5, 1
  %1249 = icmp eq i32 %13, 1
  br label %1397

1250:                                             ; preds = %1236
  br i1 %1240, label %1251, label %5437

1251:                                             ; preds = %1250
  %1252 = icmp sgt i32 %13, 1
  %1253 = icmp sgt i32 %13, 0
  %1254 = add i32 %13, -2
  %1255 = zext i32 %1254 to i64
  %1256 = zext i32 %13 to i64
  %1257 = add nuw i32 %5, 1
  %1258 = icmp eq i32 %13, 1
  br label %1259

1259:                                             ; preds = %1251, %1395
  %1260 = phi i32 [ 0, %1251 ], [ %1347, %1395 ]
  %1261 = phi double [ 0.000000e+00, %1251 ], [ %1346, %1395 ]
  %1262 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1252, label %1263, label %1332

1263:                                             ; preds = %1259, %1322
  %1264 = phi i32 [ %1331, %1322 ], [ 0, %1259 ]
  %1265 = phi i64 [ %1273, %1322 ], [ %1256, %1259 ]
  %1266 = phi i64 [ %1330, %1322 ], [ %1255, %1259 ]
  %1267 = phi i32 [ %1328, %1322 ], [ %1262, %1259 ]
  %1268 = sub i32 %1254, %1264
  %1269 = tail call i32 @llvm.smin.i32(i32 %1268, i32 0)
  %1270 = sub i32 %1268, %1269
  %1271 = zext i32 %1270 to i64
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = add nsw i64 %1265, -1
  %1274 = icmp ult i32 %1270, 31
  br i1 %1274, label %1310, label %1275

1275:                                             ; preds = %1263
  %1276 = and i64 %1272, 8589934560
  %1277 = sub i64 %1266, %1276
  br label %1278

1278:                                             ; preds = %1278, %1275
  %1279 = phi i64 [ 0, %1275 ], [ %1302, %1278 ]
  %1280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1298, %1278 ]
  %1281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1299, %1278 ]
  %1282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1300, %1278 ]
  %1283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1301, %1278 ]
  %1284 = sub i64 %1266, %1279
  %1285 = getelementptr inbounds i32, ptr %9, i64 %1284
  %1286 = getelementptr inbounds i32, ptr %1285, i64 -7
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = getelementptr inbounds i32, ptr %1285, i64 -15
  %1290 = load <8 x i32>, ptr %1289, align 4, !tbaa !5
  %1291 = shufflevector <8 x i32> %1290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1292 = getelementptr inbounds i32, ptr %1285, i64 -23
  %1293 = load <8 x i32>, ptr %1292, align 4, !tbaa !5
  %1294 = shufflevector <8 x i32> %1293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1295 = getelementptr inbounds i32, ptr %1285, i64 -31
  %1296 = load <8 x i32>, ptr %1295, align 4, !tbaa !5
  %1297 = shufflevector <8 x i32> %1296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1298 = mul <8 x i32> %1288, %1280
  %1299 = mul <8 x i32> %1291, %1281
  %1300 = mul <8 x i32> %1294, %1282
  %1301 = mul <8 x i32> %1297, %1283
  %1302 = add nuw i64 %1279, 32
  %1303 = icmp eq i64 %1302, %1276
  br i1 %1303, label %1304, label %1278, !llvm.loop !984

1304:                                             ; preds = %1278
  %1305 = mul <8 x i32> %1299, %1298
  %1306 = mul <8 x i32> %1300, %1305
  %1307 = mul <8 x i32> %1301, %1306
  %1308 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1307)
  %1309 = icmp eq i64 %1272, %1276
  br i1 %1309, label %1322, label %1310

1310:                                             ; preds = %1263, %1304
  %1311 = phi i64 [ %1266, %1263 ], [ %1277, %1304 ]
  %1312 = phi i32 [ 1, %1263 ], [ %1308, %1304 ]
  br label %1313

1313:                                             ; preds = %1310, %1313
  %1314 = phi i64 [ %1319, %1313 ], [ %1311, %1310 ]
  %1315 = phi i32 [ %1318, %1313 ], [ %1312, %1310 ]
  %1316 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1315
  %1319 = add nsw i64 %1314, -1
  %1320 = trunc i64 %1314 to i32
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1313, label %1322, !llvm.loop !985

1322:                                             ; preds = %1313, %1304
  %1323 = phi i32 [ %1308, %1304 ], [ %1318, %1313 ]
  %1324 = and i64 %1273, 4294967295
  %1325 = getelementptr inbounds i32, ptr %6, i64 %1324
  %1326 = load i32, ptr %1325, align 4, !tbaa !5
  %1327 = mul nsw i32 %1326, %1323
  %1328 = add nsw i32 %1327, %1267
  %1329 = icmp sgt i64 %1265, 2
  %1330 = add nsw i64 %1266, -1
  %1331 = add i32 %1264, 1
  br i1 %1329, label %1263, label %1332, !llvm.loop !986

1332:                                             ; preds = %1322, %1259
  %1333 = phi i32 [ %1262, %1259 ], [ %1328, %1322 ]
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds double, ptr %2, i64 %1334
  %1336 = load double, ptr %1335, align 8, !tbaa !18
  %1337 = getelementptr inbounds double, ptr %1228, i64 %1334
  %1338 = load double, ptr %1337, align 8, !tbaa !18
  %1339 = fptosi double %1338 to i8
  %1340 = load i8, ptr %1230, align 1, !tbaa !11
  %1341 = sitofp i8 %1340 to double
  %1342 = sitofp i8 %1339 to double
  %1343 = fmul fast double %1336, %1342
  %1344 = fadd fast double %1343, %1341
  %1345 = fptosi double %1344 to i8
  store i8 %1345, ptr %1230, align 1, !tbaa !11
  %1346 = fadd fast double %1336, %1261
  %1347 = add nuw nsw i32 %1260, 1
  br i1 %1253, label %1348, label %1395

1348:                                             ; preds = %1332
  %1349 = load i32, ptr %4, align 4, !tbaa !5
  %1350 = load i32, ptr %12, align 4, !tbaa !5
  %1351 = add nsw i32 %1350, -1
  %1352 = icmp slt i32 %1349, %1351
  br i1 %1352, label %1372, label %1353

1353:                                             ; preds = %1348
  %1354 = icmp eq i32 %1349, %1351
  br i1 %1354, label %1355, label %1388

1355:                                             ; preds = %1353
  store i32 0, ptr %4, align 4, !tbaa !5
  %1356 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1356, ptr %6, align 4, !tbaa !5
  br i1 %1258, label %1395, label %1357

1357:                                             ; preds = %1355, %1382
  %1358 = phi i64 [ %1386, %1382 ], [ 1, %1355 ]
  %1359 = getelementptr inbounds i32, ptr %4, i64 %1358
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = getelementptr inbounds i32, ptr %12, i64 %1358
  %1362 = load i32, ptr %1361, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, -1
  %1364 = icmp slt i32 %1360, %1363
  br i1 %1364, label %1365, label %1380

1365:                                             ; preds = %1357
  br i1 %1352, label %1372, label %1366

1366:                                             ; preds = %1365
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1358
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1358
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = add nsw i32 %1370, %1368
  store i32 %1371, ptr %1369, align 4, !tbaa !5
  br label %1390

1372:                                             ; preds = %1348, %1365
  %1373 = phi i32 [ %1360, %1365 ], [ %1349, %1348 ]
  %1374 = phi ptr [ %1359, %1365 ], [ %4, %1348 ]
  %1375 = phi i64 [ %1358, %1365 ], [ 0, %1348 ]
  %1376 = add nsw i32 %1373, 1
  store i32 %1376, ptr %1374, align 4, !tbaa !5
  %1377 = getelementptr inbounds i32, ptr %7, i64 %1375
  %1378 = load i32, ptr %1377, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %6, i64 %1375
  br label %1390

1380:                                             ; preds = %1357
  %1381 = icmp eq i32 %1360, %1363
  br i1 %1381, label %1382, label %1388

1382:                                             ; preds = %1380
  store i32 0, ptr %1359, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %8, i64 %1358
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = getelementptr inbounds i32, ptr %6, i64 %1358
  store i32 %1384, ptr %1385, align 4, !tbaa !5
  %1386 = add nuw nsw i64 %1358, 1
  %1387 = icmp eq i64 %1386, %1256
  br i1 %1387, label %1395, label %1357, !llvm.loop !987

1388:                                             ; preds = %1353, %1380
  %1389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1390:                                             ; preds = %1366, %1372
  %1391 = phi ptr [ %1379, %1372 ], [ %1359, %1366 ]
  %1392 = phi i32 [ %1378, %1372 ], [ 1, %1366 ]
  %1393 = load i32, ptr %1391, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, %1392
  store i32 %1394, ptr %1391, align 4, !tbaa !5
  br label %1395

1395:                                             ; preds = %1382, %1390, %1355, %1332
  %1396 = icmp eq i32 %1347, %5
  br i1 %1396, label %5437, label %1259, !llvm.loop !988

1397:                                             ; preds = %1242, %1532
  %1398 = phi i32 [ 0, %1242 ], [ %1481, %1532 ]
  %1399 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1400, label %1469

1400:                                             ; preds = %1397, %1459
  %1401 = phi i32 [ %1468, %1459 ], [ 0, %1397 ]
  %1402 = phi i64 [ %1410, %1459 ], [ %1247, %1397 ]
  %1403 = phi i64 [ %1467, %1459 ], [ %1246, %1397 ]
  %1404 = phi i32 [ %1465, %1459 ], [ %1399, %1397 ]
  %1405 = sub i32 %1245, %1401
  %1406 = tail call i32 @llvm.smin.i32(i32 %1405, i32 0)
  %1407 = sub i32 %1405, %1406
  %1408 = zext i32 %1407 to i64
  %1409 = add nuw nsw i64 %1408, 1
  %1410 = add nsw i64 %1402, -1
  %1411 = icmp ult i32 %1407, 31
  br i1 %1411, label %1447, label %1412

1412:                                             ; preds = %1400
  %1413 = and i64 %1409, 8589934560
  %1414 = sub i64 %1403, %1413
  br label %1415

1415:                                             ; preds = %1415, %1412
  %1416 = phi i64 [ 0, %1412 ], [ %1439, %1415 ]
  %1417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1435, %1415 ]
  %1418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1436, %1415 ]
  %1419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1437, %1415 ]
  %1420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1438, %1415 ]
  %1421 = sub i64 %1403, %1416
  %1422 = getelementptr inbounds i32, ptr %11, i64 %1421
  %1423 = getelementptr inbounds i32, ptr %1422, i64 -7
  %1424 = load <8 x i32>, ptr %1423, align 4, !tbaa !5
  %1425 = shufflevector <8 x i32> %1424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1426 = getelementptr inbounds i32, ptr %1422, i64 -15
  %1427 = load <8 x i32>, ptr %1426, align 4, !tbaa !5
  %1428 = shufflevector <8 x i32> %1427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1429 = getelementptr inbounds i32, ptr %1422, i64 -23
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = getelementptr inbounds i32, ptr %1422, i64 -31
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = mul <8 x i32> %1425, %1417
  %1436 = mul <8 x i32> %1428, %1418
  %1437 = mul <8 x i32> %1431, %1419
  %1438 = mul <8 x i32> %1434, %1420
  %1439 = add nuw i64 %1416, 32
  %1440 = icmp eq i64 %1439, %1413
  br i1 %1440, label %1441, label %1415, !llvm.loop !989

1441:                                             ; preds = %1415
  %1442 = mul <8 x i32> %1436, %1435
  %1443 = mul <8 x i32> %1437, %1442
  %1444 = mul <8 x i32> %1438, %1443
  %1445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1444)
  %1446 = icmp eq i64 %1409, %1413
  br i1 %1446, label %1459, label %1447

1447:                                             ; preds = %1400, %1441
  %1448 = phi i64 [ %1403, %1400 ], [ %1414, %1441 ]
  %1449 = phi i32 [ 1, %1400 ], [ %1445, %1441 ]
  br label %1450

1450:                                             ; preds = %1447, %1450
  %1451 = phi i64 [ %1456, %1450 ], [ %1448, %1447 ]
  %1452 = phi i32 [ %1455, %1450 ], [ %1449, %1447 ]
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1451
  %1454 = load i32, ptr %1453, align 4, !tbaa !5
  %1455 = mul nsw i32 %1454, %1452
  %1456 = add nsw i64 %1451, -1
  %1457 = trunc i64 %1451 to i32
  %1458 = icmp sgt i32 %1457, 0
  br i1 %1458, label %1450, label %1459, !llvm.loop !990

1459:                                             ; preds = %1450, %1441
  %1460 = phi i32 [ %1445, %1441 ], [ %1455, %1450 ]
  %1461 = and i64 %1410, 4294967295
  %1462 = getelementptr inbounds i32, ptr %6, i64 %1461
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1460
  %1465 = add nsw i32 %1464, %1404
  %1466 = icmp sgt i64 %1402, 2
  %1467 = add nsw i64 %1403, -1
  %1468 = add i32 %1401, 1
  br i1 %1466, label %1400, label %1469, !llvm.loop !991

1469:                                             ; preds = %1459, %1397
  %1470 = phi i32 [ %1399, %1397 ], [ %1465, %1459 ]
  %1471 = icmp slt i32 %1470, %5
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1469
  %1473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1474:                                             ; preds = %1469
  %1475 = sext i32 %1470 to i64
  %1476 = getelementptr inbounds double, ptr %1228, i64 %1475
  %1477 = load double, ptr %1476, align 8, !tbaa !18
  %1478 = fptosi double %1477 to i8
  %1479 = load i8, ptr %1230, align 1, !tbaa !11
  %1480 = add i8 %1479, %1478
  store i8 %1480, ptr %1230, align 1, !tbaa !11
  %1481 = add nuw nsw i32 %1398, 1
  br i1 %1244, label %1482, label %1532

1482:                                             ; preds = %1474
  %1483 = load i32, ptr %4, align 4, !tbaa !5
  %1484 = load i32, ptr %12, align 4, !tbaa !5
  %1485 = add nsw i32 %1484, -1
  %1486 = icmp slt i32 %1483, %1485
  br i1 %1486, label %1509, label %1487

1487:                                             ; preds = %1482
  %1488 = icmp eq i32 %1483, %1485
  br i1 %1488, label %1489, label %1525

1489:                                             ; preds = %1487
  store i32 0, ptr %4, align 4, !tbaa !5
  %1490 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1490, ptr %6, align 4, !tbaa !5
  br i1 %1249, label %1532, label %1491

1491:                                             ; preds = %1489, %1519
  %1492 = phi i64 [ %1523, %1519 ], [ 1, %1489 ]
  %1493 = getelementptr inbounds i32, ptr %4, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = getelementptr inbounds i32, ptr %12, i64 %1492
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = add nsw i32 %1496, -1
  %1498 = icmp slt i32 %1494, %1497
  br i1 %1498, label %1499, label %1517

1499:                                             ; preds = %1491
  br i1 %1486, label %1509, label %1500

1500:                                             ; preds = %1499
  %1501 = shl i64 %1492, 32
  %1502 = add i64 %1501, -4294967296
  %1503 = ashr exact i64 %1502, 32
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, %1505
  store i32 %1508, ptr %1506, align 4, !tbaa !5
  br label %1527

1509:                                             ; preds = %1482, %1499
  %1510 = phi i32 [ %1494, %1499 ], [ %1483, %1482 ]
  %1511 = phi ptr [ %1493, %1499 ], [ %4, %1482 ]
  %1512 = phi i64 [ %1492, %1499 ], [ 0, %1482 ]
  %1513 = add nsw i32 %1510, 1
  store i32 %1513, ptr %1511, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %7, i64 %1512
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %6, i64 %1512
  br label %1527

1517:                                             ; preds = %1491
  %1518 = icmp eq i32 %1494, %1497
  br i1 %1518, label %1519, label %1525

1519:                                             ; preds = %1517
  store i32 0, ptr %1493, align 4, !tbaa !5
  %1520 = getelementptr inbounds i32, ptr %8, i64 %1492
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1492
  store i32 %1521, ptr %1522, align 4, !tbaa !5
  %1523 = add nuw nsw i64 %1492, 1
  %1524 = icmp eq i64 %1523, %1247
  br i1 %1524, label %1532, label %1491, !llvm.loop !992

1525:                                             ; preds = %1487, %1517
  %1526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1527:                                             ; preds = %1500, %1509
  %1528 = phi ptr [ %1516, %1509 ], [ %1493, %1500 ]
  %1529 = phi i32 [ %1515, %1509 ], [ 1, %1500 ]
  %1530 = load i32, ptr %1528, align 4, !tbaa !5
  %1531 = add nsw i32 %1530, %1529
  store i32 %1531, ptr %1528, align 4, !tbaa !5
  br label %1532

1532:                                             ; preds = %1519, %1527, %1489, %1474
  %1533 = icmp eq i32 %1481, %5
  br i1 %1533, label %5437, label %1397, !llvm.loop !993

1534:                                             ; preds = %1235
  %1535 = getelementptr inbounds i32, ptr %3, i64 %19
  %1536 = load i32, ptr %1535, align 4, !tbaa !5
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp sgt i32 %5, 0
  br i1 %1537, label %1548, label %1539

1539:                                             ; preds = %1534
  br i1 %1538, label %1540, label %5437

1540:                                             ; preds = %1539
  %1541 = icmp sgt i32 %13, 1
  %1542 = icmp sgt i32 %13, 0
  %1543 = add i32 %13, -2
  %1544 = zext i32 %1543 to i64
  %1545 = zext i32 %13 to i64
  %1546 = add nuw i32 %5, 1
  %1547 = icmp eq i32 %13, 1
  br label %1689

1548:                                             ; preds = %1534
  br i1 %1538, label %1549, label %5437

1549:                                             ; preds = %1548
  %1550 = icmp sgt i32 %13, 1
  %1551 = icmp sgt i32 %13, 0
  %1552 = add i32 %13, -2
  %1553 = zext i32 %1552 to i64
  %1554 = zext i32 %13 to i64
  %1555 = add nuw i32 %5, 1
  %1556 = icmp eq i32 %13, 1
  br label %1557

1557:                                             ; preds = %1549, %1687
  %1558 = phi i32 [ 0, %1549 ], [ %1639, %1687 ]
  %1559 = phi double [ 0.000000e+00, %1549 ], [ %1638, %1687 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1550, label %1561, label %1630

1561:                                             ; preds = %1557, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1557 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1554, %1557 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1553, %1557 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1557 ]
  %1566 = sub i32 %1552, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %9, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !5
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !5
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !994

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %9, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !5
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !995

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !5
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !996

1630:                                             ; preds = %1620, %1557
  %1631 = phi i32 [ %1560, %1557 ], [ %1626, %1620 ]
  %1632 = sext i32 %1631 to i64
  %1633 = getelementptr inbounds double, ptr %1228, i64 %1632
  %1634 = load double, ptr %1633, align 8, !tbaa !18
  %1635 = fptosi double %1634 to i8
  %1636 = load i8, ptr %1230, align 1, !tbaa !11
  %1637 = add i8 %1636, %1635
  store i8 %1637, ptr %1230, align 1, !tbaa !11
  %1638 = fadd fast double %1559, 1.000000e+00
  %1639 = add nuw nsw i32 %1558, 1
  br i1 %1551, label %1640, label %1687

1640:                                             ; preds = %1630
  %1641 = load i32, ptr %4, align 4, !tbaa !5
  %1642 = load i32, ptr %12, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1641, %1643
  br i1 %1644, label %1664, label %1645

1645:                                             ; preds = %1640
  %1646 = icmp eq i32 %1641, %1643
  br i1 %1646, label %1647, label %1680

1647:                                             ; preds = %1645
  store i32 0, ptr %4, align 4, !tbaa !5
  %1648 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1648, ptr %6, align 4, !tbaa !5
  br i1 %1556, label %1687, label %1649

1649:                                             ; preds = %1647, %1674
  %1650 = phi i64 [ %1678, %1674 ], [ 1, %1647 ]
  %1651 = getelementptr inbounds i32, ptr %4, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %12, i64 %1650
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = add nsw i32 %1654, -1
  %1656 = icmp slt i32 %1652, %1655
  br i1 %1656, label %1657, label %1672

1657:                                             ; preds = %1649
  br i1 %1644, label %1664, label %1658

1658:                                             ; preds = %1657
  %1659 = getelementptr inbounds i32, ptr %7, i64 %1650
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1650
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, %1660
  store i32 %1663, ptr %1661, align 4, !tbaa !5
  br label %1682

1664:                                             ; preds = %1640, %1657
  %1665 = phi i32 [ %1652, %1657 ], [ %1641, %1640 ]
  %1666 = phi ptr [ %1651, %1657 ], [ %4, %1640 ]
  %1667 = phi i64 [ %1650, %1657 ], [ 0, %1640 ]
  %1668 = add nsw i32 %1665, 1
  store i32 %1668, ptr %1666, align 4, !tbaa !5
  %1669 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1670 = load i32, ptr %1669, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %6, i64 %1667
  br label %1682

1672:                                             ; preds = %1649
  %1673 = icmp eq i32 %1652, %1655
  br i1 %1673, label %1674, label %1680

1674:                                             ; preds = %1672
  store i32 0, ptr %1651, align 4, !tbaa !5
  %1675 = getelementptr inbounds i32, ptr %8, i64 %1650
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = getelementptr inbounds i32, ptr %6, i64 %1650
  store i32 %1676, ptr %1677, align 4, !tbaa !5
  %1678 = add nuw nsw i64 %1650, 1
  %1679 = icmp eq i64 %1678, %1554
  br i1 %1679, label %1687, label %1649, !llvm.loop !997

1680:                                             ; preds = %1645, %1672
  %1681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1682:                                             ; preds = %1658, %1664
  %1683 = phi ptr [ %1671, %1664 ], [ %1651, %1658 ]
  %1684 = phi i32 [ %1670, %1664 ], [ 1, %1658 ]
  %1685 = load i32, ptr %1683, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, %1684
  store i32 %1686, ptr %1683, align 4, !tbaa !5
  br label %1687

1687:                                             ; preds = %1674, %1682, %1647, %1630
  %1688 = icmp eq i32 %1639, %5
  br i1 %1688, label %5437, label %1557, !llvm.loop !998

1689:                                             ; preds = %1540, %1824
  %1690 = phi i32 [ 0, %1540 ], [ %1773, %1824 ]
  %1691 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1541, label %1692, label %1761

1692:                                             ; preds = %1689, %1751
  %1693 = phi i32 [ %1760, %1751 ], [ 0, %1689 ]
  %1694 = phi i64 [ %1702, %1751 ], [ %1545, %1689 ]
  %1695 = phi i64 [ %1759, %1751 ], [ %1544, %1689 ]
  %1696 = phi i32 [ %1757, %1751 ], [ %1691, %1689 ]
  %1697 = sub i32 %1543, %1693
  %1698 = tail call i32 @llvm.smin.i32(i32 %1697, i32 0)
  %1699 = sub i32 %1697, %1698
  %1700 = zext i32 %1699 to i64
  %1701 = add nuw nsw i64 %1700, 1
  %1702 = add nsw i64 %1694, -1
  %1703 = icmp ult i32 %1699, 31
  br i1 %1703, label %1739, label %1704

1704:                                             ; preds = %1692
  %1705 = and i64 %1701, 8589934560
  %1706 = sub i64 %1695, %1705
  br label %1707

1707:                                             ; preds = %1707, %1704
  %1708 = phi i64 [ 0, %1704 ], [ %1731, %1707 ]
  %1709 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1727, %1707 ]
  %1710 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1728, %1707 ]
  %1711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1729, %1707 ]
  %1712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1730, %1707 ]
  %1713 = sub i64 %1695, %1708
  %1714 = getelementptr inbounds i32, ptr %11, i64 %1713
  %1715 = getelementptr inbounds i32, ptr %1714, i64 -7
  %1716 = load <8 x i32>, ptr %1715, align 4, !tbaa !5
  %1717 = shufflevector <8 x i32> %1716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1718 = getelementptr inbounds i32, ptr %1714, i64 -15
  %1719 = load <8 x i32>, ptr %1718, align 4, !tbaa !5
  %1720 = shufflevector <8 x i32> %1719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1721 = getelementptr inbounds i32, ptr %1714, i64 -23
  %1722 = load <8 x i32>, ptr %1721, align 4, !tbaa !5
  %1723 = shufflevector <8 x i32> %1722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1724 = getelementptr inbounds i32, ptr %1714, i64 -31
  %1725 = load <8 x i32>, ptr %1724, align 4, !tbaa !5
  %1726 = shufflevector <8 x i32> %1725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1727 = mul <8 x i32> %1717, %1709
  %1728 = mul <8 x i32> %1720, %1710
  %1729 = mul <8 x i32> %1723, %1711
  %1730 = mul <8 x i32> %1726, %1712
  %1731 = add nuw i64 %1708, 32
  %1732 = icmp eq i64 %1731, %1705
  br i1 %1732, label %1733, label %1707, !llvm.loop !999

1733:                                             ; preds = %1707
  %1734 = mul <8 x i32> %1728, %1727
  %1735 = mul <8 x i32> %1729, %1734
  %1736 = mul <8 x i32> %1730, %1735
  %1737 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1736)
  %1738 = icmp eq i64 %1701, %1705
  br i1 %1738, label %1751, label %1739

1739:                                             ; preds = %1692, %1733
  %1740 = phi i64 [ %1695, %1692 ], [ %1706, %1733 ]
  %1741 = phi i32 [ 1, %1692 ], [ %1737, %1733 ]
  br label %1742

1742:                                             ; preds = %1739, %1742
  %1743 = phi i64 [ %1748, %1742 ], [ %1740, %1739 ]
  %1744 = phi i32 [ %1747, %1742 ], [ %1741, %1739 ]
  %1745 = getelementptr inbounds i32, ptr %11, i64 %1743
  %1746 = load i32, ptr %1745, align 4, !tbaa !5
  %1747 = mul nsw i32 %1746, %1744
  %1748 = add nsw i64 %1743, -1
  %1749 = trunc i64 %1743 to i32
  %1750 = icmp sgt i32 %1749, 0
  br i1 %1750, label %1742, label %1751, !llvm.loop !1000

1751:                                             ; preds = %1742, %1733
  %1752 = phi i32 [ %1737, %1733 ], [ %1747, %1742 ]
  %1753 = and i64 %1702, 4294967295
  %1754 = getelementptr inbounds i32, ptr %6, i64 %1753
  %1755 = load i32, ptr %1754, align 4, !tbaa !5
  %1756 = mul nsw i32 %1755, %1752
  %1757 = add nsw i32 %1756, %1696
  %1758 = icmp sgt i64 %1694, 2
  %1759 = add nsw i64 %1695, -1
  %1760 = add i32 %1693, 1
  br i1 %1758, label %1692, label %1761, !llvm.loop !1001

1761:                                             ; preds = %1751, %1689
  %1762 = phi i32 [ %1691, %1689 ], [ %1757, %1751 ]
  %1763 = icmp slt i32 %1762, %5
  br i1 %1763, label %1766, label %1764

1764:                                             ; preds = %1761
  %1765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1766:                                             ; preds = %1761
  %1767 = sext i32 %1762 to i64
  %1768 = getelementptr inbounds double, ptr %1228, i64 %1767
  %1769 = load double, ptr %1768, align 8, !tbaa !18
  %1770 = fptosi double %1769 to i8
  %1771 = load i8, ptr %1230, align 1, !tbaa !11
  %1772 = add i8 %1771, %1770
  store i8 %1772, ptr %1230, align 1, !tbaa !11
  %1773 = add nuw nsw i32 %1690, 1
  br i1 %1542, label %1774, label %1824

1774:                                             ; preds = %1766
  %1775 = load i32, ptr %4, align 4, !tbaa !5
  %1776 = load i32, ptr %12, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1775, %1777
  br i1 %1778, label %1801, label %1779

1779:                                             ; preds = %1774
  %1780 = icmp eq i32 %1775, %1777
  br i1 %1780, label %1781, label %1817

1781:                                             ; preds = %1779
  store i32 0, ptr %4, align 4, !tbaa !5
  %1782 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1782, ptr %6, align 4, !tbaa !5
  br i1 %1547, label %1824, label %1783

1783:                                             ; preds = %1781, %1811
  %1784 = phi i64 [ %1815, %1811 ], [ 1, %1781 ]
  %1785 = getelementptr inbounds i32, ptr %4, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = getelementptr inbounds i32, ptr %12, i64 %1784
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = add nsw i32 %1788, -1
  %1790 = icmp slt i32 %1786, %1789
  br i1 %1790, label %1791, label %1809

1791:                                             ; preds = %1783
  br i1 %1778, label %1801, label %1792

1792:                                             ; preds = %1791
  %1793 = shl i64 %1784, 32
  %1794 = add i64 %1793, -4294967296
  %1795 = ashr exact i64 %1794, 32
  %1796 = getelementptr inbounds i32, ptr %7, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1784
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = add nsw i32 %1799, %1797
  store i32 %1800, ptr %1798, align 4, !tbaa !5
  br label %1819

1801:                                             ; preds = %1774, %1791
  %1802 = phi i32 [ %1786, %1791 ], [ %1775, %1774 ]
  %1803 = phi ptr [ %1785, %1791 ], [ %4, %1774 ]
  %1804 = phi i64 [ %1784, %1791 ], [ 0, %1774 ]
  %1805 = add nsw i32 %1802, 1
  store i32 %1805, ptr %1803, align 4, !tbaa !5
  %1806 = getelementptr inbounds i32, ptr %7, i64 %1804
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %6, i64 %1804
  br label %1819

1809:                                             ; preds = %1783
  %1810 = icmp eq i32 %1786, %1789
  br i1 %1810, label %1811, label %1817

1811:                                             ; preds = %1809
  store i32 0, ptr %1785, align 4, !tbaa !5
  %1812 = getelementptr inbounds i32, ptr %8, i64 %1784
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %6, i64 %1784
  store i32 %1813, ptr %1814, align 4, !tbaa !5
  %1815 = add nuw nsw i64 %1784, 1
  %1816 = icmp eq i64 %1815, %1545
  br i1 %1816, label %1824, label %1783, !llvm.loop !1002

1817:                                             ; preds = %1779, %1809
  %1818 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1819:                                             ; preds = %1792, %1801
  %1820 = phi ptr [ %1808, %1801 ], [ %1785, %1792 ]
  %1821 = phi i32 [ %1807, %1801 ], [ 1, %1792 ]
  %1822 = load i32, ptr %1820, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, %1821
  store i32 %1823, ptr %1820, align 4, !tbaa !5
  br label %1824

1824:                                             ; preds = %1811, %1819, %1781, %1766
  %1825 = icmp eq i32 %1773, %5
  br i1 %1825, label %5437, label %1689, !llvm.loop !1003

1826:                                             ; preds = %1235
  %1827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

1828:                                             ; preds = %18
  %1829 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1830 = load ptr, ptr %1829, align 8, !tbaa !9
  %1831 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1832 = load ptr, ptr %1831, align 8, !tbaa !9
  store i16 0, ptr %1832, align 2, !tbaa !78
  %1833 = icmp eq i32 %13, 0
  br i1 %1833, label %1834, label %1837

1834:                                             ; preds = %1828
  %1835 = load double, ptr %1830, align 8, !tbaa !18
  %1836 = fptosi double %1835 to i16
  store i16 %1836, ptr %1832, align 2, !tbaa !78
  br label %5437

1837:                                             ; preds = %1828
  switch i32 %1, label %2432 [
    i32 1, label %1838
    i32 0, label %2140
  ]

1838:                                             ; preds = %1837
  %1839 = getelementptr inbounds i32, ptr %3, i64 %19
  %1840 = load i32, ptr %1839, align 4, !tbaa !5
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp sgt i32 %5, 0
  br i1 %1841, label %1852, label %1843

1843:                                             ; preds = %1838
  br i1 %1842, label %1844, label %5437

1844:                                             ; preds = %1843
  %1845 = icmp sgt i32 %13, 1
  %1846 = icmp sgt i32 %13, 0
  %1847 = add i32 %13, -2
  %1848 = zext i32 %1847 to i64
  %1849 = zext i32 %13 to i64
  %1850 = add nuw i32 %5, 1
  %1851 = icmp eq i32 %13, 1
  br label %1999

1852:                                             ; preds = %1838
  br i1 %1842, label %1853, label %5437

1853:                                             ; preds = %1852
  %1854 = icmp sgt i32 %13, 1
  %1855 = icmp sgt i32 %13, 0
  %1856 = add i32 %13, -2
  %1857 = zext i32 %1856 to i64
  %1858 = zext i32 %13 to i64
  %1859 = add nuw i32 %5, 1
  %1860 = icmp eq i32 %13, 1
  br label %1861

1861:                                             ; preds = %1853, %1997
  %1862 = phi i16 [ 0, %1853 ], [ %1947, %1997 ]
  %1863 = phi i32 [ 0, %1853 ], [ %1949, %1997 ]
  %1864 = phi double [ 0.000000e+00, %1853 ], [ %1948, %1997 ]
  %1865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1854, label %1866, label %1935

1866:                                             ; preds = %1861, %1925
  %1867 = phi i32 [ %1934, %1925 ], [ 0, %1861 ]
  %1868 = phi i64 [ %1876, %1925 ], [ %1858, %1861 ]
  %1869 = phi i64 [ %1933, %1925 ], [ %1857, %1861 ]
  %1870 = phi i32 [ %1931, %1925 ], [ %1865, %1861 ]
  %1871 = sub i32 %1856, %1867
  %1872 = tail call i32 @llvm.smin.i32(i32 %1871, i32 0)
  %1873 = sub i32 %1871, %1872
  %1874 = zext i32 %1873 to i64
  %1875 = add nuw nsw i64 %1874, 1
  %1876 = add nsw i64 %1868, -1
  %1877 = icmp ult i32 %1873, 31
  br i1 %1877, label %1913, label %1878

1878:                                             ; preds = %1866
  %1879 = and i64 %1875, 8589934560
  %1880 = sub i64 %1869, %1879
  br label %1881

1881:                                             ; preds = %1881, %1878
  %1882 = phi i64 [ 0, %1878 ], [ %1905, %1881 ]
  %1883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1901, %1881 ]
  %1884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1902, %1881 ]
  %1885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1903, %1881 ]
  %1886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1904, %1881 ]
  %1887 = sub i64 %1869, %1882
  %1888 = getelementptr inbounds i32, ptr %9, i64 %1887
  %1889 = getelementptr inbounds i32, ptr %1888, i64 -7
  %1890 = load <8 x i32>, ptr %1889, align 4, !tbaa !5
  %1891 = shufflevector <8 x i32> %1890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1892 = getelementptr inbounds i32, ptr %1888, i64 -15
  %1893 = load <8 x i32>, ptr %1892, align 4, !tbaa !5
  %1894 = shufflevector <8 x i32> %1893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1895 = getelementptr inbounds i32, ptr %1888, i64 -23
  %1896 = load <8 x i32>, ptr %1895, align 4, !tbaa !5
  %1897 = shufflevector <8 x i32> %1896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1898 = getelementptr inbounds i32, ptr %1888, i64 -31
  %1899 = load <8 x i32>, ptr %1898, align 4, !tbaa !5
  %1900 = shufflevector <8 x i32> %1899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1901 = mul <8 x i32> %1891, %1883
  %1902 = mul <8 x i32> %1894, %1884
  %1903 = mul <8 x i32> %1897, %1885
  %1904 = mul <8 x i32> %1900, %1886
  %1905 = add nuw i64 %1882, 32
  %1906 = icmp eq i64 %1905, %1879
  br i1 %1906, label %1907, label %1881, !llvm.loop !1004

1907:                                             ; preds = %1881
  %1908 = mul <8 x i32> %1902, %1901
  %1909 = mul <8 x i32> %1903, %1908
  %1910 = mul <8 x i32> %1904, %1909
  %1911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1910)
  %1912 = icmp eq i64 %1875, %1879
  br i1 %1912, label %1925, label %1913

1913:                                             ; preds = %1866, %1907
  %1914 = phi i64 [ %1869, %1866 ], [ %1880, %1907 ]
  %1915 = phi i32 [ 1, %1866 ], [ %1911, %1907 ]
  br label %1916

1916:                                             ; preds = %1913, %1916
  %1917 = phi i64 [ %1922, %1916 ], [ %1914, %1913 ]
  %1918 = phi i32 [ %1921, %1916 ], [ %1915, %1913 ]
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1917
  %1920 = load i32, ptr %1919, align 4, !tbaa !5
  %1921 = mul nsw i32 %1920, %1918
  %1922 = add nsw i64 %1917, -1
  %1923 = trunc i64 %1917 to i32
  %1924 = icmp sgt i32 %1923, 0
  br i1 %1924, label %1916, label %1925, !llvm.loop !1005

1925:                                             ; preds = %1916, %1907
  %1926 = phi i32 [ %1911, %1907 ], [ %1921, %1916 ]
  %1927 = and i64 %1876, 4294967295
  %1928 = getelementptr inbounds i32, ptr %6, i64 %1927
  %1929 = load i32, ptr %1928, align 4, !tbaa !5
  %1930 = mul nsw i32 %1929, %1926
  %1931 = add nsw i32 %1930, %1870
  %1932 = icmp sgt i64 %1868, 2
  %1933 = add nsw i64 %1869, -1
  %1934 = add i32 %1867, 1
  br i1 %1932, label %1866, label %1935, !llvm.loop !1006

1935:                                             ; preds = %1925, %1861
  %1936 = phi i32 [ %1865, %1861 ], [ %1931, %1925 ]
  %1937 = sext i32 %1936 to i64
  %1938 = getelementptr inbounds double, ptr %2, i64 %1937
  %1939 = load double, ptr %1938, align 8, !tbaa !18
  %1940 = getelementptr inbounds double, ptr %1830, i64 %1937
  %1941 = load double, ptr %1940, align 8, !tbaa !18
  %1942 = fptosi double %1941 to i16
  %1943 = sitofp i16 %1862 to double
  %1944 = sitofp i16 %1942 to double
  %1945 = fmul fast double %1939, %1944
  %1946 = fadd fast double %1945, %1943
  %1947 = fptosi double %1946 to i16
  %1948 = fadd fast double %1939, %1864
  %1949 = add nuw nsw i32 %1863, 1
  br i1 %1855, label %1950, label %1997

1950:                                             ; preds = %1935
  %1951 = load i32, ptr %4, align 4, !tbaa !5
  %1952 = load i32, ptr %12, align 4, !tbaa !5
  %1953 = add nsw i32 %1952, -1
  %1954 = icmp slt i32 %1951, %1953
  br i1 %1954, label %1974, label %1955

1955:                                             ; preds = %1950
  %1956 = icmp eq i32 %1951, %1953
  br i1 %1956, label %1957, label %1990

1957:                                             ; preds = %1955
  store i32 0, ptr %4, align 4, !tbaa !5
  %1958 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1958, ptr %6, align 4, !tbaa !5
  br i1 %1860, label %1997, label %1959

1959:                                             ; preds = %1957, %1984
  %1960 = phi i64 [ %1988, %1984 ], [ 1, %1957 ]
  %1961 = getelementptr inbounds i32, ptr %4, i64 %1960
  %1962 = load i32, ptr %1961, align 4, !tbaa !5
  %1963 = getelementptr inbounds i32, ptr %12, i64 %1960
  %1964 = load i32, ptr %1963, align 4, !tbaa !5
  %1965 = add nsw i32 %1964, -1
  %1966 = icmp slt i32 %1962, %1965
  br i1 %1966, label %1967, label %1982

1967:                                             ; preds = %1959
  br i1 %1954, label %1974, label %1968

1968:                                             ; preds = %1967
  %1969 = getelementptr inbounds i32, ptr %7, i64 %1960
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %6, i64 %1960
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, %1970
  store i32 %1973, ptr %1971, align 4, !tbaa !5
  br label %1992

1974:                                             ; preds = %1950, %1967
  %1975 = phi i32 [ %1962, %1967 ], [ %1951, %1950 ]
  %1976 = phi ptr [ %1961, %1967 ], [ %4, %1950 ]
  %1977 = phi i64 [ %1960, %1967 ], [ 0, %1950 ]
  %1978 = add nsw i32 %1975, 1
  store i32 %1978, ptr %1976, align 4, !tbaa !5
  %1979 = getelementptr inbounds i32, ptr %7, i64 %1977
  %1980 = load i32, ptr %1979, align 4, !tbaa !5
  %1981 = getelementptr inbounds i32, ptr %6, i64 %1977
  br label %1992

1982:                                             ; preds = %1959
  %1983 = icmp eq i32 %1962, %1965
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  store i32 0, ptr %1961, align 4, !tbaa !5
  %1985 = getelementptr inbounds i32, ptr %8, i64 %1960
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %6, i64 %1960
  store i32 %1986, ptr %1987, align 4, !tbaa !5
  %1988 = add nuw nsw i64 %1960, 1
  %1989 = icmp eq i64 %1988, %1858
  br i1 %1989, label %1997, label %1959, !llvm.loop !1007

1990:                                             ; preds = %1955, %1982
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  %1991 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1992:                                             ; preds = %1968, %1974
  %1993 = phi ptr [ %1981, %1974 ], [ %1961, %1968 ]
  %1994 = phi i32 [ %1980, %1974 ], [ 1, %1968 ]
  %1995 = load i32, ptr %1993, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1994
  store i32 %1996, ptr %1993, align 4, !tbaa !5
  br label %1997

1997:                                             ; preds = %1984, %1992, %1957, %1935
  %1998 = icmp eq i32 %1949, %5
  br i1 %1998, label %5431, label %1861, !llvm.loop !1008

1999:                                             ; preds = %1844, %2138
  %2000 = phi i32 [ 0, %1844 ], [ %2085, %2138 ]
  %2001 = phi i32 [ 0, %1844 ], [ %2087, %2138 ]
  %2002 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1845, label %2003, label %2072

2003:                                             ; preds = %1999, %2062
  %2004 = phi i32 [ %2071, %2062 ], [ 0, %1999 ]
  %2005 = phi i64 [ %2013, %2062 ], [ %1849, %1999 ]
  %2006 = phi i64 [ %2070, %2062 ], [ %1848, %1999 ]
  %2007 = phi i32 [ %2068, %2062 ], [ %2002, %1999 ]
  %2008 = sub i32 %1847, %2004
  %2009 = tail call i32 @llvm.smin.i32(i32 %2008, i32 0)
  %2010 = sub i32 %2008, %2009
  %2011 = zext i32 %2010 to i64
  %2012 = add nuw nsw i64 %2011, 1
  %2013 = add nsw i64 %2005, -1
  %2014 = icmp ult i32 %2010, 31
  br i1 %2014, label %2050, label %2015

2015:                                             ; preds = %2003
  %2016 = and i64 %2012, 8589934560
  %2017 = sub i64 %2006, %2016
  br label %2018

2018:                                             ; preds = %2018, %2015
  %2019 = phi i64 [ 0, %2015 ], [ %2042, %2018 ]
  %2020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2038, %2018 ]
  %2021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2039, %2018 ]
  %2022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2040, %2018 ]
  %2023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2041, %2018 ]
  %2024 = sub i64 %2006, %2019
  %2025 = getelementptr inbounds i32, ptr %11, i64 %2024
  %2026 = getelementptr inbounds i32, ptr %2025, i64 -7
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = getelementptr inbounds i32, ptr %2025, i64 -15
  %2030 = load <8 x i32>, ptr %2029, align 4, !tbaa !5
  %2031 = shufflevector <8 x i32> %2030, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2032 = getelementptr inbounds i32, ptr %2025, i64 -23
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = getelementptr inbounds i32, ptr %2025, i64 -31
  %2036 = load <8 x i32>, ptr %2035, align 4, !tbaa !5
  %2037 = shufflevector <8 x i32> %2036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2038 = mul <8 x i32> %2028, %2020
  %2039 = mul <8 x i32> %2031, %2021
  %2040 = mul <8 x i32> %2034, %2022
  %2041 = mul <8 x i32> %2037, %2023
  %2042 = add nuw i64 %2019, 32
  %2043 = icmp eq i64 %2042, %2016
  br i1 %2043, label %2044, label %2018, !llvm.loop !1009

2044:                                             ; preds = %2018
  %2045 = mul <8 x i32> %2039, %2038
  %2046 = mul <8 x i32> %2040, %2045
  %2047 = mul <8 x i32> %2041, %2046
  %2048 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2047)
  %2049 = icmp eq i64 %2012, %2016
  br i1 %2049, label %2062, label %2050

2050:                                             ; preds = %2003, %2044
  %2051 = phi i64 [ %2006, %2003 ], [ %2017, %2044 ]
  %2052 = phi i32 [ 1, %2003 ], [ %2048, %2044 ]
  br label %2053

2053:                                             ; preds = %2050, %2053
  %2054 = phi i64 [ %2059, %2053 ], [ %2051, %2050 ]
  %2055 = phi i32 [ %2058, %2053 ], [ %2052, %2050 ]
  %2056 = getelementptr inbounds i32, ptr %11, i64 %2054
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = mul nsw i32 %2057, %2055
  %2059 = add nsw i64 %2054, -1
  %2060 = trunc i64 %2054 to i32
  %2061 = icmp sgt i32 %2060, 0
  br i1 %2061, label %2053, label %2062, !llvm.loop !1010

2062:                                             ; preds = %2053, %2044
  %2063 = phi i32 [ %2048, %2044 ], [ %2058, %2053 ]
  %2064 = and i64 %2013, 4294967295
  %2065 = getelementptr inbounds i32, ptr %6, i64 %2064
  %2066 = load i32, ptr %2065, align 4, !tbaa !5
  %2067 = mul nsw i32 %2066, %2063
  %2068 = add nsw i32 %2067, %2007
  %2069 = icmp sgt i64 %2005, 2
  %2070 = add nsw i64 %2006, -1
  %2071 = add i32 %2004, 1
  br i1 %2069, label %2003, label %2072, !llvm.loop !1011

2072:                                             ; preds = %2062, %1999
  %2073 = phi i32 [ %2002, %1999 ], [ %2068, %2062 ]
  %2074 = icmp slt i32 %2073, %5
  br i1 %2074, label %2077, label %2075

2075:                                             ; preds = %2072
  %2076 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2077:                                             ; preds = %2072
  %2078 = sext i32 %2073 to i64
  %2079 = getelementptr inbounds double, ptr %1830, i64 %2078
  %2080 = load double, ptr %2079, align 8, !tbaa !18
  %2081 = fptosi double %2080 to i16
  %2082 = shl i32 %2000, 16
  %2083 = ashr exact i32 %2082, 16
  %2084 = sext i16 %2081 to i32
  %2085 = add nsw i32 %2083, %2084
  %2086 = trunc i32 %2085 to i16
  store i16 %2086, ptr %1832, align 2, !tbaa !78
  %2087 = add nuw nsw i32 %2001, 1
  br i1 %1846, label %2088, label %2138

2088:                                             ; preds = %2077
  %2089 = load i32, ptr %4, align 4, !tbaa !5
  %2090 = load i32, ptr %12, align 4, !tbaa !5
  %2091 = add nsw i32 %2090, -1
  %2092 = icmp slt i32 %2089, %2091
  br i1 %2092, label %2115, label %2093

2093:                                             ; preds = %2088
  %2094 = icmp eq i32 %2089, %2091
  br i1 %2094, label %2095, label %2131

2095:                                             ; preds = %2093
  store i32 0, ptr %4, align 4, !tbaa !5
  %2096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2096, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %2138, label %2097

2097:                                             ; preds = %2095, %2125
  %2098 = phi i64 [ %2129, %2125 ], [ 1, %2095 ]
  %2099 = getelementptr inbounds i32, ptr %4, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %12, i64 %2098
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = add nsw i32 %2102, -1
  %2104 = icmp slt i32 %2100, %2103
  br i1 %2104, label %2105, label %2123

2105:                                             ; preds = %2097
  br i1 %2092, label %2115, label %2106

2106:                                             ; preds = %2105
  %2107 = shl i64 %2098, 32
  %2108 = add i64 %2107, -4294967296
  %2109 = ashr exact i64 %2108, 32
  %2110 = getelementptr inbounds i32, ptr %7, i64 %2109
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = add nsw i32 %2113, %2111
  store i32 %2114, ptr %2112, align 4, !tbaa !5
  br label %2133

2115:                                             ; preds = %2088, %2105
  %2116 = phi i32 [ %2100, %2105 ], [ %2089, %2088 ]
  %2117 = phi ptr [ %2099, %2105 ], [ %4, %2088 ]
  %2118 = phi i64 [ %2098, %2105 ], [ 0, %2088 ]
  %2119 = add nsw i32 %2116, 1
  store i32 %2119, ptr %2117, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2118
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2118
  br label %2133

2123:                                             ; preds = %2097
  %2124 = icmp eq i32 %2100, %2103
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2123
  store i32 0, ptr %2099, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %8, i64 %2098
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %6, i64 %2098
  store i32 %2127, ptr %2128, align 4, !tbaa !5
  %2129 = add nuw nsw i64 %2098, 1
  %2130 = icmp eq i64 %2129, %1849
  br i1 %2130, label %2138, label %2097, !llvm.loop !1012

2131:                                             ; preds = %2093, %2123
  %2132 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2133:                                             ; preds = %2106, %2115
  %2134 = phi ptr [ %2122, %2115 ], [ %2099, %2106 ]
  %2135 = phi i32 [ %2121, %2115 ], [ 1, %2106 ]
  %2136 = load i32, ptr %2134, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, %2135
  store i32 %2137, ptr %2134, align 4, !tbaa !5
  br label %2138

2138:                                             ; preds = %2125, %2133, %2095, %2077
  %2139 = icmp eq i32 %2087, %5
  br i1 %2139, label %5437, label %1999, !llvm.loop !1013

2140:                                             ; preds = %1837
  %2141 = getelementptr inbounds i32, ptr %3, i64 %19
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = icmp eq i32 %2142, 0
  %2144 = icmp sgt i32 %5, 0
  br i1 %2143, label %2154, label %2145

2145:                                             ; preds = %2140
  br i1 %2144, label %2146, label %5437

2146:                                             ; preds = %2145
  %2147 = icmp sgt i32 %13, 1
  %2148 = icmp sgt i32 %13, 0
  %2149 = add i32 %13, -2
  %2150 = zext i32 %2149 to i64
  %2151 = zext i32 %13 to i64
  %2152 = add nuw i32 %5, 1
  %2153 = icmp eq i32 %13, 1
  br label %2295

2154:                                             ; preds = %2140
  br i1 %2144, label %2155, label %5437

2155:                                             ; preds = %2154
  %2156 = icmp sgt i32 %13, 1
  %2157 = icmp sgt i32 %13, 0
  %2158 = add i32 %13, -2
  %2159 = zext i32 %2158 to i64
  %2160 = zext i32 %13 to i64
  %2161 = add nuw i32 %5, 1
  %2162 = icmp eq i32 %13, 1
  br label %2163

2163:                                             ; preds = %2155, %2293
  %2164 = phi i16 [ 0, %2155 ], [ %2243, %2293 ]
  %2165 = phi i32 [ 0, %2155 ], [ %2245, %2293 ]
  %2166 = phi double [ 0.000000e+00, %2155 ], [ %2244, %2293 ]
  %2167 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2156, label %2168, label %2237

2168:                                             ; preds = %2163, %2227
  %2169 = phi i32 [ %2236, %2227 ], [ 0, %2163 ]
  %2170 = phi i64 [ %2178, %2227 ], [ %2160, %2163 ]
  %2171 = phi i64 [ %2235, %2227 ], [ %2159, %2163 ]
  %2172 = phi i32 [ %2233, %2227 ], [ %2167, %2163 ]
  %2173 = sub i32 %2158, %2169
  %2174 = tail call i32 @llvm.smin.i32(i32 %2173, i32 0)
  %2175 = sub i32 %2173, %2174
  %2176 = zext i32 %2175 to i64
  %2177 = add nuw nsw i64 %2176, 1
  %2178 = add nsw i64 %2170, -1
  %2179 = icmp ult i32 %2175, 31
  br i1 %2179, label %2215, label %2180

2180:                                             ; preds = %2168
  %2181 = and i64 %2177, 8589934560
  %2182 = sub i64 %2171, %2181
  br label %2183

2183:                                             ; preds = %2183, %2180
  %2184 = phi i64 [ 0, %2180 ], [ %2207, %2183 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2203, %2183 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2204, %2183 ]
  %2187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2205, %2183 ]
  %2188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2206, %2183 ]
  %2189 = sub i64 %2171, %2184
  %2190 = getelementptr inbounds i32, ptr %9, i64 %2189
  %2191 = getelementptr inbounds i32, ptr %2190, i64 -7
  %2192 = load <8 x i32>, ptr %2191, align 4, !tbaa !5
  %2193 = shufflevector <8 x i32> %2192, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2194 = getelementptr inbounds i32, ptr %2190, i64 -15
  %2195 = load <8 x i32>, ptr %2194, align 4, !tbaa !5
  %2196 = shufflevector <8 x i32> %2195, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2197 = getelementptr inbounds i32, ptr %2190, i64 -23
  %2198 = load <8 x i32>, ptr %2197, align 4, !tbaa !5
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2200 = getelementptr inbounds i32, ptr %2190, i64 -31
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = mul <8 x i32> %2193, %2185
  %2204 = mul <8 x i32> %2196, %2186
  %2205 = mul <8 x i32> %2199, %2187
  %2206 = mul <8 x i32> %2202, %2188
  %2207 = add nuw i64 %2184, 32
  %2208 = icmp eq i64 %2207, %2181
  br i1 %2208, label %2209, label %2183, !llvm.loop !1014

2209:                                             ; preds = %2183
  %2210 = mul <8 x i32> %2204, %2203
  %2211 = mul <8 x i32> %2205, %2210
  %2212 = mul <8 x i32> %2206, %2211
  %2213 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2212)
  %2214 = icmp eq i64 %2177, %2181
  br i1 %2214, label %2227, label %2215

2215:                                             ; preds = %2168, %2209
  %2216 = phi i64 [ %2171, %2168 ], [ %2182, %2209 ]
  %2217 = phi i32 [ 1, %2168 ], [ %2213, %2209 ]
  br label %2218

2218:                                             ; preds = %2215, %2218
  %2219 = phi i64 [ %2224, %2218 ], [ %2216, %2215 ]
  %2220 = phi i32 [ %2223, %2218 ], [ %2217, %2215 ]
  %2221 = getelementptr inbounds i32, ptr %9, i64 %2219
  %2222 = load i32, ptr %2221, align 4, !tbaa !5
  %2223 = mul nsw i32 %2222, %2220
  %2224 = add nsw i64 %2219, -1
  %2225 = trunc i64 %2219 to i32
  %2226 = icmp sgt i32 %2225, 0
  br i1 %2226, label %2218, label %2227, !llvm.loop !1015

2227:                                             ; preds = %2218, %2209
  %2228 = phi i32 [ %2213, %2209 ], [ %2223, %2218 ]
  %2229 = and i64 %2178, 4294967295
  %2230 = getelementptr inbounds i32, ptr %6, i64 %2229
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2228
  %2233 = add nsw i32 %2232, %2172
  %2234 = icmp sgt i64 %2170, 2
  %2235 = add nsw i64 %2171, -1
  %2236 = add i32 %2169, 1
  br i1 %2234, label %2168, label %2237, !llvm.loop !1016

2237:                                             ; preds = %2227, %2163
  %2238 = phi i32 [ %2167, %2163 ], [ %2233, %2227 ]
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds double, ptr %1830, i64 %2239
  %2241 = load double, ptr %2240, align 8, !tbaa !18
  %2242 = fptosi double %2241 to i16
  %2243 = add i16 %2164, %2242
  %2244 = fadd fast double %2166, 1.000000e+00
  %2245 = add nuw nsw i32 %2165, 1
  br i1 %2157, label %2246, label %2293

2246:                                             ; preds = %2237
  %2247 = load i32, ptr %4, align 4, !tbaa !5
  %2248 = load i32, ptr %12, align 4, !tbaa !5
  %2249 = add nsw i32 %2248, -1
  %2250 = icmp slt i32 %2247, %2249
  br i1 %2250, label %2270, label %2251

2251:                                             ; preds = %2246
  %2252 = icmp eq i32 %2247, %2249
  br i1 %2252, label %2253, label %2286

2253:                                             ; preds = %2251
  store i32 0, ptr %4, align 4, !tbaa !5
  %2254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2254, ptr %6, align 4, !tbaa !5
  br i1 %2162, label %2293, label %2255

2255:                                             ; preds = %2253, %2280
  %2256 = phi i64 [ %2284, %2280 ], [ 1, %2253 ]
  %2257 = getelementptr inbounds i32, ptr %4, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %12, i64 %2256
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = add nsw i32 %2260, -1
  %2262 = icmp slt i32 %2258, %2261
  br i1 %2262, label %2263, label %2278

2263:                                             ; preds = %2255
  br i1 %2250, label %2270, label %2264

2264:                                             ; preds = %2263
  %2265 = getelementptr inbounds i32, ptr %7, i64 %2256
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2268 = load i32, ptr %2267, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, %2266
  store i32 %2269, ptr %2267, align 4, !tbaa !5
  br label %2288

2270:                                             ; preds = %2246, %2263
  %2271 = phi i32 [ %2258, %2263 ], [ %2247, %2246 ]
  %2272 = phi ptr [ %2257, %2263 ], [ %4, %2246 ]
  %2273 = phi i64 [ %2256, %2263 ], [ 0, %2246 ]
  %2274 = add nsw i32 %2271, 1
  store i32 %2274, ptr %2272, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %7, i64 %2273
  %2276 = load i32, ptr %2275, align 4, !tbaa !5
  %2277 = getelementptr inbounds i32, ptr %6, i64 %2273
  br label %2288

2278:                                             ; preds = %2255
  %2279 = icmp eq i32 %2258, %2261
  br i1 %2279, label %2280, label %2286

2280:                                             ; preds = %2278
  store i32 0, ptr %2257, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %8, i64 %2256
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2256
  store i32 %2282, ptr %2283, align 4, !tbaa !5
  %2284 = add nuw nsw i64 %2256, 1
  %2285 = icmp eq i64 %2284, %2160
  br i1 %2285, label %2293, label %2255, !llvm.loop !1017

2286:                                             ; preds = %2251, %2278
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  %2287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2288:                                             ; preds = %2264, %2270
  %2289 = phi ptr [ %2277, %2270 ], [ %2257, %2264 ]
  %2290 = phi i32 [ %2276, %2270 ], [ 1, %2264 ]
  %2291 = load i32, ptr %2289, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, %2290
  store i32 %2292, ptr %2289, align 4, !tbaa !5
  br label %2293

2293:                                             ; preds = %2280, %2288, %2253, %2237
  %2294 = icmp eq i32 %2245, %5
  br i1 %2294, label %5432, label %2163, !llvm.loop !1018

2295:                                             ; preds = %2146, %2430
  %2296 = phi i16 [ 0, %2146 ], [ %2378, %2430 ]
  %2297 = phi i32 [ 0, %2146 ], [ %2379, %2430 ]
  %2298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2147, label %2299, label %2368

2299:                                             ; preds = %2295, %2358
  %2300 = phi i32 [ %2367, %2358 ], [ 0, %2295 ]
  %2301 = phi i64 [ %2309, %2358 ], [ %2151, %2295 ]
  %2302 = phi i64 [ %2366, %2358 ], [ %2150, %2295 ]
  %2303 = phi i32 [ %2364, %2358 ], [ %2298, %2295 ]
  %2304 = sub i32 %2149, %2300
  %2305 = tail call i32 @llvm.smin.i32(i32 %2304, i32 0)
  %2306 = sub i32 %2304, %2305
  %2307 = zext i32 %2306 to i64
  %2308 = add nuw nsw i64 %2307, 1
  %2309 = add nsw i64 %2301, -1
  %2310 = icmp ult i32 %2306, 31
  br i1 %2310, label %2346, label %2311

2311:                                             ; preds = %2299
  %2312 = and i64 %2308, 8589934560
  %2313 = sub i64 %2302, %2312
  br label %2314

2314:                                             ; preds = %2314, %2311
  %2315 = phi i64 [ 0, %2311 ], [ %2338, %2314 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2334, %2314 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2335, %2314 ]
  %2318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2336, %2314 ]
  %2319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2337, %2314 ]
  %2320 = sub i64 %2302, %2315
  %2321 = getelementptr inbounds i32, ptr %11, i64 %2320
  %2322 = getelementptr inbounds i32, ptr %2321, i64 -7
  %2323 = load <8 x i32>, ptr %2322, align 4, !tbaa !5
  %2324 = shufflevector <8 x i32> %2323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2325 = getelementptr inbounds i32, ptr %2321, i64 -15
  %2326 = load <8 x i32>, ptr %2325, align 4, !tbaa !5
  %2327 = shufflevector <8 x i32> %2326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2328 = getelementptr inbounds i32, ptr %2321, i64 -23
  %2329 = load <8 x i32>, ptr %2328, align 4, !tbaa !5
  %2330 = shufflevector <8 x i32> %2329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2331 = getelementptr inbounds i32, ptr %2321, i64 -31
  %2332 = load <8 x i32>, ptr %2331, align 4, !tbaa !5
  %2333 = shufflevector <8 x i32> %2332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2334 = mul <8 x i32> %2324, %2316
  %2335 = mul <8 x i32> %2327, %2317
  %2336 = mul <8 x i32> %2330, %2318
  %2337 = mul <8 x i32> %2333, %2319
  %2338 = add nuw i64 %2315, 32
  %2339 = icmp eq i64 %2338, %2312
  br i1 %2339, label %2340, label %2314, !llvm.loop !1019

2340:                                             ; preds = %2314
  %2341 = mul <8 x i32> %2335, %2334
  %2342 = mul <8 x i32> %2336, %2341
  %2343 = mul <8 x i32> %2337, %2342
  %2344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2343)
  %2345 = icmp eq i64 %2308, %2312
  br i1 %2345, label %2358, label %2346

2346:                                             ; preds = %2299, %2340
  %2347 = phi i64 [ %2302, %2299 ], [ %2313, %2340 ]
  %2348 = phi i32 [ 1, %2299 ], [ %2344, %2340 ]
  br label %2349

2349:                                             ; preds = %2346, %2349
  %2350 = phi i64 [ %2355, %2349 ], [ %2347, %2346 ]
  %2351 = phi i32 [ %2354, %2349 ], [ %2348, %2346 ]
  %2352 = getelementptr inbounds i32, ptr %11, i64 %2350
  %2353 = load i32, ptr %2352, align 4, !tbaa !5
  %2354 = mul nsw i32 %2353, %2351
  %2355 = add nsw i64 %2350, -1
  %2356 = trunc i64 %2350 to i32
  %2357 = icmp sgt i32 %2356, 0
  br i1 %2357, label %2349, label %2358, !llvm.loop !1020

2358:                                             ; preds = %2349, %2340
  %2359 = phi i32 [ %2344, %2340 ], [ %2354, %2349 ]
  %2360 = and i64 %2309, 4294967295
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !5
  %2363 = mul nsw i32 %2362, %2359
  %2364 = add nsw i32 %2363, %2303
  %2365 = icmp sgt i64 %2301, 2
  %2366 = add nsw i64 %2302, -1
  %2367 = add i32 %2300, 1
  br i1 %2365, label %2299, label %2368, !llvm.loop !1021

2368:                                             ; preds = %2358, %2295
  %2369 = phi i32 [ %2298, %2295 ], [ %2364, %2358 ]
  %2370 = icmp slt i32 %2369, %5
  br i1 %2370, label %2373, label %2371

2371:                                             ; preds = %2368
  %2372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2373:                                             ; preds = %2368
  %2374 = sext i32 %2369 to i64
  %2375 = getelementptr inbounds double, ptr %1830, i64 %2374
  %2376 = load double, ptr %2375, align 8, !tbaa !18
  %2377 = fptosi double %2376 to i16
  %2378 = add i16 %2296, %2377
  store i16 %2378, ptr %1832, align 2, !tbaa !78
  %2379 = add nuw nsw i32 %2297, 1
  br i1 %2148, label %2380, label %2430

2380:                                             ; preds = %2373
  %2381 = load i32, ptr %4, align 4, !tbaa !5
  %2382 = load i32, ptr %12, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, -1
  %2384 = icmp slt i32 %2381, %2383
  br i1 %2384, label %2407, label %2385

2385:                                             ; preds = %2380
  %2386 = icmp eq i32 %2381, %2383
  br i1 %2386, label %2387, label %2423

2387:                                             ; preds = %2385
  store i32 0, ptr %4, align 4, !tbaa !5
  %2388 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2388, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2430, label %2389

2389:                                             ; preds = %2387, %2417
  %2390 = phi i64 [ %2421, %2417 ], [ 1, %2387 ]
  %2391 = getelementptr inbounds i32, ptr %4, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = getelementptr inbounds i32, ptr %12, i64 %2390
  %2394 = load i32, ptr %2393, align 4, !tbaa !5
  %2395 = add nsw i32 %2394, -1
  %2396 = icmp slt i32 %2392, %2395
  br i1 %2396, label %2397, label %2415

2397:                                             ; preds = %2389
  br i1 %2384, label %2407, label %2398

2398:                                             ; preds = %2397
  %2399 = shl i64 %2390, 32
  %2400 = add i64 %2399, -4294967296
  %2401 = ashr exact i64 %2400, 32
  %2402 = getelementptr inbounds i32, ptr %7, i64 %2401
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2390
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, %2403
  store i32 %2406, ptr %2404, align 4, !tbaa !5
  br label %2425

2407:                                             ; preds = %2380, %2397
  %2408 = phi i32 [ %2392, %2397 ], [ %2381, %2380 ]
  %2409 = phi ptr [ %2391, %2397 ], [ %4, %2380 ]
  %2410 = phi i64 [ %2390, %2397 ], [ 0, %2380 ]
  %2411 = add nsw i32 %2408, 1
  store i32 %2411, ptr %2409, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %7, i64 %2410
  %2413 = load i32, ptr %2412, align 4, !tbaa !5
  %2414 = getelementptr inbounds i32, ptr %6, i64 %2410
  br label %2425

2415:                                             ; preds = %2389
  %2416 = icmp eq i32 %2392, %2395
  br i1 %2416, label %2417, label %2423

2417:                                             ; preds = %2415
  store i32 0, ptr %2391, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %8, i64 %2390
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2390
  store i32 %2419, ptr %2420, align 4, !tbaa !5
  %2421 = add nuw nsw i64 %2390, 1
  %2422 = icmp eq i64 %2421, %2151
  br i1 %2422, label %2430, label %2389, !llvm.loop !1022

2423:                                             ; preds = %2385, %2415
  %2424 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2425:                                             ; preds = %2398, %2407
  %2426 = phi ptr [ %2414, %2407 ], [ %2391, %2398 ]
  %2427 = phi i32 [ %2413, %2407 ], [ 1, %2398 ]
  %2428 = load i32, ptr %2426, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2427
  store i32 %2429, ptr %2426, align 4, !tbaa !5
  br label %2430

2430:                                             ; preds = %2417, %2425, %2387, %2373
  %2431 = icmp eq i32 %2379, %5
  br i1 %2431, label %5437, label %2295, !llvm.loop !1023

2432:                                             ; preds = %1837
  %2433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

2434:                                             ; preds = %18
  %2435 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  %2437 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2438 = load ptr, ptr %2437, align 8, !tbaa !9
  store i32 0, ptr %2438, align 4, !tbaa !5
  %2439 = icmp eq i32 %13, 0
  br i1 %2439, label %2440, label %2443

2440:                                             ; preds = %2434
  %2441 = load double, ptr %2436, align 8, !tbaa !18
  %2442 = fptosi double %2441 to i32
  store i32 %2442, ptr %2438, align 4, !tbaa !5
  br label %5437

2443:                                             ; preds = %2434
  switch i32 %1, label %3034 [
    i32 1, label %2444
    i32 0, label %2742
  ]

2444:                                             ; preds = %2443
  %2445 = getelementptr inbounds i32, ptr %3, i64 %19
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp sgt i32 %5, 0
  br i1 %2447, label %2458, label %2449

2449:                                             ; preds = %2444
  br i1 %2448, label %2450, label %5437

2450:                                             ; preds = %2449
  %2451 = icmp sgt i32 %13, 1
  %2452 = icmp sgt i32 %13, 0
  %2453 = add i32 %13, -2
  %2454 = zext i32 %2453 to i64
  %2455 = zext i32 %13 to i64
  %2456 = add nuw i32 %5, 1
  %2457 = icmp eq i32 %13, 1
  br label %2605

2458:                                             ; preds = %2444
  br i1 %2448, label %2459, label %5437

2459:                                             ; preds = %2458
  %2460 = icmp sgt i32 %13, 1
  %2461 = icmp sgt i32 %13, 0
  %2462 = add i32 %13, -2
  %2463 = zext i32 %2462 to i64
  %2464 = zext i32 %13 to i64
  %2465 = add nuw i32 %5, 1
  %2466 = icmp eq i32 %13, 1
  br label %2467

2467:                                             ; preds = %2459, %2603
  %2468 = phi i32 [ 0, %2459 ], [ %2555, %2603 ]
  %2469 = phi double [ 0.000000e+00, %2459 ], [ %2554, %2603 ]
  %2470 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2460, label %2471, label %2540

2471:                                             ; preds = %2467, %2530
  %2472 = phi i32 [ %2539, %2530 ], [ 0, %2467 ]
  %2473 = phi i64 [ %2481, %2530 ], [ %2464, %2467 ]
  %2474 = phi i64 [ %2538, %2530 ], [ %2463, %2467 ]
  %2475 = phi i32 [ %2536, %2530 ], [ %2470, %2467 ]
  %2476 = sub i32 %2462, %2472
  %2477 = tail call i32 @llvm.smin.i32(i32 %2476, i32 0)
  %2478 = sub i32 %2476, %2477
  %2479 = zext i32 %2478 to i64
  %2480 = add nuw nsw i64 %2479, 1
  %2481 = add nsw i64 %2473, -1
  %2482 = icmp ult i32 %2478, 31
  br i1 %2482, label %2518, label %2483

2483:                                             ; preds = %2471
  %2484 = and i64 %2480, 8589934560
  %2485 = sub i64 %2474, %2484
  br label %2486

2486:                                             ; preds = %2486, %2483
  %2487 = phi i64 [ 0, %2483 ], [ %2510, %2486 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2506, %2486 ]
  %2489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2507, %2486 ]
  %2490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2508, %2486 ]
  %2491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2509, %2486 ]
  %2492 = sub i64 %2474, %2487
  %2493 = getelementptr inbounds i32, ptr %9, i64 %2492
  %2494 = getelementptr inbounds i32, ptr %2493, i64 -7
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2493, i64 -15
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2493, i64 -23
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = getelementptr inbounds i32, ptr %2493, i64 -31
  %2504 = load <8 x i32>, ptr %2503, align 4, !tbaa !5
  %2505 = shufflevector <8 x i32> %2504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2506 = mul <8 x i32> %2496, %2488
  %2507 = mul <8 x i32> %2499, %2489
  %2508 = mul <8 x i32> %2502, %2490
  %2509 = mul <8 x i32> %2505, %2491
  %2510 = add nuw i64 %2487, 32
  %2511 = icmp eq i64 %2510, %2484
  br i1 %2511, label %2512, label %2486, !llvm.loop !1024

2512:                                             ; preds = %2486
  %2513 = mul <8 x i32> %2507, %2506
  %2514 = mul <8 x i32> %2508, %2513
  %2515 = mul <8 x i32> %2509, %2514
  %2516 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2515)
  %2517 = icmp eq i64 %2480, %2484
  br i1 %2517, label %2530, label %2518

2518:                                             ; preds = %2471, %2512
  %2519 = phi i64 [ %2474, %2471 ], [ %2485, %2512 ]
  %2520 = phi i32 [ 1, %2471 ], [ %2516, %2512 ]
  br label %2521

2521:                                             ; preds = %2518, %2521
  %2522 = phi i64 [ %2527, %2521 ], [ %2519, %2518 ]
  %2523 = phi i32 [ %2526, %2521 ], [ %2520, %2518 ]
  %2524 = getelementptr inbounds i32, ptr %9, i64 %2522
  %2525 = load i32, ptr %2524, align 4, !tbaa !5
  %2526 = mul nsw i32 %2525, %2523
  %2527 = add nsw i64 %2522, -1
  %2528 = trunc i64 %2522 to i32
  %2529 = icmp sgt i32 %2528, 0
  br i1 %2529, label %2521, label %2530, !llvm.loop !1025

2530:                                             ; preds = %2521, %2512
  %2531 = phi i32 [ %2516, %2512 ], [ %2526, %2521 ]
  %2532 = and i64 %2481, 4294967295
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2532
  %2534 = load i32, ptr %2533, align 4, !tbaa !5
  %2535 = mul nsw i32 %2534, %2531
  %2536 = add nsw i32 %2535, %2475
  %2537 = icmp sgt i64 %2473, 2
  %2538 = add nsw i64 %2474, -1
  %2539 = add i32 %2472, 1
  br i1 %2537, label %2471, label %2540, !llvm.loop !1026

2540:                                             ; preds = %2530, %2467
  %2541 = phi i32 [ %2470, %2467 ], [ %2536, %2530 ]
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds double, ptr %2, i64 %2542
  %2544 = load double, ptr %2543, align 8, !tbaa !18
  %2545 = getelementptr inbounds double, ptr %2436, i64 %2542
  %2546 = load double, ptr %2545, align 8, !tbaa !18
  %2547 = fptosi double %2546 to i32
  %2548 = load i32, ptr %2438, align 4, !tbaa !5
  %2549 = sitofp i32 %2548 to double
  %2550 = sitofp i32 %2547 to double
  %2551 = fmul fast double %2544, %2550
  %2552 = fadd fast double %2551, %2549
  %2553 = fptosi double %2552 to i32
  store i32 %2553, ptr %2438, align 4, !tbaa !5
  %2554 = fadd fast double %2544, %2469
  %2555 = add nuw nsw i32 %2468, 1
  br i1 %2461, label %2556, label %2603

2556:                                             ; preds = %2540
  %2557 = load i32, ptr %4, align 4, !tbaa !5
  %2558 = load i32, ptr %12, align 4, !tbaa !5
  %2559 = add nsw i32 %2558, -1
  %2560 = icmp slt i32 %2557, %2559
  br i1 %2560, label %2580, label %2561

2561:                                             ; preds = %2556
  %2562 = icmp eq i32 %2557, %2559
  br i1 %2562, label %2563, label %2596

2563:                                             ; preds = %2561
  store i32 0, ptr %4, align 4, !tbaa !5
  %2564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2564, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2603, label %2565

2565:                                             ; preds = %2563, %2590
  %2566 = phi i64 [ %2594, %2590 ], [ 1, %2563 ]
  %2567 = getelementptr inbounds i32, ptr %4, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %12, i64 %2566
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = add nsw i32 %2570, -1
  %2572 = icmp slt i32 %2568, %2571
  br i1 %2572, label %2573, label %2588

2573:                                             ; preds = %2565
  br i1 %2560, label %2580, label %2574

2574:                                             ; preds = %2573
  %2575 = getelementptr inbounds i32, ptr %7, i64 %2566
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = add nsw i32 %2578, %2576
  store i32 %2579, ptr %2577, align 4, !tbaa !5
  br label %2598

2580:                                             ; preds = %2556, %2573
  %2581 = phi i32 [ %2568, %2573 ], [ %2557, %2556 ]
  %2582 = phi ptr [ %2567, %2573 ], [ %4, %2556 ]
  %2583 = phi i64 [ %2566, %2573 ], [ 0, %2556 ]
  %2584 = add nsw i32 %2581, 1
  store i32 %2584, ptr %2582, align 4, !tbaa !5
  %2585 = getelementptr inbounds i32, ptr %7, i64 %2583
  %2586 = load i32, ptr %2585, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %6, i64 %2583
  br label %2598

2588:                                             ; preds = %2565
  %2589 = icmp eq i32 %2568, %2571
  br i1 %2589, label %2590, label %2596

2590:                                             ; preds = %2588
  store i32 0, ptr %2567, align 4, !tbaa !5
  %2591 = getelementptr inbounds i32, ptr %8, i64 %2566
  %2592 = load i32, ptr %2591, align 4, !tbaa !5
  %2593 = getelementptr inbounds i32, ptr %6, i64 %2566
  store i32 %2592, ptr %2593, align 4, !tbaa !5
  %2594 = add nuw nsw i64 %2566, 1
  %2595 = icmp eq i64 %2594, %2464
  br i1 %2595, label %2603, label %2565, !llvm.loop !1027

2596:                                             ; preds = %2561, %2588
  %2597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2598:                                             ; preds = %2574, %2580
  %2599 = phi ptr [ %2587, %2580 ], [ %2567, %2574 ]
  %2600 = phi i32 [ %2586, %2580 ], [ 1, %2574 ]
  %2601 = load i32, ptr %2599, align 4, !tbaa !5
  %2602 = add nsw i32 %2601, %2600
  store i32 %2602, ptr %2599, align 4, !tbaa !5
  br label %2603

2603:                                             ; preds = %2590, %2598, %2563, %2540
  %2604 = icmp eq i32 %2555, %5
  br i1 %2604, label %5437, label %2467, !llvm.loop !1028

2605:                                             ; preds = %2450, %2740
  %2606 = phi i32 [ 0, %2450 ], [ %2689, %2740 ]
  %2607 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2451, label %2608, label %2677

2608:                                             ; preds = %2605, %2667
  %2609 = phi i32 [ %2676, %2667 ], [ 0, %2605 ]
  %2610 = phi i64 [ %2618, %2667 ], [ %2455, %2605 ]
  %2611 = phi i64 [ %2675, %2667 ], [ %2454, %2605 ]
  %2612 = phi i32 [ %2673, %2667 ], [ %2607, %2605 ]
  %2613 = sub i32 %2453, %2609
  %2614 = tail call i32 @llvm.smin.i32(i32 %2613, i32 0)
  %2615 = sub i32 %2613, %2614
  %2616 = zext i32 %2615 to i64
  %2617 = add nuw nsw i64 %2616, 1
  %2618 = add nsw i64 %2610, -1
  %2619 = icmp ult i32 %2615, 31
  br i1 %2619, label %2655, label %2620

2620:                                             ; preds = %2608
  %2621 = and i64 %2617, 8589934560
  %2622 = sub i64 %2611, %2621
  br label %2623

2623:                                             ; preds = %2623, %2620
  %2624 = phi i64 [ 0, %2620 ], [ %2647, %2623 ]
  %2625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2643, %2623 ]
  %2626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2644, %2623 ]
  %2627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2645, %2623 ]
  %2628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2646, %2623 ]
  %2629 = sub i64 %2611, %2624
  %2630 = getelementptr inbounds i32, ptr %11, i64 %2629
  %2631 = getelementptr inbounds i32, ptr %2630, i64 -7
  %2632 = load <8 x i32>, ptr %2631, align 4, !tbaa !5
  %2633 = shufflevector <8 x i32> %2632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2634 = getelementptr inbounds i32, ptr %2630, i64 -15
  %2635 = load <8 x i32>, ptr %2634, align 4, !tbaa !5
  %2636 = shufflevector <8 x i32> %2635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2637 = getelementptr inbounds i32, ptr %2630, i64 -23
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !5
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2630, i64 -31
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = mul <8 x i32> %2633, %2625
  %2644 = mul <8 x i32> %2636, %2626
  %2645 = mul <8 x i32> %2639, %2627
  %2646 = mul <8 x i32> %2642, %2628
  %2647 = add nuw i64 %2624, 32
  %2648 = icmp eq i64 %2647, %2621
  br i1 %2648, label %2649, label %2623, !llvm.loop !1029

2649:                                             ; preds = %2623
  %2650 = mul <8 x i32> %2644, %2643
  %2651 = mul <8 x i32> %2645, %2650
  %2652 = mul <8 x i32> %2646, %2651
  %2653 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2652)
  %2654 = icmp eq i64 %2617, %2621
  br i1 %2654, label %2667, label %2655

2655:                                             ; preds = %2608, %2649
  %2656 = phi i64 [ %2611, %2608 ], [ %2622, %2649 ]
  %2657 = phi i32 [ 1, %2608 ], [ %2653, %2649 ]
  br label %2658

2658:                                             ; preds = %2655, %2658
  %2659 = phi i64 [ %2664, %2658 ], [ %2656, %2655 ]
  %2660 = phi i32 [ %2663, %2658 ], [ %2657, %2655 ]
  %2661 = getelementptr inbounds i32, ptr %11, i64 %2659
  %2662 = load i32, ptr %2661, align 4, !tbaa !5
  %2663 = mul nsw i32 %2662, %2660
  %2664 = add nsw i64 %2659, -1
  %2665 = trunc i64 %2659 to i32
  %2666 = icmp sgt i32 %2665, 0
  br i1 %2666, label %2658, label %2667, !llvm.loop !1030

2667:                                             ; preds = %2658, %2649
  %2668 = phi i32 [ %2653, %2649 ], [ %2663, %2658 ]
  %2669 = and i64 %2618, 4294967295
  %2670 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2668
  %2673 = add nsw i32 %2672, %2612
  %2674 = icmp sgt i64 %2610, 2
  %2675 = add nsw i64 %2611, -1
  %2676 = add i32 %2609, 1
  br i1 %2674, label %2608, label %2677, !llvm.loop !1031

2677:                                             ; preds = %2667, %2605
  %2678 = phi i32 [ %2607, %2605 ], [ %2673, %2667 ]
  %2679 = icmp slt i32 %2678, %5
  br i1 %2679, label %2682, label %2680

2680:                                             ; preds = %2677
  %2681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2682:                                             ; preds = %2677
  %2683 = sext i32 %2678 to i64
  %2684 = getelementptr inbounds double, ptr %2436, i64 %2683
  %2685 = load double, ptr %2684, align 8, !tbaa !18
  %2686 = fptosi double %2685 to i32
  %2687 = load i32, ptr %2438, align 4, !tbaa !5
  %2688 = add i32 %2687, %2686
  store i32 %2688, ptr %2438, align 4, !tbaa !5
  %2689 = add nuw nsw i32 %2606, 1
  br i1 %2452, label %2690, label %2740

2690:                                             ; preds = %2682
  %2691 = load i32, ptr %4, align 4, !tbaa !5
  %2692 = load i32, ptr %12, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, -1
  %2694 = icmp slt i32 %2691, %2693
  br i1 %2694, label %2717, label %2695

2695:                                             ; preds = %2690
  %2696 = icmp eq i32 %2691, %2693
  br i1 %2696, label %2697, label %2733

2697:                                             ; preds = %2695
  store i32 0, ptr %4, align 4, !tbaa !5
  %2698 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2698, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2740, label %2699

2699:                                             ; preds = %2697, %2727
  %2700 = phi i64 [ %2731, %2727 ], [ 1, %2697 ]
  %2701 = getelementptr inbounds i32, ptr %4, i64 %2700
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = getelementptr inbounds i32, ptr %12, i64 %2700
  %2704 = load i32, ptr %2703, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, -1
  %2706 = icmp slt i32 %2702, %2705
  br i1 %2706, label %2707, label %2725

2707:                                             ; preds = %2699
  br i1 %2694, label %2717, label %2708

2708:                                             ; preds = %2707
  %2709 = shl i64 %2700, 32
  %2710 = add i64 %2709, -4294967296
  %2711 = ashr exact i64 %2710, 32
  %2712 = getelementptr inbounds i32, ptr %7, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2700
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2713
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  br label %2735

2717:                                             ; preds = %2690, %2707
  %2718 = phi i32 [ %2702, %2707 ], [ %2691, %2690 ]
  %2719 = phi ptr [ %2701, %2707 ], [ %4, %2690 ]
  %2720 = phi i64 [ %2700, %2707 ], [ 0, %2690 ]
  %2721 = add nsw i32 %2718, 1
  store i32 %2721, ptr %2719, align 4, !tbaa !5
  %2722 = getelementptr inbounds i32, ptr %7, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !5
  %2724 = getelementptr inbounds i32, ptr %6, i64 %2720
  br label %2735

2725:                                             ; preds = %2699
  %2726 = icmp eq i32 %2702, %2705
  br i1 %2726, label %2727, label %2733

2727:                                             ; preds = %2725
  store i32 0, ptr %2701, align 4, !tbaa !5
  %2728 = getelementptr inbounds i32, ptr %8, i64 %2700
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = getelementptr inbounds i32, ptr %6, i64 %2700
  store i32 %2729, ptr %2730, align 4, !tbaa !5
  %2731 = add nuw nsw i64 %2700, 1
  %2732 = icmp eq i64 %2731, %2455
  br i1 %2732, label %2740, label %2699, !llvm.loop !1032

2733:                                             ; preds = %2695, %2725
  %2734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2735:                                             ; preds = %2708, %2717
  %2736 = phi ptr [ %2724, %2717 ], [ %2701, %2708 ]
  %2737 = phi i32 [ %2723, %2717 ], [ 1, %2708 ]
  %2738 = load i32, ptr %2736, align 4, !tbaa !5
  %2739 = add nsw i32 %2738, %2737
  store i32 %2739, ptr %2736, align 4, !tbaa !5
  br label %2740

2740:                                             ; preds = %2727, %2735, %2697, %2682
  %2741 = icmp eq i32 %2689, %5
  br i1 %2741, label %5437, label %2605, !llvm.loop !1033

2742:                                             ; preds = %2443
  %2743 = getelementptr inbounds i32, ptr %3, i64 %19
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp sgt i32 %5, 0
  br i1 %2745, label %2756, label %2747

2747:                                             ; preds = %2742
  br i1 %2746, label %2748, label %5437

2748:                                             ; preds = %2747
  %2749 = icmp sgt i32 %13, 1
  %2750 = icmp sgt i32 %13, 0
  %2751 = add i32 %13, -2
  %2752 = zext i32 %2751 to i64
  %2753 = zext i32 %13 to i64
  %2754 = add nuw i32 %5, 1
  %2755 = icmp eq i32 %13, 1
  br label %2897

2756:                                             ; preds = %2742
  br i1 %2746, label %2757, label %5437

2757:                                             ; preds = %2756
  %2758 = icmp sgt i32 %13, 1
  %2759 = icmp sgt i32 %13, 0
  %2760 = add i32 %13, -2
  %2761 = zext i32 %2760 to i64
  %2762 = zext i32 %13 to i64
  %2763 = add nuw i32 %5, 1
  %2764 = icmp eq i32 %13, 1
  br label %2765

2765:                                             ; preds = %2757, %2895
  %2766 = phi i32 [ 0, %2757 ], [ %2847, %2895 ]
  %2767 = phi double [ 0.000000e+00, %2757 ], [ %2846, %2895 ]
  %2768 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2758, label %2769, label %2838

2769:                                             ; preds = %2765, %2828
  %2770 = phi i32 [ %2837, %2828 ], [ 0, %2765 ]
  %2771 = phi i64 [ %2779, %2828 ], [ %2762, %2765 ]
  %2772 = phi i64 [ %2836, %2828 ], [ %2761, %2765 ]
  %2773 = phi i32 [ %2834, %2828 ], [ %2768, %2765 ]
  %2774 = sub i32 %2760, %2770
  %2775 = tail call i32 @llvm.smin.i32(i32 %2774, i32 0)
  %2776 = sub i32 %2774, %2775
  %2777 = zext i32 %2776 to i64
  %2778 = add nuw nsw i64 %2777, 1
  %2779 = add nsw i64 %2771, -1
  %2780 = icmp ult i32 %2776, 31
  br i1 %2780, label %2816, label %2781

2781:                                             ; preds = %2769
  %2782 = and i64 %2778, 8589934560
  %2783 = sub i64 %2772, %2782
  br label %2784

2784:                                             ; preds = %2784, %2781
  %2785 = phi i64 [ 0, %2781 ], [ %2808, %2784 ]
  %2786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2804, %2784 ]
  %2787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2805, %2784 ]
  %2788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2806, %2784 ]
  %2789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2807, %2784 ]
  %2790 = sub i64 %2772, %2785
  %2791 = getelementptr inbounds i32, ptr %9, i64 %2790
  %2792 = getelementptr inbounds i32, ptr %2791, i64 -7
  %2793 = load <8 x i32>, ptr %2792, align 4, !tbaa !5
  %2794 = shufflevector <8 x i32> %2793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2795 = getelementptr inbounds i32, ptr %2791, i64 -15
  %2796 = load <8 x i32>, ptr %2795, align 4, !tbaa !5
  %2797 = shufflevector <8 x i32> %2796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2798 = getelementptr inbounds i32, ptr %2791, i64 -23
  %2799 = load <8 x i32>, ptr %2798, align 4, !tbaa !5
  %2800 = shufflevector <8 x i32> %2799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2801 = getelementptr inbounds i32, ptr %2791, i64 -31
  %2802 = load <8 x i32>, ptr %2801, align 4, !tbaa !5
  %2803 = shufflevector <8 x i32> %2802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2804 = mul <8 x i32> %2794, %2786
  %2805 = mul <8 x i32> %2797, %2787
  %2806 = mul <8 x i32> %2800, %2788
  %2807 = mul <8 x i32> %2803, %2789
  %2808 = add nuw i64 %2785, 32
  %2809 = icmp eq i64 %2808, %2782
  br i1 %2809, label %2810, label %2784, !llvm.loop !1034

2810:                                             ; preds = %2784
  %2811 = mul <8 x i32> %2805, %2804
  %2812 = mul <8 x i32> %2806, %2811
  %2813 = mul <8 x i32> %2807, %2812
  %2814 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2813)
  %2815 = icmp eq i64 %2778, %2782
  br i1 %2815, label %2828, label %2816

2816:                                             ; preds = %2769, %2810
  %2817 = phi i64 [ %2772, %2769 ], [ %2783, %2810 ]
  %2818 = phi i32 [ 1, %2769 ], [ %2814, %2810 ]
  br label %2819

2819:                                             ; preds = %2816, %2819
  %2820 = phi i64 [ %2825, %2819 ], [ %2817, %2816 ]
  %2821 = phi i32 [ %2824, %2819 ], [ %2818, %2816 ]
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2823 = load i32, ptr %2822, align 4, !tbaa !5
  %2824 = mul nsw i32 %2823, %2821
  %2825 = add nsw i64 %2820, -1
  %2826 = trunc i64 %2820 to i32
  %2827 = icmp sgt i32 %2826, 0
  br i1 %2827, label %2819, label %2828, !llvm.loop !1035

2828:                                             ; preds = %2819, %2810
  %2829 = phi i32 [ %2814, %2810 ], [ %2824, %2819 ]
  %2830 = and i64 %2779, 4294967295
  %2831 = getelementptr inbounds i32, ptr %6, i64 %2830
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = mul nsw i32 %2832, %2829
  %2834 = add nsw i32 %2833, %2773
  %2835 = icmp sgt i64 %2771, 2
  %2836 = add nsw i64 %2772, -1
  %2837 = add i32 %2770, 1
  br i1 %2835, label %2769, label %2838, !llvm.loop !1036

2838:                                             ; preds = %2828, %2765
  %2839 = phi i32 [ %2768, %2765 ], [ %2834, %2828 ]
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds double, ptr %2436, i64 %2840
  %2842 = load double, ptr %2841, align 8, !tbaa !18
  %2843 = fptosi double %2842 to i32
  %2844 = load i32, ptr %2438, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2843
  store i32 %2845, ptr %2438, align 4, !tbaa !5
  %2846 = fadd fast double %2767, 1.000000e+00
  %2847 = add nuw nsw i32 %2766, 1
  br i1 %2759, label %2848, label %2895

2848:                                             ; preds = %2838
  %2849 = load i32, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %12, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, -1
  %2852 = icmp slt i32 %2849, %2851
  br i1 %2852, label %2872, label %2853

2853:                                             ; preds = %2848
  %2854 = icmp eq i32 %2849, %2851
  br i1 %2854, label %2855, label %2888

2855:                                             ; preds = %2853
  store i32 0, ptr %4, align 4, !tbaa !5
  %2856 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2856, ptr %6, align 4, !tbaa !5
  br i1 %2764, label %2895, label %2857

2857:                                             ; preds = %2855, %2882
  %2858 = phi i64 [ %2886, %2882 ], [ 1, %2855 ]
  %2859 = getelementptr inbounds i32, ptr %4, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = getelementptr inbounds i32, ptr %12, i64 %2858
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = add nsw i32 %2862, -1
  %2864 = icmp slt i32 %2860, %2863
  br i1 %2864, label %2865, label %2880

2865:                                             ; preds = %2857
  br i1 %2852, label %2872, label %2866

2866:                                             ; preds = %2865
  %2867 = getelementptr inbounds i32, ptr %7, i64 %2858
  %2868 = load i32, ptr %2867, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = add nsw i32 %2870, %2868
  store i32 %2871, ptr %2869, align 4, !tbaa !5
  br label %2890

2872:                                             ; preds = %2848, %2865
  %2873 = phi i32 [ %2860, %2865 ], [ %2849, %2848 ]
  %2874 = phi ptr [ %2859, %2865 ], [ %4, %2848 ]
  %2875 = phi i64 [ %2858, %2865 ], [ 0, %2848 ]
  %2876 = add nsw i32 %2873, 1
  store i32 %2876, ptr %2874, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %7, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2875
  br label %2890

2880:                                             ; preds = %2857
  %2881 = icmp eq i32 %2860, %2863
  br i1 %2881, label %2882, label %2888

2882:                                             ; preds = %2880
  store i32 0, ptr %2859, align 4, !tbaa !5
  %2883 = getelementptr inbounds i32, ptr %8, i64 %2858
  %2884 = load i32, ptr %2883, align 4, !tbaa !5
  %2885 = getelementptr inbounds i32, ptr %6, i64 %2858
  store i32 %2884, ptr %2885, align 4, !tbaa !5
  %2886 = add nuw nsw i64 %2858, 1
  %2887 = icmp eq i64 %2886, %2762
  br i1 %2887, label %2895, label %2857, !llvm.loop !1037

2888:                                             ; preds = %2853, %2880
  %2889 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2890:                                             ; preds = %2866, %2872
  %2891 = phi ptr [ %2879, %2872 ], [ %2859, %2866 ]
  %2892 = phi i32 [ %2878, %2872 ], [ 1, %2866 ]
  %2893 = load i32, ptr %2891, align 4, !tbaa !5
  %2894 = add nsw i32 %2893, %2892
  store i32 %2894, ptr %2891, align 4, !tbaa !5
  br label %2895

2895:                                             ; preds = %2882, %2890, %2855, %2838
  %2896 = icmp eq i32 %2847, %5
  br i1 %2896, label %5437, label %2765, !llvm.loop !1038

2897:                                             ; preds = %2748, %3032
  %2898 = phi i32 [ 0, %2748 ], [ %2981, %3032 ]
  %2899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2749, label %2900, label %2969

2900:                                             ; preds = %2897, %2959
  %2901 = phi i32 [ %2968, %2959 ], [ 0, %2897 ]
  %2902 = phi i64 [ %2910, %2959 ], [ %2753, %2897 ]
  %2903 = phi i64 [ %2967, %2959 ], [ %2752, %2897 ]
  %2904 = phi i32 [ %2965, %2959 ], [ %2899, %2897 ]
  %2905 = sub i32 %2751, %2901
  %2906 = tail call i32 @llvm.smin.i32(i32 %2905, i32 0)
  %2907 = sub i32 %2905, %2906
  %2908 = zext i32 %2907 to i64
  %2909 = add nuw nsw i64 %2908, 1
  %2910 = add nsw i64 %2902, -1
  %2911 = icmp ult i32 %2907, 31
  br i1 %2911, label %2947, label %2912

2912:                                             ; preds = %2900
  %2913 = and i64 %2909, 8589934560
  %2914 = sub i64 %2903, %2913
  br label %2915

2915:                                             ; preds = %2915, %2912
  %2916 = phi i64 [ 0, %2912 ], [ %2939, %2915 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2935, %2915 ]
  %2918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2936, %2915 ]
  %2919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2937, %2915 ]
  %2920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2938, %2915 ]
  %2921 = sub i64 %2903, %2916
  %2922 = getelementptr inbounds i32, ptr %11, i64 %2921
  %2923 = getelementptr inbounds i32, ptr %2922, i64 -7
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2922, i64 -15
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2922, i64 -23
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !5
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = getelementptr inbounds i32, ptr %2922, i64 -31
  %2933 = load <8 x i32>, ptr %2932, align 4, !tbaa !5
  %2934 = shufflevector <8 x i32> %2933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2935 = mul <8 x i32> %2925, %2917
  %2936 = mul <8 x i32> %2928, %2918
  %2937 = mul <8 x i32> %2931, %2919
  %2938 = mul <8 x i32> %2934, %2920
  %2939 = add nuw i64 %2916, 32
  %2940 = icmp eq i64 %2939, %2913
  br i1 %2940, label %2941, label %2915, !llvm.loop !1039

2941:                                             ; preds = %2915
  %2942 = mul <8 x i32> %2936, %2935
  %2943 = mul <8 x i32> %2937, %2942
  %2944 = mul <8 x i32> %2938, %2943
  %2945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2944)
  %2946 = icmp eq i64 %2909, %2913
  br i1 %2946, label %2959, label %2947

2947:                                             ; preds = %2900, %2941
  %2948 = phi i64 [ %2903, %2900 ], [ %2914, %2941 ]
  %2949 = phi i32 [ 1, %2900 ], [ %2945, %2941 ]
  br label %2950

2950:                                             ; preds = %2947, %2950
  %2951 = phi i64 [ %2956, %2950 ], [ %2948, %2947 ]
  %2952 = phi i32 [ %2955, %2950 ], [ %2949, %2947 ]
  %2953 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2954 = load i32, ptr %2953, align 4, !tbaa !5
  %2955 = mul nsw i32 %2954, %2952
  %2956 = add nsw i64 %2951, -1
  %2957 = trunc i64 %2951 to i32
  %2958 = icmp sgt i32 %2957, 0
  br i1 %2958, label %2950, label %2959, !llvm.loop !1040

2959:                                             ; preds = %2950, %2941
  %2960 = phi i32 [ %2945, %2941 ], [ %2955, %2950 ]
  %2961 = and i64 %2910, 4294967295
  %2962 = getelementptr inbounds i32, ptr %6, i64 %2961
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = mul nsw i32 %2963, %2960
  %2965 = add nsw i32 %2964, %2904
  %2966 = icmp sgt i64 %2902, 2
  %2967 = add nsw i64 %2903, -1
  %2968 = add i32 %2901, 1
  br i1 %2966, label %2900, label %2969, !llvm.loop !1041

2969:                                             ; preds = %2959, %2897
  %2970 = phi i32 [ %2899, %2897 ], [ %2965, %2959 ]
  %2971 = icmp slt i32 %2970, %5
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2969
  %2973 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2974:                                             ; preds = %2969
  %2975 = sext i32 %2970 to i64
  %2976 = getelementptr inbounds double, ptr %2436, i64 %2975
  %2977 = load double, ptr %2976, align 8, !tbaa !18
  %2978 = fptosi double %2977 to i32
  %2979 = load i32, ptr %2438, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2978
  store i32 %2980, ptr %2438, align 4, !tbaa !5
  %2981 = add nuw nsw i32 %2898, 1
  br i1 %2750, label %2982, label %3032

2982:                                             ; preds = %2974
  %2983 = load i32, ptr %4, align 4, !tbaa !5
  %2984 = load i32, ptr %12, align 4, !tbaa !5
  %2985 = add nsw i32 %2984, -1
  %2986 = icmp slt i32 %2983, %2985
  br i1 %2986, label %3009, label %2987

2987:                                             ; preds = %2982
  %2988 = icmp eq i32 %2983, %2985
  br i1 %2988, label %2989, label %3025

2989:                                             ; preds = %2987
  store i32 0, ptr %4, align 4, !tbaa !5
  %2990 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2990, ptr %6, align 4, !tbaa !5
  br i1 %2755, label %3032, label %2991

2991:                                             ; preds = %2989, %3019
  %2992 = phi i64 [ %3023, %3019 ], [ 1, %2989 ]
  %2993 = getelementptr inbounds i32, ptr %4, i64 %2992
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %12, i64 %2992
  %2996 = load i32, ptr %2995, align 4, !tbaa !5
  %2997 = add nsw i32 %2996, -1
  %2998 = icmp slt i32 %2994, %2997
  br i1 %2998, label %2999, label %3017

2999:                                             ; preds = %2991
  br i1 %2986, label %3009, label %3000

3000:                                             ; preds = %2999
  %3001 = shl i64 %2992, 32
  %3002 = add i64 %3001, -4294967296
  %3003 = ashr exact i64 %3002, 32
  %3004 = getelementptr inbounds i32, ptr %7, i64 %3003
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %6, i64 %2992
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = add nsw i32 %3007, %3005
  store i32 %3008, ptr %3006, align 4, !tbaa !5
  br label %3027

3009:                                             ; preds = %2982, %2999
  %3010 = phi i32 [ %2994, %2999 ], [ %2983, %2982 ]
  %3011 = phi ptr [ %2993, %2999 ], [ %4, %2982 ]
  %3012 = phi i64 [ %2992, %2999 ], [ 0, %2982 ]
  %3013 = add nsw i32 %3010, 1
  store i32 %3013, ptr %3011, align 4, !tbaa !5
  %3014 = getelementptr inbounds i32, ptr %7, i64 %3012
  %3015 = load i32, ptr %3014, align 4, !tbaa !5
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3012
  br label %3027

3017:                                             ; preds = %2991
  %3018 = icmp eq i32 %2994, %2997
  br i1 %3018, label %3019, label %3025

3019:                                             ; preds = %3017
  store i32 0, ptr %2993, align 4, !tbaa !5
  %3020 = getelementptr inbounds i32, ptr %8, i64 %2992
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = getelementptr inbounds i32, ptr %6, i64 %2992
  store i32 %3021, ptr %3022, align 4, !tbaa !5
  %3023 = add nuw nsw i64 %2992, 1
  %3024 = icmp eq i64 %3023, %2753
  br i1 %3024, label %3032, label %2991, !llvm.loop !1042

3025:                                             ; preds = %2987, %3017
  %3026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3027:                                             ; preds = %3000, %3009
  %3028 = phi ptr [ %3016, %3009 ], [ %2993, %3000 ]
  %3029 = phi i32 [ %3015, %3009 ], [ 1, %3000 ]
  %3030 = load i32, ptr %3028, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, %3029
  store i32 %3031, ptr %3028, align 4, !tbaa !5
  br label %3032

3032:                                             ; preds = %3019, %3027, %2989, %2974
  %3033 = icmp eq i32 %2981, %5
  br i1 %3033, label %5437, label %2897, !llvm.loop !1043

3034:                                             ; preds = %2443
  %3035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

3036:                                             ; preds = %18
  %3037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3038 = load ptr, ptr %3037, align 8, !tbaa !9
  %3039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3040 = load ptr, ptr %3039, align 8, !tbaa !9
  store i64 0, ptr %3040, align 8, !tbaa !120
  %3041 = icmp eq i32 %13, 0
  br i1 %3041, label %3042, label %3045

3042:                                             ; preds = %3036
  %3043 = load double, ptr %3038, align 8, !tbaa !18
  %3044 = fptosi double %3043 to i64
  store i64 %3044, ptr %3040, align 8, !tbaa !120
  br label %5437

3045:                                             ; preds = %3036
  switch i32 %1, label %3639 [
    i32 1, label %3046
    i32 0, label %3347
  ]

3046:                                             ; preds = %3045
  %3047 = getelementptr inbounds i32, ptr %3, i64 %19
  %3048 = load i32, ptr %3047, align 4, !tbaa !5
  %3049 = icmp eq i32 %3048, 0
  %3050 = icmp sgt i32 %5, 0
  br i1 %3049, label %3060, label %3051

3051:                                             ; preds = %3046
  br i1 %3050, label %3052, label %5437

3052:                                             ; preds = %3051
  %3053 = icmp sgt i32 %13, 1
  %3054 = icmp sgt i32 %13, 0
  %3055 = add i32 %13, -2
  %3056 = zext i32 %3055 to i64
  %3057 = zext i32 %13 to i64
  %3058 = add nuw i32 %5, 1
  %3059 = icmp eq i32 %13, 1
  br label %3207

3060:                                             ; preds = %3046
  br i1 %3050, label %3061, label %5437

3061:                                             ; preds = %3060
  %3062 = icmp sgt i32 %13, 1
  %3063 = icmp sgt i32 %13, 0
  %3064 = add i32 %13, -2
  %3065 = zext i32 %3064 to i64
  %3066 = zext i32 %13 to i64
  %3067 = add nuw i32 %5, 1
  %3068 = icmp eq i32 %13, 1
  br label %3069

3069:                                             ; preds = %3061, %3205
  %3070 = phi i64 [ 0, %3061 ], [ %3155, %3205 ]
  %3071 = phi i32 [ 0, %3061 ], [ %3157, %3205 ]
  %3072 = phi double [ 0.000000e+00, %3061 ], [ %3156, %3205 ]
  %3073 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3062, label %3074, label %3143

3074:                                             ; preds = %3069, %3133
  %3075 = phi i32 [ %3142, %3133 ], [ 0, %3069 ]
  %3076 = phi i64 [ %3084, %3133 ], [ %3066, %3069 ]
  %3077 = phi i64 [ %3141, %3133 ], [ %3065, %3069 ]
  %3078 = phi i32 [ %3139, %3133 ], [ %3073, %3069 ]
  %3079 = sub i32 %3064, %3075
  %3080 = tail call i32 @llvm.smin.i32(i32 %3079, i32 0)
  %3081 = sub i32 %3079, %3080
  %3082 = zext i32 %3081 to i64
  %3083 = add nuw nsw i64 %3082, 1
  %3084 = add nsw i64 %3076, -1
  %3085 = icmp ult i32 %3081, 31
  br i1 %3085, label %3121, label %3086

3086:                                             ; preds = %3074
  %3087 = and i64 %3083, 8589934560
  %3088 = sub i64 %3077, %3087
  br label %3089

3089:                                             ; preds = %3089, %3086
  %3090 = phi i64 [ 0, %3086 ], [ %3113, %3089 ]
  %3091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3109, %3089 ]
  %3092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3110, %3089 ]
  %3093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3111, %3089 ]
  %3094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3112, %3089 ]
  %3095 = sub i64 %3077, %3090
  %3096 = getelementptr inbounds i32, ptr %9, i64 %3095
  %3097 = getelementptr inbounds i32, ptr %3096, i64 -7
  %3098 = load <8 x i32>, ptr %3097, align 4, !tbaa !5
  %3099 = shufflevector <8 x i32> %3098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3100 = getelementptr inbounds i32, ptr %3096, i64 -15
  %3101 = load <8 x i32>, ptr %3100, align 4, !tbaa !5
  %3102 = shufflevector <8 x i32> %3101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3103 = getelementptr inbounds i32, ptr %3096, i64 -23
  %3104 = load <8 x i32>, ptr %3103, align 4, !tbaa !5
  %3105 = shufflevector <8 x i32> %3104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3106 = getelementptr inbounds i32, ptr %3096, i64 -31
  %3107 = load <8 x i32>, ptr %3106, align 4, !tbaa !5
  %3108 = shufflevector <8 x i32> %3107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3109 = mul <8 x i32> %3099, %3091
  %3110 = mul <8 x i32> %3102, %3092
  %3111 = mul <8 x i32> %3105, %3093
  %3112 = mul <8 x i32> %3108, %3094
  %3113 = add nuw i64 %3090, 32
  %3114 = icmp eq i64 %3113, %3087
  br i1 %3114, label %3115, label %3089, !llvm.loop !1044

3115:                                             ; preds = %3089
  %3116 = mul <8 x i32> %3110, %3109
  %3117 = mul <8 x i32> %3111, %3116
  %3118 = mul <8 x i32> %3112, %3117
  %3119 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3118)
  %3120 = icmp eq i64 %3083, %3087
  br i1 %3120, label %3133, label %3121

3121:                                             ; preds = %3074, %3115
  %3122 = phi i64 [ %3077, %3074 ], [ %3088, %3115 ]
  %3123 = phi i32 [ 1, %3074 ], [ %3119, %3115 ]
  br label %3124

3124:                                             ; preds = %3121, %3124
  %3125 = phi i64 [ %3130, %3124 ], [ %3122, %3121 ]
  %3126 = phi i32 [ %3129, %3124 ], [ %3123, %3121 ]
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3125
  %3128 = load i32, ptr %3127, align 4, !tbaa !5
  %3129 = mul nsw i32 %3128, %3126
  %3130 = add nsw i64 %3125, -1
  %3131 = trunc i64 %3125 to i32
  %3132 = icmp sgt i32 %3131, 0
  br i1 %3132, label %3124, label %3133, !llvm.loop !1045

3133:                                             ; preds = %3124, %3115
  %3134 = phi i32 [ %3119, %3115 ], [ %3129, %3124 ]
  %3135 = and i64 %3084, 4294967295
  %3136 = getelementptr inbounds i32, ptr %6, i64 %3135
  %3137 = load i32, ptr %3136, align 4, !tbaa !5
  %3138 = mul nsw i32 %3137, %3134
  %3139 = add nsw i32 %3138, %3078
  %3140 = icmp sgt i64 %3076, 2
  %3141 = add nsw i64 %3077, -1
  %3142 = add i32 %3075, 1
  br i1 %3140, label %3074, label %3143, !llvm.loop !1046

3143:                                             ; preds = %3133, %3069
  %3144 = phi i32 [ %3073, %3069 ], [ %3139, %3133 ]
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds double, ptr %2, i64 %3145
  %3147 = load double, ptr %3146, align 8, !tbaa !18
  %3148 = getelementptr inbounds double, ptr %3038, i64 %3145
  %3149 = load double, ptr %3148, align 8, !tbaa !18
  %3150 = fptosi double %3149 to i64
  %3151 = sitofp i64 %3070 to double
  %3152 = sitofp i64 %3150 to double
  %3153 = fmul fast double %3147, %3152
  %3154 = fadd fast double %3153, %3151
  %3155 = fptosi double %3154 to i64
  %3156 = fadd fast double %3147, %3072
  %3157 = add nuw nsw i32 %3071, 1
  br i1 %3063, label %3158, label %3205

3158:                                             ; preds = %3143
  %3159 = load i32, ptr %4, align 4, !tbaa !5
  %3160 = load i32, ptr %12, align 4, !tbaa !5
  %3161 = add nsw i32 %3160, -1
  %3162 = icmp slt i32 %3159, %3161
  br i1 %3162, label %3182, label %3163

3163:                                             ; preds = %3158
  %3164 = icmp eq i32 %3159, %3161
  br i1 %3164, label %3165, label %3198

3165:                                             ; preds = %3163
  store i32 0, ptr %4, align 4, !tbaa !5
  %3166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3166, ptr %6, align 4, !tbaa !5
  br i1 %3068, label %3205, label %3167

3167:                                             ; preds = %3165, %3192
  %3168 = phi i64 [ %3196, %3192 ], [ 1, %3165 ]
  %3169 = getelementptr inbounds i32, ptr %4, i64 %3168
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %12, i64 %3168
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, -1
  %3174 = icmp slt i32 %3170, %3173
  br i1 %3174, label %3175, label %3190

3175:                                             ; preds = %3167
  br i1 %3162, label %3182, label %3176

3176:                                             ; preds = %3175
  %3177 = getelementptr inbounds i32, ptr %7, i64 %3168
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %6, i64 %3168
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = add nsw i32 %3180, %3178
  store i32 %3181, ptr %3179, align 4, !tbaa !5
  br label %3200

3182:                                             ; preds = %3158, %3175
  %3183 = phi i32 [ %3170, %3175 ], [ %3159, %3158 ]
  %3184 = phi ptr [ %3169, %3175 ], [ %4, %3158 ]
  %3185 = phi i64 [ %3168, %3175 ], [ 0, %3158 ]
  %3186 = add nsw i32 %3183, 1
  store i32 %3186, ptr %3184, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %7, i64 %3185
  %3188 = load i32, ptr %3187, align 4, !tbaa !5
  %3189 = getelementptr inbounds i32, ptr %6, i64 %3185
  br label %3200

3190:                                             ; preds = %3167
  %3191 = icmp eq i32 %3170, %3173
  br i1 %3191, label %3192, label %3198

3192:                                             ; preds = %3190
  store i32 0, ptr %3169, align 4, !tbaa !5
  %3193 = getelementptr inbounds i32, ptr %8, i64 %3168
  %3194 = load i32, ptr %3193, align 4, !tbaa !5
  %3195 = getelementptr inbounds i32, ptr %6, i64 %3168
  store i32 %3194, ptr %3195, align 4, !tbaa !5
  %3196 = add nuw nsw i64 %3168, 1
  %3197 = icmp eq i64 %3196, %3066
  br i1 %3197, label %3205, label %3167, !llvm.loop !1047

3198:                                             ; preds = %3163, %3190
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  %3199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3200:                                             ; preds = %3176, %3182
  %3201 = phi ptr [ %3189, %3182 ], [ %3169, %3176 ]
  %3202 = phi i32 [ %3188, %3182 ], [ 1, %3176 ]
  %3203 = load i32, ptr %3201, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, %3202
  store i32 %3204, ptr %3201, align 4, !tbaa !5
  br label %3205

3205:                                             ; preds = %3192, %3200, %3165, %3143
  %3206 = icmp eq i32 %3157, %5
  br i1 %3206, label %5433, label %3069, !llvm.loop !1048

3207:                                             ; preds = %3052, %3345
  %3208 = phi i64 [ 0, %3052 ], [ %3293, %3345 ]
  %3209 = phi i32 [ 0, %3052 ], [ %3294, %3345 ]
  %3210 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3053, label %3211, label %3280

3211:                                             ; preds = %3207, %3270
  %3212 = phi i32 [ %3279, %3270 ], [ 0, %3207 ]
  %3213 = phi i64 [ %3221, %3270 ], [ %3057, %3207 ]
  %3214 = phi i64 [ %3278, %3270 ], [ %3056, %3207 ]
  %3215 = phi i32 [ %3276, %3270 ], [ %3210, %3207 ]
  %3216 = sub i32 %3055, %3212
  %3217 = tail call i32 @llvm.smin.i32(i32 %3216, i32 0)
  %3218 = sub i32 %3216, %3217
  %3219 = zext i32 %3218 to i64
  %3220 = add nuw nsw i64 %3219, 1
  %3221 = add nsw i64 %3213, -1
  %3222 = icmp ult i32 %3218, 31
  br i1 %3222, label %3258, label %3223

3223:                                             ; preds = %3211
  %3224 = and i64 %3220, 8589934560
  %3225 = sub i64 %3214, %3224
  br label %3226

3226:                                             ; preds = %3226, %3223
  %3227 = phi i64 [ 0, %3223 ], [ %3250, %3226 ]
  %3228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3246, %3226 ]
  %3229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3247, %3226 ]
  %3230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3248, %3226 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3249, %3226 ]
  %3232 = sub i64 %3214, %3227
  %3233 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3234 = getelementptr inbounds i32, ptr %3233, i64 -7
  %3235 = load <8 x i32>, ptr %3234, align 4, !tbaa !5
  %3236 = shufflevector <8 x i32> %3235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3237 = getelementptr inbounds i32, ptr %3233, i64 -15
  %3238 = load <8 x i32>, ptr %3237, align 4, !tbaa !5
  %3239 = shufflevector <8 x i32> %3238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3240 = getelementptr inbounds i32, ptr %3233, i64 -23
  %3241 = load <8 x i32>, ptr %3240, align 4, !tbaa !5
  %3242 = shufflevector <8 x i32> %3241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3243 = getelementptr inbounds i32, ptr %3233, i64 -31
  %3244 = load <8 x i32>, ptr %3243, align 4, !tbaa !5
  %3245 = shufflevector <8 x i32> %3244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3246 = mul <8 x i32> %3236, %3228
  %3247 = mul <8 x i32> %3239, %3229
  %3248 = mul <8 x i32> %3242, %3230
  %3249 = mul <8 x i32> %3245, %3231
  %3250 = add nuw i64 %3227, 32
  %3251 = icmp eq i64 %3250, %3224
  br i1 %3251, label %3252, label %3226, !llvm.loop !1049

3252:                                             ; preds = %3226
  %3253 = mul <8 x i32> %3247, %3246
  %3254 = mul <8 x i32> %3248, %3253
  %3255 = mul <8 x i32> %3249, %3254
  %3256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3255)
  %3257 = icmp eq i64 %3220, %3224
  br i1 %3257, label %3270, label %3258

3258:                                             ; preds = %3211, %3252
  %3259 = phi i64 [ %3214, %3211 ], [ %3225, %3252 ]
  %3260 = phi i32 [ 1, %3211 ], [ %3256, %3252 ]
  br label %3261

3261:                                             ; preds = %3258, %3261
  %3262 = phi i64 [ %3267, %3261 ], [ %3259, %3258 ]
  %3263 = phi i32 [ %3266, %3261 ], [ %3260, %3258 ]
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3262
  %3265 = load i32, ptr %3264, align 4, !tbaa !5
  %3266 = mul nsw i32 %3265, %3263
  %3267 = add nsw i64 %3262, -1
  %3268 = trunc i64 %3262 to i32
  %3269 = icmp sgt i32 %3268, 0
  br i1 %3269, label %3261, label %3270, !llvm.loop !1050

3270:                                             ; preds = %3261, %3252
  %3271 = phi i32 [ %3256, %3252 ], [ %3266, %3261 ]
  %3272 = and i64 %3221, 4294967295
  %3273 = getelementptr inbounds i32, ptr %6, i64 %3272
  %3274 = load i32, ptr %3273, align 4, !tbaa !5
  %3275 = mul nsw i32 %3274, %3271
  %3276 = add nsw i32 %3275, %3215
  %3277 = icmp sgt i64 %3213, 2
  %3278 = add nsw i64 %3214, -1
  %3279 = add i32 %3212, 1
  br i1 %3277, label %3211, label %3280, !llvm.loop !1051

3280:                                             ; preds = %3270, %3207
  %3281 = phi i32 [ %3210, %3207 ], [ %3276, %3270 ]
  %3282 = icmp slt i32 %3281, %5
  br i1 %3282, label %3285, label %3283

3283:                                             ; preds = %3280
  %3284 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3285:                                             ; preds = %3280
  %3286 = sext i32 %3281 to i64
  %3287 = getelementptr inbounds double, ptr %3038, i64 %3286
  %3288 = load double, ptr %3287, align 8, !tbaa !18
  %3289 = fptosi double %3288 to i64
  %3290 = sitofp i64 %3208 to double
  %3291 = sitofp i64 %3289 to double
  %3292 = fadd fast double %3290, %3291
  %3293 = fptosi double %3292 to i64
  store i64 %3293, ptr %3040, align 8, !tbaa !120
  %3294 = add nuw nsw i32 %3209, 1
  br i1 %3054, label %3295, label %3345

3295:                                             ; preds = %3285
  %3296 = load i32, ptr %4, align 4, !tbaa !5
  %3297 = load i32, ptr %12, align 4, !tbaa !5
  %3298 = add nsw i32 %3297, -1
  %3299 = icmp slt i32 %3296, %3298
  br i1 %3299, label %3322, label %3300

3300:                                             ; preds = %3295
  %3301 = icmp eq i32 %3296, %3298
  br i1 %3301, label %3302, label %3338

3302:                                             ; preds = %3300
  store i32 0, ptr %4, align 4, !tbaa !5
  %3303 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3303, ptr %6, align 4, !tbaa !5
  br i1 %3059, label %3345, label %3304

3304:                                             ; preds = %3302, %3332
  %3305 = phi i64 [ %3336, %3332 ], [ 1, %3302 ]
  %3306 = getelementptr inbounds i32, ptr %4, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = getelementptr inbounds i32, ptr %12, i64 %3305
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = add nsw i32 %3309, -1
  %3311 = icmp slt i32 %3307, %3310
  br i1 %3311, label %3312, label %3330

3312:                                             ; preds = %3304
  br i1 %3299, label %3322, label %3313

3313:                                             ; preds = %3312
  %3314 = shl i64 %3305, 32
  %3315 = add i64 %3314, -4294967296
  %3316 = ashr exact i64 %3315, 32
  %3317 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = add nsw i32 %3320, %3318
  store i32 %3321, ptr %3319, align 4, !tbaa !5
  br label %3340

3322:                                             ; preds = %3295, %3312
  %3323 = phi i32 [ %3307, %3312 ], [ %3296, %3295 ]
  %3324 = phi ptr [ %3306, %3312 ], [ %4, %3295 ]
  %3325 = phi i64 [ %3305, %3312 ], [ 0, %3295 ]
  %3326 = add nsw i32 %3323, 1
  store i32 %3326, ptr %3324, align 4, !tbaa !5
  %3327 = getelementptr inbounds i32, ptr %7, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !5
  %3329 = getelementptr inbounds i32, ptr %6, i64 %3325
  br label %3340

3330:                                             ; preds = %3304
  %3331 = icmp eq i32 %3307, %3310
  br i1 %3331, label %3332, label %3338

3332:                                             ; preds = %3330
  store i32 0, ptr %3306, align 4, !tbaa !5
  %3333 = getelementptr inbounds i32, ptr %8, i64 %3305
  %3334 = load i32, ptr %3333, align 4, !tbaa !5
  %3335 = getelementptr inbounds i32, ptr %6, i64 %3305
  store i32 %3334, ptr %3335, align 4, !tbaa !5
  %3336 = add nuw nsw i64 %3305, 1
  %3337 = icmp eq i64 %3336, %3057
  br i1 %3337, label %3345, label %3304, !llvm.loop !1052

3338:                                             ; preds = %3300, %3330
  %3339 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3340:                                             ; preds = %3313, %3322
  %3341 = phi ptr [ %3329, %3322 ], [ %3306, %3313 ]
  %3342 = phi i32 [ %3328, %3322 ], [ 1, %3313 ]
  %3343 = load i32, ptr %3341, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, %3342
  store i32 %3344, ptr %3341, align 4, !tbaa !5
  br label %3345

3345:                                             ; preds = %3332, %3340, %3302, %3285
  %3346 = icmp eq i32 %3294, %5
  br i1 %3346, label %5437, label %3207, !llvm.loop !1053

3347:                                             ; preds = %3045
  %3348 = getelementptr inbounds i32, ptr %3, i64 %19
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp sgt i32 %5, 0
  br i1 %3350, label %3361, label %3352

3352:                                             ; preds = %3347
  br i1 %3351, label %3353, label %5437

3353:                                             ; preds = %3352
  %3354 = icmp sgt i32 %13, 1
  %3355 = icmp sgt i32 %13, 0
  %3356 = add i32 %13, -2
  %3357 = zext i32 %3356 to i64
  %3358 = zext i32 %13 to i64
  %3359 = add nuw i32 %5, 1
  %3360 = icmp eq i32 %13, 1
  br label %3502

3361:                                             ; preds = %3347
  br i1 %3351, label %3362, label %5437

3362:                                             ; preds = %3361
  %3363 = icmp sgt i32 %13, 1
  %3364 = icmp sgt i32 %13, 0
  %3365 = add i32 %13, -2
  %3366 = zext i32 %3365 to i64
  %3367 = zext i32 %13 to i64
  %3368 = add nuw i32 %5, 1
  %3369 = icmp eq i32 %13, 1
  br label %3370

3370:                                             ; preds = %3362, %3500
  %3371 = phi i64 [ 0, %3362 ], [ %3450, %3500 ]
  %3372 = phi i32 [ 0, %3362 ], [ %3452, %3500 ]
  %3373 = phi double [ 0.000000e+00, %3362 ], [ %3451, %3500 ]
  %3374 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3363, label %3375, label %3444

3375:                                             ; preds = %3370, %3434
  %3376 = phi i32 [ %3443, %3434 ], [ 0, %3370 ]
  %3377 = phi i64 [ %3385, %3434 ], [ %3367, %3370 ]
  %3378 = phi i64 [ %3442, %3434 ], [ %3366, %3370 ]
  %3379 = phi i32 [ %3440, %3434 ], [ %3374, %3370 ]
  %3380 = sub i32 %3365, %3376
  %3381 = tail call i32 @llvm.smin.i32(i32 %3380, i32 0)
  %3382 = sub i32 %3380, %3381
  %3383 = zext i32 %3382 to i64
  %3384 = add nuw nsw i64 %3383, 1
  %3385 = add nsw i64 %3377, -1
  %3386 = icmp ult i32 %3382, 31
  br i1 %3386, label %3422, label %3387

3387:                                             ; preds = %3375
  %3388 = and i64 %3384, 8589934560
  %3389 = sub i64 %3378, %3388
  br label %3390

3390:                                             ; preds = %3390, %3387
  %3391 = phi i64 [ 0, %3387 ], [ %3414, %3390 ]
  %3392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3410, %3390 ]
  %3393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3411, %3390 ]
  %3394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3412, %3390 ]
  %3395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3413, %3390 ]
  %3396 = sub i64 %3378, %3391
  %3397 = getelementptr inbounds i32, ptr %9, i64 %3396
  %3398 = getelementptr inbounds i32, ptr %3397, i64 -7
  %3399 = load <8 x i32>, ptr %3398, align 4, !tbaa !5
  %3400 = shufflevector <8 x i32> %3399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3401 = getelementptr inbounds i32, ptr %3397, i64 -15
  %3402 = load <8 x i32>, ptr %3401, align 4, !tbaa !5
  %3403 = shufflevector <8 x i32> %3402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3404 = getelementptr inbounds i32, ptr %3397, i64 -23
  %3405 = load <8 x i32>, ptr %3404, align 4, !tbaa !5
  %3406 = shufflevector <8 x i32> %3405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3407 = getelementptr inbounds i32, ptr %3397, i64 -31
  %3408 = load <8 x i32>, ptr %3407, align 4, !tbaa !5
  %3409 = shufflevector <8 x i32> %3408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3410 = mul <8 x i32> %3400, %3392
  %3411 = mul <8 x i32> %3403, %3393
  %3412 = mul <8 x i32> %3406, %3394
  %3413 = mul <8 x i32> %3409, %3395
  %3414 = add nuw i64 %3391, 32
  %3415 = icmp eq i64 %3414, %3388
  br i1 %3415, label %3416, label %3390, !llvm.loop !1054

3416:                                             ; preds = %3390
  %3417 = mul <8 x i32> %3411, %3410
  %3418 = mul <8 x i32> %3412, %3417
  %3419 = mul <8 x i32> %3413, %3418
  %3420 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3419)
  %3421 = icmp eq i64 %3384, %3388
  br i1 %3421, label %3434, label %3422

3422:                                             ; preds = %3375, %3416
  %3423 = phi i64 [ %3378, %3375 ], [ %3389, %3416 ]
  %3424 = phi i32 [ 1, %3375 ], [ %3420, %3416 ]
  br label %3425

3425:                                             ; preds = %3422, %3425
  %3426 = phi i64 [ %3431, %3425 ], [ %3423, %3422 ]
  %3427 = phi i32 [ %3430, %3425 ], [ %3424, %3422 ]
  %3428 = getelementptr inbounds i32, ptr %9, i64 %3426
  %3429 = load i32, ptr %3428, align 4, !tbaa !5
  %3430 = mul nsw i32 %3429, %3427
  %3431 = add nsw i64 %3426, -1
  %3432 = trunc i64 %3426 to i32
  %3433 = icmp sgt i32 %3432, 0
  br i1 %3433, label %3425, label %3434, !llvm.loop !1055

3434:                                             ; preds = %3425, %3416
  %3435 = phi i32 [ %3420, %3416 ], [ %3430, %3425 ]
  %3436 = and i64 %3385, 4294967295
  %3437 = getelementptr inbounds i32, ptr %6, i64 %3436
  %3438 = load i32, ptr %3437, align 4, !tbaa !5
  %3439 = mul nsw i32 %3438, %3435
  %3440 = add nsw i32 %3439, %3379
  %3441 = icmp sgt i64 %3377, 2
  %3442 = add nsw i64 %3378, -1
  %3443 = add i32 %3376, 1
  br i1 %3441, label %3375, label %3444, !llvm.loop !1056

3444:                                             ; preds = %3434, %3370
  %3445 = phi i32 [ %3374, %3370 ], [ %3440, %3434 ]
  %3446 = sext i32 %3445 to i64
  %3447 = getelementptr inbounds double, ptr %3038, i64 %3446
  %3448 = load double, ptr %3447, align 8, !tbaa !18
  %3449 = fptosi double %3448 to i64
  %3450 = add nsw i64 %3371, %3449
  %3451 = fadd fast double %3373, 1.000000e+00
  %3452 = add nuw nsw i32 %3372, 1
  br i1 %3364, label %3453, label %3500

3453:                                             ; preds = %3444
  %3454 = load i32, ptr %4, align 4, !tbaa !5
  %3455 = load i32, ptr %12, align 4, !tbaa !5
  %3456 = add nsw i32 %3455, -1
  %3457 = icmp slt i32 %3454, %3456
  br i1 %3457, label %3477, label %3458

3458:                                             ; preds = %3453
  %3459 = icmp eq i32 %3454, %3456
  br i1 %3459, label %3460, label %3493

3460:                                             ; preds = %3458
  store i32 0, ptr %4, align 4, !tbaa !5
  %3461 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3461, ptr %6, align 4, !tbaa !5
  br i1 %3369, label %3500, label %3462

3462:                                             ; preds = %3460, %3487
  %3463 = phi i64 [ %3491, %3487 ], [ 1, %3460 ]
  %3464 = getelementptr inbounds i32, ptr %4, i64 %3463
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %12, i64 %3463
  %3467 = load i32, ptr %3466, align 4, !tbaa !5
  %3468 = add nsw i32 %3467, -1
  %3469 = icmp slt i32 %3465, %3468
  br i1 %3469, label %3470, label %3485

3470:                                             ; preds = %3462
  br i1 %3457, label %3477, label %3471

3471:                                             ; preds = %3470
  %3472 = getelementptr inbounds i32, ptr %7, i64 %3463
  %3473 = load i32, ptr %3472, align 4, !tbaa !5
  %3474 = getelementptr inbounds i32, ptr %6, i64 %3463
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = add nsw i32 %3475, %3473
  store i32 %3476, ptr %3474, align 4, !tbaa !5
  br label %3495

3477:                                             ; preds = %3453, %3470
  %3478 = phi i32 [ %3465, %3470 ], [ %3454, %3453 ]
  %3479 = phi ptr [ %3464, %3470 ], [ %4, %3453 ]
  %3480 = phi i64 [ %3463, %3470 ], [ 0, %3453 ]
  %3481 = add nsw i32 %3478, 1
  store i32 %3481, ptr %3479, align 4, !tbaa !5
  %3482 = getelementptr inbounds i32, ptr %7, i64 %3480
  %3483 = load i32, ptr %3482, align 4, !tbaa !5
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3480
  br label %3495

3485:                                             ; preds = %3462
  %3486 = icmp eq i32 %3465, %3468
  br i1 %3486, label %3487, label %3493

3487:                                             ; preds = %3485
  store i32 0, ptr %3464, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %8, i64 %3463
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = getelementptr inbounds i32, ptr %6, i64 %3463
  store i32 %3489, ptr %3490, align 4, !tbaa !5
  %3491 = add nuw nsw i64 %3463, 1
  %3492 = icmp eq i64 %3491, %3367
  br i1 %3492, label %3500, label %3462, !llvm.loop !1057

3493:                                             ; preds = %3458, %3485
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  %3494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3495:                                             ; preds = %3471, %3477
  %3496 = phi ptr [ %3484, %3477 ], [ %3464, %3471 ]
  %3497 = phi i32 [ %3483, %3477 ], [ 1, %3471 ]
  %3498 = load i32, ptr %3496, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, %3497
  store i32 %3499, ptr %3496, align 4, !tbaa !5
  br label %3500

3500:                                             ; preds = %3487, %3495, %3460, %3444
  %3501 = icmp eq i32 %3452, %5
  br i1 %3501, label %5434, label %3370, !llvm.loop !1058

3502:                                             ; preds = %3353, %3637
  %3503 = phi i64 [ 0, %3353 ], [ %3585, %3637 ]
  %3504 = phi i32 [ 0, %3353 ], [ %3586, %3637 ]
  %3505 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3354, label %3506, label %3575

3506:                                             ; preds = %3502, %3565
  %3507 = phi i32 [ %3574, %3565 ], [ 0, %3502 ]
  %3508 = phi i64 [ %3516, %3565 ], [ %3358, %3502 ]
  %3509 = phi i64 [ %3573, %3565 ], [ %3357, %3502 ]
  %3510 = phi i32 [ %3571, %3565 ], [ %3505, %3502 ]
  %3511 = sub i32 %3356, %3507
  %3512 = tail call i32 @llvm.smin.i32(i32 %3511, i32 0)
  %3513 = sub i32 %3511, %3512
  %3514 = zext i32 %3513 to i64
  %3515 = add nuw nsw i64 %3514, 1
  %3516 = add nsw i64 %3508, -1
  %3517 = icmp ult i32 %3513, 31
  br i1 %3517, label %3553, label %3518

3518:                                             ; preds = %3506
  %3519 = and i64 %3515, 8589934560
  %3520 = sub i64 %3509, %3519
  br label %3521

3521:                                             ; preds = %3521, %3518
  %3522 = phi i64 [ 0, %3518 ], [ %3545, %3521 ]
  %3523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3541, %3521 ]
  %3524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3542, %3521 ]
  %3525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3543, %3521 ]
  %3526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3544, %3521 ]
  %3527 = sub i64 %3509, %3522
  %3528 = getelementptr inbounds i32, ptr %11, i64 %3527
  %3529 = getelementptr inbounds i32, ptr %3528, i64 -7
  %3530 = load <8 x i32>, ptr %3529, align 4, !tbaa !5
  %3531 = shufflevector <8 x i32> %3530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3532 = getelementptr inbounds i32, ptr %3528, i64 -15
  %3533 = load <8 x i32>, ptr %3532, align 4, !tbaa !5
  %3534 = shufflevector <8 x i32> %3533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3535 = getelementptr inbounds i32, ptr %3528, i64 -23
  %3536 = load <8 x i32>, ptr %3535, align 4, !tbaa !5
  %3537 = shufflevector <8 x i32> %3536, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3538 = getelementptr inbounds i32, ptr %3528, i64 -31
  %3539 = load <8 x i32>, ptr %3538, align 4, !tbaa !5
  %3540 = shufflevector <8 x i32> %3539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3541 = mul <8 x i32> %3531, %3523
  %3542 = mul <8 x i32> %3534, %3524
  %3543 = mul <8 x i32> %3537, %3525
  %3544 = mul <8 x i32> %3540, %3526
  %3545 = add nuw i64 %3522, 32
  %3546 = icmp eq i64 %3545, %3519
  br i1 %3546, label %3547, label %3521, !llvm.loop !1059

3547:                                             ; preds = %3521
  %3548 = mul <8 x i32> %3542, %3541
  %3549 = mul <8 x i32> %3543, %3548
  %3550 = mul <8 x i32> %3544, %3549
  %3551 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3550)
  %3552 = icmp eq i64 %3515, %3519
  br i1 %3552, label %3565, label %3553

3553:                                             ; preds = %3506, %3547
  %3554 = phi i64 [ %3509, %3506 ], [ %3520, %3547 ]
  %3555 = phi i32 [ 1, %3506 ], [ %3551, %3547 ]
  br label %3556

3556:                                             ; preds = %3553, %3556
  %3557 = phi i64 [ %3562, %3556 ], [ %3554, %3553 ]
  %3558 = phi i32 [ %3561, %3556 ], [ %3555, %3553 ]
  %3559 = getelementptr inbounds i32, ptr %11, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = mul nsw i32 %3560, %3558
  %3562 = add nsw i64 %3557, -1
  %3563 = trunc i64 %3557 to i32
  %3564 = icmp sgt i32 %3563, 0
  br i1 %3564, label %3556, label %3565, !llvm.loop !1060

3565:                                             ; preds = %3556, %3547
  %3566 = phi i32 [ %3551, %3547 ], [ %3561, %3556 ]
  %3567 = and i64 %3516, 4294967295
  %3568 = getelementptr inbounds i32, ptr %6, i64 %3567
  %3569 = load i32, ptr %3568, align 4, !tbaa !5
  %3570 = mul nsw i32 %3569, %3566
  %3571 = add nsw i32 %3570, %3510
  %3572 = icmp sgt i64 %3508, 2
  %3573 = add nsw i64 %3509, -1
  %3574 = add i32 %3507, 1
  br i1 %3572, label %3506, label %3575, !llvm.loop !1061

3575:                                             ; preds = %3565, %3502
  %3576 = phi i32 [ %3505, %3502 ], [ %3571, %3565 ]
  %3577 = icmp slt i32 %3576, %5
  br i1 %3577, label %3580, label %3578

3578:                                             ; preds = %3575
  %3579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3580:                                             ; preds = %3575
  %3581 = sext i32 %3576 to i64
  %3582 = getelementptr inbounds double, ptr %3038, i64 %3581
  %3583 = load double, ptr %3582, align 8, !tbaa !18
  %3584 = fptosi double %3583 to i64
  %3585 = add nsw i64 %3503, %3584
  store i64 %3585, ptr %3040, align 8, !tbaa !120
  %3586 = add nuw nsw i32 %3504, 1
  br i1 %3355, label %3587, label %3637

3587:                                             ; preds = %3580
  %3588 = load i32, ptr %4, align 4, !tbaa !5
  %3589 = load i32, ptr %12, align 4, !tbaa !5
  %3590 = add nsw i32 %3589, -1
  %3591 = icmp slt i32 %3588, %3590
  br i1 %3591, label %3614, label %3592

3592:                                             ; preds = %3587
  %3593 = icmp eq i32 %3588, %3590
  br i1 %3593, label %3594, label %3630

3594:                                             ; preds = %3592
  store i32 0, ptr %4, align 4, !tbaa !5
  %3595 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3595, ptr %6, align 4, !tbaa !5
  br i1 %3360, label %3637, label %3596

3596:                                             ; preds = %3594, %3624
  %3597 = phi i64 [ %3628, %3624 ], [ 1, %3594 ]
  %3598 = getelementptr inbounds i32, ptr %4, i64 %3597
  %3599 = load i32, ptr %3598, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %12, i64 %3597
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = add nsw i32 %3601, -1
  %3603 = icmp slt i32 %3599, %3602
  br i1 %3603, label %3604, label %3622

3604:                                             ; preds = %3596
  br i1 %3591, label %3614, label %3605

3605:                                             ; preds = %3604
  %3606 = shl i64 %3597, 32
  %3607 = add i64 %3606, -4294967296
  %3608 = ashr exact i64 %3607, 32
  %3609 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3597
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = add nsw i32 %3612, %3610
  store i32 %3613, ptr %3611, align 4, !tbaa !5
  br label %3632

3614:                                             ; preds = %3587, %3604
  %3615 = phi i32 [ %3599, %3604 ], [ %3588, %3587 ]
  %3616 = phi ptr [ %3598, %3604 ], [ %4, %3587 ]
  %3617 = phi i64 [ %3597, %3604 ], [ 0, %3587 ]
  %3618 = add nsw i32 %3615, 1
  store i32 %3618, ptr %3616, align 4, !tbaa !5
  %3619 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3617
  br label %3632

3622:                                             ; preds = %3596
  %3623 = icmp eq i32 %3599, %3602
  br i1 %3623, label %3624, label %3630

3624:                                             ; preds = %3622
  store i32 0, ptr %3598, align 4, !tbaa !5
  %3625 = getelementptr inbounds i32, ptr %8, i64 %3597
  %3626 = load i32, ptr %3625, align 4, !tbaa !5
  %3627 = getelementptr inbounds i32, ptr %6, i64 %3597
  store i32 %3626, ptr %3627, align 4, !tbaa !5
  %3628 = add nuw nsw i64 %3597, 1
  %3629 = icmp eq i64 %3628, %3358
  br i1 %3629, label %3637, label %3596, !llvm.loop !1062

3630:                                             ; preds = %3592, %3622
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3632:                                             ; preds = %3605, %3614
  %3633 = phi ptr [ %3621, %3614 ], [ %3598, %3605 ]
  %3634 = phi i32 [ %3620, %3614 ], [ 1, %3605 ]
  %3635 = load i32, ptr %3633, align 4, !tbaa !5
  %3636 = add nsw i32 %3635, %3634
  store i32 %3636, ptr %3633, align 4, !tbaa !5
  br label %3637

3637:                                             ; preds = %3624, %3632, %3594, %3580
  %3638 = icmp eq i32 %3586, %5
  br i1 %3638, label %5437, label %3502, !llvm.loop !1063

3639:                                             ; preds = %3045
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

3641:                                             ; preds = %18
  %3642 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3643 = load ptr, ptr %3642, align 8, !tbaa !9
  %3644 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3645 = load ptr, ptr %3644, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3645, align 8, !tbaa !18
  %3646 = icmp eq i32 %13, 0
  br i1 %3646, label %3647, label %3649

3647:                                             ; preds = %3641
  %3648 = load double, ptr %3643, align 8, !tbaa !18
  store double %3648, ptr %3645, align 8, !tbaa !18
  br label %5437

3649:                                             ; preds = %3641
  switch i32 %1, label %4233 [
    i32 1, label %3650
    i32 0, label %3943
  ]

3650:                                             ; preds = %3649
  %3651 = getelementptr inbounds i32, ptr %3, i64 %19
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = icmp eq i32 %3652, 0
  %3654 = icmp sgt i32 %5, 0
  br i1 %3653, label %3664, label %3655

3655:                                             ; preds = %3650
  br i1 %3654, label %3656, label %5437

3656:                                             ; preds = %3655
  %3657 = icmp sgt i32 %13, 1
  %3658 = icmp sgt i32 %13, 0
  %3659 = add i32 %13, -2
  %3660 = zext i32 %3659 to i64
  %3661 = zext i32 %13 to i64
  %3662 = add nuw i32 %5, 1
  %3663 = icmp eq i32 %13, 1
  br label %3807

3664:                                             ; preds = %3650
  br i1 %3654, label %3665, label %5437

3665:                                             ; preds = %3664
  %3666 = icmp sgt i32 %13, 1
  %3667 = icmp sgt i32 %13, 0
  %3668 = add i32 %13, -2
  %3669 = zext i32 %3668 to i64
  %3670 = zext i32 %13 to i64
  %3671 = add nuw i32 %5, 1
  %3672 = icmp eq i32 %13, 1
  br label %3673

3673:                                             ; preds = %3665, %3805
  %3674 = phi double [ 0.000000e+00, %3665 ], [ %3755, %3805 ]
  %3675 = phi i32 [ 0, %3665 ], [ %3757, %3805 ]
  %3676 = phi double [ 0.000000e+00, %3665 ], [ %3756, %3805 ]
  %3677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3666, label %3678, label %3747

3678:                                             ; preds = %3673, %3737
  %3679 = phi i32 [ %3746, %3737 ], [ 0, %3673 ]
  %3680 = phi i64 [ %3688, %3737 ], [ %3670, %3673 ]
  %3681 = phi i64 [ %3745, %3737 ], [ %3669, %3673 ]
  %3682 = phi i32 [ %3743, %3737 ], [ %3677, %3673 ]
  %3683 = sub i32 %3668, %3679
  %3684 = tail call i32 @llvm.smin.i32(i32 %3683, i32 0)
  %3685 = sub i32 %3683, %3684
  %3686 = zext i32 %3685 to i64
  %3687 = add nuw nsw i64 %3686, 1
  %3688 = add nsw i64 %3680, -1
  %3689 = icmp ult i32 %3685, 31
  br i1 %3689, label %3725, label %3690

3690:                                             ; preds = %3678
  %3691 = and i64 %3687, 8589934560
  %3692 = sub i64 %3681, %3691
  br label %3693

3693:                                             ; preds = %3693, %3690
  %3694 = phi i64 [ 0, %3690 ], [ %3717, %3693 ]
  %3695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3713, %3693 ]
  %3696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3714, %3693 ]
  %3697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3715, %3693 ]
  %3698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3716, %3693 ]
  %3699 = sub i64 %3681, %3694
  %3700 = getelementptr inbounds i32, ptr %9, i64 %3699
  %3701 = getelementptr inbounds i32, ptr %3700, i64 -7
  %3702 = load <8 x i32>, ptr %3701, align 4, !tbaa !5
  %3703 = shufflevector <8 x i32> %3702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3704 = getelementptr inbounds i32, ptr %3700, i64 -15
  %3705 = load <8 x i32>, ptr %3704, align 4, !tbaa !5
  %3706 = shufflevector <8 x i32> %3705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3707 = getelementptr inbounds i32, ptr %3700, i64 -23
  %3708 = load <8 x i32>, ptr %3707, align 4, !tbaa !5
  %3709 = shufflevector <8 x i32> %3708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3710 = getelementptr inbounds i32, ptr %3700, i64 -31
  %3711 = load <8 x i32>, ptr %3710, align 4, !tbaa !5
  %3712 = shufflevector <8 x i32> %3711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3713 = mul <8 x i32> %3703, %3695
  %3714 = mul <8 x i32> %3706, %3696
  %3715 = mul <8 x i32> %3709, %3697
  %3716 = mul <8 x i32> %3712, %3698
  %3717 = add nuw i64 %3694, 32
  %3718 = icmp eq i64 %3717, %3691
  br i1 %3718, label %3719, label %3693, !llvm.loop !1064

3719:                                             ; preds = %3693
  %3720 = mul <8 x i32> %3714, %3713
  %3721 = mul <8 x i32> %3715, %3720
  %3722 = mul <8 x i32> %3716, %3721
  %3723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3722)
  %3724 = icmp eq i64 %3687, %3691
  br i1 %3724, label %3737, label %3725

3725:                                             ; preds = %3678, %3719
  %3726 = phi i64 [ %3681, %3678 ], [ %3692, %3719 ]
  %3727 = phi i32 [ 1, %3678 ], [ %3723, %3719 ]
  br label %3728

3728:                                             ; preds = %3725, %3728
  %3729 = phi i64 [ %3734, %3728 ], [ %3726, %3725 ]
  %3730 = phi i32 [ %3733, %3728 ], [ %3727, %3725 ]
  %3731 = getelementptr inbounds i32, ptr %9, i64 %3729
  %3732 = load i32, ptr %3731, align 4, !tbaa !5
  %3733 = mul nsw i32 %3732, %3730
  %3734 = add nsw i64 %3729, -1
  %3735 = trunc i64 %3729 to i32
  %3736 = icmp sgt i32 %3735, 0
  br i1 %3736, label %3728, label %3737, !llvm.loop !1065

3737:                                             ; preds = %3728, %3719
  %3738 = phi i32 [ %3723, %3719 ], [ %3733, %3728 ]
  %3739 = and i64 %3688, 4294967295
  %3740 = getelementptr inbounds i32, ptr %6, i64 %3739
  %3741 = load i32, ptr %3740, align 4, !tbaa !5
  %3742 = mul nsw i32 %3741, %3738
  %3743 = add nsw i32 %3742, %3682
  %3744 = icmp sgt i64 %3680, 2
  %3745 = add nsw i64 %3681, -1
  %3746 = add i32 %3679, 1
  br i1 %3744, label %3678, label %3747, !llvm.loop !1066

3747:                                             ; preds = %3737, %3673
  %3748 = phi i32 [ %3677, %3673 ], [ %3743, %3737 ]
  %3749 = sext i32 %3748 to i64
  %3750 = getelementptr inbounds double, ptr %2, i64 %3749
  %3751 = load double, ptr %3750, align 8, !tbaa !18
  %3752 = getelementptr inbounds double, ptr %3643, i64 %3749
  %3753 = load double, ptr %3752, align 8, !tbaa !18
  %3754 = fmul fast double %3753, %3751
  %3755 = fadd fast double %3674, %3754
  store double %3755, ptr %3645, align 8, !tbaa !18
  %3756 = fadd fast double %3751, %3676
  %3757 = add nuw nsw i32 %3675, 1
  br i1 %3667, label %3758, label %3805

3758:                                             ; preds = %3747
  %3759 = load i32, ptr %4, align 4, !tbaa !5
  %3760 = load i32, ptr %12, align 4, !tbaa !5
  %3761 = add nsw i32 %3760, -1
  %3762 = icmp slt i32 %3759, %3761
  br i1 %3762, label %3782, label %3763

3763:                                             ; preds = %3758
  %3764 = icmp eq i32 %3759, %3761
  br i1 %3764, label %3765, label %3798

3765:                                             ; preds = %3763
  store i32 0, ptr %4, align 4, !tbaa !5
  %3766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3766, ptr %6, align 4, !tbaa !5
  br i1 %3672, label %3805, label %3767

3767:                                             ; preds = %3765, %3792
  %3768 = phi i64 [ %3796, %3792 ], [ 1, %3765 ]
  %3769 = getelementptr inbounds i32, ptr %4, i64 %3768
  %3770 = load i32, ptr %3769, align 4, !tbaa !5
  %3771 = getelementptr inbounds i32, ptr %12, i64 %3768
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = add nsw i32 %3772, -1
  %3774 = icmp slt i32 %3770, %3773
  br i1 %3774, label %3775, label %3790

3775:                                             ; preds = %3767
  br i1 %3762, label %3782, label %3776

3776:                                             ; preds = %3775
  %3777 = getelementptr inbounds i32, ptr %7, i64 %3768
  %3778 = load i32, ptr %3777, align 4, !tbaa !5
  %3779 = getelementptr inbounds i32, ptr %6, i64 %3768
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = add nsw i32 %3780, %3778
  store i32 %3781, ptr %3779, align 4, !tbaa !5
  br label %3800

3782:                                             ; preds = %3758, %3775
  %3783 = phi i32 [ %3770, %3775 ], [ %3759, %3758 ]
  %3784 = phi ptr [ %3769, %3775 ], [ %4, %3758 ]
  %3785 = phi i64 [ %3768, %3775 ], [ 0, %3758 ]
  %3786 = add nsw i32 %3783, 1
  store i32 %3786, ptr %3784, align 4, !tbaa !5
  %3787 = getelementptr inbounds i32, ptr %7, i64 %3785
  %3788 = load i32, ptr %3787, align 4, !tbaa !5
  %3789 = getelementptr inbounds i32, ptr %6, i64 %3785
  br label %3800

3790:                                             ; preds = %3767
  %3791 = icmp eq i32 %3770, %3773
  br i1 %3791, label %3792, label %3798

3792:                                             ; preds = %3790
  store i32 0, ptr %3769, align 4, !tbaa !5
  %3793 = getelementptr inbounds i32, ptr %8, i64 %3768
  %3794 = load i32, ptr %3793, align 4, !tbaa !5
  %3795 = getelementptr inbounds i32, ptr %6, i64 %3768
  store i32 %3794, ptr %3795, align 4, !tbaa !5
  %3796 = add nuw nsw i64 %3768, 1
  %3797 = icmp eq i64 %3796, %3670
  br i1 %3797, label %3805, label %3767, !llvm.loop !1067

3798:                                             ; preds = %3763, %3790
  %3799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3800:                                             ; preds = %3776, %3782
  %3801 = phi ptr [ %3789, %3782 ], [ %3769, %3776 ]
  %3802 = phi i32 [ %3788, %3782 ], [ 1, %3776 ]
  %3803 = load i32, ptr %3801, align 4, !tbaa !5
  %3804 = add nsw i32 %3803, %3802
  store i32 %3804, ptr %3801, align 4, !tbaa !5
  br label %3805

3805:                                             ; preds = %3792, %3800, %3765, %3747
  %3806 = icmp eq i32 %3757, %5
  br i1 %3806, label %5437, label %3673, !llvm.loop !1068

3807:                                             ; preds = %3656, %3941
  %3808 = phi double [ 0.000000e+00, %3656 ], [ %3889, %3941 ]
  %3809 = phi i32 [ 0, %3656 ], [ %3890, %3941 ]
  %3810 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3657, label %3811, label %3880

3811:                                             ; preds = %3807, %3870
  %3812 = phi i32 [ %3879, %3870 ], [ 0, %3807 ]
  %3813 = phi i64 [ %3821, %3870 ], [ %3661, %3807 ]
  %3814 = phi i64 [ %3878, %3870 ], [ %3660, %3807 ]
  %3815 = phi i32 [ %3876, %3870 ], [ %3810, %3807 ]
  %3816 = sub i32 %3659, %3812
  %3817 = tail call i32 @llvm.smin.i32(i32 %3816, i32 0)
  %3818 = sub i32 %3816, %3817
  %3819 = zext i32 %3818 to i64
  %3820 = add nuw nsw i64 %3819, 1
  %3821 = add nsw i64 %3813, -1
  %3822 = icmp ult i32 %3818, 31
  br i1 %3822, label %3858, label %3823

3823:                                             ; preds = %3811
  %3824 = and i64 %3820, 8589934560
  %3825 = sub i64 %3814, %3824
  br label %3826

3826:                                             ; preds = %3826, %3823
  %3827 = phi i64 [ 0, %3823 ], [ %3850, %3826 ]
  %3828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3846, %3826 ]
  %3829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3847, %3826 ]
  %3830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3848, %3826 ]
  %3831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3849, %3826 ]
  %3832 = sub i64 %3814, %3827
  %3833 = getelementptr inbounds i32, ptr %11, i64 %3832
  %3834 = getelementptr inbounds i32, ptr %3833, i64 -7
  %3835 = load <8 x i32>, ptr %3834, align 4, !tbaa !5
  %3836 = shufflevector <8 x i32> %3835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3837 = getelementptr inbounds i32, ptr %3833, i64 -15
  %3838 = load <8 x i32>, ptr %3837, align 4, !tbaa !5
  %3839 = shufflevector <8 x i32> %3838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3840 = getelementptr inbounds i32, ptr %3833, i64 -23
  %3841 = load <8 x i32>, ptr %3840, align 4, !tbaa !5
  %3842 = shufflevector <8 x i32> %3841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3843 = getelementptr inbounds i32, ptr %3833, i64 -31
  %3844 = load <8 x i32>, ptr %3843, align 4, !tbaa !5
  %3845 = shufflevector <8 x i32> %3844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3846 = mul <8 x i32> %3836, %3828
  %3847 = mul <8 x i32> %3839, %3829
  %3848 = mul <8 x i32> %3842, %3830
  %3849 = mul <8 x i32> %3845, %3831
  %3850 = add nuw i64 %3827, 32
  %3851 = icmp eq i64 %3850, %3824
  br i1 %3851, label %3852, label %3826, !llvm.loop !1069

3852:                                             ; preds = %3826
  %3853 = mul <8 x i32> %3847, %3846
  %3854 = mul <8 x i32> %3848, %3853
  %3855 = mul <8 x i32> %3849, %3854
  %3856 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3855)
  %3857 = icmp eq i64 %3820, %3824
  br i1 %3857, label %3870, label %3858

3858:                                             ; preds = %3811, %3852
  %3859 = phi i64 [ %3814, %3811 ], [ %3825, %3852 ]
  %3860 = phi i32 [ 1, %3811 ], [ %3856, %3852 ]
  br label %3861

3861:                                             ; preds = %3858, %3861
  %3862 = phi i64 [ %3867, %3861 ], [ %3859, %3858 ]
  %3863 = phi i32 [ %3866, %3861 ], [ %3860, %3858 ]
  %3864 = getelementptr inbounds i32, ptr %11, i64 %3862
  %3865 = load i32, ptr %3864, align 4, !tbaa !5
  %3866 = mul nsw i32 %3865, %3863
  %3867 = add nsw i64 %3862, -1
  %3868 = trunc i64 %3862 to i32
  %3869 = icmp sgt i32 %3868, 0
  br i1 %3869, label %3861, label %3870, !llvm.loop !1070

3870:                                             ; preds = %3861, %3852
  %3871 = phi i32 [ %3856, %3852 ], [ %3866, %3861 ]
  %3872 = and i64 %3821, 4294967295
  %3873 = getelementptr inbounds i32, ptr %6, i64 %3872
  %3874 = load i32, ptr %3873, align 4, !tbaa !5
  %3875 = mul nsw i32 %3874, %3871
  %3876 = add nsw i32 %3875, %3815
  %3877 = icmp sgt i64 %3813, 2
  %3878 = add nsw i64 %3814, -1
  %3879 = add i32 %3812, 1
  br i1 %3877, label %3811, label %3880, !llvm.loop !1071

3880:                                             ; preds = %3870, %3807
  %3881 = phi i32 [ %3810, %3807 ], [ %3876, %3870 ]
  %3882 = icmp slt i32 %3881, %5
  br i1 %3882, label %3885, label %3883

3883:                                             ; preds = %3880
  %3884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3885:                                             ; preds = %3880
  %3886 = sext i32 %3881 to i64
  %3887 = getelementptr inbounds double, ptr %3643, i64 %3886
  %3888 = load double, ptr %3887, align 8, !tbaa !18
  %3889 = fadd fast double %3808, %3888
  store double %3889, ptr %3645, align 8, !tbaa !18
  %3890 = add nuw nsw i32 %3809, 1
  br i1 %3658, label %3891, label %3941

3891:                                             ; preds = %3885
  %3892 = load i32, ptr %4, align 4, !tbaa !5
  %3893 = load i32, ptr %12, align 4, !tbaa !5
  %3894 = add nsw i32 %3893, -1
  %3895 = icmp slt i32 %3892, %3894
  br i1 %3895, label %3918, label %3896

3896:                                             ; preds = %3891
  %3897 = icmp eq i32 %3892, %3894
  br i1 %3897, label %3898, label %3934

3898:                                             ; preds = %3896
  store i32 0, ptr %4, align 4, !tbaa !5
  %3899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3899, ptr %6, align 4, !tbaa !5
  br i1 %3663, label %3941, label %3900

3900:                                             ; preds = %3898, %3928
  %3901 = phi i64 [ %3932, %3928 ], [ 1, %3898 ]
  %3902 = getelementptr inbounds i32, ptr %4, i64 %3901
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = getelementptr inbounds i32, ptr %12, i64 %3901
  %3905 = load i32, ptr %3904, align 4, !tbaa !5
  %3906 = add nsw i32 %3905, -1
  %3907 = icmp slt i32 %3903, %3906
  br i1 %3907, label %3908, label %3926

3908:                                             ; preds = %3900
  br i1 %3895, label %3918, label %3909

3909:                                             ; preds = %3908
  %3910 = shl i64 %3901, 32
  %3911 = add i64 %3910, -4294967296
  %3912 = ashr exact i64 %3911, 32
  %3913 = getelementptr inbounds i32, ptr %7, i64 %3912
  %3914 = load i32, ptr %3913, align 4, !tbaa !5
  %3915 = getelementptr inbounds i32, ptr %6, i64 %3901
  %3916 = load i32, ptr %3915, align 4, !tbaa !5
  %3917 = add nsw i32 %3916, %3914
  store i32 %3917, ptr %3915, align 4, !tbaa !5
  br label %3936

3918:                                             ; preds = %3891, %3908
  %3919 = phi i32 [ %3903, %3908 ], [ %3892, %3891 ]
  %3920 = phi ptr [ %3902, %3908 ], [ %4, %3891 ]
  %3921 = phi i64 [ %3901, %3908 ], [ 0, %3891 ]
  %3922 = add nsw i32 %3919, 1
  store i32 %3922, ptr %3920, align 4, !tbaa !5
  %3923 = getelementptr inbounds i32, ptr %7, i64 %3921
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = getelementptr inbounds i32, ptr %6, i64 %3921
  br label %3936

3926:                                             ; preds = %3900
  %3927 = icmp eq i32 %3903, %3906
  br i1 %3927, label %3928, label %3934

3928:                                             ; preds = %3926
  store i32 0, ptr %3902, align 4, !tbaa !5
  %3929 = getelementptr inbounds i32, ptr %8, i64 %3901
  %3930 = load i32, ptr %3929, align 4, !tbaa !5
  %3931 = getelementptr inbounds i32, ptr %6, i64 %3901
  store i32 %3930, ptr %3931, align 4, !tbaa !5
  %3932 = add nuw nsw i64 %3901, 1
  %3933 = icmp eq i64 %3932, %3661
  br i1 %3933, label %3941, label %3900, !llvm.loop !1072

3934:                                             ; preds = %3896, %3926
  %3935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3936:                                             ; preds = %3909, %3918
  %3937 = phi ptr [ %3925, %3918 ], [ %3902, %3909 ]
  %3938 = phi i32 [ %3924, %3918 ], [ 1, %3909 ]
  %3939 = load i32, ptr %3937, align 4, !tbaa !5
  %3940 = add nsw i32 %3939, %3938
  store i32 %3940, ptr %3937, align 4, !tbaa !5
  br label %3941

3941:                                             ; preds = %3928, %3936, %3898, %3885
  %3942 = icmp eq i32 %3890, %5
  br i1 %3942, label %5437, label %3807, !llvm.loop !1073

3943:                                             ; preds = %3649
  %3944 = getelementptr inbounds i32, ptr %3, i64 %19
  %3945 = load i32, ptr %3944, align 4, !tbaa !5
  %3946 = icmp eq i32 %3945, 0
  %3947 = icmp sgt i32 %5, 0
  br i1 %3946, label %3957, label %3948

3948:                                             ; preds = %3943
  br i1 %3947, label %3949, label %5437

3949:                                             ; preds = %3948
  %3950 = icmp sgt i32 %13, 1
  %3951 = icmp sgt i32 %13, 0
  %3952 = add i32 %13, -2
  %3953 = zext i32 %3952 to i64
  %3954 = zext i32 %13 to i64
  %3955 = add nuw i32 %5, 1
  %3956 = icmp eq i32 %13, 1
  br label %4097

3957:                                             ; preds = %3943
  br i1 %3947, label %3958, label %5437

3958:                                             ; preds = %3957
  %3959 = icmp sgt i32 %13, 1
  %3960 = icmp sgt i32 %13, 0
  %3961 = add i32 %13, -2
  %3962 = zext i32 %3961 to i64
  %3963 = zext i32 %13 to i64
  %3964 = add nuw i32 %5, 1
  %3965 = icmp eq i32 %13, 1
  br label %3966

3966:                                             ; preds = %3958, %4095
  %3967 = phi double [ 0.000000e+00, %3958 ], [ %4045, %4095 ]
  %3968 = phi i32 [ 0, %3958 ], [ %4047, %4095 ]
  %3969 = phi double [ 0.000000e+00, %3958 ], [ %4046, %4095 ]
  %3970 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %3971, label %4040

3971:                                             ; preds = %3966, %4030
  %3972 = phi i32 [ %4039, %4030 ], [ 0, %3966 ]
  %3973 = phi i64 [ %3981, %4030 ], [ %3963, %3966 ]
  %3974 = phi i64 [ %4038, %4030 ], [ %3962, %3966 ]
  %3975 = phi i32 [ %4036, %4030 ], [ %3970, %3966 ]
  %3976 = sub i32 %3961, %3972
  %3977 = tail call i32 @llvm.smin.i32(i32 %3976, i32 0)
  %3978 = sub i32 %3976, %3977
  %3979 = zext i32 %3978 to i64
  %3980 = add nuw nsw i64 %3979, 1
  %3981 = add nsw i64 %3973, -1
  %3982 = icmp ult i32 %3978, 31
  br i1 %3982, label %4018, label %3983

3983:                                             ; preds = %3971
  %3984 = and i64 %3980, 8589934560
  %3985 = sub i64 %3974, %3984
  br label %3986

3986:                                             ; preds = %3986, %3983
  %3987 = phi i64 [ 0, %3983 ], [ %4010, %3986 ]
  %3988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4006, %3986 ]
  %3989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4007, %3986 ]
  %3990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4008, %3986 ]
  %3991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4009, %3986 ]
  %3992 = sub i64 %3974, %3987
  %3993 = getelementptr inbounds i32, ptr %9, i64 %3992
  %3994 = getelementptr inbounds i32, ptr %3993, i64 -7
  %3995 = load <8 x i32>, ptr %3994, align 4, !tbaa !5
  %3996 = shufflevector <8 x i32> %3995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3997 = getelementptr inbounds i32, ptr %3993, i64 -15
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = getelementptr inbounds i32, ptr %3993, i64 -23
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !5
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3993, i64 -31
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !5
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = mul <8 x i32> %3996, %3988
  %4007 = mul <8 x i32> %3999, %3989
  %4008 = mul <8 x i32> %4002, %3990
  %4009 = mul <8 x i32> %4005, %3991
  %4010 = add nuw i64 %3987, 32
  %4011 = icmp eq i64 %4010, %3984
  br i1 %4011, label %4012, label %3986, !llvm.loop !1074

4012:                                             ; preds = %3986
  %4013 = mul <8 x i32> %4007, %4006
  %4014 = mul <8 x i32> %4008, %4013
  %4015 = mul <8 x i32> %4009, %4014
  %4016 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4015)
  %4017 = icmp eq i64 %3980, %3984
  br i1 %4017, label %4030, label %4018

4018:                                             ; preds = %3971, %4012
  %4019 = phi i64 [ %3974, %3971 ], [ %3985, %4012 ]
  %4020 = phi i32 [ 1, %3971 ], [ %4016, %4012 ]
  br label %4021

4021:                                             ; preds = %4018, %4021
  %4022 = phi i64 [ %4027, %4021 ], [ %4019, %4018 ]
  %4023 = phi i32 [ %4026, %4021 ], [ %4020, %4018 ]
  %4024 = getelementptr inbounds i32, ptr %9, i64 %4022
  %4025 = load i32, ptr %4024, align 4, !tbaa !5
  %4026 = mul nsw i32 %4025, %4023
  %4027 = add nsw i64 %4022, -1
  %4028 = trunc i64 %4022 to i32
  %4029 = icmp sgt i32 %4028, 0
  br i1 %4029, label %4021, label %4030, !llvm.loop !1075

4030:                                             ; preds = %4021, %4012
  %4031 = phi i32 [ %4016, %4012 ], [ %4026, %4021 ]
  %4032 = and i64 %3981, 4294967295
  %4033 = getelementptr inbounds i32, ptr %6, i64 %4032
  %4034 = load i32, ptr %4033, align 4, !tbaa !5
  %4035 = mul nsw i32 %4034, %4031
  %4036 = add nsw i32 %4035, %3975
  %4037 = icmp sgt i64 %3973, 2
  %4038 = add nsw i64 %3974, -1
  %4039 = add i32 %3972, 1
  br i1 %4037, label %3971, label %4040, !llvm.loop !1076

4040:                                             ; preds = %4030, %3966
  %4041 = phi i32 [ %3970, %3966 ], [ %4036, %4030 ]
  %4042 = sext i32 %4041 to i64
  %4043 = getelementptr inbounds double, ptr %3643, i64 %4042
  %4044 = load double, ptr %4043, align 8, !tbaa !18
  %4045 = fadd fast double %3967, %4044
  store double %4045, ptr %3645, align 8, !tbaa !18
  %4046 = fadd fast double %3969, 1.000000e+00
  %4047 = add nuw nsw i32 %3968, 1
  br i1 %3960, label %4048, label %4095

4048:                                             ; preds = %4040
  %4049 = load i32, ptr %4, align 4, !tbaa !5
  %4050 = load i32, ptr %12, align 4, !tbaa !5
  %4051 = add nsw i32 %4050, -1
  %4052 = icmp slt i32 %4049, %4051
  br i1 %4052, label %4072, label %4053

4053:                                             ; preds = %4048
  %4054 = icmp eq i32 %4049, %4051
  br i1 %4054, label %4055, label %4088

4055:                                             ; preds = %4053
  store i32 0, ptr %4, align 4, !tbaa !5
  %4056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4056, ptr %6, align 4, !tbaa !5
  br i1 %3965, label %4095, label %4057

4057:                                             ; preds = %4055, %4082
  %4058 = phi i64 [ %4086, %4082 ], [ 1, %4055 ]
  %4059 = getelementptr inbounds i32, ptr %4, i64 %4058
  %4060 = load i32, ptr %4059, align 4, !tbaa !5
  %4061 = getelementptr inbounds i32, ptr %12, i64 %4058
  %4062 = load i32, ptr %4061, align 4, !tbaa !5
  %4063 = add nsw i32 %4062, -1
  %4064 = icmp slt i32 %4060, %4063
  br i1 %4064, label %4065, label %4080

4065:                                             ; preds = %4057
  br i1 %4052, label %4072, label %4066

4066:                                             ; preds = %4065
  %4067 = getelementptr inbounds i32, ptr %7, i64 %4058
  %4068 = load i32, ptr %4067, align 4, !tbaa !5
  %4069 = getelementptr inbounds i32, ptr %6, i64 %4058
  %4070 = load i32, ptr %4069, align 4, !tbaa !5
  %4071 = add nsw i32 %4070, %4068
  store i32 %4071, ptr %4069, align 4, !tbaa !5
  br label %4090

4072:                                             ; preds = %4048, %4065
  %4073 = phi i32 [ %4060, %4065 ], [ %4049, %4048 ]
  %4074 = phi ptr [ %4059, %4065 ], [ %4, %4048 ]
  %4075 = phi i64 [ %4058, %4065 ], [ 0, %4048 ]
  %4076 = add nsw i32 %4073, 1
  store i32 %4076, ptr %4074, align 4, !tbaa !5
  %4077 = getelementptr inbounds i32, ptr %7, i64 %4075
  %4078 = load i32, ptr %4077, align 4, !tbaa !5
  %4079 = getelementptr inbounds i32, ptr %6, i64 %4075
  br label %4090

4080:                                             ; preds = %4057
  %4081 = icmp eq i32 %4060, %4063
  br i1 %4081, label %4082, label %4088

4082:                                             ; preds = %4080
  store i32 0, ptr %4059, align 4, !tbaa !5
  %4083 = getelementptr inbounds i32, ptr %8, i64 %4058
  %4084 = load i32, ptr %4083, align 4, !tbaa !5
  %4085 = getelementptr inbounds i32, ptr %6, i64 %4058
  store i32 %4084, ptr %4085, align 4, !tbaa !5
  %4086 = add nuw nsw i64 %4058, 1
  %4087 = icmp eq i64 %4086, %3963
  br i1 %4087, label %4095, label %4057, !llvm.loop !1077

4088:                                             ; preds = %4053, %4080
  %4089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4090:                                             ; preds = %4066, %4072
  %4091 = phi ptr [ %4079, %4072 ], [ %4059, %4066 ]
  %4092 = phi i32 [ %4078, %4072 ], [ 1, %4066 ]
  %4093 = load i32, ptr %4091, align 4, !tbaa !5
  %4094 = add nsw i32 %4093, %4092
  store i32 %4094, ptr %4091, align 4, !tbaa !5
  br label %4095

4095:                                             ; preds = %4082, %4090, %4055, %4040
  %4096 = icmp eq i32 %4047, %5
  br i1 %4096, label %5437, label %3966, !llvm.loop !1078

4097:                                             ; preds = %3949, %4231
  %4098 = phi double [ 0.000000e+00, %3949 ], [ %4179, %4231 ]
  %4099 = phi i32 [ 0, %3949 ], [ %4180, %4231 ]
  %4100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3950, label %4101, label %4170

4101:                                             ; preds = %4097, %4160
  %4102 = phi i32 [ %4169, %4160 ], [ 0, %4097 ]
  %4103 = phi i64 [ %4111, %4160 ], [ %3954, %4097 ]
  %4104 = phi i64 [ %4168, %4160 ], [ %3953, %4097 ]
  %4105 = phi i32 [ %4166, %4160 ], [ %4100, %4097 ]
  %4106 = sub i32 %3952, %4102
  %4107 = tail call i32 @llvm.smin.i32(i32 %4106, i32 0)
  %4108 = sub i32 %4106, %4107
  %4109 = zext i32 %4108 to i64
  %4110 = add nuw nsw i64 %4109, 1
  %4111 = add nsw i64 %4103, -1
  %4112 = icmp ult i32 %4108, 31
  br i1 %4112, label %4148, label %4113

4113:                                             ; preds = %4101
  %4114 = and i64 %4110, 8589934560
  %4115 = sub i64 %4104, %4114
  br label %4116

4116:                                             ; preds = %4116, %4113
  %4117 = phi i64 [ 0, %4113 ], [ %4140, %4116 ]
  %4118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4136, %4116 ]
  %4119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4137, %4116 ]
  %4120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4138, %4116 ]
  %4121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4139, %4116 ]
  %4122 = sub i64 %4104, %4117
  %4123 = getelementptr inbounds i32, ptr %11, i64 %4122
  %4124 = getelementptr inbounds i32, ptr %4123, i64 -7
  %4125 = load <8 x i32>, ptr %4124, align 4, !tbaa !5
  %4126 = shufflevector <8 x i32> %4125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4127 = getelementptr inbounds i32, ptr %4123, i64 -15
  %4128 = load <8 x i32>, ptr %4127, align 4, !tbaa !5
  %4129 = shufflevector <8 x i32> %4128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4130 = getelementptr inbounds i32, ptr %4123, i64 -23
  %4131 = load <8 x i32>, ptr %4130, align 4, !tbaa !5
  %4132 = shufflevector <8 x i32> %4131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4133 = getelementptr inbounds i32, ptr %4123, i64 -31
  %4134 = load <8 x i32>, ptr %4133, align 4, !tbaa !5
  %4135 = shufflevector <8 x i32> %4134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4136 = mul <8 x i32> %4126, %4118
  %4137 = mul <8 x i32> %4129, %4119
  %4138 = mul <8 x i32> %4132, %4120
  %4139 = mul <8 x i32> %4135, %4121
  %4140 = add nuw i64 %4117, 32
  %4141 = icmp eq i64 %4140, %4114
  br i1 %4141, label %4142, label %4116, !llvm.loop !1079

4142:                                             ; preds = %4116
  %4143 = mul <8 x i32> %4137, %4136
  %4144 = mul <8 x i32> %4138, %4143
  %4145 = mul <8 x i32> %4139, %4144
  %4146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4145)
  %4147 = icmp eq i64 %4110, %4114
  br i1 %4147, label %4160, label %4148

4148:                                             ; preds = %4101, %4142
  %4149 = phi i64 [ %4104, %4101 ], [ %4115, %4142 ]
  %4150 = phi i32 [ 1, %4101 ], [ %4146, %4142 ]
  br label %4151

4151:                                             ; preds = %4148, %4151
  %4152 = phi i64 [ %4157, %4151 ], [ %4149, %4148 ]
  %4153 = phi i32 [ %4156, %4151 ], [ %4150, %4148 ]
  %4154 = getelementptr inbounds i32, ptr %11, i64 %4152
  %4155 = load i32, ptr %4154, align 4, !tbaa !5
  %4156 = mul nsw i32 %4155, %4153
  %4157 = add nsw i64 %4152, -1
  %4158 = trunc i64 %4152 to i32
  %4159 = icmp sgt i32 %4158, 0
  br i1 %4159, label %4151, label %4160, !llvm.loop !1080

4160:                                             ; preds = %4151, %4142
  %4161 = phi i32 [ %4146, %4142 ], [ %4156, %4151 ]
  %4162 = and i64 %4111, 4294967295
  %4163 = getelementptr inbounds i32, ptr %6, i64 %4162
  %4164 = load i32, ptr %4163, align 4, !tbaa !5
  %4165 = mul nsw i32 %4164, %4161
  %4166 = add nsw i32 %4165, %4105
  %4167 = icmp sgt i64 %4103, 2
  %4168 = add nsw i64 %4104, -1
  %4169 = add i32 %4102, 1
  br i1 %4167, label %4101, label %4170, !llvm.loop !1081

4170:                                             ; preds = %4160, %4097
  %4171 = phi i32 [ %4100, %4097 ], [ %4166, %4160 ]
  %4172 = icmp slt i32 %4171, %5
  br i1 %4172, label %4175, label %4173

4173:                                             ; preds = %4170
  %4174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4175:                                             ; preds = %4170
  %4176 = sext i32 %4171 to i64
  %4177 = getelementptr inbounds double, ptr %3643, i64 %4176
  %4178 = load double, ptr %4177, align 8, !tbaa !18
  %4179 = fadd fast double %4098, %4178
  store double %4179, ptr %3645, align 8, !tbaa !18
  %4180 = add nuw nsw i32 %4099, 1
  br i1 %3951, label %4181, label %4231

4181:                                             ; preds = %4175
  %4182 = load i32, ptr %4, align 4, !tbaa !5
  %4183 = load i32, ptr %12, align 4, !tbaa !5
  %4184 = add nsw i32 %4183, -1
  %4185 = icmp slt i32 %4182, %4184
  br i1 %4185, label %4208, label %4186

4186:                                             ; preds = %4181
  %4187 = icmp eq i32 %4182, %4184
  br i1 %4187, label %4188, label %4224

4188:                                             ; preds = %4186
  store i32 0, ptr %4, align 4, !tbaa !5
  %4189 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4189, ptr %6, align 4, !tbaa !5
  br i1 %3956, label %4231, label %4190

4190:                                             ; preds = %4188, %4218
  %4191 = phi i64 [ %4222, %4218 ], [ 1, %4188 ]
  %4192 = getelementptr inbounds i32, ptr %4, i64 %4191
  %4193 = load i32, ptr %4192, align 4, !tbaa !5
  %4194 = getelementptr inbounds i32, ptr %12, i64 %4191
  %4195 = load i32, ptr %4194, align 4, !tbaa !5
  %4196 = add nsw i32 %4195, -1
  %4197 = icmp slt i32 %4193, %4196
  br i1 %4197, label %4198, label %4216

4198:                                             ; preds = %4190
  br i1 %4185, label %4208, label %4199

4199:                                             ; preds = %4198
  %4200 = shl i64 %4191, 32
  %4201 = add i64 %4200, -4294967296
  %4202 = ashr exact i64 %4201, 32
  %4203 = getelementptr inbounds i32, ptr %7, i64 %4202
  %4204 = load i32, ptr %4203, align 4, !tbaa !5
  %4205 = getelementptr inbounds i32, ptr %6, i64 %4191
  %4206 = load i32, ptr %4205, align 4, !tbaa !5
  %4207 = add nsw i32 %4206, %4204
  store i32 %4207, ptr %4205, align 4, !tbaa !5
  br label %4226

4208:                                             ; preds = %4181, %4198
  %4209 = phi i32 [ %4193, %4198 ], [ %4182, %4181 ]
  %4210 = phi ptr [ %4192, %4198 ], [ %4, %4181 ]
  %4211 = phi i64 [ %4191, %4198 ], [ 0, %4181 ]
  %4212 = add nsw i32 %4209, 1
  store i32 %4212, ptr %4210, align 4, !tbaa !5
  %4213 = getelementptr inbounds i32, ptr %7, i64 %4211
  %4214 = load i32, ptr %4213, align 4, !tbaa !5
  %4215 = getelementptr inbounds i32, ptr %6, i64 %4211
  br label %4226

4216:                                             ; preds = %4190
  %4217 = icmp eq i32 %4193, %4196
  br i1 %4217, label %4218, label %4224

4218:                                             ; preds = %4216
  store i32 0, ptr %4192, align 4, !tbaa !5
  %4219 = getelementptr inbounds i32, ptr %8, i64 %4191
  %4220 = load i32, ptr %4219, align 4, !tbaa !5
  %4221 = getelementptr inbounds i32, ptr %6, i64 %4191
  store i32 %4220, ptr %4221, align 4, !tbaa !5
  %4222 = add nuw nsw i64 %4191, 1
  %4223 = icmp eq i64 %4222, %3954
  br i1 %4223, label %4231, label %4190, !llvm.loop !1082

4224:                                             ; preds = %4186, %4216
  %4225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4226:                                             ; preds = %4199, %4208
  %4227 = phi ptr [ %4215, %4208 ], [ %4192, %4199 ]
  %4228 = phi i32 [ %4214, %4208 ], [ 1, %4199 ]
  %4229 = load i32, ptr %4227, align 4, !tbaa !5
  %4230 = add nsw i32 %4229, %4228
  store i32 %4230, ptr %4227, align 4, !tbaa !5
  br label %4231

4231:                                             ; preds = %4218, %4226, %4188, %4175
  %4232 = icmp eq i32 %4180, %5
  br i1 %4232, label %5437, label %4097, !llvm.loop !1083

4233:                                             ; preds = %3649
  %4234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

4235:                                             ; preds = %18
  %4236 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4237 = load ptr, ptr %4236, align 8, !tbaa !9
  %4238 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4239 = load ptr, ptr %4238, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4239, align 4, !tbaa !162
  %4240 = icmp eq i32 %13, 0
  br i1 %4240, label %4241, label %4244

4241:                                             ; preds = %4235
  %4242 = load double, ptr %4237, align 8, !tbaa !18
  %4243 = fptrunc double %4242 to float
  store float %4243, ptr %4239, align 4, !tbaa !162
  br label %5437

4244:                                             ; preds = %4235
  switch i32 %1, label %4835 [
    i32 1, label %4245
    i32 0, label %4543
  ]

4245:                                             ; preds = %4244
  %4246 = getelementptr inbounds i32, ptr %3, i64 %19
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = icmp eq i32 %4247, 0
  %4249 = icmp sgt i32 %5, 0
  br i1 %4248, label %4259, label %4250

4250:                                             ; preds = %4245
  br i1 %4249, label %4251, label %5437

4251:                                             ; preds = %4250
  %4252 = icmp sgt i32 %13, 1
  %4253 = icmp sgt i32 %13, 0
  %4254 = add i32 %13, -2
  %4255 = zext i32 %4254 to i64
  %4256 = zext i32 %13 to i64
  %4257 = add nuw i32 %5, 1
  %4258 = icmp eq i32 %13, 1
  br label %4406

4259:                                             ; preds = %4245
  br i1 %4249, label %4260, label %5437

4260:                                             ; preds = %4259
  %4261 = icmp sgt i32 %13, 1
  %4262 = icmp sgt i32 %13, 0
  %4263 = add i32 %13, -2
  %4264 = zext i32 %4263 to i64
  %4265 = zext i32 %13 to i64
  %4266 = add nuw i32 %5, 1
  %4267 = icmp eq i32 %13, 1
  br label %4268

4268:                                             ; preds = %4260, %4404
  %4269 = phi float [ 0.000000e+00, %4260 ], [ %4354, %4404 ]
  %4270 = phi i32 [ 0, %4260 ], [ %4356, %4404 ]
  %4271 = phi double [ 0.000000e+00, %4260 ], [ %4355, %4404 ]
  %4272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4261, label %4273, label %4342

4273:                                             ; preds = %4268, %4332
  %4274 = phi i32 [ %4341, %4332 ], [ 0, %4268 ]
  %4275 = phi i64 [ %4283, %4332 ], [ %4265, %4268 ]
  %4276 = phi i64 [ %4340, %4332 ], [ %4264, %4268 ]
  %4277 = phi i32 [ %4338, %4332 ], [ %4272, %4268 ]
  %4278 = sub i32 %4263, %4274
  %4279 = tail call i32 @llvm.smin.i32(i32 %4278, i32 0)
  %4280 = sub i32 %4278, %4279
  %4281 = zext i32 %4280 to i64
  %4282 = add nuw nsw i64 %4281, 1
  %4283 = add nsw i64 %4275, -1
  %4284 = icmp ult i32 %4280, 31
  br i1 %4284, label %4320, label %4285

4285:                                             ; preds = %4273
  %4286 = and i64 %4282, 8589934560
  %4287 = sub i64 %4276, %4286
  br label %4288

4288:                                             ; preds = %4288, %4285
  %4289 = phi i64 [ 0, %4285 ], [ %4312, %4288 ]
  %4290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4308, %4288 ]
  %4291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4309, %4288 ]
  %4292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4310, %4288 ]
  %4293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4311, %4288 ]
  %4294 = sub i64 %4276, %4289
  %4295 = getelementptr inbounds i32, ptr %9, i64 %4294
  %4296 = getelementptr inbounds i32, ptr %4295, i64 -7
  %4297 = load <8 x i32>, ptr %4296, align 4, !tbaa !5
  %4298 = shufflevector <8 x i32> %4297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4299 = getelementptr inbounds i32, ptr %4295, i64 -15
  %4300 = load <8 x i32>, ptr %4299, align 4, !tbaa !5
  %4301 = shufflevector <8 x i32> %4300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4302 = getelementptr inbounds i32, ptr %4295, i64 -23
  %4303 = load <8 x i32>, ptr %4302, align 4, !tbaa !5
  %4304 = shufflevector <8 x i32> %4303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4305 = getelementptr inbounds i32, ptr %4295, i64 -31
  %4306 = load <8 x i32>, ptr %4305, align 4, !tbaa !5
  %4307 = shufflevector <8 x i32> %4306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4308 = mul <8 x i32> %4298, %4290
  %4309 = mul <8 x i32> %4301, %4291
  %4310 = mul <8 x i32> %4304, %4292
  %4311 = mul <8 x i32> %4307, %4293
  %4312 = add nuw i64 %4289, 32
  %4313 = icmp eq i64 %4312, %4286
  br i1 %4313, label %4314, label %4288, !llvm.loop !1084

4314:                                             ; preds = %4288
  %4315 = mul <8 x i32> %4309, %4308
  %4316 = mul <8 x i32> %4310, %4315
  %4317 = mul <8 x i32> %4311, %4316
  %4318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4317)
  %4319 = icmp eq i64 %4282, %4286
  br i1 %4319, label %4332, label %4320

4320:                                             ; preds = %4273, %4314
  %4321 = phi i64 [ %4276, %4273 ], [ %4287, %4314 ]
  %4322 = phi i32 [ 1, %4273 ], [ %4318, %4314 ]
  br label %4323

4323:                                             ; preds = %4320, %4323
  %4324 = phi i64 [ %4329, %4323 ], [ %4321, %4320 ]
  %4325 = phi i32 [ %4328, %4323 ], [ %4322, %4320 ]
  %4326 = getelementptr inbounds i32, ptr %9, i64 %4324
  %4327 = load i32, ptr %4326, align 4, !tbaa !5
  %4328 = mul nsw i32 %4327, %4325
  %4329 = add nsw i64 %4324, -1
  %4330 = trunc i64 %4324 to i32
  %4331 = icmp sgt i32 %4330, 0
  br i1 %4331, label %4323, label %4332, !llvm.loop !1085

4332:                                             ; preds = %4323, %4314
  %4333 = phi i32 [ %4318, %4314 ], [ %4328, %4323 ]
  %4334 = and i64 %4283, 4294967295
  %4335 = getelementptr inbounds i32, ptr %6, i64 %4334
  %4336 = load i32, ptr %4335, align 4, !tbaa !5
  %4337 = mul nsw i32 %4336, %4333
  %4338 = add nsw i32 %4337, %4277
  %4339 = icmp sgt i64 %4275, 2
  %4340 = add nsw i64 %4276, -1
  %4341 = add i32 %4274, 1
  br i1 %4339, label %4273, label %4342, !llvm.loop !1086

4342:                                             ; preds = %4332, %4268
  %4343 = phi i32 [ %4272, %4268 ], [ %4338, %4332 ]
  %4344 = sext i32 %4343 to i64
  %4345 = getelementptr inbounds double, ptr %2, i64 %4344
  %4346 = load double, ptr %4345, align 8, !tbaa !18
  %4347 = getelementptr inbounds double, ptr %4237, i64 %4344
  %4348 = load double, ptr %4347, align 8, !tbaa !18
  %4349 = fptrunc double %4348 to float
  %4350 = fpext float %4269 to double
  %4351 = fpext float %4349 to double
  %4352 = fmul fast double %4346, %4351
  %4353 = fadd fast double %4352, %4350
  %4354 = fptrunc double %4353 to float
  %4355 = fadd fast double %4346, %4271
  %4356 = add nuw nsw i32 %4270, 1
  br i1 %4262, label %4357, label %4404

4357:                                             ; preds = %4342
  %4358 = load i32, ptr %4, align 4, !tbaa !5
  %4359 = load i32, ptr %12, align 4, !tbaa !5
  %4360 = add nsw i32 %4359, -1
  %4361 = icmp slt i32 %4358, %4360
  br i1 %4361, label %4381, label %4362

4362:                                             ; preds = %4357
  %4363 = icmp eq i32 %4358, %4360
  br i1 %4363, label %4364, label %4397

4364:                                             ; preds = %4362
  store i32 0, ptr %4, align 4, !tbaa !5
  %4365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4365, ptr %6, align 4, !tbaa !5
  br i1 %4267, label %4404, label %4366

4366:                                             ; preds = %4364, %4391
  %4367 = phi i64 [ %4395, %4391 ], [ 1, %4364 ]
  %4368 = getelementptr inbounds i32, ptr %4, i64 %4367
  %4369 = load i32, ptr %4368, align 4, !tbaa !5
  %4370 = getelementptr inbounds i32, ptr %12, i64 %4367
  %4371 = load i32, ptr %4370, align 4, !tbaa !5
  %4372 = add nsw i32 %4371, -1
  %4373 = icmp slt i32 %4369, %4372
  br i1 %4373, label %4374, label %4389

4374:                                             ; preds = %4366
  br i1 %4361, label %4381, label %4375

4375:                                             ; preds = %4374
  %4376 = getelementptr inbounds i32, ptr %7, i64 %4367
  %4377 = load i32, ptr %4376, align 4, !tbaa !5
  %4378 = getelementptr inbounds i32, ptr %6, i64 %4367
  %4379 = load i32, ptr %4378, align 4, !tbaa !5
  %4380 = add nsw i32 %4379, %4377
  store i32 %4380, ptr %4378, align 4, !tbaa !5
  br label %4399

4381:                                             ; preds = %4357, %4374
  %4382 = phi i32 [ %4369, %4374 ], [ %4358, %4357 ]
  %4383 = phi ptr [ %4368, %4374 ], [ %4, %4357 ]
  %4384 = phi i64 [ %4367, %4374 ], [ 0, %4357 ]
  %4385 = add nsw i32 %4382, 1
  store i32 %4385, ptr %4383, align 4, !tbaa !5
  %4386 = getelementptr inbounds i32, ptr %7, i64 %4384
  %4387 = load i32, ptr %4386, align 4, !tbaa !5
  %4388 = getelementptr inbounds i32, ptr %6, i64 %4384
  br label %4399

4389:                                             ; preds = %4366
  %4390 = icmp eq i32 %4369, %4372
  br i1 %4390, label %4391, label %4397

4391:                                             ; preds = %4389
  store i32 0, ptr %4368, align 4, !tbaa !5
  %4392 = getelementptr inbounds i32, ptr %8, i64 %4367
  %4393 = load i32, ptr %4392, align 4, !tbaa !5
  %4394 = getelementptr inbounds i32, ptr %6, i64 %4367
  store i32 %4393, ptr %4394, align 4, !tbaa !5
  %4395 = add nuw nsw i64 %4367, 1
  %4396 = icmp eq i64 %4395, %4265
  br i1 %4396, label %4404, label %4366, !llvm.loop !1087

4397:                                             ; preds = %4362, %4389
  store float %4354, ptr %4239, align 4, !tbaa !162
  %4398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4399:                                             ; preds = %4375, %4381
  %4400 = phi ptr [ %4388, %4381 ], [ %4368, %4375 ]
  %4401 = phi i32 [ %4387, %4381 ], [ 1, %4375 ]
  %4402 = load i32, ptr %4400, align 4, !tbaa !5
  %4403 = add nsw i32 %4402, %4401
  store i32 %4403, ptr %4400, align 4, !tbaa !5
  br label %4404

4404:                                             ; preds = %4391, %4399, %4364, %4342
  %4405 = icmp eq i32 %4356, %5
  br i1 %4405, label %5435, label %4268, !llvm.loop !1088

4406:                                             ; preds = %4251, %4541
  %4407 = phi float [ 0.000000e+00, %4251 ], [ %4489, %4541 ]
  %4408 = phi i32 [ 0, %4251 ], [ %4490, %4541 ]
  %4409 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4252, label %4410, label %4479

4410:                                             ; preds = %4406, %4469
  %4411 = phi i32 [ %4478, %4469 ], [ 0, %4406 ]
  %4412 = phi i64 [ %4420, %4469 ], [ %4256, %4406 ]
  %4413 = phi i64 [ %4477, %4469 ], [ %4255, %4406 ]
  %4414 = phi i32 [ %4475, %4469 ], [ %4409, %4406 ]
  %4415 = sub i32 %4254, %4411
  %4416 = tail call i32 @llvm.smin.i32(i32 %4415, i32 0)
  %4417 = sub i32 %4415, %4416
  %4418 = zext i32 %4417 to i64
  %4419 = add nuw nsw i64 %4418, 1
  %4420 = add nsw i64 %4412, -1
  %4421 = icmp ult i32 %4417, 31
  br i1 %4421, label %4457, label %4422

4422:                                             ; preds = %4410
  %4423 = and i64 %4419, 8589934560
  %4424 = sub i64 %4413, %4423
  br label %4425

4425:                                             ; preds = %4425, %4422
  %4426 = phi i64 [ 0, %4422 ], [ %4449, %4425 ]
  %4427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4445, %4425 ]
  %4428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4446, %4425 ]
  %4429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4447, %4425 ]
  %4430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4448, %4425 ]
  %4431 = sub i64 %4413, %4426
  %4432 = getelementptr inbounds i32, ptr %11, i64 %4431
  %4433 = getelementptr inbounds i32, ptr %4432, i64 -7
  %4434 = load <8 x i32>, ptr %4433, align 4, !tbaa !5
  %4435 = shufflevector <8 x i32> %4434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4436 = getelementptr inbounds i32, ptr %4432, i64 -15
  %4437 = load <8 x i32>, ptr %4436, align 4, !tbaa !5
  %4438 = shufflevector <8 x i32> %4437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4439 = getelementptr inbounds i32, ptr %4432, i64 -23
  %4440 = load <8 x i32>, ptr %4439, align 4, !tbaa !5
  %4441 = shufflevector <8 x i32> %4440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4442 = getelementptr inbounds i32, ptr %4432, i64 -31
  %4443 = load <8 x i32>, ptr %4442, align 4, !tbaa !5
  %4444 = shufflevector <8 x i32> %4443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4445 = mul <8 x i32> %4435, %4427
  %4446 = mul <8 x i32> %4438, %4428
  %4447 = mul <8 x i32> %4441, %4429
  %4448 = mul <8 x i32> %4444, %4430
  %4449 = add nuw i64 %4426, 32
  %4450 = icmp eq i64 %4449, %4423
  br i1 %4450, label %4451, label %4425, !llvm.loop !1089

4451:                                             ; preds = %4425
  %4452 = mul <8 x i32> %4446, %4445
  %4453 = mul <8 x i32> %4447, %4452
  %4454 = mul <8 x i32> %4448, %4453
  %4455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4454)
  %4456 = icmp eq i64 %4419, %4423
  br i1 %4456, label %4469, label %4457

4457:                                             ; preds = %4410, %4451
  %4458 = phi i64 [ %4413, %4410 ], [ %4424, %4451 ]
  %4459 = phi i32 [ 1, %4410 ], [ %4455, %4451 ]
  br label %4460

4460:                                             ; preds = %4457, %4460
  %4461 = phi i64 [ %4466, %4460 ], [ %4458, %4457 ]
  %4462 = phi i32 [ %4465, %4460 ], [ %4459, %4457 ]
  %4463 = getelementptr inbounds i32, ptr %11, i64 %4461
  %4464 = load i32, ptr %4463, align 4, !tbaa !5
  %4465 = mul nsw i32 %4464, %4462
  %4466 = add nsw i64 %4461, -1
  %4467 = trunc i64 %4461 to i32
  %4468 = icmp sgt i32 %4467, 0
  br i1 %4468, label %4460, label %4469, !llvm.loop !1090

4469:                                             ; preds = %4460, %4451
  %4470 = phi i32 [ %4455, %4451 ], [ %4465, %4460 ]
  %4471 = and i64 %4420, 4294967295
  %4472 = getelementptr inbounds i32, ptr %6, i64 %4471
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = mul nsw i32 %4473, %4470
  %4475 = add nsw i32 %4474, %4414
  %4476 = icmp sgt i64 %4412, 2
  %4477 = add nsw i64 %4413, -1
  %4478 = add i32 %4411, 1
  br i1 %4476, label %4410, label %4479, !llvm.loop !1091

4479:                                             ; preds = %4469, %4406
  %4480 = phi i32 [ %4409, %4406 ], [ %4475, %4469 ]
  %4481 = icmp slt i32 %4480, %5
  br i1 %4481, label %4484, label %4482

4482:                                             ; preds = %4479
  %4483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4484:                                             ; preds = %4479
  %4485 = sext i32 %4480 to i64
  %4486 = getelementptr inbounds double, ptr %4237, i64 %4485
  %4487 = load double, ptr %4486, align 8, !tbaa !18
  %4488 = fptrunc double %4487 to float
  %4489 = fadd fast float %4407, %4488
  store float %4489, ptr %4239, align 4, !tbaa !162
  %4490 = add nuw nsw i32 %4408, 1
  br i1 %4253, label %4491, label %4541

4491:                                             ; preds = %4484
  %4492 = load i32, ptr %4, align 4, !tbaa !5
  %4493 = load i32, ptr %12, align 4, !tbaa !5
  %4494 = add nsw i32 %4493, -1
  %4495 = icmp slt i32 %4492, %4494
  br i1 %4495, label %4518, label %4496

4496:                                             ; preds = %4491
  %4497 = icmp eq i32 %4492, %4494
  br i1 %4497, label %4498, label %4534

4498:                                             ; preds = %4496
  store i32 0, ptr %4, align 4, !tbaa !5
  %4499 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4499, ptr %6, align 4, !tbaa !5
  br i1 %4258, label %4541, label %4500

4500:                                             ; preds = %4498, %4528
  %4501 = phi i64 [ %4532, %4528 ], [ 1, %4498 ]
  %4502 = getelementptr inbounds i32, ptr %4, i64 %4501
  %4503 = load i32, ptr %4502, align 4, !tbaa !5
  %4504 = getelementptr inbounds i32, ptr %12, i64 %4501
  %4505 = load i32, ptr %4504, align 4, !tbaa !5
  %4506 = add nsw i32 %4505, -1
  %4507 = icmp slt i32 %4503, %4506
  br i1 %4507, label %4508, label %4526

4508:                                             ; preds = %4500
  br i1 %4495, label %4518, label %4509

4509:                                             ; preds = %4508
  %4510 = shl i64 %4501, 32
  %4511 = add i64 %4510, -4294967296
  %4512 = ashr exact i64 %4511, 32
  %4513 = getelementptr inbounds i32, ptr %7, i64 %4512
  %4514 = load i32, ptr %4513, align 4, !tbaa !5
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4501
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = add nsw i32 %4516, %4514
  store i32 %4517, ptr %4515, align 4, !tbaa !5
  br label %4536

4518:                                             ; preds = %4491, %4508
  %4519 = phi i32 [ %4503, %4508 ], [ %4492, %4491 ]
  %4520 = phi ptr [ %4502, %4508 ], [ %4, %4491 ]
  %4521 = phi i64 [ %4501, %4508 ], [ 0, %4491 ]
  %4522 = add nsw i32 %4519, 1
  store i32 %4522, ptr %4520, align 4, !tbaa !5
  %4523 = getelementptr inbounds i32, ptr %7, i64 %4521
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = getelementptr inbounds i32, ptr %6, i64 %4521
  br label %4536

4526:                                             ; preds = %4500
  %4527 = icmp eq i32 %4503, %4506
  br i1 %4527, label %4528, label %4534

4528:                                             ; preds = %4526
  store i32 0, ptr %4502, align 4, !tbaa !5
  %4529 = getelementptr inbounds i32, ptr %8, i64 %4501
  %4530 = load i32, ptr %4529, align 4, !tbaa !5
  %4531 = getelementptr inbounds i32, ptr %6, i64 %4501
  store i32 %4530, ptr %4531, align 4, !tbaa !5
  %4532 = add nuw nsw i64 %4501, 1
  %4533 = icmp eq i64 %4532, %4256
  br i1 %4533, label %4541, label %4500, !llvm.loop !1092

4534:                                             ; preds = %4496, %4526
  %4535 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4536:                                             ; preds = %4509, %4518
  %4537 = phi ptr [ %4525, %4518 ], [ %4502, %4509 ]
  %4538 = phi i32 [ %4524, %4518 ], [ 1, %4509 ]
  %4539 = load i32, ptr %4537, align 4, !tbaa !5
  %4540 = add nsw i32 %4539, %4538
  store i32 %4540, ptr %4537, align 4, !tbaa !5
  br label %4541

4541:                                             ; preds = %4528, %4536, %4498, %4484
  %4542 = icmp eq i32 %4490, %5
  br i1 %4542, label %5437, label %4406, !llvm.loop !1093

4543:                                             ; preds = %4244
  %4544 = getelementptr inbounds i32, ptr %3, i64 %19
  %4545 = load i32, ptr %4544, align 4, !tbaa !5
  %4546 = icmp eq i32 %4545, 0
  %4547 = icmp sgt i32 %5, 0
  br i1 %4546, label %4557, label %4548

4548:                                             ; preds = %4543
  br i1 %4547, label %4549, label %5437

4549:                                             ; preds = %4548
  %4550 = icmp sgt i32 %13, 1
  %4551 = icmp sgt i32 %13, 0
  %4552 = add i32 %13, -2
  %4553 = zext i32 %4552 to i64
  %4554 = zext i32 %13 to i64
  %4555 = add nuw i32 %5, 1
  %4556 = icmp eq i32 %13, 1
  br label %4698

4557:                                             ; preds = %4543
  br i1 %4547, label %4558, label %5437

4558:                                             ; preds = %4557
  %4559 = icmp sgt i32 %13, 1
  %4560 = icmp sgt i32 %13, 0
  %4561 = add i32 %13, -2
  %4562 = zext i32 %4561 to i64
  %4563 = zext i32 %13 to i64
  %4564 = add nuw i32 %5, 1
  %4565 = icmp eq i32 %13, 1
  br label %4566

4566:                                             ; preds = %4558, %4696
  %4567 = phi float [ 0.000000e+00, %4558 ], [ %4646, %4696 ]
  %4568 = phi i32 [ 0, %4558 ], [ %4648, %4696 ]
  %4569 = phi double [ 0.000000e+00, %4558 ], [ %4647, %4696 ]
  %4570 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4559, label %4571, label %4640

4571:                                             ; preds = %4566, %4630
  %4572 = phi i32 [ %4639, %4630 ], [ 0, %4566 ]
  %4573 = phi i64 [ %4581, %4630 ], [ %4563, %4566 ]
  %4574 = phi i64 [ %4638, %4630 ], [ %4562, %4566 ]
  %4575 = phi i32 [ %4636, %4630 ], [ %4570, %4566 ]
  %4576 = sub i32 %4561, %4572
  %4577 = tail call i32 @llvm.smin.i32(i32 %4576, i32 0)
  %4578 = sub i32 %4576, %4577
  %4579 = zext i32 %4578 to i64
  %4580 = add nuw nsw i64 %4579, 1
  %4581 = add nsw i64 %4573, -1
  %4582 = icmp ult i32 %4578, 31
  br i1 %4582, label %4618, label %4583

4583:                                             ; preds = %4571
  %4584 = and i64 %4580, 8589934560
  %4585 = sub i64 %4574, %4584
  br label %4586

4586:                                             ; preds = %4586, %4583
  %4587 = phi i64 [ 0, %4583 ], [ %4610, %4586 ]
  %4588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4606, %4586 ]
  %4589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4607, %4586 ]
  %4590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4608, %4586 ]
  %4591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4609, %4586 ]
  %4592 = sub i64 %4574, %4587
  %4593 = getelementptr inbounds i32, ptr %9, i64 %4592
  %4594 = getelementptr inbounds i32, ptr %4593, i64 -7
  %4595 = load <8 x i32>, ptr %4594, align 4, !tbaa !5
  %4596 = shufflevector <8 x i32> %4595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4597 = getelementptr inbounds i32, ptr %4593, i64 -15
  %4598 = load <8 x i32>, ptr %4597, align 4, !tbaa !5
  %4599 = shufflevector <8 x i32> %4598, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4600 = getelementptr inbounds i32, ptr %4593, i64 -23
  %4601 = load <8 x i32>, ptr %4600, align 4, !tbaa !5
  %4602 = shufflevector <8 x i32> %4601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4603 = getelementptr inbounds i32, ptr %4593, i64 -31
  %4604 = load <8 x i32>, ptr %4603, align 4, !tbaa !5
  %4605 = shufflevector <8 x i32> %4604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4606 = mul <8 x i32> %4596, %4588
  %4607 = mul <8 x i32> %4599, %4589
  %4608 = mul <8 x i32> %4602, %4590
  %4609 = mul <8 x i32> %4605, %4591
  %4610 = add nuw i64 %4587, 32
  %4611 = icmp eq i64 %4610, %4584
  br i1 %4611, label %4612, label %4586, !llvm.loop !1094

4612:                                             ; preds = %4586
  %4613 = mul <8 x i32> %4607, %4606
  %4614 = mul <8 x i32> %4608, %4613
  %4615 = mul <8 x i32> %4609, %4614
  %4616 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4615)
  %4617 = icmp eq i64 %4580, %4584
  br i1 %4617, label %4630, label %4618

4618:                                             ; preds = %4571, %4612
  %4619 = phi i64 [ %4574, %4571 ], [ %4585, %4612 ]
  %4620 = phi i32 [ 1, %4571 ], [ %4616, %4612 ]
  br label %4621

4621:                                             ; preds = %4618, %4621
  %4622 = phi i64 [ %4627, %4621 ], [ %4619, %4618 ]
  %4623 = phi i32 [ %4626, %4621 ], [ %4620, %4618 ]
  %4624 = getelementptr inbounds i32, ptr %9, i64 %4622
  %4625 = load i32, ptr %4624, align 4, !tbaa !5
  %4626 = mul nsw i32 %4625, %4623
  %4627 = add nsw i64 %4622, -1
  %4628 = trunc i64 %4622 to i32
  %4629 = icmp sgt i32 %4628, 0
  br i1 %4629, label %4621, label %4630, !llvm.loop !1095

4630:                                             ; preds = %4621, %4612
  %4631 = phi i32 [ %4616, %4612 ], [ %4626, %4621 ]
  %4632 = and i64 %4581, 4294967295
  %4633 = getelementptr inbounds i32, ptr %6, i64 %4632
  %4634 = load i32, ptr %4633, align 4, !tbaa !5
  %4635 = mul nsw i32 %4634, %4631
  %4636 = add nsw i32 %4635, %4575
  %4637 = icmp sgt i64 %4573, 2
  %4638 = add nsw i64 %4574, -1
  %4639 = add i32 %4572, 1
  br i1 %4637, label %4571, label %4640, !llvm.loop !1096

4640:                                             ; preds = %4630, %4566
  %4641 = phi i32 [ %4570, %4566 ], [ %4636, %4630 ]
  %4642 = sext i32 %4641 to i64
  %4643 = getelementptr inbounds double, ptr %4237, i64 %4642
  %4644 = load double, ptr %4643, align 8, !tbaa !18
  %4645 = fptrunc double %4644 to float
  %4646 = fadd fast float %4567, %4645
  %4647 = fadd fast double %4569, 1.000000e+00
  %4648 = add nuw nsw i32 %4568, 1
  br i1 %4560, label %4649, label %4696

4649:                                             ; preds = %4640
  %4650 = load i32, ptr %4, align 4, !tbaa !5
  %4651 = load i32, ptr %12, align 4, !tbaa !5
  %4652 = add nsw i32 %4651, -1
  %4653 = icmp slt i32 %4650, %4652
  br i1 %4653, label %4673, label %4654

4654:                                             ; preds = %4649
  %4655 = icmp eq i32 %4650, %4652
  br i1 %4655, label %4656, label %4689

4656:                                             ; preds = %4654
  store i32 0, ptr %4, align 4, !tbaa !5
  %4657 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4657, ptr %6, align 4, !tbaa !5
  br i1 %4565, label %4696, label %4658

4658:                                             ; preds = %4656, %4683
  %4659 = phi i64 [ %4687, %4683 ], [ 1, %4656 ]
  %4660 = getelementptr inbounds i32, ptr %4, i64 %4659
  %4661 = load i32, ptr %4660, align 4, !tbaa !5
  %4662 = getelementptr inbounds i32, ptr %12, i64 %4659
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = add nsw i32 %4663, -1
  %4665 = icmp slt i32 %4661, %4664
  br i1 %4665, label %4666, label %4681

4666:                                             ; preds = %4658
  br i1 %4653, label %4673, label %4667

4667:                                             ; preds = %4666
  %4668 = getelementptr inbounds i32, ptr %7, i64 %4659
  %4669 = load i32, ptr %4668, align 4, !tbaa !5
  %4670 = getelementptr inbounds i32, ptr %6, i64 %4659
  %4671 = load i32, ptr %4670, align 4, !tbaa !5
  %4672 = add nsw i32 %4671, %4669
  store i32 %4672, ptr %4670, align 4, !tbaa !5
  br label %4691

4673:                                             ; preds = %4649, %4666
  %4674 = phi i32 [ %4661, %4666 ], [ %4650, %4649 ]
  %4675 = phi ptr [ %4660, %4666 ], [ %4, %4649 ]
  %4676 = phi i64 [ %4659, %4666 ], [ 0, %4649 ]
  %4677 = add nsw i32 %4674, 1
  store i32 %4677, ptr %4675, align 4, !tbaa !5
  %4678 = getelementptr inbounds i32, ptr %7, i64 %4676
  %4679 = load i32, ptr %4678, align 4, !tbaa !5
  %4680 = getelementptr inbounds i32, ptr %6, i64 %4676
  br label %4691

4681:                                             ; preds = %4658
  %4682 = icmp eq i32 %4661, %4664
  br i1 %4682, label %4683, label %4689

4683:                                             ; preds = %4681
  store i32 0, ptr %4660, align 4, !tbaa !5
  %4684 = getelementptr inbounds i32, ptr %8, i64 %4659
  %4685 = load i32, ptr %4684, align 4, !tbaa !5
  %4686 = getelementptr inbounds i32, ptr %6, i64 %4659
  store i32 %4685, ptr %4686, align 4, !tbaa !5
  %4687 = add nuw nsw i64 %4659, 1
  %4688 = icmp eq i64 %4687, %4563
  br i1 %4688, label %4696, label %4658, !llvm.loop !1097

4689:                                             ; preds = %4654, %4681
  store float %4646, ptr %4239, align 4, !tbaa !162
  %4690 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4691:                                             ; preds = %4667, %4673
  %4692 = phi ptr [ %4680, %4673 ], [ %4660, %4667 ]
  %4693 = phi i32 [ %4679, %4673 ], [ 1, %4667 ]
  %4694 = load i32, ptr %4692, align 4, !tbaa !5
  %4695 = add nsw i32 %4694, %4693
  store i32 %4695, ptr %4692, align 4, !tbaa !5
  br label %4696

4696:                                             ; preds = %4683, %4691, %4656, %4640
  %4697 = icmp eq i32 %4648, %5
  br i1 %4697, label %5436, label %4566, !llvm.loop !1098

4698:                                             ; preds = %4549, %4833
  %4699 = phi float [ 0.000000e+00, %4549 ], [ %4781, %4833 ]
  %4700 = phi i32 [ 0, %4549 ], [ %4782, %4833 ]
  %4701 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4550, label %4702, label %4771

4702:                                             ; preds = %4698, %4761
  %4703 = phi i32 [ %4770, %4761 ], [ 0, %4698 ]
  %4704 = phi i64 [ %4712, %4761 ], [ %4554, %4698 ]
  %4705 = phi i64 [ %4769, %4761 ], [ %4553, %4698 ]
  %4706 = phi i32 [ %4767, %4761 ], [ %4701, %4698 ]
  %4707 = sub i32 %4552, %4703
  %4708 = tail call i32 @llvm.smin.i32(i32 %4707, i32 0)
  %4709 = sub i32 %4707, %4708
  %4710 = zext i32 %4709 to i64
  %4711 = add nuw nsw i64 %4710, 1
  %4712 = add nsw i64 %4704, -1
  %4713 = icmp ult i32 %4709, 31
  br i1 %4713, label %4749, label %4714

4714:                                             ; preds = %4702
  %4715 = and i64 %4711, 8589934560
  %4716 = sub i64 %4705, %4715
  br label %4717

4717:                                             ; preds = %4717, %4714
  %4718 = phi i64 [ 0, %4714 ], [ %4741, %4717 ]
  %4719 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4737, %4717 ]
  %4720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4738, %4717 ]
  %4721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4739, %4717 ]
  %4722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4740, %4717 ]
  %4723 = sub i64 %4705, %4718
  %4724 = getelementptr inbounds i32, ptr %11, i64 %4723
  %4725 = getelementptr inbounds i32, ptr %4724, i64 -7
  %4726 = load <8 x i32>, ptr %4725, align 4, !tbaa !5
  %4727 = shufflevector <8 x i32> %4726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4728 = getelementptr inbounds i32, ptr %4724, i64 -15
  %4729 = load <8 x i32>, ptr %4728, align 4, !tbaa !5
  %4730 = shufflevector <8 x i32> %4729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4731 = getelementptr inbounds i32, ptr %4724, i64 -23
  %4732 = load <8 x i32>, ptr %4731, align 4, !tbaa !5
  %4733 = shufflevector <8 x i32> %4732, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4734 = getelementptr inbounds i32, ptr %4724, i64 -31
  %4735 = load <8 x i32>, ptr %4734, align 4, !tbaa !5
  %4736 = shufflevector <8 x i32> %4735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4737 = mul <8 x i32> %4727, %4719
  %4738 = mul <8 x i32> %4730, %4720
  %4739 = mul <8 x i32> %4733, %4721
  %4740 = mul <8 x i32> %4736, %4722
  %4741 = add nuw i64 %4718, 32
  %4742 = icmp eq i64 %4741, %4715
  br i1 %4742, label %4743, label %4717, !llvm.loop !1099

4743:                                             ; preds = %4717
  %4744 = mul <8 x i32> %4738, %4737
  %4745 = mul <8 x i32> %4739, %4744
  %4746 = mul <8 x i32> %4740, %4745
  %4747 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4746)
  %4748 = icmp eq i64 %4711, %4715
  br i1 %4748, label %4761, label %4749

4749:                                             ; preds = %4702, %4743
  %4750 = phi i64 [ %4705, %4702 ], [ %4716, %4743 ]
  %4751 = phi i32 [ 1, %4702 ], [ %4747, %4743 ]
  br label %4752

4752:                                             ; preds = %4749, %4752
  %4753 = phi i64 [ %4758, %4752 ], [ %4750, %4749 ]
  %4754 = phi i32 [ %4757, %4752 ], [ %4751, %4749 ]
  %4755 = getelementptr inbounds i32, ptr %11, i64 %4753
  %4756 = load i32, ptr %4755, align 4, !tbaa !5
  %4757 = mul nsw i32 %4756, %4754
  %4758 = add nsw i64 %4753, -1
  %4759 = trunc i64 %4753 to i32
  %4760 = icmp sgt i32 %4759, 0
  br i1 %4760, label %4752, label %4761, !llvm.loop !1100

4761:                                             ; preds = %4752, %4743
  %4762 = phi i32 [ %4747, %4743 ], [ %4757, %4752 ]
  %4763 = and i64 %4712, 4294967295
  %4764 = getelementptr inbounds i32, ptr %6, i64 %4763
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = mul nsw i32 %4765, %4762
  %4767 = add nsw i32 %4766, %4706
  %4768 = icmp sgt i64 %4704, 2
  %4769 = add nsw i64 %4705, -1
  %4770 = add i32 %4703, 1
  br i1 %4768, label %4702, label %4771, !llvm.loop !1101

4771:                                             ; preds = %4761, %4698
  %4772 = phi i32 [ %4701, %4698 ], [ %4767, %4761 ]
  %4773 = icmp slt i32 %4772, %5
  br i1 %4773, label %4776, label %4774

4774:                                             ; preds = %4771
  %4775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4776:                                             ; preds = %4771
  %4777 = sext i32 %4772 to i64
  %4778 = getelementptr inbounds double, ptr %4237, i64 %4777
  %4779 = load double, ptr %4778, align 8, !tbaa !18
  %4780 = fptrunc double %4779 to float
  %4781 = fadd fast float %4699, %4780
  store float %4781, ptr %4239, align 4, !tbaa !162
  %4782 = add nuw nsw i32 %4700, 1
  br i1 %4551, label %4783, label %4833

4783:                                             ; preds = %4776
  %4784 = load i32, ptr %4, align 4, !tbaa !5
  %4785 = load i32, ptr %12, align 4, !tbaa !5
  %4786 = add nsw i32 %4785, -1
  %4787 = icmp slt i32 %4784, %4786
  br i1 %4787, label %4810, label %4788

4788:                                             ; preds = %4783
  %4789 = icmp eq i32 %4784, %4786
  br i1 %4789, label %4790, label %4826

4790:                                             ; preds = %4788
  store i32 0, ptr %4, align 4, !tbaa !5
  %4791 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4791, ptr %6, align 4, !tbaa !5
  br i1 %4556, label %4833, label %4792

4792:                                             ; preds = %4790, %4820
  %4793 = phi i64 [ %4824, %4820 ], [ 1, %4790 ]
  %4794 = getelementptr inbounds i32, ptr %4, i64 %4793
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %12, i64 %4793
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = add nsw i32 %4797, -1
  %4799 = icmp slt i32 %4795, %4798
  br i1 %4799, label %4800, label %4818

4800:                                             ; preds = %4792
  br i1 %4787, label %4810, label %4801

4801:                                             ; preds = %4800
  %4802 = shl i64 %4793, 32
  %4803 = add i64 %4802, -4294967296
  %4804 = ashr exact i64 %4803, 32
  %4805 = getelementptr inbounds i32, ptr %7, i64 %4804
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = getelementptr inbounds i32, ptr %6, i64 %4793
  %4808 = load i32, ptr %4807, align 4, !tbaa !5
  %4809 = add nsw i32 %4808, %4806
  store i32 %4809, ptr %4807, align 4, !tbaa !5
  br label %4828

4810:                                             ; preds = %4783, %4800
  %4811 = phi i32 [ %4795, %4800 ], [ %4784, %4783 ]
  %4812 = phi ptr [ %4794, %4800 ], [ %4, %4783 ]
  %4813 = phi i64 [ %4793, %4800 ], [ 0, %4783 ]
  %4814 = add nsw i32 %4811, 1
  store i32 %4814, ptr %4812, align 4, !tbaa !5
  %4815 = getelementptr inbounds i32, ptr %7, i64 %4813
  %4816 = load i32, ptr %4815, align 4, !tbaa !5
  %4817 = getelementptr inbounds i32, ptr %6, i64 %4813
  br label %4828

4818:                                             ; preds = %4792
  %4819 = icmp eq i32 %4795, %4798
  br i1 %4819, label %4820, label %4826

4820:                                             ; preds = %4818
  store i32 0, ptr %4794, align 4, !tbaa !5
  %4821 = getelementptr inbounds i32, ptr %8, i64 %4793
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = getelementptr inbounds i32, ptr %6, i64 %4793
  store i32 %4822, ptr %4823, align 4, !tbaa !5
  %4824 = add nuw nsw i64 %4793, 1
  %4825 = icmp eq i64 %4824, %4554
  br i1 %4825, label %4833, label %4792, !llvm.loop !1102

4826:                                             ; preds = %4788, %4818
  %4827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4828:                                             ; preds = %4801, %4810
  %4829 = phi ptr [ %4817, %4810 ], [ %4794, %4801 ]
  %4830 = phi i32 [ %4816, %4810 ], [ 1, %4801 ]
  %4831 = load i32, ptr %4829, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, %4830
  store i32 %4832, ptr %4829, align 4, !tbaa !5
  br label %4833

4833:                                             ; preds = %4820, %4828, %4790, %4776
  %4834 = icmp eq i32 %4782, %5
  br i1 %4834, label %5437, label %4698, !llvm.loop !1103

4835:                                             ; preds = %4244
  %4836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

4837:                                             ; preds = %18
  %4838 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4839 = load ptr, ptr %4838, align 8, !tbaa !9
  %4840 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4841 = load ptr, ptr %4840, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4841, align 8, !tbaa !18
  %4842 = icmp eq i32 %13, 0
  br i1 %4842, label %4843, label %4845

4843:                                             ; preds = %4837
  %4844 = load double, ptr %4839, align 8, !tbaa !18
  store double %4844, ptr %4841, align 8, !tbaa !18
  br label %5437

4845:                                             ; preds = %4837
  switch i32 %1, label %5429 [
    i32 1, label %4846
    i32 0, label %5139
  ]

4846:                                             ; preds = %4845
  %4847 = getelementptr inbounds i32, ptr %3, i64 %19
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = icmp eq i32 %4848, 0
  %4850 = icmp sgt i32 %5, 0
  br i1 %4849, label %4860, label %4851

4851:                                             ; preds = %4846
  br i1 %4850, label %4852, label %5437

4852:                                             ; preds = %4851
  %4853 = icmp sgt i32 %13, 1
  %4854 = icmp sgt i32 %13, 0
  %4855 = add i32 %13, -2
  %4856 = zext i32 %4855 to i64
  %4857 = zext i32 %13 to i64
  %4858 = add nuw i32 %5, 1
  %4859 = icmp eq i32 %13, 1
  br label %5003

4860:                                             ; preds = %4846
  br i1 %4850, label %4861, label %5437

4861:                                             ; preds = %4860
  %4862 = icmp sgt i32 %13, 1
  %4863 = icmp sgt i32 %13, 0
  %4864 = add i32 %13, -2
  %4865 = zext i32 %4864 to i64
  %4866 = zext i32 %13 to i64
  %4867 = add nuw i32 %5, 1
  %4868 = icmp eq i32 %13, 1
  br label %4869

4869:                                             ; preds = %4861, %5001
  %4870 = phi double [ 0.000000e+00, %4861 ], [ %4951, %5001 ]
  %4871 = phi i32 [ 0, %4861 ], [ %4953, %5001 ]
  %4872 = phi double [ 0.000000e+00, %4861 ], [ %4952, %5001 ]
  %4873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4862, label %4874, label %4943

4874:                                             ; preds = %4869, %4933
  %4875 = phi i32 [ %4942, %4933 ], [ 0, %4869 ]
  %4876 = phi i64 [ %4884, %4933 ], [ %4866, %4869 ]
  %4877 = phi i64 [ %4941, %4933 ], [ %4865, %4869 ]
  %4878 = phi i32 [ %4939, %4933 ], [ %4873, %4869 ]
  %4879 = sub i32 %4864, %4875
  %4880 = tail call i32 @llvm.smin.i32(i32 %4879, i32 0)
  %4881 = sub i32 %4879, %4880
  %4882 = zext i32 %4881 to i64
  %4883 = add nuw nsw i64 %4882, 1
  %4884 = add nsw i64 %4876, -1
  %4885 = icmp ult i32 %4881, 31
  br i1 %4885, label %4921, label %4886

4886:                                             ; preds = %4874
  %4887 = and i64 %4883, 8589934560
  %4888 = sub i64 %4877, %4887
  br label %4889

4889:                                             ; preds = %4889, %4886
  %4890 = phi i64 [ 0, %4886 ], [ %4913, %4889 ]
  %4891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4909, %4889 ]
  %4892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4910, %4889 ]
  %4893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4911, %4889 ]
  %4894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4912, %4889 ]
  %4895 = sub i64 %4877, %4890
  %4896 = getelementptr inbounds i32, ptr %9, i64 %4895
  %4897 = getelementptr inbounds i32, ptr %4896, i64 -7
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = getelementptr inbounds i32, ptr %4896, i64 -15
  %4901 = load <8 x i32>, ptr %4900, align 4, !tbaa !5
  %4902 = shufflevector <8 x i32> %4901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4903 = getelementptr inbounds i32, ptr %4896, i64 -23
  %4904 = load <8 x i32>, ptr %4903, align 4, !tbaa !5
  %4905 = shufflevector <8 x i32> %4904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4906 = getelementptr inbounds i32, ptr %4896, i64 -31
  %4907 = load <8 x i32>, ptr %4906, align 4, !tbaa !5
  %4908 = shufflevector <8 x i32> %4907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4909 = mul <8 x i32> %4899, %4891
  %4910 = mul <8 x i32> %4902, %4892
  %4911 = mul <8 x i32> %4905, %4893
  %4912 = mul <8 x i32> %4908, %4894
  %4913 = add nuw i64 %4890, 32
  %4914 = icmp eq i64 %4913, %4887
  br i1 %4914, label %4915, label %4889, !llvm.loop !1104

4915:                                             ; preds = %4889
  %4916 = mul <8 x i32> %4910, %4909
  %4917 = mul <8 x i32> %4911, %4916
  %4918 = mul <8 x i32> %4912, %4917
  %4919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4918)
  %4920 = icmp eq i64 %4883, %4887
  br i1 %4920, label %4933, label %4921

4921:                                             ; preds = %4874, %4915
  %4922 = phi i64 [ %4877, %4874 ], [ %4888, %4915 ]
  %4923 = phi i32 [ 1, %4874 ], [ %4919, %4915 ]
  br label %4924

4924:                                             ; preds = %4921, %4924
  %4925 = phi i64 [ %4930, %4924 ], [ %4922, %4921 ]
  %4926 = phi i32 [ %4929, %4924 ], [ %4923, %4921 ]
  %4927 = getelementptr inbounds i32, ptr %9, i64 %4925
  %4928 = load i32, ptr %4927, align 4, !tbaa !5
  %4929 = mul nsw i32 %4928, %4926
  %4930 = add nsw i64 %4925, -1
  %4931 = trunc i64 %4925 to i32
  %4932 = icmp sgt i32 %4931, 0
  br i1 %4932, label %4924, label %4933, !llvm.loop !1105

4933:                                             ; preds = %4924, %4915
  %4934 = phi i32 [ %4919, %4915 ], [ %4929, %4924 ]
  %4935 = and i64 %4884, 4294967295
  %4936 = getelementptr inbounds i32, ptr %6, i64 %4935
  %4937 = load i32, ptr %4936, align 4, !tbaa !5
  %4938 = mul nsw i32 %4937, %4934
  %4939 = add nsw i32 %4938, %4878
  %4940 = icmp sgt i64 %4876, 2
  %4941 = add nsw i64 %4877, -1
  %4942 = add i32 %4875, 1
  br i1 %4940, label %4874, label %4943, !llvm.loop !1106

4943:                                             ; preds = %4933, %4869
  %4944 = phi i32 [ %4873, %4869 ], [ %4939, %4933 ]
  %4945 = sext i32 %4944 to i64
  %4946 = getelementptr inbounds double, ptr %2, i64 %4945
  %4947 = load double, ptr %4946, align 8, !tbaa !18
  %4948 = getelementptr inbounds double, ptr %4839, i64 %4945
  %4949 = load double, ptr %4948, align 8, !tbaa !18
  %4950 = fmul fast double %4949, %4947
  %4951 = fadd fast double %4870, %4950
  store double %4951, ptr %4841, align 8, !tbaa !18
  %4952 = fadd fast double %4947, %4872
  %4953 = add nuw nsw i32 %4871, 1
  br i1 %4863, label %4954, label %5001

4954:                                             ; preds = %4943
  %4955 = load i32, ptr %4, align 4, !tbaa !5
  %4956 = load i32, ptr %12, align 4, !tbaa !5
  %4957 = add nsw i32 %4956, -1
  %4958 = icmp slt i32 %4955, %4957
  br i1 %4958, label %4978, label %4959

4959:                                             ; preds = %4954
  %4960 = icmp eq i32 %4955, %4957
  br i1 %4960, label %4961, label %4994

4961:                                             ; preds = %4959
  store i32 0, ptr %4, align 4, !tbaa !5
  %4962 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4962, ptr %6, align 4, !tbaa !5
  br i1 %4868, label %5001, label %4963

4963:                                             ; preds = %4961, %4988
  %4964 = phi i64 [ %4992, %4988 ], [ 1, %4961 ]
  %4965 = getelementptr inbounds i32, ptr %4, i64 %4964
  %4966 = load i32, ptr %4965, align 4, !tbaa !5
  %4967 = getelementptr inbounds i32, ptr %12, i64 %4964
  %4968 = load i32, ptr %4967, align 4, !tbaa !5
  %4969 = add nsw i32 %4968, -1
  %4970 = icmp slt i32 %4966, %4969
  br i1 %4970, label %4971, label %4986

4971:                                             ; preds = %4963
  br i1 %4958, label %4978, label %4972

4972:                                             ; preds = %4971
  %4973 = getelementptr inbounds i32, ptr %7, i64 %4964
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = getelementptr inbounds i32, ptr %6, i64 %4964
  %4976 = load i32, ptr %4975, align 4, !tbaa !5
  %4977 = add nsw i32 %4976, %4974
  store i32 %4977, ptr %4975, align 4, !tbaa !5
  br label %4996

4978:                                             ; preds = %4954, %4971
  %4979 = phi i32 [ %4966, %4971 ], [ %4955, %4954 ]
  %4980 = phi ptr [ %4965, %4971 ], [ %4, %4954 ]
  %4981 = phi i64 [ %4964, %4971 ], [ 0, %4954 ]
  %4982 = add nsw i32 %4979, 1
  store i32 %4982, ptr %4980, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %7, i64 %4981
  %4984 = load i32, ptr %4983, align 4, !tbaa !5
  %4985 = getelementptr inbounds i32, ptr %6, i64 %4981
  br label %4996

4986:                                             ; preds = %4963
  %4987 = icmp eq i32 %4966, %4969
  br i1 %4987, label %4988, label %4994

4988:                                             ; preds = %4986
  store i32 0, ptr %4965, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %8, i64 %4964
  %4990 = load i32, ptr %4989, align 4, !tbaa !5
  %4991 = getelementptr inbounds i32, ptr %6, i64 %4964
  store i32 %4990, ptr %4991, align 4, !tbaa !5
  %4992 = add nuw nsw i64 %4964, 1
  %4993 = icmp eq i64 %4992, %4866
  br i1 %4993, label %5001, label %4963, !llvm.loop !1107

4994:                                             ; preds = %4959, %4986
  %4995 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4996:                                             ; preds = %4972, %4978
  %4997 = phi ptr [ %4985, %4978 ], [ %4965, %4972 ]
  %4998 = phi i32 [ %4984, %4978 ], [ 1, %4972 ]
  %4999 = load i32, ptr %4997, align 4, !tbaa !5
  %5000 = add nsw i32 %4999, %4998
  store i32 %5000, ptr %4997, align 4, !tbaa !5
  br label %5001

5001:                                             ; preds = %4988, %4996, %4961, %4943
  %5002 = icmp eq i32 %4953, %5
  br i1 %5002, label %5437, label %4869, !llvm.loop !1108

5003:                                             ; preds = %4852, %5137
  %5004 = phi double [ 0.000000e+00, %4852 ], [ %5085, %5137 ]
  %5005 = phi i32 [ 0, %4852 ], [ %5086, %5137 ]
  %5006 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4853, label %5007, label %5076

5007:                                             ; preds = %5003, %5066
  %5008 = phi i32 [ %5075, %5066 ], [ 0, %5003 ]
  %5009 = phi i64 [ %5017, %5066 ], [ %4857, %5003 ]
  %5010 = phi i64 [ %5074, %5066 ], [ %4856, %5003 ]
  %5011 = phi i32 [ %5072, %5066 ], [ %5006, %5003 ]
  %5012 = sub i32 %4855, %5008
  %5013 = tail call i32 @llvm.smin.i32(i32 %5012, i32 0)
  %5014 = sub i32 %5012, %5013
  %5015 = zext i32 %5014 to i64
  %5016 = add nuw nsw i64 %5015, 1
  %5017 = add nsw i64 %5009, -1
  %5018 = icmp ult i32 %5014, 31
  br i1 %5018, label %5054, label %5019

5019:                                             ; preds = %5007
  %5020 = and i64 %5016, 8589934560
  %5021 = sub i64 %5010, %5020
  br label %5022

5022:                                             ; preds = %5022, %5019
  %5023 = phi i64 [ 0, %5019 ], [ %5046, %5022 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5042, %5022 ]
  %5025 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5043, %5022 ]
  %5026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5044, %5022 ]
  %5027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5045, %5022 ]
  %5028 = sub i64 %5010, %5023
  %5029 = getelementptr inbounds i32, ptr %11, i64 %5028
  %5030 = getelementptr inbounds i32, ptr %5029, i64 -7
  %5031 = load <8 x i32>, ptr %5030, align 4, !tbaa !5
  %5032 = shufflevector <8 x i32> %5031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5033 = getelementptr inbounds i32, ptr %5029, i64 -15
  %5034 = load <8 x i32>, ptr %5033, align 4, !tbaa !5
  %5035 = shufflevector <8 x i32> %5034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5036 = getelementptr inbounds i32, ptr %5029, i64 -23
  %5037 = load <8 x i32>, ptr %5036, align 4, !tbaa !5
  %5038 = shufflevector <8 x i32> %5037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5039 = getelementptr inbounds i32, ptr %5029, i64 -31
  %5040 = load <8 x i32>, ptr %5039, align 4, !tbaa !5
  %5041 = shufflevector <8 x i32> %5040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5042 = mul <8 x i32> %5032, %5024
  %5043 = mul <8 x i32> %5035, %5025
  %5044 = mul <8 x i32> %5038, %5026
  %5045 = mul <8 x i32> %5041, %5027
  %5046 = add nuw i64 %5023, 32
  %5047 = icmp eq i64 %5046, %5020
  br i1 %5047, label %5048, label %5022, !llvm.loop !1109

5048:                                             ; preds = %5022
  %5049 = mul <8 x i32> %5043, %5042
  %5050 = mul <8 x i32> %5044, %5049
  %5051 = mul <8 x i32> %5045, %5050
  %5052 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5051)
  %5053 = icmp eq i64 %5016, %5020
  br i1 %5053, label %5066, label %5054

5054:                                             ; preds = %5007, %5048
  %5055 = phi i64 [ %5010, %5007 ], [ %5021, %5048 ]
  %5056 = phi i32 [ 1, %5007 ], [ %5052, %5048 ]
  br label %5057

5057:                                             ; preds = %5054, %5057
  %5058 = phi i64 [ %5063, %5057 ], [ %5055, %5054 ]
  %5059 = phi i32 [ %5062, %5057 ], [ %5056, %5054 ]
  %5060 = getelementptr inbounds i32, ptr %11, i64 %5058
  %5061 = load i32, ptr %5060, align 4, !tbaa !5
  %5062 = mul nsw i32 %5061, %5059
  %5063 = add nsw i64 %5058, -1
  %5064 = trunc i64 %5058 to i32
  %5065 = icmp sgt i32 %5064, 0
  br i1 %5065, label %5057, label %5066, !llvm.loop !1110

5066:                                             ; preds = %5057, %5048
  %5067 = phi i32 [ %5052, %5048 ], [ %5062, %5057 ]
  %5068 = and i64 %5017, 4294967295
  %5069 = getelementptr inbounds i32, ptr %6, i64 %5068
  %5070 = load i32, ptr %5069, align 4, !tbaa !5
  %5071 = mul nsw i32 %5070, %5067
  %5072 = add nsw i32 %5071, %5011
  %5073 = icmp sgt i64 %5009, 2
  %5074 = add nsw i64 %5010, -1
  %5075 = add i32 %5008, 1
  br i1 %5073, label %5007, label %5076, !llvm.loop !1111

5076:                                             ; preds = %5066, %5003
  %5077 = phi i32 [ %5006, %5003 ], [ %5072, %5066 ]
  %5078 = icmp slt i32 %5077, %5
  br i1 %5078, label %5081, label %5079

5079:                                             ; preds = %5076
  %5080 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

5081:                                             ; preds = %5076
  %5082 = sext i32 %5077 to i64
  %5083 = getelementptr inbounds double, ptr %4839, i64 %5082
  %5084 = load double, ptr %5083, align 8, !tbaa !18
  %5085 = fadd fast double %5004, %5084
  store double %5085, ptr %4841, align 8, !tbaa !18
  %5086 = add nuw nsw i32 %5005, 1
  br i1 %4854, label %5087, label %5137

5087:                                             ; preds = %5081
  %5088 = load i32, ptr %4, align 4, !tbaa !5
  %5089 = load i32, ptr %12, align 4, !tbaa !5
  %5090 = add nsw i32 %5089, -1
  %5091 = icmp slt i32 %5088, %5090
  br i1 %5091, label %5114, label %5092

5092:                                             ; preds = %5087
  %5093 = icmp eq i32 %5088, %5090
  br i1 %5093, label %5094, label %5130

5094:                                             ; preds = %5092
  store i32 0, ptr %4, align 4, !tbaa !5
  %5095 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5095, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %5137, label %5096

5096:                                             ; preds = %5094, %5124
  %5097 = phi i64 [ %5128, %5124 ], [ 1, %5094 ]
  %5098 = getelementptr inbounds i32, ptr %4, i64 %5097
  %5099 = load i32, ptr %5098, align 4, !tbaa !5
  %5100 = getelementptr inbounds i32, ptr %12, i64 %5097
  %5101 = load i32, ptr %5100, align 4, !tbaa !5
  %5102 = add nsw i32 %5101, -1
  %5103 = icmp slt i32 %5099, %5102
  br i1 %5103, label %5104, label %5122

5104:                                             ; preds = %5096
  br i1 %5091, label %5114, label %5105

5105:                                             ; preds = %5104
  %5106 = shl i64 %5097, 32
  %5107 = add i64 %5106, -4294967296
  %5108 = ashr exact i64 %5107, 32
  %5109 = getelementptr inbounds i32, ptr %7, i64 %5108
  %5110 = load i32, ptr %5109, align 4, !tbaa !5
  %5111 = getelementptr inbounds i32, ptr %6, i64 %5097
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = add nsw i32 %5112, %5110
  store i32 %5113, ptr %5111, align 4, !tbaa !5
  br label %5132

5114:                                             ; preds = %5087, %5104
  %5115 = phi i32 [ %5099, %5104 ], [ %5088, %5087 ]
  %5116 = phi ptr [ %5098, %5104 ], [ %4, %5087 ]
  %5117 = phi i64 [ %5097, %5104 ], [ 0, %5087 ]
  %5118 = add nsw i32 %5115, 1
  store i32 %5118, ptr %5116, align 4, !tbaa !5
  %5119 = getelementptr inbounds i32, ptr %7, i64 %5117
  %5120 = load i32, ptr %5119, align 4, !tbaa !5
  %5121 = getelementptr inbounds i32, ptr %6, i64 %5117
  br label %5132

5122:                                             ; preds = %5096
  %5123 = icmp eq i32 %5099, %5102
  br i1 %5123, label %5124, label %5130

5124:                                             ; preds = %5122
  store i32 0, ptr %5098, align 4, !tbaa !5
  %5125 = getelementptr inbounds i32, ptr %8, i64 %5097
  %5126 = load i32, ptr %5125, align 4, !tbaa !5
  %5127 = getelementptr inbounds i32, ptr %6, i64 %5097
  store i32 %5126, ptr %5127, align 4, !tbaa !5
  %5128 = add nuw nsw i64 %5097, 1
  %5129 = icmp eq i64 %5128, %4857
  br i1 %5129, label %5137, label %5096, !llvm.loop !1112

5130:                                             ; preds = %5092, %5122
  %5131 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5132:                                             ; preds = %5105, %5114
  %5133 = phi ptr [ %5121, %5114 ], [ %5098, %5105 ]
  %5134 = phi i32 [ %5120, %5114 ], [ 1, %5105 ]
  %5135 = load i32, ptr %5133, align 4, !tbaa !5
  %5136 = add nsw i32 %5135, %5134
  store i32 %5136, ptr %5133, align 4, !tbaa !5
  br label %5137

5137:                                             ; preds = %5124, %5132, %5094, %5081
  %5138 = icmp eq i32 %5086, %5
  br i1 %5138, label %5437, label %5003, !llvm.loop !1113

5139:                                             ; preds = %4845
  %5140 = getelementptr inbounds i32, ptr %3, i64 %19
  %5141 = load i32, ptr %5140, align 4, !tbaa !5
  %5142 = icmp eq i32 %5141, 0
  %5143 = icmp sgt i32 %5, 0
  br i1 %5142, label %5153, label %5144

5144:                                             ; preds = %5139
  br i1 %5143, label %5145, label %5437

5145:                                             ; preds = %5144
  %5146 = icmp sgt i32 %13, 1
  %5147 = icmp sgt i32 %13, 0
  %5148 = add i32 %13, -2
  %5149 = zext i32 %5148 to i64
  %5150 = zext i32 %13 to i64
  %5151 = add nuw i32 %5, 1
  %5152 = icmp eq i32 %13, 1
  br label %5293

5153:                                             ; preds = %5139
  br i1 %5143, label %5154, label %5437

5154:                                             ; preds = %5153
  %5155 = icmp sgt i32 %13, 1
  %5156 = icmp sgt i32 %13, 0
  %5157 = add i32 %13, -2
  %5158 = zext i32 %5157 to i64
  %5159 = zext i32 %13 to i64
  %5160 = add nuw i32 %5, 1
  %5161 = icmp eq i32 %13, 1
  br label %5162

5162:                                             ; preds = %5154, %5291
  %5163 = phi double [ 0.000000e+00, %5154 ], [ %5241, %5291 ]
  %5164 = phi i32 [ 0, %5154 ], [ %5243, %5291 ]
  %5165 = phi double [ 0.000000e+00, %5154 ], [ %5242, %5291 ]
  %5166 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5155, label %5167, label %5236

5167:                                             ; preds = %5162, %5226
  %5168 = phi i32 [ %5235, %5226 ], [ 0, %5162 ]
  %5169 = phi i64 [ %5177, %5226 ], [ %5159, %5162 ]
  %5170 = phi i64 [ %5234, %5226 ], [ %5158, %5162 ]
  %5171 = phi i32 [ %5232, %5226 ], [ %5166, %5162 ]
  %5172 = sub i32 %5157, %5168
  %5173 = tail call i32 @llvm.smin.i32(i32 %5172, i32 0)
  %5174 = sub i32 %5172, %5173
  %5175 = zext i32 %5174 to i64
  %5176 = add nuw nsw i64 %5175, 1
  %5177 = add nsw i64 %5169, -1
  %5178 = icmp ult i32 %5174, 31
  br i1 %5178, label %5214, label %5179

5179:                                             ; preds = %5167
  %5180 = and i64 %5176, 8589934560
  %5181 = sub i64 %5170, %5180
  br label %5182

5182:                                             ; preds = %5182, %5179
  %5183 = phi i64 [ 0, %5179 ], [ %5206, %5182 ]
  %5184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5202, %5182 ]
  %5185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5203, %5182 ]
  %5186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5204, %5182 ]
  %5187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5205, %5182 ]
  %5188 = sub i64 %5170, %5183
  %5189 = getelementptr inbounds i32, ptr %9, i64 %5188
  %5190 = getelementptr inbounds i32, ptr %5189, i64 -7
  %5191 = load <8 x i32>, ptr %5190, align 4, !tbaa !5
  %5192 = shufflevector <8 x i32> %5191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5193 = getelementptr inbounds i32, ptr %5189, i64 -15
  %5194 = load <8 x i32>, ptr %5193, align 4, !tbaa !5
  %5195 = shufflevector <8 x i32> %5194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5196 = getelementptr inbounds i32, ptr %5189, i64 -23
  %5197 = load <8 x i32>, ptr %5196, align 4, !tbaa !5
  %5198 = shufflevector <8 x i32> %5197, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5199 = getelementptr inbounds i32, ptr %5189, i64 -31
  %5200 = load <8 x i32>, ptr %5199, align 4, !tbaa !5
  %5201 = shufflevector <8 x i32> %5200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5202 = mul <8 x i32> %5192, %5184
  %5203 = mul <8 x i32> %5195, %5185
  %5204 = mul <8 x i32> %5198, %5186
  %5205 = mul <8 x i32> %5201, %5187
  %5206 = add nuw i64 %5183, 32
  %5207 = icmp eq i64 %5206, %5180
  br i1 %5207, label %5208, label %5182, !llvm.loop !1114

5208:                                             ; preds = %5182
  %5209 = mul <8 x i32> %5203, %5202
  %5210 = mul <8 x i32> %5204, %5209
  %5211 = mul <8 x i32> %5205, %5210
  %5212 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5211)
  %5213 = icmp eq i64 %5176, %5180
  br i1 %5213, label %5226, label %5214

5214:                                             ; preds = %5167, %5208
  %5215 = phi i64 [ %5170, %5167 ], [ %5181, %5208 ]
  %5216 = phi i32 [ 1, %5167 ], [ %5212, %5208 ]
  br label %5217

5217:                                             ; preds = %5214, %5217
  %5218 = phi i64 [ %5223, %5217 ], [ %5215, %5214 ]
  %5219 = phi i32 [ %5222, %5217 ], [ %5216, %5214 ]
  %5220 = getelementptr inbounds i32, ptr %9, i64 %5218
  %5221 = load i32, ptr %5220, align 4, !tbaa !5
  %5222 = mul nsw i32 %5221, %5219
  %5223 = add nsw i64 %5218, -1
  %5224 = trunc i64 %5218 to i32
  %5225 = icmp sgt i32 %5224, 0
  br i1 %5225, label %5217, label %5226, !llvm.loop !1115

5226:                                             ; preds = %5217, %5208
  %5227 = phi i32 [ %5212, %5208 ], [ %5222, %5217 ]
  %5228 = and i64 %5177, 4294967295
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5228
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = mul nsw i32 %5230, %5227
  %5232 = add nsw i32 %5231, %5171
  %5233 = icmp sgt i64 %5169, 2
  %5234 = add nsw i64 %5170, -1
  %5235 = add i32 %5168, 1
  br i1 %5233, label %5167, label %5236, !llvm.loop !1116

5236:                                             ; preds = %5226, %5162
  %5237 = phi i32 [ %5166, %5162 ], [ %5232, %5226 ]
  %5238 = sext i32 %5237 to i64
  %5239 = getelementptr inbounds double, ptr %4839, i64 %5238
  %5240 = load double, ptr %5239, align 8, !tbaa !18
  %5241 = fadd fast double %5163, %5240
  store double %5241, ptr %4841, align 8, !tbaa !18
  %5242 = fadd fast double %5165, 1.000000e+00
  %5243 = add nuw nsw i32 %5164, 1
  br i1 %5156, label %5244, label %5291

5244:                                             ; preds = %5236
  %5245 = load i32, ptr %4, align 4, !tbaa !5
  %5246 = load i32, ptr %12, align 4, !tbaa !5
  %5247 = add nsw i32 %5246, -1
  %5248 = icmp slt i32 %5245, %5247
  br i1 %5248, label %5268, label %5249

5249:                                             ; preds = %5244
  %5250 = icmp eq i32 %5245, %5247
  br i1 %5250, label %5251, label %5284

5251:                                             ; preds = %5249
  store i32 0, ptr %4, align 4, !tbaa !5
  %5252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5252, ptr %6, align 4, !tbaa !5
  br i1 %5161, label %5291, label %5253

5253:                                             ; preds = %5251, %5278
  %5254 = phi i64 [ %5282, %5278 ], [ 1, %5251 ]
  %5255 = getelementptr inbounds i32, ptr %4, i64 %5254
  %5256 = load i32, ptr %5255, align 4, !tbaa !5
  %5257 = getelementptr inbounds i32, ptr %12, i64 %5254
  %5258 = load i32, ptr %5257, align 4, !tbaa !5
  %5259 = add nsw i32 %5258, -1
  %5260 = icmp slt i32 %5256, %5259
  br i1 %5260, label %5261, label %5276

5261:                                             ; preds = %5253
  br i1 %5248, label %5268, label %5262

5262:                                             ; preds = %5261
  %5263 = getelementptr inbounds i32, ptr %7, i64 %5254
  %5264 = load i32, ptr %5263, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %6, i64 %5254
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = add nsw i32 %5266, %5264
  store i32 %5267, ptr %5265, align 4, !tbaa !5
  br label %5286

5268:                                             ; preds = %5244, %5261
  %5269 = phi i32 [ %5256, %5261 ], [ %5245, %5244 ]
  %5270 = phi ptr [ %5255, %5261 ], [ %4, %5244 ]
  %5271 = phi i64 [ %5254, %5261 ], [ 0, %5244 ]
  %5272 = add nsw i32 %5269, 1
  store i32 %5272, ptr %5270, align 4, !tbaa !5
  %5273 = getelementptr inbounds i32, ptr %7, i64 %5271
  %5274 = load i32, ptr %5273, align 4, !tbaa !5
  %5275 = getelementptr inbounds i32, ptr %6, i64 %5271
  br label %5286

5276:                                             ; preds = %5253
  %5277 = icmp eq i32 %5256, %5259
  br i1 %5277, label %5278, label %5284

5278:                                             ; preds = %5276
  store i32 0, ptr %5255, align 4, !tbaa !5
  %5279 = getelementptr inbounds i32, ptr %8, i64 %5254
  %5280 = load i32, ptr %5279, align 4, !tbaa !5
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5254
  store i32 %5280, ptr %5281, align 4, !tbaa !5
  %5282 = add nuw nsw i64 %5254, 1
  %5283 = icmp eq i64 %5282, %5159
  br i1 %5283, label %5291, label %5253, !llvm.loop !1117

5284:                                             ; preds = %5249, %5276
  %5285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5286:                                             ; preds = %5262, %5268
  %5287 = phi ptr [ %5275, %5268 ], [ %5255, %5262 ]
  %5288 = phi i32 [ %5274, %5268 ], [ 1, %5262 ]
  %5289 = load i32, ptr %5287, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, %5288
  store i32 %5290, ptr %5287, align 4, !tbaa !5
  br label %5291

5291:                                             ; preds = %5278, %5286, %5251, %5236
  %5292 = icmp eq i32 %5243, %5
  br i1 %5292, label %5437, label %5162, !llvm.loop !1118

5293:                                             ; preds = %5145, %5427
  %5294 = phi double [ 0.000000e+00, %5145 ], [ %5375, %5427 ]
  %5295 = phi i32 [ 0, %5145 ], [ %5376, %5427 ]
  %5296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5146, label %5297, label %5366

5297:                                             ; preds = %5293, %5356
  %5298 = phi i32 [ %5365, %5356 ], [ 0, %5293 ]
  %5299 = phi i64 [ %5307, %5356 ], [ %5150, %5293 ]
  %5300 = phi i64 [ %5364, %5356 ], [ %5149, %5293 ]
  %5301 = phi i32 [ %5362, %5356 ], [ %5296, %5293 ]
  %5302 = sub i32 %5148, %5298
  %5303 = tail call i32 @llvm.smin.i32(i32 %5302, i32 0)
  %5304 = sub i32 %5302, %5303
  %5305 = zext i32 %5304 to i64
  %5306 = add nuw nsw i64 %5305, 1
  %5307 = add nsw i64 %5299, -1
  %5308 = icmp ult i32 %5304, 31
  br i1 %5308, label %5344, label %5309

5309:                                             ; preds = %5297
  %5310 = and i64 %5306, 8589934560
  %5311 = sub i64 %5300, %5310
  br label %5312

5312:                                             ; preds = %5312, %5309
  %5313 = phi i64 [ 0, %5309 ], [ %5336, %5312 ]
  %5314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5332, %5312 ]
  %5315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5333, %5312 ]
  %5316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5334, %5312 ]
  %5317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5335, %5312 ]
  %5318 = sub i64 %5300, %5313
  %5319 = getelementptr inbounds i32, ptr %11, i64 %5318
  %5320 = getelementptr inbounds i32, ptr %5319, i64 -7
  %5321 = load <8 x i32>, ptr %5320, align 4, !tbaa !5
  %5322 = shufflevector <8 x i32> %5321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5323 = getelementptr inbounds i32, ptr %5319, i64 -15
  %5324 = load <8 x i32>, ptr %5323, align 4, !tbaa !5
  %5325 = shufflevector <8 x i32> %5324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5326 = getelementptr inbounds i32, ptr %5319, i64 -23
  %5327 = load <8 x i32>, ptr %5326, align 4, !tbaa !5
  %5328 = shufflevector <8 x i32> %5327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5329 = getelementptr inbounds i32, ptr %5319, i64 -31
  %5330 = load <8 x i32>, ptr %5329, align 4, !tbaa !5
  %5331 = shufflevector <8 x i32> %5330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5332 = mul <8 x i32> %5322, %5314
  %5333 = mul <8 x i32> %5325, %5315
  %5334 = mul <8 x i32> %5328, %5316
  %5335 = mul <8 x i32> %5331, %5317
  %5336 = add nuw i64 %5313, 32
  %5337 = icmp eq i64 %5336, %5310
  br i1 %5337, label %5338, label %5312, !llvm.loop !1119

5338:                                             ; preds = %5312
  %5339 = mul <8 x i32> %5333, %5332
  %5340 = mul <8 x i32> %5334, %5339
  %5341 = mul <8 x i32> %5335, %5340
  %5342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5341)
  %5343 = icmp eq i64 %5306, %5310
  br i1 %5343, label %5356, label %5344

5344:                                             ; preds = %5297, %5338
  %5345 = phi i64 [ %5300, %5297 ], [ %5311, %5338 ]
  %5346 = phi i32 [ 1, %5297 ], [ %5342, %5338 ]
  br label %5347

5347:                                             ; preds = %5344, %5347
  %5348 = phi i64 [ %5353, %5347 ], [ %5345, %5344 ]
  %5349 = phi i32 [ %5352, %5347 ], [ %5346, %5344 ]
  %5350 = getelementptr inbounds i32, ptr %11, i64 %5348
  %5351 = load i32, ptr %5350, align 4, !tbaa !5
  %5352 = mul nsw i32 %5351, %5349
  %5353 = add nsw i64 %5348, -1
  %5354 = trunc i64 %5348 to i32
  %5355 = icmp sgt i32 %5354, 0
  br i1 %5355, label %5347, label %5356, !llvm.loop !1120

5356:                                             ; preds = %5347, %5338
  %5357 = phi i32 [ %5342, %5338 ], [ %5352, %5347 ]
  %5358 = and i64 %5307, 4294967295
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5358
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = mul nsw i32 %5360, %5357
  %5362 = add nsw i32 %5361, %5301
  %5363 = icmp sgt i64 %5299, 2
  %5364 = add nsw i64 %5300, -1
  %5365 = add i32 %5298, 1
  br i1 %5363, label %5297, label %5366, !llvm.loop !1121

5366:                                             ; preds = %5356, %5293
  %5367 = phi i32 [ %5296, %5293 ], [ %5362, %5356 ]
  %5368 = icmp slt i32 %5367, %5
  br i1 %5368, label %5371, label %5369

5369:                                             ; preds = %5366
  %5370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

5371:                                             ; preds = %5366
  %5372 = sext i32 %5367 to i64
  %5373 = getelementptr inbounds double, ptr %4839, i64 %5372
  %5374 = load double, ptr %5373, align 8, !tbaa !18
  %5375 = fadd fast double %5294, %5374
  store double %5375, ptr %4841, align 8, !tbaa !18
  %5376 = add nuw nsw i32 %5295, 1
  br i1 %5147, label %5377, label %5427

5377:                                             ; preds = %5371
  %5378 = load i32, ptr %4, align 4, !tbaa !5
  %5379 = load i32, ptr %12, align 4, !tbaa !5
  %5380 = add nsw i32 %5379, -1
  %5381 = icmp slt i32 %5378, %5380
  br i1 %5381, label %5404, label %5382

5382:                                             ; preds = %5377
  %5383 = icmp eq i32 %5378, %5380
  br i1 %5383, label %5384, label %5420

5384:                                             ; preds = %5382
  store i32 0, ptr %4, align 4, !tbaa !5
  %5385 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5385, ptr %6, align 4, !tbaa !5
  br i1 %5152, label %5427, label %5386

5386:                                             ; preds = %5384, %5414
  %5387 = phi i64 [ %5418, %5414 ], [ 1, %5384 ]
  %5388 = getelementptr inbounds i32, ptr %4, i64 %5387
  %5389 = load i32, ptr %5388, align 4, !tbaa !5
  %5390 = getelementptr inbounds i32, ptr %12, i64 %5387
  %5391 = load i32, ptr %5390, align 4, !tbaa !5
  %5392 = add nsw i32 %5391, -1
  %5393 = icmp slt i32 %5389, %5392
  br i1 %5393, label %5394, label %5412

5394:                                             ; preds = %5386
  br i1 %5381, label %5404, label %5395

5395:                                             ; preds = %5394
  %5396 = shl i64 %5387, 32
  %5397 = add i64 %5396, -4294967296
  %5398 = ashr exact i64 %5397, 32
  %5399 = getelementptr inbounds i32, ptr %7, i64 %5398
  %5400 = load i32, ptr %5399, align 4, !tbaa !5
  %5401 = getelementptr inbounds i32, ptr %6, i64 %5387
  %5402 = load i32, ptr %5401, align 4, !tbaa !5
  %5403 = add nsw i32 %5402, %5400
  store i32 %5403, ptr %5401, align 4, !tbaa !5
  br label %5422

5404:                                             ; preds = %5377, %5394
  %5405 = phi i32 [ %5389, %5394 ], [ %5378, %5377 ]
  %5406 = phi ptr [ %5388, %5394 ], [ %4, %5377 ]
  %5407 = phi i64 [ %5387, %5394 ], [ 0, %5377 ]
  %5408 = add nsw i32 %5405, 1
  store i32 %5408, ptr %5406, align 4, !tbaa !5
  %5409 = getelementptr inbounds i32, ptr %7, i64 %5407
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = getelementptr inbounds i32, ptr %6, i64 %5407
  br label %5422

5412:                                             ; preds = %5386
  %5413 = icmp eq i32 %5389, %5392
  br i1 %5413, label %5414, label %5420

5414:                                             ; preds = %5412
  store i32 0, ptr %5388, align 4, !tbaa !5
  %5415 = getelementptr inbounds i32, ptr %8, i64 %5387
  %5416 = load i32, ptr %5415, align 4, !tbaa !5
  %5417 = getelementptr inbounds i32, ptr %6, i64 %5387
  store i32 %5416, ptr %5417, align 4, !tbaa !5
  %5418 = add nuw nsw i64 %5387, 1
  %5419 = icmp eq i64 %5418, %5150
  br i1 %5419, label %5427, label %5386, !llvm.loop !1122

5420:                                             ; preds = %5382, %5412
  %5421 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5422:                                             ; preds = %5395, %5404
  %5423 = phi ptr [ %5411, %5404 ], [ %5388, %5395 ]
  %5424 = phi i32 [ %5410, %5404 ], [ 1, %5395 ]
  %5425 = load i32, ptr %5423, align 4, !tbaa !5
  %5426 = add nsw i32 %5425, %5424
  store i32 %5426, ptr %5423, align 4, !tbaa !5
  br label %5427

5427:                                             ; preds = %5414, %5422, %5384, %5371
  %5428 = icmp eq i32 %5376, %5
  br i1 %5428, label %5437, label %5293, !llvm.loop !1123

5429:                                             ; preds = %4845
  %5430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

5431:                                             ; preds = %1997
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  br label %5437

5432:                                             ; preds = %2293
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  br label %5437

5433:                                             ; preds = %3205
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  br label %5437

5434:                                             ; preds = %3500
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  br label %5437

5435:                                             ; preds = %4404
  store float %4354, ptr %4239, align 4, !tbaa !162
  br label %5437

5436:                                             ; preds = %4696
  store float %4646, ptr %4239, align 4, !tbaa !162
  br label %5437

5437:                                             ; preds = %5427, %5291, %5137, %5001, %4833, %4541, %4231, %4095, %3941, %3805, %3637, %3345, %3032, %2895, %2740, %2603, %2430, %2138, %1824, %1687, %1532, %1395, %1222, %1085, %930, %793, %620, %483, %328, %191, %5144, %5153, %4851, %4860, %4548, %4557, %5436, %4250, %4259, %5435, %3948, %3957, %3655, %3664, %3352, %3361, %5434, %3051, %3060, %5433, %2747, %2756, %2449, %2458, %2145, %2154, %5432, %1843, %1852, %5431, %1539, %1548, %1241, %1250, %937, %946, %639, %648, %335, %344, %37, %46, %4843, %5429, %4241, %4835, %3647, %4233, %3042, %3639, %2440, %3034, %1834, %2432, %1232, %1826, %630, %1224, %28, %622, %18
  %5438 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1224 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1826 ], [ 0.000000e+00, %1232 ], [ 0.000000e+00, %2432 ], [ 0.000000e+00, %1834 ], [ 0.000000e+00, %3034 ], [ 0.000000e+00, %2440 ], [ 0.000000e+00, %3639 ], [ 0.000000e+00, %3042 ], [ 0.000000e+00, %4233 ], [ 0.000000e+00, %3647 ], [ 0.000000e+00, %4835 ], [ 0.000000e+00, %4241 ], [ 0.000000e+00, %5429 ], [ 0.000000e+00, %4843 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %937 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %1548 ], [ 0.000000e+00, %1539 ], [ %1948, %5431 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %1843 ], [ %2244, %5432 ], [ 0.000000e+00, %2154 ], [ 0.000000e+00, %2145 ], [ 0.000000e+00, %2458 ], [ 0.000000e+00, %2449 ], [ 0.000000e+00, %2756 ], [ 0.000000e+00, %2747 ], [ %3156, %5433 ], [ 0.000000e+00, %3060 ], [ 0.000000e+00, %3051 ], [ %3451, %5434 ], [ 0.000000e+00, %3361 ], [ 0.000000e+00, %3352 ], [ 0.000000e+00, %3664 ], [ 0.000000e+00, %3655 ], [ 0.000000e+00, %3957 ], [ 0.000000e+00, %3948 ], [ %4355, %5435 ], [ 0.000000e+00, %4259 ], [ 0.000000e+00, %4250 ], [ %4647, %5436 ], [ 0.000000e+00, %4557 ], [ 0.000000e+00, %4548 ], [ 0.000000e+00, %4860 ], [ 0.000000e+00, %4851 ], [ 0.000000e+00, %5153 ], [ 0.000000e+00, %5144 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %744, %793 ], [ 0.000000e+00, %930 ], [ %1036, %1085 ], [ 0.000000e+00, %1222 ], [ %1346, %1395 ], [ 0.000000e+00, %1532 ], [ %1638, %1687 ], [ 0.000000e+00, %1824 ], [ 0.000000e+00, %2138 ], [ 0.000000e+00, %2430 ], [ %2554, %2603 ], [ 0.000000e+00, %2740 ], [ %2846, %2895 ], [ 0.000000e+00, %3032 ], [ 0.000000e+00, %3345 ], [ 0.000000e+00, %3637 ], [ %3756, %3805 ], [ 0.000000e+00, %3941 ], [ %4046, %4095 ], [ 0.000000e+00, %4231 ], [ 0.000000e+00, %4541 ], [ 0.000000e+00, %4833 ], [ %4952, %5001 ], [ 0.000000e+00, %5137 ], [ %5242, %5291 ], [ 0.000000e+00, %5427 ]
  %5439 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1224 ], [ 1, %630 ], [ 1, %1826 ], [ 1, %1232 ], [ 1, %2432 ], [ 1, %1834 ], [ 1, %3034 ], [ 1, %2440 ], [ 1, %3639 ], [ 1, %3042 ], [ 1, %4233 ], [ 1, %3647 ], [ 1, %4835 ], [ 1, %4241 ], [ 1, %5429 ], [ 1, %4843 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %648 ], [ 1, %639 ], [ 1, %946 ], [ 1, %937 ], [ 1, %1250 ], [ 1, %1241 ], [ 1, %1548 ], [ 1, %1539 ], [ %1859, %5431 ], [ 1, %1852 ], [ 1, %1843 ], [ %2161, %5432 ], [ 1, %2154 ], [ 1, %2145 ], [ 1, %2458 ], [ 1, %2449 ], [ 1, %2756 ], [ 1, %2747 ], [ %3067, %5433 ], [ 1, %3060 ], [ 1, %3051 ], [ %3368, %5434 ], [ 1, %3361 ], [ 1, %3352 ], [ 1, %3664 ], [ 1, %3655 ], [ 1, %3957 ], [ 1, %3948 ], [ %4266, %5435 ], [ 1, %4259 ], [ 1, %4250 ], [ %4564, %5436 ], [ 1, %4557 ], [ 1, %4548 ], [ 1, %4860 ], [ 1, %4851 ], [ 1, %5153 ], [ 1, %5144 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %655, %793 ], [ %646, %930 ], [ %953, %1085 ], [ %944, %1222 ], [ %1257, %1395 ], [ %1248, %1532 ], [ %1555, %1687 ], [ %1546, %1824 ], [ %1850, %2138 ], [ %2152, %2430 ], [ %2465, %2603 ], [ %2456, %2740 ], [ %2763, %2895 ], [ %2754, %3032 ], [ %3058, %3345 ], [ %3359, %3637 ], [ %3671, %3805 ], [ %3662, %3941 ], [ %3964, %4095 ], [ %3955, %4231 ], [ %4257, %4541 ], [ %4555, %4833 ], [ %4867, %5001 ], [ %4858, %5137 ], [ %5160, %5291 ], [ %5151, %5427 ]
  %5440 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5439, ptr noundef nonnull @.str.5) #3
  %5441 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5438, ptr noundef nonnull @.str.6) #3
  br label %5442

5442:                                             ; preds = %4994, %5079, %5130, %5284, %5369, %5420, %4397, %4482, %4534, %4689, %4774, %4826, %3798, %3883, %3934, %4088, %4173, %4224, %3198, %3283, %3338, %3493, %3578, %3630, %2596, %2680, %2733, %2888, %2972, %3025, %1990, %2075, %2131, %2286, %2371, %2423, %1388, %1472, %1525, %1680, %1764, %1817, %786, %870, %923, %1078, %1162, %1215, %184, %268, %321, %476, %560, %613, %5437
  %5443 = phi i32 [ 0, %5437 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1215 ], [ -1, %1162 ], [ -1, %1078 ], [ -1, %923 ], [ -1, %870 ], [ -1, %786 ], [ -1, %1817 ], [ -1, %1764 ], [ -1, %1680 ], [ -1, %1525 ], [ -1, %1472 ], [ -1, %1388 ], [ -1, %2423 ], [ -1, %2371 ], [ -1, %2286 ], [ -1, %2131 ], [ -1, %2075 ], [ -1, %1990 ], [ -1, %3025 ], [ -1, %2972 ], [ -1, %2888 ], [ -1, %2733 ], [ -1, %2680 ], [ -1, %2596 ], [ -1, %3630 ], [ -1, %3578 ], [ -1, %3493 ], [ -1, %3338 ], [ -1, %3283 ], [ -1, %3198 ], [ -1, %4224 ], [ -1, %4173 ], [ -1, %4088 ], [ -1, %3934 ], [ -1, %3883 ], [ -1, %3798 ], [ -1, %4826 ], [ -1, %4774 ], [ -1, %4689 ], [ -1, %4534 ], [ -1, %4482 ], [ -1, %4397 ], [ -1, %5420 ], [ -1, %5369 ], [ -1, %5284 ], [ -1, %5130 ], [ -1, %5079 ], [ -1, %4994 ]
  ret i32 %5443
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5442 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1226
    i32 104, label %1828
    i32 105, label %2434
    i32 106, label %3036
    i32 107, label %3641
    i32 108, label %4240
    i32 109, label %4837
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !162
  %30 = fptoui float %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5442

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5442

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5442

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1124

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1125

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1126

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds float, ptr %24, i64 %130
  %134 = load float, ptr %133, align 4, !tbaa !162
  %135 = fptoui float %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %137
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !1127

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5442, label %55, !llvm.loop !1128

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !1129

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !1130

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !1131

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds float, ptr %24, i64 %271
  %273 = load float, ptr %272, align 4, !tbaa !162
  %274 = fptoui float %273 to i8
  %275 = load i8, ptr %26, align 1, !tbaa !11
  %276 = add i8 %275, %274
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !1132

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5442, label %193, !llvm.loop !1133

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5442

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5442

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !1134

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !1135

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !1136

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds float, ptr %24, i64 %428
  %430 = load float, ptr %429, align 4, !tbaa !162
  %431 = fptoui float %430 to i8
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = add i8 %432, %431
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !1137

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5442, label %353, !llvm.loop !1138

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !1139

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !1140

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !1141

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds float, ptr %24, i64 %563
  %565 = load float, ptr %564, align 4, !tbaa !162
  %566 = fptoui float %565 to i8
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = add i8 %567, %566
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !1142

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5442, label %485, !llvm.loop !1143

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %624
  %631 = load float, ptr %626, align 4, !tbaa !162
  %632 = fptosi float %631 to i32
  store i32 %632, ptr %628, align 4, !tbaa !5
  br label %5442

633:                                              ; preds = %624
  switch i32 %1, label %1224 [
    i32 1, label %634
    i32 0, label %932
  ]

634:                                              ; preds = %633
  %635 = getelementptr inbounds i32, ptr %3, i64 %19
  %636 = load i32, ptr %635, align 4, !tbaa !5
  %637 = icmp eq i32 %636, 0
  %638 = icmp sgt i32 %5, 0
  br i1 %637, label %648, label %639

639:                                              ; preds = %634
  br i1 %638, label %640, label %5442

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %795

648:                                              ; preds = %634
  br i1 %638, label %649, label %5442

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %657

657:                                              ; preds = %649, %793
  %658 = phi i32 [ 0, %649 ], [ %745, %793 ]
  %659 = phi double [ 0.000000e+00, %649 ], [ %744, %793 ]
  %660 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %650, label %661, label %730

661:                                              ; preds = %657, %720
  %662 = phi i32 [ %729, %720 ], [ 0, %657 ]
  %663 = phi i64 [ %671, %720 ], [ %654, %657 ]
  %664 = phi i64 [ %728, %720 ], [ %653, %657 ]
  %665 = phi i32 [ %726, %720 ], [ %660, %657 ]
  %666 = sub i32 %652, %662
  %667 = tail call i32 @llvm.smin.i32(i32 %666, i32 0)
  %668 = sub i32 %666, %667
  %669 = zext i32 %668 to i64
  %670 = add nuw nsw i64 %669, 1
  %671 = add nsw i64 %663, -1
  %672 = icmp ult i32 %668, 31
  br i1 %672, label %708, label %673

673:                                              ; preds = %661
  %674 = and i64 %670, 8589934560
  %675 = sub i64 %664, %674
  br label %676

676:                                              ; preds = %676, %673
  %677 = phi i64 [ 0, %673 ], [ %700, %676 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %696, %676 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %697, %676 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %698, %676 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %699, %676 ]
  %682 = sub i64 %664, %677
  %683 = getelementptr inbounds i32, ptr %9, i64 %682
  %684 = getelementptr inbounds i32, ptr %683, i64 -7
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %683, i64 -15
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %683, i64 -23
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %683, i64 -31
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = mul <8 x i32> %686, %678
  %697 = mul <8 x i32> %689, %679
  %698 = mul <8 x i32> %692, %680
  %699 = mul <8 x i32> %695, %681
  %700 = add nuw i64 %677, 32
  %701 = icmp eq i64 %700, %674
  br i1 %701, label %702, label %676, !llvm.loop !1144

702:                                              ; preds = %676
  %703 = mul <8 x i32> %697, %696
  %704 = mul <8 x i32> %698, %703
  %705 = mul <8 x i32> %699, %704
  %706 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %705)
  %707 = icmp eq i64 %670, %674
  br i1 %707, label %720, label %708

708:                                              ; preds = %661, %702
  %709 = phi i64 [ %664, %661 ], [ %675, %702 ]
  %710 = phi i32 [ 1, %661 ], [ %706, %702 ]
  br label %711

711:                                              ; preds = %708, %711
  %712 = phi i64 [ %717, %711 ], [ %709, %708 ]
  %713 = phi i32 [ %716, %711 ], [ %710, %708 ]
  %714 = getelementptr inbounds i32, ptr %9, i64 %712
  %715 = load i32, ptr %714, align 4, !tbaa !5
  %716 = mul nsw i32 %715, %713
  %717 = add nsw i64 %712, -1
  %718 = trunc i64 %712 to i32
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %711, label %720, !llvm.loop !1145

720:                                              ; preds = %711, %702
  %721 = phi i32 [ %706, %702 ], [ %716, %711 ]
  %722 = and i64 %671, 4294967295
  %723 = getelementptr inbounds i32, ptr %6, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !5
  %725 = mul nsw i32 %724, %721
  %726 = add nsw i32 %725, %665
  %727 = icmp sgt i64 %663, 2
  %728 = add nsw i64 %664, -1
  %729 = add i32 %662, 1
  br i1 %727, label %661, label %730, !llvm.loop !1146

730:                                              ; preds = %720, %657
  %731 = phi i32 [ %660, %657 ], [ %726, %720 ]
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds double, ptr %2, i64 %732
  %734 = load double, ptr %733, align 8, !tbaa !18
  %735 = getelementptr inbounds float, ptr %626, i64 %732
  %736 = load float, ptr %735, align 4, !tbaa !162
  %737 = fptosi float %736 to i32
  %738 = load i32, ptr %628, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i32 %737 to double
  %741 = fmul fast double %734, %740
  %742 = fadd fast double %741, %739
  %743 = fptosi double %742 to i32
  store i32 %743, ptr %628, align 4, !tbaa !5
  %744 = fadd fast double %734, %659
  %745 = add nuw nsw i32 %658, 1
  br i1 %651, label %746, label %793

746:                                              ; preds = %730
  %747 = load i32, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %12, align 4, !tbaa !5
  %749 = add nsw i32 %748, -1
  %750 = icmp slt i32 %747, %749
  br i1 %750, label %770, label %751

751:                                              ; preds = %746
  %752 = icmp eq i32 %747, %749
  br i1 %752, label %753, label %786

753:                                              ; preds = %751
  store i32 0, ptr %4, align 4, !tbaa !5
  %754 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %754, ptr %6, align 4, !tbaa !5
  br i1 %656, label %793, label %755

755:                                              ; preds = %753, %780
  %756 = phi i64 [ %784, %780 ], [ 1, %753 ]
  %757 = getelementptr inbounds i32, ptr %4, i64 %756
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = getelementptr inbounds i32, ptr %12, i64 %756
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = add nsw i32 %760, -1
  %762 = icmp slt i32 %758, %761
  br i1 %762, label %763, label %778

763:                                              ; preds = %755
  br i1 %750, label %770, label %764

764:                                              ; preds = %763
  %765 = getelementptr inbounds i32, ptr %7, i64 %756
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %6, i64 %756
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, %766
  store i32 %769, ptr %767, align 4, !tbaa !5
  br label %788

770:                                              ; preds = %746, %763
  %771 = phi i32 [ %758, %763 ], [ %747, %746 ]
  %772 = phi ptr [ %757, %763 ], [ %4, %746 ]
  %773 = phi i64 [ %756, %763 ], [ 0, %746 ]
  %774 = add nsw i32 %771, 1
  store i32 %774, ptr %772, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %7, i64 %773
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %773
  br label %788

778:                                              ; preds = %755
  %779 = icmp eq i32 %758, %761
  br i1 %779, label %780, label %786

780:                                              ; preds = %778
  store i32 0, ptr %757, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %8, i64 %756
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %756
  store i32 %782, ptr %783, align 4, !tbaa !5
  %784 = add nuw nsw i64 %756, 1
  %785 = icmp eq i64 %784, %654
  br i1 %785, label %793, label %755, !llvm.loop !1147

786:                                              ; preds = %751, %778
  %787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

788:                                              ; preds = %764, %770
  %789 = phi ptr [ %777, %770 ], [ %757, %764 ]
  %790 = phi i32 [ %776, %770 ], [ 1, %764 ]
  %791 = load i32, ptr %789, align 4, !tbaa !5
  %792 = add nsw i32 %791, %790
  store i32 %792, ptr %789, align 4, !tbaa !5
  br label %793

793:                                              ; preds = %780, %788, %753, %730
  %794 = icmp eq i32 %745, %5
  br i1 %794, label %5442, label %657, !llvm.loop !1148

795:                                              ; preds = %640, %930
  %796 = phi i32 [ 0, %640 ], [ %879, %930 ]
  %797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %798, label %867

798:                                              ; preds = %795, %857
  %799 = phi i32 [ %866, %857 ], [ 0, %795 ]
  %800 = phi i64 [ %808, %857 ], [ %645, %795 ]
  %801 = phi i64 [ %865, %857 ], [ %644, %795 ]
  %802 = phi i32 [ %863, %857 ], [ %797, %795 ]
  %803 = sub i32 %643, %799
  %804 = tail call i32 @llvm.smin.i32(i32 %803, i32 0)
  %805 = sub i32 %803, %804
  %806 = zext i32 %805 to i64
  %807 = add nuw nsw i64 %806, 1
  %808 = add nsw i64 %800, -1
  %809 = icmp ult i32 %805, 31
  br i1 %809, label %845, label %810

810:                                              ; preds = %798
  %811 = and i64 %807, 8589934560
  %812 = sub i64 %801, %811
  br label %813

813:                                              ; preds = %813, %810
  %814 = phi i64 [ 0, %810 ], [ %837, %813 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %833, %813 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %834, %813 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %835, %813 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %836, %813 ]
  %819 = sub i64 %801, %814
  %820 = getelementptr inbounds i32, ptr %11, i64 %819
  %821 = getelementptr inbounds i32, ptr %820, i64 -7
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %820, i64 -15
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %820, i64 -23
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %820, i64 -31
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = mul <8 x i32> %823, %815
  %834 = mul <8 x i32> %826, %816
  %835 = mul <8 x i32> %829, %817
  %836 = mul <8 x i32> %832, %818
  %837 = add nuw i64 %814, 32
  %838 = icmp eq i64 %837, %811
  br i1 %838, label %839, label %813, !llvm.loop !1149

839:                                              ; preds = %813
  %840 = mul <8 x i32> %834, %833
  %841 = mul <8 x i32> %835, %840
  %842 = mul <8 x i32> %836, %841
  %843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %842)
  %844 = icmp eq i64 %807, %811
  br i1 %844, label %857, label %845

845:                                              ; preds = %798, %839
  %846 = phi i64 [ %801, %798 ], [ %812, %839 ]
  %847 = phi i32 [ 1, %798 ], [ %843, %839 ]
  br label %848

848:                                              ; preds = %845, %848
  %849 = phi i64 [ %854, %848 ], [ %846, %845 ]
  %850 = phi i32 [ %853, %848 ], [ %847, %845 ]
  %851 = getelementptr inbounds i32, ptr %11, i64 %849
  %852 = load i32, ptr %851, align 4, !tbaa !5
  %853 = mul nsw i32 %852, %850
  %854 = add nsw i64 %849, -1
  %855 = trunc i64 %849 to i32
  %856 = icmp sgt i32 %855, 0
  br i1 %856, label %848, label %857, !llvm.loop !1150

857:                                              ; preds = %848, %839
  %858 = phi i32 [ %843, %839 ], [ %853, %848 ]
  %859 = and i64 %808, 4294967295
  %860 = getelementptr inbounds i32, ptr %6, i64 %859
  %861 = load i32, ptr %860, align 4, !tbaa !5
  %862 = mul nsw i32 %861, %858
  %863 = add nsw i32 %862, %802
  %864 = icmp sgt i64 %800, 2
  %865 = add nsw i64 %801, -1
  %866 = add i32 %799, 1
  br i1 %864, label %798, label %867, !llvm.loop !1151

867:                                              ; preds = %857, %795
  %868 = phi i32 [ %797, %795 ], [ %863, %857 ]
  %869 = icmp slt i32 %868, %5
  br i1 %869, label %872, label %870

870:                                              ; preds = %867
  %871 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

872:                                              ; preds = %867
  %873 = sext i32 %868 to i64
  %874 = getelementptr inbounds float, ptr %626, i64 %873
  %875 = load float, ptr %874, align 4, !tbaa !162
  %876 = fptosi float %875 to i32
  %877 = load i32, ptr %628, align 4, !tbaa !5
  %878 = add i32 %877, %876
  store i32 %878, ptr %628, align 4, !tbaa !5
  %879 = add nuw nsw i32 %796, 1
  br i1 %642, label %880, label %930

880:                                              ; preds = %872
  %881 = load i32, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %12, align 4, !tbaa !5
  %883 = add nsw i32 %882, -1
  %884 = icmp slt i32 %881, %883
  br i1 %884, label %907, label %885

885:                                              ; preds = %880
  %886 = icmp eq i32 %881, %883
  br i1 %886, label %887, label %923

887:                                              ; preds = %885
  store i32 0, ptr %4, align 4, !tbaa !5
  %888 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %888, ptr %6, align 4, !tbaa !5
  br i1 %647, label %930, label %889

889:                                              ; preds = %887, %917
  %890 = phi i64 [ %921, %917 ], [ 1, %887 ]
  %891 = getelementptr inbounds i32, ptr %4, i64 %890
  %892 = load i32, ptr %891, align 4, !tbaa !5
  %893 = getelementptr inbounds i32, ptr %12, i64 %890
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = add nsw i32 %894, -1
  %896 = icmp slt i32 %892, %895
  br i1 %896, label %897, label %915

897:                                              ; preds = %889
  br i1 %884, label %907, label %898

898:                                              ; preds = %897
  %899 = shl i64 %890, 32
  %900 = add i64 %899, -4294967296
  %901 = ashr exact i64 %900, 32
  %902 = getelementptr inbounds i32, ptr %7, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %6, i64 %890
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, %903
  store i32 %906, ptr %904, align 4, !tbaa !5
  br label %925

907:                                              ; preds = %880, %897
  %908 = phi i32 [ %892, %897 ], [ %881, %880 ]
  %909 = phi ptr [ %891, %897 ], [ %4, %880 ]
  %910 = phi i64 [ %890, %897 ], [ 0, %880 ]
  %911 = add nsw i32 %908, 1
  store i32 %911, ptr %909, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %7, i64 %910
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %910
  br label %925

915:                                              ; preds = %889
  %916 = icmp eq i32 %892, %895
  br i1 %916, label %917, label %923

917:                                              ; preds = %915
  store i32 0, ptr %891, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %8, i64 %890
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %890
  store i32 %919, ptr %920, align 4, !tbaa !5
  %921 = add nuw nsw i64 %890, 1
  %922 = icmp eq i64 %921, %645
  br i1 %922, label %930, label %889, !llvm.loop !1152

923:                                              ; preds = %885, %915
  %924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

925:                                              ; preds = %898, %907
  %926 = phi ptr [ %914, %907 ], [ %891, %898 ]
  %927 = phi i32 [ %913, %907 ], [ 1, %898 ]
  %928 = load i32, ptr %926, align 4, !tbaa !5
  %929 = add nsw i32 %928, %927
  store i32 %929, ptr %926, align 4, !tbaa !5
  br label %930

930:                                              ; preds = %917, %925, %887, %872
  %931 = icmp eq i32 %879, %5
  br i1 %931, label %5442, label %795, !llvm.loop !1153

932:                                              ; preds = %633
  %933 = getelementptr inbounds i32, ptr %3, i64 %19
  %934 = load i32, ptr %933, align 4, !tbaa !5
  %935 = icmp eq i32 %934, 0
  %936 = icmp sgt i32 %5, 0
  br i1 %935, label %946, label %937

937:                                              ; preds = %932
  br i1 %936, label %938, label %5442

938:                                              ; preds = %937
  %939 = icmp sgt i32 %13, 1
  %940 = icmp sgt i32 %13, 0
  %941 = add i32 %13, -2
  %942 = zext i32 %941 to i64
  %943 = zext i32 %13 to i64
  %944 = add nuw i32 %5, 1
  %945 = icmp eq i32 %13, 1
  br label %1087

946:                                              ; preds = %932
  br i1 %936, label %947, label %5442

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %955

955:                                              ; preds = %947, %1085
  %956 = phi i32 [ 0, %947 ], [ %1037, %1085 ]
  %957 = phi double [ 0.000000e+00, %947 ], [ %1036, %1085 ]
  %958 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %959, label %1028

959:                                              ; preds = %955, %1018
  %960 = phi i32 [ %1027, %1018 ], [ 0, %955 ]
  %961 = phi i64 [ %969, %1018 ], [ %952, %955 ]
  %962 = phi i64 [ %1026, %1018 ], [ %951, %955 ]
  %963 = phi i32 [ %1024, %1018 ], [ %958, %955 ]
  %964 = sub i32 %950, %960
  %965 = tail call i32 @llvm.smin.i32(i32 %964, i32 0)
  %966 = sub i32 %964, %965
  %967 = zext i32 %966 to i64
  %968 = add nuw nsw i64 %967, 1
  %969 = add nsw i64 %961, -1
  %970 = icmp ult i32 %966, 31
  br i1 %970, label %1006, label %971

971:                                              ; preds = %959
  %972 = and i64 %968, 8589934560
  %973 = sub i64 %962, %972
  br label %974

974:                                              ; preds = %974, %971
  %975 = phi i64 [ 0, %971 ], [ %998, %974 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %994, %974 ]
  %977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %995, %974 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %996, %974 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %997, %974 ]
  %980 = sub i64 %962, %975
  %981 = getelementptr inbounds i32, ptr %9, i64 %980
  %982 = getelementptr inbounds i32, ptr %981, i64 -7
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %981, i64 -15
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %981, i64 -23
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %981, i64 -31
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = mul <8 x i32> %984, %976
  %995 = mul <8 x i32> %987, %977
  %996 = mul <8 x i32> %990, %978
  %997 = mul <8 x i32> %993, %979
  %998 = add nuw i64 %975, 32
  %999 = icmp eq i64 %998, %972
  br i1 %999, label %1000, label %974, !llvm.loop !1154

1000:                                             ; preds = %974
  %1001 = mul <8 x i32> %995, %994
  %1002 = mul <8 x i32> %996, %1001
  %1003 = mul <8 x i32> %997, %1002
  %1004 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1003)
  %1005 = icmp eq i64 %968, %972
  br i1 %1005, label %1018, label %1006

1006:                                             ; preds = %959, %1000
  %1007 = phi i64 [ %962, %959 ], [ %973, %1000 ]
  %1008 = phi i32 [ 1, %959 ], [ %1004, %1000 ]
  br label %1009

1009:                                             ; preds = %1006, %1009
  %1010 = phi i64 [ %1015, %1009 ], [ %1007, %1006 ]
  %1011 = phi i32 [ %1014, %1009 ], [ %1008, %1006 ]
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1010
  %1013 = load i32, ptr %1012, align 4, !tbaa !5
  %1014 = mul nsw i32 %1013, %1011
  %1015 = add nsw i64 %1010, -1
  %1016 = trunc i64 %1010 to i32
  %1017 = icmp sgt i32 %1016, 0
  br i1 %1017, label %1009, label %1018, !llvm.loop !1155

1018:                                             ; preds = %1009, %1000
  %1019 = phi i32 [ %1004, %1000 ], [ %1014, %1009 ]
  %1020 = and i64 %969, 4294967295
  %1021 = getelementptr inbounds i32, ptr %6, i64 %1020
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1019
  %1024 = add nsw i32 %1023, %963
  %1025 = icmp sgt i64 %961, 2
  %1026 = add nsw i64 %962, -1
  %1027 = add i32 %960, 1
  br i1 %1025, label %959, label %1028, !llvm.loop !1156

1028:                                             ; preds = %1018, %955
  %1029 = phi i32 [ %958, %955 ], [ %1024, %1018 ]
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds float, ptr %626, i64 %1030
  %1032 = load float, ptr %1031, align 4, !tbaa !162
  %1033 = fptosi float %1032 to i32
  %1034 = load i32, ptr %628, align 4, !tbaa !5
  %1035 = add nsw i32 %1034, %1033
  store i32 %1035, ptr %628, align 4, !tbaa !5
  %1036 = fadd fast double %957, 1.000000e+00
  %1037 = add nuw nsw i32 %956, 1
  br i1 %949, label %1038, label %1085

1038:                                             ; preds = %1028
  %1039 = load i32, ptr %4, align 4, !tbaa !5
  %1040 = load i32, ptr %12, align 4, !tbaa !5
  %1041 = add nsw i32 %1040, -1
  %1042 = icmp slt i32 %1039, %1041
  br i1 %1042, label %1062, label %1043

1043:                                             ; preds = %1038
  %1044 = icmp eq i32 %1039, %1041
  br i1 %1044, label %1045, label %1078

1045:                                             ; preds = %1043
  store i32 0, ptr %4, align 4, !tbaa !5
  %1046 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1046, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1085, label %1047

1047:                                             ; preds = %1045, %1072
  %1048 = phi i64 [ %1076, %1072 ], [ 1, %1045 ]
  %1049 = getelementptr inbounds i32, ptr %4, i64 %1048
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %12, i64 %1048
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1050, %1053
  br i1 %1054, label %1055, label %1070

1055:                                             ; preds = %1047
  br i1 %1042, label %1062, label %1056

1056:                                             ; preds = %1055
  %1057 = getelementptr inbounds i32, ptr %7, i64 %1048
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %6, i64 %1048
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = add nsw i32 %1060, %1058
  store i32 %1061, ptr %1059, align 4, !tbaa !5
  br label %1080

1062:                                             ; preds = %1038, %1055
  %1063 = phi i32 [ %1050, %1055 ], [ %1039, %1038 ]
  %1064 = phi ptr [ %1049, %1055 ], [ %4, %1038 ]
  %1065 = phi i64 [ %1048, %1055 ], [ 0, %1038 ]
  %1066 = add nsw i32 %1063, 1
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1065
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1065
  br label %1080

1070:                                             ; preds = %1047
  %1071 = icmp eq i32 %1050, %1053
  br i1 %1071, label %1072, label %1078

1072:                                             ; preds = %1070
  store i32 0, ptr %1049, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %8, i64 %1048
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %6, i64 %1048
  store i32 %1074, ptr %1075, align 4, !tbaa !5
  %1076 = add nuw nsw i64 %1048, 1
  %1077 = icmp eq i64 %1076, %952
  br i1 %1077, label %1085, label %1047, !llvm.loop !1157

1078:                                             ; preds = %1043, %1070
  %1079 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1080:                                             ; preds = %1056, %1062
  %1081 = phi ptr [ %1069, %1062 ], [ %1049, %1056 ]
  %1082 = phi i32 [ %1068, %1062 ], [ 1, %1056 ]
  %1083 = load i32, ptr %1081, align 4, !tbaa !5
  %1084 = add nsw i32 %1083, %1082
  store i32 %1084, ptr %1081, align 4, !tbaa !5
  br label %1085

1085:                                             ; preds = %1072, %1080, %1045, %1028
  %1086 = icmp eq i32 %1037, %5
  br i1 %1086, label %5442, label %955, !llvm.loop !1158

1087:                                             ; preds = %938, %1222
  %1088 = phi i32 [ 0, %938 ], [ %1171, %1222 ]
  %1089 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1090, label %1159

1090:                                             ; preds = %1087, %1149
  %1091 = phi i32 [ %1158, %1149 ], [ 0, %1087 ]
  %1092 = phi i64 [ %1100, %1149 ], [ %943, %1087 ]
  %1093 = phi i64 [ %1157, %1149 ], [ %942, %1087 ]
  %1094 = phi i32 [ %1155, %1149 ], [ %1089, %1087 ]
  %1095 = sub i32 %941, %1091
  %1096 = tail call i32 @llvm.smin.i32(i32 %1095, i32 0)
  %1097 = sub i32 %1095, %1096
  %1098 = zext i32 %1097 to i64
  %1099 = add nuw nsw i64 %1098, 1
  %1100 = add nsw i64 %1092, -1
  %1101 = icmp ult i32 %1097, 31
  br i1 %1101, label %1137, label %1102

1102:                                             ; preds = %1090
  %1103 = and i64 %1099, 8589934560
  %1104 = sub i64 %1093, %1103
  br label %1105

1105:                                             ; preds = %1105, %1102
  %1106 = phi i64 [ 0, %1102 ], [ %1129, %1105 ]
  %1107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1125, %1105 ]
  %1108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1126, %1105 ]
  %1109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1127, %1105 ]
  %1110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1128, %1105 ]
  %1111 = sub i64 %1093, %1106
  %1112 = getelementptr inbounds i32, ptr %11, i64 %1111
  %1113 = getelementptr inbounds i32, ptr %1112, i64 -7
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = getelementptr inbounds i32, ptr %1112, i64 -15
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = getelementptr inbounds i32, ptr %1112, i64 -23
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1112, i64 -31
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = mul <8 x i32> %1115, %1107
  %1126 = mul <8 x i32> %1118, %1108
  %1127 = mul <8 x i32> %1121, %1109
  %1128 = mul <8 x i32> %1124, %1110
  %1129 = add nuw i64 %1106, 32
  %1130 = icmp eq i64 %1129, %1103
  br i1 %1130, label %1131, label %1105, !llvm.loop !1159

1131:                                             ; preds = %1105
  %1132 = mul <8 x i32> %1126, %1125
  %1133 = mul <8 x i32> %1127, %1132
  %1134 = mul <8 x i32> %1128, %1133
  %1135 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1134)
  %1136 = icmp eq i64 %1099, %1103
  br i1 %1136, label %1149, label %1137

1137:                                             ; preds = %1090, %1131
  %1138 = phi i64 [ %1093, %1090 ], [ %1104, %1131 ]
  %1139 = phi i32 [ 1, %1090 ], [ %1135, %1131 ]
  br label %1140

1140:                                             ; preds = %1137, %1140
  %1141 = phi i64 [ %1146, %1140 ], [ %1138, %1137 ]
  %1142 = phi i32 [ %1145, %1140 ], [ %1139, %1137 ]
  %1143 = getelementptr inbounds i32, ptr %11, i64 %1141
  %1144 = load i32, ptr %1143, align 4, !tbaa !5
  %1145 = mul nsw i32 %1144, %1142
  %1146 = add nsw i64 %1141, -1
  %1147 = trunc i64 %1141 to i32
  %1148 = icmp sgt i32 %1147, 0
  br i1 %1148, label %1140, label %1149, !llvm.loop !1160

1149:                                             ; preds = %1140, %1131
  %1150 = phi i32 [ %1135, %1131 ], [ %1145, %1140 ]
  %1151 = and i64 %1100, 4294967295
  %1152 = getelementptr inbounds i32, ptr %6, i64 %1151
  %1153 = load i32, ptr %1152, align 4, !tbaa !5
  %1154 = mul nsw i32 %1153, %1150
  %1155 = add nsw i32 %1154, %1094
  %1156 = icmp sgt i64 %1092, 2
  %1157 = add nsw i64 %1093, -1
  %1158 = add i32 %1091, 1
  br i1 %1156, label %1090, label %1159, !llvm.loop !1161

1159:                                             ; preds = %1149, %1087
  %1160 = phi i32 [ %1089, %1087 ], [ %1155, %1149 ]
  %1161 = icmp slt i32 %1160, %5
  br i1 %1161, label %1164, label %1162

1162:                                             ; preds = %1159
  %1163 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

1164:                                             ; preds = %1159
  %1165 = sext i32 %1160 to i64
  %1166 = getelementptr inbounds float, ptr %626, i64 %1165
  %1167 = load float, ptr %1166, align 4, !tbaa !162
  %1168 = fptosi float %1167 to i32
  %1169 = load i32, ptr %628, align 4, !tbaa !5
  %1170 = add nsw i32 %1169, %1168
  store i32 %1170, ptr %628, align 4, !tbaa !5
  %1171 = add nuw nsw i32 %1088, 1
  br i1 %940, label %1172, label %1222

1172:                                             ; preds = %1164
  %1173 = load i32, ptr %4, align 4, !tbaa !5
  %1174 = load i32, ptr %12, align 4, !tbaa !5
  %1175 = add nsw i32 %1174, -1
  %1176 = icmp slt i32 %1173, %1175
  br i1 %1176, label %1199, label %1177

1177:                                             ; preds = %1172
  %1178 = icmp eq i32 %1173, %1175
  br i1 %1178, label %1179, label %1215

1179:                                             ; preds = %1177
  store i32 0, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1180, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1222, label %1181

1181:                                             ; preds = %1179, %1209
  %1182 = phi i64 [ %1213, %1209 ], [ 1, %1179 ]
  %1183 = getelementptr inbounds i32, ptr %4, i64 %1182
  %1184 = load i32, ptr %1183, align 4, !tbaa !5
  %1185 = getelementptr inbounds i32, ptr %12, i64 %1182
  %1186 = load i32, ptr %1185, align 4, !tbaa !5
  %1187 = add nsw i32 %1186, -1
  %1188 = icmp slt i32 %1184, %1187
  br i1 %1188, label %1189, label %1207

1189:                                             ; preds = %1181
  br i1 %1176, label %1199, label %1190

1190:                                             ; preds = %1189
  %1191 = shl i64 %1182, 32
  %1192 = add i64 %1191, -4294967296
  %1193 = ashr exact i64 %1192, 32
  %1194 = getelementptr inbounds i32, ptr %7, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %6, i64 %1182
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, %1195
  store i32 %1198, ptr %1196, align 4, !tbaa !5
  br label %1217

1199:                                             ; preds = %1172, %1189
  %1200 = phi i32 [ %1184, %1189 ], [ %1173, %1172 ]
  %1201 = phi ptr [ %1183, %1189 ], [ %4, %1172 ]
  %1202 = phi i64 [ %1182, %1189 ], [ 0, %1172 ]
  %1203 = add nsw i32 %1200, 1
  store i32 %1203, ptr %1201, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %7, i64 %1202
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1202
  br label %1217

1207:                                             ; preds = %1181
  %1208 = icmp eq i32 %1184, %1187
  br i1 %1208, label %1209, label %1215

1209:                                             ; preds = %1207
  store i32 0, ptr %1183, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %8, i64 %1182
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1182
  store i32 %1211, ptr %1212, align 4, !tbaa !5
  %1213 = add nuw nsw i64 %1182, 1
  %1214 = icmp eq i64 %1213, %943
  br i1 %1214, label %1222, label %1181, !llvm.loop !1162

1215:                                             ; preds = %1177, %1207
  %1216 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1217:                                             ; preds = %1190, %1199
  %1218 = phi ptr [ %1206, %1199 ], [ %1183, %1190 ]
  %1219 = phi i32 [ %1205, %1199 ], [ 1, %1190 ]
  %1220 = load i32, ptr %1218, align 4, !tbaa !5
  %1221 = add nsw i32 %1220, %1219
  store i32 %1221, ptr %1218, align 4, !tbaa !5
  br label %1222

1222:                                             ; preds = %1209, %1217, %1179, %1164
  %1223 = icmp eq i32 %1171, %5
  br i1 %1223, label %5442, label %1087, !llvm.loop !1163

1224:                                             ; preds = %633
  %1225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

1226:                                             ; preds = %18
  %1227 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1228 = load ptr, ptr %1227, align 8, !tbaa !9
  %1229 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1230 = load ptr, ptr %1229, align 8, !tbaa !9
  store i8 0, ptr %1230, align 1, !tbaa !11
  %1231 = icmp eq i32 %13, 0
  br i1 %1231, label %1232, label %1235

1232:                                             ; preds = %1226
  %1233 = load float, ptr %1228, align 4, !tbaa !162
  %1234 = fptosi float %1233 to i8
  store i8 %1234, ptr %1230, align 1, !tbaa !11
  br label %5442

1235:                                             ; preds = %1226
  switch i32 %1, label %1826 [
    i32 1, label %1236
    i32 0, label %1534
  ]

1236:                                             ; preds = %1235
  %1237 = getelementptr inbounds i32, ptr %3, i64 %19
  %1238 = load i32, ptr %1237, align 4, !tbaa !5
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp sgt i32 %5, 0
  br i1 %1239, label %1250, label %1241

1241:                                             ; preds = %1236
  br i1 %1240, label %1242, label %5442

1242:                                             ; preds = %1241
  %1243 = icmp sgt i32 %13, 1
  %1244 = icmp sgt i32 %13, 0
  %1245 = add i32 %13, -2
  %1246 = zext i32 %1245 to i64
  %1247 = zext i32 %13 to i64
  %1248 = add nuw i32 %5, 1
  %1249 = icmp eq i32 %13, 1
  br label %1397

1250:                                             ; preds = %1236
  br i1 %1240, label %1251, label %5442

1251:                                             ; preds = %1250
  %1252 = icmp sgt i32 %13, 1
  %1253 = icmp sgt i32 %13, 0
  %1254 = add i32 %13, -2
  %1255 = zext i32 %1254 to i64
  %1256 = zext i32 %13 to i64
  %1257 = add nuw i32 %5, 1
  %1258 = icmp eq i32 %13, 1
  br label %1259

1259:                                             ; preds = %1251, %1395
  %1260 = phi i32 [ 0, %1251 ], [ %1347, %1395 ]
  %1261 = phi double [ 0.000000e+00, %1251 ], [ %1346, %1395 ]
  %1262 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1252, label %1263, label %1332

1263:                                             ; preds = %1259, %1322
  %1264 = phi i32 [ %1331, %1322 ], [ 0, %1259 ]
  %1265 = phi i64 [ %1273, %1322 ], [ %1256, %1259 ]
  %1266 = phi i64 [ %1330, %1322 ], [ %1255, %1259 ]
  %1267 = phi i32 [ %1328, %1322 ], [ %1262, %1259 ]
  %1268 = sub i32 %1254, %1264
  %1269 = tail call i32 @llvm.smin.i32(i32 %1268, i32 0)
  %1270 = sub i32 %1268, %1269
  %1271 = zext i32 %1270 to i64
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = add nsw i64 %1265, -1
  %1274 = icmp ult i32 %1270, 31
  br i1 %1274, label %1310, label %1275

1275:                                             ; preds = %1263
  %1276 = and i64 %1272, 8589934560
  %1277 = sub i64 %1266, %1276
  br label %1278

1278:                                             ; preds = %1278, %1275
  %1279 = phi i64 [ 0, %1275 ], [ %1302, %1278 ]
  %1280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1298, %1278 ]
  %1281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1299, %1278 ]
  %1282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1300, %1278 ]
  %1283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1301, %1278 ]
  %1284 = sub i64 %1266, %1279
  %1285 = getelementptr inbounds i32, ptr %9, i64 %1284
  %1286 = getelementptr inbounds i32, ptr %1285, i64 -7
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = getelementptr inbounds i32, ptr %1285, i64 -15
  %1290 = load <8 x i32>, ptr %1289, align 4, !tbaa !5
  %1291 = shufflevector <8 x i32> %1290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1292 = getelementptr inbounds i32, ptr %1285, i64 -23
  %1293 = load <8 x i32>, ptr %1292, align 4, !tbaa !5
  %1294 = shufflevector <8 x i32> %1293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1295 = getelementptr inbounds i32, ptr %1285, i64 -31
  %1296 = load <8 x i32>, ptr %1295, align 4, !tbaa !5
  %1297 = shufflevector <8 x i32> %1296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1298 = mul <8 x i32> %1288, %1280
  %1299 = mul <8 x i32> %1291, %1281
  %1300 = mul <8 x i32> %1294, %1282
  %1301 = mul <8 x i32> %1297, %1283
  %1302 = add nuw i64 %1279, 32
  %1303 = icmp eq i64 %1302, %1276
  br i1 %1303, label %1304, label %1278, !llvm.loop !1164

1304:                                             ; preds = %1278
  %1305 = mul <8 x i32> %1299, %1298
  %1306 = mul <8 x i32> %1300, %1305
  %1307 = mul <8 x i32> %1301, %1306
  %1308 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1307)
  %1309 = icmp eq i64 %1272, %1276
  br i1 %1309, label %1322, label %1310

1310:                                             ; preds = %1263, %1304
  %1311 = phi i64 [ %1266, %1263 ], [ %1277, %1304 ]
  %1312 = phi i32 [ 1, %1263 ], [ %1308, %1304 ]
  br label %1313

1313:                                             ; preds = %1310, %1313
  %1314 = phi i64 [ %1319, %1313 ], [ %1311, %1310 ]
  %1315 = phi i32 [ %1318, %1313 ], [ %1312, %1310 ]
  %1316 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1315
  %1319 = add nsw i64 %1314, -1
  %1320 = trunc i64 %1314 to i32
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1313, label %1322, !llvm.loop !1165

1322:                                             ; preds = %1313, %1304
  %1323 = phi i32 [ %1308, %1304 ], [ %1318, %1313 ]
  %1324 = and i64 %1273, 4294967295
  %1325 = getelementptr inbounds i32, ptr %6, i64 %1324
  %1326 = load i32, ptr %1325, align 4, !tbaa !5
  %1327 = mul nsw i32 %1326, %1323
  %1328 = add nsw i32 %1327, %1267
  %1329 = icmp sgt i64 %1265, 2
  %1330 = add nsw i64 %1266, -1
  %1331 = add i32 %1264, 1
  br i1 %1329, label %1263, label %1332, !llvm.loop !1166

1332:                                             ; preds = %1322, %1259
  %1333 = phi i32 [ %1262, %1259 ], [ %1328, %1322 ]
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds double, ptr %2, i64 %1334
  %1336 = load double, ptr %1335, align 8, !tbaa !18
  %1337 = getelementptr inbounds float, ptr %1228, i64 %1334
  %1338 = load float, ptr %1337, align 4, !tbaa !162
  %1339 = fptosi float %1338 to i8
  %1340 = load i8, ptr %1230, align 1, !tbaa !11
  %1341 = sitofp i8 %1340 to double
  %1342 = sitofp i8 %1339 to double
  %1343 = fmul fast double %1336, %1342
  %1344 = fadd fast double %1343, %1341
  %1345 = fptosi double %1344 to i8
  store i8 %1345, ptr %1230, align 1, !tbaa !11
  %1346 = fadd fast double %1336, %1261
  %1347 = add nuw nsw i32 %1260, 1
  br i1 %1253, label %1348, label %1395

1348:                                             ; preds = %1332
  %1349 = load i32, ptr %4, align 4, !tbaa !5
  %1350 = load i32, ptr %12, align 4, !tbaa !5
  %1351 = add nsw i32 %1350, -1
  %1352 = icmp slt i32 %1349, %1351
  br i1 %1352, label %1372, label %1353

1353:                                             ; preds = %1348
  %1354 = icmp eq i32 %1349, %1351
  br i1 %1354, label %1355, label %1388

1355:                                             ; preds = %1353
  store i32 0, ptr %4, align 4, !tbaa !5
  %1356 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1356, ptr %6, align 4, !tbaa !5
  br i1 %1258, label %1395, label %1357

1357:                                             ; preds = %1355, %1382
  %1358 = phi i64 [ %1386, %1382 ], [ 1, %1355 ]
  %1359 = getelementptr inbounds i32, ptr %4, i64 %1358
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = getelementptr inbounds i32, ptr %12, i64 %1358
  %1362 = load i32, ptr %1361, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, -1
  %1364 = icmp slt i32 %1360, %1363
  br i1 %1364, label %1365, label %1380

1365:                                             ; preds = %1357
  br i1 %1352, label %1372, label %1366

1366:                                             ; preds = %1365
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1358
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1358
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = add nsw i32 %1370, %1368
  store i32 %1371, ptr %1369, align 4, !tbaa !5
  br label %1390

1372:                                             ; preds = %1348, %1365
  %1373 = phi i32 [ %1360, %1365 ], [ %1349, %1348 ]
  %1374 = phi ptr [ %1359, %1365 ], [ %4, %1348 ]
  %1375 = phi i64 [ %1358, %1365 ], [ 0, %1348 ]
  %1376 = add nsw i32 %1373, 1
  store i32 %1376, ptr %1374, align 4, !tbaa !5
  %1377 = getelementptr inbounds i32, ptr %7, i64 %1375
  %1378 = load i32, ptr %1377, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %6, i64 %1375
  br label %1390

1380:                                             ; preds = %1357
  %1381 = icmp eq i32 %1360, %1363
  br i1 %1381, label %1382, label %1388

1382:                                             ; preds = %1380
  store i32 0, ptr %1359, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %8, i64 %1358
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = getelementptr inbounds i32, ptr %6, i64 %1358
  store i32 %1384, ptr %1385, align 4, !tbaa !5
  %1386 = add nuw nsw i64 %1358, 1
  %1387 = icmp eq i64 %1386, %1256
  br i1 %1387, label %1395, label %1357, !llvm.loop !1167

1388:                                             ; preds = %1353, %1380
  %1389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1390:                                             ; preds = %1366, %1372
  %1391 = phi ptr [ %1379, %1372 ], [ %1359, %1366 ]
  %1392 = phi i32 [ %1378, %1372 ], [ 1, %1366 ]
  %1393 = load i32, ptr %1391, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, %1392
  store i32 %1394, ptr %1391, align 4, !tbaa !5
  br label %1395

1395:                                             ; preds = %1382, %1390, %1355, %1332
  %1396 = icmp eq i32 %1347, %5
  br i1 %1396, label %5442, label %1259, !llvm.loop !1168

1397:                                             ; preds = %1242, %1532
  %1398 = phi i32 [ 0, %1242 ], [ %1481, %1532 ]
  %1399 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1400, label %1469

1400:                                             ; preds = %1397, %1459
  %1401 = phi i32 [ %1468, %1459 ], [ 0, %1397 ]
  %1402 = phi i64 [ %1410, %1459 ], [ %1247, %1397 ]
  %1403 = phi i64 [ %1467, %1459 ], [ %1246, %1397 ]
  %1404 = phi i32 [ %1465, %1459 ], [ %1399, %1397 ]
  %1405 = sub i32 %1245, %1401
  %1406 = tail call i32 @llvm.smin.i32(i32 %1405, i32 0)
  %1407 = sub i32 %1405, %1406
  %1408 = zext i32 %1407 to i64
  %1409 = add nuw nsw i64 %1408, 1
  %1410 = add nsw i64 %1402, -1
  %1411 = icmp ult i32 %1407, 31
  br i1 %1411, label %1447, label %1412

1412:                                             ; preds = %1400
  %1413 = and i64 %1409, 8589934560
  %1414 = sub i64 %1403, %1413
  br label %1415

1415:                                             ; preds = %1415, %1412
  %1416 = phi i64 [ 0, %1412 ], [ %1439, %1415 ]
  %1417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1435, %1415 ]
  %1418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1436, %1415 ]
  %1419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1437, %1415 ]
  %1420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1438, %1415 ]
  %1421 = sub i64 %1403, %1416
  %1422 = getelementptr inbounds i32, ptr %11, i64 %1421
  %1423 = getelementptr inbounds i32, ptr %1422, i64 -7
  %1424 = load <8 x i32>, ptr %1423, align 4, !tbaa !5
  %1425 = shufflevector <8 x i32> %1424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1426 = getelementptr inbounds i32, ptr %1422, i64 -15
  %1427 = load <8 x i32>, ptr %1426, align 4, !tbaa !5
  %1428 = shufflevector <8 x i32> %1427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1429 = getelementptr inbounds i32, ptr %1422, i64 -23
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = getelementptr inbounds i32, ptr %1422, i64 -31
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = mul <8 x i32> %1425, %1417
  %1436 = mul <8 x i32> %1428, %1418
  %1437 = mul <8 x i32> %1431, %1419
  %1438 = mul <8 x i32> %1434, %1420
  %1439 = add nuw i64 %1416, 32
  %1440 = icmp eq i64 %1439, %1413
  br i1 %1440, label %1441, label %1415, !llvm.loop !1169

1441:                                             ; preds = %1415
  %1442 = mul <8 x i32> %1436, %1435
  %1443 = mul <8 x i32> %1437, %1442
  %1444 = mul <8 x i32> %1438, %1443
  %1445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1444)
  %1446 = icmp eq i64 %1409, %1413
  br i1 %1446, label %1459, label %1447

1447:                                             ; preds = %1400, %1441
  %1448 = phi i64 [ %1403, %1400 ], [ %1414, %1441 ]
  %1449 = phi i32 [ 1, %1400 ], [ %1445, %1441 ]
  br label %1450

1450:                                             ; preds = %1447, %1450
  %1451 = phi i64 [ %1456, %1450 ], [ %1448, %1447 ]
  %1452 = phi i32 [ %1455, %1450 ], [ %1449, %1447 ]
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1451
  %1454 = load i32, ptr %1453, align 4, !tbaa !5
  %1455 = mul nsw i32 %1454, %1452
  %1456 = add nsw i64 %1451, -1
  %1457 = trunc i64 %1451 to i32
  %1458 = icmp sgt i32 %1457, 0
  br i1 %1458, label %1450, label %1459, !llvm.loop !1170

1459:                                             ; preds = %1450, %1441
  %1460 = phi i32 [ %1445, %1441 ], [ %1455, %1450 ]
  %1461 = and i64 %1410, 4294967295
  %1462 = getelementptr inbounds i32, ptr %6, i64 %1461
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1460
  %1465 = add nsw i32 %1464, %1404
  %1466 = icmp sgt i64 %1402, 2
  %1467 = add nsw i64 %1403, -1
  %1468 = add i32 %1401, 1
  br i1 %1466, label %1400, label %1469, !llvm.loop !1171

1469:                                             ; preds = %1459, %1397
  %1470 = phi i32 [ %1399, %1397 ], [ %1465, %1459 ]
  %1471 = icmp slt i32 %1470, %5
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1469
  %1473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

1474:                                             ; preds = %1469
  %1475 = sext i32 %1470 to i64
  %1476 = getelementptr inbounds float, ptr %1228, i64 %1475
  %1477 = load float, ptr %1476, align 4, !tbaa !162
  %1478 = fptosi float %1477 to i8
  %1479 = load i8, ptr %1230, align 1, !tbaa !11
  %1480 = add i8 %1479, %1478
  store i8 %1480, ptr %1230, align 1, !tbaa !11
  %1481 = add nuw nsw i32 %1398, 1
  br i1 %1244, label %1482, label %1532

1482:                                             ; preds = %1474
  %1483 = load i32, ptr %4, align 4, !tbaa !5
  %1484 = load i32, ptr %12, align 4, !tbaa !5
  %1485 = add nsw i32 %1484, -1
  %1486 = icmp slt i32 %1483, %1485
  br i1 %1486, label %1509, label %1487

1487:                                             ; preds = %1482
  %1488 = icmp eq i32 %1483, %1485
  br i1 %1488, label %1489, label %1525

1489:                                             ; preds = %1487
  store i32 0, ptr %4, align 4, !tbaa !5
  %1490 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1490, ptr %6, align 4, !tbaa !5
  br i1 %1249, label %1532, label %1491

1491:                                             ; preds = %1489, %1519
  %1492 = phi i64 [ %1523, %1519 ], [ 1, %1489 ]
  %1493 = getelementptr inbounds i32, ptr %4, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = getelementptr inbounds i32, ptr %12, i64 %1492
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = add nsw i32 %1496, -1
  %1498 = icmp slt i32 %1494, %1497
  br i1 %1498, label %1499, label %1517

1499:                                             ; preds = %1491
  br i1 %1486, label %1509, label %1500

1500:                                             ; preds = %1499
  %1501 = shl i64 %1492, 32
  %1502 = add i64 %1501, -4294967296
  %1503 = ashr exact i64 %1502, 32
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, %1505
  store i32 %1508, ptr %1506, align 4, !tbaa !5
  br label %1527

1509:                                             ; preds = %1482, %1499
  %1510 = phi i32 [ %1494, %1499 ], [ %1483, %1482 ]
  %1511 = phi ptr [ %1493, %1499 ], [ %4, %1482 ]
  %1512 = phi i64 [ %1492, %1499 ], [ 0, %1482 ]
  %1513 = add nsw i32 %1510, 1
  store i32 %1513, ptr %1511, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %7, i64 %1512
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %6, i64 %1512
  br label %1527

1517:                                             ; preds = %1491
  %1518 = icmp eq i32 %1494, %1497
  br i1 %1518, label %1519, label %1525

1519:                                             ; preds = %1517
  store i32 0, ptr %1493, align 4, !tbaa !5
  %1520 = getelementptr inbounds i32, ptr %8, i64 %1492
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1492
  store i32 %1521, ptr %1522, align 4, !tbaa !5
  %1523 = add nuw nsw i64 %1492, 1
  %1524 = icmp eq i64 %1523, %1247
  br i1 %1524, label %1532, label %1491, !llvm.loop !1172

1525:                                             ; preds = %1487, %1517
  %1526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1527:                                             ; preds = %1500, %1509
  %1528 = phi ptr [ %1516, %1509 ], [ %1493, %1500 ]
  %1529 = phi i32 [ %1515, %1509 ], [ 1, %1500 ]
  %1530 = load i32, ptr %1528, align 4, !tbaa !5
  %1531 = add nsw i32 %1530, %1529
  store i32 %1531, ptr %1528, align 4, !tbaa !5
  br label %1532

1532:                                             ; preds = %1519, %1527, %1489, %1474
  %1533 = icmp eq i32 %1481, %5
  br i1 %1533, label %5442, label %1397, !llvm.loop !1173

1534:                                             ; preds = %1235
  %1535 = getelementptr inbounds i32, ptr %3, i64 %19
  %1536 = load i32, ptr %1535, align 4, !tbaa !5
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp sgt i32 %5, 0
  br i1 %1537, label %1548, label %1539

1539:                                             ; preds = %1534
  br i1 %1538, label %1540, label %5442

1540:                                             ; preds = %1539
  %1541 = icmp sgt i32 %13, 1
  %1542 = icmp sgt i32 %13, 0
  %1543 = add i32 %13, -2
  %1544 = zext i32 %1543 to i64
  %1545 = zext i32 %13 to i64
  %1546 = add nuw i32 %5, 1
  %1547 = icmp eq i32 %13, 1
  br label %1689

1548:                                             ; preds = %1534
  br i1 %1538, label %1549, label %5442

1549:                                             ; preds = %1548
  %1550 = icmp sgt i32 %13, 1
  %1551 = icmp sgt i32 %13, 0
  %1552 = add i32 %13, -2
  %1553 = zext i32 %1552 to i64
  %1554 = zext i32 %13 to i64
  %1555 = add nuw i32 %5, 1
  %1556 = icmp eq i32 %13, 1
  br label %1557

1557:                                             ; preds = %1549, %1687
  %1558 = phi i32 [ 0, %1549 ], [ %1639, %1687 ]
  %1559 = phi double [ 0.000000e+00, %1549 ], [ %1638, %1687 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1550, label %1561, label %1630

1561:                                             ; preds = %1557, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1557 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1554, %1557 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1553, %1557 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1557 ]
  %1566 = sub i32 %1552, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %9, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !5
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !5
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !1174

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %9, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !5
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !1175

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !5
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !1176

1630:                                             ; preds = %1620, %1557
  %1631 = phi i32 [ %1560, %1557 ], [ %1626, %1620 ]
  %1632 = sext i32 %1631 to i64
  %1633 = getelementptr inbounds float, ptr %1228, i64 %1632
  %1634 = load float, ptr %1633, align 4, !tbaa !162
  %1635 = fptosi float %1634 to i8
  %1636 = load i8, ptr %1230, align 1, !tbaa !11
  %1637 = add i8 %1636, %1635
  store i8 %1637, ptr %1230, align 1, !tbaa !11
  %1638 = fadd fast double %1559, 1.000000e+00
  %1639 = add nuw nsw i32 %1558, 1
  br i1 %1551, label %1640, label %1687

1640:                                             ; preds = %1630
  %1641 = load i32, ptr %4, align 4, !tbaa !5
  %1642 = load i32, ptr %12, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1641, %1643
  br i1 %1644, label %1664, label %1645

1645:                                             ; preds = %1640
  %1646 = icmp eq i32 %1641, %1643
  br i1 %1646, label %1647, label %1680

1647:                                             ; preds = %1645
  store i32 0, ptr %4, align 4, !tbaa !5
  %1648 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1648, ptr %6, align 4, !tbaa !5
  br i1 %1556, label %1687, label %1649

1649:                                             ; preds = %1647, %1674
  %1650 = phi i64 [ %1678, %1674 ], [ 1, %1647 ]
  %1651 = getelementptr inbounds i32, ptr %4, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %12, i64 %1650
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = add nsw i32 %1654, -1
  %1656 = icmp slt i32 %1652, %1655
  br i1 %1656, label %1657, label %1672

1657:                                             ; preds = %1649
  br i1 %1644, label %1664, label %1658

1658:                                             ; preds = %1657
  %1659 = getelementptr inbounds i32, ptr %7, i64 %1650
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1650
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, %1660
  store i32 %1663, ptr %1661, align 4, !tbaa !5
  br label %1682

1664:                                             ; preds = %1640, %1657
  %1665 = phi i32 [ %1652, %1657 ], [ %1641, %1640 ]
  %1666 = phi ptr [ %1651, %1657 ], [ %4, %1640 ]
  %1667 = phi i64 [ %1650, %1657 ], [ 0, %1640 ]
  %1668 = add nsw i32 %1665, 1
  store i32 %1668, ptr %1666, align 4, !tbaa !5
  %1669 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1670 = load i32, ptr %1669, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %6, i64 %1667
  br label %1682

1672:                                             ; preds = %1649
  %1673 = icmp eq i32 %1652, %1655
  br i1 %1673, label %1674, label %1680

1674:                                             ; preds = %1672
  store i32 0, ptr %1651, align 4, !tbaa !5
  %1675 = getelementptr inbounds i32, ptr %8, i64 %1650
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = getelementptr inbounds i32, ptr %6, i64 %1650
  store i32 %1676, ptr %1677, align 4, !tbaa !5
  %1678 = add nuw nsw i64 %1650, 1
  %1679 = icmp eq i64 %1678, %1554
  br i1 %1679, label %1687, label %1649, !llvm.loop !1177

1680:                                             ; preds = %1645, %1672
  %1681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1682:                                             ; preds = %1658, %1664
  %1683 = phi ptr [ %1671, %1664 ], [ %1651, %1658 ]
  %1684 = phi i32 [ %1670, %1664 ], [ 1, %1658 ]
  %1685 = load i32, ptr %1683, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, %1684
  store i32 %1686, ptr %1683, align 4, !tbaa !5
  br label %1687

1687:                                             ; preds = %1674, %1682, %1647, %1630
  %1688 = icmp eq i32 %1639, %5
  br i1 %1688, label %5442, label %1557, !llvm.loop !1178

1689:                                             ; preds = %1540, %1824
  %1690 = phi i32 [ 0, %1540 ], [ %1773, %1824 ]
  %1691 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1541, label %1692, label %1761

1692:                                             ; preds = %1689, %1751
  %1693 = phi i32 [ %1760, %1751 ], [ 0, %1689 ]
  %1694 = phi i64 [ %1702, %1751 ], [ %1545, %1689 ]
  %1695 = phi i64 [ %1759, %1751 ], [ %1544, %1689 ]
  %1696 = phi i32 [ %1757, %1751 ], [ %1691, %1689 ]
  %1697 = sub i32 %1543, %1693
  %1698 = tail call i32 @llvm.smin.i32(i32 %1697, i32 0)
  %1699 = sub i32 %1697, %1698
  %1700 = zext i32 %1699 to i64
  %1701 = add nuw nsw i64 %1700, 1
  %1702 = add nsw i64 %1694, -1
  %1703 = icmp ult i32 %1699, 31
  br i1 %1703, label %1739, label %1704

1704:                                             ; preds = %1692
  %1705 = and i64 %1701, 8589934560
  %1706 = sub i64 %1695, %1705
  br label %1707

1707:                                             ; preds = %1707, %1704
  %1708 = phi i64 [ 0, %1704 ], [ %1731, %1707 ]
  %1709 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1727, %1707 ]
  %1710 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1728, %1707 ]
  %1711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1729, %1707 ]
  %1712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1730, %1707 ]
  %1713 = sub i64 %1695, %1708
  %1714 = getelementptr inbounds i32, ptr %11, i64 %1713
  %1715 = getelementptr inbounds i32, ptr %1714, i64 -7
  %1716 = load <8 x i32>, ptr %1715, align 4, !tbaa !5
  %1717 = shufflevector <8 x i32> %1716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1718 = getelementptr inbounds i32, ptr %1714, i64 -15
  %1719 = load <8 x i32>, ptr %1718, align 4, !tbaa !5
  %1720 = shufflevector <8 x i32> %1719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1721 = getelementptr inbounds i32, ptr %1714, i64 -23
  %1722 = load <8 x i32>, ptr %1721, align 4, !tbaa !5
  %1723 = shufflevector <8 x i32> %1722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1724 = getelementptr inbounds i32, ptr %1714, i64 -31
  %1725 = load <8 x i32>, ptr %1724, align 4, !tbaa !5
  %1726 = shufflevector <8 x i32> %1725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1727 = mul <8 x i32> %1717, %1709
  %1728 = mul <8 x i32> %1720, %1710
  %1729 = mul <8 x i32> %1723, %1711
  %1730 = mul <8 x i32> %1726, %1712
  %1731 = add nuw i64 %1708, 32
  %1732 = icmp eq i64 %1731, %1705
  br i1 %1732, label %1733, label %1707, !llvm.loop !1179

1733:                                             ; preds = %1707
  %1734 = mul <8 x i32> %1728, %1727
  %1735 = mul <8 x i32> %1729, %1734
  %1736 = mul <8 x i32> %1730, %1735
  %1737 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1736)
  %1738 = icmp eq i64 %1701, %1705
  br i1 %1738, label %1751, label %1739

1739:                                             ; preds = %1692, %1733
  %1740 = phi i64 [ %1695, %1692 ], [ %1706, %1733 ]
  %1741 = phi i32 [ 1, %1692 ], [ %1737, %1733 ]
  br label %1742

1742:                                             ; preds = %1739, %1742
  %1743 = phi i64 [ %1748, %1742 ], [ %1740, %1739 ]
  %1744 = phi i32 [ %1747, %1742 ], [ %1741, %1739 ]
  %1745 = getelementptr inbounds i32, ptr %11, i64 %1743
  %1746 = load i32, ptr %1745, align 4, !tbaa !5
  %1747 = mul nsw i32 %1746, %1744
  %1748 = add nsw i64 %1743, -1
  %1749 = trunc i64 %1743 to i32
  %1750 = icmp sgt i32 %1749, 0
  br i1 %1750, label %1742, label %1751, !llvm.loop !1180

1751:                                             ; preds = %1742, %1733
  %1752 = phi i32 [ %1737, %1733 ], [ %1747, %1742 ]
  %1753 = and i64 %1702, 4294967295
  %1754 = getelementptr inbounds i32, ptr %6, i64 %1753
  %1755 = load i32, ptr %1754, align 4, !tbaa !5
  %1756 = mul nsw i32 %1755, %1752
  %1757 = add nsw i32 %1756, %1696
  %1758 = icmp sgt i64 %1694, 2
  %1759 = add nsw i64 %1695, -1
  %1760 = add i32 %1693, 1
  br i1 %1758, label %1692, label %1761, !llvm.loop !1181

1761:                                             ; preds = %1751, %1689
  %1762 = phi i32 [ %1691, %1689 ], [ %1757, %1751 ]
  %1763 = icmp slt i32 %1762, %5
  br i1 %1763, label %1766, label %1764

1764:                                             ; preds = %1761
  %1765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

1766:                                             ; preds = %1761
  %1767 = sext i32 %1762 to i64
  %1768 = getelementptr inbounds float, ptr %1228, i64 %1767
  %1769 = load float, ptr %1768, align 4, !tbaa !162
  %1770 = fptosi float %1769 to i8
  %1771 = load i8, ptr %1230, align 1, !tbaa !11
  %1772 = add i8 %1771, %1770
  store i8 %1772, ptr %1230, align 1, !tbaa !11
  %1773 = add nuw nsw i32 %1690, 1
  br i1 %1542, label %1774, label %1824

1774:                                             ; preds = %1766
  %1775 = load i32, ptr %4, align 4, !tbaa !5
  %1776 = load i32, ptr %12, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1775, %1777
  br i1 %1778, label %1801, label %1779

1779:                                             ; preds = %1774
  %1780 = icmp eq i32 %1775, %1777
  br i1 %1780, label %1781, label %1817

1781:                                             ; preds = %1779
  store i32 0, ptr %4, align 4, !tbaa !5
  %1782 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1782, ptr %6, align 4, !tbaa !5
  br i1 %1547, label %1824, label %1783

1783:                                             ; preds = %1781, %1811
  %1784 = phi i64 [ %1815, %1811 ], [ 1, %1781 ]
  %1785 = getelementptr inbounds i32, ptr %4, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = getelementptr inbounds i32, ptr %12, i64 %1784
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = add nsw i32 %1788, -1
  %1790 = icmp slt i32 %1786, %1789
  br i1 %1790, label %1791, label %1809

1791:                                             ; preds = %1783
  br i1 %1778, label %1801, label %1792

1792:                                             ; preds = %1791
  %1793 = shl i64 %1784, 32
  %1794 = add i64 %1793, -4294967296
  %1795 = ashr exact i64 %1794, 32
  %1796 = getelementptr inbounds i32, ptr %7, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1784
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = add nsw i32 %1799, %1797
  store i32 %1800, ptr %1798, align 4, !tbaa !5
  br label %1819

1801:                                             ; preds = %1774, %1791
  %1802 = phi i32 [ %1786, %1791 ], [ %1775, %1774 ]
  %1803 = phi ptr [ %1785, %1791 ], [ %4, %1774 ]
  %1804 = phi i64 [ %1784, %1791 ], [ 0, %1774 ]
  %1805 = add nsw i32 %1802, 1
  store i32 %1805, ptr %1803, align 4, !tbaa !5
  %1806 = getelementptr inbounds i32, ptr %7, i64 %1804
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %6, i64 %1804
  br label %1819

1809:                                             ; preds = %1783
  %1810 = icmp eq i32 %1786, %1789
  br i1 %1810, label %1811, label %1817

1811:                                             ; preds = %1809
  store i32 0, ptr %1785, align 4, !tbaa !5
  %1812 = getelementptr inbounds i32, ptr %8, i64 %1784
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %6, i64 %1784
  store i32 %1813, ptr %1814, align 4, !tbaa !5
  %1815 = add nuw nsw i64 %1784, 1
  %1816 = icmp eq i64 %1815, %1545
  br i1 %1816, label %1824, label %1783, !llvm.loop !1182

1817:                                             ; preds = %1779, %1809
  %1818 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1819:                                             ; preds = %1792, %1801
  %1820 = phi ptr [ %1808, %1801 ], [ %1785, %1792 ]
  %1821 = phi i32 [ %1807, %1801 ], [ 1, %1792 ]
  %1822 = load i32, ptr %1820, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, %1821
  store i32 %1823, ptr %1820, align 4, !tbaa !5
  br label %1824

1824:                                             ; preds = %1811, %1819, %1781, %1766
  %1825 = icmp eq i32 %1773, %5
  br i1 %1825, label %5442, label %1689, !llvm.loop !1183

1826:                                             ; preds = %1235
  %1827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

1828:                                             ; preds = %18
  %1829 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1830 = load ptr, ptr %1829, align 8, !tbaa !9
  %1831 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1832 = load ptr, ptr %1831, align 8, !tbaa !9
  store i16 0, ptr %1832, align 2, !tbaa !78
  %1833 = icmp eq i32 %13, 0
  br i1 %1833, label %1834, label %1837

1834:                                             ; preds = %1828
  %1835 = load float, ptr %1830, align 4, !tbaa !162
  %1836 = fptosi float %1835 to i16
  store i16 %1836, ptr %1832, align 2, !tbaa !78
  br label %5442

1837:                                             ; preds = %1828
  switch i32 %1, label %2432 [
    i32 1, label %1838
    i32 0, label %2140
  ]

1838:                                             ; preds = %1837
  %1839 = getelementptr inbounds i32, ptr %3, i64 %19
  %1840 = load i32, ptr %1839, align 4, !tbaa !5
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp sgt i32 %5, 0
  br i1 %1841, label %1852, label %1843

1843:                                             ; preds = %1838
  br i1 %1842, label %1844, label %5442

1844:                                             ; preds = %1843
  %1845 = icmp sgt i32 %13, 1
  %1846 = icmp sgt i32 %13, 0
  %1847 = add i32 %13, -2
  %1848 = zext i32 %1847 to i64
  %1849 = zext i32 %13 to i64
  %1850 = add nuw i32 %5, 1
  %1851 = icmp eq i32 %13, 1
  br label %1999

1852:                                             ; preds = %1838
  br i1 %1842, label %1853, label %5442

1853:                                             ; preds = %1852
  %1854 = icmp sgt i32 %13, 1
  %1855 = icmp sgt i32 %13, 0
  %1856 = add i32 %13, -2
  %1857 = zext i32 %1856 to i64
  %1858 = zext i32 %13 to i64
  %1859 = add nuw i32 %5, 1
  %1860 = icmp eq i32 %13, 1
  br label %1861

1861:                                             ; preds = %1853, %1997
  %1862 = phi i16 [ 0, %1853 ], [ %1947, %1997 ]
  %1863 = phi i32 [ 0, %1853 ], [ %1949, %1997 ]
  %1864 = phi double [ 0.000000e+00, %1853 ], [ %1948, %1997 ]
  %1865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1854, label %1866, label %1935

1866:                                             ; preds = %1861, %1925
  %1867 = phi i32 [ %1934, %1925 ], [ 0, %1861 ]
  %1868 = phi i64 [ %1876, %1925 ], [ %1858, %1861 ]
  %1869 = phi i64 [ %1933, %1925 ], [ %1857, %1861 ]
  %1870 = phi i32 [ %1931, %1925 ], [ %1865, %1861 ]
  %1871 = sub i32 %1856, %1867
  %1872 = tail call i32 @llvm.smin.i32(i32 %1871, i32 0)
  %1873 = sub i32 %1871, %1872
  %1874 = zext i32 %1873 to i64
  %1875 = add nuw nsw i64 %1874, 1
  %1876 = add nsw i64 %1868, -1
  %1877 = icmp ult i32 %1873, 31
  br i1 %1877, label %1913, label %1878

1878:                                             ; preds = %1866
  %1879 = and i64 %1875, 8589934560
  %1880 = sub i64 %1869, %1879
  br label %1881

1881:                                             ; preds = %1881, %1878
  %1882 = phi i64 [ 0, %1878 ], [ %1905, %1881 ]
  %1883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1901, %1881 ]
  %1884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1902, %1881 ]
  %1885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1903, %1881 ]
  %1886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1904, %1881 ]
  %1887 = sub i64 %1869, %1882
  %1888 = getelementptr inbounds i32, ptr %9, i64 %1887
  %1889 = getelementptr inbounds i32, ptr %1888, i64 -7
  %1890 = load <8 x i32>, ptr %1889, align 4, !tbaa !5
  %1891 = shufflevector <8 x i32> %1890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1892 = getelementptr inbounds i32, ptr %1888, i64 -15
  %1893 = load <8 x i32>, ptr %1892, align 4, !tbaa !5
  %1894 = shufflevector <8 x i32> %1893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1895 = getelementptr inbounds i32, ptr %1888, i64 -23
  %1896 = load <8 x i32>, ptr %1895, align 4, !tbaa !5
  %1897 = shufflevector <8 x i32> %1896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1898 = getelementptr inbounds i32, ptr %1888, i64 -31
  %1899 = load <8 x i32>, ptr %1898, align 4, !tbaa !5
  %1900 = shufflevector <8 x i32> %1899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1901 = mul <8 x i32> %1891, %1883
  %1902 = mul <8 x i32> %1894, %1884
  %1903 = mul <8 x i32> %1897, %1885
  %1904 = mul <8 x i32> %1900, %1886
  %1905 = add nuw i64 %1882, 32
  %1906 = icmp eq i64 %1905, %1879
  br i1 %1906, label %1907, label %1881, !llvm.loop !1184

1907:                                             ; preds = %1881
  %1908 = mul <8 x i32> %1902, %1901
  %1909 = mul <8 x i32> %1903, %1908
  %1910 = mul <8 x i32> %1904, %1909
  %1911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1910)
  %1912 = icmp eq i64 %1875, %1879
  br i1 %1912, label %1925, label %1913

1913:                                             ; preds = %1866, %1907
  %1914 = phi i64 [ %1869, %1866 ], [ %1880, %1907 ]
  %1915 = phi i32 [ 1, %1866 ], [ %1911, %1907 ]
  br label %1916

1916:                                             ; preds = %1913, %1916
  %1917 = phi i64 [ %1922, %1916 ], [ %1914, %1913 ]
  %1918 = phi i32 [ %1921, %1916 ], [ %1915, %1913 ]
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1917
  %1920 = load i32, ptr %1919, align 4, !tbaa !5
  %1921 = mul nsw i32 %1920, %1918
  %1922 = add nsw i64 %1917, -1
  %1923 = trunc i64 %1917 to i32
  %1924 = icmp sgt i32 %1923, 0
  br i1 %1924, label %1916, label %1925, !llvm.loop !1185

1925:                                             ; preds = %1916, %1907
  %1926 = phi i32 [ %1911, %1907 ], [ %1921, %1916 ]
  %1927 = and i64 %1876, 4294967295
  %1928 = getelementptr inbounds i32, ptr %6, i64 %1927
  %1929 = load i32, ptr %1928, align 4, !tbaa !5
  %1930 = mul nsw i32 %1929, %1926
  %1931 = add nsw i32 %1930, %1870
  %1932 = icmp sgt i64 %1868, 2
  %1933 = add nsw i64 %1869, -1
  %1934 = add i32 %1867, 1
  br i1 %1932, label %1866, label %1935, !llvm.loop !1186

1935:                                             ; preds = %1925, %1861
  %1936 = phi i32 [ %1865, %1861 ], [ %1931, %1925 ]
  %1937 = sext i32 %1936 to i64
  %1938 = getelementptr inbounds double, ptr %2, i64 %1937
  %1939 = load double, ptr %1938, align 8, !tbaa !18
  %1940 = getelementptr inbounds float, ptr %1830, i64 %1937
  %1941 = load float, ptr %1940, align 4, !tbaa !162
  %1942 = fptosi float %1941 to i16
  %1943 = sitofp i16 %1862 to double
  %1944 = sitofp i16 %1942 to double
  %1945 = fmul fast double %1939, %1944
  %1946 = fadd fast double %1945, %1943
  %1947 = fptosi double %1946 to i16
  %1948 = fadd fast double %1939, %1864
  %1949 = add nuw nsw i32 %1863, 1
  br i1 %1855, label %1950, label %1997

1950:                                             ; preds = %1935
  %1951 = load i32, ptr %4, align 4, !tbaa !5
  %1952 = load i32, ptr %12, align 4, !tbaa !5
  %1953 = add nsw i32 %1952, -1
  %1954 = icmp slt i32 %1951, %1953
  br i1 %1954, label %1974, label %1955

1955:                                             ; preds = %1950
  %1956 = icmp eq i32 %1951, %1953
  br i1 %1956, label %1957, label %1990

1957:                                             ; preds = %1955
  store i32 0, ptr %4, align 4, !tbaa !5
  %1958 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1958, ptr %6, align 4, !tbaa !5
  br i1 %1860, label %1997, label %1959

1959:                                             ; preds = %1957, %1984
  %1960 = phi i64 [ %1988, %1984 ], [ 1, %1957 ]
  %1961 = getelementptr inbounds i32, ptr %4, i64 %1960
  %1962 = load i32, ptr %1961, align 4, !tbaa !5
  %1963 = getelementptr inbounds i32, ptr %12, i64 %1960
  %1964 = load i32, ptr %1963, align 4, !tbaa !5
  %1965 = add nsw i32 %1964, -1
  %1966 = icmp slt i32 %1962, %1965
  br i1 %1966, label %1967, label %1982

1967:                                             ; preds = %1959
  br i1 %1954, label %1974, label %1968

1968:                                             ; preds = %1967
  %1969 = getelementptr inbounds i32, ptr %7, i64 %1960
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %6, i64 %1960
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, %1970
  store i32 %1973, ptr %1971, align 4, !tbaa !5
  br label %1992

1974:                                             ; preds = %1950, %1967
  %1975 = phi i32 [ %1962, %1967 ], [ %1951, %1950 ]
  %1976 = phi ptr [ %1961, %1967 ], [ %4, %1950 ]
  %1977 = phi i64 [ %1960, %1967 ], [ 0, %1950 ]
  %1978 = add nsw i32 %1975, 1
  store i32 %1978, ptr %1976, align 4, !tbaa !5
  %1979 = getelementptr inbounds i32, ptr %7, i64 %1977
  %1980 = load i32, ptr %1979, align 4, !tbaa !5
  %1981 = getelementptr inbounds i32, ptr %6, i64 %1977
  br label %1992

1982:                                             ; preds = %1959
  %1983 = icmp eq i32 %1962, %1965
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  store i32 0, ptr %1961, align 4, !tbaa !5
  %1985 = getelementptr inbounds i32, ptr %8, i64 %1960
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %6, i64 %1960
  store i32 %1986, ptr %1987, align 4, !tbaa !5
  %1988 = add nuw nsw i64 %1960, 1
  %1989 = icmp eq i64 %1988, %1858
  br i1 %1989, label %1997, label %1959, !llvm.loop !1187

1990:                                             ; preds = %1955, %1982
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  %1991 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

1992:                                             ; preds = %1968, %1974
  %1993 = phi ptr [ %1981, %1974 ], [ %1961, %1968 ]
  %1994 = phi i32 [ %1980, %1974 ], [ 1, %1968 ]
  %1995 = load i32, ptr %1993, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1994
  store i32 %1996, ptr %1993, align 4, !tbaa !5
  br label %1997

1997:                                             ; preds = %1984, %1992, %1957, %1935
  %1998 = icmp eq i32 %1949, %5
  br i1 %1998, label %5436, label %1861, !llvm.loop !1188

1999:                                             ; preds = %1844, %2138
  %2000 = phi i32 [ 0, %1844 ], [ %2085, %2138 ]
  %2001 = phi i32 [ 0, %1844 ], [ %2087, %2138 ]
  %2002 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1845, label %2003, label %2072

2003:                                             ; preds = %1999, %2062
  %2004 = phi i32 [ %2071, %2062 ], [ 0, %1999 ]
  %2005 = phi i64 [ %2013, %2062 ], [ %1849, %1999 ]
  %2006 = phi i64 [ %2070, %2062 ], [ %1848, %1999 ]
  %2007 = phi i32 [ %2068, %2062 ], [ %2002, %1999 ]
  %2008 = sub i32 %1847, %2004
  %2009 = tail call i32 @llvm.smin.i32(i32 %2008, i32 0)
  %2010 = sub i32 %2008, %2009
  %2011 = zext i32 %2010 to i64
  %2012 = add nuw nsw i64 %2011, 1
  %2013 = add nsw i64 %2005, -1
  %2014 = icmp ult i32 %2010, 31
  br i1 %2014, label %2050, label %2015

2015:                                             ; preds = %2003
  %2016 = and i64 %2012, 8589934560
  %2017 = sub i64 %2006, %2016
  br label %2018

2018:                                             ; preds = %2018, %2015
  %2019 = phi i64 [ 0, %2015 ], [ %2042, %2018 ]
  %2020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2038, %2018 ]
  %2021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2039, %2018 ]
  %2022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2040, %2018 ]
  %2023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2041, %2018 ]
  %2024 = sub i64 %2006, %2019
  %2025 = getelementptr inbounds i32, ptr %11, i64 %2024
  %2026 = getelementptr inbounds i32, ptr %2025, i64 -7
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = getelementptr inbounds i32, ptr %2025, i64 -15
  %2030 = load <8 x i32>, ptr %2029, align 4, !tbaa !5
  %2031 = shufflevector <8 x i32> %2030, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2032 = getelementptr inbounds i32, ptr %2025, i64 -23
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = getelementptr inbounds i32, ptr %2025, i64 -31
  %2036 = load <8 x i32>, ptr %2035, align 4, !tbaa !5
  %2037 = shufflevector <8 x i32> %2036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2038 = mul <8 x i32> %2028, %2020
  %2039 = mul <8 x i32> %2031, %2021
  %2040 = mul <8 x i32> %2034, %2022
  %2041 = mul <8 x i32> %2037, %2023
  %2042 = add nuw i64 %2019, 32
  %2043 = icmp eq i64 %2042, %2016
  br i1 %2043, label %2044, label %2018, !llvm.loop !1189

2044:                                             ; preds = %2018
  %2045 = mul <8 x i32> %2039, %2038
  %2046 = mul <8 x i32> %2040, %2045
  %2047 = mul <8 x i32> %2041, %2046
  %2048 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2047)
  %2049 = icmp eq i64 %2012, %2016
  br i1 %2049, label %2062, label %2050

2050:                                             ; preds = %2003, %2044
  %2051 = phi i64 [ %2006, %2003 ], [ %2017, %2044 ]
  %2052 = phi i32 [ 1, %2003 ], [ %2048, %2044 ]
  br label %2053

2053:                                             ; preds = %2050, %2053
  %2054 = phi i64 [ %2059, %2053 ], [ %2051, %2050 ]
  %2055 = phi i32 [ %2058, %2053 ], [ %2052, %2050 ]
  %2056 = getelementptr inbounds i32, ptr %11, i64 %2054
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = mul nsw i32 %2057, %2055
  %2059 = add nsw i64 %2054, -1
  %2060 = trunc i64 %2054 to i32
  %2061 = icmp sgt i32 %2060, 0
  br i1 %2061, label %2053, label %2062, !llvm.loop !1190

2062:                                             ; preds = %2053, %2044
  %2063 = phi i32 [ %2048, %2044 ], [ %2058, %2053 ]
  %2064 = and i64 %2013, 4294967295
  %2065 = getelementptr inbounds i32, ptr %6, i64 %2064
  %2066 = load i32, ptr %2065, align 4, !tbaa !5
  %2067 = mul nsw i32 %2066, %2063
  %2068 = add nsw i32 %2067, %2007
  %2069 = icmp sgt i64 %2005, 2
  %2070 = add nsw i64 %2006, -1
  %2071 = add i32 %2004, 1
  br i1 %2069, label %2003, label %2072, !llvm.loop !1191

2072:                                             ; preds = %2062, %1999
  %2073 = phi i32 [ %2002, %1999 ], [ %2068, %2062 ]
  %2074 = icmp slt i32 %2073, %5
  br i1 %2074, label %2077, label %2075

2075:                                             ; preds = %2072
  %2076 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

2077:                                             ; preds = %2072
  %2078 = sext i32 %2073 to i64
  %2079 = getelementptr inbounds float, ptr %1830, i64 %2078
  %2080 = load float, ptr %2079, align 4, !tbaa !162
  %2081 = fptosi float %2080 to i16
  %2082 = shl i32 %2000, 16
  %2083 = ashr exact i32 %2082, 16
  %2084 = sext i16 %2081 to i32
  %2085 = add nsw i32 %2083, %2084
  %2086 = trunc i32 %2085 to i16
  store i16 %2086, ptr %1832, align 2, !tbaa !78
  %2087 = add nuw nsw i32 %2001, 1
  br i1 %1846, label %2088, label %2138

2088:                                             ; preds = %2077
  %2089 = load i32, ptr %4, align 4, !tbaa !5
  %2090 = load i32, ptr %12, align 4, !tbaa !5
  %2091 = add nsw i32 %2090, -1
  %2092 = icmp slt i32 %2089, %2091
  br i1 %2092, label %2115, label %2093

2093:                                             ; preds = %2088
  %2094 = icmp eq i32 %2089, %2091
  br i1 %2094, label %2095, label %2131

2095:                                             ; preds = %2093
  store i32 0, ptr %4, align 4, !tbaa !5
  %2096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2096, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %2138, label %2097

2097:                                             ; preds = %2095, %2125
  %2098 = phi i64 [ %2129, %2125 ], [ 1, %2095 ]
  %2099 = getelementptr inbounds i32, ptr %4, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %12, i64 %2098
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = add nsw i32 %2102, -1
  %2104 = icmp slt i32 %2100, %2103
  br i1 %2104, label %2105, label %2123

2105:                                             ; preds = %2097
  br i1 %2092, label %2115, label %2106

2106:                                             ; preds = %2105
  %2107 = shl i64 %2098, 32
  %2108 = add i64 %2107, -4294967296
  %2109 = ashr exact i64 %2108, 32
  %2110 = getelementptr inbounds i32, ptr %7, i64 %2109
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = add nsw i32 %2113, %2111
  store i32 %2114, ptr %2112, align 4, !tbaa !5
  br label %2133

2115:                                             ; preds = %2088, %2105
  %2116 = phi i32 [ %2100, %2105 ], [ %2089, %2088 ]
  %2117 = phi ptr [ %2099, %2105 ], [ %4, %2088 ]
  %2118 = phi i64 [ %2098, %2105 ], [ 0, %2088 ]
  %2119 = add nsw i32 %2116, 1
  store i32 %2119, ptr %2117, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2118
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2118
  br label %2133

2123:                                             ; preds = %2097
  %2124 = icmp eq i32 %2100, %2103
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2123
  store i32 0, ptr %2099, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %8, i64 %2098
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %6, i64 %2098
  store i32 %2127, ptr %2128, align 4, !tbaa !5
  %2129 = add nuw nsw i64 %2098, 1
  %2130 = icmp eq i64 %2129, %1849
  br i1 %2130, label %2138, label %2097, !llvm.loop !1192

2131:                                             ; preds = %2093, %2123
  %2132 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2133:                                             ; preds = %2106, %2115
  %2134 = phi ptr [ %2122, %2115 ], [ %2099, %2106 ]
  %2135 = phi i32 [ %2121, %2115 ], [ 1, %2106 ]
  %2136 = load i32, ptr %2134, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, %2135
  store i32 %2137, ptr %2134, align 4, !tbaa !5
  br label %2138

2138:                                             ; preds = %2125, %2133, %2095, %2077
  %2139 = icmp eq i32 %2087, %5
  br i1 %2139, label %5442, label %1999, !llvm.loop !1193

2140:                                             ; preds = %1837
  %2141 = getelementptr inbounds i32, ptr %3, i64 %19
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = icmp eq i32 %2142, 0
  %2144 = icmp sgt i32 %5, 0
  br i1 %2143, label %2154, label %2145

2145:                                             ; preds = %2140
  br i1 %2144, label %2146, label %5442

2146:                                             ; preds = %2145
  %2147 = icmp sgt i32 %13, 1
  %2148 = icmp sgt i32 %13, 0
  %2149 = add i32 %13, -2
  %2150 = zext i32 %2149 to i64
  %2151 = zext i32 %13 to i64
  %2152 = add nuw i32 %5, 1
  %2153 = icmp eq i32 %13, 1
  br label %2295

2154:                                             ; preds = %2140
  br i1 %2144, label %2155, label %5442

2155:                                             ; preds = %2154
  %2156 = icmp sgt i32 %13, 1
  %2157 = icmp sgt i32 %13, 0
  %2158 = add i32 %13, -2
  %2159 = zext i32 %2158 to i64
  %2160 = zext i32 %13 to i64
  %2161 = add nuw i32 %5, 1
  %2162 = icmp eq i32 %13, 1
  br label %2163

2163:                                             ; preds = %2155, %2293
  %2164 = phi i16 [ 0, %2155 ], [ %2243, %2293 ]
  %2165 = phi i32 [ 0, %2155 ], [ %2245, %2293 ]
  %2166 = phi double [ 0.000000e+00, %2155 ], [ %2244, %2293 ]
  %2167 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2156, label %2168, label %2237

2168:                                             ; preds = %2163, %2227
  %2169 = phi i32 [ %2236, %2227 ], [ 0, %2163 ]
  %2170 = phi i64 [ %2178, %2227 ], [ %2160, %2163 ]
  %2171 = phi i64 [ %2235, %2227 ], [ %2159, %2163 ]
  %2172 = phi i32 [ %2233, %2227 ], [ %2167, %2163 ]
  %2173 = sub i32 %2158, %2169
  %2174 = tail call i32 @llvm.smin.i32(i32 %2173, i32 0)
  %2175 = sub i32 %2173, %2174
  %2176 = zext i32 %2175 to i64
  %2177 = add nuw nsw i64 %2176, 1
  %2178 = add nsw i64 %2170, -1
  %2179 = icmp ult i32 %2175, 31
  br i1 %2179, label %2215, label %2180

2180:                                             ; preds = %2168
  %2181 = and i64 %2177, 8589934560
  %2182 = sub i64 %2171, %2181
  br label %2183

2183:                                             ; preds = %2183, %2180
  %2184 = phi i64 [ 0, %2180 ], [ %2207, %2183 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2203, %2183 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2204, %2183 ]
  %2187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2205, %2183 ]
  %2188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2206, %2183 ]
  %2189 = sub i64 %2171, %2184
  %2190 = getelementptr inbounds i32, ptr %9, i64 %2189
  %2191 = getelementptr inbounds i32, ptr %2190, i64 -7
  %2192 = load <8 x i32>, ptr %2191, align 4, !tbaa !5
  %2193 = shufflevector <8 x i32> %2192, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2194 = getelementptr inbounds i32, ptr %2190, i64 -15
  %2195 = load <8 x i32>, ptr %2194, align 4, !tbaa !5
  %2196 = shufflevector <8 x i32> %2195, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2197 = getelementptr inbounds i32, ptr %2190, i64 -23
  %2198 = load <8 x i32>, ptr %2197, align 4, !tbaa !5
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2200 = getelementptr inbounds i32, ptr %2190, i64 -31
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = mul <8 x i32> %2193, %2185
  %2204 = mul <8 x i32> %2196, %2186
  %2205 = mul <8 x i32> %2199, %2187
  %2206 = mul <8 x i32> %2202, %2188
  %2207 = add nuw i64 %2184, 32
  %2208 = icmp eq i64 %2207, %2181
  br i1 %2208, label %2209, label %2183, !llvm.loop !1194

2209:                                             ; preds = %2183
  %2210 = mul <8 x i32> %2204, %2203
  %2211 = mul <8 x i32> %2205, %2210
  %2212 = mul <8 x i32> %2206, %2211
  %2213 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2212)
  %2214 = icmp eq i64 %2177, %2181
  br i1 %2214, label %2227, label %2215

2215:                                             ; preds = %2168, %2209
  %2216 = phi i64 [ %2171, %2168 ], [ %2182, %2209 ]
  %2217 = phi i32 [ 1, %2168 ], [ %2213, %2209 ]
  br label %2218

2218:                                             ; preds = %2215, %2218
  %2219 = phi i64 [ %2224, %2218 ], [ %2216, %2215 ]
  %2220 = phi i32 [ %2223, %2218 ], [ %2217, %2215 ]
  %2221 = getelementptr inbounds i32, ptr %9, i64 %2219
  %2222 = load i32, ptr %2221, align 4, !tbaa !5
  %2223 = mul nsw i32 %2222, %2220
  %2224 = add nsw i64 %2219, -1
  %2225 = trunc i64 %2219 to i32
  %2226 = icmp sgt i32 %2225, 0
  br i1 %2226, label %2218, label %2227, !llvm.loop !1195

2227:                                             ; preds = %2218, %2209
  %2228 = phi i32 [ %2213, %2209 ], [ %2223, %2218 ]
  %2229 = and i64 %2178, 4294967295
  %2230 = getelementptr inbounds i32, ptr %6, i64 %2229
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2228
  %2233 = add nsw i32 %2232, %2172
  %2234 = icmp sgt i64 %2170, 2
  %2235 = add nsw i64 %2171, -1
  %2236 = add i32 %2169, 1
  br i1 %2234, label %2168, label %2237, !llvm.loop !1196

2237:                                             ; preds = %2227, %2163
  %2238 = phi i32 [ %2167, %2163 ], [ %2233, %2227 ]
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds float, ptr %1830, i64 %2239
  %2241 = load float, ptr %2240, align 4, !tbaa !162
  %2242 = fptosi float %2241 to i16
  %2243 = add i16 %2164, %2242
  %2244 = fadd fast double %2166, 1.000000e+00
  %2245 = add nuw nsw i32 %2165, 1
  br i1 %2157, label %2246, label %2293

2246:                                             ; preds = %2237
  %2247 = load i32, ptr %4, align 4, !tbaa !5
  %2248 = load i32, ptr %12, align 4, !tbaa !5
  %2249 = add nsw i32 %2248, -1
  %2250 = icmp slt i32 %2247, %2249
  br i1 %2250, label %2270, label %2251

2251:                                             ; preds = %2246
  %2252 = icmp eq i32 %2247, %2249
  br i1 %2252, label %2253, label %2286

2253:                                             ; preds = %2251
  store i32 0, ptr %4, align 4, !tbaa !5
  %2254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2254, ptr %6, align 4, !tbaa !5
  br i1 %2162, label %2293, label %2255

2255:                                             ; preds = %2253, %2280
  %2256 = phi i64 [ %2284, %2280 ], [ 1, %2253 ]
  %2257 = getelementptr inbounds i32, ptr %4, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %12, i64 %2256
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = add nsw i32 %2260, -1
  %2262 = icmp slt i32 %2258, %2261
  br i1 %2262, label %2263, label %2278

2263:                                             ; preds = %2255
  br i1 %2250, label %2270, label %2264

2264:                                             ; preds = %2263
  %2265 = getelementptr inbounds i32, ptr %7, i64 %2256
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2268 = load i32, ptr %2267, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, %2266
  store i32 %2269, ptr %2267, align 4, !tbaa !5
  br label %2288

2270:                                             ; preds = %2246, %2263
  %2271 = phi i32 [ %2258, %2263 ], [ %2247, %2246 ]
  %2272 = phi ptr [ %2257, %2263 ], [ %4, %2246 ]
  %2273 = phi i64 [ %2256, %2263 ], [ 0, %2246 ]
  %2274 = add nsw i32 %2271, 1
  store i32 %2274, ptr %2272, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %7, i64 %2273
  %2276 = load i32, ptr %2275, align 4, !tbaa !5
  %2277 = getelementptr inbounds i32, ptr %6, i64 %2273
  br label %2288

2278:                                             ; preds = %2255
  %2279 = icmp eq i32 %2258, %2261
  br i1 %2279, label %2280, label %2286

2280:                                             ; preds = %2278
  store i32 0, ptr %2257, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %8, i64 %2256
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2256
  store i32 %2282, ptr %2283, align 4, !tbaa !5
  %2284 = add nuw nsw i64 %2256, 1
  %2285 = icmp eq i64 %2284, %2160
  br i1 %2285, label %2293, label %2255, !llvm.loop !1197

2286:                                             ; preds = %2251, %2278
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  %2287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2288:                                             ; preds = %2264, %2270
  %2289 = phi ptr [ %2277, %2270 ], [ %2257, %2264 ]
  %2290 = phi i32 [ %2276, %2270 ], [ 1, %2264 ]
  %2291 = load i32, ptr %2289, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, %2290
  store i32 %2292, ptr %2289, align 4, !tbaa !5
  br label %2293

2293:                                             ; preds = %2280, %2288, %2253, %2237
  %2294 = icmp eq i32 %2245, %5
  br i1 %2294, label %5437, label %2163, !llvm.loop !1198

2295:                                             ; preds = %2146, %2430
  %2296 = phi i16 [ 0, %2146 ], [ %2378, %2430 ]
  %2297 = phi i32 [ 0, %2146 ], [ %2379, %2430 ]
  %2298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2147, label %2299, label %2368

2299:                                             ; preds = %2295, %2358
  %2300 = phi i32 [ %2367, %2358 ], [ 0, %2295 ]
  %2301 = phi i64 [ %2309, %2358 ], [ %2151, %2295 ]
  %2302 = phi i64 [ %2366, %2358 ], [ %2150, %2295 ]
  %2303 = phi i32 [ %2364, %2358 ], [ %2298, %2295 ]
  %2304 = sub i32 %2149, %2300
  %2305 = tail call i32 @llvm.smin.i32(i32 %2304, i32 0)
  %2306 = sub i32 %2304, %2305
  %2307 = zext i32 %2306 to i64
  %2308 = add nuw nsw i64 %2307, 1
  %2309 = add nsw i64 %2301, -1
  %2310 = icmp ult i32 %2306, 31
  br i1 %2310, label %2346, label %2311

2311:                                             ; preds = %2299
  %2312 = and i64 %2308, 8589934560
  %2313 = sub i64 %2302, %2312
  br label %2314

2314:                                             ; preds = %2314, %2311
  %2315 = phi i64 [ 0, %2311 ], [ %2338, %2314 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2334, %2314 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2335, %2314 ]
  %2318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2336, %2314 ]
  %2319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2337, %2314 ]
  %2320 = sub i64 %2302, %2315
  %2321 = getelementptr inbounds i32, ptr %11, i64 %2320
  %2322 = getelementptr inbounds i32, ptr %2321, i64 -7
  %2323 = load <8 x i32>, ptr %2322, align 4, !tbaa !5
  %2324 = shufflevector <8 x i32> %2323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2325 = getelementptr inbounds i32, ptr %2321, i64 -15
  %2326 = load <8 x i32>, ptr %2325, align 4, !tbaa !5
  %2327 = shufflevector <8 x i32> %2326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2328 = getelementptr inbounds i32, ptr %2321, i64 -23
  %2329 = load <8 x i32>, ptr %2328, align 4, !tbaa !5
  %2330 = shufflevector <8 x i32> %2329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2331 = getelementptr inbounds i32, ptr %2321, i64 -31
  %2332 = load <8 x i32>, ptr %2331, align 4, !tbaa !5
  %2333 = shufflevector <8 x i32> %2332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2334 = mul <8 x i32> %2324, %2316
  %2335 = mul <8 x i32> %2327, %2317
  %2336 = mul <8 x i32> %2330, %2318
  %2337 = mul <8 x i32> %2333, %2319
  %2338 = add nuw i64 %2315, 32
  %2339 = icmp eq i64 %2338, %2312
  br i1 %2339, label %2340, label %2314, !llvm.loop !1199

2340:                                             ; preds = %2314
  %2341 = mul <8 x i32> %2335, %2334
  %2342 = mul <8 x i32> %2336, %2341
  %2343 = mul <8 x i32> %2337, %2342
  %2344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2343)
  %2345 = icmp eq i64 %2308, %2312
  br i1 %2345, label %2358, label %2346

2346:                                             ; preds = %2299, %2340
  %2347 = phi i64 [ %2302, %2299 ], [ %2313, %2340 ]
  %2348 = phi i32 [ 1, %2299 ], [ %2344, %2340 ]
  br label %2349

2349:                                             ; preds = %2346, %2349
  %2350 = phi i64 [ %2355, %2349 ], [ %2347, %2346 ]
  %2351 = phi i32 [ %2354, %2349 ], [ %2348, %2346 ]
  %2352 = getelementptr inbounds i32, ptr %11, i64 %2350
  %2353 = load i32, ptr %2352, align 4, !tbaa !5
  %2354 = mul nsw i32 %2353, %2351
  %2355 = add nsw i64 %2350, -1
  %2356 = trunc i64 %2350 to i32
  %2357 = icmp sgt i32 %2356, 0
  br i1 %2357, label %2349, label %2358, !llvm.loop !1200

2358:                                             ; preds = %2349, %2340
  %2359 = phi i32 [ %2344, %2340 ], [ %2354, %2349 ]
  %2360 = and i64 %2309, 4294967295
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !5
  %2363 = mul nsw i32 %2362, %2359
  %2364 = add nsw i32 %2363, %2303
  %2365 = icmp sgt i64 %2301, 2
  %2366 = add nsw i64 %2302, -1
  %2367 = add i32 %2300, 1
  br i1 %2365, label %2299, label %2368, !llvm.loop !1201

2368:                                             ; preds = %2358, %2295
  %2369 = phi i32 [ %2298, %2295 ], [ %2364, %2358 ]
  %2370 = icmp slt i32 %2369, %5
  br i1 %2370, label %2373, label %2371

2371:                                             ; preds = %2368
  %2372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

2373:                                             ; preds = %2368
  %2374 = sext i32 %2369 to i64
  %2375 = getelementptr inbounds float, ptr %1830, i64 %2374
  %2376 = load float, ptr %2375, align 4, !tbaa !162
  %2377 = fptosi float %2376 to i16
  %2378 = add i16 %2296, %2377
  store i16 %2378, ptr %1832, align 2, !tbaa !78
  %2379 = add nuw nsw i32 %2297, 1
  br i1 %2148, label %2380, label %2430

2380:                                             ; preds = %2373
  %2381 = load i32, ptr %4, align 4, !tbaa !5
  %2382 = load i32, ptr %12, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, -1
  %2384 = icmp slt i32 %2381, %2383
  br i1 %2384, label %2407, label %2385

2385:                                             ; preds = %2380
  %2386 = icmp eq i32 %2381, %2383
  br i1 %2386, label %2387, label %2423

2387:                                             ; preds = %2385
  store i32 0, ptr %4, align 4, !tbaa !5
  %2388 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2388, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2430, label %2389

2389:                                             ; preds = %2387, %2417
  %2390 = phi i64 [ %2421, %2417 ], [ 1, %2387 ]
  %2391 = getelementptr inbounds i32, ptr %4, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = getelementptr inbounds i32, ptr %12, i64 %2390
  %2394 = load i32, ptr %2393, align 4, !tbaa !5
  %2395 = add nsw i32 %2394, -1
  %2396 = icmp slt i32 %2392, %2395
  br i1 %2396, label %2397, label %2415

2397:                                             ; preds = %2389
  br i1 %2384, label %2407, label %2398

2398:                                             ; preds = %2397
  %2399 = shl i64 %2390, 32
  %2400 = add i64 %2399, -4294967296
  %2401 = ashr exact i64 %2400, 32
  %2402 = getelementptr inbounds i32, ptr %7, i64 %2401
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2390
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, %2403
  store i32 %2406, ptr %2404, align 4, !tbaa !5
  br label %2425

2407:                                             ; preds = %2380, %2397
  %2408 = phi i32 [ %2392, %2397 ], [ %2381, %2380 ]
  %2409 = phi ptr [ %2391, %2397 ], [ %4, %2380 ]
  %2410 = phi i64 [ %2390, %2397 ], [ 0, %2380 ]
  %2411 = add nsw i32 %2408, 1
  store i32 %2411, ptr %2409, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %7, i64 %2410
  %2413 = load i32, ptr %2412, align 4, !tbaa !5
  %2414 = getelementptr inbounds i32, ptr %6, i64 %2410
  br label %2425

2415:                                             ; preds = %2389
  %2416 = icmp eq i32 %2392, %2395
  br i1 %2416, label %2417, label %2423

2417:                                             ; preds = %2415
  store i32 0, ptr %2391, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %8, i64 %2390
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2390
  store i32 %2419, ptr %2420, align 4, !tbaa !5
  %2421 = add nuw nsw i64 %2390, 1
  %2422 = icmp eq i64 %2421, %2151
  br i1 %2422, label %2430, label %2389, !llvm.loop !1202

2423:                                             ; preds = %2385, %2415
  %2424 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2425:                                             ; preds = %2398, %2407
  %2426 = phi ptr [ %2414, %2407 ], [ %2391, %2398 ]
  %2427 = phi i32 [ %2413, %2407 ], [ 1, %2398 ]
  %2428 = load i32, ptr %2426, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2427
  store i32 %2429, ptr %2426, align 4, !tbaa !5
  br label %2430

2430:                                             ; preds = %2417, %2425, %2387, %2373
  %2431 = icmp eq i32 %2379, %5
  br i1 %2431, label %5442, label %2295, !llvm.loop !1203

2432:                                             ; preds = %1837
  %2433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

2434:                                             ; preds = %18
  %2435 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  %2437 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2438 = load ptr, ptr %2437, align 8, !tbaa !9
  store i32 0, ptr %2438, align 4, !tbaa !5
  %2439 = icmp eq i32 %13, 0
  br i1 %2439, label %2440, label %2443

2440:                                             ; preds = %2434
  %2441 = load float, ptr %2436, align 4, !tbaa !162
  %2442 = fptosi float %2441 to i32
  store i32 %2442, ptr %2438, align 4, !tbaa !5
  br label %5442

2443:                                             ; preds = %2434
  switch i32 %1, label %3034 [
    i32 1, label %2444
    i32 0, label %2742
  ]

2444:                                             ; preds = %2443
  %2445 = getelementptr inbounds i32, ptr %3, i64 %19
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp sgt i32 %5, 0
  br i1 %2447, label %2458, label %2449

2449:                                             ; preds = %2444
  br i1 %2448, label %2450, label %5442

2450:                                             ; preds = %2449
  %2451 = icmp sgt i32 %13, 1
  %2452 = icmp sgt i32 %13, 0
  %2453 = add i32 %13, -2
  %2454 = zext i32 %2453 to i64
  %2455 = zext i32 %13 to i64
  %2456 = add nuw i32 %5, 1
  %2457 = icmp eq i32 %13, 1
  br label %2605

2458:                                             ; preds = %2444
  br i1 %2448, label %2459, label %5442

2459:                                             ; preds = %2458
  %2460 = icmp sgt i32 %13, 1
  %2461 = icmp sgt i32 %13, 0
  %2462 = add i32 %13, -2
  %2463 = zext i32 %2462 to i64
  %2464 = zext i32 %13 to i64
  %2465 = add nuw i32 %5, 1
  %2466 = icmp eq i32 %13, 1
  br label %2467

2467:                                             ; preds = %2459, %2603
  %2468 = phi i32 [ 0, %2459 ], [ %2555, %2603 ]
  %2469 = phi double [ 0.000000e+00, %2459 ], [ %2554, %2603 ]
  %2470 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2460, label %2471, label %2540

2471:                                             ; preds = %2467, %2530
  %2472 = phi i32 [ %2539, %2530 ], [ 0, %2467 ]
  %2473 = phi i64 [ %2481, %2530 ], [ %2464, %2467 ]
  %2474 = phi i64 [ %2538, %2530 ], [ %2463, %2467 ]
  %2475 = phi i32 [ %2536, %2530 ], [ %2470, %2467 ]
  %2476 = sub i32 %2462, %2472
  %2477 = tail call i32 @llvm.smin.i32(i32 %2476, i32 0)
  %2478 = sub i32 %2476, %2477
  %2479 = zext i32 %2478 to i64
  %2480 = add nuw nsw i64 %2479, 1
  %2481 = add nsw i64 %2473, -1
  %2482 = icmp ult i32 %2478, 31
  br i1 %2482, label %2518, label %2483

2483:                                             ; preds = %2471
  %2484 = and i64 %2480, 8589934560
  %2485 = sub i64 %2474, %2484
  br label %2486

2486:                                             ; preds = %2486, %2483
  %2487 = phi i64 [ 0, %2483 ], [ %2510, %2486 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2506, %2486 ]
  %2489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2507, %2486 ]
  %2490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2508, %2486 ]
  %2491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2509, %2486 ]
  %2492 = sub i64 %2474, %2487
  %2493 = getelementptr inbounds i32, ptr %9, i64 %2492
  %2494 = getelementptr inbounds i32, ptr %2493, i64 -7
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2493, i64 -15
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2493, i64 -23
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = getelementptr inbounds i32, ptr %2493, i64 -31
  %2504 = load <8 x i32>, ptr %2503, align 4, !tbaa !5
  %2505 = shufflevector <8 x i32> %2504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2506 = mul <8 x i32> %2496, %2488
  %2507 = mul <8 x i32> %2499, %2489
  %2508 = mul <8 x i32> %2502, %2490
  %2509 = mul <8 x i32> %2505, %2491
  %2510 = add nuw i64 %2487, 32
  %2511 = icmp eq i64 %2510, %2484
  br i1 %2511, label %2512, label %2486, !llvm.loop !1204

2512:                                             ; preds = %2486
  %2513 = mul <8 x i32> %2507, %2506
  %2514 = mul <8 x i32> %2508, %2513
  %2515 = mul <8 x i32> %2509, %2514
  %2516 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2515)
  %2517 = icmp eq i64 %2480, %2484
  br i1 %2517, label %2530, label %2518

2518:                                             ; preds = %2471, %2512
  %2519 = phi i64 [ %2474, %2471 ], [ %2485, %2512 ]
  %2520 = phi i32 [ 1, %2471 ], [ %2516, %2512 ]
  br label %2521

2521:                                             ; preds = %2518, %2521
  %2522 = phi i64 [ %2527, %2521 ], [ %2519, %2518 ]
  %2523 = phi i32 [ %2526, %2521 ], [ %2520, %2518 ]
  %2524 = getelementptr inbounds i32, ptr %9, i64 %2522
  %2525 = load i32, ptr %2524, align 4, !tbaa !5
  %2526 = mul nsw i32 %2525, %2523
  %2527 = add nsw i64 %2522, -1
  %2528 = trunc i64 %2522 to i32
  %2529 = icmp sgt i32 %2528, 0
  br i1 %2529, label %2521, label %2530, !llvm.loop !1205

2530:                                             ; preds = %2521, %2512
  %2531 = phi i32 [ %2516, %2512 ], [ %2526, %2521 ]
  %2532 = and i64 %2481, 4294967295
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2532
  %2534 = load i32, ptr %2533, align 4, !tbaa !5
  %2535 = mul nsw i32 %2534, %2531
  %2536 = add nsw i32 %2535, %2475
  %2537 = icmp sgt i64 %2473, 2
  %2538 = add nsw i64 %2474, -1
  %2539 = add i32 %2472, 1
  br i1 %2537, label %2471, label %2540, !llvm.loop !1206

2540:                                             ; preds = %2530, %2467
  %2541 = phi i32 [ %2470, %2467 ], [ %2536, %2530 ]
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds double, ptr %2, i64 %2542
  %2544 = load double, ptr %2543, align 8, !tbaa !18
  %2545 = getelementptr inbounds float, ptr %2436, i64 %2542
  %2546 = load float, ptr %2545, align 4, !tbaa !162
  %2547 = fptosi float %2546 to i32
  %2548 = load i32, ptr %2438, align 4, !tbaa !5
  %2549 = sitofp i32 %2548 to double
  %2550 = sitofp i32 %2547 to double
  %2551 = fmul fast double %2544, %2550
  %2552 = fadd fast double %2551, %2549
  %2553 = fptosi double %2552 to i32
  store i32 %2553, ptr %2438, align 4, !tbaa !5
  %2554 = fadd fast double %2544, %2469
  %2555 = add nuw nsw i32 %2468, 1
  br i1 %2461, label %2556, label %2603

2556:                                             ; preds = %2540
  %2557 = load i32, ptr %4, align 4, !tbaa !5
  %2558 = load i32, ptr %12, align 4, !tbaa !5
  %2559 = add nsw i32 %2558, -1
  %2560 = icmp slt i32 %2557, %2559
  br i1 %2560, label %2580, label %2561

2561:                                             ; preds = %2556
  %2562 = icmp eq i32 %2557, %2559
  br i1 %2562, label %2563, label %2596

2563:                                             ; preds = %2561
  store i32 0, ptr %4, align 4, !tbaa !5
  %2564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2564, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2603, label %2565

2565:                                             ; preds = %2563, %2590
  %2566 = phi i64 [ %2594, %2590 ], [ 1, %2563 ]
  %2567 = getelementptr inbounds i32, ptr %4, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %12, i64 %2566
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = add nsw i32 %2570, -1
  %2572 = icmp slt i32 %2568, %2571
  br i1 %2572, label %2573, label %2588

2573:                                             ; preds = %2565
  br i1 %2560, label %2580, label %2574

2574:                                             ; preds = %2573
  %2575 = getelementptr inbounds i32, ptr %7, i64 %2566
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = add nsw i32 %2578, %2576
  store i32 %2579, ptr %2577, align 4, !tbaa !5
  br label %2598

2580:                                             ; preds = %2556, %2573
  %2581 = phi i32 [ %2568, %2573 ], [ %2557, %2556 ]
  %2582 = phi ptr [ %2567, %2573 ], [ %4, %2556 ]
  %2583 = phi i64 [ %2566, %2573 ], [ 0, %2556 ]
  %2584 = add nsw i32 %2581, 1
  store i32 %2584, ptr %2582, align 4, !tbaa !5
  %2585 = getelementptr inbounds i32, ptr %7, i64 %2583
  %2586 = load i32, ptr %2585, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %6, i64 %2583
  br label %2598

2588:                                             ; preds = %2565
  %2589 = icmp eq i32 %2568, %2571
  br i1 %2589, label %2590, label %2596

2590:                                             ; preds = %2588
  store i32 0, ptr %2567, align 4, !tbaa !5
  %2591 = getelementptr inbounds i32, ptr %8, i64 %2566
  %2592 = load i32, ptr %2591, align 4, !tbaa !5
  %2593 = getelementptr inbounds i32, ptr %6, i64 %2566
  store i32 %2592, ptr %2593, align 4, !tbaa !5
  %2594 = add nuw nsw i64 %2566, 1
  %2595 = icmp eq i64 %2594, %2464
  br i1 %2595, label %2603, label %2565, !llvm.loop !1207

2596:                                             ; preds = %2561, %2588
  %2597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2598:                                             ; preds = %2574, %2580
  %2599 = phi ptr [ %2587, %2580 ], [ %2567, %2574 ]
  %2600 = phi i32 [ %2586, %2580 ], [ 1, %2574 ]
  %2601 = load i32, ptr %2599, align 4, !tbaa !5
  %2602 = add nsw i32 %2601, %2600
  store i32 %2602, ptr %2599, align 4, !tbaa !5
  br label %2603

2603:                                             ; preds = %2590, %2598, %2563, %2540
  %2604 = icmp eq i32 %2555, %5
  br i1 %2604, label %5442, label %2467, !llvm.loop !1208

2605:                                             ; preds = %2450, %2740
  %2606 = phi i32 [ 0, %2450 ], [ %2689, %2740 ]
  %2607 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2451, label %2608, label %2677

2608:                                             ; preds = %2605, %2667
  %2609 = phi i32 [ %2676, %2667 ], [ 0, %2605 ]
  %2610 = phi i64 [ %2618, %2667 ], [ %2455, %2605 ]
  %2611 = phi i64 [ %2675, %2667 ], [ %2454, %2605 ]
  %2612 = phi i32 [ %2673, %2667 ], [ %2607, %2605 ]
  %2613 = sub i32 %2453, %2609
  %2614 = tail call i32 @llvm.smin.i32(i32 %2613, i32 0)
  %2615 = sub i32 %2613, %2614
  %2616 = zext i32 %2615 to i64
  %2617 = add nuw nsw i64 %2616, 1
  %2618 = add nsw i64 %2610, -1
  %2619 = icmp ult i32 %2615, 31
  br i1 %2619, label %2655, label %2620

2620:                                             ; preds = %2608
  %2621 = and i64 %2617, 8589934560
  %2622 = sub i64 %2611, %2621
  br label %2623

2623:                                             ; preds = %2623, %2620
  %2624 = phi i64 [ 0, %2620 ], [ %2647, %2623 ]
  %2625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2643, %2623 ]
  %2626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2644, %2623 ]
  %2627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2645, %2623 ]
  %2628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2646, %2623 ]
  %2629 = sub i64 %2611, %2624
  %2630 = getelementptr inbounds i32, ptr %11, i64 %2629
  %2631 = getelementptr inbounds i32, ptr %2630, i64 -7
  %2632 = load <8 x i32>, ptr %2631, align 4, !tbaa !5
  %2633 = shufflevector <8 x i32> %2632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2634 = getelementptr inbounds i32, ptr %2630, i64 -15
  %2635 = load <8 x i32>, ptr %2634, align 4, !tbaa !5
  %2636 = shufflevector <8 x i32> %2635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2637 = getelementptr inbounds i32, ptr %2630, i64 -23
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !5
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2630, i64 -31
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = mul <8 x i32> %2633, %2625
  %2644 = mul <8 x i32> %2636, %2626
  %2645 = mul <8 x i32> %2639, %2627
  %2646 = mul <8 x i32> %2642, %2628
  %2647 = add nuw i64 %2624, 32
  %2648 = icmp eq i64 %2647, %2621
  br i1 %2648, label %2649, label %2623, !llvm.loop !1209

2649:                                             ; preds = %2623
  %2650 = mul <8 x i32> %2644, %2643
  %2651 = mul <8 x i32> %2645, %2650
  %2652 = mul <8 x i32> %2646, %2651
  %2653 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2652)
  %2654 = icmp eq i64 %2617, %2621
  br i1 %2654, label %2667, label %2655

2655:                                             ; preds = %2608, %2649
  %2656 = phi i64 [ %2611, %2608 ], [ %2622, %2649 ]
  %2657 = phi i32 [ 1, %2608 ], [ %2653, %2649 ]
  br label %2658

2658:                                             ; preds = %2655, %2658
  %2659 = phi i64 [ %2664, %2658 ], [ %2656, %2655 ]
  %2660 = phi i32 [ %2663, %2658 ], [ %2657, %2655 ]
  %2661 = getelementptr inbounds i32, ptr %11, i64 %2659
  %2662 = load i32, ptr %2661, align 4, !tbaa !5
  %2663 = mul nsw i32 %2662, %2660
  %2664 = add nsw i64 %2659, -1
  %2665 = trunc i64 %2659 to i32
  %2666 = icmp sgt i32 %2665, 0
  br i1 %2666, label %2658, label %2667, !llvm.loop !1210

2667:                                             ; preds = %2658, %2649
  %2668 = phi i32 [ %2653, %2649 ], [ %2663, %2658 ]
  %2669 = and i64 %2618, 4294967295
  %2670 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2668
  %2673 = add nsw i32 %2672, %2612
  %2674 = icmp sgt i64 %2610, 2
  %2675 = add nsw i64 %2611, -1
  %2676 = add i32 %2609, 1
  br i1 %2674, label %2608, label %2677, !llvm.loop !1211

2677:                                             ; preds = %2667, %2605
  %2678 = phi i32 [ %2607, %2605 ], [ %2673, %2667 ]
  %2679 = icmp slt i32 %2678, %5
  br i1 %2679, label %2682, label %2680

2680:                                             ; preds = %2677
  %2681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

2682:                                             ; preds = %2677
  %2683 = sext i32 %2678 to i64
  %2684 = getelementptr inbounds float, ptr %2436, i64 %2683
  %2685 = load float, ptr %2684, align 4, !tbaa !162
  %2686 = fptosi float %2685 to i32
  %2687 = load i32, ptr %2438, align 4, !tbaa !5
  %2688 = add i32 %2687, %2686
  store i32 %2688, ptr %2438, align 4, !tbaa !5
  %2689 = add nuw nsw i32 %2606, 1
  br i1 %2452, label %2690, label %2740

2690:                                             ; preds = %2682
  %2691 = load i32, ptr %4, align 4, !tbaa !5
  %2692 = load i32, ptr %12, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, -1
  %2694 = icmp slt i32 %2691, %2693
  br i1 %2694, label %2717, label %2695

2695:                                             ; preds = %2690
  %2696 = icmp eq i32 %2691, %2693
  br i1 %2696, label %2697, label %2733

2697:                                             ; preds = %2695
  store i32 0, ptr %4, align 4, !tbaa !5
  %2698 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2698, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2740, label %2699

2699:                                             ; preds = %2697, %2727
  %2700 = phi i64 [ %2731, %2727 ], [ 1, %2697 ]
  %2701 = getelementptr inbounds i32, ptr %4, i64 %2700
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = getelementptr inbounds i32, ptr %12, i64 %2700
  %2704 = load i32, ptr %2703, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, -1
  %2706 = icmp slt i32 %2702, %2705
  br i1 %2706, label %2707, label %2725

2707:                                             ; preds = %2699
  br i1 %2694, label %2717, label %2708

2708:                                             ; preds = %2707
  %2709 = shl i64 %2700, 32
  %2710 = add i64 %2709, -4294967296
  %2711 = ashr exact i64 %2710, 32
  %2712 = getelementptr inbounds i32, ptr %7, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2700
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2713
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  br label %2735

2717:                                             ; preds = %2690, %2707
  %2718 = phi i32 [ %2702, %2707 ], [ %2691, %2690 ]
  %2719 = phi ptr [ %2701, %2707 ], [ %4, %2690 ]
  %2720 = phi i64 [ %2700, %2707 ], [ 0, %2690 ]
  %2721 = add nsw i32 %2718, 1
  store i32 %2721, ptr %2719, align 4, !tbaa !5
  %2722 = getelementptr inbounds i32, ptr %7, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !5
  %2724 = getelementptr inbounds i32, ptr %6, i64 %2720
  br label %2735

2725:                                             ; preds = %2699
  %2726 = icmp eq i32 %2702, %2705
  br i1 %2726, label %2727, label %2733

2727:                                             ; preds = %2725
  store i32 0, ptr %2701, align 4, !tbaa !5
  %2728 = getelementptr inbounds i32, ptr %8, i64 %2700
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = getelementptr inbounds i32, ptr %6, i64 %2700
  store i32 %2729, ptr %2730, align 4, !tbaa !5
  %2731 = add nuw nsw i64 %2700, 1
  %2732 = icmp eq i64 %2731, %2455
  br i1 %2732, label %2740, label %2699, !llvm.loop !1212

2733:                                             ; preds = %2695, %2725
  %2734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2735:                                             ; preds = %2708, %2717
  %2736 = phi ptr [ %2724, %2717 ], [ %2701, %2708 ]
  %2737 = phi i32 [ %2723, %2717 ], [ 1, %2708 ]
  %2738 = load i32, ptr %2736, align 4, !tbaa !5
  %2739 = add nsw i32 %2738, %2737
  store i32 %2739, ptr %2736, align 4, !tbaa !5
  br label %2740

2740:                                             ; preds = %2727, %2735, %2697, %2682
  %2741 = icmp eq i32 %2689, %5
  br i1 %2741, label %5442, label %2605, !llvm.loop !1213

2742:                                             ; preds = %2443
  %2743 = getelementptr inbounds i32, ptr %3, i64 %19
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp sgt i32 %5, 0
  br i1 %2745, label %2756, label %2747

2747:                                             ; preds = %2742
  br i1 %2746, label %2748, label %5442

2748:                                             ; preds = %2747
  %2749 = icmp sgt i32 %13, 1
  %2750 = icmp sgt i32 %13, 0
  %2751 = add i32 %13, -2
  %2752 = zext i32 %2751 to i64
  %2753 = zext i32 %13 to i64
  %2754 = add nuw i32 %5, 1
  %2755 = icmp eq i32 %13, 1
  br label %2897

2756:                                             ; preds = %2742
  br i1 %2746, label %2757, label %5442

2757:                                             ; preds = %2756
  %2758 = icmp sgt i32 %13, 1
  %2759 = icmp sgt i32 %13, 0
  %2760 = add i32 %13, -2
  %2761 = zext i32 %2760 to i64
  %2762 = zext i32 %13 to i64
  %2763 = add nuw i32 %5, 1
  %2764 = icmp eq i32 %13, 1
  br label %2765

2765:                                             ; preds = %2757, %2895
  %2766 = phi i32 [ 0, %2757 ], [ %2847, %2895 ]
  %2767 = phi double [ 0.000000e+00, %2757 ], [ %2846, %2895 ]
  %2768 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2758, label %2769, label %2838

2769:                                             ; preds = %2765, %2828
  %2770 = phi i32 [ %2837, %2828 ], [ 0, %2765 ]
  %2771 = phi i64 [ %2779, %2828 ], [ %2762, %2765 ]
  %2772 = phi i64 [ %2836, %2828 ], [ %2761, %2765 ]
  %2773 = phi i32 [ %2834, %2828 ], [ %2768, %2765 ]
  %2774 = sub i32 %2760, %2770
  %2775 = tail call i32 @llvm.smin.i32(i32 %2774, i32 0)
  %2776 = sub i32 %2774, %2775
  %2777 = zext i32 %2776 to i64
  %2778 = add nuw nsw i64 %2777, 1
  %2779 = add nsw i64 %2771, -1
  %2780 = icmp ult i32 %2776, 31
  br i1 %2780, label %2816, label %2781

2781:                                             ; preds = %2769
  %2782 = and i64 %2778, 8589934560
  %2783 = sub i64 %2772, %2782
  br label %2784

2784:                                             ; preds = %2784, %2781
  %2785 = phi i64 [ 0, %2781 ], [ %2808, %2784 ]
  %2786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2804, %2784 ]
  %2787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2805, %2784 ]
  %2788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2806, %2784 ]
  %2789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2807, %2784 ]
  %2790 = sub i64 %2772, %2785
  %2791 = getelementptr inbounds i32, ptr %9, i64 %2790
  %2792 = getelementptr inbounds i32, ptr %2791, i64 -7
  %2793 = load <8 x i32>, ptr %2792, align 4, !tbaa !5
  %2794 = shufflevector <8 x i32> %2793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2795 = getelementptr inbounds i32, ptr %2791, i64 -15
  %2796 = load <8 x i32>, ptr %2795, align 4, !tbaa !5
  %2797 = shufflevector <8 x i32> %2796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2798 = getelementptr inbounds i32, ptr %2791, i64 -23
  %2799 = load <8 x i32>, ptr %2798, align 4, !tbaa !5
  %2800 = shufflevector <8 x i32> %2799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2801 = getelementptr inbounds i32, ptr %2791, i64 -31
  %2802 = load <8 x i32>, ptr %2801, align 4, !tbaa !5
  %2803 = shufflevector <8 x i32> %2802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2804 = mul <8 x i32> %2794, %2786
  %2805 = mul <8 x i32> %2797, %2787
  %2806 = mul <8 x i32> %2800, %2788
  %2807 = mul <8 x i32> %2803, %2789
  %2808 = add nuw i64 %2785, 32
  %2809 = icmp eq i64 %2808, %2782
  br i1 %2809, label %2810, label %2784, !llvm.loop !1214

2810:                                             ; preds = %2784
  %2811 = mul <8 x i32> %2805, %2804
  %2812 = mul <8 x i32> %2806, %2811
  %2813 = mul <8 x i32> %2807, %2812
  %2814 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2813)
  %2815 = icmp eq i64 %2778, %2782
  br i1 %2815, label %2828, label %2816

2816:                                             ; preds = %2769, %2810
  %2817 = phi i64 [ %2772, %2769 ], [ %2783, %2810 ]
  %2818 = phi i32 [ 1, %2769 ], [ %2814, %2810 ]
  br label %2819

2819:                                             ; preds = %2816, %2819
  %2820 = phi i64 [ %2825, %2819 ], [ %2817, %2816 ]
  %2821 = phi i32 [ %2824, %2819 ], [ %2818, %2816 ]
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2823 = load i32, ptr %2822, align 4, !tbaa !5
  %2824 = mul nsw i32 %2823, %2821
  %2825 = add nsw i64 %2820, -1
  %2826 = trunc i64 %2820 to i32
  %2827 = icmp sgt i32 %2826, 0
  br i1 %2827, label %2819, label %2828, !llvm.loop !1215

2828:                                             ; preds = %2819, %2810
  %2829 = phi i32 [ %2814, %2810 ], [ %2824, %2819 ]
  %2830 = and i64 %2779, 4294967295
  %2831 = getelementptr inbounds i32, ptr %6, i64 %2830
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = mul nsw i32 %2832, %2829
  %2834 = add nsw i32 %2833, %2773
  %2835 = icmp sgt i64 %2771, 2
  %2836 = add nsw i64 %2772, -1
  %2837 = add i32 %2770, 1
  br i1 %2835, label %2769, label %2838, !llvm.loop !1216

2838:                                             ; preds = %2828, %2765
  %2839 = phi i32 [ %2768, %2765 ], [ %2834, %2828 ]
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds float, ptr %2436, i64 %2840
  %2842 = load float, ptr %2841, align 4, !tbaa !162
  %2843 = fptosi float %2842 to i32
  %2844 = load i32, ptr %2438, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2843
  store i32 %2845, ptr %2438, align 4, !tbaa !5
  %2846 = fadd fast double %2767, 1.000000e+00
  %2847 = add nuw nsw i32 %2766, 1
  br i1 %2759, label %2848, label %2895

2848:                                             ; preds = %2838
  %2849 = load i32, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %12, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, -1
  %2852 = icmp slt i32 %2849, %2851
  br i1 %2852, label %2872, label %2853

2853:                                             ; preds = %2848
  %2854 = icmp eq i32 %2849, %2851
  br i1 %2854, label %2855, label %2888

2855:                                             ; preds = %2853
  store i32 0, ptr %4, align 4, !tbaa !5
  %2856 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2856, ptr %6, align 4, !tbaa !5
  br i1 %2764, label %2895, label %2857

2857:                                             ; preds = %2855, %2882
  %2858 = phi i64 [ %2886, %2882 ], [ 1, %2855 ]
  %2859 = getelementptr inbounds i32, ptr %4, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = getelementptr inbounds i32, ptr %12, i64 %2858
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = add nsw i32 %2862, -1
  %2864 = icmp slt i32 %2860, %2863
  br i1 %2864, label %2865, label %2880

2865:                                             ; preds = %2857
  br i1 %2852, label %2872, label %2866

2866:                                             ; preds = %2865
  %2867 = getelementptr inbounds i32, ptr %7, i64 %2858
  %2868 = load i32, ptr %2867, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = add nsw i32 %2870, %2868
  store i32 %2871, ptr %2869, align 4, !tbaa !5
  br label %2890

2872:                                             ; preds = %2848, %2865
  %2873 = phi i32 [ %2860, %2865 ], [ %2849, %2848 ]
  %2874 = phi ptr [ %2859, %2865 ], [ %4, %2848 ]
  %2875 = phi i64 [ %2858, %2865 ], [ 0, %2848 ]
  %2876 = add nsw i32 %2873, 1
  store i32 %2876, ptr %2874, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %7, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2875
  br label %2890

2880:                                             ; preds = %2857
  %2881 = icmp eq i32 %2860, %2863
  br i1 %2881, label %2882, label %2888

2882:                                             ; preds = %2880
  store i32 0, ptr %2859, align 4, !tbaa !5
  %2883 = getelementptr inbounds i32, ptr %8, i64 %2858
  %2884 = load i32, ptr %2883, align 4, !tbaa !5
  %2885 = getelementptr inbounds i32, ptr %6, i64 %2858
  store i32 %2884, ptr %2885, align 4, !tbaa !5
  %2886 = add nuw nsw i64 %2858, 1
  %2887 = icmp eq i64 %2886, %2762
  br i1 %2887, label %2895, label %2857, !llvm.loop !1217

2888:                                             ; preds = %2853, %2880
  %2889 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

2890:                                             ; preds = %2866, %2872
  %2891 = phi ptr [ %2879, %2872 ], [ %2859, %2866 ]
  %2892 = phi i32 [ %2878, %2872 ], [ 1, %2866 ]
  %2893 = load i32, ptr %2891, align 4, !tbaa !5
  %2894 = add nsw i32 %2893, %2892
  store i32 %2894, ptr %2891, align 4, !tbaa !5
  br label %2895

2895:                                             ; preds = %2882, %2890, %2855, %2838
  %2896 = icmp eq i32 %2847, %5
  br i1 %2896, label %5442, label %2765, !llvm.loop !1218

2897:                                             ; preds = %2748, %3032
  %2898 = phi i32 [ 0, %2748 ], [ %2981, %3032 ]
  %2899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2749, label %2900, label %2969

2900:                                             ; preds = %2897, %2959
  %2901 = phi i32 [ %2968, %2959 ], [ 0, %2897 ]
  %2902 = phi i64 [ %2910, %2959 ], [ %2753, %2897 ]
  %2903 = phi i64 [ %2967, %2959 ], [ %2752, %2897 ]
  %2904 = phi i32 [ %2965, %2959 ], [ %2899, %2897 ]
  %2905 = sub i32 %2751, %2901
  %2906 = tail call i32 @llvm.smin.i32(i32 %2905, i32 0)
  %2907 = sub i32 %2905, %2906
  %2908 = zext i32 %2907 to i64
  %2909 = add nuw nsw i64 %2908, 1
  %2910 = add nsw i64 %2902, -1
  %2911 = icmp ult i32 %2907, 31
  br i1 %2911, label %2947, label %2912

2912:                                             ; preds = %2900
  %2913 = and i64 %2909, 8589934560
  %2914 = sub i64 %2903, %2913
  br label %2915

2915:                                             ; preds = %2915, %2912
  %2916 = phi i64 [ 0, %2912 ], [ %2939, %2915 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2935, %2915 ]
  %2918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2936, %2915 ]
  %2919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2937, %2915 ]
  %2920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2938, %2915 ]
  %2921 = sub i64 %2903, %2916
  %2922 = getelementptr inbounds i32, ptr %11, i64 %2921
  %2923 = getelementptr inbounds i32, ptr %2922, i64 -7
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2922, i64 -15
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2922, i64 -23
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !5
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = getelementptr inbounds i32, ptr %2922, i64 -31
  %2933 = load <8 x i32>, ptr %2932, align 4, !tbaa !5
  %2934 = shufflevector <8 x i32> %2933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2935 = mul <8 x i32> %2925, %2917
  %2936 = mul <8 x i32> %2928, %2918
  %2937 = mul <8 x i32> %2931, %2919
  %2938 = mul <8 x i32> %2934, %2920
  %2939 = add nuw i64 %2916, 32
  %2940 = icmp eq i64 %2939, %2913
  br i1 %2940, label %2941, label %2915, !llvm.loop !1219

2941:                                             ; preds = %2915
  %2942 = mul <8 x i32> %2936, %2935
  %2943 = mul <8 x i32> %2937, %2942
  %2944 = mul <8 x i32> %2938, %2943
  %2945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2944)
  %2946 = icmp eq i64 %2909, %2913
  br i1 %2946, label %2959, label %2947

2947:                                             ; preds = %2900, %2941
  %2948 = phi i64 [ %2903, %2900 ], [ %2914, %2941 ]
  %2949 = phi i32 [ 1, %2900 ], [ %2945, %2941 ]
  br label %2950

2950:                                             ; preds = %2947, %2950
  %2951 = phi i64 [ %2956, %2950 ], [ %2948, %2947 ]
  %2952 = phi i32 [ %2955, %2950 ], [ %2949, %2947 ]
  %2953 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2954 = load i32, ptr %2953, align 4, !tbaa !5
  %2955 = mul nsw i32 %2954, %2952
  %2956 = add nsw i64 %2951, -1
  %2957 = trunc i64 %2951 to i32
  %2958 = icmp sgt i32 %2957, 0
  br i1 %2958, label %2950, label %2959, !llvm.loop !1220

2959:                                             ; preds = %2950, %2941
  %2960 = phi i32 [ %2945, %2941 ], [ %2955, %2950 ]
  %2961 = and i64 %2910, 4294967295
  %2962 = getelementptr inbounds i32, ptr %6, i64 %2961
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = mul nsw i32 %2963, %2960
  %2965 = add nsw i32 %2964, %2904
  %2966 = icmp sgt i64 %2902, 2
  %2967 = add nsw i64 %2903, -1
  %2968 = add i32 %2901, 1
  br i1 %2966, label %2900, label %2969, !llvm.loop !1221

2969:                                             ; preds = %2959, %2897
  %2970 = phi i32 [ %2899, %2897 ], [ %2965, %2959 ]
  %2971 = icmp slt i32 %2970, %5
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2969
  %2973 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

2974:                                             ; preds = %2969
  %2975 = sext i32 %2970 to i64
  %2976 = getelementptr inbounds float, ptr %2436, i64 %2975
  %2977 = load float, ptr %2976, align 4, !tbaa !162
  %2978 = fptosi float %2977 to i32
  %2979 = load i32, ptr %2438, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2978
  store i32 %2980, ptr %2438, align 4, !tbaa !5
  %2981 = add nuw nsw i32 %2898, 1
  br i1 %2750, label %2982, label %3032

2982:                                             ; preds = %2974
  %2983 = load i32, ptr %4, align 4, !tbaa !5
  %2984 = load i32, ptr %12, align 4, !tbaa !5
  %2985 = add nsw i32 %2984, -1
  %2986 = icmp slt i32 %2983, %2985
  br i1 %2986, label %3009, label %2987

2987:                                             ; preds = %2982
  %2988 = icmp eq i32 %2983, %2985
  br i1 %2988, label %2989, label %3025

2989:                                             ; preds = %2987
  store i32 0, ptr %4, align 4, !tbaa !5
  %2990 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2990, ptr %6, align 4, !tbaa !5
  br i1 %2755, label %3032, label %2991

2991:                                             ; preds = %2989, %3019
  %2992 = phi i64 [ %3023, %3019 ], [ 1, %2989 ]
  %2993 = getelementptr inbounds i32, ptr %4, i64 %2992
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %12, i64 %2992
  %2996 = load i32, ptr %2995, align 4, !tbaa !5
  %2997 = add nsw i32 %2996, -1
  %2998 = icmp slt i32 %2994, %2997
  br i1 %2998, label %2999, label %3017

2999:                                             ; preds = %2991
  br i1 %2986, label %3009, label %3000

3000:                                             ; preds = %2999
  %3001 = shl i64 %2992, 32
  %3002 = add i64 %3001, -4294967296
  %3003 = ashr exact i64 %3002, 32
  %3004 = getelementptr inbounds i32, ptr %7, i64 %3003
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %6, i64 %2992
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = add nsw i32 %3007, %3005
  store i32 %3008, ptr %3006, align 4, !tbaa !5
  br label %3027

3009:                                             ; preds = %2982, %2999
  %3010 = phi i32 [ %2994, %2999 ], [ %2983, %2982 ]
  %3011 = phi ptr [ %2993, %2999 ], [ %4, %2982 ]
  %3012 = phi i64 [ %2992, %2999 ], [ 0, %2982 ]
  %3013 = add nsw i32 %3010, 1
  store i32 %3013, ptr %3011, align 4, !tbaa !5
  %3014 = getelementptr inbounds i32, ptr %7, i64 %3012
  %3015 = load i32, ptr %3014, align 4, !tbaa !5
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3012
  br label %3027

3017:                                             ; preds = %2991
  %3018 = icmp eq i32 %2994, %2997
  br i1 %3018, label %3019, label %3025

3019:                                             ; preds = %3017
  store i32 0, ptr %2993, align 4, !tbaa !5
  %3020 = getelementptr inbounds i32, ptr %8, i64 %2992
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = getelementptr inbounds i32, ptr %6, i64 %2992
  store i32 %3021, ptr %3022, align 4, !tbaa !5
  %3023 = add nuw nsw i64 %2992, 1
  %3024 = icmp eq i64 %3023, %2753
  br i1 %3024, label %3032, label %2991, !llvm.loop !1222

3025:                                             ; preds = %2987, %3017
  %3026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3027:                                             ; preds = %3000, %3009
  %3028 = phi ptr [ %3016, %3009 ], [ %2993, %3000 ]
  %3029 = phi i32 [ %3015, %3009 ], [ 1, %3000 ]
  %3030 = load i32, ptr %3028, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, %3029
  store i32 %3031, ptr %3028, align 4, !tbaa !5
  br label %3032

3032:                                             ; preds = %3019, %3027, %2989, %2974
  %3033 = icmp eq i32 %2981, %5
  br i1 %3033, label %5442, label %2897, !llvm.loop !1223

3034:                                             ; preds = %2443
  %3035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

3036:                                             ; preds = %18
  %3037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3038 = load ptr, ptr %3037, align 8, !tbaa !9
  %3039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3040 = load ptr, ptr %3039, align 8, !tbaa !9
  store i64 0, ptr %3040, align 8, !tbaa !120
  %3041 = icmp eq i32 %13, 0
  br i1 %3041, label %3042, label %3045

3042:                                             ; preds = %3036
  %3043 = load float, ptr %3038, align 4, !tbaa !162
  %3044 = fptosi float %3043 to i64
  store i64 %3044, ptr %3040, align 8, !tbaa !120
  br label %5442

3045:                                             ; preds = %3036
  switch i32 %1, label %3639 [
    i32 1, label %3046
    i32 0, label %3347
  ]

3046:                                             ; preds = %3045
  %3047 = getelementptr inbounds i32, ptr %3, i64 %19
  %3048 = load i32, ptr %3047, align 4, !tbaa !5
  %3049 = icmp eq i32 %3048, 0
  %3050 = icmp sgt i32 %5, 0
  br i1 %3049, label %3060, label %3051

3051:                                             ; preds = %3046
  br i1 %3050, label %3052, label %5442

3052:                                             ; preds = %3051
  %3053 = icmp sgt i32 %13, 1
  %3054 = icmp sgt i32 %13, 0
  %3055 = add i32 %13, -2
  %3056 = zext i32 %3055 to i64
  %3057 = zext i32 %13 to i64
  %3058 = add nuw i32 %5, 1
  %3059 = icmp eq i32 %13, 1
  br label %3207

3060:                                             ; preds = %3046
  br i1 %3050, label %3061, label %5442

3061:                                             ; preds = %3060
  %3062 = icmp sgt i32 %13, 1
  %3063 = icmp sgt i32 %13, 0
  %3064 = add i32 %13, -2
  %3065 = zext i32 %3064 to i64
  %3066 = zext i32 %13 to i64
  %3067 = add nuw i32 %5, 1
  %3068 = icmp eq i32 %13, 1
  br label %3069

3069:                                             ; preds = %3061, %3205
  %3070 = phi i64 [ 0, %3061 ], [ %3155, %3205 ]
  %3071 = phi i32 [ 0, %3061 ], [ %3157, %3205 ]
  %3072 = phi double [ 0.000000e+00, %3061 ], [ %3156, %3205 ]
  %3073 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3062, label %3074, label %3143

3074:                                             ; preds = %3069, %3133
  %3075 = phi i32 [ %3142, %3133 ], [ 0, %3069 ]
  %3076 = phi i64 [ %3084, %3133 ], [ %3066, %3069 ]
  %3077 = phi i64 [ %3141, %3133 ], [ %3065, %3069 ]
  %3078 = phi i32 [ %3139, %3133 ], [ %3073, %3069 ]
  %3079 = sub i32 %3064, %3075
  %3080 = tail call i32 @llvm.smin.i32(i32 %3079, i32 0)
  %3081 = sub i32 %3079, %3080
  %3082 = zext i32 %3081 to i64
  %3083 = add nuw nsw i64 %3082, 1
  %3084 = add nsw i64 %3076, -1
  %3085 = icmp ult i32 %3081, 31
  br i1 %3085, label %3121, label %3086

3086:                                             ; preds = %3074
  %3087 = and i64 %3083, 8589934560
  %3088 = sub i64 %3077, %3087
  br label %3089

3089:                                             ; preds = %3089, %3086
  %3090 = phi i64 [ 0, %3086 ], [ %3113, %3089 ]
  %3091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3109, %3089 ]
  %3092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3110, %3089 ]
  %3093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3111, %3089 ]
  %3094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3112, %3089 ]
  %3095 = sub i64 %3077, %3090
  %3096 = getelementptr inbounds i32, ptr %9, i64 %3095
  %3097 = getelementptr inbounds i32, ptr %3096, i64 -7
  %3098 = load <8 x i32>, ptr %3097, align 4, !tbaa !5
  %3099 = shufflevector <8 x i32> %3098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3100 = getelementptr inbounds i32, ptr %3096, i64 -15
  %3101 = load <8 x i32>, ptr %3100, align 4, !tbaa !5
  %3102 = shufflevector <8 x i32> %3101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3103 = getelementptr inbounds i32, ptr %3096, i64 -23
  %3104 = load <8 x i32>, ptr %3103, align 4, !tbaa !5
  %3105 = shufflevector <8 x i32> %3104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3106 = getelementptr inbounds i32, ptr %3096, i64 -31
  %3107 = load <8 x i32>, ptr %3106, align 4, !tbaa !5
  %3108 = shufflevector <8 x i32> %3107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3109 = mul <8 x i32> %3099, %3091
  %3110 = mul <8 x i32> %3102, %3092
  %3111 = mul <8 x i32> %3105, %3093
  %3112 = mul <8 x i32> %3108, %3094
  %3113 = add nuw i64 %3090, 32
  %3114 = icmp eq i64 %3113, %3087
  br i1 %3114, label %3115, label %3089, !llvm.loop !1224

3115:                                             ; preds = %3089
  %3116 = mul <8 x i32> %3110, %3109
  %3117 = mul <8 x i32> %3111, %3116
  %3118 = mul <8 x i32> %3112, %3117
  %3119 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3118)
  %3120 = icmp eq i64 %3083, %3087
  br i1 %3120, label %3133, label %3121

3121:                                             ; preds = %3074, %3115
  %3122 = phi i64 [ %3077, %3074 ], [ %3088, %3115 ]
  %3123 = phi i32 [ 1, %3074 ], [ %3119, %3115 ]
  br label %3124

3124:                                             ; preds = %3121, %3124
  %3125 = phi i64 [ %3130, %3124 ], [ %3122, %3121 ]
  %3126 = phi i32 [ %3129, %3124 ], [ %3123, %3121 ]
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3125
  %3128 = load i32, ptr %3127, align 4, !tbaa !5
  %3129 = mul nsw i32 %3128, %3126
  %3130 = add nsw i64 %3125, -1
  %3131 = trunc i64 %3125 to i32
  %3132 = icmp sgt i32 %3131, 0
  br i1 %3132, label %3124, label %3133, !llvm.loop !1225

3133:                                             ; preds = %3124, %3115
  %3134 = phi i32 [ %3119, %3115 ], [ %3129, %3124 ]
  %3135 = and i64 %3084, 4294967295
  %3136 = getelementptr inbounds i32, ptr %6, i64 %3135
  %3137 = load i32, ptr %3136, align 4, !tbaa !5
  %3138 = mul nsw i32 %3137, %3134
  %3139 = add nsw i32 %3138, %3078
  %3140 = icmp sgt i64 %3076, 2
  %3141 = add nsw i64 %3077, -1
  %3142 = add i32 %3075, 1
  br i1 %3140, label %3074, label %3143, !llvm.loop !1226

3143:                                             ; preds = %3133, %3069
  %3144 = phi i32 [ %3073, %3069 ], [ %3139, %3133 ]
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds double, ptr %2, i64 %3145
  %3147 = load double, ptr %3146, align 8, !tbaa !18
  %3148 = getelementptr inbounds float, ptr %3038, i64 %3145
  %3149 = load float, ptr %3148, align 4, !tbaa !162
  %3150 = fptosi float %3149 to i64
  %3151 = sitofp i64 %3070 to double
  %3152 = sitofp i64 %3150 to double
  %3153 = fmul fast double %3147, %3152
  %3154 = fadd fast double %3153, %3151
  %3155 = fptosi double %3154 to i64
  %3156 = fadd fast double %3147, %3072
  %3157 = add nuw nsw i32 %3071, 1
  br i1 %3063, label %3158, label %3205

3158:                                             ; preds = %3143
  %3159 = load i32, ptr %4, align 4, !tbaa !5
  %3160 = load i32, ptr %12, align 4, !tbaa !5
  %3161 = add nsw i32 %3160, -1
  %3162 = icmp slt i32 %3159, %3161
  br i1 %3162, label %3182, label %3163

3163:                                             ; preds = %3158
  %3164 = icmp eq i32 %3159, %3161
  br i1 %3164, label %3165, label %3198

3165:                                             ; preds = %3163
  store i32 0, ptr %4, align 4, !tbaa !5
  %3166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3166, ptr %6, align 4, !tbaa !5
  br i1 %3068, label %3205, label %3167

3167:                                             ; preds = %3165, %3192
  %3168 = phi i64 [ %3196, %3192 ], [ 1, %3165 ]
  %3169 = getelementptr inbounds i32, ptr %4, i64 %3168
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %12, i64 %3168
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, -1
  %3174 = icmp slt i32 %3170, %3173
  br i1 %3174, label %3175, label %3190

3175:                                             ; preds = %3167
  br i1 %3162, label %3182, label %3176

3176:                                             ; preds = %3175
  %3177 = getelementptr inbounds i32, ptr %7, i64 %3168
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %6, i64 %3168
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = add nsw i32 %3180, %3178
  store i32 %3181, ptr %3179, align 4, !tbaa !5
  br label %3200

3182:                                             ; preds = %3158, %3175
  %3183 = phi i32 [ %3170, %3175 ], [ %3159, %3158 ]
  %3184 = phi ptr [ %3169, %3175 ], [ %4, %3158 ]
  %3185 = phi i64 [ %3168, %3175 ], [ 0, %3158 ]
  %3186 = add nsw i32 %3183, 1
  store i32 %3186, ptr %3184, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %7, i64 %3185
  %3188 = load i32, ptr %3187, align 4, !tbaa !5
  %3189 = getelementptr inbounds i32, ptr %6, i64 %3185
  br label %3200

3190:                                             ; preds = %3167
  %3191 = icmp eq i32 %3170, %3173
  br i1 %3191, label %3192, label %3198

3192:                                             ; preds = %3190
  store i32 0, ptr %3169, align 4, !tbaa !5
  %3193 = getelementptr inbounds i32, ptr %8, i64 %3168
  %3194 = load i32, ptr %3193, align 4, !tbaa !5
  %3195 = getelementptr inbounds i32, ptr %6, i64 %3168
  store i32 %3194, ptr %3195, align 4, !tbaa !5
  %3196 = add nuw nsw i64 %3168, 1
  %3197 = icmp eq i64 %3196, %3066
  br i1 %3197, label %3205, label %3167, !llvm.loop !1227

3198:                                             ; preds = %3163, %3190
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  %3199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3200:                                             ; preds = %3176, %3182
  %3201 = phi ptr [ %3189, %3182 ], [ %3169, %3176 ]
  %3202 = phi i32 [ %3188, %3182 ], [ 1, %3176 ]
  %3203 = load i32, ptr %3201, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, %3202
  store i32 %3204, ptr %3201, align 4, !tbaa !5
  br label %3205

3205:                                             ; preds = %3192, %3200, %3165, %3143
  %3206 = icmp eq i32 %3157, %5
  br i1 %3206, label %5438, label %3069, !llvm.loop !1228

3207:                                             ; preds = %3052, %3345
  %3208 = phi i64 [ 0, %3052 ], [ %3293, %3345 ]
  %3209 = phi i32 [ 0, %3052 ], [ %3294, %3345 ]
  %3210 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3053, label %3211, label %3280

3211:                                             ; preds = %3207, %3270
  %3212 = phi i32 [ %3279, %3270 ], [ 0, %3207 ]
  %3213 = phi i64 [ %3221, %3270 ], [ %3057, %3207 ]
  %3214 = phi i64 [ %3278, %3270 ], [ %3056, %3207 ]
  %3215 = phi i32 [ %3276, %3270 ], [ %3210, %3207 ]
  %3216 = sub i32 %3055, %3212
  %3217 = tail call i32 @llvm.smin.i32(i32 %3216, i32 0)
  %3218 = sub i32 %3216, %3217
  %3219 = zext i32 %3218 to i64
  %3220 = add nuw nsw i64 %3219, 1
  %3221 = add nsw i64 %3213, -1
  %3222 = icmp ult i32 %3218, 31
  br i1 %3222, label %3258, label %3223

3223:                                             ; preds = %3211
  %3224 = and i64 %3220, 8589934560
  %3225 = sub i64 %3214, %3224
  br label %3226

3226:                                             ; preds = %3226, %3223
  %3227 = phi i64 [ 0, %3223 ], [ %3250, %3226 ]
  %3228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3246, %3226 ]
  %3229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3247, %3226 ]
  %3230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3248, %3226 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3249, %3226 ]
  %3232 = sub i64 %3214, %3227
  %3233 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3234 = getelementptr inbounds i32, ptr %3233, i64 -7
  %3235 = load <8 x i32>, ptr %3234, align 4, !tbaa !5
  %3236 = shufflevector <8 x i32> %3235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3237 = getelementptr inbounds i32, ptr %3233, i64 -15
  %3238 = load <8 x i32>, ptr %3237, align 4, !tbaa !5
  %3239 = shufflevector <8 x i32> %3238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3240 = getelementptr inbounds i32, ptr %3233, i64 -23
  %3241 = load <8 x i32>, ptr %3240, align 4, !tbaa !5
  %3242 = shufflevector <8 x i32> %3241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3243 = getelementptr inbounds i32, ptr %3233, i64 -31
  %3244 = load <8 x i32>, ptr %3243, align 4, !tbaa !5
  %3245 = shufflevector <8 x i32> %3244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3246 = mul <8 x i32> %3236, %3228
  %3247 = mul <8 x i32> %3239, %3229
  %3248 = mul <8 x i32> %3242, %3230
  %3249 = mul <8 x i32> %3245, %3231
  %3250 = add nuw i64 %3227, 32
  %3251 = icmp eq i64 %3250, %3224
  br i1 %3251, label %3252, label %3226, !llvm.loop !1229

3252:                                             ; preds = %3226
  %3253 = mul <8 x i32> %3247, %3246
  %3254 = mul <8 x i32> %3248, %3253
  %3255 = mul <8 x i32> %3249, %3254
  %3256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3255)
  %3257 = icmp eq i64 %3220, %3224
  br i1 %3257, label %3270, label %3258

3258:                                             ; preds = %3211, %3252
  %3259 = phi i64 [ %3214, %3211 ], [ %3225, %3252 ]
  %3260 = phi i32 [ 1, %3211 ], [ %3256, %3252 ]
  br label %3261

3261:                                             ; preds = %3258, %3261
  %3262 = phi i64 [ %3267, %3261 ], [ %3259, %3258 ]
  %3263 = phi i32 [ %3266, %3261 ], [ %3260, %3258 ]
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3262
  %3265 = load i32, ptr %3264, align 4, !tbaa !5
  %3266 = mul nsw i32 %3265, %3263
  %3267 = add nsw i64 %3262, -1
  %3268 = trunc i64 %3262 to i32
  %3269 = icmp sgt i32 %3268, 0
  br i1 %3269, label %3261, label %3270, !llvm.loop !1230

3270:                                             ; preds = %3261, %3252
  %3271 = phi i32 [ %3256, %3252 ], [ %3266, %3261 ]
  %3272 = and i64 %3221, 4294967295
  %3273 = getelementptr inbounds i32, ptr %6, i64 %3272
  %3274 = load i32, ptr %3273, align 4, !tbaa !5
  %3275 = mul nsw i32 %3274, %3271
  %3276 = add nsw i32 %3275, %3215
  %3277 = icmp sgt i64 %3213, 2
  %3278 = add nsw i64 %3214, -1
  %3279 = add i32 %3212, 1
  br i1 %3277, label %3211, label %3280, !llvm.loop !1231

3280:                                             ; preds = %3270, %3207
  %3281 = phi i32 [ %3210, %3207 ], [ %3276, %3270 ]
  %3282 = icmp slt i32 %3281, %5
  br i1 %3282, label %3285, label %3283

3283:                                             ; preds = %3280
  %3284 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

3285:                                             ; preds = %3280
  %3286 = sext i32 %3281 to i64
  %3287 = getelementptr inbounds float, ptr %3038, i64 %3286
  %3288 = load float, ptr %3287, align 4, !tbaa !162
  %3289 = fptosi float %3288 to i64
  %3290 = sitofp i64 %3208 to double
  %3291 = sitofp i64 %3289 to double
  %3292 = fadd fast double %3290, %3291
  %3293 = fptosi double %3292 to i64
  store i64 %3293, ptr %3040, align 8, !tbaa !120
  %3294 = add nuw nsw i32 %3209, 1
  br i1 %3054, label %3295, label %3345

3295:                                             ; preds = %3285
  %3296 = load i32, ptr %4, align 4, !tbaa !5
  %3297 = load i32, ptr %12, align 4, !tbaa !5
  %3298 = add nsw i32 %3297, -1
  %3299 = icmp slt i32 %3296, %3298
  br i1 %3299, label %3322, label %3300

3300:                                             ; preds = %3295
  %3301 = icmp eq i32 %3296, %3298
  br i1 %3301, label %3302, label %3338

3302:                                             ; preds = %3300
  store i32 0, ptr %4, align 4, !tbaa !5
  %3303 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3303, ptr %6, align 4, !tbaa !5
  br i1 %3059, label %3345, label %3304

3304:                                             ; preds = %3302, %3332
  %3305 = phi i64 [ %3336, %3332 ], [ 1, %3302 ]
  %3306 = getelementptr inbounds i32, ptr %4, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = getelementptr inbounds i32, ptr %12, i64 %3305
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = add nsw i32 %3309, -1
  %3311 = icmp slt i32 %3307, %3310
  br i1 %3311, label %3312, label %3330

3312:                                             ; preds = %3304
  br i1 %3299, label %3322, label %3313

3313:                                             ; preds = %3312
  %3314 = shl i64 %3305, 32
  %3315 = add i64 %3314, -4294967296
  %3316 = ashr exact i64 %3315, 32
  %3317 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = add nsw i32 %3320, %3318
  store i32 %3321, ptr %3319, align 4, !tbaa !5
  br label %3340

3322:                                             ; preds = %3295, %3312
  %3323 = phi i32 [ %3307, %3312 ], [ %3296, %3295 ]
  %3324 = phi ptr [ %3306, %3312 ], [ %4, %3295 ]
  %3325 = phi i64 [ %3305, %3312 ], [ 0, %3295 ]
  %3326 = add nsw i32 %3323, 1
  store i32 %3326, ptr %3324, align 4, !tbaa !5
  %3327 = getelementptr inbounds i32, ptr %7, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !5
  %3329 = getelementptr inbounds i32, ptr %6, i64 %3325
  br label %3340

3330:                                             ; preds = %3304
  %3331 = icmp eq i32 %3307, %3310
  br i1 %3331, label %3332, label %3338

3332:                                             ; preds = %3330
  store i32 0, ptr %3306, align 4, !tbaa !5
  %3333 = getelementptr inbounds i32, ptr %8, i64 %3305
  %3334 = load i32, ptr %3333, align 4, !tbaa !5
  %3335 = getelementptr inbounds i32, ptr %6, i64 %3305
  store i32 %3334, ptr %3335, align 4, !tbaa !5
  %3336 = add nuw nsw i64 %3305, 1
  %3337 = icmp eq i64 %3336, %3057
  br i1 %3337, label %3345, label %3304, !llvm.loop !1232

3338:                                             ; preds = %3300, %3330
  %3339 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3340:                                             ; preds = %3313, %3322
  %3341 = phi ptr [ %3329, %3322 ], [ %3306, %3313 ]
  %3342 = phi i32 [ %3328, %3322 ], [ 1, %3313 ]
  %3343 = load i32, ptr %3341, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, %3342
  store i32 %3344, ptr %3341, align 4, !tbaa !5
  br label %3345

3345:                                             ; preds = %3332, %3340, %3302, %3285
  %3346 = icmp eq i32 %3294, %5
  br i1 %3346, label %5442, label %3207, !llvm.loop !1233

3347:                                             ; preds = %3045
  %3348 = getelementptr inbounds i32, ptr %3, i64 %19
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp sgt i32 %5, 0
  br i1 %3350, label %3361, label %3352

3352:                                             ; preds = %3347
  br i1 %3351, label %3353, label %5442

3353:                                             ; preds = %3352
  %3354 = icmp sgt i32 %13, 1
  %3355 = icmp sgt i32 %13, 0
  %3356 = add i32 %13, -2
  %3357 = zext i32 %3356 to i64
  %3358 = zext i32 %13 to i64
  %3359 = add nuw i32 %5, 1
  %3360 = icmp eq i32 %13, 1
  br label %3502

3361:                                             ; preds = %3347
  br i1 %3351, label %3362, label %5442

3362:                                             ; preds = %3361
  %3363 = icmp sgt i32 %13, 1
  %3364 = icmp sgt i32 %13, 0
  %3365 = add i32 %13, -2
  %3366 = zext i32 %3365 to i64
  %3367 = zext i32 %13 to i64
  %3368 = add nuw i32 %5, 1
  %3369 = icmp eq i32 %13, 1
  br label %3370

3370:                                             ; preds = %3362, %3500
  %3371 = phi i64 [ 0, %3362 ], [ %3450, %3500 ]
  %3372 = phi i32 [ 0, %3362 ], [ %3452, %3500 ]
  %3373 = phi double [ 0.000000e+00, %3362 ], [ %3451, %3500 ]
  %3374 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3363, label %3375, label %3444

3375:                                             ; preds = %3370, %3434
  %3376 = phi i32 [ %3443, %3434 ], [ 0, %3370 ]
  %3377 = phi i64 [ %3385, %3434 ], [ %3367, %3370 ]
  %3378 = phi i64 [ %3442, %3434 ], [ %3366, %3370 ]
  %3379 = phi i32 [ %3440, %3434 ], [ %3374, %3370 ]
  %3380 = sub i32 %3365, %3376
  %3381 = tail call i32 @llvm.smin.i32(i32 %3380, i32 0)
  %3382 = sub i32 %3380, %3381
  %3383 = zext i32 %3382 to i64
  %3384 = add nuw nsw i64 %3383, 1
  %3385 = add nsw i64 %3377, -1
  %3386 = icmp ult i32 %3382, 31
  br i1 %3386, label %3422, label %3387

3387:                                             ; preds = %3375
  %3388 = and i64 %3384, 8589934560
  %3389 = sub i64 %3378, %3388
  br label %3390

3390:                                             ; preds = %3390, %3387
  %3391 = phi i64 [ 0, %3387 ], [ %3414, %3390 ]
  %3392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3410, %3390 ]
  %3393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3411, %3390 ]
  %3394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3412, %3390 ]
  %3395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3413, %3390 ]
  %3396 = sub i64 %3378, %3391
  %3397 = getelementptr inbounds i32, ptr %9, i64 %3396
  %3398 = getelementptr inbounds i32, ptr %3397, i64 -7
  %3399 = load <8 x i32>, ptr %3398, align 4, !tbaa !5
  %3400 = shufflevector <8 x i32> %3399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3401 = getelementptr inbounds i32, ptr %3397, i64 -15
  %3402 = load <8 x i32>, ptr %3401, align 4, !tbaa !5
  %3403 = shufflevector <8 x i32> %3402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3404 = getelementptr inbounds i32, ptr %3397, i64 -23
  %3405 = load <8 x i32>, ptr %3404, align 4, !tbaa !5
  %3406 = shufflevector <8 x i32> %3405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3407 = getelementptr inbounds i32, ptr %3397, i64 -31
  %3408 = load <8 x i32>, ptr %3407, align 4, !tbaa !5
  %3409 = shufflevector <8 x i32> %3408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3410 = mul <8 x i32> %3400, %3392
  %3411 = mul <8 x i32> %3403, %3393
  %3412 = mul <8 x i32> %3406, %3394
  %3413 = mul <8 x i32> %3409, %3395
  %3414 = add nuw i64 %3391, 32
  %3415 = icmp eq i64 %3414, %3388
  br i1 %3415, label %3416, label %3390, !llvm.loop !1234

3416:                                             ; preds = %3390
  %3417 = mul <8 x i32> %3411, %3410
  %3418 = mul <8 x i32> %3412, %3417
  %3419 = mul <8 x i32> %3413, %3418
  %3420 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3419)
  %3421 = icmp eq i64 %3384, %3388
  br i1 %3421, label %3434, label %3422

3422:                                             ; preds = %3375, %3416
  %3423 = phi i64 [ %3378, %3375 ], [ %3389, %3416 ]
  %3424 = phi i32 [ 1, %3375 ], [ %3420, %3416 ]
  br label %3425

3425:                                             ; preds = %3422, %3425
  %3426 = phi i64 [ %3431, %3425 ], [ %3423, %3422 ]
  %3427 = phi i32 [ %3430, %3425 ], [ %3424, %3422 ]
  %3428 = getelementptr inbounds i32, ptr %9, i64 %3426
  %3429 = load i32, ptr %3428, align 4, !tbaa !5
  %3430 = mul nsw i32 %3429, %3427
  %3431 = add nsw i64 %3426, -1
  %3432 = trunc i64 %3426 to i32
  %3433 = icmp sgt i32 %3432, 0
  br i1 %3433, label %3425, label %3434, !llvm.loop !1235

3434:                                             ; preds = %3425, %3416
  %3435 = phi i32 [ %3420, %3416 ], [ %3430, %3425 ]
  %3436 = and i64 %3385, 4294967295
  %3437 = getelementptr inbounds i32, ptr %6, i64 %3436
  %3438 = load i32, ptr %3437, align 4, !tbaa !5
  %3439 = mul nsw i32 %3438, %3435
  %3440 = add nsw i32 %3439, %3379
  %3441 = icmp sgt i64 %3377, 2
  %3442 = add nsw i64 %3378, -1
  %3443 = add i32 %3376, 1
  br i1 %3441, label %3375, label %3444, !llvm.loop !1236

3444:                                             ; preds = %3434, %3370
  %3445 = phi i32 [ %3374, %3370 ], [ %3440, %3434 ]
  %3446 = sext i32 %3445 to i64
  %3447 = getelementptr inbounds float, ptr %3038, i64 %3446
  %3448 = load float, ptr %3447, align 4, !tbaa !162
  %3449 = fptosi float %3448 to i64
  %3450 = add nsw i64 %3371, %3449
  %3451 = fadd fast double %3373, 1.000000e+00
  %3452 = add nuw nsw i32 %3372, 1
  br i1 %3364, label %3453, label %3500

3453:                                             ; preds = %3444
  %3454 = load i32, ptr %4, align 4, !tbaa !5
  %3455 = load i32, ptr %12, align 4, !tbaa !5
  %3456 = add nsw i32 %3455, -1
  %3457 = icmp slt i32 %3454, %3456
  br i1 %3457, label %3477, label %3458

3458:                                             ; preds = %3453
  %3459 = icmp eq i32 %3454, %3456
  br i1 %3459, label %3460, label %3493

3460:                                             ; preds = %3458
  store i32 0, ptr %4, align 4, !tbaa !5
  %3461 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3461, ptr %6, align 4, !tbaa !5
  br i1 %3369, label %3500, label %3462

3462:                                             ; preds = %3460, %3487
  %3463 = phi i64 [ %3491, %3487 ], [ 1, %3460 ]
  %3464 = getelementptr inbounds i32, ptr %4, i64 %3463
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %12, i64 %3463
  %3467 = load i32, ptr %3466, align 4, !tbaa !5
  %3468 = add nsw i32 %3467, -1
  %3469 = icmp slt i32 %3465, %3468
  br i1 %3469, label %3470, label %3485

3470:                                             ; preds = %3462
  br i1 %3457, label %3477, label %3471

3471:                                             ; preds = %3470
  %3472 = getelementptr inbounds i32, ptr %7, i64 %3463
  %3473 = load i32, ptr %3472, align 4, !tbaa !5
  %3474 = getelementptr inbounds i32, ptr %6, i64 %3463
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = add nsw i32 %3475, %3473
  store i32 %3476, ptr %3474, align 4, !tbaa !5
  br label %3495

3477:                                             ; preds = %3453, %3470
  %3478 = phi i32 [ %3465, %3470 ], [ %3454, %3453 ]
  %3479 = phi ptr [ %3464, %3470 ], [ %4, %3453 ]
  %3480 = phi i64 [ %3463, %3470 ], [ 0, %3453 ]
  %3481 = add nsw i32 %3478, 1
  store i32 %3481, ptr %3479, align 4, !tbaa !5
  %3482 = getelementptr inbounds i32, ptr %7, i64 %3480
  %3483 = load i32, ptr %3482, align 4, !tbaa !5
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3480
  br label %3495

3485:                                             ; preds = %3462
  %3486 = icmp eq i32 %3465, %3468
  br i1 %3486, label %3487, label %3493

3487:                                             ; preds = %3485
  store i32 0, ptr %3464, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %8, i64 %3463
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = getelementptr inbounds i32, ptr %6, i64 %3463
  store i32 %3489, ptr %3490, align 4, !tbaa !5
  %3491 = add nuw nsw i64 %3463, 1
  %3492 = icmp eq i64 %3491, %3367
  br i1 %3492, label %3500, label %3462, !llvm.loop !1237

3493:                                             ; preds = %3458, %3485
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  %3494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3495:                                             ; preds = %3471, %3477
  %3496 = phi ptr [ %3484, %3477 ], [ %3464, %3471 ]
  %3497 = phi i32 [ %3483, %3477 ], [ 1, %3471 ]
  %3498 = load i32, ptr %3496, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, %3497
  store i32 %3499, ptr %3496, align 4, !tbaa !5
  br label %3500

3500:                                             ; preds = %3487, %3495, %3460, %3444
  %3501 = icmp eq i32 %3452, %5
  br i1 %3501, label %5439, label %3370, !llvm.loop !1238

3502:                                             ; preds = %3353, %3637
  %3503 = phi i64 [ 0, %3353 ], [ %3585, %3637 ]
  %3504 = phi i32 [ 0, %3353 ], [ %3586, %3637 ]
  %3505 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3354, label %3506, label %3575

3506:                                             ; preds = %3502, %3565
  %3507 = phi i32 [ %3574, %3565 ], [ 0, %3502 ]
  %3508 = phi i64 [ %3516, %3565 ], [ %3358, %3502 ]
  %3509 = phi i64 [ %3573, %3565 ], [ %3357, %3502 ]
  %3510 = phi i32 [ %3571, %3565 ], [ %3505, %3502 ]
  %3511 = sub i32 %3356, %3507
  %3512 = tail call i32 @llvm.smin.i32(i32 %3511, i32 0)
  %3513 = sub i32 %3511, %3512
  %3514 = zext i32 %3513 to i64
  %3515 = add nuw nsw i64 %3514, 1
  %3516 = add nsw i64 %3508, -1
  %3517 = icmp ult i32 %3513, 31
  br i1 %3517, label %3553, label %3518

3518:                                             ; preds = %3506
  %3519 = and i64 %3515, 8589934560
  %3520 = sub i64 %3509, %3519
  br label %3521

3521:                                             ; preds = %3521, %3518
  %3522 = phi i64 [ 0, %3518 ], [ %3545, %3521 ]
  %3523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3541, %3521 ]
  %3524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3542, %3521 ]
  %3525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3543, %3521 ]
  %3526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3544, %3521 ]
  %3527 = sub i64 %3509, %3522
  %3528 = getelementptr inbounds i32, ptr %11, i64 %3527
  %3529 = getelementptr inbounds i32, ptr %3528, i64 -7
  %3530 = load <8 x i32>, ptr %3529, align 4, !tbaa !5
  %3531 = shufflevector <8 x i32> %3530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3532 = getelementptr inbounds i32, ptr %3528, i64 -15
  %3533 = load <8 x i32>, ptr %3532, align 4, !tbaa !5
  %3534 = shufflevector <8 x i32> %3533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3535 = getelementptr inbounds i32, ptr %3528, i64 -23
  %3536 = load <8 x i32>, ptr %3535, align 4, !tbaa !5
  %3537 = shufflevector <8 x i32> %3536, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3538 = getelementptr inbounds i32, ptr %3528, i64 -31
  %3539 = load <8 x i32>, ptr %3538, align 4, !tbaa !5
  %3540 = shufflevector <8 x i32> %3539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3541 = mul <8 x i32> %3531, %3523
  %3542 = mul <8 x i32> %3534, %3524
  %3543 = mul <8 x i32> %3537, %3525
  %3544 = mul <8 x i32> %3540, %3526
  %3545 = add nuw i64 %3522, 32
  %3546 = icmp eq i64 %3545, %3519
  br i1 %3546, label %3547, label %3521, !llvm.loop !1239

3547:                                             ; preds = %3521
  %3548 = mul <8 x i32> %3542, %3541
  %3549 = mul <8 x i32> %3543, %3548
  %3550 = mul <8 x i32> %3544, %3549
  %3551 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3550)
  %3552 = icmp eq i64 %3515, %3519
  br i1 %3552, label %3565, label %3553

3553:                                             ; preds = %3506, %3547
  %3554 = phi i64 [ %3509, %3506 ], [ %3520, %3547 ]
  %3555 = phi i32 [ 1, %3506 ], [ %3551, %3547 ]
  br label %3556

3556:                                             ; preds = %3553, %3556
  %3557 = phi i64 [ %3562, %3556 ], [ %3554, %3553 ]
  %3558 = phi i32 [ %3561, %3556 ], [ %3555, %3553 ]
  %3559 = getelementptr inbounds i32, ptr %11, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = mul nsw i32 %3560, %3558
  %3562 = add nsw i64 %3557, -1
  %3563 = trunc i64 %3557 to i32
  %3564 = icmp sgt i32 %3563, 0
  br i1 %3564, label %3556, label %3565, !llvm.loop !1240

3565:                                             ; preds = %3556, %3547
  %3566 = phi i32 [ %3551, %3547 ], [ %3561, %3556 ]
  %3567 = and i64 %3516, 4294967295
  %3568 = getelementptr inbounds i32, ptr %6, i64 %3567
  %3569 = load i32, ptr %3568, align 4, !tbaa !5
  %3570 = mul nsw i32 %3569, %3566
  %3571 = add nsw i32 %3570, %3510
  %3572 = icmp sgt i64 %3508, 2
  %3573 = add nsw i64 %3509, -1
  %3574 = add i32 %3507, 1
  br i1 %3572, label %3506, label %3575, !llvm.loop !1241

3575:                                             ; preds = %3565, %3502
  %3576 = phi i32 [ %3505, %3502 ], [ %3571, %3565 ]
  %3577 = icmp slt i32 %3576, %5
  br i1 %3577, label %3580, label %3578

3578:                                             ; preds = %3575
  %3579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

3580:                                             ; preds = %3575
  %3581 = sext i32 %3576 to i64
  %3582 = getelementptr inbounds float, ptr %3038, i64 %3581
  %3583 = load float, ptr %3582, align 4, !tbaa !162
  %3584 = fptosi float %3583 to i64
  %3585 = add nsw i64 %3503, %3584
  store i64 %3585, ptr %3040, align 8, !tbaa !120
  %3586 = add nuw nsw i32 %3504, 1
  br i1 %3355, label %3587, label %3637

3587:                                             ; preds = %3580
  %3588 = load i32, ptr %4, align 4, !tbaa !5
  %3589 = load i32, ptr %12, align 4, !tbaa !5
  %3590 = add nsw i32 %3589, -1
  %3591 = icmp slt i32 %3588, %3590
  br i1 %3591, label %3614, label %3592

3592:                                             ; preds = %3587
  %3593 = icmp eq i32 %3588, %3590
  br i1 %3593, label %3594, label %3630

3594:                                             ; preds = %3592
  store i32 0, ptr %4, align 4, !tbaa !5
  %3595 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3595, ptr %6, align 4, !tbaa !5
  br i1 %3360, label %3637, label %3596

3596:                                             ; preds = %3594, %3624
  %3597 = phi i64 [ %3628, %3624 ], [ 1, %3594 ]
  %3598 = getelementptr inbounds i32, ptr %4, i64 %3597
  %3599 = load i32, ptr %3598, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %12, i64 %3597
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = add nsw i32 %3601, -1
  %3603 = icmp slt i32 %3599, %3602
  br i1 %3603, label %3604, label %3622

3604:                                             ; preds = %3596
  br i1 %3591, label %3614, label %3605

3605:                                             ; preds = %3604
  %3606 = shl i64 %3597, 32
  %3607 = add i64 %3606, -4294967296
  %3608 = ashr exact i64 %3607, 32
  %3609 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3597
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = add nsw i32 %3612, %3610
  store i32 %3613, ptr %3611, align 4, !tbaa !5
  br label %3632

3614:                                             ; preds = %3587, %3604
  %3615 = phi i32 [ %3599, %3604 ], [ %3588, %3587 ]
  %3616 = phi ptr [ %3598, %3604 ], [ %4, %3587 ]
  %3617 = phi i64 [ %3597, %3604 ], [ 0, %3587 ]
  %3618 = add nsw i32 %3615, 1
  store i32 %3618, ptr %3616, align 4, !tbaa !5
  %3619 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3617
  br label %3632

3622:                                             ; preds = %3596
  %3623 = icmp eq i32 %3599, %3602
  br i1 %3623, label %3624, label %3630

3624:                                             ; preds = %3622
  store i32 0, ptr %3598, align 4, !tbaa !5
  %3625 = getelementptr inbounds i32, ptr %8, i64 %3597
  %3626 = load i32, ptr %3625, align 4, !tbaa !5
  %3627 = getelementptr inbounds i32, ptr %6, i64 %3597
  store i32 %3626, ptr %3627, align 4, !tbaa !5
  %3628 = add nuw nsw i64 %3597, 1
  %3629 = icmp eq i64 %3628, %3358
  br i1 %3629, label %3637, label %3596, !llvm.loop !1242

3630:                                             ; preds = %3592, %3622
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3632:                                             ; preds = %3605, %3614
  %3633 = phi ptr [ %3621, %3614 ], [ %3598, %3605 ]
  %3634 = phi i32 [ %3620, %3614 ], [ 1, %3605 ]
  %3635 = load i32, ptr %3633, align 4, !tbaa !5
  %3636 = add nsw i32 %3635, %3634
  store i32 %3636, ptr %3633, align 4, !tbaa !5
  br label %3637

3637:                                             ; preds = %3624, %3632, %3594, %3580
  %3638 = icmp eq i32 %3586, %5
  br i1 %3638, label %5442, label %3502, !llvm.loop !1243

3639:                                             ; preds = %3045
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

3641:                                             ; preds = %18
  %3642 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3643 = load ptr, ptr %3642, align 8, !tbaa !9
  %3644 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3645 = load ptr, ptr %3644, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3645, align 8, !tbaa !18
  %3646 = icmp eq i32 %13, 0
  br i1 %3646, label %3647, label %3650

3647:                                             ; preds = %3641
  %3648 = load float, ptr %3643, align 4, !tbaa !162
  %3649 = fpext float %3648 to double
  store double %3649, ptr %3645, align 8, !tbaa !18
  br label %5442

3650:                                             ; preds = %3641
  switch i32 %1, label %4238 [
    i32 1, label %3651
    i32 0, label %3946
  ]

3651:                                             ; preds = %3650
  %3652 = getelementptr inbounds i32, ptr %3, i64 %19
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = icmp eq i32 %3653, 0
  %3655 = icmp sgt i32 %5, 0
  br i1 %3654, label %3665, label %3656

3656:                                             ; preds = %3651
  br i1 %3655, label %3657, label %5442

3657:                                             ; preds = %3656
  %3658 = icmp sgt i32 %13, 1
  %3659 = icmp sgt i32 %13, 0
  %3660 = add i32 %13, -2
  %3661 = zext i32 %3660 to i64
  %3662 = zext i32 %13 to i64
  %3663 = add nuw i32 %5, 1
  %3664 = icmp eq i32 %13, 1
  br label %3809

3665:                                             ; preds = %3651
  br i1 %3655, label %3666, label %5442

3666:                                             ; preds = %3665
  %3667 = icmp sgt i32 %13, 1
  %3668 = icmp sgt i32 %13, 0
  %3669 = add i32 %13, -2
  %3670 = zext i32 %3669 to i64
  %3671 = zext i32 %13 to i64
  %3672 = add nuw i32 %5, 1
  %3673 = icmp eq i32 %13, 1
  br label %3674

3674:                                             ; preds = %3666, %3807
  %3675 = phi double [ 0.000000e+00, %3666 ], [ %3757, %3807 ]
  %3676 = phi i32 [ 0, %3666 ], [ %3759, %3807 ]
  %3677 = phi double [ 0.000000e+00, %3666 ], [ %3758, %3807 ]
  %3678 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3667, label %3679, label %3748

3679:                                             ; preds = %3674, %3738
  %3680 = phi i32 [ %3747, %3738 ], [ 0, %3674 ]
  %3681 = phi i64 [ %3689, %3738 ], [ %3671, %3674 ]
  %3682 = phi i64 [ %3746, %3738 ], [ %3670, %3674 ]
  %3683 = phi i32 [ %3744, %3738 ], [ %3678, %3674 ]
  %3684 = sub i32 %3669, %3680
  %3685 = tail call i32 @llvm.smin.i32(i32 %3684, i32 0)
  %3686 = sub i32 %3684, %3685
  %3687 = zext i32 %3686 to i64
  %3688 = add nuw nsw i64 %3687, 1
  %3689 = add nsw i64 %3681, -1
  %3690 = icmp ult i32 %3686, 31
  br i1 %3690, label %3726, label %3691

3691:                                             ; preds = %3679
  %3692 = and i64 %3688, 8589934560
  %3693 = sub i64 %3682, %3692
  br label %3694

3694:                                             ; preds = %3694, %3691
  %3695 = phi i64 [ 0, %3691 ], [ %3718, %3694 ]
  %3696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3714, %3694 ]
  %3697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3715, %3694 ]
  %3698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3716, %3694 ]
  %3699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3691 ], [ %3717, %3694 ]
  %3700 = sub i64 %3682, %3695
  %3701 = getelementptr inbounds i32, ptr %9, i64 %3700
  %3702 = getelementptr inbounds i32, ptr %3701, i64 -7
  %3703 = load <8 x i32>, ptr %3702, align 4, !tbaa !5
  %3704 = shufflevector <8 x i32> %3703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3705 = getelementptr inbounds i32, ptr %3701, i64 -15
  %3706 = load <8 x i32>, ptr %3705, align 4, !tbaa !5
  %3707 = shufflevector <8 x i32> %3706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3708 = getelementptr inbounds i32, ptr %3701, i64 -23
  %3709 = load <8 x i32>, ptr %3708, align 4, !tbaa !5
  %3710 = shufflevector <8 x i32> %3709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3711 = getelementptr inbounds i32, ptr %3701, i64 -31
  %3712 = load <8 x i32>, ptr %3711, align 4, !tbaa !5
  %3713 = shufflevector <8 x i32> %3712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3714 = mul <8 x i32> %3704, %3696
  %3715 = mul <8 x i32> %3707, %3697
  %3716 = mul <8 x i32> %3710, %3698
  %3717 = mul <8 x i32> %3713, %3699
  %3718 = add nuw i64 %3695, 32
  %3719 = icmp eq i64 %3718, %3692
  br i1 %3719, label %3720, label %3694, !llvm.loop !1244

3720:                                             ; preds = %3694
  %3721 = mul <8 x i32> %3715, %3714
  %3722 = mul <8 x i32> %3716, %3721
  %3723 = mul <8 x i32> %3717, %3722
  %3724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3723)
  %3725 = icmp eq i64 %3688, %3692
  br i1 %3725, label %3738, label %3726

3726:                                             ; preds = %3679, %3720
  %3727 = phi i64 [ %3682, %3679 ], [ %3693, %3720 ]
  %3728 = phi i32 [ 1, %3679 ], [ %3724, %3720 ]
  br label %3729

3729:                                             ; preds = %3726, %3729
  %3730 = phi i64 [ %3735, %3729 ], [ %3727, %3726 ]
  %3731 = phi i32 [ %3734, %3729 ], [ %3728, %3726 ]
  %3732 = getelementptr inbounds i32, ptr %9, i64 %3730
  %3733 = load i32, ptr %3732, align 4, !tbaa !5
  %3734 = mul nsw i32 %3733, %3731
  %3735 = add nsw i64 %3730, -1
  %3736 = trunc i64 %3730 to i32
  %3737 = icmp sgt i32 %3736, 0
  br i1 %3737, label %3729, label %3738, !llvm.loop !1245

3738:                                             ; preds = %3729, %3720
  %3739 = phi i32 [ %3724, %3720 ], [ %3734, %3729 ]
  %3740 = and i64 %3689, 4294967295
  %3741 = getelementptr inbounds i32, ptr %6, i64 %3740
  %3742 = load i32, ptr %3741, align 4, !tbaa !5
  %3743 = mul nsw i32 %3742, %3739
  %3744 = add nsw i32 %3743, %3683
  %3745 = icmp sgt i64 %3681, 2
  %3746 = add nsw i64 %3682, -1
  %3747 = add i32 %3680, 1
  br i1 %3745, label %3679, label %3748, !llvm.loop !1246

3748:                                             ; preds = %3738, %3674
  %3749 = phi i32 [ %3678, %3674 ], [ %3744, %3738 ]
  %3750 = sext i32 %3749 to i64
  %3751 = getelementptr inbounds double, ptr %2, i64 %3750
  %3752 = load double, ptr %3751, align 8, !tbaa !18
  %3753 = getelementptr inbounds float, ptr %3643, i64 %3750
  %3754 = load float, ptr %3753, align 4, !tbaa !162
  %3755 = fpext float %3754 to double
  %3756 = fmul fast double %3752, %3755
  %3757 = fadd fast double %3756, %3675
  store double %3757, ptr %3645, align 8, !tbaa !18
  %3758 = fadd fast double %3752, %3677
  %3759 = add nuw nsw i32 %3676, 1
  br i1 %3668, label %3760, label %3807

3760:                                             ; preds = %3748
  %3761 = load i32, ptr %4, align 4, !tbaa !5
  %3762 = load i32, ptr %12, align 4, !tbaa !5
  %3763 = add nsw i32 %3762, -1
  %3764 = icmp slt i32 %3761, %3763
  br i1 %3764, label %3784, label %3765

3765:                                             ; preds = %3760
  %3766 = icmp eq i32 %3761, %3763
  br i1 %3766, label %3767, label %3800

3767:                                             ; preds = %3765
  store i32 0, ptr %4, align 4, !tbaa !5
  %3768 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3768, ptr %6, align 4, !tbaa !5
  br i1 %3673, label %3807, label %3769

3769:                                             ; preds = %3767, %3794
  %3770 = phi i64 [ %3798, %3794 ], [ 1, %3767 ]
  %3771 = getelementptr inbounds i32, ptr %4, i64 %3770
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = getelementptr inbounds i32, ptr %12, i64 %3770
  %3774 = load i32, ptr %3773, align 4, !tbaa !5
  %3775 = add nsw i32 %3774, -1
  %3776 = icmp slt i32 %3772, %3775
  br i1 %3776, label %3777, label %3792

3777:                                             ; preds = %3769
  br i1 %3764, label %3784, label %3778

3778:                                             ; preds = %3777
  %3779 = getelementptr inbounds i32, ptr %7, i64 %3770
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3770
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = add nsw i32 %3782, %3780
  store i32 %3783, ptr %3781, align 4, !tbaa !5
  br label %3802

3784:                                             ; preds = %3760, %3777
  %3785 = phi i32 [ %3772, %3777 ], [ %3761, %3760 ]
  %3786 = phi ptr [ %3771, %3777 ], [ %4, %3760 ]
  %3787 = phi i64 [ %3770, %3777 ], [ 0, %3760 ]
  %3788 = add nsw i32 %3785, 1
  store i32 %3788, ptr %3786, align 4, !tbaa !5
  %3789 = getelementptr inbounds i32, ptr %7, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = getelementptr inbounds i32, ptr %6, i64 %3787
  br label %3802

3792:                                             ; preds = %3769
  %3793 = icmp eq i32 %3772, %3775
  br i1 %3793, label %3794, label %3800

3794:                                             ; preds = %3792
  store i32 0, ptr %3771, align 4, !tbaa !5
  %3795 = getelementptr inbounds i32, ptr %8, i64 %3770
  %3796 = load i32, ptr %3795, align 4, !tbaa !5
  %3797 = getelementptr inbounds i32, ptr %6, i64 %3770
  store i32 %3796, ptr %3797, align 4, !tbaa !5
  %3798 = add nuw nsw i64 %3770, 1
  %3799 = icmp eq i64 %3798, %3671
  br i1 %3799, label %3807, label %3769, !llvm.loop !1247

3800:                                             ; preds = %3765, %3792
  %3801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3802:                                             ; preds = %3778, %3784
  %3803 = phi ptr [ %3791, %3784 ], [ %3771, %3778 ]
  %3804 = phi i32 [ %3790, %3784 ], [ 1, %3778 ]
  %3805 = load i32, ptr %3803, align 4, !tbaa !5
  %3806 = add nsw i32 %3805, %3804
  store i32 %3806, ptr %3803, align 4, !tbaa !5
  br label %3807

3807:                                             ; preds = %3794, %3802, %3767, %3748
  %3808 = icmp eq i32 %3759, %5
  br i1 %3808, label %5442, label %3674, !llvm.loop !1248

3809:                                             ; preds = %3657, %3944
  %3810 = phi double [ 0.000000e+00, %3657 ], [ %3892, %3944 ]
  %3811 = phi i32 [ 0, %3657 ], [ %3893, %3944 ]
  %3812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3658, label %3813, label %3882

3813:                                             ; preds = %3809, %3872
  %3814 = phi i32 [ %3881, %3872 ], [ 0, %3809 ]
  %3815 = phi i64 [ %3823, %3872 ], [ %3662, %3809 ]
  %3816 = phi i64 [ %3880, %3872 ], [ %3661, %3809 ]
  %3817 = phi i32 [ %3878, %3872 ], [ %3812, %3809 ]
  %3818 = sub i32 %3660, %3814
  %3819 = tail call i32 @llvm.smin.i32(i32 %3818, i32 0)
  %3820 = sub i32 %3818, %3819
  %3821 = zext i32 %3820 to i64
  %3822 = add nuw nsw i64 %3821, 1
  %3823 = add nsw i64 %3815, -1
  %3824 = icmp ult i32 %3820, 31
  br i1 %3824, label %3860, label %3825

3825:                                             ; preds = %3813
  %3826 = and i64 %3822, 8589934560
  %3827 = sub i64 %3816, %3826
  br label %3828

3828:                                             ; preds = %3828, %3825
  %3829 = phi i64 [ 0, %3825 ], [ %3852, %3828 ]
  %3830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3848, %3828 ]
  %3831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3849, %3828 ]
  %3832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3850, %3828 ]
  %3833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3825 ], [ %3851, %3828 ]
  %3834 = sub i64 %3816, %3829
  %3835 = getelementptr inbounds i32, ptr %11, i64 %3834
  %3836 = getelementptr inbounds i32, ptr %3835, i64 -7
  %3837 = load <8 x i32>, ptr %3836, align 4, !tbaa !5
  %3838 = shufflevector <8 x i32> %3837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3839 = getelementptr inbounds i32, ptr %3835, i64 -15
  %3840 = load <8 x i32>, ptr %3839, align 4, !tbaa !5
  %3841 = shufflevector <8 x i32> %3840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3842 = getelementptr inbounds i32, ptr %3835, i64 -23
  %3843 = load <8 x i32>, ptr %3842, align 4, !tbaa !5
  %3844 = shufflevector <8 x i32> %3843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3845 = getelementptr inbounds i32, ptr %3835, i64 -31
  %3846 = load <8 x i32>, ptr %3845, align 4, !tbaa !5
  %3847 = shufflevector <8 x i32> %3846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3848 = mul <8 x i32> %3838, %3830
  %3849 = mul <8 x i32> %3841, %3831
  %3850 = mul <8 x i32> %3844, %3832
  %3851 = mul <8 x i32> %3847, %3833
  %3852 = add nuw i64 %3829, 32
  %3853 = icmp eq i64 %3852, %3826
  br i1 %3853, label %3854, label %3828, !llvm.loop !1249

3854:                                             ; preds = %3828
  %3855 = mul <8 x i32> %3849, %3848
  %3856 = mul <8 x i32> %3850, %3855
  %3857 = mul <8 x i32> %3851, %3856
  %3858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3857)
  %3859 = icmp eq i64 %3822, %3826
  br i1 %3859, label %3872, label %3860

3860:                                             ; preds = %3813, %3854
  %3861 = phi i64 [ %3816, %3813 ], [ %3827, %3854 ]
  %3862 = phi i32 [ 1, %3813 ], [ %3858, %3854 ]
  br label %3863

3863:                                             ; preds = %3860, %3863
  %3864 = phi i64 [ %3869, %3863 ], [ %3861, %3860 ]
  %3865 = phi i32 [ %3868, %3863 ], [ %3862, %3860 ]
  %3866 = getelementptr inbounds i32, ptr %11, i64 %3864
  %3867 = load i32, ptr %3866, align 4, !tbaa !5
  %3868 = mul nsw i32 %3867, %3865
  %3869 = add nsw i64 %3864, -1
  %3870 = trunc i64 %3864 to i32
  %3871 = icmp sgt i32 %3870, 0
  br i1 %3871, label %3863, label %3872, !llvm.loop !1250

3872:                                             ; preds = %3863, %3854
  %3873 = phi i32 [ %3858, %3854 ], [ %3868, %3863 ]
  %3874 = and i64 %3823, 4294967295
  %3875 = getelementptr inbounds i32, ptr %6, i64 %3874
  %3876 = load i32, ptr %3875, align 4, !tbaa !5
  %3877 = mul nsw i32 %3876, %3873
  %3878 = add nsw i32 %3877, %3817
  %3879 = icmp sgt i64 %3815, 2
  %3880 = add nsw i64 %3816, -1
  %3881 = add i32 %3814, 1
  br i1 %3879, label %3813, label %3882, !llvm.loop !1251

3882:                                             ; preds = %3872, %3809
  %3883 = phi i32 [ %3812, %3809 ], [ %3878, %3872 ]
  %3884 = icmp slt i32 %3883, %5
  br i1 %3884, label %3887, label %3885

3885:                                             ; preds = %3882
  %3886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

3887:                                             ; preds = %3882
  %3888 = sext i32 %3883 to i64
  %3889 = getelementptr inbounds float, ptr %3643, i64 %3888
  %3890 = load float, ptr %3889, align 4, !tbaa !162
  %3891 = fpext float %3890 to double
  %3892 = fadd fast double %3810, %3891
  store double %3892, ptr %3645, align 8, !tbaa !18
  %3893 = add nuw nsw i32 %3811, 1
  br i1 %3659, label %3894, label %3944

3894:                                             ; preds = %3887
  %3895 = load i32, ptr %4, align 4, !tbaa !5
  %3896 = load i32, ptr %12, align 4, !tbaa !5
  %3897 = add nsw i32 %3896, -1
  %3898 = icmp slt i32 %3895, %3897
  br i1 %3898, label %3921, label %3899

3899:                                             ; preds = %3894
  %3900 = icmp eq i32 %3895, %3897
  br i1 %3900, label %3901, label %3937

3901:                                             ; preds = %3899
  store i32 0, ptr %4, align 4, !tbaa !5
  %3902 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3902, ptr %6, align 4, !tbaa !5
  br i1 %3664, label %3944, label %3903

3903:                                             ; preds = %3901, %3931
  %3904 = phi i64 [ %3935, %3931 ], [ 1, %3901 ]
  %3905 = getelementptr inbounds i32, ptr %4, i64 %3904
  %3906 = load i32, ptr %3905, align 4, !tbaa !5
  %3907 = getelementptr inbounds i32, ptr %12, i64 %3904
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = add nsw i32 %3908, -1
  %3910 = icmp slt i32 %3906, %3909
  br i1 %3910, label %3911, label %3929

3911:                                             ; preds = %3903
  br i1 %3898, label %3921, label %3912

3912:                                             ; preds = %3911
  %3913 = shl i64 %3904, 32
  %3914 = add i64 %3913, -4294967296
  %3915 = ashr exact i64 %3914, 32
  %3916 = getelementptr inbounds i32, ptr %7, i64 %3915
  %3917 = load i32, ptr %3916, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %6, i64 %3904
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = add nsw i32 %3919, %3917
  store i32 %3920, ptr %3918, align 4, !tbaa !5
  br label %3939

3921:                                             ; preds = %3894, %3911
  %3922 = phi i32 [ %3906, %3911 ], [ %3895, %3894 ]
  %3923 = phi ptr [ %3905, %3911 ], [ %4, %3894 ]
  %3924 = phi i64 [ %3904, %3911 ], [ 0, %3894 ]
  %3925 = add nsw i32 %3922, 1
  store i32 %3925, ptr %3923, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %7, i64 %3924
  %3927 = load i32, ptr %3926, align 4, !tbaa !5
  %3928 = getelementptr inbounds i32, ptr %6, i64 %3924
  br label %3939

3929:                                             ; preds = %3903
  %3930 = icmp eq i32 %3906, %3909
  br i1 %3930, label %3931, label %3937

3931:                                             ; preds = %3929
  store i32 0, ptr %3905, align 4, !tbaa !5
  %3932 = getelementptr inbounds i32, ptr %8, i64 %3904
  %3933 = load i32, ptr %3932, align 4, !tbaa !5
  %3934 = getelementptr inbounds i32, ptr %6, i64 %3904
  store i32 %3933, ptr %3934, align 4, !tbaa !5
  %3935 = add nuw nsw i64 %3904, 1
  %3936 = icmp eq i64 %3935, %3662
  br i1 %3936, label %3944, label %3903, !llvm.loop !1252

3937:                                             ; preds = %3899, %3929
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

3939:                                             ; preds = %3912, %3921
  %3940 = phi ptr [ %3928, %3921 ], [ %3905, %3912 ]
  %3941 = phi i32 [ %3927, %3921 ], [ 1, %3912 ]
  %3942 = load i32, ptr %3940, align 4, !tbaa !5
  %3943 = add nsw i32 %3942, %3941
  store i32 %3943, ptr %3940, align 4, !tbaa !5
  br label %3944

3944:                                             ; preds = %3931, %3939, %3901, %3887
  %3945 = icmp eq i32 %3893, %5
  br i1 %3945, label %5442, label %3809, !llvm.loop !1253

3946:                                             ; preds = %3650
  %3947 = getelementptr inbounds i32, ptr %3, i64 %19
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = icmp eq i32 %3948, 0
  %3950 = icmp sgt i32 %5, 0
  br i1 %3949, label %3960, label %3951

3951:                                             ; preds = %3946
  br i1 %3950, label %3952, label %5442

3952:                                             ; preds = %3951
  %3953 = icmp sgt i32 %13, 1
  %3954 = icmp sgt i32 %13, 0
  %3955 = add i32 %13, -2
  %3956 = zext i32 %3955 to i64
  %3957 = zext i32 %13 to i64
  %3958 = add nuw i32 %5, 1
  %3959 = icmp eq i32 %13, 1
  br label %4101

3960:                                             ; preds = %3946
  br i1 %3950, label %3961, label %5442

3961:                                             ; preds = %3960
  %3962 = icmp sgt i32 %13, 1
  %3963 = icmp sgt i32 %13, 0
  %3964 = add i32 %13, -2
  %3965 = zext i32 %3964 to i64
  %3966 = zext i32 %13 to i64
  %3967 = add nuw i32 %5, 1
  %3968 = icmp eq i32 %13, 1
  br label %3969

3969:                                             ; preds = %3961, %4099
  %3970 = phi double [ 0.000000e+00, %3961 ], [ %4049, %4099 ]
  %3971 = phi i32 [ 0, %3961 ], [ %4051, %4099 ]
  %3972 = phi double [ 0.000000e+00, %3961 ], [ %4050, %4099 ]
  %3973 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3962, label %3974, label %4043

3974:                                             ; preds = %3969, %4033
  %3975 = phi i32 [ %4042, %4033 ], [ 0, %3969 ]
  %3976 = phi i64 [ %3984, %4033 ], [ %3966, %3969 ]
  %3977 = phi i64 [ %4041, %4033 ], [ %3965, %3969 ]
  %3978 = phi i32 [ %4039, %4033 ], [ %3973, %3969 ]
  %3979 = sub i32 %3964, %3975
  %3980 = tail call i32 @llvm.smin.i32(i32 %3979, i32 0)
  %3981 = sub i32 %3979, %3980
  %3982 = zext i32 %3981 to i64
  %3983 = add nuw nsw i64 %3982, 1
  %3984 = add nsw i64 %3976, -1
  %3985 = icmp ult i32 %3981, 31
  br i1 %3985, label %4021, label %3986

3986:                                             ; preds = %3974
  %3987 = and i64 %3983, 8589934560
  %3988 = sub i64 %3977, %3987
  br label %3989

3989:                                             ; preds = %3989, %3986
  %3990 = phi i64 [ 0, %3986 ], [ %4013, %3989 ]
  %3991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4009, %3989 ]
  %3992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4010, %3989 ]
  %3993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4011, %3989 ]
  %3994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3986 ], [ %4012, %3989 ]
  %3995 = sub i64 %3977, %3990
  %3996 = getelementptr inbounds i32, ptr %9, i64 %3995
  %3997 = getelementptr inbounds i32, ptr %3996, i64 -7
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = getelementptr inbounds i32, ptr %3996, i64 -15
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !5
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3996, i64 -23
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !5
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = getelementptr inbounds i32, ptr %3996, i64 -31
  %4007 = load <8 x i32>, ptr %4006, align 4, !tbaa !5
  %4008 = shufflevector <8 x i32> %4007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4009 = mul <8 x i32> %3999, %3991
  %4010 = mul <8 x i32> %4002, %3992
  %4011 = mul <8 x i32> %4005, %3993
  %4012 = mul <8 x i32> %4008, %3994
  %4013 = add nuw i64 %3990, 32
  %4014 = icmp eq i64 %4013, %3987
  br i1 %4014, label %4015, label %3989, !llvm.loop !1254

4015:                                             ; preds = %3989
  %4016 = mul <8 x i32> %4010, %4009
  %4017 = mul <8 x i32> %4011, %4016
  %4018 = mul <8 x i32> %4012, %4017
  %4019 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4018)
  %4020 = icmp eq i64 %3983, %3987
  br i1 %4020, label %4033, label %4021

4021:                                             ; preds = %3974, %4015
  %4022 = phi i64 [ %3977, %3974 ], [ %3988, %4015 ]
  %4023 = phi i32 [ 1, %3974 ], [ %4019, %4015 ]
  br label %4024

4024:                                             ; preds = %4021, %4024
  %4025 = phi i64 [ %4030, %4024 ], [ %4022, %4021 ]
  %4026 = phi i32 [ %4029, %4024 ], [ %4023, %4021 ]
  %4027 = getelementptr inbounds i32, ptr %9, i64 %4025
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = mul nsw i32 %4028, %4026
  %4030 = add nsw i64 %4025, -1
  %4031 = trunc i64 %4025 to i32
  %4032 = icmp sgt i32 %4031, 0
  br i1 %4032, label %4024, label %4033, !llvm.loop !1255

4033:                                             ; preds = %4024, %4015
  %4034 = phi i32 [ %4019, %4015 ], [ %4029, %4024 ]
  %4035 = and i64 %3984, 4294967295
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4035
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = mul nsw i32 %4037, %4034
  %4039 = add nsw i32 %4038, %3978
  %4040 = icmp sgt i64 %3976, 2
  %4041 = add nsw i64 %3977, -1
  %4042 = add i32 %3975, 1
  br i1 %4040, label %3974, label %4043, !llvm.loop !1256

4043:                                             ; preds = %4033, %3969
  %4044 = phi i32 [ %3973, %3969 ], [ %4039, %4033 ]
  %4045 = sext i32 %4044 to i64
  %4046 = getelementptr inbounds float, ptr %3643, i64 %4045
  %4047 = load float, ptr %4046, align 4, !tbaa !162
  %4048 = fpext float %4047 to double
  %4049 = fadd fast double %3970, %4048
  %4050 = fadd fast double %3972, 1.000000e+00
  %4051 = add nuw nsw i32 %3971, 1
  br i1 %3963, label %4052, label %4099

4052:                                             ; preds = %4043
  %4053 = load i32, ptr %4, align 4, !tbaa !5
  %4054 = load i32, ptr %12, align 4, !tbaa !5
  %4055 = add nsw i32 %4054, -1
  %4056 = icmp slt i32 %4053, %4055
  br i1 %4056, label %4076, label %4057

4057:                                             ; preds = %4052
  %4058 = icmp eq i32 %4053, %4055
  br i1 %4058, label %4059, label %4092

4059:                                             ; preds = %4057
  store i32 0, ptr %4, align 4, !tbaa !5
  %4060 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4060, ptr %6, align 4, !tbaa !5
  br i1 %3968, label %4099, label %4061

4061:                                             ; preds = %4059, %4086
  %4062 = phi i64 [ %4090, %4086 ], [ 1, %4059 ]
  %4063 = getelementptr inbounds i32, ptr %4, i64 %4062
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = getelementptr inbounds i32, ptr %12, i64 %4062
  %4066 = load i32, ptr %4065, align 4, !tbaa !5
  %4067 = add nsw i32 %4066, -1
  %4068 = icmp slt i32 %4064, %4067
  br i1 %4068, label %4069, label %4084

4069:                                             ; preds = %4061
  br i1 %4056, label %4076, label %4070

4070:                                             ; preds = %4069
  %4071 = getelementptr inbounds i32, ptr %7, i64 %4062
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = getelementptr inbounds i32, ptr %6, i64 %4062
  %4074 = load i32, ptr %4073, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, %4072
  store i32 %4075, ptr %4073, align 4, !tbaa !5
  br label %4094

4076:                                             ; preds = %4052, %4069
  %4077 = phi i32 [ %4064, %4069 ], [ %4053, %4052 ]
  %4078 = phi ptr [ %4063, %4069 ], [ %4, %4052 ]
  %4079 = phi i64 [ %4062, %4069 ], [ 0, %4052 ]
  %4080 = add nsw i32 %4077, 1
  store i32 %4080, ptr %4078, align 4, !tbaa !5
  %4081 = getelementptr inbounds i32, ptr %7, i64 %4079
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = getelementptr inbounds i32, ptr %6, i64 %4079
  br label %4094

4084:                                             ; preds = %4061
  %4085 = icmp eq i32 %4064, %4067
  br i1 %4085, label %4086, label %4092

4086:                                             ; preds = %4084
  store i32 0, ptr %4063, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %8, i64 %4062
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = getelementptr inbounds i32, ptr %6, i64 %4062
  store i32 %4088, ptr %4089, align 4, !tbaa !5
  %4090 = add nuw nsw i64 %4062, 1
  %4091 = icmp eq i64 %4090, %3966
  br i1 %4091, label %4099, label %4061, !llvm.loop !1257

4092:                                             ; preds = %4057, %4084
  store double %4049, ptr %3645, align 8, !tbaa !18
  %4093 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4094:                                             ; preds = %4070, %4076
  %4095 = phi ptr [ %4083, %4076 ], [ %4063, %4070 ]
  %4096 = phi i32 [ %4082, %4076 ], [ 1, %4070 ]
  %4097 = load i32, ptr %4095, align 4, !tbaa !5
  %4098 = add nsw i32 %4097, %4096
  store i32 %4098, ptr %4095, align 4, !tbaa !5
  br label %4099

4099:                                             ; preds = %4086, %4094, %4059, %4043
  %4100 = icmp eq i32 %4051, %5
  br i1 %4100, label %5440, label %3969, !llvm.loop !1258

4101:                                             ; preds = %3952, %4236
  %4102 = phi double [ 0.000000e+00, %3952 ], [ %4184, %4236 ]
  %4103 = phi i32 [ 0, %3952 ], [ %4185, %4236 ]
  %4104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3953, label %4105, label %4174

4105:                                             ; preds = %4101, %4164
  %4106 = phi i32 [ %4173, %4164 ], [ 0, %4101 ]
  %4107 = phi i64 [ %4115, %4164 ], [ %3957, %4101 ]
  %4108 = phi i64 [ %4172, %4164 ], [ %3956, %4101 ]
  %4109 = phi i32 [ %4170, %4164 ], [ %4104, %4101 ]
  %4110 = sub i32 %3955, %4106
  %4111 = tail call i32 @llvm.smin.i32(i32 %4110, i32 0)
  %4112 = sub i32 %4110, %4111
  %4113 = zext i32 %4112 to i64
  %4114 = add nuw nsw i64 %4113, 1
  %4115 = add nsw i64 %4107, -1
  %4116 = icmp ult i32 %4112, 31
  br i1 %4116, label %4152, label %4117

4117:                                             ; preds = %4105
  %4118 = and i64 %4114, 8589934560
  %4119 = sub i64 %4108, %4118
  br label %4120

4120:                                             ; preds = %4120, %4117
  %4121 = phi i64 [ 0, %4117 ], [ %4144, %4120 ]
  %4122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4140, %4120 ]
  %4123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4141, %4120 ]
  %4124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4142, %4120 ]
  %4125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4117 ], [ %4143, %4120 ]
  %4126 = sub i64 %4108, %4121
  %4127 = getelementptr inbounds i32, ptr %11, i64 %4126
  %4128 = getelementptr inbounds i32, ptr %4127, i64 -7
  %4129 = load <8 x i32>, ptr %4128, align 4, !tbaa !5
  %4130 = shufflevector <8 x i32> %4129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4131 = getelementptr inbounds i32, ptr %4127, i64 -15
  %4132 = load <8 x i32>, ptr %4131, align 4, !tbaa !5
  %4133 = shufflevector <8 x i32> %4132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4134 = getelementptr inbounds i32, ptr %4127, i64 -23
  %4135 = load <8 x i32>, ptr %4134, align 4, !tbaa !5
  %4136 = shufflevector <8 x i32> %4135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4137 = getelementptr inbounds i32, ptr %4127, i64 -31
  %4138 = load <8 x i32>, ptr %4137, align 4, !tbaa !5
  %4139 = shufflevector <8 x i32> %4138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4140 = mul <8 x i32> %4130, %4122
  %4141 = mul <8 x i32> %4133, %4123
  %4142 = mul <8 x i32> %4136, %4124
  %4143 = mul <8 x i32> %4139, %4125
  %4144 = add nuw i64 %4121, 32
  %4145 = icmp eq i64 %4144, %4118
  br i1 %4145, label %4146, label %4120, !llvm.loop !1259

4146:                                             ; preds = %4120
  %4147 = mul <8 x i32> %4141, %4140
  %4148 = mul <8 x i32> %4142, %4147
  %4149 = mul <8 x i32> %4143, %4148
  %4150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4149)
  %4151 = icmp eq i64 %4114, %4118
  br i1 %4151, label %4164, label %4152

4152:                                             ; preds = %4105, %4146
  %4153 = phi i64 [ %4108, %4105 ], [ %4119, %4146 ]
  %4154 = phi i32 [ 1, %4105 ], [ %4150, %4146 ]
  br label %4155

4155:                                             ; preds = %4152, %4155
  %4156 = phi i64 [ %4161, %4155 ], [ %4153, %4152 ]
  %4157 = phi i32 [ %4160, %4155 ], [ %4154, %4152 ]
  %4158 = getelementptr inbounds i32, ptr %11, i64 %4156
  %4159 = load i32, ptr %4158, align 4, !tbaa !5
  %4160 = mul nsw i32 %4159, %4157
  %4161 = add nsw i64 %4156, -1
  %4162 = trunc i64 %4156 to i32
  %4163 = icmp sgt i32 %4162, 0
  br i1 %4163, label %4155, label %4164, !llvm.loop !1260

4164:                                             ; preds = %4155, %4146
  %4165 = phi i32 [ %4150, %4146 ], [ %4160, %4155 ]
  %4166 = and i64 %4115, 4294967295
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4166
  %4168 = load i32, ptr %4167, align 4, !tbaa !5
  %4169 = mul nsw i32 %4168, %4165
  %4170 = add nsw i32 %4169, %4109
  %4171 = icmp sgt i64 %4107, 2
  %4172 = add nsw i64 %4108, -1
  %4173 = add i32 %4106, 1
  br i1 %4171, label %4105, label %4174, !llvm.loop !1261

4174:                                             ; preds = %4164, %4101
  %4175 = phi i32 [ %4104, %4101 ], [ %4170, %4164 ]
  %4176 = icmp slt i32 %4175, %5
  br i1 %4176, label %4179, label %4177

4177:                                             ; preds = %4174
  %4178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

4179:                                             ; preds = %4174
  %4180 = sext i32 %4175 to i64
  %4181 = getelementptr inbounds float, ptr %3643, i64 %4180
  %4182 = load float, ptr %4181, align 4, !tbaa !162
  %4183 = fpext float %4182 to double
  %4184 = fadd fast double %4102, %4183
  store double %4184, ptr %3645, align 8, !tbaa !18
  %4185 = add nuw nsw i32 %4103, 1
  br i1 %3954, label %4186, label %4236

4186:                                             ; preds = %4179
  %4187 = load i32, ptr %4, align 4, !tbaa !5
  %4188 = load i32, ptr %12, align 4, !tbaa !5
  %4189 = add nsw i32 %4188, -1
  %4190 = icmp slt i32 %4187, %4189
  br i1 %4190, label %4213, label %4191

4191:                                             ; preds = %4186
  %4192 = icmp eq i32 %4187, %4189
  br i1 %4192, label %4193, label %4229

4193:                                             ; preds = %4191
  store i32 0, ptr %4, align 4, !tbaa !5
  %4194 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4194, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %4236, label %4195

4195:                                             ; preds = %4193, %4223
  %4196 = phi i64 [ %4227, %4223 ], [ 1, %4193 ]
  %4197 = getelementptr inbounds i32, ptr %4, i64 %4196
  %4198 = load i32, ptr %4197, align 4, !tbaa !5
  %4199 = getelementptr inbounds i32, ptr %12, i64 %4196
  %4200 = load i32, ptr %4199, align 4, !tbaa !5
  %4201 = add nsw i32 %4200, -1
  %4202 = icmp slt i32 %4198, %4201
  br i1 %4202, label %4203, label %4221

4203:                                             ; preds = %4195
  br i1 %4190, label %4213, label %4204

4204:                                             ; preds = %4203
  %4205 = shl i64 %4196, 32
  %4206 = add i64 %4205, -4294967296
  %4207 = ashr exact i64 %4206, 32
  %4208 = getelementptr inbounds i32, ptr %7, i64 %4207
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = getelementptr inbounds i32, ptr %6, i64 %4196
  %4211 = load i32, ptr %4210, align 4, !tbaa !5
  %4212 = add nsw i32 %4211, %4209
  store i32 %4212, ptr %4210, align 4, !tbaa !5
  br label %4231

4213:                                             ; preds = %4186, %4203
  %4214 = phi i32 [ %4198, %4203 ], [ %4187, %4186 ]
  %4215 = phi ptr [ %4197, %4203 ], [ %4, %4186 ]
  %4216 = phi i64 [ %4196, %4203 ], [ 0, %4186 ]
  %4217 = add nsw i32 %4214, 1
  store i32 %4217, ptr %4215, align 4, !tbaa !5
  %4218 = getelementptr inbounds i32, ptr %7, i64 %4216
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = getelementptr inbounds i32, ptr %6, i64 %4216
  br label %4231

4221:                                             ; preds = %4195
  %4222 = icmp eq i32 %4198, %4201
  br i1 %4222, label %4223, label %4229

4223:                                             ; preds = %4221
  store i32 0, ptr %4197, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %8, i64 %4196
  %4225 = load i32, ptr %4224, align 4, !tbaa !5
  %4226 = getelementptr inbounds i32, ptr %6, i64 %4196
  store i32 %4225, ptr %4226, align 4, !tbaa !5
  %4227 = add nuw nsw i64 %4196, 1
  %4228 = icmp eq i64 %4227, %3957
  br i1 %4228, label %4236, label %4195, !llvm.loop !1262

4229:                                             ; preds = %4191, %4221
  %4230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4231:                                             ; preds = %4204, %4213
  %4232 = phi ptr [ %4220, %4213 ], [ %4197, %4204 ]
  %4233 = phi i32 [ %4219, %4213 ], [ 1, %4204 ]
  %4234 = load i32, ptr %4232, align 4, !tbaa !5
  %4235 = add nsw i32 %4234, %4233
  store i32 %4235, ptr %4232, align 4, !tbaa !5
  br label %4236

4236:                                             ; preds = %4223, %4231, %4193, %4179
  %4237 = icmp eq i32 %4185, %5
  br i1 %4237, label %5442, label %4101, !llvm.loop !1263

4238:                                             ; preds = %3650
  %4239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

4240:                                             ; preds = %18
  %4241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4242 = load ptr, ptr %4241, align 8, !tbaa !9
  %4243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4244 = load ptr, ptr %4243, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4244, align 4, !tbaa !162
  %4245 = icmp eq i32 %13, 0
  br i1 %4245, label %4246, label %4248

4246:                                             ; preds = %4240
  %4247 = load float, ptr %4242, align 4, !tbaa !162
  store float %4247, ptr %4244, align 4, !tbaa !162
  br label %5442

4248:                                             ; preds = %4240
  switch i32 %1, label %4835 [
    i32 1, label %4249
    i32 0, label %4545
  ]

4249:                                             ; preds = %4248
  %4250 = getelementptr inbounds i32, ptr %3, i64 %19
  %4251 = load i32, ptr %4250, align 4, !tbaa !5
  %4252 = icmp eq i32 %4251, 0
  %4253 = icmp sgt i32 %5, 0
  br i1 %4252, label %4263, label %4254

4254:                                             ; preds = %4249
  br i1 %4253, label %4255, label %5442

4255:                                             ; preds = %4254
  %4256 = icmp sgt i32 %13, 1
  %4257 = icmp sgt i32 %13, 0
  %4258 = add i32 %13, -2
  %4259 = zext i32 %4258 to i64
  %4260 = zext i32 %13 to i64
  %4261 = add nuw i32 %5, 1
  %4262 = icmp eq i32 %13, 1
  br label %4409

4263:                                             ; preds = %4249
  br i1 %4253, label %4264, label %5442

4264:                                             ; preds = %4263
  %4265 = icmp sgt i32 %13, 1
  %4266 = icmp sgt i32 %13, 0
  %4267 = add i32 %13, -2
  %4268 = zext i32 %4267 to i64
  %4269 = zext i32 %13 to i64
  %4270 = add nuw i32 %5, 1
  %4271 = icmp eq i32 %13, 1
  br label %4272

4272:                                             ; preds = %4264, %4407
  %4273 = phi float [ 0.000000e+00, %4264 ], [ %4357, %4407 ]
  %4274 = phi i32 [ 0, %4264 ], [ %4359, %4407 ]
  %4275 = phi double [ 0.000000e+00, %4264 ], [ %4358, %4407 ]
  %4276 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4265, label %4277, label %4346

4277:                                             ; preds = %4272, %4336
  %4278 = phi i32 [ %4345, %4336 ], [ 0, %4272 ]
  %4279 = phi i64 [ %4287, %4336 ], [ %4269, %4272 ]
  %4280 = phi i64 [ %4344, %4336 ], [ %4268, %4272 ]
  %4281 = phi i32 [ %4342, %4336 ], [ %4276, %4272 ]
  %4282 = sub i32 %4267, %4278
  %4283 = tail call i32 @llvm.smin.i32(i32 %4282, i32 0)
  %4284 = sub i32 %4282, %4283
  %4285 = zext i32 %4284 to i64
  %4286 = add nuw nsw i64 %4285, 1
  %4287 = add nsw i64 %4279, -1
  %4288 = icmp ult i32 %4284, 31
  br i1 %4288, label %4324, label %4289

4289:                                             ; preds = %4277
  %4290 = and i64 %4286, 8589934560
  %4291 = sub i64 %4280, %4290
  br label %4292

4292:                                             ; preds = %4292, %4289
  %4293 = phi i64 [ 0, %4289 ], [ %4316, %4292 ]
  %4294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4289 ], [ %4312, %4292 ]
  %4295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4289 ], [ %4313, %4292 ]
  %4296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4289 ], [ %4314, %4292 ]
  %4297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4289 ], [ %4315, %4292 ]
  %4298 = sub i64 %4280, %4293
  %4299 = getelementptr inbounds i32, ptr %9, i64 %4298
  %4300 = getelementptr inbounds i32, ptr %4299, i64 -7
  %4301 = load <8 x i32>, ptr %4300, align 4, !tbaa !5
  %4302 = shufflevector <8 x i32> %4301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4303 = getelementptr inbounds i32, ptr %4299, i64 -15
  %4304 = load <8 x i32>, ptr %4303, align 4, !tbaa !5
  %4305 = shufflevector <8 x i32> %4304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4306 = getelementptr inbounds i32, ptr %4299, i64 -23
  %4307 = load <8 x i32>, ptr %4306, align 4, !tbaa !5
  %4308 = shufflevector <8 x i32> %4307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4309 = getelementptr inbounds i32, ptr %4299, i64 -31
  %4310 = load <8 x i32>, ptr %4309, align 4, !tbaa !5
  %4311 = shufflevector <8 x i32> %4310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4312 = mul <8 x i32> %4302, %4294
  %4313 = mul <8 x i32> %4305, %4295
  %4314 = mul <8 x i32> %4308, %4296
  %4315 = mul <8 x i32> %4311, %4297
  %4316 = add nuw i64 %4293, 32
  %4317 = icmp eq i64 %4316, %4290
  br i1 %4317, label %4318, label %4292, !llvm.loop !1264

4318:                                             ; preds = %4292
  %4319 = mul <8 x i32> %4313, %4312
  %4320 = mul <8 x i32> %4314, %4319
  %4321 = mul <8 x i32> %4315, %4320
  %4322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4321)
  %4323 = icmp eq i64 %4286, %4290
  br i1 %4323, label %4336, label %4324

4324:                                             ; preds = %4277, %4318
  %4325 = phi i64 [ %4280, %4277 ], [ %4291, %4318 ]
  %4326 = phi i32 [ 1, %4277 ], [ %4322, %4318 ]
  br label %4327

4327:                                             ; preds = %4324, %4327
  %4328 = phi i64 [ %4333, %4327 ], [ %4325, %4324 ]
  %4329 = phi i32 [ %4332, %4327 ], [ %4326, %4324 ]
  %4330 = getelementptr inbounds i32, ptr %9, i64 %4328
  %4331 = load i32, ptr %4330, align 4, !tbaa !5
  %4332 = mul nsw i32 %4331, %4329
  %4333 = add nsw i64 %4328, -1
  %4334 = trunc i64 %4328 to i32
  %4335 = icmp sgt i32 %4334, 0
  br i1 %4335, label %4327, label %4336, !llvm.loop !1265

4336:                                             ; preds = %4327, %4318
  %4337 = phi i32 [ %4322, %4318 ], [ %4332, %4327 ]
  %4338 = and i64 %4287, 4294967295
  %4339 = getelementptr inbounds i32, ptr %6, i64 %4338
  %4340 = load i32, ptr %4339, align 4, !tbaa !5
  %4341 = mul nsw i32 %4340, %4337
  %4342 = add nsw i32 %4341, %4281
  %4343 = icmp sgt i64 %4279, 2
  %4344 = add nsw i64 %4280, -1
  %4345 = add i32 %4278, 1
  br i1 %4343, label %4277, label %4346, !llvm.loop !1266

4346:                                             ; preds = %4336, %4272
  %4347 = phi i32 [ %4276, %4272 ], [ %4342, %4336 ]
  %4348 = sext i32 %4347 to i64
  %4349 = getelementptr inbounds double, ptr %2, i64 %4348
  %4350 = load double, ptr %4349, align 8, !tbaa !18
  %4351 = getelementptr inbounds float, ptr %4242, i64 %4348
  %4352 = load float, ptr %4351, align 4, !tbaa !162
  %4353 = fpext float %4273 to double
  %4354 = fpext float %4352 to double
  %4355 = fmul fast double %4350, %4354
  %4356 = fadd fast double %4355, %4353
  %4357 = fptrunc double %4356 to float
  store float %4357, ptr %4244, align 4, !tbaa !162
  %4358 = fadd fast double %4350, %4275
  %4359 = add nuw nsw i32 %4274, 1
  br i1 %4266, label %4360, label %4407

4360:                                             ; preds = %4346
  %4361 = load i32, ptr %4, align 4, !tbaa !5
  %4362 = load i32, ptr %12, align 4, !tbaa !5
  %4363 = add nsw i32 %4362, -1
  %4364 = icmp slt i32 %4361, %4363
  br i1 %4364, label %4384, label %4365

4365:                                             ; preds = %4360
  %4366 = icmp eq i32 %4361, %4363
  br i1 %4366, label %4367, label %4400

4367:                                             ; preds = %4365
  store i32 0, ptr %4, align 4, !tbaa !5
  %4368 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4368, ptr %6, align 4, !tbaa !5
  br i1 %4271, label %4407, label %4369

4369:                                             ; preds = %4367, %4394
  %4370 = phi i64 [ %4398, %4394 ], [ 1, %4367 ]
  %4371 = getelementptr inbounds i32, ptr %4, i64 %4370
  %4372 = load i32, ptr %4371, align 4, !tbaa !5
  %4373 = getelementptr inbounds i32, ptr %12, i64 %4370
  %4374 = load i32, ptr %4373, align 4, !tbaa !5
  %4375 = add nsw i32 %4374, -1
  %4376 = icmp slt i32 %4372, %4375
  br i1 %4376, label %4377, label %4392

4377:                                             ; preds = %4369
  br i1 %4364, label %4384, label %4378

4378:                                             ; preds = %4377
  %4379 = getelementptr inbounds i32, ptr %7, i64 %4370
  %4380 = load i32, ptr %4379, align 4, !tbaa !5
  %4381 = getelementptr inbounds i32, ptr %6, i64 %4370
  %4382 = load i32, ptr %4381, align 4, !tbaa !5
  %4383 = add nsw i32 %4382, %4380
  store i32 %4383, ptr %4381, align 4, !tbaa !5
  br label %4402

4384:                                             ; preds = %4360, %4377
  %4385 = phi i32 [ %4372, %4377 ], [ %4361, %4360 ]
  %4386 = phi ptr [ %4371, %4377 ], [ %4, %4360 ]
  %4387 = phi i64 [ %4370, %4377 ], [ 0, %4360 ]
  %4388 = add nsw i32 %4385, 1
  store i32 %4388, ptr %4386, align 4, !tbaa !5
  %4389 = getelementptr inbounds i32, ptr %7, i64 %4387
  %4390 = load i32, ptr %4389, align 4, !tbaa !5
  %4391 = getelementptr inbounds i32, ptr %6, i64 %4387
  br label %4402

4392:                                             ; preds = %4369
  %4393 = icmp eq i32 %4372, %4375
  br i1 %4393, label %4394, label %4400

4394:                                             ; preds = %4392
  store i32 0, ptr %4371, align 4, !tbaa !5
  %4395 = getelementptr inbounds i32, ptr %8, i64 %4370
  %4396 = load i32, ptr %4395, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %6, i64 %4370
  store i32 %4396, ptr %4397, align 4, !tbaa !5
  %4398 = add nuw nsw i64 %4370, 1
  %4399 = icmp eq i64 %4398, %4269
  br i1 %4399, label %4407, label %4369, !llvm.loop !1267

4400:                                             ; preds = %4365, %4392
  %4401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4402:                                             ; preds = %4378, %4384
  %4403 = phi ptr [ %4391, %4384 ], [ %4371, %4378 ]
  %4404 = phi i32 [ %4390, %4384 ], [ 1, %4378 ]
  %4405 = load i32, ptr %4403, align 4, !tbaa !5
  %4406 = add nsw i32 %4405, %4404
  store i32 %4406, ptr %4403, align 4, !tbaa !5
  br label %4407

4407:                                             ; preds = %4394, %4402, %4367, %4346
  %4408 = icmp eq i32 %4359, %5
  br i1 %4408, label %5442, label %4272, !llvm.loop !1268

4409:                                             ; preds = %4255, %4543
  %4410 = phi float [ 0.000000e+00, %4255 ], [ %4491, %4543 ]
  %4411 = phi i32 [ 0, %4255 ], [ %4492, %4543 ]
  %4412 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4256, label %4413, label %4482

4413:                                             ; preds = %4409, %4472
  %4414 = phi i32 [ %4481, %4472 ], [ 0, %4409 ]
  %4415 = phi i64 [ %4423, %4472 ], [ %4260, %4409 ]
  %4416 = phi i64 [ %4480, %4472 ], [ %4259, %4409 ]
  %4417 = phi i32 [ %4478, %4472 ], [ %4412, %4409 ]
  %4418 = sub i32 %4258, %4414
  %4419 = tail call i32 @llvm.smin.i32(i32 %4418, i32 0)
  %4420 = sub i32 %4418, %4419
  %4421 = zext i32 %4420 to i64
  %4422 = add nuw nsw i64 %4421, 1
  %4423 = add nsw i64 %4415, -1
  %4424 = icmp ult i32 %4420, 31
  br i1 %4424, label %4460, label %4425

4425:                                             ; preds = %4413
  %4426 = and i64 %4422, 8589934560
  %4427 = sub i64 %4416, %4426
  br label %4428

4428:                                             ; preds = %4428, %4425
  %4429 = phi i64 [ 0, %4425 ], [ %4452, %4428 ]
  %4430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4425 ], [ %4448, %4428 ]
  %4431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4425 ], [ %4449, %4428 ]
  %4432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4425 ], [ %4450, %4428 ]
  %4433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4425 ], [ %4451, %4428 ]
  %4434 = sub i64 %4416, %4429
  %4435 = getelementptr inbounds i32, ptr %11, i64 %4434
  %4436 = getelementptr inbounds i32, ptr %4435, i64 -7
  %4437 = load <8 x i32>, ptr %4436, align 4, !tbaa !5
  %4438 = shufflevector <8 x i32> %4437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4439 = getelementptr inbounds i32, ptr %4435, i64 -15
  %4440 = load <8 x i32>, ptr %4439, align 4, !tbaa !5
  %4441 = shufflevector <8 x i32> %4440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4442 = getelementptr inbounds i32, ptr %4435, i64 -23
  %4443 = load <8 x i32>, ptr %4442, align 4, !tbaa !5
  %4444 = shufflevector <8 x i32> %4443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4445 = getelementptr inbounds i32, ptr %4435, i64 -31
  %4446 = load <8 x i32>, ptr %4445, align 4, !tbaa !5
  %4447 = shufflevector <8 x i32> %4446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4448 = mul <8 x i32> %4438, %4430
  %4449 = mul <8 x i32> %4441, %4431
  %4450 = mul <8 x i32> %4444, %4432
  %4451 = mul <8 x i32> %4447, %4433
  %4452 = add nuw i64 %4429, 32
  %4453 = icmp eq i64 %4452, %4426
  br i1 %4453, label %4454, label %4428, !llvm.loop !1269

4454:                                             ; preds = %4428
  %4455 = mul <8 x i32> %4449, %4448
  %4456 = mul <8 x i32> %4450, %4455
  %4457 = mul <8 x i32> %4451, %4456
  %4458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4457)
  %4459 = icmp eq i64 %4422, %4426
  br i1 %4459, label %4472, label %4460

4460:                                             ; preds = %4413, %4454
  %4461 = phi i64 [ %4416, %4413 ], [ %4427, %4454 ]
  %4462 = phi i32 [ 1, %4413 ], [ %4458, %4454 ]
  br label %4463

4463:                                             ; preds = %4460, %4463
  %4464 = phi i64 [ %4469, %4463 ], [ %4461, %4460 ]
  %4465 = phi i32 [ %4468, %4463 ], [ %4462, %4460 ]
  %4466 = getelementptr inbounds i32, ptr %11, i64 %4464
  %4467 = load i32, ptr %4466, align 4, !tbaa !5
  %4468 = mul nsw i32 %4467, %4465
  %4469 = add nsw i64 %4464, -1
  %4470 = trunc i64 %4464 to i32
  %4471 = icmp sgt i32 %4470, 0
  br i1 %4471, label %4463, label %4472, !llvm.loop !1270

4472:                                             ; preds = %4463, %4454
  %4473 = phi i32 [ %4458, %4454 ], [ %4468, %4463 ]
  %4474 = and i64 %4423, 4294967295
  %4475 = getelementptr inbounds i32, ptr %6, i64 %4474
  %4476 = load i32, ptr %4475, align 4, !tbaa !5
  %4477 = mul nsw i32 %4476, %4473
  %4478 = add nsw i32 %4477, %4417
  %4479 = icmp sgt i64 %4415, 2
  %4480 = add nsw i64 %4416, -1
  %4481 = add i32 %4414, 1
  br i1 %4479, label %4413, label %4482, !llvm.loop !1271

4482:                                             ; preds = %4472, %4409
  %4483 = phi i32 [ %4412, %4409 ], [ %4478, %4472 ]
  %4484 = icmp slt i32 %4483, %5
  br i1 %4484, label %4487, label %4485

4485:                                             ; preds = %4482
  %4486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

4487:                                             ; preds = %4482
  %4488 = sext i32 %4483 to i64
  %4489 = getelementptr inbounds float, ptr %4242, i64 %4488
  %4490 = load float, ptr %4489, align 4, !tbaa !162
  %4491 = fadd fast float %4410, %4490
  store float %4491, ptr %4244, align 4, !tbaa !162
  %4492 = add nuw nsw i32 %4411, 1
  br i1 %4257, label %4493, label %4543

4493:                                             ; preds = %4487
  %4494 = load i32, ptr %4, align 4, !tbaa !5
  %4495 = load i32, ptr %12, align 4, !tbaa !5
  %4496 = add nsw i32 %4495, -1
  %4497 = icmp slt i32 %4494, %4496
  br i1 %4497, label %4520, label %4498

4498:                                             ; preds = %4493
  %4499 = icmp eq i32 %4494, %4496
  br i1 %4499, label %4500, label %4536

4500:                                             ; preds = %4498
  store i32 0, ptr %4, align 4, !tbaa !5
  %4501 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4501, ptr %6, align 4, !tbaa !5
  br i1 %4262, label %4543, label %4502

4502:                                             ; preds = %4500, %4530
  %4503 = phi i64 [ %4534, %4530 ], [ 1, %4500 ]
  %4504 = getelementptr inbounds i32, ptr %4, i64 %4503
  %4505 = load i32, ptr %4504, align 4, !tbaa !5
  %4506 = getelementptr inbounds i32, ptr %12, i64 %4503
  %4507 = load i32, ptr %4506, align 4, !tbaa !5
  %4508 = add nsw i32 %4507, -1
  %4509 = icmp slt i32 %4505, %4508
  br i1 %4509, label %4510, label %4528

4510:                                             ; preds = %4502
  br i1 %4497, label %4520, label %4511

4511:                                             ; preds = %4510
  %4512 = shl i64 %4503, 32
  %4513 = add i64 %4512, -4294967296
  %4514 = ashr exact i64 %4513, 32
  %4515 = getelementptr inbounds i32, ptr %7, i64 %4514
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = getelementptr inbounds i32, ptr %6, i64 %4503
  %4518 = load i32, ptr %4517, align 4, !tbaa !5
  %4519 = add nsw i32 %4518, %4516
  store i32 %4519, ptr %4517, align 4, !tbaa !5
  br label %4538

4520:                                             ; preds = %4493, %4510
  %4521 = phi i32 [ %4505, %4510 ], [ %4494, %4493 ]
  %4522 = phi ptr [ %4504, %4510 ], [ %4, %4493 ]
  %4523 = phi i64 [ %4503, %4510 ], [ 0, %4493 ]
  %4524 = add nsw i32 %4521, 1
  store i32 %4524, ptr %4522, align 4, !tbaa !5
  %4525 = getelementptr inbounds i32, ptr %7, i64 %4523
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = getelementptr inbounds i32, ptr %6, i64 %4523
  br label %4538

4528:                                             ; preds = %4502
  %4529 = icmp eq i32 %4505, %4508
  br i1 %4529, label %4530, label %4536

4530:                                             ; preds = %4528
  store i32 0, ptr %4504, align 4, !tbaa !5
  %4531 = getelementptr inbounds i32, ptr %8, i64 %4503
  %4532 = load i32, ptr %4531, align 4, !tbaa !5
  %4533 = getelementptr inbounds i32, ptr %6, i64 %4503
  store i32 %4532, ptr %4533, align 4, !tbaa !5
  %4534 = add nuw nsw i64 %4503, 1
  %4535 = icmp eq i64 %4534, %4260
  br i1 %4535, label %4543, label %4502, !llvm.loop !1272

4536:                                             ; preds = %4498, %4528
  %4537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4538:                                             ; preds = %4511, %4520
  %4539 = phi ptr [ %4527, %4520 ], [ %4504, %4511 ]
  %4540 = phi i32 [ %4526, %4520 ], [ 1, %4511 ]
  %4541 = load i32, ptr %4539, align 4, !tbaa !5
  %4542 = add nsw i32 %4541, %4540
  store i32 %4542, ptr %4539, align 4, !tbaa !5
  br label %4543

4543:                                             ; preds = %4530, %4538, %4500, %4487
  %4544 = icmp eq i32 %4492, %5
  br i1 %4544, label %5442, label %4409, !llvm.loop !1273

4545:                                             ; preds = %4248
  %4546 = getelementptr inbounds i32, ptr %3, i64 %19
  %4547 = load i32, ptr %4546, align 4, !tbaa !5
  %4548 = icmp eq i32 %4547, 0
  %4549 = icmp sgt i32 %5, 0
  br i1 %4548, label %4559, label %4550

4550:                                             ; preds = %4545
  br i1 %4549, label %4551, label %5442

4551:                                             ; preds = %4550
  %4552 = icmp sgt i32 %13, 1
  %4553 = icmp sgt i32 %13, 0
  %4554 = add i32 %13, -2
  %4555 = zext i32 %4554 to i64
  %4556 = zext i32 %13 to i64
  %4557 = add nuw i32 %5, 1
  %4558 = icmp eq i32 %13, 1
  br label %4699

4559:                                             ; preds = %4545
  br i1 %4549, label %4560, label %5442

4560:                                             ; preds = %4559
  %4561 = icmp sgt i32 %13, 1
  %4562 = icmp sgt i32 %13, 0
  %4563 = add i32 %13, -2
  %4564 = zext i32 %4563 to i64
  %4565 = zext i32 %13 to i64
  %4566 = add nuw i32 %5, 1
  %4567 = icmp eq i32 %13, 1
  br label %4568

4568:                                             ; preds = %4560, %4697
  %4569 = phi float [ 0.000000e+00, %4560 ], [ %4647, %4697 ]
  %4570 = phi i32 [ 0, %4560 ], [ %4649, %4697 ]
  %4571 = phi double [ 0.000000e+00, %4560 ], [ %4648, %4697 ]
  %4572 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4561, label %4573, label %4642

4573:                                             ; preds = %4568, %4632
  %4574 = phi i32 [ %4641, %4632 ], [ 0, %4568 ]
  %4575 = phi i64 [ %4583, %4632 ], [ %4565, %4568 ]
  %4576 = phi i64 [ %4640, %4632 ], [ %4564, %4568 ]
  %4577 = phi i32 [ %4638, %4632 ], [ %4572, %4568 ]
  %4578 = sub i32 %4563, %4574
  %4579 = tail call i32 @llvm.smin.i32(i32 %4578, i32 0)
  %4580 = sub i32 %4578, %4579
  %4581 = zext i32 %4580 to i64
  %4582 = add nuw nsw i64 %4581, 1
  %4583 = add nsw i64 %4575, -1
  %4584 = icmp ult i32 %4580, 31
  br i1 %4584, label %4620, label %4585

4585:                                             ; preds = %4573
  %4586 = and i64 %4582, 8589934560
  %4587 = sub i64 %4576, %4586
  br label %4588

4588:                                             ; preds = %4588, %4585
  %4589 = phi i64 [ 0, %4585 ], [ %4612, %4588 ]
  %4590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4585 ], [ %4608, %4588 ]
  %4591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4585 ], [ %4609, %4588 ]
  %4592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4585 ], [ %4610, %4588 ]
  %4593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4585 ], [ %4611, %4588 ]
  %4594 = sub i64 %4576, %4589
  %4595 = getelementptr inbounds i32, ptr %9, i64 %4594
  %4596 = getelementptr inbounds i32, ptr %4595, i64 -7
  %4597 = load <8 x i32>, ptr %4596, align 4, !tbaa !5
  %4598 = shufflevector <8 x i32> %4597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4599 = getelementptr inbounds i32, ptr %4595, i64 -15
  %4600 = load <8 x i32>, ptr %4599, align 4, !tbaa !5
  %4601 = shufflevector <8 x i32> %4600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4602 = getelementptr inbounds i32, ptr %4595, i64 -23
  %4603 = load <8 x i32>, ptr %4602, align 4, !tbaa !5
  %4604 = shufflevector <8 x i32> %4603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4605 = getelementptr inbounds i32, ptr %4595, i64 -31
  %4606 = load <8 x i32>, ptr %4605, align 4, !tbaa !5
  %4607 = shufflevector <8 x i32> %4606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4608 = mul <8 x i32> %4598, %4590
  %4609 = mul <8 x i32> %4601, %4591
  %4610 = mul <8 x i32> %4604, %4592
  %4611 = mul <8 x i32> %4607, %4593
  %4612 = add nuw i64 %4589, 32
  %4613 = icmp eq i64 %4612, %4586
  br i1 %4613, label %4614, label %4588, !llvm.loop !1274

4614:                                             ; preds = %4588
  %4615 = mul <8 x i32> %4609, %4608
  %4616 = mul <8 x i32> %4610, %4615
  %4617 = mul <8 x i32> %4611, %4616
  %4618 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4617)
  %4619 = icmp eq i64 %4582, %4586
  br i1 %4619, label %4632, label %4620

4620:                                             ; preds = %4573, %4614
  %4621 = phi i64 [ %4576, %4573 ], [ %4587, %4614 ]
  %4622 = phi i32 [ 1, %4573 ], [ %4618, %4614 ]
  br label %4623

4623:                                             ; preds = %4620, %4623
  %4624 = phi i64 [ %4629, %4623 ], [ %4621, %4620 ]
  %4625 = phi i32 [ %4628, %4623 ], [ %4622, %4620 ]
  %4626 = getelementptr inbounds i32, ptr %9, i64 %4624
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = mul nsw i32 %4627, %4625
  %4629 = add nsw i64 %4624, -1
  %4630 = trunc i64 %4624 to i32
  %4631 = icmp sgt i32 %4630, 0
  br i1 %4631, label %4623, label %4632, !llvm.loop !1275

4632:                                             ; preds = %4623, %4614
  %4633 = phi i32 [ %4618, %4614 ], [ %4628, %4623 ]
  %4634 = and i64 %4583, 4294967295
  %4635 = getelementptr inbounds i32, ptr %6, i64 %4634
  %4636 = load i32, ptr %4635, align 4, !tbaa !5
  %4637 = mul nsw i32 %4636, %4633
  %4638 = add nsw i32 %4637, %4577
  %4639 = icmp sgt i64 %4575, 2
  %4640 = add nsw i64 %4576, -1
  %4641 = add i32 %4574, 1
  br i1 %4639, label %4573, label %4642, !llvm.loop !1276

4642:                                             ; preds = %4632, %4568
  %4643 = phi i32 [ %4572, %4568 ], [ %4638, %4632 ]
  %4644 = sext i32 %4643 to i64
  %4645 = getelementptr inbounds float, ptr %4242, i64 %4644
  %4646 = load float, ptr %4645, align 4, !tbaa !162
  %4647 = fadd fast float %4569, %4646
  store float %4647, ptr %4244, align 4, !tbaa !162
  %4648 = fadd fast double %4571, 1.000000e+00
  %4649 = add nuw nsw i32 %4570, 1
  br i1 %4562, label %4650, label %4697

4650:                                             ; preds = %4642
  %4651 = load i32, ptr %4, align 4, !tbaa !5
  %4652 = load i32, ptr %12, align 4, !tbaa !5
  %4653 = add nsw i32 %4652, -1
  %4654 = icmp slt i32 %4651, %4653
  br i1 %4654, label %4674, label %4655

4655:                                             ; preds = %4650
  %4656 = icmp eq i32 %4651, %4653
  br i1 %4656, label %4657, label %4690

4657:                                             ; preds = %4655
  store i32 0, ptr %4, align 4, !tbaa !5
  %4658 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4658, ptr %6, align 4, !tbaa !5
  br i1 %4567, label %4697, label %4659

4659:                                             ; preds = %4657, %4684
  %4660 = phi i64 [ %4688, %4684 ], [ 1, %4657 ]
  %4661 = getelementptr inbounds i32, ptr %4, i64 %4660
  %4662 = load i32, ptr %4661, align 4, !tbaa !5
  %4663 = getelementptr inbounds i32, ptr %12, i64 %4660
  %4664 = load i32, ptr %4663, align 4, !tbaa !5
  %4665 = add nsw i32 %4664, -1
  %4666 = icmp slt i32 %4662, %4665
  br i1 %4666, label %4667, label %4682

4667:                                             ; preds = %4659
  br i1 %4654, label %4674, label %4668

4668:                                             ; preds = %4667
  %4669 = getelementptr inbounds i32, ptr %7, i64 %4660
  %4670 = load i32, ptr %4669, align 4, !tbaa !5
  %4671 = getelementptr inbounds i32, ptr %6, i64 %4660
  %4672 = load i32, ptr %4671, align 4, !tbaa !5
  %4673 = add nsw i32 %4672, %4670
  store i32 %4673, ptr %4671, align 4, !tbaa !5
  br label %4692

4674:                                             ; preds = %4650, %4667
  %4675 = phi i32 [ %4662, %4667 ], [ %4651, %4650 ]
  %4676 = phi ptr [ %4661, %4667 ], [ %4, %4650 ]
  %4677 = phi i64 [ %4660, %4667 ], [ 0, %4650 ]
  %4678 = add nsw i32 %4675, 1
  store i32 %4678, ptr %4676, align 4, !tbaa !5
  %4679 = getelementptr inbounds i32, ptr %7, i64 %4677
  %4680 = load i32, ptr %4679, align 4, !tbaa !5
  %4681 = getelementptr inbounds i32, ptr %6, i64 %4677
  br label %4692

4682:                                             ; preds = %4659
  %4683 = icmp eq i32 %4662, %4665
  br i1 %4683, label %4684, label %4690

4684:                                             ; preds = %4682
  store i32 0, ptr %4661, align 4, !tbaa !5
  %4685 = getelementptr inbounds i32, ptr %8, i64 %4660
  %4686 = load i32, ptr %4685, align 4, !tbaa !5
  %4687 = getelementptr inbounds i32, ptr %6, i64 %4660
  store i32 %4686, ptr %4687, align 4, !tbaa !5
  %4688 = add nuw nsw i64 %4660, 1
  %4689 = icmp eq i64 %4688, %4565
  br i1 %4689, label %4697, label %4659, !llvm.loop !1277

4690:                                             ; preds = %4655, %4682
  %4691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4692:                                             ; preds = %4668, %4674
  %4693 = phi ptr [ %4681, %4674 ], [ %4661, %4668 ]
  %4694 = phi i32 [ %4680, %4674 ], [ 1, %4668 ]
  %4695 = load i32, ptr %4693, align 4, !tbaa !5
  %4696 = add nsw i32 %4695, %4694
  store i32 %4696, ptr %4693, align 4, !tbaa !5
  br label %4697

4697:                                             ; preds = %4684, %4692, %4657, %4642
  %4698 = icmp eq i32 %4649, %5
  br i1 %4698, label %5442, label %4568, !llvm.loop !1278

4699:                                             ; preds = %4551, %4833
  %4700 = phi float [ 0.000000e+00, %4551 ], [ %4781, %4833 ]
  %4701 = phi i32 [ 0, %4551 ], [ %4782, %4833 ]
  %4702 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4552, label %4703, label %4772

4703:                                             ; preds = %4699, %4762
  %4704 = phi i32 [ %4771, %4762 ], [ 0, %4699 ]
  %4705 = phi i64 [ %4713, %4762 ], [ %4556, %4699 ]
  %4706 = phi i64 [ %4770, %4762 ], [ %4555, %4699 ]
  %4707 = phi i32 [ %4768, %4762 ], [ %4702, %4699 ]
  %4708 = sub i32 %4554, %4704
  %4709 = tail call i32 @llvm.smin.i32(i32 %4708, i32 0)
  %4710 = sub i32 %4708, %4709
  %4711 = zext i32 %4710 to i64
  %4712 = add nuw nsw i64 %4711, 1
  %4713 = add nsw i64 %4705, -1
  %4714 = icmp ult i32 %4710, 31
  br i1 %4714, label %4750, label %4715

4715:                                             ; preds = %4703
  %4716 = and i64 %4712, 8589934560
  %4717 = sub i64 %4706, %4716
  br label %4718

4718:                                             ; preds = %4718, %4715
  %4719 = phi i64 [ 0, %4715 ], [ %4742, %4718 ]
  %4720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4738, %4718 ]
  %4721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4739, %4718 ]
  %4722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4740, %4718 ]
  %4723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4741, %4718 ]
  %4724 = sub i64 %4706, %4719
  %4725 = getelementptr inbounds i32, ptr %11, i64 %4724
  %4726 = getelementptr inbounds i32, ptr %4725, i64 -7
  %4727 = load <8 x i32>, ptr %4726, align 4, !tbaa !5
  %4728 = shufflevector <8 x i32> %4727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4729 = getelementptr inbounds i32, ptr %4725, i64 -15
  %4730 = load <8 x i32>, ptr %4729, align 4, !tbaa !5
  %4731 = shufflevector <8 x i32> %4730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4732 = getelementptr inbounds i32, ptr %4725, i64 -23
  %4733 = load <8 x i32>, ptr %4732, align 4, !tbaa !5
  %4734 = shufflevector <8 x i32> %4733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4735 = getelementptr inbounds i32, ptr %4725, i64 -31
  %4736 = load <8 x i32>, ptr %4735, align 4, !tbaa !5
  %4737 = shufflevector <8 x i32> %4736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4738 = mul <8 x i32> %4728, %4720
  %4739 = mul <8 x i32> %4731, %4721
  %4740 = mul <8 x i32> %4734, %4722
  %4741 = mul <8 x i32> %4737, %4723
  %4742 = add nuw i64 %4719, 32
  %4743 = icmp eq i64 %4742, %4716
  br i1 %4743, label %4744, label %4718, !llvm.loop !1279

4744:                                             ; preds = %4718
  %4745 = mul <8 x i32> %4739, %4738
  %4746 = mul <8 x i32> %4740, %4745
  %4747 = mul <8 x i32> %4741, %4746
  %4748 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4747)
  %4749 = icmp eq i64 %4712, %4716
  br i1 %4749, label %4762, label %4750

4750:                                             ; preds = %4703, %4744
  %4751 = phi i64 [ %4706, %4703 ], [ %4717, %4744 ]
  %4752 = phi i32 [ 1, %4703 ], [ %4748, %4744 ]
  br label %4753

4753:                                             ; preds = %4750, %4753
  %4754 = phi i64 [ %4759, %4753 ], [ %4751, %4750 ]
  %4755 = phi i32 [ %4758, %4753 ], [ %4752, %4750 ]
  %4756 = getelementptr inbounds i32, ptr %11, i64 %4754
  %4757 = load i32, ptr %4756, align 4, !tbaa !5
  %4758 = mul nsw i32 %4757, %4755
  %4759 = add nsw i64 %4754, -1
  %4760 = trunc i64 %4754 to i32
  %4761 = icmp sgt i32 %4760, 0
  br i1 %4761, label %4753, label %4762, !llvm.loop !1280

4762:                                             ; preds = %4753, %4744
  %4763 = phi i32 [ %4748, %4744 ], [ %4758, %4753 ]
  %4764 = and i64 %4713, 4294967295
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4764
  %4766 = load i32, ptr %4765, align 4, !tbaa !5
  %4767 = mul nsw i32 %4766, %4763
  %4768 = add nsw i32 %4767, %4707
  %4769 = icmp sgt i64 %4705, 2
  %4770 = add nsw i64 %4706, -1
  %4771 = add i32 %4704, 1
  br i1 %4769, label %4703, label %4772, !llvm.loop !1281

4772:                                             ; preds = %4762, %4699
  %4773 = phi i32 [ %4702, %4699 ], [ %4768, %4762 ]
  %4774 = icmp slt i32 %4773, %5
  br i1 %4774, label %4777, label %4775

4775:                                             ; preds = %4772
  %4776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

4777:                                             ; preds = %4772
  %4778 = sext i32 %4773 to i64
  %4779 = getelementptr inbounds float, ptr %4242, i64 %4778
  %4780 = load float, ptr %4779, align 4, !tbaa !162
  %4781 = fadd fast float %4700, %4780
  store float %4781, ptr %4244, align 4, !tbaa !162
  %4782 = add nuw nsw i32 %4701, 1
  br i1 %4553, label %4783, label %4833

4783:                                             ; preds = %4777
  %4784 = load i32, ptr %4, align 4, !tbaa !5
  %4785 = load i32, ptr %12, align 4, !tbaa !5
  %4786 = add nsw i32 %4785, -1
  %4787 = icmp slt i32 %4784, %4786
  br i1 %4787, label %4810, label %4788

4788:                                             ; preds = %4783
  %4789 = icmp eq i32 %4784, %4786
  br i1 %4789, label %4790, label %4826

4790:                                             ; preds = %4788
  store i32 0, ptr %4, align 4, !tbaa !5
  %4791 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4791, ptr %6, align 4, !tbaa !5
  br i1 %4558, label %4833, label %4792

4792:                                             ; preds = %4790, %4820
  %4793 = phi i64 [ %4824, %4820 ], [ 1, %4790 ]
  %4794 = getelementptr inbounds i32, ptr %4, i64 %4793
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %12, i64 %4793
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = add nsw i32 %4797, -1
  %4799 = icmp slt i32 %4795, %4798
  br i1 %4799, label %4800, label %4818

4800:                                             ; preds = %4792
  br i1 %4787, label %4810, label %4801

4801:                                             ; preds = %4800
  %4802 = shl i64 %4793, 32
  %4803 = add i64 %4802, -4294967296
  %4804 = ashr exact i64 %4803, 32
  %4805 = getelementptr inbounds i32, ptr %7, i64 %4804
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = getelementptr inbounds i32, ptr %6, i64 %4793
  %4808 = load i32, ptr %4807, align 4, !tbaa !5
  %4809 = add nsw i32 %4808, %4806
  store i32 %4809, ptr %4807, align 4, !tbaa !5
  br label %4828

4810:                                             ; preds = %4783, %4800
  %4811 = phi i32 [ %4795, %4800 ], [ %4784, %4783 ]
  %4812 = phi ptr [ %4794, %4800 ], [ %4, %4783 ]
  %4813 = phi i64 [ %4793, %4800 ], [ 0, %4783 ]
  %4814 = add nsw i32 %4811, 1
  store i32 %4814, ptr %4812, align 4, !tbaa !5
  %4815 = getelementptr inbounds i32, ptr %7, i64 %4813
  %4816 = load i32, ptr %4815, align 4, !tbaa !5
  %4817 = getelementptr inbounds i32, ptr %6, i64 %4813
  br label %4828

4818:                                             ; preds = %4792
  %4819 = icmp eq i32 %4795, %4798
  br i1 %4819, label %4820, label %4826

4820:                                             ; preds = %4818
  store i32 0, ptr %4794, align 4, !tbaa !5
  %4821 = getelementptr inbounds i32, ptr %8, i64 %4793
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = getelementptr inbounds i32, ptr %6, i64 %4793
  store i32 %4822, ptr %4823, align 4, !tbaa !5
  %4824 = add nuw nsw i64 %4793, 1
  %4825 = icmp eq i64 %4824, %4556
  br i1 %4825, label %4833, label %4792, !llvm.loop !1282

4826:                                             ; preds = %4788, %4818
  %4827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4828:                                             ; preds = %4801, %4810
  %4829 = phi ptr [ %4817, %4810 ], [ %4794, %4801 ]
  %4830 = phi i32 [ %4816, %4810 ], [ 1, %4801 ]
  %4831 = load i32, ptr %4829, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, %4830
  store i32 %4832, ptr %4829, align 4, !tbaa !5
  br label %4833

4833:                                             ; preds = %4820, %4828, %4790, %4777
  %4834 = icmp eq i32 %4782, %5
  br i1 %4834, label %5442, label %4699, !llvm.loop !1283

4835:                                             ; preds = %4248
  %4836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

4837:                                             ; preds = %18
  %4838 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4839 = load ptr, ptr %4838, align 8, !tbaa !9
  %4840 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4841 = load ptr, ptr %4840, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4841, align 8, !tbaa !18
  %4842 = icmp eq i32 %13, 0
  br i1 %4842, label %4843, label %4846

4843:                                             ; preds = %4837
  %4844 = load float, ptr %4839, align 4, !tbaa !162
  %4845 = fpext float %4844 to double
  store double %4845, ptr %4841, align 8, !tbaa !18
  br label %5442

4846:                                             ; preds = %4837
  switch i32 %1, label %5434 [
    i32 1, label %4847
    i32 0, label %5142
  ]

4847:                                             ; preds = %4846
  %4848 = getelementptr inbounds i32, ptr %3, i64 %19
  %4849 = load i32, ptr %4848, align 4, !tbaa !5
  %4850 = icmp eq i32 %4849, 0
  %4851 = icmp sgt i32 %5, 0
  br i1 %4850, label %4861, label %4852

4852:                                             ; preds = %4847
  br i1 %4851, label %4853, label %5442

4853:                                             ; preds = %4852
  %4854 = icmp sgt i32 %13, 1
  %4855 = icmp sgt i32 %13, 0
  %4856 = add i32 %13, -2
  %4857 = zext i32 %4856 to i64
  %4858 = zext i32 %13 to i64
  %4859 = add nuw i32 %5, 1
  %4860 = icmp eq i32 %13, 1
  br label %5005

4861:                                             ; preds = %4847
  br i1 %4851, label %4862, label %5442

4862:                                             ; preds = %4861
  %4863 = icmp sgt i32 %13, 1
  %4864 = icmp sgt i32 %13, 0
  %4865 = add i32 %13, -2
  %4866 = zext i32 %4865 to i64
  %4867 = zext i32 %13 to i64
  %4868 = add nuw i32 %5, 1
  %4869 = icmp eq i32 %13, 1
  br label %4870

4870:                                             ; preds = %4862, %5003
  %4871 = phi double [ 0.000000e+00, %4862 ], [ %4953, %5003 ]
  %4872 = phi i32 [ 0, %4862 ], [ %4955, %5003 ]
  %4873 = phi double [ 0.000000e+00, %4862 ], [ %4954, %5003 ]
  %4874 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4863, label %4875, label %4944

4875:                                             ; preds = %4870, %4934
  %4876 = phi i32 [ %4943, %4934 ], [ 0, %4870 ]
  %4877 = phi i64 [ %4885, %4934 ], [ %4867, %4870 ]
  %4878 = phi i64 [ %4942, %4934 ], [ %4866, %4870 ]
  %4879 = phi i32 [ %4940, %4934 ], [ %4874, %4870 ]
  %4880 = sub i32 %4865, %4876
  %4881 = tail call i32 @llvm.smin.i32(i32 %4880, i32 0)
  %4882 = sub i32 %4880, %4881
  %4883 = zext i32 %4882 to i64
  %4884 = add nuw nsw i64 %4883, 1
  %4885 = add nsw i64 %4877, -1
  %4886 = icmp ult i32 %4882, 31
  br i1 %4886, label %4922, label %4887

4887:                                             ; preds = %4875
  %4888 = and i64 %4884, 8589934560
  %4889 = sub i64 %4878, %4888
  br label %4890

4890:                                             ; preds = %4890, %4887
  %4891 = phi i64 [ 0, %4887 ], [ %4914, %4890 ]
  %4892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4887 ], [ %4910, %4890 ]
  %4893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4887 ], [ %4911, %4890 ]
  %4894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4887 ], [ %4912, %4890 ]
  %4895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4887 ], [ %4913, %4890 ]
  %4896 = sub i64 %4878, %4891
  %4897 = getelementptr inbounds i32, ptr %9, i64 %4896
  %4898 = getelementptr inbounds i32, ptr %4897, i64 -7
  %4899 = load <8 x i32>, ptr %4898, align 4, !tbaa !5
  %4900 = shufflevector <8 x i32> %4899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4901 = getelementptr inbounds i32, ptr %4897, i64 -15
  %4902 = load <8 x i32>, ptr %4901, align 4, !tbaa !5
  %4903 = shufflevector <8 x i32> %4902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4904 = getelementptr inbounds i32, ptr %4897, i64 -23
  %4905 = load <8 x i32>, ptr %4904, align 4, !tbaa !5
  %4906 = shufflevector <8 x i32> %4905, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4907 = getelementptr inbounds i32, ptr %4897, i64 -31
  %4908 = load <8 x i32>, ptr %4907, align 4, !tbaa !5
  %4909 = shufflevector <8 x i32> %4908, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4910 = mul <8 x i32> %4900, %4892
  %4911 = mul <8 x i32> %4903, %4893
  %4912 = mul <8 x i32> %4906, %4894
  %4913 = mul <8 x i32> %4909, %4895
  %4914 = add nuw i64 %4891, 32
  %4915 = icmp eq i64 %4914, %4888
  br i1 %4915, label %4916, label %4890, !llvm.loop !1284

4916:                                             ; preds = %4890
  %4917 = mul <8 x i32> %4911, %4910
  %4918 = mul <8 x i32> %4912, %4917
  %4919 = mul <8 x i32> %4913, %4918
  %4920 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4919)
  %4921 = icmp eq i64 %4884, %4888
  br i1 %4921, label %4934, label %4922

4922:                                             ; preds = %4875, %4916
  %4923 = phi i64 [ %4878, %4875 ], [ %4889, %4916 ]
  %4924 = phi i32 [ 1, %4875 ], [ %4920, %4916 ]
  br label %4925

4925:                                             ; preds = %4922, %4925
  %4926 = phi i64 [ %4931, %4925 ], [ %4923, %4922 ]
  %4927 = phi i32 [ %4930, %4925 ], [ %4924, %4922 ]
  %4928 = getelementptr inbounds i32, ptr %9, i64 %4926
  %4929 = load i32, ptr %4928, align 4, !tbaa !5
  %4930 = mul nsw i32 %4929, %4927
  %4931 = add nsw i64 %4926, -1
  %4932 = trunc i64 %4926 to i32
  %4933 = icmp sgt i32 %4932, 0
  br i1 %4933, label %4925, label %4934, !llvm.loop !1285

4934:                                             ; preds = %4925, %4916
  %4935 = phi i32 [ %4920, %4916 ], [ %4930, %4925 ]
  %4936 = and i64 %4885, 4294967295
  %4937 = getelementptr inbounds i32, ptr %6, i64 %4936
  %4938 = load i32, ptr %4937, align 4, !tbaa !5
  %4939 = mul nsw i32 %4938, %4935
  %4940 = add nsw i32 %4939, %4879
  %4941 = icmp sgt i64 %4877, 2
  %4942 = add nsw i64 %4878, -1
  %4943 = add i32 %4876, 1
  br i1 %4941, label %4875, label %4944, !llvm.loop !1286

4944:                                             ; preds = %4934, %4870
  %4945 = phi i32 [ %4874, %4870 ], [ %4940, %4934 ]
  %4946 = sext i32 %4945 to i64
  %4947 = getelementptr inbounds double, ptr %2, i64 %4946
  %4948 = load double, ptr %4947, align 8, !tbaa !18
  %4949 = getelementptr inbounds float, ptr %4839, i64 %4946
  %4950 = load float, ptr %4949, align 4, !tbaa !162
  %4951 = fpext float %4950 to double
  %4952 = fmul fast double %4948, %4951
  %4953 = fadd fast double %4952, %4871
  store double %4953, ptr %4841, align 8, !tbaa !18
  %4954 = fadd fast double %4948, %4873
  %4955 = add nuw nsw i32 %4872, 1
  br i1 %4864, label %4956, label %5003

4956:                                             ; preds = %4944
  %4957 = load i32, ptr %4, align 4, !tbaa !5
  %4958 = load i32, ptr %12, align 4, !tbaa !5
  %4959 = add nsw i32 %4958, -1
  %4960 = icmp slt i32 %4957, %4959
  br i1 %4960, label %4980, label %4961

4961:                                             ; preds = %4956
  %4962 = icmp eq i32 %4957, %4959
  br i1 %4962, label %4963, label %4996

4963:                                             ; preds = %4961
  store i32 0, ptr %4, align 4, !tbaa !5
  %4964 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4964, ptr %6, align 4, !tbaa !5
  br i1 %4869, label %5003, label %4965

4965:                                             ; preds = %4963, %4990
  %4966 = phi i64 [ %4994, %4990 ], [ 1, %4963 ]
  %4967 = getelementptr inbounds i32, ptr %4, i64 %4966
  %4968 = load i32, ptr %4967, align 4, !tbaa !5
  %4969 = getelementptr inbounds i32, ptr %12, i64 %4966
  %4970 = load i32, ptr %4969, align 4, !tbaa !5
  %4971 = add nsw i32 %4970, -1
  %4972 = icmp slt i32 %4968, %4971
  br i1 %4972, label %4973, label %4988

4973:                                             ; preds = %4965
  br i1 %4960, label %4980, label %4974

4974:                                             ; preds = %4973
  %4975 = getelementptr inbounds i32, ptr %7, i64 %4966
  %4976 = load i32, ptr %4975, align 4, !tbaa !5
  %4977 = getelementptr inbounds i32, ptr %6, i64 %4966
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = add nsw i32 %4978, %4976
  store i32 %4979, ptr %4977, align 4, !tbaa !5
  br label %4998

4980:                                             ; preds = %4956, %4973
  %4981 = phi i32 [ %4968, %4973 ], [ %4957, %4956 ]
  %4982 = phi ptr [ %4967, %4973 ], [ %4, %4956 ]
  %4983 = phi i64 [ %4966, %4973 ], [ 0, %4956 ]
  %4984 = add nsw i32 %4981, 1
  store i32 %4984, ptr %4982, align 4, !tbaa !5
  %4985 = getelementptr inbounds i32, ptr %7, i64 %4983
  %4986 = load i32, ptr %4985, align 4, !tbaa !5
  %4987 = getelementptr inbounds i32, ptr %6, i64 %4983
  br label %4998

4988:                                             ; preds = %4965
  %4989 = icmp eq i32 %4968, %4971
  br i1 %4989, label %4990, label %4996

4990:                                             ; preds = %4988
  store i32 0, ptr %4967, align 4, !tbaa !5
  %4991 = getelementptr inbounds i32, ptr %8, i64 %4966
  %4992 = load i32, ptr %4991, align 4, !tbaa !5
  %4993 = getelementptr inbounds i32, ptr %6, i64 %4966
  store i32 %4992, ptr %4993, align 4, !tbaa !5
  %4994 = add nuw nsw i64 %4966, 1
  %4995 = icmp eq i64 %4994, %4867
  br i1 %4995, label %5003, label %4965, !llvm.loop !1287

4996:                                             ; preds = %4961, %4988
  %4997 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

4998:                                             ; preds = %4974, %4980
  %4999 = phi ptr [ %4987, %4980 ], [ %4967, %4974 ]
  %5000 = phi i32 [ %4986, %4980 ], [ 1, %4974 ]
  %5001 = load i32, ptr %4999, align 4, !tbaa !5
  %5002 = add nsw i32 %5001, %5000
  store i32 %5002, ptr %4999, align 4, !tbaa !5
  br label %5003

5003:                                             ; preds = %4990, %4998, %4963, %4944
  %5004 = icmp eq i32 %4955, %5
  br i1 %5004, label %5442, label %4870, !llvm.loop !1288

5005:                                             ; preds = %4853, %5140
  %5006 = phi double [ 0.000000e+00, %4853 ], [ %5088, %5140 ]
  %5007 = phi i32 [ 0, %4853 ], [ %5089, %5140 ]
  %5008 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4854, label %5009, label %5078

5009:                                             ; preds = %5005, %5068
  %5010 = phi i32 [ %5077, %5068 ], [ 0, %5005 ]
  %5011 = phi i64 [ %5019, %5068 ], [ %4858, %5005 ]
  %5012 = phi i64 [ %5076, %5068 ], [ %4857, %5005 ]
  %5013 = phi i32 [ %5074, %5068 ], [ %5008, %5005 ]
  %5014 = sub i32 %4856, %5010
  %5015 = tail call i32 @llvm.smin.i32(i32 %5014, i32 0)
  %5016 = sub i32 %5014, %5015
  %5017 = zext i32 %5016 to i64
  %5018 = add nuw nsw i64 %5017, 1
  %5019 = add nsw i64 %5011, -1
  %5020 = icmp ult i32 %5016, 31
  br i1 %5020, label %5056, label %5021

5021:                                             ; preds = %5009
  %5022 = and i64 %5018, 8589934560
  %5023 = sub i64 %5012, %5022
  br label %5024

5024:                                             ; preds = %5024, %5021
  %5025 = phi i64 [ 0, %5021 ], [ %5048, %5024 ]
  %5026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5021 ], [ %5044, %5024 ]
  %5027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5021 ], [ %5045, %5024 ]
  %5028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5021 ], [ %5046, %5024 ]
  %5029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5021 ], [ %5047, %5024 ]
  %5030 = sub i64 %5012, %5025
  %5031 = getelementptr inbounds i32, ptr %11, i64 %5030
  %5032 = getelementptr inbounds i32, ptr %5031, i64 -7
  %5033 = load <8 x i32>, ptr %5032, align 4, !tbaa !5
  %5034 = shufflevector <8 x i32> %5033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5035 = getelementptr inbounds i32, ptr %5031, i64 -15
  %5036 = load <8 x i32>, ptr %5035, align 4, !tbaa !5
  %5037 = shufflevector <8 x i32> %5036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5038 = getelementptr inbounds i32, ptr %5031, i64 -23
  %5039 = load <8 x i32>, ptr %5038, align 4, !tbaa !5
  %5040 = shufflevector <8 x i32> %5039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5041 = getelementptr inbounds i32, ptr %5031, i64 -31
  %5042 = load <8 x i32>, ptr %5041, align 4, !tbaa !5
  %5043 = shufflevector <8 x i32> %5042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5044 = mul <8 x i32> %5034, %5026
  %5045 = mul <8 x i32> %5037, %5027
  %5046 = mul <8 x i32> %5040, %5028
  %5047 = mul <8 x i32> %5043, %5029
  %5048 = add nuw i64 %5025, 32
  %5049 = icmp eq i64 %5048, %5022
  br i1 %5049, label %5050, label %5024, !llvm.loop !1289

5050:                                             ; preds = %5024
  %5051 = mul <8 x i32> %5045, %5044
  %5052 = mul <8 x i32> %5046, %5051
  %5053 = mul <8 x i32> %5047, %5052
  %5054 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5053)
  %5055 = icmp eq i64 %5018, %5022
  br i1 %5055, label %5068, label %5056

5056:                                             ; preds = %5009, %5050
  %5057 = phi i64 [ %5012, %5009 ], [ %5023, %5050 ]
  %5058 = phi i32 [ 1, %5009 ], [ %5054, %5050 ]
  br label %5059

5059:                                             ; preds = %5056, %5059
  %5060 = phi i64 [ %5065, %5059 ], [ %5057, %5056 ]
  %5061 = phi i32 [ %5064, %5059 ], [ %5058, %5056 ]
  %5062 = getelementptr inbounds i32, ptr %11, i64 %5060
  %5063 = load i32, ptr %5062, align 4, !tbaa !5
  %5064 = mul nsw i32 %5063, %5061
  %5065 = add nsw i64 %5060, -1
  %5066 = trunc i64 %5060 to i32
  %5067 = icmp sgt i32 %5066, 0
  br i1 %5067, label %5059, label %5068, !llvm.loop !1290

5068:                                             ; preds = %5059, %5050
  %5069 = phi i32 [ %5054, %5050 ], [ %5064, %5059 ]
  %5070 = and i64 %5019, 4294967295
  %5071 = getelementptr inbounds i32, ptr %6, i64 %5070
  %5072 = load i32, ptr %5071, align 4, !tbaa !5
  %5073 = mul nsw i32 %5072, %5069
  %5074 = add nsw i32 %5073, %5013
  %5075 = icmp sgt i64 %5011, 2
  %5076 = add nsw i64 %5012, -1
  %5077 = add i32 %5010, 1
  br i1 %5075, label %5009, label %5078, !llvm.loop !1291

5078:                                             ; preds = %5068, %5005
  %5079 = phi i32 [ %5008, %5005 ], [ %5074, %5068 ]
  %5080 = icmp slt i32 %5079, %5
  br i1 %5080, label %5083, label %5081

5081:                                             ; preds = %5078
  %5082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

5083:                                             ; preds = %5078
  %5084 = sext i32 %5079 to i64
  %5085 = getelementptr inbounds float, ptr %4839, i64 %5084
  %5086 = load float, ptr %5085, align 4, !tbaa !162
  %5087 = fpext float %5086 to double
  %5088 = fadd fast double %5006, %5087
  store double %5088, ptr %4841, align 8, !tbaa !18
  %5089 = add nuw nsw i32 %5007, 1
  br i1 %4855, label %5090, label %5140

5090:                                             ; preds = %5083
  %5091 = load i32, ptr %4, align 4, !tbaa !5
  %5092 = load i32, ptr %12, align 4, !tbaa !5
  %5093 = add nsw i32 %5092, -1
  %5094 = icmp slt i32 %5091, %5093
  br i1 %5094, label %5117, label %5095

5095:                                             ; preds = %5090
  %5096 = icmp eq i32 %5091, %5093
  br i1 %5096, label %5097, label %5133

5097:                                             ; preds = %5095
  store i32 0, ptr %4, align 4, !tbaa !5
  %5098 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5098, ptr %6, align 4, !tbaa !5
  br i1 %4860, label %5140, label %5099

5099:                                             ; preds = %5097, %5127
  %5100 = phi i64 [ %5131, %5127 ], [ 1, %5097 ]
  %5101 = getelementptr inbounds i32, ptr %4, i64 %5100
  %5102 = load i32, ptr %5101, align 4, !tbaa !5
  %5103 = getelementptr inbounds i32, ptr %12, i64 %5100
  %5104 = load i32, ptr %5103, align 4, !tbaa !5
  %5105 = add nsw i32 %5104, -1
  %5106 = icmp slt i32 %5102, %5105
  br i1 %5106, label %5107, label %5125

5107:                                             ; preds = %5099
  br i1 %5094, label %5117, label %5108

5108:                                             ; preds = %5107
  %5109 = shl i64 %5100, 32
  %5110 = add i64 %5109, -4294967296
  %5111 = ashr exact i64 %5110, 32
  %5112 = getelementptr inbounds i32, ptr %7, i64 %5111
  %5113 = load i32, ptr %5112, align 4, !tbaa !5
  %5114 = getelementptr inbounds i32, ptr %6, i64 %5100
  %5115 = load i32, ptr %5114, align 4, !tbaa !5
  %5116 = add nsw i32 %5115, %5113
  store i32 %5116, ptr %5114, align 4, !tbaa !5
  br label %5135

5117:                                             ; preds = %5090, %5107
  %5118 = phi i32 [ %5102, %5107 ], [ %5091, %5090 ]
  %5119 = phi ptr [ %5101, %5107 ], [ %4, %5090 ]
  %5120 = phi i64 [ %5100, %5107 ], [ 0, %5090 ]
  %5121 = add nsw i32 %5118, 1
  store i32 %5121, ptr %5119, align 4, !tbaa !5
  %5122 = getelementptr inbounds i32, ptr %7, i64 %5120
  %5123 = load i32, ptr %5122, align 4, !tbaa !5
  %5124 = getelementptr inbounds i32, ptr %6, i64 %5120
  br label %5135

5125:                                             ; preds = %5099
  %5126 = icmp eq i32 %5102, %5105
  br i1 %5126, label %5127, label %5133

5127:                                             ; preds = %5125
  store i32 0, ptr %5101, align 4, !tbaa !5
  %5128 = getelementptr inbounds i32, ptr %8, i64 %5100
  %5129 = load i32, ptr %5128, align 4, !tbaa !5
  %5130 = getelementptr inbounds i32, ptr %6, i64 %5100
  store i32 %5129, ptr %5130, align 4, !tbaa !5
  %5131 = add nuw nsw i64 %5100, 1
  %5132 = icmp eq i64 %5131, %4858
  br i1 %5132, label %5140, label %5099, !llvm.loop !1292

5133:                                             ; preds = %5095, %5125
  %5134 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

5135:                                             ; preds = %5108, %5117
  %5136 = phi ptr [ %5124, %5117 ], [ %5101, %5108 ]
  %5137 = phi i32 [ %5123, %5117 ], [ 1, %5108 ]
  %5138 = load i32, ptr %5136, align 4, !tbaa !5
  %5139 = add nsw i32 %5138, %5137
  store i32 %5139, ptr %5136, align 4, !tbaa !5
  br label %5140

5140:                                             ; preds = %5127, %5135, %5097, %5083
  %5141 = icmp eq i32 %5089, %5
  br i1 %5141, label %5442, label %5005, !llvm.loop !1293

5142:                                             ; preds = %4846
  %5143 = getelementptr inbounds i32, ptr %3, i64 %19
  %5144 = load i32, ptr %5143, align 4, !tbaa !5
  %5145 = icmp eq i32 %5144, 0
  %5146 = icmp sgt i32 %5, 0
  br i1 %5145, label %5156, label %5147

5147:                                             ; preds = %5142
  br i1 %5146, label %5148, label %5442

5148:                                             ; preds = %5147
  %5149 = icmp sgt i32 %13, 1
  %5150 = icmp sgt i32 %13, 0
  %5151 = add i32 %13, -2
  %5152 = zext i32 %5151 to i64
  %5153 = zext i32 %13 to i64
  %5154 = add nuw i32 %5, 1
  %5155 = icmp eq i32 %13, 1
  br label %5297

5156:                                             ; preds = %5142
  br i1 %5146, label %5157, label %5442

5157:                                             ; preds = %5156
  %5158 = icmp sgt i32 %13, 1
  %5159 = icmp sgt i32 %13, 0
  %5160 = add i32 %13, -2
  %5161 = zext i32 %5160 to i64
  %5162 = zext i32 %13 to i64
  %5163 = add nuw i32 %5, 1
  %5164 = icmp eq i32 %13, 1
  br label %5165

5165:                                             ; preds = %5157, %5295
  %5166 = phi double [ 0.000000e+00, %5157 ], [ %5245, %5295 ]
  %5167 = phi i32 [ 0, %5157 ], [ %5247, %5295 ]
  %5168 = phi double [ 0.000000e+00, %5157 ], [ %5246, %5295 ]
  %5169 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5158, label %5170, label %5239

5170:                                             ; preds = %5165, %5229
  %5171 = phi i32 [ %5238, %5229 ], [ 0, %5165 ]
  %5172 = phi i64 [ %5180, %5229 ], [ %5162, %5165 ]
  %5173 = phi i64 [ %5237, %5229 ], [ %5161, %5165 ]
  %5174 = phi i32 [ %5235, %5229 ], [ %5169, %5165 ]
  %5175 = sub i32 %5160, %5171
  %5176 = tail call i32 @llvm.smin.i32(i32 %5175, i32 0)
  %5177 = sub i32 %5175, %5176
  %5178 = zext i32 %5177 to i64
  %5179 = add nuw nsw i64 %5178, 1
  %5180 = add nsw i64 %5172, -1
  %5181 = icmp ult i32 %5177, 31
  br i1 %5181, label %5217, label %5182

5182:                                             ; preds = %5170
  %5183 = and i64 %5179, 8589934560
  %5184 = sub i64 %5173, %5183
  br label %5185

5185:                                             ; preds = %5185, %5182
  %5186 = phi i64 [ 0, %5182 ], [ %5209, %5185 ]
  %5187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5182 ], [ %5205, %5185 ]
  %5188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5182 ], [ %5206, %5185 ]
  %5189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5182 ], [ %5207, %5185 ]
  %5190 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5182 ], [ %5208, %5185 ]
  %5191 = sub i64 %5173, %5186
  %5192 = getelementptr inbounds i32, ptr %9, i64 %5191
  %5193 = getelementptr inbounds i32, ptr %5192, i64 -7
  %5194 = load <8 x i32>, ptr %5193, align 4, !tbaa !5
  %5195 = shufflevector <8 x i32> %5194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5196 = getelementptr inbounds i32, ptr %5192, i64 -15
  %5197 = load <8 x i32>, ptr %5196, align 4, !tbaa !5
  %5198 = shufflevector <8 x i32> %5197, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5199 = getelementptr inbounds i32, ptr %5192, i64 -23
  %5200 = load <8 x i32>, ptr %5199, align 4, !tbaa !5
  %5201 = shufflevector <8 x i32> %5200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5202 = getelementptr inbounds i32, ptr %5192, i64 -31
  %5203 = load <8 x i32>, ptr %5202, align 4, !tbaa !5
  %5204 = shufflevector <8 x i32> %5203, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5205 = mul <8 x i32> %5195, %5187
  %5206 = mul <8 x i32> %5198, %5188
  %5207 = mul <8 x i32> %5201, %5189
  %5208 = mul <8 x i32> %5204, %5190
  %5209 = add nuw i64 %5186, 32
  %5210 = icmp eq i64 %5209, %5183
  br i1 %5210, label %5211, label %5185, !llvm.loop !1294

5211:                                             ; preds = %5185
  %5212 = mul <8 x i32> %5206, %5205
  %5213 = mul <8 x i32> %5207, %5212
  %5214 = mul <8 x i32> %5208, %5213
  %5215 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5214)
  %5216 = icmp eq i64 %5179, %5183
  br i1 %5216, label %5229, label %5217

5217:                                             ; preds = %5170, %5211
  %5218 = phi i64 [ %5173, %5170 ], [ %5184, %5211 ]
  %5219 = phi i32 [ 1, %5170 ], [ %5215, %5211 ]
  br label %5220

5220:                                             ; preds = %5217, %5220
  %5221 = phi i64 [ %5226, %5220 ], [ %5218, %5217 ]
  %5222 = phi i32 [ %5225, %5220 ], [ %5219, %5217 ]
  %5223 = getelementptr inbounds i32, ptr %9, i64 %5221
  %5224 = load i32, ptr %5223, align 4, !tbaa !5
  %5225 = mul nsw i32 %5224, %5222
  %5226 = add nsw i64 %5221, -1
  %5227 = trunc i64 %5221 to i32
  %5228 = icmp sgt i32 %5227, 0
  br i1 %5228, label %5220, label %5229, !llvm.loop !1295

5229:                                             ; preds = %5220, %5211
  %5230 = phi i32 [ %5215, %5211 ], [ %5225, %5220 ]
  %5231 = and i64 %5180, 4294967295
  %5232 = getelementptr inbounds i32, ptr %6, i64 %5231
  %5233 = load i32, ptr %5232, align 4, !tbaa !5
  %5234 = mul nsw i32 %5233, %5230
  %5235 = add nsw i32 %5234, %5174
  %5236 = icmp sgt i64 %5172, 2
  %5237 = add nsw i64 %5173, -1
  %5238 = add i32 %5171, 1
  br i1 %5236, label %5170, label %5239, !llvm.loop !1296

5239:                                             ; preds = %5229, %5165
  %5240 = phi i32 [ %5169, %5165 ], [ %5235, %5229 ]
  %5241 = sext i32 %5240 to i64
  %5242 = getelementptr inbounds float, ptr %4839, i64 %5241
  %5243 = load float, ptr %5242, align 4, !tbaa !162
  %5244 = fpext float %5243 to double
  %5245 = fadd fast double %5166, %5244
  %5246 = fadd fast double %5168, 1.000000e+00
  %5247 = add nuw nsw i32 %5167, 1
  br i1 %5159, label %5248, label %5295

5248:                                             ; preds = %5239
  %5249 = load i32, ptr %4, align 4, !tbaa !5
  %5250 = load i32, ptr %12, align 4, !tbaa !5
  %5251 = add nsw i32 %5250, -1
  %5252 = icmp slt i32 %5249, %5251
  br i1 %5252, label %5272, label %5253

5253:                                             ; preds = %5248
  %5254 = icmp eq i32 %5249, %5251
  br i1 %5254, label %5255, label %5288

5255:                                             ; preds = %5253
  store i32 0, ptr %4, align 4, !tbaa !5
  %5256 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5256, ptr %6, align 4, !tbaa !5
  br i1 %5164, label %5295, label %5257

5257:                                             ; preds = %5255, %5282
  %5258 = phi i64 [ %5286, %5282 ], [ 1, %5255 ]
  %5259 = getelementptr inbounds i32, ptr %4, i64 %5258
  %5260 = load i32, ptr %5259, align 4, !tbaa !5
  %5261 = getelementptr inbounds i32, ptr %12, i64 %5258
  %5262 = load i32, ptr %5261, align 4, !tbaa !5
  %5263 = add nsw i32 %5262, -1
  %5264 = icmp slt i32 %5260, %5263
  br i1 %5264, label %5265, label %5280

5265:                                             ; preds = %5257
  br i1 %5252, label %5272, label %5266

5266:                                             ; preds = %5265
  %5267 = getelementptr inbounds i32, ptr %7, i64 %5258
  %5268 = load i32, ptr %5267, align 4, !tbaa !5
  %5269 = getelementptr inbounds i32, ptr %6, i64 %5258
  %5270 = load i32, ptr %5269, align 4, !tbaa !5
  %5271 = add nsw i32 %5270, %5268
  store i32 %5271, ptr %5269, align 4, !tbaa !5
  br label %5290

5272:                                             ; preds = %5248, %5265
  %5273 = phi i32 [ %5260, %5265 ], [ %5249, %5248 ]
  %5274 = phi ptr [ %5259, %5265 ], [ %4, %5248 ]
  %5275 = phi i64 [ %5258, %5265 ], [ 0, %5248 ]
  %5276 = add nsw i32 %5273, 1
  store i32 %5276, ptr %5274, align 4, !tbaa !5
  %5277 = getelementptr inbounds i32, ptr %7, i64 %5275
  %5278 = load i32, ptr %5277, align 4, !tbaa !5
  %5279 = getelementptr inbounds i32, ptr %6, i64 %5275
  br label %5290

5280:                                             ; preds = %5257
  %5281 = icmp eq i32 %5260, %5263
  br i1 %5281, label %5282, label %5288

5282:                                             ; preds = %5280
  store i32 0, ptr %5259, align 4, !tbaa !5
  %5283 = getelementptr inbounds i32, ptr %8, i64 %5258
  %5284 = load i32, ptr %5283, align 4, !tbaa !5
  %5285 = getelementptr inbounds i32, ptr %6, i64 %5258
  store i32 %5284, ptr %5285, align 4, !tbaa !5
  %5286 = add nuw nsw i64 %5258, 1
  %5287 = icmp eq i64 %5286, %5162
  br i1 %5287, label %5295, label %5257, !llvm.loop !1297

5288:                                             ; preds = %5253, %5280
  store double %5245, ptr %4841, align 8, !tbaa !18
  %5289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

5290:                                             ; preds = %5266, %5272
  %5291 = phi ptr [ %5279, %5272 ], [ %5259, %5266 ]
  %5292 = phi i32 [ %5278, %5272 ], [ 1, %5266 ]
  %5293 = load i32, ptr %5291, align 4, !tbaa !5
  %5294 = add nsw i32 %5293, %5292
  store i32 %5294, ptr %5291, align 4, !tbaa !5
  br label %5295

5295:                                             ; preds = %5282, %5290, %5255, %5239
  %5296 = icmp eq i32 %5247, %5
  br i1 %5296, label %5441, label %5165, !llvm.loop !1298

5297:                                             ; preds = %5148, %5432
  %5298 = phi double [ 0.000000e+00, %5148 ], [ %5380, %5432 ]
  %5299 = phi i32 [ 0, %5148 ], [ %5381, %5432 ]
  %5300 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5149, label %5301, label %5370

5301:                                             ; preds = %5297, %5360
  %5302 = phi i32 [ %5369, %5360 ], [ 0, %5297 ]
  %5303 = phi i64 [ %5311, %5360 ], [ %5153, %5297 ]
  %5304 = phi i64 [ %5368, %5360 ], [ %5152, %5297 ]
  %5305 = phi i32 [ %5366, %5360 ], [ %5300, %5297 ]
  %5306 = sub i32 %5151, %5302
  %5307 = tail call i32 @llvm.smin.i32(i32 %5306, i32 0)
  %5308 = sub i32 %5306, %5307
  %5309 = zext i32 %5308 to i64
  %5310 = add nuw nsw i64 %5309, 1
  %5311 = add nsw i64 %5303, -1
  %5312 = icmp ult i32 %5308, 31
  br i1 %5312, label %5348, label %5313

5313:                                             ; preds = %5301
  %5314 = and i64 %5310, 8589934560
  %5315 = sub i64 %5304, %5314
  br label %5316

5316:                                             ; preds = %5316, %5313
  %5317 = phi i64 [ 0, %5313 ], [ %5340, %5316 ]
  %5318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5313 ], [ %5336, %5316 ]
  %5319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5313 ], [ %5337, %5316 ]
  %5320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5313 ], [ %5338, %5316 ]
  %5321 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5313 ], [ %5339, %5316 ]
  %5322 = sub i64 %5304, %5317
  %5323 = getelementptr inbounds i32, ptr %11, i64 %5322
  %5324 = getelementptr inbounds i32, ptr %5323, i64 -7
  %5325 = load <8 x i32>, ptr %5324, align 4, !tbaa !5
  %5326 = shufflevector <8 x i32> %5325, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5327 = getelementptr inbounds i32, ptr %5323, i64 -15
  %5328 = load <8 x i32>, ptr %5327, align 4, !tbaa !5
  %5329 = shufflevector <8 x i32> %5328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5330 = getelementptr inbounds i32, ptr %5323, i64 -23
  %5331 = load <8 x i32>, ptr %5330, align 4, !tbaa !5
  %5332 = shufflevector <8 x i32> %5331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5333 = getelementptr inbounds i32, ptr %5323, i64 -31
  %5334 = load <8 x i32>, ptr %5333, align 4, !tbaa !5
  %5335 = shufflevector <8 x i32> %5334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5336 = mul <8 x i32> %5326, %5318
  %5337 = mul <8 x i32> %5329, %5319
  %5338 = mul <8 x i32> %5332, %5320
  %5339 = mul <8 x i32> %5335, %5321
  %5340 = add nuw i64 %5317, 32
  %5341 = icmp eq i64 %5340, %5314
  br i1 %5341, label %5342, label %5316, !llvm.loop !1299

5342:                                             ; preds = %5316
  %5343 = mul <8 x i32> %5337, %5336
  %5344 = mul <8 x i32> %5338, %5343
  %5345 = mul <8 x i32> %5339, %5344
  %5346 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5345)
  %5347 = icmp eq i64 %5310, %5314
  br i1 %5347, label %5360, label %5348

5348:                                             ; preds = %5301, %5342
  %5349 = phi i64 [ %5304, %5301 ], [ %5315, %5342 ]
  %5350 = phi i32 [ 1, %5301 ], [ %5346, %5342 ]
  br label %5351

5351:                                             ; preds = %5348, %5351
  %5352 = phi i64 [ %5357, %5351 ], [ %5349, %5348 ]
  %5353 = phi i32 [ %5356, %5351 ], [ %5350, %5348 ]
  %5354 = getelementptr inbounds i32, ptr %11, i64 %5352
  %5355 = load i32, ptr %5354, align 4, !tbaa !5
  %5356 = mul nsw i32 %5355, %5353
  %5357 = add nsw i64 %5352, -1
  %5358 = trunc i64 %5352 to i32
  %5359 = icmp sgt i32 %5358, 0
  br i1 %5359, label %5351, label %5360, !llvm.loop !1300

5360:                                             ; preds = %5351, %5342
  %5361 = phi i32 [ %5346, %5342 ], [ %5356, %5351 ]
  %5362 = and i64 %5311, 4294967295
  %5363 = getelementptr inbounds i32, ptr %6, i64 %5362
  %5364 = load i32, ptr %5363, align 4, !tbaa !5
  %5365 = mul nsw i32 %5364, %5361
  %5366 = add nsw i32 %5365, %5305
  %5367 = icmp sgt i64 %5303, 2
  %5368 = add nsw i64 %5304, -1
  %5369 = add i32 %5302, 1
  br i1 %5367, label %5301, label %5370, !llvm.loop !1301

5370:                                             ; preds = %5360, %5297
  %5371 = phi i32 [ %5300, %5297 ], [ %5366, %5360 ]
  %5372 = icmp slt i32 %5371, %5
  br i1 %5372, label %5375, label %5373

5373:                                             ; preds = %5370
  %5374 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5447

5375:                                             ; preds = %5370
  %5376 = sext i32 %5371 to i64
  %5377 = getelementptr inbounds float, ptr %4839, i64 %5376
  %5378 = load float, ptr %5377, align 4, !tbaa !162
  %5379 = fpext float %5378 to double
  %5380 = fadd fast double %5298, %5379
  store double %5380, ptr %4841, align 8, !tbaa !18
  %5381 = add nuw nsw i32 %5299, 1
  br i1 %5150, label %5382, label %5432

5382:                                             ; preds = %5375
  %5383 = load i32, ptr %4, align 4, !tbaa !5
  %5384 = load i32, ptr %12, align 4, !tbaa !5
  %5385 = add nsw i32 %5384, -1
  %5386 = icmp slt i32 %5383, %5385
  br i1 %5386, label %5409, label %5387

5387:                                             ; preds = %5382
  %5388 = icmp eq i32 %5383, %5385
  br i1 %5388, label %5389, label %5425

5389:                                             ; preds = %5387
  store i32 0, ptr %4, align 4, !tbaa !5
  %5390 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5390, ptr %6, align 4, !tbaa !5
  br i1 %5155, label %5432, label %5391

5391:                                             ; preds = %5389, %5419
  %5392 = phi i64 [ %5423, %5419 ], [ 1, %5389 ]
  %5393 = getelementptr inbounds i32, ptr %4, i64 %5392
  %5394 = load i32, ptr %5393, align 4, !tbaa !5
  %5395 = getelementptr inbounds i32, ptr %12, i64 %5392
  %5396 = load i32, ptr %5395, align 4, !tbaa !5
  %5397 = add nsw i32 %5396, -1
  %5398 = icmp slt i32 %5394, %5397
  br i1 %5398, label %5399, label %5417

5399:                                             ; preds = %5391
  br i1 %5386, label %5409, label %5400

5400:                                             ; preds = %5399
  %5401 = shl i64 %5392, 32
  %5402 = add i64 %5401, -4294967296
  %5403 = ashr exact i64 %5402, 32
  %5404 = getelementptr inbounds i32, ptr %7, i64 %5403
  %5405 = load i32, ptr %5404, align 4, !tbaa !5
  %5406 = getelementptr inbounds i32, ptr %6, i64 %5392
  %5407 = load i32, ptr %5406, align 4, !tbaa !5
  %5408 = add nsw i32 %5407, %5405
  store i32 %5408, ptr %5406, align 4, !tbaa !5
  br label %5427

5409:                                             ; preds = %5382, %5399
  %5410 = phi i32 [ %5394, %5399 ], [ %5383, %5382 ]
  %5411 = phi ptr [ %5393, %5399 ], [ %4, %5382 ]
  %5412 = phi i64 [ %5392, %5399 ], [ 0, %5382 ]
  %5413 = add nsw i32 %5410, 1
  store i32 %5413, ptr %5411, align 4, !tbaa !5
  %5414 = getelementptr inbounds i32, ptr %7, i64 %5412
  %5415 = load i32, ptr %5414, align 4, !tbaa !5
  %5416 = getelementptr inbounds i32, ptr %6, i64 %5412
  br label %5427

5417:                                             ; preds = %5391
  %5418 = icmp eq i32 %5394, %5397
  br i1 %5418, label %5419, label %5425

5419:                                             ; preds = %5417
  store i32 0, ptr %5393, align 4, !tbaa !5
  %5420 = getelementptr inbounds i32, ptr %8, i64 %5392
  %5421 = load i32, ptr %5420, align 4, !tbaa !5
  %5422 = getelementptr inbounds i32, ptr %6, i64 %5392
  store i32 %5421, ptr %5422, align 4, !tbaa !5
  %5423 = add nuw nsw i64 %5392, 1
  %5424 = icmp eq i64 %5423, %5153
  br i1 %5424, label %5432, label %5391, !llvm.loop !1302

5425:                                             ; preds = %5387, %5417
  %5426 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5447

5427:                                             ; preds = %5400, %5409
  %5428 = phi ptr [ %5416, %5409 ], [ %5393, %5400 ]
  %5429 = phi i32 [ %5415, %5409 ], [ 1, %5400 ]
  %5430 = load i32, ptr %5428, align 4, !tbaa !5
  %5431 = add nsw i32 %5430, %5429
  store i32 %5431, ptr %5428, align 4, !tbaa !5
  br label %5432

5432:                                             ; preds = %5419, %5427, %5389, %5375
  %5433 = icmp eq i32 %5381, %5
  br i1 %5433, label %5442, label %5297, !llvm.loop !1303

5434:                                             ; preds = %4846
  %5435 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5442

5436:                                             ; preds = %1997
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  br label %5442

5437:                                             ; preds = %2293
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  br label %5442

5438:                                             ; preds = %3205
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  br label %5442

5439:                                             ; preds = %3500
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  br label %5442

5440:                                             ; preds = %4099
  store double %4049, ptr %3645, align 8, !tbaa !18
  br label %5442

5441:                                             ; preds = %5295
  store double %5245, ptr %4841, align 8, !tbaa !18
  br label %5442

5442:                                             ; preds = %5432, %5140, %5003, %4833, %4697, %4543, %4407, %4236, %3944, %3807, %3637, %3345, %3032, %2895, %2740, %2603, %2430, %2138, %1824, %1687, %1532, %1395, %1222, %1085, %930, %793, %620, %483, %328, %191, %5147, %5156, %5441, %4852, %4861, %4550, %4559, %4254, %4263, %3951, %3960, %5440, %3656, %3665, %3352, %3361, %5439, %3051, %3060, %5438, %2747, %2756, %2449, %2458, %2145, %2154, %5437, %1843, %1852, %5436, %1539, %1548, %1241, %1250, %937, %946, %639, %648, %335, %344, %37, %46, %4843, %5434, %4246, %4835, %3647, %4238, %3042, %3639, %2440, %3034, %1834, %2432, %1232, %1826, %630, %1224, %28, %622, %18
  %5443 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1224 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1826 ], [ 0.000000e+00, %1232 ], [ 0.000000e+00, %2432 ], [ 0.000000e+00, %1834 ], [ 0.000000e+00, %3034 ], [ 0.000000e+00, %2440 ], [ 0.000000e+00, %3639 ], [ 0.000000e+00, %3042 ], [ 0.000000e+00, %4238 ], [ 0.000000e+00, %3647 ], [ 0.000000e+00, %4835 ], [ 0.000000e+00, %4246 ], [ 0.000000e+00, %5434 ], [ 0.000000e+00, %4843 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %937 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %1548 ], [ 0.000000e+00, %1539 ], [ %1948, %5436 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %1843 ], [ %2244, %5437 ], [ 0.000000e+00, %2154 ], [ 0.000000e+00, %2145 ], [ 0.000000e+00, %2458 ], [ 0.000000e+00, %2449 ], [ 0.000000e+00, %2756 ], [ 0.000000e+00, %2747 ], [ %3156, %5438 ], [ 0.000000e+00, %3060 ], [ 0.000000e+00, %3051 ], [ %3451, %5439 ], [ 0.000000e+00, %3361 ], [ 0.000000e+00, %3352 ], [ 0.000000e+00, %3665 ], [ 0.000000e+00, %3656 ], [ %4050, %5440 ], [ 0.000000e+00, %3960 ], [ 0.000000e+00, %3951 ], [ 0.000000e+00, %4263 ], [ 0.000000e+00, %4254 ], [ 0.000000e+00, %4559 ], [ 0.000000e+00, %4550 ], [ 0.000000e+00, %4861 ], [ 0.000000e+00, %4852 ], [ %5246, %5441 ], [ 0.000000e+00, %5156 ], [ 0.000000e+00, %5147 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %744, %793 ], [ 0.000000e+00, %930 ], [ %1036, %1085 ], [ 0.000000e+00, %1222 ], [ %1346, %1395 ], [ 0.000000e+00, %1532 ], [ %1638, %1687 ], [ 0.000000e+00, %1824 ], [ 0.000000e+00, %2138 ], [ 0.000000e+00, %2430 ], [ %2554, %2603 ], [ 0.000000e+00, %2740 ], [ %2846, %2895 ], [ 0.000000e+00, %3032 ], [ 0.000000e+00, %3345 ], [ 0.000000e+00, %3637 ], [ %3758, %3807 ], [ 0.000000e+00, %3944 ], [ 0.000000e+00, %4236 ], [ %4358, %4407 ], [ 0.000000e+00, %4543 ], [ %4648, %4697 ], [ 0.000000e+00, %4833 ], [ %4954, %5003 ], [ 0.000000e+00, %5140 ], [ 0.000000e+00, %5432 ]
  %5444 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1224 ], [ 1, %630 ], [ 1, %1826 ], [ 1, %1232 ], [ 1, %2432 ], [ 1, %1834 ], [ 1, %3034 ], [ 1, %2440 ], [ 1, %3639 ], [ 1, %3042 ], [ 1, %4238 ], [ 1, %3647 ], [ 1, %4835 ], [ 1, %4246 ], [ 1, %5434 ], [ 1, %4843 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %648 ], [ 1, %639 ], [ 1, %946 ], [ 1, %937 ], [ 1, %1250 ], [ 1, %1241 ], [ 1, %1548 ], [ 1, %1539 ], [ %1859, %5436 ], [ 1, %1852 ], [ 1, %1843 ], [ %2161, %5437 ], [ 1, %2154 ], [ 1, %2145 ], [ 1, %2458 ], [ 1, %2449 ], [ 1, %2756 ], [ 1, %2747 ], [ %3067, %5438 ], [ 1, %3060 ], [ 1, %3051 ], [ %3368, %5439 ], [ 1, %3361 ], [ 1, %3352 ], [ 1, %3665 ], [ 1, %3656 ], [ %3967, %5440 ], [ 1, %3960 ], [ 1, %3951 ], [ 1, %4263 ], [ 1, %4254 ], [ 1, %4559 ], [ 1, %4550 ], [ 1, %4861 ], [ 1, %4852 ], [ %5163, %5441 ], [ 1, %5156 ], [ 1, %5147 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %655, %793 ], [ %646, %930 ], [ %953, %1085 ], [ %944, %1222 ], [ %1257, %1395 ], [ %1248, %1532 ], [ %1555, %1687 ], [ %1546, %1824 ], [ %1850, %2138 ], [ %2152, %2430 ], [ %2465, %2603 ], [ %2456, %2740 ], [ %2763, %2895 ], [ %2754, %3032 ], [ %3058, %3345 ], [ %3359, %3637 ], [ %3672, %3807 ], [ %3663, %3944 ], [ %3958, %4236 ], [ %4270, %4407 ], [ %4261, %4543 ], [ %4566, %4697 ], [ %4557, %4833 ], [ %4868, %5003 ], [ %4859, %5140 ], [ %5154, %5432 ]
  %5445 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5444, ptr noundef nonnull @.str.5) #3
  %5446 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5443, ptr noundef nonnull @.str.6) #3
  br label %5447

5447:                                             ; preds = %4996, %5081, %5133, %5288, %5373, %5425, %4400, %4485, %4536, %4690, %4775, %4826, %3800, %3885, %3937, %4092, %4177, %4229, %3198, %3283, %3338, %3493, %3578, %3630, %2596, %2680, %2733, %2888, %2972, %3025, %1990, %2075, %2131, %2286, %2371, %2423, %1388, %1472, %1525, %1680, %1764, %1817, %786, %870, %923, %1078, %1162, %1215, %184, %268, %321, %476, %560, %613, %5442
  %5448 = phi i32 [ 0, %5442 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1215 ], [ -1, %1162 ], [ -1, %1078 ], [ -1, %923 ], [ -1, %870 ], [ -1, %786 ], [ -1, %1817 ], [ -1, %1764 ], [ -1, %1680 ], [ -1, %1525 ], [ -1, %1472 ], [ -1, %1388 ], [ -1, %2423 ], [ -1, %2371 ], [ -1, %2286 ], [ -1, %2131 ], [ -1, %2075 ], [ -1, %1990 ], [ -1, %3025 ], [ -1, %2972 ], [ -1, %2888 ], [ -1, %2733 ], [ -1, %2680 ], [ -1, %2596 ], [ -1, %3630 ], [ -1, %3578 ], [ -1, %3493 ], [ -1, %3338 ], [ -1, %3283 ], [ -1, %3198 ], [ -1, %4229 ], [ -1, %4177 ], [ -1, %4092 ], [ -1, %3937 ], [ -1, %3885 ], [ -1, %3800 ], [ -1, %4826 ], [ -1, %4775 ], [ -1, %4690 ], [ -1, %4536 ], [ -1, %4485 ], [ -1, %4400 ], [ -1, %5425 ], [ -1, %5373 ], [ -1, %5288 ], [ -1, %5133 ], [ -1, %5081 ], [ -1, %4996 ]
  ret i32 %5448
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Avg_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5437 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1226
    i32 104, label %1828
    i32 105, label %2434
    i32 106, label %3036
    i32 107, label %3641
    i32 108, label %4235
    i32 109, label %4837
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5437

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5437

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5437

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1304

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1305

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1306

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fadd fast double %139, %137
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !1307

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5437, label %55, !llvm.loop !1308

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !1309

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !1310

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !1311

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds double, ptr %24, i64 %271
  %273 = load double, ptr %272, align 8, !tbaa !18
  %274 = fptoui double %273 to i8
  %275 = load i8, ptr %26, align 1, !tbaa !11
  %276 = add i8 %275, %274
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !1312

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5437, label %193, !llvm.loop !1313

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5437

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5437

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !1314

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !1315

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !1316

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds double, ptr %24, i64 %428
  %430 = load double, ptr %429, align 8, !tbaa !18
  %431 = fptoui double %430 to i8
  %432 = load i8, ptr %26, align 1, !tbaa !11
  %433 = add i8 %432, %431
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !1317

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5437, label %353, !llvm.loop !1318

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !1319

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !1320

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !1321

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds double, ptr %24, i64 %563
  %565 = load double, ptr %564, align 8, !tbaa !18
  %566 = fptoui double %565 to i8
  %567 = load i8, ptr %26, align 1, !tbaa !11
  %568 = add i8 %567, %566
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !1322

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5437, label %485, !llvm.loop !1323

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %624
  %631 = load double, ptr %626, align 8, !tbaa !18
  %632 = fptosi double %631 to i32
  store i32 %632, ptr %628, align 4, !tbaa !5
  br label %5437

633:                                              ; preds = %624
  switch i32 %1, label %1224 [
    i32 1, label %634
    i32 0, label %932
  ]

634:                                              ; preds = %633
  %635 = getelementptr inbounds i32, ptr %3, i64 %19
  %636 = load i32, ptr %635, align 4, !tbaa !5
  %637 = icmp eq i32 %636, 0
  %638 = icmp sgt i32 %5, 0
  br i1 %637, label %648, label %639

639:                                              ; preds = %634
  br i1 %638, label %640, label %5437

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %795

648:                                              ; preds = %634
  br i1 %638, label %649, label %5437

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %657

657:                                              ; preds = %649, %793
  %658 = phi i32 [ 0, %649 ], [ %745, %793 ]
  %659 = phi double [ 0.000000e+00, %649 ], [ %744, %793 ]
  %660 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %650, label %661, label %730

661:                                              ; preds = %657, %720
  %662 = phi i32 [ %729, %720 ], [ 0, %657 ]
  %663 = phi i64 [ %671, %720 ], [ %654, %657 ]
  %664 = phi i64 [ %728, %720 ], [ %653, %657 ]
  %665 = phi i32 [ %726, %720 ], [ %660, %657 ]
  %666 = sub i32 %652, %662
  %667 = tail call i32 @llvm.smin.i32(i32 %666, i32 0)
  %668 = sub i32 %666, %667
  %669 = zext i32 %668 to i64
  %670 = add nuw nsw i64 %669, 1
  %671 = add nsw i64 %663, -1
  %672 = icmp ult i32 %668, 31
  br i1 %672, label %708, label %673

673:                                              ; preds = %661
  %674 = and i64 %670, 8589934560
  %675 = sub i64 %664, %674
  br label %676

676:                                              ; preds = %676, %673
  %677 = phi i64 [ 0, %673 ], [ %700, %676 ]
  %678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %696, %676 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %697, %676 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %698, %676 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %673 ], [ %699, %676 ]
  %682 = sub i64 %664, %677
  %683 = getelementptr inbounds i32, ptr %9, i64 %682
  %684 = getelementptr inbounds i32, ptr %683, i64 -7
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %683, i64 -15
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %683, i64 -23
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %683, i64 -31
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = mul <8 x i32> %686, %678
  %697 = mul <8 x i32> %689, %679
  %698 = mul <8 x i32> %692, %680
  %699 = mul <8 x i32> %695, %681
  %700 = add nuw i64 %677, 32
  %701 = icmp eq i64 %700, %674
  br i1 %701, label %702, label %676, !llvm.loop !1324

702:                                              ; preds = %676
  %703 = mul <8 x i32> %697, %696
  %704 = mul <8 x i32> %698, %703
  %705 = mul <8 x i32> %699, %704
  %706 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %705)
  %707 = icmp eq i64 %670, %674
  br i1 %707, label %720, label %708

708:                                              ; preds = %661, %702
  %709 = phi i64 [ %664, %661 ], [ %675, %702 ]
  %710 = phi i32 [ 1, %661 ], [ %706, %702 ]
  br label %711

711:                                              ; preds = %708, %711
  %712 = phi i64 [ %717, %711 ], [ %709, %708 ]
  %713 = phi i32 [ %716, %711 ], [ %710, %708 ]
  %714 = getelementptr inbounds i32, ptr %9, i64 %712
  %715 = load i32, ptr %714, align 4, !tbaa !5
  %716 = mul nsw i32 %715, %713
  %717 = add nsw i64 %712, -1
  %718 = trunc i64 %712 to i32
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %711, label %720, !llvm.loop !1325

720:                                              ; preds = %711, %702
  %721 = phi i32 [ %706, %702 ], [ %716, %711 ]
  %722 = and i64 %671, 4294967295
  %723 = getelementptr inbounds i32, ptr %6, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !5
  %725 = mul nsw i32 %724, %721
  %726 = add nsw i32 %725, %665
  %727 = icmp sgt i64 %663, 2
  %728 = add nsw i64 %664, -1
  %729 = add i32 %662, 1
  br i1 %727, label %661, label %730, !llvm.loop !1326

730:                                              ; preds = %720, %657
  %731 = phi i32 [ %660, %657 ], [ %726, %720 ]
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds double, ptr %2, i64 %732
  %734 = load double, ptr %733, align 8, !tbaa !18
  %735 = getelementptr inbounds double, ptr %626, i64 %732
  %736 = load double, ptr %735, align 8, !tbaa !18
  %737 = fptosi double %736 to i32
  %738 = load i32, ptr %628, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i32 %737 to double
  %741 = fmul fast double %734, %740
  %742 = fadd fast double %741, %739
  %743 = fptosi double %742 to i32
  store i32 %743, ptr %628, align 4, !tbaa !5
  %744 = fadd fast double %734, %659
  %745 = add nuw nsw i32 %658, 1
  br i1 %651, label %746, label %793

746:                                              ; preds = %730
  %747 = load i32, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %12, align 4, !tbaa !5
  %749 = add nsw i32 %748, -1
  %750 = icmp slt i32 %747, %749
  br i1 %750, label %770, label %751

751:                                              ; preds = %746
  %752 = icmp eq i32 %747, %749
  br i1 %752, label %753, label %786

753:                                              ; preds = %751
  store i32 0, ptr %4, align 4, !tbaa !5
  %754 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %754, ptr %6, align 4, !tbaa !5
  br i1 %656, label %793, label %755

755:                                              ; preds = %753, %780
  %756 = phi i64 [ %784, %780 ], [ 1, %753 ]
  %757 = getelementptr inbounds i32, ptr %4, i64 %756
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = getelementptr inbounds i32, ptr %12, i64 %756
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = add nsw i32 %760, -1
  %762 = icmp slt i32 %758, %761
  br i1 %762, label %763, label %778

763:                                              ; preds = %755
  br i1 %750, label %770, label %764

764:                                              ; preds = %763
  %765 = getelementptr inbounds i32, ptr %7, i64 %756
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %6, i64 %756
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, %766
  store i32 %769, ptr %767, align 4, !tbaa !5
  br label %788

770:                                              ; preds = %746, %763
  %771 = phi i32 [ %758, %763 ], [ %747, %746 ]
  %772 = phi ptr [ %757, %763 ], [ %4, %746 ]
  %773 = phi i64 [ %756, %763 ], [ 0, %746 ]
  %774 = add nsw i32 %771, 1
  store i32 %774, ptr %772, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %7, i64 %773
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %773
  br label %788

778:                                              ; preds = %755
  %779 = icmp eq i32 %758, %761
  br i1 %779, label %780, label %786

780:                                              ; preds = %778
  store i32 0, ptr %757, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %8, i64 %756
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %756
  store i32 %782, ptr %783, align 4, !tbaa !5
  %784 = add nuw nsw i64 %756, 1
  %785 = icmp eq i64 %784, %654
  br i1 %785, label %793, label %755, !llvm.loop !1327

786:                                              ; preds = %751, %778
  %787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

788:                                              ; preds = %764, %770
  %789 = phi ptr [ %777, %770 ], [ %757, %764 ]
  %790 = phi i32 [ %776, %770 ], [ 1, %764 ]
  %791 = load i32, ptr %789, align 4, !tbaa !5
  %792 = add nsw i32 %791, %790
  store i32 %792, ptr %789, align 4, !tbaa !5
  br label %793

793:                                              ; preds = %780, %788, %753, %730
  %794 = icmp eq i32 %745, %5
  br i1 %794, label %5437, label %657, !llvm.loop !1328

795:                                              ; preds = %640, %930
  %796 = phi i32 [ 0, %640 ], [ %879, %930 ]
  %797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %798, label %867

798:                                              ; preds = %795, %857
  %799 = phi i32 [ %866, %857 ], [ 0, %795 ]
  %800 = phi i64 [ %808, %857 ], [ %645, %795 ]
  %801 = phi i64 [ %865, %857 ], [ %644, %795 ]
  %802 = phi i32 [ %863, %857 ], [ %797, %795 ]
  %803 = sub i32 %643, %799
  %804 = tail call i32 @llvm.smin.i32(i32 %803, i32 0)
  %805 = sub i32 %803, %804
  %806 = zext i32 %805 to i64
  %807 = add nuw nsw i64 %806, 1
  %808 = add nsw i64 %800, -1
  %809 = icmp ult i32 %805, 31
  br i1 %809, label %845, label %810

810:                                              ; preds = %798
  %811 = and i64 %807, 8589934560
  %812 = sub i64 %801, %811
  br label %813

813:                                              ; preds = %813, %810
  %814 = phi i64 [ 0, %810 ], [ %837, %813 ]
  %815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %833, %813 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %834, %813 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %835, %813 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %810 ], [ %836, %813 ]
  %819 = sub i64 %801, %814
  %820 = getelementptr inbounds i32, ptr %11, i64 %819
  %821 = getelementptr inbounds i32, ptr %820, i64 -7
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %820, i64 -15
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %820, i64 -23
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %820, i64 -31
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = mul <8 x i32> %823, %815
  %834 = mul <8 x i32> %826, %816
  %835 = mul <8 x i32> %829, %817
  %836 = mul <8 x i32> %832, %818
  %837 = add nuw i64 %814, 32
  %838 = icmp eq i64 %837, %811
  br i1 %838, label %839, label %813, !llvm.loop !1329

839:                                              ; preds = %813
  %840 = mul <8 x i32> %834, %833
  %841 = mul <8 x i32> %835, %840
  %842 = mul <8 x i32> %836, %841
  %843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %842)
  %844 = icmp eq i64 %807, %811
  br i1 %844, label %857, label %845

845:                                              ; preds = %798, %839
  %846 = phi i64 [ %801, %798 ], [ %812, %839 ]
  %847 = phi i32 [ 1, %798 ], [ %843, %839 ]
  br label %848

848:                                              ; preds = %845, %848
  %849 = phi i64 [ %854, %848 ], [ %846, %845 ]
  %850 = phi i32 [ %853, %848 ], [ %847, %845 ]
  %851 = getelementptr inbounds i32, ptr %11, i64 %849
  %852 = load i32, ptr %851, align 4, !tbaa !5
  %853 = mul nsw i32 %852, %850
  %854 = add nsw i64 %849, -1
  %855 = trunc i64 %849 to i32
  %856 = icmp sgt i32 %855, 0
  br i1 %856, label %848, label %857, !llvm.loop !1330

857:                                              ; preds = %848, %839
  %858 = phi i32 [ %843, %839 ], [ %853, %848 ]
  %859 = and i64 %808, 4294967295
  %860 = getelementptr inbounds i32, ptr %6, i64 %859
  %861 = load i32, ptr %860, align 4, !tbaa !5
  %862 = mul nsw i32 %861, %858
  %863 = add nsw i32 %862, %802
  %864 = icmp sgt i64 %800, 2
  %865 = add nsw i64 %801, -1
  %866 = add i32 %799, 1
  br i1 %864, label %798, label %867, !llvm.loop !1331

867:                                              ; preds = %857, %795
  %868 = phi i32 [ %797, %795 ], [ %863, %857 ]
  %869 = icmp slt i32 %868, %5
  br i1 %869, label %872, label %870

870:                                              ; preds = %867
  %871 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

872:                                              ; preds = %867
  %873 = sext i32 %868 to i64
  %874 = getelementptr inbounds double, ptr %626, i64 %873
  %875 = load double, ptr %874, align 8, !tbaa !18
  %876 = fptosi double %875 to i32
  %877 = load i32, ptr %628, align 4, !tbaa !5
  %878 = add i32 %877, %876
  store i32 %878, ptr %628, align 4, !tbaa !5
  %879 = add nuw nsw i32 %796, 1
  br i1 %642, label %880, label %930

880:                                              ; preds = %872
  %881 = load i32, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %12, align 4, !tbaa !5
  %883 = add nsw i32 %882, -1
  %884 = icmp slt i32 %881, %883
  br i1 %884, label %907, label %885

885:                                              ; preds = %880
  %886 = icmp eq i32 %881, %883
  br i1 %886, label %887, label %923

887:                                              ; preds = %885
  store i32 0, ptr %4, align 4, !tbaa !5
  %888 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %888, ptr %6, align 4, !tbaa !5
  br i1 %647, label %930, label %889

889:                                              ; preds = %887, %917
  %890 = phi i64 [ %921, %917 ], [ 1, %887 ]
  %891 = getelementptr inbounds i32, ptr %4, i64 %890
  %892 = load i32, ptr %891, align 4, !tbaa !5
  %893 = getelementptr inbounds i32, ptr %12, i64 %890
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = add nsw i32 %894, -1
  %896 = icmp slt i32 %892, %895
  br i1 %896, label %897, label %915

897:                                              ; preds = %889
  br i1 %884, label %907, label %898

898:                                              ; preds = %897
  %899 = shl i64 %890, 32
  %900 = add i64 %899, -4294967296
  %901 = ashr exact i64 %900, 32
  %902 = getelementptr inbounds i32, ptr %7, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %6, i64 %890
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, %903
  store i32 %906, ptr %904, align 4, !tbaa !5
  br label %925

907:                                              ; preds = %880, %897
  %908 = phi i32 [ %892, %897 ], [ %881, %880 ]
  %909 = phi ptr [ %891, %897 ], [ %4, %880 ]
  %910 = phi i64 [ %890, %897 ], [ 0, %880 ]
  %911 = add nsw i32 %908, 1
  store i32 %911, ptr %909, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %7, i64 %910
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %910
  br label %925

915:                                              ; preds = %889
  %916 = icmp eq i32 %892, %895
  br i1 %916, label %917, label %923

917:                                              ; preds = %915
  store i32 0, ptr %891, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %8, i64 %890
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %890
  store i32 %919, ptr %920, align 4, !tbaa !5
  %921 = add nuw nsw i64 %890, 1
  %922 = icmp eq i64 %921, %645
  br i1 %922, label %930, label %889, !llvm.loop !1332

923:                                              ; preds = %885, %915
  %924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

925:                                              ; preds = %898, %907
  %926 = phi ptr [ %914, %907 ], [ %891, %898 ]
  %927 = phi i32 [ %913, %907 ], [ 1, %898 ]
  %928 = load i32, ptr %926, align 4, !tbaa !5
  %929 = add nsw i32 %928, %927
  store i32 %929, ptr %926, align 4, !tbaa !5
  br label %930

930:                                              ; preds = %917, %925, %887, %872
  %931 = icmp eq i32 %879, %5
  br i1 %931, label %5437, label %795, !llvm.loop !1333

932:                                              ; preds = %633
  %933 = getelementptr inbounds i32, ptr %3, i64 %19
  %934 = load i32, ptr %933, align 4, !tbaa !5
  %935 = icmp eq i32 %934, 0
  %936 = icmp sgt i32 %5, 0
  br i1 %935, label %946, label %937

937:                                              ; preds = %932
  br i1 %936, label %938, label %5437

938:                                              ; preds = %937
  %939 = icmp sgt i32 %13, 1
  %940 = icmp sgt i32 %13, 0
  %941 = add i32 %13, -2
  %942 = zext i32 %941 to i64
  %943 = zext i32 %13 to i64
  %944 = add nuw i32 %5, 1
  %945 = icmp eq i32 %13, 1
  br label %1087

946:                                              ; preds = %932
  br i1 %936, label %947, label %5437

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %955

955:                                              ; preds = %947, %1085
  %956 = phi i32 [ 0, %947 ], [ %1037, %1085 ]
  %957 = phi double [ 0.000000e+00, %947 ], [ %1036, %1085 ]
  %958 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %959, label %1028

959:                                              ; preds = %955, %1018
  %960 = phi i32 [ %1027, %1018 ], [ 0, %955 ]
  %961 = phi i64 [ %969, %1018 ], [ %952, %955 ]
  %962 = phi i64 [ %1026, %1018 ], [ %951, %955 ]
  %963 = phi i32 [ %1024, %1018 ], [ %958, %955 ]
  %964 = sub i32 %950, %960
  %965 = tail call i32 @llvm.smin.i32(i32 %964, i32 0)
  %966 = sub i32 %964, %965
  %967 = zext i32 %966 to i64
  %968 = add nuw nsw i64 %967, 1
  %969 = add nsw i64 %961, -1
  %970 = icmp ult i32 %966, 31
  br i1 %970, label %1006, label %971

971:                                              ; preds = %959
  %972 = and i64 %968, 8589934560
  %973 = sub i64 %962, %972
  br label %974

974:                                              ; preds = %974, %971
  %975 = phi i64 [ 0, %971 ], [ %998, %974 ]
  %976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %994, %974 ]
  %977 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %995, %974 ]
  %978 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %996, %974 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %971 ], [ %997, %974 ]
  %980 = sub i64 %962, %975
  %981 = getelementptr inbounds i32, ptr %9, i64 %980
  %982 = getelementptr inbounds i32, ptr %981, i64 -7
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %981, i64 -15
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %981, i64 -23
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %981, i64 -31
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = mul <8 x i32> %984, %976
  %995 = mul <8 x i32> %987, %977
  %996 = mul <8 x i32> %990, %978
  %997 = mul <8 x i32> %993, %979
  %998 = add nuw i64 %975, 32
  %999 = icmp eq i64 %998, %972
  br i1 %999, label %1000, label %974, !llvm.loop !1334

1000:                                             ; preds = %974
  %1001 = mul <8 x i32> %995, %994
  %1002 = mul <8 x i32> %996, %1001
  %1003 = mul <8 x i32> %997, %1002
  %1004 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1003)
  %1005 = icmp eq i64 %968, %972
  br i1 %1005, label %1018, label %1006

1006:                                             ; preds = %959, %1000
  %1007 = phi i64 [ %962, %959 ], [ %973, %1000 ]
  %1008 = phi i32 [ 1, %959 ], [ %1004, %1000 ]
  br label %1009

1009:                                             ; preds = %1006, %1009
  %1010 = phi i64 [ %1015, %1009 ], [ %1007, %1006 ]
  %1011 = phi i32 [ %1014, %1009 ], [ %1008, %1006 ]
  %1012 = getelementptr inbounds i32, ptr %9, i64 %1010
  %1013 = load i32, ptr %1012, align 4, !tbaa !5
  %1014 = mul nsw i32 %1013, %1011
  %1015 = add nsw i64 %1010, -1
  %1016 = trunc i64 %1010 to i32
  %1017 = icmp sgt i32 %1016, 0
  br i1 %1017, label %1009, label %1018, !llvm.loop !1335

1018:                                             ; preds = %1009, %1000
  %1019 = phi i32 [ %1004, %1000 ], [ %1014, %1009 ]
  %1020 = and i64 %969, 4294967295
  %1021 = getelementptr inbounds i32, ptr %6, i64 %1020
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1019
  %1024 = add nsw i32 %1023, %963
  %1025 = icmp sgt i64 %961, 2
  %1026 = add nsw i64 %962, -1
  %1027 = add i32 %960, 1
  br i1 %1025, label %959, label %1028, !llvm.loop !1336

1028:                                             ; preds = %1018, %955
  %1029 = phi i32 [ %958, %955 ], [ %1024, %1018 ]
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds double, ptr %626, i64 %1030
  %1032 = load double, ptr %1031, align 8, !tbaa !18
  %1033 = fptosi double %1032 to i32
  %1034 = load i32, ptr %628, align 4, !tbaa !5
  %1035 = add nsw i32 %1034, %1033
  store i32 %1035, ptr %628, align 4, !tbaa !5
  %1036 = fadd fast double %957, 1.000000e+00
  %1037 = add nuw nsw i32 %956, 1
  br i1 %949, label %1038, label %1085

1038:                                             ; preds = %1028
  %1039 = load i32, ptr %4, align 4, !tbaa !5
  %1040 = load i32, ptr %12, align 4, !tbaa !5
  %1041 = add nsw i32 %1040, -1
  %1042 = icmp slt i32 %1039, %1041
  br i1 %1042, label %1062, label %1043

1043:                                             ; preds = %1038
  %1044 = icmp eq i32 %1039, %1041
  br i1 %1044, label %1045, label %1078

1045:                                             ; preds = %1043
  store i32 0, ptr %4, align 4, !tbaa !5
  %1046 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1046, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1085, label %1047

1047:                                             ; preds = %1045, %1072
  %1048 = phi i64 [ %1076, %1072 ], [ 1, %1045 ]
  %1049 = getelementptr inbounds i32, ptr %4, i64 %1048
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %12, i64 %1048
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1050, %1053
  br i1 %1054, label %1055, label %1070

1055:                                             ; preds = %1047
  br i1 %1042, label %1062, label %1056

1056:                                             ; preds = %1055
  %1057 = getelementptr inbounds i32, ptr %7, i64 %1048
  %1058 = load i32, ptr %1057, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %6, i64 %1048
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = add nsw i32 %1060, %1058
  store i32 %1061, ptr %1059, align 4, !tbaa !5
  br label %1080

1062:                                             ; preds = %1038, %1055
  %1063 = phi i32 [ %1050, %1055 ], [ %1039, %1038 ]
  %1064 = phi ptr [ %1049, %1055 ], [ %4, %1038 ]
  %1065 = phi i64 [ %1048, %1055 ], [ 0, %1038 ]
  %1066 = add nsw i32 %1063, 1
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %7, i64 %1065
  %1068 = load i32, ptr %1067, align 4, !tbaa !5
  %1069 = getelementptr inbounds i32, ptr %6, i64 %1065
  br label %1080

1070:                                             ; preds = %1047
  %1071 = icmp eq i32 %1050, %1053
  br i1 %1071, label %1072, label %1078

1072:                                             ; preds = %1070
  store i32 0, ptr %1049, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %8, i64 %1048
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %6, i64 %1048
  store i32 %1074, ptr %1075, align 4, !tbaa !5
  %1076 = add nuw nsw i64 %1048, 1
  %1077 = icmp eq i64 %1076, %952
  br i1 %1077, label %1085, label %1047, !llvm.loop !1337

1078:                                             ; preds = %1043, %1070
  %1079 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1080:                                             ; preds = %1056, %1062
  %1081 = phi ptr [ %1069, %1062 ], [ %1049, %1056 ]
  %1082 = phi i32 [ %1068, %1062 ], [ 1, %1056 ]
  %1083 = load i32, ptr %1081, align 4, !tbaa !5
  %1084 = add nsw i32 %1083, %1082
  store i32 %1084, ptr %1081, align 4, !tbaa !5
  br label %1085

1085:                                             ; preds = %1072, %1080, %1045, %1028
  %1086 = icmp eq i32 %1037, %5
  br i1 %1086, label %5437, label %955, !llvm.loop !1338

1087:                                             ; preds = %938, %1222
  %1088 = phi i32 [ 0, %938 ], [ %1171, %1222 ]
  %1089 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1090, label %1159

1090:                                             ; preds = %1087, %1149
  %1091 = phi i32 [ %1158, %1149 ], [ 0, %1087 ]
  %1092 = phi i64 [ %1100, %1149 ], [ %943, %1087 ]
  %1093 = phi i64 [ %1157, %1149 ], [ %942, %1087 ]
  %1094 = phi i32 [ %1155, %1149 ], [ %1089, %1087 ]
  %1095 = sub i32 %941, %1091
  %1096 = tail call i32 @llvm.smin.i32(i32 %1095, i32 0)
  %1097 = sub i32 %1095, %1096
  %1098 = zext i32 %1097 to i64
  %1099 = add nuw nsw i64 %1098, 1
  %1100 = add nsw i64 %1092, -1
  %1101 = icmp ult i32 %1097, 31
  br i1 %1101, label %1137, label %1102

1102:                                             ; preds = %1090
  %1103 = and i64 %1099, 8589934560
  %1104 = sub i64 %1093, %1103
  br label %1105

1105:                                             ; preds = %1105, %1102
  %1106 = phi i64 [ 0, %1102 ], [ %1129, %1105 ]
  %1107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1125, %1105 ]
  %1108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1126, %1105 ]
  %1109 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1127, %1105 ]
  %1110 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1102 ], [ %1128, %1105 ]
  %1111 = sub i64 %1093, %1106
  %1112 = getelementptr inbounds i32, ptr %11, i64 %1111
  %1113 = getelementptr inbounds i32, ptr %1112, i64 -7
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = getelementptr inbounds i32, ptr %1112, i64 -15
  %1117 = load <8 x i32>, ptr %1116, align 4, !tbaa !5
  %1118 = shufflevector <8 x i32> %1117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1119 = getelementptr inbounds i32, ptr %1112, i64 -23
  %1120 = load <8 x i32>, ptr %1119, align 4, !tbaa !5
  %1121 = shufflevector <8 x i32> %1120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1122 = getelementptr inbounds i32, ptr %1112, i64 -31
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = mul <8 x i32> %1115, %1107
  %1126 = mul <8 x i32> %1118, %1108
  %1127 = mul <8 x i32> %1121, %1109
  %1128 = mul <8 x i32> %1124, %1110
  %1129 = add nuw i64 %1106, 32
  %1130 = icmp eq i64 %1129, %1103
  br i1 %1130, label %1131, label %1105, !llvm.loop !1339

1131:                                             ; preds = %1105
  %1132 = mul <8 x i32> %1126, %1125
  %1133 = mul <8 x i32> %1127, %1132
  %1134 = mul <8 x i32> %1128, %1133
  %1135 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1134)
  %1136 = icmp eq i64 %1099, %1103
  br i1 %1136, label %1149, label %1137

1137:                                             ; preds = %1090, %1131
  %1138 = phi i64 [ %1093, %1090 ], [ %1104, %1131 ]
  %1139 = phi i32 [ 1, %1090 ], [ %1135, %1131 ]
  br label %1140

1140:                                             ; preds = %1137, %1140
  %1141 = phi i64 [ %1146, %1140 ], [ %1138, %1137 ]
  %1142 = phi i32 [ %1145, %1140 ], [ %1139, %1137 ]
  %1143 = getelementptr inbounds i32, ptr %11, i64 %1141
  %1144 = load i32, ptr %1143, align 4, !tbaa !5
  %1145 = mul nsw i32 %1144, %1142
  %1146 = add nsw i64 %1141, -1
  %1147 = trunc i64 %1141 to i32
  %1148 = icmp sgt i32 %1147, 0
  br i1 %1148, label %1140, label %1149, !llvm.loop !1340

1149:                                             ; preds = %1140, %1131
  %1150 = phi i32 [ %1135, %1131 ], [ %1145, %1140 ]
  %1151 = and i64 %1100, 4294967295
  %1152 = getelementptr inbounds i32, ptr %6, i64 %1151
  %1153 = load i32, ptr %1152, align 4, !tbaa !5
  %1154 = mul nsw i32 %1153, %1150
  %1155 = add nsw i32 %1154, %1094
  %1156 = icmp sgt i64 %1092, 2
  %1157 = add nsw i64 %1093, -1
  %1158 = add i32 %1091, 1
  br i1 %1156, label %1090, label %1159, !llvm.loop !1341

1159:                                             ; preds = %1149, %1087
  %1160 = phi i32 [ %1089, %1087 ], [ %1155, %1149 ]
  %1161 = icmp slt i32 %1160, %5
  br i1 %1161, label %1164, label %1162

1162:                                             ; preds = %1159
  %1163 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1164:                                             ; preds = %1159
  %1165 = sext i32 %1160 to i64
  %1166 = getelementptr inbounds double, ptr %626, i64 %1165
  %1167 = load double, ptr %1166, align 8, !tbaa !18
  %1168 = fptosi double %1167 to i32
  %1169 = load i32, ptr %628, align 4, !tbaa !5
  %1170 = add nsw i32 %1169, %1168
  store i32 %1170, ptr %628, align 4, !tbaa !5
  %1171 = add nuw nsw i32 %1088, 1
  br i1 %940, label %1172, label %1222

1172:                                             ; preds = %1164
  %1173 = load i32, ptr %4, align 4, !tbaa !5
  %1174 = load i32, ptr %12, align 4, !tbaa !5
  %1175 = add nsw i32 %1174, -1
  %1176 = icmp slt i32 %1173, %1175
  br i1 %1176, label %1199, label %1177

1177:                                             ; preds = %1172
  %1178 = icmp eq i32 %1173, %1175
  br i1 %1178, label %1179, label %1215

1179:                                             ; preds = %1177
  store i32 0, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1180, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1222, label %1181

1181:                                             ; preds = %1179, %1209
  %1182 = phi i64 [ %1213, %1209 ], [ 1, %1179 ]
  %1183 = getelementptr inbounds i32, ptr %4, i64 %1182
  %1184 = load i32, ptr %1183, align 4, !tbaa !5
  %1185 = getelementptr inbounds i32, ptr %12, i64 %1182
  %1186 = load i32, ptr %1185, align 4, !tbaa !5
  %1187 = add nsw i32 %1186, -1
  %1188 = icmp slt i32 %1184, %1187
  br i1 %1188, label %1189, label %1207

1189:                                             ; preds = %1181
  br i1 %1176, label %1199, label %1190

1190:                                             ; preds = %1189
  %1191 = shl i64 %1182, 32
  %1192 = add i64 %1191, -4294967296
  %1193 = ashr exact i64 %1192, 32
  %1194 = getelementptr inbounds i32, ptr %7, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %6, i64 %1182
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, %1195
  store i32 %1198, ptr %1196, align 4, !tbaa !5
  br label %1217

1199:                                             ; preds = %1172, %1189
  %1200 = phi i32 [ %1184, %1189 ], [ %1173, %1172 ]
  %1201 = phi ptr [ %1183, %1189 ], [ %4, %1172 ]
  %1202 = phi i64 [ %1182, %1189 ], [ 0, %1172 ]
  %1203 = add nsw i32 %1200, 1
  store i32 %1203, ptr %1201, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %7, i64 %1202
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1202
  br label %1217

1207:                                             ; preds = %1181
  %1208 = icmp eq i32 %1184, %1187
  br i1 %1208, label %1209, label %1215

1209:                                             ; preds = %1207
  store i32 0, ptr %1183, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %8, i64 %1182
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1182
  store i32 %1211, ptr %1212, align 4, !tbaa !5
  %1213 = add nuw nsw i64 %1182, 1
  %1214 = icmp eq i64 %1213, %943
  br i1 %1214, label %1222, label %1181, !llvm.loop !1342

1215:                                             ; preds = %1177, %1207
  %1216 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1217:                                             ; preds = %1190, %1199
  %1218 = phi ptr [ %1206, %1199 ], [ %1183, %1190 ]
  %1219 = phi i32 [ %1205, %1199 ], [ 1, %1190 ]
  %1220 = load i32, ptr %1218, align 4, !tbaa !5
  %1221 = add nsw i32 %1220, %1219
  store i32 %1221, ptr %1218, align 4, !tbaa !5
  br label %1222

1222:                                             ; preds = %1209, %1217, %1179, %1164
  %1223 = icmp eq i32 %1171, %5
  br i1 %1223, label %5437, label %1087, !llvm.loop !1343

1224:                                             ; preds = %633
  %1225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

1226:                                             ; preds = %18
  %1227 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1228 = load ptr, ptr %1227, align 8, !tbaa !9
  %1229 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1230 = load ptr, ptr %1229, align 8, !tbaa !9
  store i8 0, ptr %1230, align 1, !tbaa !11
  %1231 = icmp eq i32 %13, 0
  br i1 %1231, label %1232, label %1235

1232:                                             ; preds = %1226
  %1233 = load double, ptr %1228, align 8, !tbaa !18
  %1234 = fptosi double %1233 to i8
  store i8 %1234, ptr %1230, align 1, !tbaa !11
  br label %5437

1235:                                             ; preds = %1226
  switch i32 %1, label %1826 [
    i32 1, label %1236
    i32 0, label %1534
  ]

1236:                                             ; preds = %1235
  %1237 = getelementptr inbounds i32, ptr %3, i64 %19
  %1238 = load i32, ptr %1237, align 4, !tbaa !5
  %1239 = icmp eq i32 %1238, 0
  %1240 = icmp sgt i32 %5, 0
  br i1 %1239, label %1250, label %1241

1241:                                             ; preds = %1236
  br i1 %1240, label %1242, label %5437

1242:                                             ; preds = %1241
  %1243 = icmp sgt i32 %13, 1
  %1244 = icmp sgt i32 %13, 0
  %1245 = add i32 %13, -2
  %1246 = zext i32 %1245 to i64
  %1247 = zext i32 %13 to i64
  %1248 = add nuw i32 %5, 1
  %1249 = icmp eq i32 %13, 1
  br label %1397

1250:                                             ; preds = %1236
  br i1 %1240, label %1251, label %5437

1251:                                             ; preds = %1250
  %1252 = icmp sgt i32 %13, 1
  %1253 = icmp sgt i32 %13, 0
  %1254 = add i32 %13, -2
  %1255 = zext i32 %1254 to i64
  %1256 = zext i32 %13 to i64
  %1257 = add nuw i32 %5, 1
  %1258 = icmp eq i32 %13, 1
  br label %1259

1259:                                             ; preds = %1251, %1395
  %1260 = phi i32 [ 0, %1251 ], [ %1347, %1395 ]
  %1261 = phi double [ 0.000000e+00, %1251 ], [ %1346, %1395 ]
  %1262 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1252, label %1263, label %1332

1263:                                             ; preds = %1259, %1322
  %1264 = phi i32 [ %1331, %1322 ], [ 0, %1259 ]
  %1265 = phi i64 [ %1273, %1322 ], [ %1256, %1259 ]
  %1266 = phi i64 [ %1330, %1322 ], [ %1255, %1259 ]
  %1267 = phi i32 [ %1328, %1322 ], [ %1262, %1259 ]
  %1268 = sub i32 %1254, %1264
  %1269 = tail call i32 @llvm.smin.i32(i32 %1268, i32 0)
  %1270 = sub i32 %1268, %1269
  %1271 = zext i32 %1270 to i64
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = add nsw i64 %1265, -1
  %1274 = icmp ult i32 %1270, 31
  br i1 %1274, label %1310, label %1275

1275:                                             ; preds = %1263
  %1276 = and i64 %1272, 8589934560
  %1277 = sub i64 %1266, %1276
  br label %1278

1278:                                             ; preds = %1278, %1275
  %1279 = phi i64 [ 0, %1275 ], [ %1302, %1278 ]
  %1280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1298, %1278 ]
  %1281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1299, %1278 ]
  %1282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1300, %1278 ]
  %1283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1275 ], [ %1301, %1278 ]
  %1284 = sub i64 %1266, %1279
  %1285 = getelementptr inbounds i32, ptr %9, i64 %1284
  %1286 = getelementptr inbounds i32, ptr %1285, i64 -7
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = getelementptr inbounds i32, ptr %1285, i64 -15
  %1290 = load <8 x i32>, ptr %1289, align 4, !tbaa !5
  %1291 = shufflevector <8 x i32> %1290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1292 = getelementptr inbounds i32, ptr %1285, i64 -23
  %1293 = load <8 x i32>, ptr %1292, align 4, !tbaa !5
  %1294 = shufflevector <8 x i32> %1293, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1295 = getelementptr inbounds i32, ptr %1285, i64 -31
  %1296 = load <8 x i32>, ptr %1295, align 4, !tbaa !5
  %1297 = shufflevector <8 x i32> %1296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1298 = mul <8 x i32> %1288, %1280
  %1299 = mul <8 x i32> %1291, %1281
  %1300 = mul <8 x i32> %1294, %1282
  %1301 = mul <8 x i32> %1297, %1283
  %1302 = add nuw i64 %1279, 32
  %1303 = icmp eq i64 %1302, %1276
  br i1 %1303, label %1304, label %1278, !llvm.loop !1344

1304:                                             ; preds = %1278
  %1305 = mul <8 x i32> %1299, %1298
  %1306 = mul <8 x i32> %1300, %1305
  %1307 = mul <8 x i32> %1301, %1306
  %1308 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1307)
  %1309 = icmp eq i64 %1272, %1276
  br i1 %1309, label %1322, label %1310

1310:                                             ; preds = %1263, %1304
  %1311 = phi i64 [ %1266, %1263 ], [ %1277, %1304 ]
  %1312 = phi i32 [ 1, %1263 ], [ %1308, %1304 ]
  br label %1313

1313:                                             ; preds = %1310, %1313
  %1314 = phi i64 [ %1319, %1313 ], [ %1311, %1310 ]
  %1315 = phi i32 [ %1318, %1313 ], [ %1312, %1310 ]
  %1316 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1315
  %1319 = add nsw i64 %1314, -1
  %1320 = trunc i64 %1314 to i32
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1313, label %1322, !llvm.loop !1345

1322:                                             ; preds = %1313, %1304
  %1323 = phi i32 [ %1308, %1304 ], [ %1318, %1313 ]
  %1324 = and i64 %1273, 4294967295
  %1325 = getelementptr inbounds i32, ptr %6, i64 %1324
  %1326 = load i32, ptr %1325, align 4, !tbaa !5
  %1327 = mul nsw i32 %1326, %1323
  %1328 = add nsw i32 %1327, %1267
  %1329 = icmp sgt i64 %1265, 2
  %1330 = add nsw i64 %1266, -1
  %1331 = add i32 %1264, 1
  br i1 %1329, label %1263, label %1332, !llvm.loop !1346

1332:                                             ; preds = %1322, %1259
  %1333 = phi i32 [ %1262, %1259 ], [ %1328, %1322 ]
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds double, ptr %2, i64 %1334
  %1336 = load double, ptr %1335, align 8, !tbaa !18
  %1337 = getelementptr inbounds double, ptr %1228, i64 %1334
  %1338 = load double, ptr %1337, align 8, !tbaa !18
  %1339 = fptosi double %1338 to i8
  %1340 = load i8, ptr %1230, align 1, !tbaa !11
  %1341 = sitofp i8 %1340 to double
  %1342 = sitofp i8 %1339 to double
  %1343 = fmul fast double %1336, %1342
  %1344 = fadd fast double %1343, %1341
  %1345 = fptosi double %1344 to i8
  store i8 %1345, ptr %1230, align 1, !tbaa !11
  %1346 = fadd fast double %1336, %1261
  %1347 = add nuw nsw i32 %1260, 1
  br i1 %1253, label %1348, label %1395

1348:                                             ; preds = %1332
  %1349 = load i32, ptr %4, align 4, !tbaa !5
  %1350 = load i32, ptr %12, align 4, !tbaa !5
  %1351 = add nsw i32 %1350, -1
  %1352 = icmp slt i32 %1349, %1351
  br i1 %1352, label %1372, label %1353

1353:                                             ; preds = %1348
  %1354 = icmp eq i32 %1349, %1351
  br i1 %1354, label %1355, label %1388

1355:                                             ; preds = %1353
  store i32 0, ptr %4, align 4, !tbaa !5
  %1356 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1356, ptr %6, align 4, !tbaa !5
  br i1 %1258, label %1395, label %1357

1357:                                             ; preds = %1355, %1382
  %1358 = phi i64 [ %1386, %1382 ], [ 1, %1355 ]
  %1359 = getelementptr inbounds i32, ptr %4, i64 %1358
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = getelementptr inbounds i32, ptr %12, i64 %1358
  %1362 = load i32, ptr %1361, align 4, !tbaa !5
  %1363 = add nsw i32 %1362, -1
  %1364 = icmp slt i32 %1360, %1363
  br i1 %1364, label %1365, label %1380

1365:                                             ; preds = %1357
  br i1 %1352, label %1372, label %1366

1366:                                             ; preds = %1365
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1358
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1358
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = add nsw i32 %1370, %1368
  store i32 %1371, ptr %1369, align 4, !tbaa !5
  br label %1390

1372:                                             ; preds = %1348, %1365
  %1373 = phi i32 [ %1360, %1365 ], [ %1349, %1348 ]
  %1374 = phi ptr [ %1359, %1365 ], [ %4, %1348 ]
  %1375 = phi i64 [ %1358, %1365 ], [ 0, %1348 ]
  %1376 = add nsw i32 %1373, 1
  store i32 %1376, ptr %1374, align 4, !tbaa !5
  %1377 = getelementptr inbounds i32, ptr %7, i64 %1375
  %1378 = load i32, ptr %1377, align 4, !tbaa !5
  %1379 = getelementptr inbounds i32, ptr %6, i64 %1375
  br label %1390

1380:                                             ; preds = %1357
  %1381 = icmp eq i32 %1360, %1363
  br i1 %1381, label %1382, label %1388

1382:                                             ; preds = %1380
  store i32 0, ptr %1359, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %8, i64 %1358
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = getelementptr inbounds i32, ptr %6, i64 %1358
  store i32 %1384, ptr %1385, align 4, !tbaa !5
  %1386 = add nuw nsw i64 %1358, 1
  %1387 = icmp eq i64 %1386, %1256
  br i1 %1387, label %1395, label %1357, !llvm.loop !1347

1388:                                             ; preds = %1353, %1380
  %1389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1390:                                             ; preds = %1366, %1372
  %1391 = phi ptr [ %1379, %1372 ], [ %1359, %1366 ]
  %1392 = phi i32 [ %1378, %1372 ], [ 1, %1366 ]
  %1393 = load i32, ptr %1391, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, %1392
  store i32 %1394, ptr %1391, align 4, !tbaa !5
  br label %1395

1395:                                             ; preds = %1382, %1390, %1355, %1332
  %1396 = icmp eq i32 %1347, %5
  br i1 %1396, label %5437, label %1259, !llvm.loop !1348

1397:                                             ; preds = %1242, %1532
  %1398 = phi i32 [ 0, %1242 ], [ %1481, %1532 ]
  %1399 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1400, label %1469

1400:                                             ; preds = %1397, %1459
  %1401 = phi i32 [ %1468, %1459 ], [ 0, %1397 ]
  %1402 = phi i64 [ %1410, %1459 ], [ %1247, %1397 ]
  %1403 = phi i64 [ %1467, %1459 ], [ %1246, %1397 ]
  %1404 = phi i32 [ %1465, %1459 ], [ %1399, %1397 ]
  %1405 = sub i32 %1245, %1401
  %1406 = tail call i32 @llvm.smin.i32(i32 %1405, i32 0)
  %1407 = sub i32 %1405, %1406
  %1408 = zext i32 %1407 to i64
  %1409 = add nuw nsw i64 %1408, 1
  %1410 = add nsw i64 %1402, -1
  %1411 = icmp ult i32 %1407, 31
  br i1 %1411, label %1447, label %1412

1412:                                             ; preds = %1400
  %1413 = and i64 %1409, 8589934560
  %1414 = sub i64 %1403, %1413
  br label %1415

1415:                                             ; preds = %1415, %1412
  %1416 = phi i64 [ 0, %1412 ], [ %1439, %1415 ]
  %1417 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1435, %1415 ]
  %1418 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1436, %1415 ]
  %1419 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1437, %1415 ]
  %1420 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1412 ], [ %1438, %1415 ]
  %1421 = sub i64 %1403, %1416
  %1422 = getelementptr inbounds i32, ptr %11, i64 %1421
  %1423 = getelementptr inbounds i32, ptr %1422, i64 -7
  %1424 = load <8 x i32>, ptr %1423, align 4, !tbaa !5
  %1425 = shufflevector <8 x i32> %1424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1426 = getelementptr inbounds i32, ptr %1422, i64 -15
  %1427 = load <8 x i32>, ptr %1426, align 4, !tbaa !5
  %1428 = shufflevector <8 x i32> %1427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1429 = getelementptr inbounds i32, ptr %1422, i64 -23
  %1430 = load <8 x i32>, ptr %1429, align 4, !tbaa !5
  %1431 = shufflevector <8 x i32> %1430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1432 = getelementptr inbounds i32, ptr %1422, i64 -31
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = mul <8 x i32> %1425, %1417
  %1436 = mul <8 x i32> %1428, %1418
  %1437 = mul <8 x i32> %1431, %1419
  %1438 = mul <8 x i32> %1434, %1420
  %1439 = add nuw i64 %1416, 32
  %1440 = icmp eq i64 %1439, %1413
  br i1 %1440, label %1441, label %1415, !llvm.loop !1349

1441:                                             ; preds = %1415
  %1442 = mul <8 x i32> %1436, %1435
  %1443 = mul <8 x i32> %1437, %1442
  %1444 = mul <8 x i32> %1438, %1443
  %1445 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1444)
  %1446 = icmp eq i64 %1409, %1413
  br i1 %1446, label %1459, label %1447

1447:                                             ; preds = %1400, %1441
  %1448 = phi i64 [ %1403, %1400 ], [ %1414, %1441 ]
  %1449 = phi i32 [ 1, %1400 ], [ %1445, %1441 ]
  br label %1450

1450:                                             ; preds = %1447, %1450
  %1451 = phi i64 [ %1456, %1450 ], [ %1448, %1447 ]
  %1452 = phi i32 [ %1455, %1450 ], [ %1449, %1447 ]
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1451
  %1454 = load i32, ptr %1453, align 4, !tbaa !5
  %1455 = mul nsw i32 %1454, %1452
  %1456 = add nsw i64 %1451, -1
  %1457 = trunc i64 %1451 to i32
  %1458 = icmp sgt i32 %1457, 0
  br i1 %1458, label %1450, label %1459, !llvm.loop !1350

1459:                                             ; preds = %1450, %1441
  %1460 = phi i32 [ %1445, %1441 ], [ %1455, %1450 ]
  %1461 = and i64 %1410, 4294967295
  %1462 = getelementptr inbounds i32, ptr %6, i64 %1461
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1460
  %1465 = add nsw i32 %1464, %1404
  %1466 = icmp sgt i64 %1402, 2
  %1467 = add nsw i64 %1403, -1
  %1468 = add i32 %1401, 1
  br i1 %1466, label %1400, label %1469, !llvm.loop !1351

1469:                                             ; preds = %1459, %1397
  %1470 = phi i32 [ %1399, %1397 ], [ %1465, %1459 ]
  %1471 = icmp slt i32 %1470, %5
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1469
  %1473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1474:                                             ; preds = %1469
  %1475 = sext i32 %1470 to i64
  %1476 = getelementptr inbounds double, ptr %1228, i64 %1475
  %1477 = load double, ptr %1476, align 8, !tbaa !18
  %1478 = fptosi double %1477 to i8
  %1479 = load i8, ptr %1230, align 1, !tbaa !11
  %1480 = add i8 %1479, %1478
  store i8 %1480, ptr %1230, align 1, !tbaa !11
  %1481 = add nuw nsw i32 %1398, 1
  br i1 %1244, label %1482, label %1532

1482:                                             ; preds = %1474
  %1483 = load i32, ptr %4, align 4, !tbaa !5
  %1484 = load i32, ptr %12, align 4, !tbaa !5
  %1485 = add nsw i32 %1484, -1
  %1486 = icmp slt i32 %1483, %1485
  br i1 %1486, label %1509, label %1487

1487:                                             ; preds = %1482
  %1488 = icmp eq i32 %1483, %1485
  br i1 %1488, label %1489, label %1525

1489:                                             ; preds = %1487
  store i32 0, ptr %4, align 4, !tbaa !5
  %1490 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1490, ptr %6, align 4, !tbaa !5
  br i1 %1249, label %1532, label %1491

1491:                                             ; preds = %1489, %1519
  %1492 = phi i64 [ %1523, %1519 ], [ 1, %1489 ]
  %1493 = getelementptr inbounds i32, ptr %4, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = getelementptr inbounds i32, ptr %12, i64 %1492
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = add nsw i32 %1496, -1
  %1498 = icmp slt i32 %1494, %1497
  br i1 %1498, label %1499, label %1517

1499:                                             ; preds = %1491
  br i1 %1486, label %1509, label %1500

1500:                                             ; preds = %1499
  %1501 = shl i64 %1492, 32
  %1502 = add i64 %1501, -4294967296
  %1503 = ashr exact i64 %1502, 32
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, %1505
  store i32 %1508, ptr %1506, align 4, !tbaa !5
  br label %1527

1509:                                             ; preds = %1482, %1499
  %1510 = phi i32 [ %1494, %1499 ], [ %1483, %1482 ]
  %1511 = phi ptr [ %1493, %1499 ], [ %4, %1482 ]
  %1512 = phi i64 [ %1492, %1499 ], [ 0, %1482 ]
  %1513 = add nsw i32 %1510, 1
  store i32 %1513, ptr %1511, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %7, i64 %1512
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %6, i64 %1512
  br label %1527

1517:                                             ; preds = %1491
  %1518 = icmp eq i32 %1494, %1497
  br i1 %1518, label %1519, label %1525

1519:                                             ; preds = %1517
  store i32 0, ptr %1493, align 4, !tbaa !5
  %1520 = getelementptr inbounds i32, ptr %8, i64 %1492
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1492
  store i32 %1521, ptr %1522, align 4, !tbaa !5
  %1523 = add nuw nsw i64 %1492, 1
  %1524 = icmp eq i64 %1523, %1247
  br i1 %1524, label %1532, label %1491, !llvm.loop !1352

1525:                                             ; preds = %1487, %1517
  %1526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1527:                                             ; preds = %1500, %1509
  %1528 = phi ptr [ %1516, %1509 ], [ %1493, %1500 ]
  %1529 = phi i32 [ %1515, %1509 ], [ 1, %1500 ]
  %1530 = load i32, ptr %1528, align 4, !tbaa !5
  %1531 = add nsw i32 %1530, %1529
  store i32 %1531, ptr %1528, align 4, !tbaa !5
  br label %1532

1532:                                             ; preds = %1519, %1527, %1489, %1474
  %1533 = icmp eq i32 %1481, %5
  br i1 %1533, label %5437, label %1397, !llvm.loop !1353

1534:                                             ; preds = %1235
  %1535 = getelementptr inbounds i32, ptr %3, i64 %19
  %1536 = load i32, ptr %1535, align 4, !tbaa !5
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp sgt i32 %5, 0
  br i1 %1537, label %1548, label %1539

1539:                                             ; preds = %1534
  br i1 %1538, label %1540, label %5437

1540:                                             ; preds = %1539
  %1541 = icmp sgt i32 %13, 1
  %1542 = icmp sgt i32 %13, 0
  %1543 = add i32 %13, -2
  %1544 = zext i32 %1543 to i64
  %1545 = zext i32 %13 to i64
  %1546 = add nuw i32 %5, 1
  %1547 = icmp eq i32 %13, 1
  br label %1689

1548:                                             ; preds = %1534
  br i1 %1538, label %1549, label %5437

1549:                                             ; preds = %1548
  %1550 = icmp sgt i32 %13, 1
  %1551 = icmp sgt i32 %13, 0
  %1552 = add i32 %13, -2
  %1553 = zext i32 %1552 to i64
  %1554 = zext i32 %13 to i64
  %1555 = add nuw i32 %5, 1
  %1556 = icmp eq i32 %13, 1
  br label %1557

1557:                                             ; preds = %1549, %1687
  %1558 = phi i32 [ 0, %1549 ], [ %1639, %1687 ]
  %1559 = phi double [ 0.000000e+00, %1549 ], [ %1638, %1687 ]
  %1560 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1550, label %1561, label %1630

1561:                                             ; preds = %1557, %1620
  %1562 = phi i32 [ %1629, %1620 ], [ 0, %1557 ]
  %1563 = phi i64 [ %1571, %1620 ], [ %1554, %1557 ]
  %1564 = phi i64 [ %1628, %1620 ], [ %1553, %1557 ]
  %1565 = phi i32 [ %1626, %1620 ], [ %1560, %1557 ]
  %1566 = sub i32 %1552, %1562
  %1567 = tail call i32 @llvm.smin.i32(i32 %1566, i32 0)
  %1568 = sub i32 %1566, %1567
  %1569 = zext i32 %1568 to i64
  %1570 = add nuw nsw i64 %1569, 1
  %1571 = add nsw i64 %1563, -1
  %1572 = icmp ult i32 %1568, 31
  br i1 %1572, label %1608, label %1573

1573:                                             ; preds = %1561
  %1574 = and i64 %1570, 8589934560
  %1575 = sub i64 %1564, %1574
  br label %1576

1576:                                             ; preds = %1576, %1573
  %1577 = phi i64 [ 0, %1573 ], [ %1600, %1576 ]
  %1578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1596, %1576 ]
  %1579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1597, %1576 ]
  %1580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1598, %1576 ]
  %1581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1573 ], [ %1599, %1576 ]
  %1582 = sub i64 %1564, %1577
  %1583 = getelementptr inbounds i32, ptr %9, i64 %1582
  %1584 = getelementptr inbounds i32, ptr %1583, i64 -7
  %1585 = load <8 x i32>, ptr %1584, align 4, !tbaa !5
  %1586 = shufflevector <8 x i32> %1585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1587 = getelementptr inbounds i32, ptr %1583, i64 -15
  %1588 = load <8 x i32>, ptr %1587, align 4, !tbaa !5
  %1589 = shufflevector <8 x i32> %1588, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1590 = getelementptr inbounds i32, ptr %1583, i64 -23
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1583, i64 -31
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = mul <8 x i32> %1586, %1578
  %1597 = mul <8 x i32> %1589, %1579
  %1598 = mul <8 x i32> %1592, %1580
  %1599 = mul <8 x i32> %1595, %1581
  %1600 = add nuw i64 %1577, 32
  %1601 = icmp eq i64 %1600, %1574
  br i1 %1601, label %1602, label %1576, !llvm.loop !1354

1602:                                             ; preds = %1576
  %1603 = mul <8 x i32> %1597, %1596
  %1604 = mul <8 x i32> %1598, %1603
  %1605 = mul <8 x i32> %1599, %1604
  %1606 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1605)
  %1607 = icmp eq i64 %1570, %1574
  br i1 %1607, label %1620, label %1608

1608:                                             ; preds = %1561, %1602
  %1609 = phi i64 [ %1564, %1561 ], [ %1575, %1602 ]
  %1610 = phi i32 [ 1, %1561 ], [ %1606, %1602 ]
  br label %1611

1611:                                             ; preds = %1608, %1611
  %1612 = phi i64 [ %1617, %1611 ], [ %1609, %1608 ]
  %1613 = phi i32 [ %1616, %1611 ], [ %1610, %1608 ]
  %1614 = getelementptr inbounds i32, ptr %9, i64 %1612
  %1615 = load i32, ptr %1614, align 4, !tbaa !5
  %1616 = mul nsw i32 %1615, %1613
  %1617 = add nsw i64 %1612, -1
  %1618 = trunc i64 %1612 to i32
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1611, label %1620, !llvm.loop !1355

1620:                                             ; preds = %1611, %1602
  %1621 = phi i32 [ %1606, %1602 ], [ %1616, %1611 ]
  %1622 = and i64 %1571, 4294967295
  %1623 = getelementptr inbounds i32, ptr %6, i64 %1622
  %1624 = load i32, ptr %1623, align 4, !tbaa !5
  %1625 = mul nsw i32 %1624, %1621
  %1626 = add nsw i32 %1625, %1565
  %1627 = icmp sgt i64 %1563, 2
  %1628 = add nsw i64 %1564, -1
  %1629 = add i32 %1562, 1
  br i1 %1627, label %1561, label %1630, !llvm.loop !1356

1630:                                             ; preds = %1620, %1557
  %1631 = phi i32 [ %1560, %1557 ], [ %1626, %1620 ]
  %1632 = sext i32 %1631 to i64
  %1633 = getelementptr inbounds double, ptr %1228, i64 %1632
  %1634 = load double, ptr %1633, align 8, !tbaa !18
  %1635 = fptosi double %1634 to i8
  %1636 = load i8, ptr %1230, align 1, !tbaa !11
  %1637 = add i8 %1636, %1635
  store i8 %1637, ptr %1230, align 1, !tbaa !11
  %1638 = fadd fast double %1559, 1.000000e+00
  %1639 = add nuw nsw i32 %1558, 1
  br i1 %1551, label %1640, label %1687

1640:                                             ; preds = %1630
  %1641 = load i32, ptr %4, align 4, !tbaa !5
  %1642 = load i32, ptr %12, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1641, %1643
  br i1 %1644, label %1664, label %1645

1645:                                             ; preds = %1640
  %1646 = icmp eq i32 %1641, %1643
  br i1 %1646, label %1647, label %1680

1647:                                             ; preds = %1645
  store i32 0, ptr %4, align 4, !tbaa !5
  %1648 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1648, ptr %6, align 4, !tbaa !5
  br i1 %1556, label %1687, label %1649

1649:                                             ; preds = %1647, %1674
  %1650 = phi i64 [ %1678, %1674 ], [ 1, %1647 ]
  %1651 = getelementptr inbounds i32, ptr %4, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %12, i64 %1650
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = add nsw i32 %1654, -1
  %1656 = icmp slt i32 %1652, %1655
  br i1 %1656, label %1657, label %1672

1657:                                             ; preds = %1649
  br i1 %1644, label %1664, label %1658

1658:                                             ; preds = %1657
  %1659 = getelementptr inbounds i32, ptr %7, i64 %1650
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1650
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, %1660
  store i32 %1663, ptr %1661, align 4, !tbaa !5
  br label %1682

1664:                                             ; preds = %1640, %1657
  %1665 = phi i32 [ %1652, %1657 ], [ %1641, %1640 ]
  %1666 = phi ptr [ %1651, %1657 ], [ %4, %1640 ]
  %1667 = phi i64 [ %1650, %1657 ], [ 0, %1640 ]
  %1668 = add nsw i32 %1665, 1
  store i32 %1668, ptr %1666, align 4, !tbaa !5
  %1669 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1670 = load i32, ptr %1669, align 4, !tbaa !5
  %1671 = getelementptr inbounds i32, ptr %6, i64 %1667
  br label %1682

1672:                                             ; preds = %1649
  %1673 = icmp eq i32 %1652, %1655
  br i1 %1673, label %1674, label %1680

1674:                                             ; preds = %1672
  store i32 0, ptr %1651, align 4, !tbaa !5
  %1675 = getelementptr inbounds i32, ptr %8, i64 %1650
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = getelementptr inbounds i32, ptr %6, i64 %1650
  store i32 %1676, ptr %1677, align 4, !tbaa !5
  %1678 = add nuw nsw i64 %1650, 1
  %1679 = icmp eq i64 %1678, %1554
  br i1 %1679, label %1687, label %1649, !llvm.loop !1357

1680:                                             ; preds = %1645, %1672
  %1681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1682:                                             ; preds = %1658, %1664
  %1683 = phi ptr [ %1671, %1664 ], [ %1651, %1658 ]
  %1684 = phi i32 [ %1670, %1664 ], [ 1, %1658 ]
  %1685 = load i32, ptr %1683, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, %1684
  store i32 %1686, ptr %1683, align 4, !tbaa !5
  br label %1687

1687:                                             ; preds = %1674, %1682, %1647, %1630
  %1688 = icmp eq i32 %1639, %5
  br i1 %1688, label %5437, label %1557, !llvm.loop !1358

1689:                                             ; preds = %1540, %1824
  %1690 = phi i32 [ 0, %1540 ], [ %1773, %1824 ]
  %1691 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1541, label %1692, label %1761

1692:                                             ; preds = %1689, %1751
  %1693 = phi i32 [ %1760, %1751 ], [ 0, %1689 ]
  %1694 = phi i64 [ %1702, %1751 ], [ %1545, %1689 ]
  %1695 = phi i64 [ %1759, %1751 ], [ %1544, %1689 ]
  %1696 = phi i32 [ %1757, %1751 ], [ %1691, %1689 ]
  %1697 = sub i32 %1543, %1693
  %1698 = tail call i32 @llvm.smin.i32(i32 %1697, i32 0)
  %1699 = sub i32 %1697, %1698
  %1700 = zext i32 %1699 to i64
  %1701 = add nuw nsw i64 %1700, 1
  %1702 = add nsw i64 %1694, -1
  %1703 = icmp ult i32 %1699, 31
  br i1 %1703, label %1739, label %1704

1704:                                             ; preds = %1692
  %1705 = and i64 %1701, 8589934560
  %1706 = sub i64 %1695, %1705
  br label %1707

1707:                                             ; preds = %1707, %1704
  %1708 = phi i64 [ 0, %1704 ], [ %1731, %1707 ]
  %1709 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1727, %1707 ]
  %1710 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1728, %1707 ]
  %1711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1729, %1707 ]
  %1712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1704 ], [ %1730, %1707 ]
  %1713 = sub i64 %1695, %1708
  %1714 = getelementptr inbounds i32, ptr %11, i64 %1713
  %1715 = getelementptr inbounds i32, ptr %1714, i64 -7
  %1716 = load <8 x i32>, ptr %1715, align 4, !tbaa !5
  %1717 = shufflevector <8 x i32> %1716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1718 = getelementptr inbounds i32, ptr %1714, i64 -15
  %1719 = load <8 x i32>, ptr %1718, align 4, !tbaa !5
  %1720 = shufflevector <8 x i32> %1719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1721 = getelementptr inbounds i32, ptr %1714, i64 -23
  %1722 = load <8 x i32>, ptr %1721, align 4, !tbaa !5
  %1723 = shufflevector <8 x i32> %1722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1724 = getelementptr inbounds i32, ptr %1714, i64 -31
  %1725 = load <8 x i32>, ptr %1724, align 4, !tbaa !5
  %1726 = shufflevector <8 x i32> %1725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1727 = mul <8 x i32> %1717, %1709
  %1728 = mul <8 x i32> %1720, %1710
  %1729 = mul <8 x i32> %1723, %1711
  %1730 = mul <8 x i32> %1726, %1712
  %1731 = add nuw i64 %1708, 32
  %1732 = icmp eq i64 %1731, %1705
  br i1 %1732, label %1733, label %1707, !llvm.loop !1359

1733:                                             ; preds = %1707
  %1734 = mul <8 x i32> %1728, %1727
  %1735 = mul <8 x i32> %1729, %1734
  %1736 = mul <8 x i32> %1730, %1735
  %1737 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1736)
  %1738 = icmp eq i64 %1701, %1705
  br i1 %1738, label %1751, label %1739

1739:                                             ; preds = %1692, %1733
  %1740 = phi i64 [ %1695, %1692 ], [ %1706, %1733 ]
  %1741 = phi i32 [ 1, %1692 ], [ %1737, %1733 ]
  br label %1742

1742:                                             ; preds = %1739, %1742
  %1743 = phi i64 [ %1748, %1742 ], [ %1740, %1739 ]
  %1744 = phi i32 [ %1747, %1742 ], [ %1741, %1739 ]
  %1745 = getelementptr inbounds i32, ptr %11, i64 %1743
  %1746 = load i32, ptr %1745, align 4, !tbaa !5
  %1747 = mul nsw i32 %1746, %1744
  %1748 = add nsw i64 %1743, -1
  %1749 = trunc i64 %1743 to i32
  %1750 = icmp sgt i32 %1749, 0
  br i1 %1750, label %1742, label %1751, !llvm.loop !1360

1751:                                             ; preds = %1742, %1733
  %1752 = phi i32 [ %1737, %1733 ], [ %1747, %1742 ]
  %1753 = and i64 %1702, 4294967295
  %1754 = getelementptr inbounds i32, ptr %6, i64 %1753
  %1755 = load i32, ptr %1754, align 4, !tbaa !5
  %1756 = mul nsw i32 %1755, %1752
  %1757 = add nsw i32 %1756, %1696
  %1758 = icmp sgt i64 %1694, 2
  %1759 = add nsw i64 %1695, -1
  %1760 = add i32 %1693, 1
  br i1 %1758, label %1692, label %1761, !llvm.loop !1361

1761:                                             ; preds = %1751, %1689
  %1762 = phi i32 [ %1691, %1689 ], [ %1757, %1751 ]
  %1763 = icmp slt i32 %1762, %5
  br i1 %1763, label %1766, label %1764

1764:                                             ; preds = %1761
  %1765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

1766:                                             ; preds = %1761
  %1767 = sext i32 %1762 to i64
  %1768 = getelementptr inbounds double, ptr %1228, i64 %1767
  %1769 = load double, ptr %1768, align 8, !tbaa !18
  %1770 = fptosi double %1769 to i8
  %1771 = load i8, ptr %1230, align 1, !tbaa !11
  %1772 = add i8 %1771, %1770
  store i8 %1772, ptr %1230, align 1, !tbaa !11
  %1773 = add nuw nsw i32 %1690, 1
  br i1 %1542, label %1774, label %1824

1774:                                             ; preds = %1766
  %1775 = load i32, ptr %4, align 4, !tbaa !5
  %1776 = load i32, ptr %12, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1775, %1777
  br i1 %1778, label %1801, label %1779

1779:                                             ; preds = %1774
  %1780 = icmp eq i32 %1775, %1777
  br i1 %1780, label %1781, label %1817

1781:                                             ; preds = %1779
  store i32 0, ptr %4, align 4, !tbaa !5
  %1782 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1782, ptr %6, align 4, !tbaa !5
  br i1 %1547, label %1824, label %1783

1783:                                             ; preds = %1781, %1811
  %1784 = phi i64 [ %1815, %1811 ], [ 1, %1781 ]
  %1785 = getelementptr inbounds i32, ptr %4, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = getelementptr inbounds i32, ptr %12, i64 %1784
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = add nsw i32 %1788, -1
  %1790 = icmp slt i32 %1786, %1789
  br i1 %1790, label %1791, label %1809

1791:                                             ; preds = %1783
  br i1 %1778, label %1801, label %1792

1792:                                             ; preds = %1791
  %1793 = shl i64 %1784, 32
  %1794 = add i64 %1793, -4294967296
  %1795 = ashr exact i64 %1794, 32
  %1796 = getelementptr inbounds i32, ptr %7, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1784
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = add nsw i32 %1799, %1797
  store i32 %1800, ptr %1798, align 4, !tbaa !5
  br label %1819

1801:                                             ; preds = %1774, %1791
  %1802 = phi i32 [ %1786, %1791 ], [ %1775, %1774 ]
  %1803 = phi ptr [ %1785, %1791 ], [ %4, %1774 ]
  %1804 = phi i64 [ %1784, %1791 ], [ 0, %1774 ]
  %1805 = add nsw i32 %1802, 1
  store i32 %1805, ptr %1803, align 4, !tbaa !5
  %1806 = getelementptr inbounds i32, ptr %7, i64 %1804
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %6, i64 %1804
  br label %1819

1809:                                             ; preds = %1783
  %1810 = icmp eq i32 %1786, %1789
  br i1 %1810, label %1811, label %1817

1811:                                             ; preds = %1809
  store i32 0, ptr %1785, align 4, !tbaa !5
  %1812 = getelementptr inbounds i32, ptr %8, i64 %1784
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %6, i64 %1784
  store i32 %1813, ptr %1814, align 4, !tbaa !5
  %1815 = add nuw nsw i64 %1784, 1
  %1816 = icmp eq i64 %1815, %1545
  br i1 %1816, label %1824, label %1783, !llvm.loop !1362

1817:                                             ; preds = %1779, %1809
  %1818 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1819:                                             ; preds = %1792, %1801
  %1820 = phi ptr [ %1808, %1801 ], [ %1785, %1792 ]
  %1821 = phi i32 [ %1807, %1801 ], [ 1, %1792 ]
  %1822 = load i32, ptr %1820, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, %1821
  store i32 %1823, ptr %1820, align 4, !tbaa !5
  br label %1824

1824:                                             ; preds = %1811, %1819, %1781, %1766
  %1825 = icmp eq i32 %1773, %5
  br i1 %1825, label %5437, label %1689, !llvm.loop !1363

1826:                                             ; preds = %1235
  %1827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

1828:                                             ; preds = %18
  %1829 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1830 = load ptr, ptr %1829, align 8, !tbaa !9
  %1831 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1832 = load ptr, ptr %1831, align 8, !tbaa !9
  store i16 0, ptr %1832, align 2, !tbaa !78
  %1833 = icmp eq i32 %13, 0
  br i1 %1833, label %1834, label %1837

1834:                                             ; preds = %1828
  %1835 = load double, ptr %1830, align 8, !tbaa !18
  %1836 = fptosi double %1835 to i16
  store i16 %1836, ptr %1832, align 2, !tbaa !78
  br label %5437

1837:                                             ; preds = %1828
  switch i32 %1, label %2432 [
    i32 1, label %1838
    i32 0, label %2140
  ]

1838:                                             ; preds = %1837
  %1839 = getelementptr inbounds i32, ptr %3, i64 %19
  %1840 = load i32, ptr %1839, align 4, !tbaa !5
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp sgt i32 %5, 0
  br i1 %1841, label %1852, label %1843

1843:                                             ; preds = %1838
  br i1 %1842, label %1844, label %5437

1844:                                             ; preds = %1843
  %1845 = icmp sgt i32 %13, 1
  %1846 = icmp sgt i32 %13, 0
  %1847 = add i32 %13, -2
  %1848 = zext i32 %1847 to i64
  %1849 = zext i32 %13 to i64
  %1850 = add nuw i32 %5, 1
  %1851 = icmp eq i32 %13, 1
  br label %1999

1852:                                             ; preds = %1838
  br i1 %1842, label %1853, label %5437

1853:                                             ; preds = %1852
  %1854 = icmp sgt i32 %13, 1
  %1855 = icmp sgt i32 %13, 0
  %1856 = add i32 %13, -2
  %1857 = zext i32 %1856 to i64
  %1858 = zext i32 %13 to i64
  %1859 = add nuw i32 %5, 1
  %1860 = icmp eq i32 %13, 1
  br label %1861

1861:                                             ; preds = %1853, %1997
  %1862 = phi i16 [ 0, %1853 ], [ %1947, %1997 ]
  %1863 = phi i32 [ 0, %1853 ], [ %1949, %1997 ]
  %1864 = phi double [ 0.000000e+00, %1853 ], [ %1948, %1997 ]
  %1865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1854, label %1866, label %1935

1866:                                             ; preds = %1861, %1925
  %1867 = phi i32 [ %1934, %1925 ], [ 0, %1861 ]
  %1868 = phi i64 [ %1876, %1925 ], [ %1858, %1861 ]
  %1869 = phi i64 [ %1933, %1925 ], [ %1857, %1861 ]
  %1870 = phi i32 [ %1931, %1925 ], [ %1865, %1861 ]
  %1871 = sub i32 %1856, %1867
  %1872 = tail call i32 @llvm.smin.i32(i32 %1871, i32 0)
  %1873 = sub i32 %1871, %1872
  %1874 = zext i32 %1873 to i64
  %1875 = add nuw nsw i64 %1874, 1
  %1876 = add nsw i64 %1868, -1
  %1877 = icmp ult i32 %1873, 31
  br i1 %1877, label %1913, label %1878

1878:                                             ; preds = %1866
  %1879 = and i64 %1875, 8589934560
  %1880 = sub i64 %1869, %1879
  br label %1881

1881:                                             ; preds = %1881, %1878
  %1882 = phi i64 [ 0, %1878 ], [ %1905, %1881 ]
  %1883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1901, %1881 ]
  %1884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1902, %1881 ]
  %1885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1903, %1881 ]
  %1886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1878 ], [ %1904, %1881 ]
  %1887 = sub i64 %1869, %1882
  %1888 = getelementptr inbounds i32, ptr %9, i64 %1887
  %1889 = getelementptr inbounds i32, ptr %1888, i64 -7
  %1890 = load <8 x i32>, ptr %1889, align 4, !tbaa !5
  %1891 = shufflevector <8 x i32> %1890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1892 = getelementptr inbounds i32, ptr %1888, i64 -15
  %1893 = load <8 x i32>, ptr %1892, align 4, !tbaa !5
  %1894 = shufflevector <8 x i32> %1893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1895 = getelementptr inbounds i32, ptr %1888, i64 -23
  %1896 = load <8 x i32>, ptr %1895, align 4, !tbaa !5
  %1897 = shufflevector <8 x i32> %1896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1898 = getelementptr inbounds i32, ptr %1888, i64 -31
  %1899 = load <8 x i32>, ptr %1898, align 4, !tbaa !5
  %1900 = shufflevector <8 x i32> %1899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1901 = mul <8 x i32> %1891, %1883
  %1902 = mul <8 x i32> %1894, %1884
  %1903 = mul <8 x i32> %1897, %1885
  %1904 = mul <8 x i32> %1900, %1886
  %1905 = add nuw i64 %1882, 32
  %1906 = icmp eq i64 %1905, %1879
  br i1 %1906, label %1907, label %1881, !llvm.loop !1364

1907:                                             ; preds = %1881
  %1908 = mul <8 x i32> %1902, %1901
  %1909 = mul <8 x i32> %1903, %1908
  %1910 = mul <8 x i32> %1904, %1909
  %1911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1910)
  %1912 = icmp eq i64 %1875, %1879
  br i1 %1912, label %1925, label %1913

1913:                                             ; preds = %1866, %1907
  %1914 = phi i64 [ %1869, %1866 ], [ %1880, %1907 ]
  %1915 = phi i32 [ 1, %1866 ], [ %1911, %1907 ]
  br label %1916

1916:                                             ; preds = %1913, %1916
  %1917 = phi i64 [ %1922, %1916 ], [ %1914, %1913 ]
  %1918 = phi i32 [ %1921, %1916 ], [ %1915, %1913 ]
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1917
  %1920 = load i32, ptr %1919, align 4, !tbaa !5
  %1921 = mul nsw i32 %1920, %1918
  %1922 = add nsw i64 %1917, -1
  %1923 = trunc i64 %1917 to i32
  %1924 = icmp sgt i32 %1923, 0
  br i1 %1924, label %1916, label %1925, !llvm.loop !1365

1925:                                             ; preds = %1916, %1907
  %1926 = phi i32 [ %1911, %1907 ], [ %1921, %1916 ]
  %1927 = and i64 %1876, 4294967295
  %1928 = getelementptr inbounds i32, ptr %6, i64 %1927
  %1929 = load i32, ptr %1928, align 4, !tbaa !5
  %1930 = mul nsw i32 %1929, %1926
  %1931 = add nsw i32 %1930, %1870
  %1932 = icmp sgt i64 %1868, 2
  %1933 = add nsw i64 %1869, -1
  %1934 = add i32 %1867, 1
  br i1 %1932, label %1866, label %1935, !llvm.loop !1366

1935:                                             ; preds = %1925, %1861
  %1936 = phi i32 [ %1865, %1861 ], [ %1931, %1925 ]
  %1937 = sext i32 %1936 to i64
  %1938 = getelementptr inbounds double, ptr %2, i64 %1937
  %1939 = load double, ptr %1938, align 8, !tbaa !18
  %1940 = getelementptr inbounds double, ptr %1830, i64 %1937
  %1941 = load double, ptr %1940, align 8, !tbaa !18
  %1942 = fptosi double %1941 to i16
  %1943 = sitofp i16 %1862 to double
  %1944 = sitofp i16 %1942 to double
  %1945 = fmul fast double %1939, %1944
  %1946 = fadd fast double %1945, %1943
  %1947 = fptosi double %1946 to i16
  %1948 = fadd fast double %1939, %1864
  %1949 = add nuw nsw i32 %1863, 1
  br i1 %1855, label %1950, label %1997

1950:                                             ; preds = %1935
  %1951 = load i32, ptr %4, align 4, !tbaa !5
  %1952 = load i32, ptr %12, align 4, !tbaa !5
  %1953 = add nsw i32 %1952, -1
  %1954 = icmp slt i32 %1951, %1953
  br i1 %1954, label %1974, label %1955

1955:                                             ; preds = %1950
  %1956 = icmp eq i32 %1951, %1953
  br i1 %1956, label %1957, label %1990

1957:                                             ; preds = %1955
  store i32 0, ptr %4, align 4, !tbaa !5
  %1958 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1958, ptr %6, align 4, !tbaa !5
  br i1 %1860, label %1997, label %1959

1959:                                             ; preds = %1957, %1984
  %1960 = phi i64 [ %1988, %1984 ], [ 1, %1957 ]
  %1961 = getelementptr inbounds i32, ptr %4, i64 %1960
  %1962 = load i32, ptr %1961, align 4, !tbaa !5
  %1963 = getelementptr inbounds i32, ptr %12, i64 %1960
  %1964 = load i32, ptr %1963, align 4, !tbaa !5
  %1965 = add nsw i32 %1964, -1
  %1966 = icmp slt i32 %1962, %1965
  br i1 %1966, label %1967, label %1982

1967:                                             ; preds = %1959
  br i1 %1954, label %1974, label %1968

1968:                                             ; preds = %1967
  %1969 = getelementptr inbounds i32, ptr %7, i64 %1960
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %6, i64 %1960
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, %1970
  store i32 %1973, ptr %1971, align 4, !tbaa !5
  br label %1992

1974:                                             ; preds = %1950, %1967
  %1975 = phi i32 [ %1962, %1967 ], [ %1951, %1950 ]
  %1976 = phi ptr [ %1961, %1967 ], [ %4, %1950 ]
  %1977 = phi i64 [ %1960, %1967 ], [ 0, %1950 ]
  %1978 = add nsw i32 %1975, 1
  store i32 %1978, ptr %1976, align 4, !tbaa !5
  %1979 = getelementptr inbounds i32, ptr %7, i64 %1977
  %1980 = load i32, ptr %1979, align 4, !tbaa !5
  %1981 = getelementptr inbounds i32, ptr %6, i64 %1977
  br label %1992

1982:                                             ; preds = %1959
  %1983 = icmp eq i32 %1962, %1965
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  store i32 0, ptr %1961, align 4, !tbaa !5
  %1985 = getelementptr inbounds i32, ptr %8, i64 %1960
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %6, i64 %1960
  store i32 %1986, ptr %1987, align 4, !tbaa !5
  %1988 = add nuw nsw i64 %1960, 1
  %1989 = icmp eq i64 %1988, %1858
  br i1 %1989, label %1997, label %1959, !llvm.loop !1367

1990:                                             ; preds = %1955, %1982
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  %1991 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

1992:                                             ; preds = %1968, %1974
  %1993 = phi ptr [ %1981, %1974 ], [ %1961, %1968 ]
  %1994 = phi i32 [ %1980, %1974 ], [ 1, %1968 ]
  %1995 = load i32, ptr %1993, align 4, !tbaa !5
  %1996 = add nsw i32 %1995, %1994
  store i32 %1996, ptr %1993, align 4, !tbaa !5
  br label %1997

1997:                                             ; preds = %1984, %1992, %1957, %1935
  %1998 = icmp eq i32 %1949, %5
  br i1 %1998, label %5431, label %1861, !llvm.loop !1368

1999:                                             ; preds = %1844, %2138
  %2000 = phi i32 [ 0, %1844 ], [ %2085, %2138 ]
  %2001 = phi i32 [ 0, %1844 ], [ %2087, %2138 ]
  %2002 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1845, label %2003, label %2072

2003:                                             ; preds = %1999, %2062
  %2004 = phi i32 [ %2071, %2062 ], [ 0, %1999 ]
  %2005 = phi i64 [ %2013, %2062 ], [ %1849, %1999 ]
  %2006 = phi i64 [ %2070, %2062 ], [ %1848, %1999 ]
  %2007 = phi i32 [ %2068, %2062 ], [ %2002, %1999 ]
  %2008 = sub i32 %1847, %2004
  %2009 = tail call i32 @llvm.smin.i32(i32 %2008, i32 0)
  %2010 = sub i32 %2008, %2009
  %2011 = zext i32 %2010 to i64
  %2012 = add nuw nsw i64 %2011, 1
  %2013 = add nsw i64 %2005, -1
  %2014 = icmp ult i32 %2010, 31
  br i1 %2014, label %2050, label %2015

2015:                                             ; preds = %2003
  %2016 = and i64 %2012, 8589934560
  %2017 = sub i64 %2006, %2016
  br label %2018

2018:                                             ; preds = %2018, %2015
  %2019 = phi i64 [ 0, %2015 ], [ %2042, %2018 ]
  %2020 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2038, %2018 ]
  %2021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2039, %2018 ]
  %2022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2040, %2018 ]
  %2023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2015 ], [ %2041, %2018 ]
  %2024 = sub i64 %2006, %2019
  %2025 = getelementptr inbounds i32, ptr %11, i64 %2024
  %2026 = getelementptr inbounds i32, ptr %2025, i64 -7
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = getelementptr inbounds i32, ptr %2025, i64 -15
  %2030 = load <8 x i32>, ptr %2029, align 4, !tbaa !5
  %2031 = shufflevector <8 x i32> %2030, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2032 = getelementptr inbounds i32, ptr %2025, i64 -23
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = getelementptr inbounds i32, ptr %2025, i64 -31
  %2036 = load <8 x i32>, ptr %2035, align 4, !tbaa !5
  %2037 = shufflevector <8 x i32> %2036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2038 = mul <8 x i32> %2028, %2020
  %2039 = mul <8 x i32> %2031, %2021
  %2040 = mul <8 x i32> %2034, %2022
  %2041 = mul <8 x i32> %2037, %2023
  %2042 = add nuw i64 %2019, 32
  %2043 = icmp eq i64 %2042, %2016
  br i1 %2043, label %2044, label %2018, !llvm.loop !1369

2044:                                             ; preds = %2018
  %2045 = mul <8 x i32> %2039, %2038
  %2046 = mul <8 x i32> %2040, %2045
  %2047 = mul <8 x i32> %2041, %2046
  %2048 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2047)
  %2049 = icmp eq i64 %2012, %2016
  br i1 %2049, label %2062, label %2050

2050:                                             ; preds = %2003, %2044
  %2051 = phi i64 [ %2006, %2003 ], [ %2017, %2044 ]
  %2052 = phi i32 [ 1, %2003 ], [ %2048, %2044 ]
  br label %2053

2053:                                             ; preds = %2050, %2053
  %2054 = phi i64 [ %2059, %2053 ], [ %2051, %2050 ]
  %2055 = phi i32 [ %2058, %2053 ], [ %2052, %2050 ]
  %2056 = getelementptr inbounds i32, ptr %11, i64 %2054
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = mul nsw i32 %2057, %2055
  %2059 = add nsw i64 %2054, -1
  %2060 = trunc i64 %2054 to i32
  %2061 = icmp sgt i32 %2060, 0
  br i1 %2061, label %2053, label %2062, !llvm.loop !1370

2062:                                             ; preds = %2053, %2044
  %2063 = phi i32 [ %2048, %2044 ], [ %2058, %2053 ]
  %2064 = and i64 %2013, 4294967295
  %2065 = getelementptr inbounds i32, ptr %6, i64 %2064
  %2066 = load i32, ptr %2065, align 4, !tbaa !5
  %2067 = mul nsw i32 %2066, %2063
  %2068 = add nsw i32 %2067, %2007
  %2069 = icmp sgt i64 %2005, 2
  %2070 = add nsw i64 %2006, -1
  %2071 = add i32 %2004, 1
  br i1 %2069, label %2003, label %2072, !llvm.loop !1371

2072:                                             ; preds = %2062, %1999
  %2073 = phi i32 [ %2002, %1999 ], [ %2068, %2062 ]
  %2074 = icmp slt i32 %2073, %5
  br i1 %2074, label %2077, label %2075

2075:                                             ; preds = %2072
  %2076 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2077:                                             ; preds = %2072
  %2078 = sext i32 %2073 to i64
  %2079 = getelementptr inbounds double, ptr %1830, i64 %2078
  %2080 = load double, ptr %2079, align 8, !tbaa !18
  %2081 = fptosi double %2080 to i16
  %2082 = shl i32 %2000, 16
  %2083 = ashr exact i32 %2082, 16
  %2084 = sext i16 %2081 to i32
  %2085 = add nsw i32 %2083, %2084
  %2086 = trunc i32 %2085 to i16
  store i16 %2086, ptr %1832, align 2, !tbaa !78
  %2087 = add nuw nsw i32 %2001, 1
  br i1 %1846, label %2088, label %2138

2088:                                             ; preds = %2077
  %2089 = load i32, ptr %4, align 4, !tbaa !5
  %2090 = load i32, ptr %12, align 4, !tbaa !5
  %2091 = add nsw i32 %2090, -1
  %2092 = icmp slt i32 %2089, %2091
  br i1 %2092, label %2115, label %2093

2093:                                             ; preds = %2088
  %2094 = icmp eq i32 %2089, %2091
  br i1 %2094, label %2095, label %2131

2095:                                             ; preds = %2093
  store i32 0, ptr %4, align 4, !tbaa !5
  %2096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2096, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %2138, label %2097

2097:                                             ; preds = %2095, %2125
  %2098 = phi i64 [ %2129, %2125 ], [ 1, %2095 ]
  %2099 = getelementptr inbounds i32, ptr %4, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %12, i64 %2098
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = add nsw i32 %2102, -1
  %2104 = icmp slt i32 %2100, %2103
  br i1 %2104, label %2105, label %2123

2105:                                             ; preds = %2097
  br i1 %2092, label %2115, label %2106

2106:                                             ; preds = %2105
  %2107 = shl i64 %2098, 32
  %2108 = add i64 %2107, -4294967296
  %2109 = ashr exact i64 %2108, 32
  %2110 = getelementptr inbounds i32, ptr %7, i64 %2109
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = add nsw i32 %2113, %2111
  store i32 %2114, ptr %2112, align 4, !tbaa !5
  br label %2133

2115:                                             ; preds = %2088, %2105
  %2116 = phi i32 [ %2100, %2105 ], [ %2089, %2088 ]
  %2117 = phi ptr [ %2099, %2105 ], [ %4, %2088 ]
  %2118 = phi i64 [ %2098, %2105 ], [ 0, %2088 ]
  %2119 = add nsw i32 %2116, 1
  store i32 %2119, ptr %2117, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2118
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2118
  br label %2133

2123:                                             ; preds = %2097
  %2124 = icmp eq i32 %2100, %2103
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2123
  store i32 0, ptr %2099, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %8, i64 %2098
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %6, i64 %2098
  store i32 %2127, ptr %2128, align 4, !tbaa !5
  %2129 = add nuw nsw i64 %2098, 1
  %2130 = icmp eq i64 %2129, %1849
  br i1 %2130, label %2138, label %2097, !llvm.loop !1372

2131:                                             ; preds = %2093, %2123
  %2132 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2133:                                             ; preds = %2106, %2115
  %2134 = phi ptr [ %2122, %2115 ], [ %2099, %2106 ]
  %2135 = phi i32 [ %2121, %2115 ], [ 1, %2106 ]
  %2136 = load i32, ptr %2134, align 4, !tbaa !5
  %2137 = add nsw i32 %2136, %2135
  store i32 %2137, ptr %2134, align 4, !tbaa !5
  br label %2138

2138:                                             ; preds = %2125, %2133, %2095, %2077
  %2139 = icmp eq i32 %2087, %5
  br i1 %2139, label %5437, label %1999, !llvm.loop !1373

2140:                                             ; preds = %1837
  %2141 = getelementptr inbounds i32, ptr %3, i64 %19
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = icmp eq i32 %2142, 0
  %2144 = icmp sgt i32 %5, 0
  br i1 %2143, label %2154, label %2145

2145:                                             ; preds = %2140
  br i1 %2144, label %2146, label %5437

2146:                                             ; preds = %2145
  %2147 = icmp sgt i32 %13, 1
  %2148 = icmp sgt i32 %13, 0
  %2149 = add i32 %13, -2
  %2150 = zext i32 %2149 to i64
  %2151 = zext i32 %13 to i64
  %2152 = add nuw i32 %5, 1
  %2153 = icmp eq i32 %13, 1
  br label %2295

2154:                                             ; preds = %2140
  br i1 %2144, label %2155, label %5437

2155:                                             ; preds = %2154
  %2156 = icmp sgt i32 %13, 1
  %2157 = icmp sgt i32 %13, 0
  %2158 = add i32 %13, -2
  %2159 = zext i32 %2158 to i64
  %2160 = zext i32 %13 to i64
  %2161 = add nuw i32 %5, 1
  %2162 = icmp eq i32 %13, 1
  br label %2163

2163:                                             ; preds = %2155, %2293
  %2164 = phi i16 [ 0, %2155 ], [ %2243, %2293 ]
  %2165 = phi i32 [ 0, %2155 ], [ %2245, %2293 ]
  %2166 = phi double [ 0.000000e+00, %2155 ], [ %2244, %2293 ]
  %2167 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2156, label %2168, label %2237

2168:                                             ; preds = %2163, %2227
  %2169 = phi i32 [ %2236, %2227 ], [ 0, %2163 ]
  %2170 = phi i64 [ %2178, %2227 ], [ %2160, %2163 ]
  %2171 = phi i64 [ %2235, %2227 ], [ %2159, %2163 ]
  %2172 = phi i32 [ %2233, %2227 ], [ %2167, %2163 ]
  %2173 = sub i32 %2158, %2169
  %2174 = tail call i32 @llvm.smin.i32(i32 %2173, i32 0)
  %2175 = sub i32 %2173, %2174
  %2176 = zext i32 %2175 to i64
  %2177 = add nuw nsw i64 %2176, 1
  %2178 = add nsw i64 %2170, -1
  %2179 = icmp ult i32 %2175, 31
  br i1 %2179, label %2215, label %2180

2180:                                             ; preds = %2168
  %2181 = and i64 %2177, 8589934560
  %2182 = sub i64 %2171, %2181
  br label %2183

2183:                                             ; preds = %2183, %2180
  %2184 = phi i64 [ 0, %2180 ], [ %2207, %2183 ]
  %2185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2203, %2183 ]
  %2186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2204, %2183 ]
  %2187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2205, %2183 ]
  %2188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2180 ], [ %2206, %2183 ]
  %2189 = sub i64 %2171, %2184
  %2190 = getelementptr inbounds i32, ptr %9, i64 %2189
  %2191 = getelementptr inbounds i32, ptr %2190, i64 -7
  %2192 = load <8 x i32>, ptr %2191, align 4, !tbaa !5
  %2193 = shufflevector <8 x i32> %2192, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2194 = getelementptr inbounds i32, ptr %2190, i64 -15
  %2195 = load <8 x i32>, ptr %2194, align 4, !tbaa !5
  %2196 = shufflevector <8 x i32> %2195, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2197 = getelementptr inbounds i32, ptr %2190, i64 -23
  %2198 = load <8 x i32>, ptr %2197, align 4, !tbaa !5
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2200 = getelementptr inbounds i32, ptr %2190, i64 -31
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = mul <8 x i32> %2193, %2185
  %2204 = mul <8 x i32> %2196, %2186
  %2205 = mul <8 x i32> %2199, %2187
  %2206 = mul <8 x i32> %2202, %2188
  %2207 = add nuw i64 %2184, 32
  %2208 = icmp eq i64 %2207, %2181
  br i1 %2208, label %2209, label %2183, !llvm.loop !1374

2209:                                             ; preds = %2183
  %2210 = mul <8 x i32> %2204, %2203
  %2211 = mul <8 x i32> %2205, %2210
  %2212 = mul <8 x i32> %2206, %2211
  %2213 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2212)
  %2214 = icmp eq i64 %2177, %2181
  br i1 %2214, label %2227, label %2215

2215:                                             ; preds = %2168, %2209
  %2216 = phi i64 [ %2171, %2168 ], [ %2182, %2209 ]
  %2217 = phi i32 [ 1, %2168 ], [ %2213, %2209 ]
  br label %2218

2218:                                             ; preds = %2215, %2218
  %2219 = phi i64 [ %2224, %2218 ], [ %2216, %2215 ]
  %2220 = phi i32 [ %2223, %2218 ], [ %2217, %2215 ]
  %2221 = getelementptr inbounds i32, ptr %9, i64 %2219
  %2222 = load i32, ptr %2221, align 4, !tbaa !5
  %2223 = mul nsw i32 %2222, %2220
  %2224 = add nsw i64 %2219, -1
  %2225 = trunc i64 %2219 to i32
  %2226 = icmp sgt i32 %2225, 0
  br i1 %2226, label %2218, label %2227, !llvm.loop !1375

2227:                                             ; preds = %2218, %2209
  %2228 = phi i32 [ %2213, %2209 ], [ %2223, %2218 ]
  %2229 = and i64 %2178, 4294967295
  %2230 = getelementptr inbounds i32, ptr %6, i64 %2229
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2228
  %2233 = add nsw i32 %2232, %2172
  %2234 = icmp sgt i64 %2170, 2
  %2235 = add nsw i64 %2171, -1
  %2236 = add i32 %2169, 1
  br i1 %2234, label %2168, label %2237, !llvm.loop !1376

2237:                                             ; preds = %2227, %2163
  %2238 = phi i32 [ %2167, %2163 ], [ %2233, %2227 ]
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds double, ptr %1830, i64 %2239
  %2241 = load double, ptr %2240, align 8, !tbaa !18
  %2242 = fptosi double %2241 to i16
  %2243 = add i16 %2164, %2242
  %2244 = fadd fast double %2166, 1.000000e+00
  %2245 = add nuw nsw i32 %2165, 1
  br i1 %2157, label %2246, label %2293

2246:                                             ; preds = %2237
  %2247 = load i32, ptr %4, align 4, !tbaa !5
  %2248 = load i32, ptr %12, align 4, !tbaa !5
  %2249 = add nsw i32 %2248, -1
  %2250 = icmp slt i32 %2247, %2249
  br i1 %2250, label %2270, label %2251

2251:                                             ; preds = %2246
  %2252 = icmp eq i32 %2247, %2249
  br i1 %2252, label %2253, label %2286

2253:                                             ; preds = %2251
  store i32 0, ptr %4, align 4, !tbaa !5
  %2254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2254, ptr %6, align 4, !tbaa !5
  br i1 %2162, label %2293, label %2255

2255:                                             ; preds = %2253, %2280
  %2256 = phi i64 [ %2284, %2280 ], [ 1, %2253 ]
  %2257 = getelementptr inbounds i32, ptr %4, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %12, i64 %2256
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = add nsw i32 %2260, -1
  %2262 = icmp slt i32 %2258, %2261
  br i1 %2262, label %2263, label %2278

2263:                                             ; preds = %2255
  br i1 %2250, label %2270, label %2264

2264:                                             ; preds = %2263
  %2265 = getelementptr inbounds i32, ptr %7, i64 %2256
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2268 = load i32, ptr %2267, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, %2266
  store i32 %2269, ptr %2267, align 4, !tbaa !5
  br label %2288

2270:                                             ; preds = %2246, %2263
  %2271 = phi i32 [ %2258, %2263 ], [ %2247, %2246 ]
  %2272 = phi ptr [ %2257, %2263 ], [ %4, %2246 ]
  %2273 = phi i64 [ %2256, %2263 ], [ 0, %2246 ]
  %2274 = add nsw i32 %2271, 1
  store i32 %2274, ptr %2272, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %7, i64 %2273
  %2276 = load i32, ptr %2275, align 4, !tbaa !5
  %2277 = getelementptr inbounds i32, ptr %6, i64 %2273
  br label %2288

2278:                                             ; preds = %2255
  %2279 = icmp eq i32 %2258, %2261
  br i1 %2279, label %2280, label %2286

2280:                                             ; preds = %2278
  store i32 0, ptr %2257, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %8, i64 %2256
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2256
  store i32 %2282, ptr %2283, align 4, !tbaa !5
  %2284 = add nuw nsw i64 %2256, 1
  %2285 = icmp eq i64 %2284, %2160
  br i1 %2285, label %2293, label %2255, !llvm.loop !1377

2286:                                             ; preds = %2251, %2278
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  %2287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2288:                                             ; preds = %2264, %2270
  %2289 = phi ptr [ %2277, %2270 ], [ %2257, %2264 ]
  %2290 = phi i32 [ %2276, %2270 ], [ 1, %2264 ]
  %2291 = load i32, ptr %2289, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, %2290
  store i32 %2292, ptr %2289, align 4, !tbaa !5
  br label %2293

2293:                                             ; preds = %2280, %2288, %2253, %2237
  %2294 = icmp eq i32 %2245, %5
  br i1 %2294, label %5432, label %2163, !llvm.loop !1378

2295:                                             ; preds = %2146, %2430
  %2296 = phi i16 [ 0, %2146 ], [ %2378, %2430 ]
  %2297 = phi i32 [ 0, %2146 ], [ %2379, %2430 ]
  %2298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2147, label %2299, label %2368

2299:                                             ; preds = %2295, %2358
  %2300 = phi i32 [ %2367, %2358 ], [ 0, %2295 ]
  %2301 = phi i64 [ %2309, %2358 ], [ %2151, %2295 ]
  %2302 = phi i64 [ %2366, %2358 ], [ %2150, %2295 ]
  %2303 = phi i32 [ %2364, %2358 ], [ %2298, %2295 ]
  %2304 = sub i32 %2149, %2300
  %2305 = tail call i32 @llvm.smin.i32(i32 %2304, i32 0)
  %2306 = sub i32 %2304, %2305
  %2307 = zext i32 %2306 to i64
  %2308 = add nuw nsw i64 %2307, 1
  %2309 = add nsw i64 %2301, -1
  %2310 = icmp ult i32 %2306, 31
  br i1 %2310, label %2346, label %2311

2311:                                             ; preds = %2299
  %2312 = and i64 %2308, 8589934560
  %2313 = sub i64 %2302, %2312
  br label %2314

2314:                                             ; preds = %2314, %2311
  %2315 = phi i64 [ 0, %2311 ], [ %2338, %2314 ]
  %2316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2334, %2314 ]
  %2317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2335, %2314 ]
  %2318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2336, %2314 ]
  %2319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2311 ], [ %2337, %2314 ]
  %2320 = sub i64 %2302, %2315
  %2321 = getelementptr inbounds i32, ptr %11, i64 %2320
  %2322 = getelementptr inbounds i32, ptr %2321, i64 -7
  %2323 = load <8 x i32>, ptr %2322, align 4, !tbaa !5
  %2324 = shufflevector <8 x i32> %2323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2325 = getelementptr inbounds i32, ptr %2321, i64 -15
  %2326 = load <8 x i32>, ptr %2325, align 4, !tbaa !5
  %2327 = shufflevector <8 x i32> %2326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2328 = getelementptr inbounds i32, ptr %2321, i64 -23
  %2329 = load <8 x i32>, ptr %2328, align 4, !tbaa !5
  %2330 = shufflevector <8 x i32> %2329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2331 = getelementptr inbounds i32, ptr %2321, i64 -31
  %2332 = load <8 x i32>, ptr %2331, align 4, !tbaa !5
  %2333 = shufflevector <8 x i32> %2332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2334 = mul <8 x i32> %2324, %2316
  %2335 = mul <8 x i32> %2327, %2317
  %2336 = mul <8 x i32> %2330, %2318
  %2337 = mul <8 x i32> %2333, %2319
  %2338 = add nuw i64 %2315, 32
  %2339 = icmp eq i64 %2338, %2312
  br i1 %2339, label %2340, label %2314, !llvm.loop !1379

2340:                                             ; preds = %2314
  %2341 = mul <8 x i32> %2335, %2334
  %2342 = mul <8 x i32> %2336, %2341
  %2343 = mul <8 x i32> %2337, %2342
  %2344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2343)
  %2345 = icmp eq i64 %2308, %2312
  br i1 %2345, label %2358, label %2346

2346:                                             ; preds = %2299, %2340
  %2347 = phi i64 [ %2302, %2299 ], [ %2313, %2340 ]
  %2348 = phi i32 [ 1, %2299 ], [ %2344, %2340 ]
  br label %2349

2349:                                             ; preds = %2346, %2349
  %2350 = phi i64 [ %2355, %2349 ], [ %2347, %2346 ]
  %2351 = phi i32 [ %2354, %2349 ], [ %2348, %2346 ]
  %2352 = getelementptr inbounds i32, ptr %11, i64 %2350
  %2353 = load i32, ptr %2352, align 4, !tbaa !5
  %2354 = mul nsw i32 %2353, %2351
  %2355 = add nsw i64 %2350, -1
  %2356 = trunc i64 %2350 to i32
  %2357 = icmp sgt i32 %2356, 0
  br i1 %2357, label %2349, label %2358, !llvm.loop !1380

2358:                                             ; preds = %2349, %2340
  %2359 = phi i32 [ %2344, %2340 ], [ %2354, %2349 ]
  %2360 = and i64 %2309, 4294967295
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2360
  %2362 = load i32, ptr %2361, align 4, !tbaa !5
  %2363 = mul nsw i32 %2362, %2359
  %2364 = add nsw i32 %2363, %2303
  %2365 = icmp sgt i64 %2301, 2
  %2366 = add nsw i64 %2302, -1
  %2367 = add i32 %2300, 1
  br i1 %2365, label %2299, label %2368, !llvm.loop !1381

2368:                                             ; preds = %2358, %2295
  %2369 = phi i32 [ %2298, %2295 ], [ %2364, %2358 ]
  %2370 = icmp slt i32 %2369, %5
  br i1 %2370, label %2373, label %2371

2371:                                             ; preds = %2368
  %2372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2373:                                             ; preds = %2368
  %2374 = sext i32 %2369 to i64
  %2375 = getelementptr inbounds double, ptr %1830, i64 %2374
  %2376 = load double, ptr %2375, align 8, !tbaa !18
  %2377 = fptosi double %2376 to i16
  %2378 = add i16 %2296, %2377
  store i16 %2378, ptr %1832, align 2, !tbaa !78
  %2379 = add nuw nsw i32 %2297, 1
  br i1 %2148, label %2380, label %2430

2380:                                             ; preds = %2373
  %2381 = load i32, ptr %4, align 4, !tbaa !5
  %2382 = load i32, ptr %12, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, -1
  %2384 = icmp slt i32 %2381, %2383
  br i1 %2384, label %2407, label %2385

2385:                                             ; preds = %2380
  %2386 = icmp eq i32 %2381, %2383
  br i1 %2386, label %2387, label %2423

2387:                                             ; preds = %2385
  store i32 0, ptr %4, align 4, !tbaa !5
  %2388 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2388, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2430, label %2389

2389:                                             ; preds = %2387, %2417
  %2390 = phi i64 [ %2421, %2417 ], [ 1, %2387 ]
  %2391 = getelementptr inbounds i32, ptr %4, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = getelementptr inbounds i32, ptr %12, i64 %2390
  %2394 = load i32, ptr %2393, align 4, !tbaa !5
  %2395 = add nsw i32 %2394, -1
  %2396 = icmp slt i32 %2392, %2395
  br i1 %2396, label %2397, label %2415

2397:                                             ; preds = %2389
  br i1 %2384, label %2407, label %2398

2398:                                             ; preds = %2397
  %2399 = shl i64 %2390, 32
  %2400 = add i64 %2399, -4294967296
  %2401 = ashr exact i64 %2400, 32
  %2402 = getelementptr inbounds i32, ptr %7, i64 %2401
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2390
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, %2403
  store i32 %2406, ptr %2404, align 4, !tbaa !5
  br label %2425

2407:                                             ; preds = %2380, %2397
  %2408 = phi i32 [ %2392, %2397 ], [ %2381, %2380 ]
  %2409 = phi ptr [ %2391, %2397 ], [ %4, %2380 ]
  %2410 = phi i64 [ %2390, %2397 ], [ 0, %2380 ]
  %2411 = add nsw i32 %2408, 1
  store i32 %2411, ptr %2409, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %7, i64 %2410
  %2413 = load i32, ptr %2412, align 4, !tbaa !5
  %2414 = getelementptr inbounds i32, ptr %6, i64 %2410
  br label %2425

2415:                                             ; preds = %2389
  %2416 = icmp eq i32 %2392, %2395
  br i1 %2416, label %2417, label %2423

2417:                                             ; preds = %2415
  store i32 0, ptr %2391, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %8, i64 %2390
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2390
  store i32 %2419, ptr %2420, align 4, !tbaa !5
  %2421 = add nuw nsw i64 %2390, 1
  %2422 = icmp eq i64 %2421, %2151
  br i1 %2422, label %2430, label %2389, !llvm.loop !1382

2423:                                             ; preds = %2385, %2415
  %2424 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2425:                                             ; preds = %2398, %2407
  %2426 = phi ptr [ %2414, %2407 ], [ %2391, %2398 ]
  %2427 = phi i32 [ %2413, %2407 ], [ 1, %2398 ]
  %2428 = load i32, ptr %2426, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2427
  store i32 %2429, ptr %2426, align 4, !tbaa !5
  br label %2430

2430:                                             ; preds = %2417, %2425, %2387, %2373
  %2431 = icmp eq i32 %2379, %5
  br i1 %2431, label %5437, label %2295, !llvm.loop !1383

2432:                                             ; preds = %1837
  %2433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

2434:                                             ; preds = %18
  %2435 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2436 = load ptr, ptr %2435, align 8, !tbaa !9
  %2437 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2438 = load ptr, ptr %2437, align 8, !tbaa !9
  store i32 0, ptr %2438, align 4, !tbaa !5
  %2439 = icmp eq i32 %13, 0
  br i1 %2439, label %2440, label %2443

2440:                                             ; preds = %2434
  %2441 = load double, ptr %2436, align 8, !tbaa !18
  %2442 = fptosi double %2441 to i32
  store i32 %2442, ptr %2438, align 4, !tbaa !5
  br label %5437

2443:                                             ; preds = %2434
  switch i32 %1, label %3034 [
    i32 1, label %2444
    i32 0, label %2742
  ]

2444:                                             ; preds = %2443
  %2445 = getelementptr inbounds i32, ptr %3, i64 %19
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp sgt i32 %5, 0
  br i1 %2447, label %2458, label %2449

2449:                                             ; preds = %2444
  br i1 %2448, label %2450, label %5437

2450:                                             ; preds = %2449
  %2451 = icmp sgt i32 %13, 1
  %2452 = icmp sgt i32 %13, 0
  %2453 = add i32 %13, -2
  %2454 = zext i32 %2453 to i64
  %2455 = zext i32 %13 to i64
  %2456 = add nuw i32 %5, 1
  %2457 = icmp eq i32 %13, 1
  br label %2605

2458:                                             ; preds = %2444
  br i1 %2448, label %2459, label %5437

2459:                                             ; preds = %2458
  %2460 = icmp sgt i32 %13, 1
  %2461 = icmp sgt i32 %13, 0
  %2462 = add i32 %13, -2
  %2463 = zext i32 %2462 to i64
  %2464 = zext i32 %13 to i64
  %2465 = add nuw i32 %5, 1
  %2466 = icmp eq i32 %13, 1
  br label %2467

2467:                                             ; preds = %2459, %2603
  %2468 = phi i32 [ 0, %2459 ], [ %2555, %2603 ]
  %2469 = phi double [ 0.000000e+00, %2459 ], [ %2554, %2603 ]
  %2470 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2460, label %2471, label %2540

2471:                                             ; preds = %2467, %2530
  %2472 = phi i32 [ %2539, %2530 ], [ 0, %2467 ]
  %2473 = phi i64 [ %2481, %2530 ], [ %2464, %2467 ]
  %2474 = phi i64 [ %2538, %2530 ], [ %2463, %2467 ]
  %2475 = phi i32 [ %2536, %2530 ], [ %2470, %2467 ]
  %2476 = sub i32 %2462, %2472
  %2477 = tail call i32 @llvm.smin.i32(i32 %2476, i32 0)
  %2478 = sub i32 %2476, %2477
  %2479 = zext i32 %2478 to i64
  %2480 = add nuw nsw i64 %2479, 1
  %2481 = add nsw i64 %2473, -1
  %2482 = icmp ult i32 %2478, 31
  br i1 %2482, label %2518, label %2483

2483:                                             ; preds = %2471
  %2484 = and i64 %2480, 8589934560
  %2485 = sub i64 %2474, %2484
  br label %2486

2486:                                             ; preds = %2486, %2483
  %2487 = phi i64 [ 0, %2483 ], [ %2510, %2486 ]
  %2488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2506, %2486 ]
  %2489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2507, %2486 ]
  %2490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2508, %2486 ]
  %2491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2483 ], [ %2509, %2486 ]
  %2492 = sub i64 %2474, %2487
  %2493 = getelementptr inbounds i32, ptr %9, i64 %2492
  %2494 = getelementptr inbounds i32, ptr %2493, i64 -7
  %2495 = load <8 x i32>, ptr %2494, align 4, !tbaa !5
  %2496 = shufflevector <8 x i32> %2495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2497 = getelementptr inbounds i32, ptr %2493, i64 -15
  %2498 = load <8 x i32>, ptr %2497, align 4, !tbaa !5
  %2499 = shufflevector <8 x i32> %2498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2500 = getelementptr inbounds i32, ptr %2493, i64 -23
  %2501 = load <8 x i32>, ptr %2500, align 4, !tbaa !5
  %2502 = shufflevector <8 x i32> %2501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2503 = getelementptr inbounds i32, ptr %2493, i64 -31
  %2504 = load <8 x i32>, ptr %2503, align 4, !tbaa !5
  %2505 = shufflevector <8 x i32> %2504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2506 = mul <8 x i32> %2496, %2488
  %2507 = mul <8 x i32> %2499, %2489
  %2508 = mul <8 x i32> %2502, %2490
  %2509 = mul <8 x i32> %2505, %2491
  %2510 = add nuw i64 %2487, 32
  %2511 = icmp eq i64 %2510, %2484
  br i1 %2511, label %2512, label %2486, !llvm.loop !1384

2512:                                             ; preds = %2486
  %2513 = mul <8 x i32> %2507, %2506
  %2514 = mul <8 x i32> %2508, %2513
  %2515 = mul <8 x i32> %2509, %2514
  %2516 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2515)
  %2517 = icmp eq i64 %2480, %2484
  br i1 %2517, label %2530, label %2518

2518:                                             ; preds = %2471, %2512
  %2519 = phi i64 [ %2474, %2471 ], [ %2485, %2512 ]
  %2520 = phi i32 [ 1, %2471 ], [ %2516, %2512 ]
  br label %2521

2521:                                             ; preds = %2518, %2521
  %2522 = phi i64 [ %2527, %2521 ], [ %2519, %2518 ]
  %2523 = phi i32 [ %2526, %2521 ], [ %2520, %2518 ]
  %2524 = getelementptr inbounds i32, ptr %9, i64 %2522
  %2525 = load i32, ptr %2524, align 4, !tbaa !5
  %2526 = mul nsw i32 %2525, %2523
  %2527 = add nsw i64 %2522, -1
  %2528 = trunc i64 %2522 to i32
  %2529 = icmp sgt i32 %2528, 0
  br i1 %2529, label %2521, label %2530, !llvm.loop !1385

2530:                                             ; preds = %2521, %2512
  %2531 = phi i32 [ %2516, %2512 ], [ %2526, %2521 ]
  %2532 = and i64 %2481, 4294967295
  %2533 = getelementptr inbounds i32, ptr %6, i64 %2532
  %2534 = load i32, ptr %2533, align 4, !tbaa !5
  %2535 = mul nsw i32 %2534, %2531
  %2536 = add nsw i32 %2535, %2475
  %2537 = icmp sgt i64 %2473, 2
  %2538 = add nsw i64 %2474, -1
  %2539 = add i32 %2472, 1
  br i1 %2537, label %2471, label %2540, !llvm.loop !1386

2540:                                             ; preds = %2530, %2467
  %2541 = phi i32 [ %2470, %2467 ], [ %2536, %2530 ]
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds double, ptr %2, i64 %2542
  %2544 = load double, ptr %2543, align 8, !tbaa !18
  %2545 = getelementptr inbounds double, ptr %2436, i64 %2542
  %2546 = load double, ptr %2545, align 8, !tbaa !18
  %2547 = fptosi double %2546 to i32
  %2548 = load i32, ptr %2438, align 4, !tbaa !5
  %2549 = sitofp i32 %2548 to double
  %2550 = sitofp i32 %2547 to double
  %2551 = fmul fast double %2544, %2550
  %2552 = fadd fast double %2551, %2549
  %2553 = fptosi double %2552 to i32
  store i32 %2553, ptr %2438, align 4, !tbaa !5
  %2554 = fadd fast double %2544, %2469
  %2555 = add nuw nsw i32 %2468, 1
  br i1 %2461, label %2556, label %2603

2556:                                             ; preds = %2540
  %2557 = load i32, ptr %4, align 4, !tbaa !5
  %2558 = load i32, ptr %12, align 4, !tbaa !5
  %2559 = add nsw i32 %2558, -1
  %2560 = icmp slt i32 %2557, %2559
  br i1 %2560, label %2580, label %2561

2561:                                             ; preds = %2556
  %2562 = icmp eq i32 %2557, %2559
  br i1 %2562, label %2563, label %2596

2563:                                             ; preds = %2561
  store i32 0, ptr %4, align 4, !tbaa !5
  %2564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2564, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2603, label %2565

2565:                                             ; preds = %2563, %2590
  %2566 = phi i64 [ %2594, %2590 ], [ 1, %2563 ]
  %2567 = getelementptr inbounds i32, ptr %4, i64 %2566
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %12, i64 %2566
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = add nsw i32 %2570, -1
  %2572 = icmp slt i32 %2568, %2571
  br i1 %2572, label %2573, label %2588

2573:                                             ; preds = %2565
  br i1 %2560, label %2580, label %2574

2574:                                             ; preds = %2573
  %2575 = getelementptr inbounds i32, ptr %7, i64 %2566
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %6, i64 %2566
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = add nsw i32 %2578, %2576
  store i32 %2579, ptr %2577, align 4, !tbaa !5
  br label %2598

2580:                                             ; preds = %2556, %2573
  %2581 = phi i32 [ %2568, %2573 ], [ %2557, %2556 ]
  %2582 = phi ptr [ %2567, %2573 ], [ %4, %2556 ]
  %2583 = phi i64 [ %2566, %2573 ], [ 0, %2556 ]
  %2584 = add nsw i32 %2581, 1
  store i32 %2584, ptr %2582, align 4, !tbaa !5
  %2585 = getelementptr inbounds i32, ptr %7, i64 %2583
  %2586 = load i32, ptr %2585, align 4, !tbaa !5
  %2587 = getelementptr inbounds i32, ptr %6, i64 %2583
  br label %2598

2588:                                             ; preds = %2565
  %2589 = icmp eq i32 %2568, %2571
  br i1 %2589, label %2590, label %2596

2590:                                             ; preds = %2588
  store i32 0, ptr %2567, align 4, !tbaa !5
  %2591 = getelementptr inbounds i32, ptr %8, i64 %2566
  %2592 = load i32, ptr %2591, align 4, !tbaa !5
  %2593 = getelementptr inbounds i32, ptr %6, i64 %2566
  store i32 %2592, ptr %2593, align 4, !tbaa !5
  %2594 = add nuw nsw i64 %2566, 1
  %2595 = icmp eq i64 %2594, %2464
  br i1 %2595, label %2603, label %2565, !llvm.loop !1387

2596:                                             ; preds = %2561, %2588
  %2597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2598:                                             ; preds = %2574, %2580
  %2599 = phi ptr [ %2587, %2580 ], [ %2567, %2574 ]
  %2600 = phi i32 [ %2586, %2580 ], [ 1, %2574 ]
  %2601 = load i32, ptr %2599, align 4, !tbaa !5
  %2602 = add nsw i32 %2601, %2600
  store i32 %2602, ptr %2599, align 4, !tbaa !5
  br label %2603

2603:                                             ; preds = %2590, %2598, %2563, %2540
  %2604 = icmp eq i32 %2555, %5
  br i1 %2604, label %5437, label %2467, !llvm.loop !1388

2605:                                             ; preds = %2450, %2740
  %2606 = phi i32 [ 0, %2450 ], [ %2689, %2740 ]
  %2607 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2451, label %2608, label %2677

2608:                                             ; preds = %2605, %2667
  %2609 = phi i32 [ %2676, %2667 ], [ 0, %2605 ]
  %2610 = phi i64 [ %2618, %2667 ], [ %2455, %2605 ]
  %2611 = phi i64 [ %2675, %2667 ], [ %2454, %2605 ]
  %2612 = phi i32 [ %2673, %2667 ], [ %2607, %2605 ]
  %2613 = sub i32 %2453, %2609
  %2614 = tail call i32 @llvm.smin.i32(i32 %2613, i32 0)
  %2615 = sub i32 %2613, %2614
  %2616 = zext i32 %2615 to i64
  %2617 = add nuw nsw i64 %2616, 1
  %2618 = add nsw i64 %2610, -1
  %2619 = icmp ult i32 %2615, 31
  br i1 %2619, label %2655, label %2620

2620:                                             ; preds = %2608
  %2621 = and i64 %2617, 8589934560
  %2622 = sub i64 %2611, %2621
  br label %2623

2623:                                             ; preds = %2623, %2620
  %2624 = phi i64 [ 0, %2620 ], [ %2647, %2623 ]
  %2625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2643, %2623 ]
  %2626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2644, %2623 ]
  %2627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2645, %2623 ]
  %2628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2620 ], [ %2646, %2623 ]
  %2629 = sub i64 %2611, %2624
  %2630 = getelementptr inbounds i32, ptr %11, i64 %2629
  %2631 = getelementptr inbounds i32, ptr %2630, i64 -7
  %2632 = load <8 x i32>, ptr %2631, align 4, !tbaa !5
  %2633 = shufflevector <8 x i32> %2632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2634 = getelementptr inbounds i32, ptr %2630, i64 -15
  %2635 = load <8 x i32>, ptr %2634, align 4, !tbaa !5
  %2636 = shufflevector <8 x i32> %2635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2637 = getelementptr inbounds i32, ptr %2630, i64 -23
  %2638 = load <8 x i32>, ptr %2637, align 4, !tbaa !5
  %2639 = shufflevector <8 x i32> %2638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2640 = getelementptr inbounds i32, ptr %2630, i64 -31
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = mul <8 x i32> %2633, %2625
  %2644 = mul <8 x i32> %2636, %2626
  %2645 = mul <8 x i32> %2639, %2627
  %2646 = mul <8 x i32> %2642, %2628
  %2647 = add nuw i64 %2624, 32
  %2648 = icmp eq i64 %2647, %2621
  br i1 %2648, label %2649, label %2623, !llvm.loop !1389

2649:                                             ; preds = %2623
  %2650 = mul <8 x i32> %2644, %2643
  %2651 = mul <8 x i32> %2645, %2650
  %2652 = mul <8 x i32> %2646, %2651
  %2653 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2652)
  %2654 = icmp eq i64 %2617, %2621
  br i1 %2654, label %2667, label %2655

2655:                                             ; preds = %2608, %2649
  %2656 = phi i64 [ %2611, %2608 ], [ %2622, %2649 ]
  %2657 = phi i32 [ 1, %2608 ], [ %2653, %2649 ]
  br label %2658

2658:                                             ; preds = %2655, %2658
  %2659 = phi i64 [ %2664, %2658 ], [ %2656, %2655 ]
  %2660 = phi i32 [ %2663, %2658 ], [ %2657, %2655 ]
  %2661 = getelementptr inbounds i32, ptr %11, i64 %2659
  %2662 = load i32, ptr %2661, align 4, !tbaa !5
  %2663 = mul nsw i32 %2662, %2660
  %2664 = add nsw i64 %2659, -1
  %2665 = trunc i64 %2659 to i32
  %2666 = icmp sgt i32 %2665, 0
  br i1 %2666, label %2658, label %2667, !llvm.loop !1390

2667:                                             ; preds = %2658, %2649
  %2668 = phi i32 [ %2653, %2649 ], [ %2663, %2658 ]
  %2669 = and i64 %2618, 4294967295
  %2670 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2668
  %2673 = add nsw i32 %2672, %2612
  %2674 = icmp sgt i64 %2610, 2
  %2675 = add nsw i64 %2611, -1
  %2676 = add i32 %2609, 1
  br i1 %2674, label %2608, label %2677, !llvm.loop !1391

2677:                                             ; preds = %2667, %2605
  %2678 = phi i32 [ %2607, %2605 ], [ %2673, %2667 ]
  %2679 = icmp slt i32 %2678, %5
  br i1 %2679, label %2682, label %2680

2680:                                             ; preds = %2677
  %2681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2682:                                             ; preds = %2677
  %2683 = sext i32 %2678 to i64
  %2684 = getelementptr inbounds double, ptr %2436, i64 %2683
  %2685 = load double, ptr %2684, align 8, !tbaa !18
  %2686 = fptosi double %2685 to i32
  %2687 = load i32, ptr %2438, align 4, !tbaa !5
  %2688 = add i32 %2687, %2686
  store i32 %2688, ptr %2438, align 4, !tbaa !5
  %2689 = add nuw nsw i32 %2606, 1
  br i1 %2452, label %2690, label %2740

2690:                                             ; preds = %2682
  %2691 = load i32, ptr %4, align 4, !tbaa !5
  %2692 = load i32, ptr %12, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, -1
  %2694 = icmp slt i32 %2691, %2693
  br i1 %2694, label %2717, label %2695

2695:                                             ; preds = %2690
  %2696 = icmp eq i32 %2691, %2693
  br i1 %2696, label %2697, label %2733

2697:                                             ; preds = %2695
  store i32 0, ptr %4, align 4, !tbaa !5
  %2698 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2698, ptr %6, align 4, !tbaa !5
  br i1 %2457, label %2740, label %2699

2699:                                             ; preds = %2697, %2727
  %2700 = phi i64 [ %2731, %2727 ], [ 1, %2697 ]
  %2701 = getelementptr inbounds i32, ptr %4, i64 %2700
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = getelementptr inbounds i32, ptr %12, i64 %2700
  %2704 = load i32, ptr %2703, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, -1
  %2706 = icmp slt i32 %2702, %2705
  br i1 %2706, label %2707, label %2725

2707:                                             ; preds = %2699
  br i1 %2694, label %2717, label %2708

2708:                                             ; preds = %2707
  %2709 = shl i64 %2700, 32
  %2710 = add i64 %2709, -4294967296
  %2711 = ashr exact i64 %2710, 32
  %2712 = getelementptr inbounds i32, ptr %7, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2700
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2713
  store i32 %2716, ptr %2714, align 4, !tbaa !5
  br label %2735

2717:                                             ; preds = %2690, %2707
  %2718 = phi i32 [ %2702, %2707 ], [ %2691, %2690 ]
  %2719 = phi ptr [ %2701, %2707 ], [ %4, %2690 ]
  %2720 = phi i64 [ %2700, %2707 ], [ 0, %2690 ]
  %2721 = add nsw i32 %2718, 1
  store i32 %2721, ptr %2719, align 4, !tbaa !5
  %2722 = getelementptr inbounds i32, ptr %7, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !5
  %2724 = getelementptr inbounds i32, ptr %6, i64 %2720
  br label %2735

2725:                                             ; preds = %2699
  %2726 = icmp eq i32 %2702, %2705
  br i1 %2726, label %2727, label %2733

2727:                                             ; preds = %2725
  store i32 0, ptr %2701, align 4, !tbaa !5
  %2728 = getelementptr inbounds i32, ptr %8, i64 %2700
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = getelementptr inbounds i32, ptr %6, i64 %2700
  store i32 %2729, ptr %2730, align 4, !tbaa !5
  %2731 = add nuw nsw i64 %2700, 1
  %2732 = icmp eq i64 %2731, %2455
  br i1 %2732, label %2740, label %2699, !llvm.loop !1392

2733:                                             ; preds = %2695, %2725
  %2734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2735:                                             ; preds = %2708, %2717
  %2736 = phi ptr [ %2724, %2717 ], [ %2701, %2708 ]
  %2737 = phi i32 [ %2723, %2717 ], [ 1, %2708 ]
  %2738 = load i32, ptr %2736, align 4, !tbaa !5
  %2739 = add nsw i32 %2738, %2737
  store i32 %2739, ptr %2736, align 4, !tbaa !5
  br label %2740

2740:                                             ; preds = %2727, %2735, %2697, %2682
  %2741 = icmp eq i32 %2689, %5
  br i1 %2741, label %5437, label %2605, !llvm.loop !1393

2742:                                             ; preds = %2443
  %2743 = getelementptr inbounds i32, ptr %3, i64 %19
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp sgt i32 %5, 0
  br i1 %2745, label %2756, label %2747

2747:                                             ; preds = %2742
  br i1 %2746, label %2748, label %5437

2748:                                             ; preds = %2747
  %2749 = icmp sgt i32 %13, 1
  %2750 = icmp sgt i32 %13, 0
  %2751 = add i32 %13, -2
  %2752 = zext i32 %2751 to i64
  %2753 = zext i32 %13 to i64
  %2754 = add nuw i32 %5, 1
  %2755 = icmp eq i32 %13, 1
  br label %2897

2756:                                             ; preds = %2742
  br i1 %2746, label %2757, label %5437

2757:                                             ; preds = %2756
  %2758 = icmp sgt i32 %13, 1
  %2759 = icmp sgt i32 %13, 0
  %2760 = add i32 %13, -2
  %2761 = zext i32 %2760 to i64
  %2762 = zext i32 %13 to i64
  %2763 = add nuw i32 %5, 1
  %2764 = icmp eq i32 %13, 1
  br label %2765

2765:                                             ; preds = %2757, %2895
  %2766 = phi i32 [ 0, %2757 ], [ %2847, %2895 ]
  %2767 = phi double [ 0.000000e+00, %2757 ], [ %2846, %2895 ]
  %2768 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2758, label %2769, label %2838

2769:                                             ; preds = %2765, %2828
  %2770 = phi i32 [ %2837, %2828 ], [ 0, %2765 ]
  %2771 = phi i64 [ %2779, %2828 ], [ %2762, %2765 ]
  %2772 = phi i64 [ %2836, %2828 ], [ %2761, %2765 ]
  %2773 = phi i32 [ %2834, %2828 ], [ %2768, %2765 ]
  %2774 = sub i32 %2760, %2770
  %2775 = tail call i32 @llvm.smin.i32(i32 %2774, i32 0)
  %2776 = sub i32 %2774, %2775
  %2777 = zext i32 %2776 to i64
  %2778 = add nuw nsw i64 %2777, 1
  %2779 = add nsw i64 %2771, -1
  %2780 = icmp ult i32 %2776, 31
  br i1 %2780, label %2816, label %2781

2781:                                             ; preds = %2769
  %2782 = and i64 %2778, 8589934560
  %2783 = sub i64 %2772, %2782
  br label %2784

2784:                                             ; preds = %2784, %2781
  %2785 = phi i64 [ 0, %2781 ], [ %2808, %2784 ]
  %2786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2804, %2784 ]
  %2787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2805, %2784 ]
  %2788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2806, %2784 ]
  %2789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2781 ], [ %2807, %2784 ]
  %2790 = sub i64 %2772, %2785
  %2791 = getelementptr inbounds i32, ptr %9, i64 %2790
  %2792 = getelementptr inbounds i32, ptr %2791, i64 -7
  %2793 = load <8 x i32>, ptr %2792, align 4, !tbaa !5
  %2794 = shufflevector <8 x i32> %2793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2795 = getelementptr inbounds i32, ptr %2791, i64 -15
  %2796 = load <8 x i32>, ptr %2795, align 4, !tbaa !5
  %2797 = shufflevector <8 x i32> %2796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2798 = getelementptr inbounds i32, ptr %2791, i64 -23
  %2799 = load <8 x i32>, ptr %2798, align 4, !tbaa !5
  %2800 = shufflevector <8 x i32> %2799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2801 = getelementptr inbounds i32, ptr %2791, i64 -31
  %2802 = load <8 x i32>, ptr %2801, align 4, !tbaa !5
  %2803 = shufflevector <8 x i32> %2802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2804 = mul <8 x i32> %2794, %2786
  %2805 = mul <8 x i32> %2797, %2787
  %2806 = mul <8 x i32> %2800, %2788
  %2807 = mul <8 x i32> %2803, %2789
  %2808 = add nuw i64 %2785, 32
  %2809 = icmp eq i64 %2808, %2782
  br i1 %2809, label %2810, label %2784, !llvm.loop !1394

2810:                                             ; preds = %2784
  %2811 = mul <8 x i32> %2805, %2804
  %2812 = mul <8 x i32> %2806, %2811
  %2813 = mul <8 x i32> %2807, %2812
  %2814 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2813)
  %2815 = icmp eq i64 %2778, %2782
  br i1 %2815, label %2828, label %2816

2816:                                             ; preds = %2769, %2810
  %2817 = phi i64 [ %2772, %2769 ], [ %2783, %2810 ]
  %2818 = phi i32 [ 1, %2769 ], [ %2814, %2810 ]
  br label %2819

2819:                                             ; preds = %2816, %2819
  %2820 = phi i64 [ %2825, %2819 ], [ %2817, %2816 ]
  %2821 = phi i32 [ %2824, %2819 ], [ %2818, %2816 ]
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2823 = load i32, ptr %2822, align 4, !tbaa !5
  %2824 = mul nsw i32 %2823, %2821
  %2825 = add nsw i64 %2820, -1
  %2826 = trunc i64 %2820 to i32
  %2827 = icmp sgt i32 %2826, 0
  br i1 %2827, label %2819, label %2828, !llvm.loop !1395

2828:                                             ; preds = %2819, %2810
  %2829 = phi i32 [ %2814, %2810 ], [ %2824, %2819 ]
  %2830 = and i64 %2779, 4294967295
  %2831 = getelementptr inbounds i32, ptr %6, i64 %2830
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = mul nsw i32 %2832, %2829
  %2834 = add nsw i32 %2833, %2773
  %2835 = icmp sgt i64 %2771, 2
  %2836 = add nsw i64 %2772, -1
  %2837 = add i32 %2770, 1
  br i1 %2835, label %2769, label %2838, !llvm.loop !1396

2838:                                             ; preds = %2828, %2765
  %2839 = phi i32 [ %2768, %2765 ], [ %2834, %2828 ]
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds double, ptr %2436, i64 %2840
  %2842 = load double, ptr %2841, align 8, !tbaa !18
  %2843 = fptosi double %2842 to i32
  %2844 = load i32, ptr %2438, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2843
  store i32 %2845, ptr %2438, align 4, !tbaa !5
  %2846 = fadd fast double %2767, 1.000000e+00
  %2847 = add nuw nsw i32 %2766, 1
  br i1 %2759, label %2848, label %2895

2848:                                             ; preds = %2838
  %2849 = load i32, ptr %4, align 4, !tbaa !5
  %2850 = load i32, ptr %12, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, -1
  %2852 = icmp slt i32 %2849, %2851
  br i1 %2852, label %2872, label %2853

2853:                                             ; preds = %2848
  %2854 = icmp eq i32 %2849, %2851
  br i1 %2854, label %2855, label %2888

2855:                                             ; preds = %2853
  store i32 0, ptr %4, align 4, !tbaa !5
  %2856 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2856, ptr %6, align 4, !tbaa !5
  br i1 %2764, label %2895, label %2857

2857:                                             ; preds = %2855, %2882
  %2858 = phi i64 [ %2886, %2882 ], [ 1, %2855 ]
  %2859 = getelementptr inbounds i32, ptr %4, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = getelementptr inbounds i32, ptr %12, i64 %2858
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = add nsw i32 %2862, -1
  %2864 = icmp slt i32 %2860, %2863
  br i1 %2864, label %2865, label %2880

2865:                                             ; preds = %2857
  br i1 %2852, label %2872, label %2866

2866:                                             ; preds = %2865
  %2867 = getelementptr inbounds i32, ptr %7, i64 %2858
  %2868 = load i32, ptr %2867, align 4, !tbaa !5
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = add nsw i32 %2870, %2868
  store i32 %2871, ptr %2869, align 4, !tbaa !5
  br label %2890

2872:                                             ; preds = %2848, %2865
  %2873 = phi i32 [ %2860, %2865 ], [ %2849, %2848 ]
  %2874 = phi ptr [ %2859, %2865 ], [ %4, %2848 ]
  %2875 = phi i64 [ %2858, %2865 ], [ 0, %2848 ]
  %2876 = add nsw i32 %2873, 1
  store i32 %2876, ptr %2874, align 4, !tbaa !5
  %2877 = getelementptr inbounds i32, ptr %7, i64 %2875
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2875
  br label %2890

2880:                                             ; preds = %2857
  %2881 = icmp eq i32 %2860, %2863
  br i1 %2881, label %2882, label %2888

2882:                                             ; preds = %2880
  store i32 0, ptr %2859, align 4, !tbaa !5
  %2883 = getelementptr inbounds i32, ptr %8, i64 %2858
  %2884 = load i32, ptr %2883, align 4, !tbaa !5
  %2885 = getelementptr inbounds i32, ptr %6, i64 %2858
  store i32 %2884, ptr %2885, align 4, !tbaa !5
  %2886 = add nuw nsw i64 %2858, 1
  %2887 = icmp eq i64 %2886, %2762
  br i1 %2887, label %2895, label %2857, !llvm.loop !1397

2888:                                             ; preds = %2853, %2880
  %2889 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

2890:                                             ; preds = %2866, %2872
  %2891 = phi ptr [ %2879, %2872 ], [ %2859, %2866 ]
  %2892 = phi i32 [ %2878, %2872 ], [ 1, %2866 ]
  %2893 = load i32, ptr %2891, align 4, !tbaa !5
  %2894 = add nsw i32 %2893, %2892
  store i32 %2894, ptr %2891, align 4, !tbaa !5
  br label %2895

2895:                                             ; preds = %2882, %2890, %2855, %2838
  %2896 = icmp eq i32 %2847, %5
  br i1 %2896, label %5437, label %2765, !llvm.loop !1398

2897:                                             ; preds = %2748, %3032
  %2898 = phi i32 [ 0, %2748 ], [ %2981, %3032 ]
  %2899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2749, label %2900, label %2969

2900:                                             ; preds = %2897, %2959
  %2901 = phi i32 [ %2968, %2959 ], [ 0, %2897 ]
  %2902 = phi i64 [ %2910, %2959 ], [ %2753, %2897 ]
  %2903 = phi i64 [ %2967, %2959 ], [ %2752, %2897 ]
  %2904 = phi i32 [ %2965, %2959 ], [ %2899, %2897 ]
  %2905 = sub i32 %2751, %2901
  %2906 = tail call i32 @llvm.smin.i32(i32 %2905, i32 0)
  %2907 = sub i32 %2905, %2906
  %2908 = zext i32 %2907 to i64
  %2909 = add nuw nsw i64 %2908, 1
  %2910 = add nsw i64 %2902, -1
  %2911 = icmp ult i32 %2907, 31
  br i1 %2911, label %2947, label %2912

2912:                                             ; preds = %2900
  %2913 = and i64 %2909, 8589934560
  %2914 = sub i64 %2903, %2913
  br label %2915

2915:                                             ; preds = %2915, %2912
  %2916 = phi i64 [ 0, %2912 ], [ %2939, %2915 ]
  %2917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2935, %2915 ]
  %2918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2936, %2915 ]
  %2919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2937, %2915 ]
  %2920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2912 ], [ %2938, %2915 ]
  %2921 = sub i64 %2903, %2916
  %2922 = getelementptr inbounds i32, ptr %11, i64 %2921
  %2923 = getelementptr inbounds i32, ptr %2922, i64 -7
  %2924 = load <8 x i32>, ptr %2923, align 4, !tbaa !5
  %2925 = shufflevector <8 x i32> %2924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2926 = getelementptr inbounds i32, ptr %2922, i64 -15
  %2927 = load <8 x i32>, ptr %2926, align 4, !tbaa !5
  %2928 = shufflevector <8 x i32> %2927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2929 = getelementptr inbounds i32, ptr %2922, i64 -23
  %2930 = load <8 x i32>, ptr %2929, align 4, !tbaa !5
  %2931 = shufflevector <8 x i32> %2930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2932 = getelementptr inbounds i32, ptr %2922, i64 -31
  %2933 = load <8 x i32>, ptr %2932, align 4, !tbaa !5
  %2934 = shufflevector <8 x i32> %2933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2935 = mul <8 x i32> %2925, %2917
  %2936 = mul <8 x i32> %2928, %2918
  %2937 = mul <8 x i32> %2931, %2919
  %2938 = mul <8 x i32> %2934, %2920
  %2939 = add nuw i64 %2916, 32
  %2940 = icmp eq i64 %2939, %2913
  br i1 %2940, label %2941, label %2915, !llvm.loop !1399

2941:                                             ; preds = %2915
  %2942 = mul <8 x i32> %2936, %2935
  %2943 = mul <8 x i32> %2937, %2942
  %2944 = mul <8 x i32> %2938, %2943
  %2945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2944)
  %2946 = icmp eq i64 %2909, %2913
  br i1 %2946, label %2959, label %2947

2947:                                             ; preds = %2900, %2941
  %2948 = phi i64 [ %2903, %2900 ], [ %2914, %2941 ]
  %2949 = phi i32 [ 1, %2900 ], [ %2945, %2941 ]
  br label %2950

2950:                                             ; preds = %2947, %2950
  %2951 = phi i64 [ %2956, %2950 ], [ %2948, %2947 ]
  %2952 = phi i32 [ %2955, %2950 ], [ %2949, %2947 ]
  %2953 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2954 = load i32, ptr %2953, align 4, !tbaa !5
  %2955 = mul nsw i32 %2954, %2952
  %2956 = add nsw i64 %2951, -1
  %2957 = trunc i64 %2951 to i32
  %2958 = icmp sgt i32 %2957, 0
  br i1 %2958, label %2950, label %2959, !llvm.loop !1400

2959:                                             ; preds = %2950, %2941
  %2960 = phi i32 [ %2945, %2941 ], [ %2955, %2950 ]
  %2961 = and i64 %2910, 4294967295
  %2962 = getelementptr inbounds i32, ptr %6, i64 %2961
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = mul nsw i32 %2963, %2960
  %2965 = add nsw i32 %2964, %2904
  %2966 = icmp sgt i64 %2902, 2
  %2967 = add nsw i64 %2903, -1
  %2968 = add i32 %2901, 1
  br i1 %2966, label %2900, label %2969, !llvm.loop !1401

2969:                                             ; preds = %2959, %2897
  %2970 = phi i32 [ %2899, %2897 ], [ %2965, %2959 ]
  %2971 = icmp slt i32 %2970, %5
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2969
  %2973 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

2974:                                             ; preds = %2969
  %2975 = sext i32 %2970 to i64
  %2976 = getelementptr inbounds double, ptr %2436, i64 %2975
  %2977 = load double, ptr %2976, align 8, !tbaa !18
  %2978 = fptosi double %2977 to i32
  %2979 = load i32, ptr %2438, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2978
  store i32 %2980, ptr %2438, align 4, !tbaa !5
  %2981 = add nuw nsw i32 %2898, 1
  br i1 %2750, label %2982, label %3032

2982:                                             ; preds = %2974
  %2983 = load i32, ptr %4, align 4, !tbaa !5
  %2984 = load i32, ptr %12, align 4, !tbaa !5
  %2985 = add nsw i32 %2984, -1
  %2986 = icmp slt i32 %2983, %2985
  br i1 %2986, label %3009, label %2987

2987:                                             ; preds = %2982
  %2988 = icmp eq i32 %2983, %2985
  br i1 %2988, label %2989, label %3025

2989:                                             ; preds = %2987
  store i32 0, ptr %4, align 4, !tbaa !5
  %2990 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2990, ptr %6, align 4, !tbaa !5
  br i1 %2755, label %3032, label %2991

2991:                                             ; preds = %2989, %3019
  %2992 = phi i64 [ %3023, %3019 ], [ 1, %2989 ]
  %2993 = getelementptr inbounds i32, ptr %4, i64 %2992
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %12, i64 %2992
  %2996 = load i32, ptr %2995, align 4, !tbaa !5
  %2997 = add nsw i32 %2996, -1
  %2998 = icmp slt i32 %2994, %2997
  br i1 %2998, label %2999, label %3017

2999:                                             ; preds = %2991
  br i1 %2986, label %3009, label %3000

3000:                                             ; preds = %2999
  %3001 = shl i64 %2992, 32
  %3002 = add i64 %3001, -4294967296
  %3003 = ashr exact i64 %3002, 32
  %3004 = getelementptr inbounds i32, ptr %7, i64 %3003
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %6, i64 %2992
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = add nsw i32 %3007, %3005
  store i32 %3008, ptr %3006, align 4, !tbaa !5
  br label %3027

3009:                                             ; preds = %2982, %2999
  %3010 = phi i32 [ %2994, %2999 ], [ %2983, %2982 ]
  %3011 = phi ptr [ %2993, %2999 ], [ %4, %2982 ]
  %3012 = phi i64 [ %2992, %2999 ], [ 0, %2982 ]
  %3013 = add nsw i32 %3010, 1
  store i32 %3013, ptr %3011, align 4, !tbaa !5
  %3014 = getelementptr inbounds i32, ptr %7, i64 %3012
  %3015 = load i32, ptr %3014, align 4, !tbaa !5
  %3016 = getelementptr inbounds i32, ptr %6, i64 %3012
  br label %3027

3017:                                             ; preds = %2991
  %3018 = icmp eq i32 %2994, %2997
  br i1 %3018, label %3019, label %3025

3019:                                             ; preds = %3017
  store i32 0, ptr %2993, align 4, !tbaa !5
  %3020 = getelementptr inbounds i32, ptr %8, i64 %2992
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = getelementptr inbounds i32, ptr %6, i64 %2992
  store i32 %3021, ptr %3022, align 4, !tbaa !5
  %3023 = add nuw nsw i64 %2992, 1
  %3024 = icmp eq i64 %3023, %2753
  br i1 %3024, label %3032, label %2991, !llvm.loop !1402

3025:                                             ; preds = %2987, %3017
  %3026 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3027:                                             ; preds = %3000, %3009
  %3028 = phi ptr [ %3016, %3009 ], [ %2993, %3000 ]
  %3029 = phi i32 [ %3015, %3009 ], [ 1, %3000 ]
  %3030 = load i32, ptr %3028, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, %3029
  store i32 %3031, ptr %3028, align 4, !tbaa !5
  br label %3032

3032:                                             ; preds = %3019, %3027, %2989, %2974
  %3033 = icmp eq i32 %2981, %5
  br i1 %3033, label %5437, label %2897, !llvm.loop !1403

3034:                                             ; preds = %2443
  %3035 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

3036:                                             ; preds = %18
  %3037 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3038 = load ptr, ptr %3037, align 8, !tbaa !9
  %3039 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3040 = load ptr, ptr %3039, align 8, !tbaa !9
  store i64 0, ptr %3040, align 8, !tbaa !120
  %3041 = icmp eq i32 %13, 0
  br i1 %3041, label %3042, label %3045

3042:                                             ; preds = %3036
  %3043 = load double, ptr %3038, align 8, !tbaa !18
  %3044 = fptosi double %3043 to i64
  store i64 %3044, ptr %3040, align 8, !tbaa !120
  br label %5437

3045:                                             ; preds = %3036
  switch i32 %1, label %3639 [
    i32 1, label %3046
    i32 0, label %3347
  ]

3046:                                             ; preds = %3045
  %3047 = getelementptr inbounds i32, ptr %3, i64 %19
  %3048 = load i32, ptr %3047, align 4, !tbaa !5
  %3049 = icmp eq i32 %3048, 0
  %3050 = icmp sgt i32 %5, 0
  br i1 %3049, label %3060, label %3051

3051:                                             ; preds = %3046
  br i1 %3050, label %3052, label %5437

3052:                                             ; preds = %3051
  %3053 = icmp sgt i32 %13, 1
  %3054 = icmp sgt i32 %13, 0
  %3055 = add i32 %13, -2
  %3056 = zext i32 %3055 to i64
  %3057 = zext i32 %13 to i64
  %3058 = add nuw i32 %5, 1
  %3059 = icmp eq i32 %13, 1
  br label %3207

3060:                                             ; preds = %3046
  br i1 %3050, label %3061, label %5437

3061:                                             ; preds = %3060
  %3062 = icmp sgt i32 %13, 1
  %3063 = icmp sgt i32 %13, 0
  %3064 = add i32 %13, -2
  %3065 = zext i32 %3064 to i64
  %3066 = zext i32 %13 to i64
  %3067 = add nuw i32 %5, 1
  %3068 = icmp eq i32 %13, 1
  br label %3069

3069:                                             ; preds = %3061, %3205
  %3070 = phi i64 [ 0, %3061 ], [ %3155, %3205 ]
  %3071 = phi i32 [ 0, %3061 ], [ %3157, %3205 ]
  %3072 = phi double [ 0.000000e+00, %3061 ], [ %3156, %3205 ]
  %3073 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3062, label %3074, label %3143

3074:                                             ; preds = %3069, %3133
  %3075 = phi i32 [ %3142, %3133 ], [ 0, %3069 ]
  %3076 = phi i64 [ %3084, %3133 ], [ %3066, %3069 ]
  %3077 = phi i64 [ %3141, %3133 ], [ %3065, %3069 ]
  %3078 = phi i32 [ %3139, %3133 ], [ %3073, %3069 ]
  %3079 = sub i32 %3064, %3075
  %3080 = tail call i32 @llvm.smin.i32(i32 %3079, i32 0)
  %3081 = sub i32 %3079, %3080
  %3082 = zext i32 %3081 to i64
  %3083 = add nuw nsw i64 %3082, 1
  %3084 = add nsw i64 %3076, -1
  %3085 = icmp ult i32 %3081, 31
  br i1 %3085, label %3121, label %3086

3086:                                             ; preds = %3074
  %3087 = and i64 %3083, 8589934560
  %3088 = sub i64 %3077, %3087
  br label %3089

3089:                                             ; preds = %3089, %3086
  %3090 = phi i64 [ 0, %3086 ], [ %3113, %3089 ]
  %3091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3109, %3089 ]
  %3092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3110, %3089 ]
  %3093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3111, %3089 ]
  %3094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3086 ], [ %3112, %3089 ]
  %3095 = sub i64 %3077, %3090
  %3096 = getelementptr inbounds i32, ptr %9, i64 %3095
  %3097 = getelementptr inbounds i32, ptr %3096, i64 -7
  %3098 = load <8 x i32>, ptr %3097, align 4, !tbaa !5
  %3099 = shufflevector <8 x i32> %3098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3100 = getelementptr inbounds i32, ptr %3096, i64 -15
  %3101 = load <8 x i32>, ptr %3100, align 4, !tbaa !5
  %3102 = shufflevector <8 x i32> %3101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3103 = getelementptr inbounds i32, ptr %3096, i64 -23
  %3104 = load <8 x i32>, ptr %3103, align 4, !tbaa !5
  %3105 = shufflevector <8 x i32> %3104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3106 = getelementptr inbounds i32, ptr %3096, i64 -31
  %3107 = load <8 x i32>, ptr %3106, align 4, !tbaa !5
  %3108 = shufflevector <8 x i32> %3107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3109 = mul <8 x i32> %3099, %3091
  %3110 = mul <8 x i32> %3102, %3092
  %3111 = mul <8 x i32> %3105, %3093
  %3112 = mul <8 x i32> %3108, %3094
  %3113 = add nuw i64 %3090, 32
  %3114 = icmp eq i64 %3113, %3087
  br i1 %3114, label %3115, label %3089, !llvm.loop !1404

3115:                                             ; preds = %3089
  %3116 = mul <8 x i32> %3110, %3109
  %3117 = mul <8 x i32> %3111, %3116
  %3118 = mul <8 x i32> %3112, %3117
  %3119 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3118)
  %3120 = icmp eq i64 %3083, %3087
  br i1 %3120, label %3133, label %3121

3121:                                             ; preds = %3074, %3115
  %3122 = phi i64 [ %3077, %3074 ], [ %3088, %3115 ]
  %3123 = phi i32 [ 1, %3074 ], [ %3119, %3115 ]
  br label %3124

3124:                                             ; preds = %3121, %3124
  %3125 = phi i64 [ %3130, %3124 ], [ %3122, %3121 ]
  %3126 = phi i32 [ %3129, %3124 ], [ %3123, %3121 ]
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3125
  %3128 = load i32, ptr %3127, align 4, !tbaa !5
  %3129 = mul nsw i32 %3128, %3126
  %3130 = add nsw i64 %3125, -1
  %3131 = trunc i64 %3125 to i32
  %3132 = icmp sgt i32 %3131, 0
  br i1 %3132, label %3124, label %3133, !llvm.loop !1405

3133:                                             ; preds = %3124, %3115
  %3134 = phi i32 [ %3119, %3115 ], [ %3129, %3124 ]
  %3135 = and i64 %3084, 4294967295
  %3136 = getelementptr inbounds i32, ptr %6, i64 %3135
  %3137 = load i32, ptr %3136, align 4, !tbaa !5
  %3138 = mul nsw i32 %3137, %3134
  %3139 = add nsw i32 %3138, %3078
  %3140 = icmp sgt i64 %3076, 2
  %3141 = add nsw i64 %3077, -1
  %3142 = add i32 %3075, 1
  br i1 %3140, label %3074, label %3143, !llvm.loop !1406

3143:                                             ; preds = %3133, %3069
  %3144 = phi i32 [ %3073, %3069 ], [ %3139, %3133 ]
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds double, ptr %2, i64 %3145
  %3147 = load double, ptr %3146, align 8, !tbaa !18
  %3148 = getelementptr inbounds double, ptr %3038, i64 %3145
  %3149 = load double, ptr %3148, align 8, !tbaa !18
  %3150 = fptosi double %3149 to i64
  %3151 = sitofp i64 %3070 to double
  %3152 = sitofp i64 %3150 to double
  %3153 = fmul fast double %3147, %3152
  %3154 = fadd fast double %3153, %3151
  %3155 = fptosi double %3154 to i64
  %3156 = fadd fast double %3147, %3072
  %3157 = add nuw nsw i32 %3071, 1
  br i1 %3063, label %3158, label %3205

3158:                                             ; preds = %3143
  %3159 = load i32, ptr %4, align 4, !tbaa !5
  %3160 = load i32, ptr %12, align 4, !tbaa !5
  %3161 = add nsw i32 %3160, -1
  %3162 = icmp slt i32 %3159, %3161
  br i1 %3162, label %3182, label %3163

3163:                                             ; preds = %3158
  %3164 = icmp eq i32 %3159, %3161
  br i1 %3164, label %3165, label %3198

3165:                                             ; preds = %3163
  store i32 0, ptr %4, align 4, !tbaa !5
  %3166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3166, ptr %6, align 4, !tbaa !5
  br i1 %3068, label %3205, label %3167

3167:                                             ; preds = %3165, %3192
  %3168 = phi i64 [ %3196, %3192 ], [ 1, %3165 ]
  %3169 = getelementptr inbounds i32, ptr %4, i64 %3168
  %3170 = load i32, ptr %3169, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %12, i64 %3168
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = add nsw i32 %3172, -1
  %3174 = icmp slt i32 %3170, %3173
  br i1 %3174, label %3175, label %3190

3175:                                             ; preds = %3167
  br i1 %3162, label %3182, label %3176

3176:                                             ; preds = %3175
  %3177 = getelementptr inbounds i32, ptr %7, i64 %3168
  %3178 = load i32, ptr %3177, align 4, !tbaa !5
  %3179 = getelementptr inbounds i32, ptr %6, i64 %3168
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = add nsw i32 %3180, %3178
  store i32 %3181, ptr %3179, align 4, !tbaa !5
  br label %3200

3182:                                             ; preds = %3158, %3175
  %3183 = phi i32 [ %3170, %3175 ], [ %3159, %3158 ]
  %3184 = phi ptr [ %3169, %3175 ], [ %4, %3158 ]
  %3185 = phi i64 [ %3168, %3175 ], [ 0, %3158 ]
  %3186 = add nsw i32 %3183, 1
  store i32 %3186, ptr %3184, align 4, !tbaa !5
  %3187 = getelementptr inbounds i32, ptr %7, i64 %3185
  %3188 = load i32, ptr %3187, align 4, !tbaa !5
  %3189 = getelementptr inbounds i32, ptr %6, i64 %3185
  br label %3200

3190:                                             ; preds = %3167
  %3191 = icmp eq i32 %3170, %3173
  br i1 %3191, label %3192, label %3198

3192:                                             ; preds = %3190
  store i32 0, ptr %3169, align 4, !tbaa !5
  %3193 = getelementptr inbounds i32, ptr %8, i64 %3168
  %3194 = load i32, ptr %3193, align 4, !tbaa !5
  %3195 = getelementptr inbounds i32, ptr %6, i64 %3168
  store i32 %3194, ptr %3195, align 4, !tbaa !5
  %3196 = add nuw nsw i64 %3168, 1
  %3197 = icmp eq i64 %3196, %3066
  br i1 %3197, label %3205, label %3167, !llvm.loop !1407

3198:                                             ; preds = %3163, %3190
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  %3199 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3200:                                             ; preds = %3176, %3182
  %3201 = phi ptr [ %3189, %3182 ], [ %3169, %3176 ]
  %3202 = phi i32 [ %3188, %3182 ], [ 1, %3176 ]
  %3203 = load i32, ptr %3201, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, %3202
  store i32 %3204, ptr %3201, align 4, !tbaa !5
  br label %3205

3205:                                             ; preds = %3192, %3200, %3165, %3143
  %3206 = icmp eq i32 %3157, %5
  br i1 %3206, label %5433, label %3069, !llvm.loop !1408

3207:                                             ; preds = %3052, %3345
  %3208 = phi i64 [ 0, %3052 ], [ %3293, %3345 ]
  %3209 = phi i32 [ 0, %3052 ], [ %3294, %3345 ]
  %3210 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3053, label %3211, label %3280

3211:                                             ; preds = %3207, %3270
  %3212 = phi i32 [ %3279, %3270 ], [ 0, %3207 ]
  %3213 = phi i64 [ %3221, %3270 ], [ %3057, %3207 ]
  %3214 = phi i64 [ %3278, %3270 ], [ %3056, %3207 ]
  %3215 = phi i32 [ %3276, %3270 ], [ %3210, %3207 ]
  %3216 = sub i32 %3055, %3212
  %3217 = tail call i32 @llvm.smin.i32(i32 %3216, i32 0)
  %3218 = sub i32 %3216, %3217
  %3219 = zext i32 %3218 to i64
  %3220 = add nuw nsw i64 %3219, 1
  %3221 = add nsw i64 %3213, -1
  %3222 = icmp ult i32 %3218, 31
  br i1 %3222, label %3258, label %3223

3223:                                             ; preds = %3211
  %3224 = and i64 %3220, 8589934560
  %3225 = sub i64 %3214, %3224
  br label %3226

3226:                                             ; preds = %3226, %3223
  %3227 = phi i64 [ 0, %3223 ], [ %3250, %3226 ]
  %3228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3246, %3226 ]
  %3229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3247, %3226 ]
  %3230 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3248, %3226 ]
  %3231 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3223 ], [ %3249, %3226 ]
  %3232 = sub i64 %3214, %3227
  %3233 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3234 = getelementptr inbounds i32, ptr %3233, i64 -7
  %3235 = load <8 x i32>, ptr %3234, align 4, !tbaa !5
  %3236 = shufflevector <8 x i32> %3235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3237 = getelementptr inbounds i32, ptr %3233, i64 -15
  %3238 = load <8 x i32>, ptr %3237, align 4, !tbaa !5
  %3239 = shufflevector <8 x i32> %3238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3240 = getelementptr inbounds i32, ptr %3233, i64 -23
  %3241 = load <8 x i32>, ptr %3240, align 4, !tbaa !5
  %3242 = shufflevector <8 x i32> %3241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3243 = getelementptr inbounds i32, ptr %3233, i64 -31
  %3244 = load <8 x i32>, ptr %3243, align 4, !tbaa !5
  %3245 = shufflevector <8 x i32> %3244, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3246 = mul <8 x i32> %3236, %3228
  %3247 = mul <8 x i32> %3239, %3229
  %3248 = mul <8 x i32> %3242, %3230
  %3249 = mul <8 x i32> %3245, %3231
  %3250 = add nuw i64 %3227, 32
  %3251 = icmp eq i64 %3250, %3224
  br i1 %3251, label %3252, label %3226, !llvm.loop !1409

3252:                                             ; preds = %3226
  %3253 = mul <8 x i32> %3247, %3246
  %3254 = mul <8 x i32> %3248, %3253
  %3255 = mul <8 x i32> %3249, %3254
  %3256 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3255)
  %3257 = icmp eq i64 %3220, %3224
  br i1 %3257, label %3270, label %3258

3258:                                             ; preds = %3211, %3252
  %3259 = phi i64 [ %3214, %3211 ], [ %3225, %3252 ]
  %3260 = phi i32 [ 1, %3211 ], [ %3256, %3252 ]
  br label %3261

3261:                                             ; preds = %3258, %3261
  %3262 = phi i64 [ %3267, %3261 ], [ %3259, %3258 ]
  %3263 = phi i32 [ %3266, %3261 ], [ %3260, %3258 ]
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3262
  %3265 = load i32, ptr %3264, align 4, !tbaa !5
  %3266 = mul nsw i32 %3265, %3263
  %3267 = add nsw i64 %3262, -1
  %3268 = trunc i64 %3262 to i32
  %3269 = icmp sgt i32 %3268, 0
  br i1 %3269, label %3261, label %3270, !llvm.loop !1410

3270:                                             ; preds = %3261, %3252
  %3271 = phi i32 [ %3256, %3252 ], [ %3266, %3261 ]
  %3272 = and i64 %3221, 4294967295
  %3273 = getelementptr inbounds i32, ptr %6, i64 %3272
  %3274 = load i32, ptr %3273, align 4, !tbaa !5
  %3275 = mul nsw i32 %3274, %3271
  %3276 = add nsw i32 %3275, %3215
  %3277 = icmp sgt i64 %3213, 2
  %3278 = add nsw i64 %3214, -1
  %3279 = add i32 %3212, 1
  br i1 %3277, label %3211, label %3280, !llvm.loop !1411

3280:                                             ; preds = %3270, %3207
  %3281 = phi i32 [ %3210, %3207 ], [ %3276, %3270 ]
  %3282 = icmp slt i32 %3281, %5
  br i1 %3282, label %3285, label %3283

3283:                                             ; preds = %3280
  %3284 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3285:                                             ; preds = %3280
  %3286 = sext i32 %3281 to i64
  %3287 = getelementptr inbounds double, ptr %3038, i64 %3286
  %3288 = load double, ptr %3287, align 8, !tbaa !18
  %3289 = fptosi double %3288 to i64
  %3290 = sitofp i64 %3208 to double
  %3291 = sitofp i64 %3289 to double
  %3292 = fadd fast double %3290, %3291
  %3293 = fptosi double %3292 to i64
  store i64 %3293, ptr %3040, align 8, !tbaa !120
  %3294 = add nuw nsw i32 %3209, 1
  br i1 %3054, label %3295, label %3345

3295:                                             ; preds = %3285
  %3296 = load i32, ptr %4, align 4, !tbaa !5
  %3297 = load i32, ptr %12, align 4, !tbaa !5
  %3298 = add nsw i32 %3297, -1
  %3299 = icmp slt i32 %3296, %3298
  br i1 %3299, label %3322, label %3300

3300:                                             ; preds = %3295
  %3301 = icmp eq i32 %3296, %3298
  br i1 %3301, label %3302, label %3338

3302:                                             ; preds = %3300
  store i32 0, ptr %4, align 4, !tbaa !5
  %3303 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3303, ptr %6, align 4, !tbaa !5
  br i1 %3059, label %3345, label %3304

3304:                                             ; preds = %3302, %3332
  %3305 = phi i64 [ %3336, %3332 ], [ 1, %3302 ]
  %3306 = getelementptr inbounds i32, ptr %4, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = getelementptr inbounds i32, ptr %12, i64 %3305
  %3309 = load i32, ptr %3308, align 4, !tbaa !5
  %3310 = add nsw i32 %3309, -1
  %3311 = icmp slt i32 %3307, %3310
  br i1 %3311, label %3312, label %3330

3312:                                             ; preds = %3304
  br i1 %3299, label %3322, label %3313

3313:                                             ; preds = %3312
  %3314 = shl i64 %3305, 32
  %3315 = add i64 %3314, -4294967296
  %3316 = ashr exact i64 %3315, 32
  %3317 = getelementptr inbounds i32, ptr %7, i64 %3316
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = add nsw i32 %3320, %3318
  store i32 %3321, ptr %3319, align 4, !tbaa !5
  br label %3340

3322:                                             ; preds = %3295, %3312
  %3323 = phi i32 [ %3307, %3312 ], [ %3296, %3295 ]
  %3324 = phi ptr [ %3306, %3312 ], [ %4, %3295 ]
  %3325 = phi i64 [ %3305, %3312 ], [ 0, %3295 ]
  %3326 = add nsw i32 %3323, 1
  store i32 %3326, ptr %3324, align 4, !tbaa !5
  %3327 = getelementptr inbounds i32, ptr %7, i64 %3325
  %3328 = load i32, ptr %3327, align 4, !tbaa !5
  %3329 = getelementptr inbounds i32, ptr %6, i64 %3325
  br label %3340

3330:                                             ; preds = %3304
  %3331 = icmp eq i32 %3307, %3310
  br i1 %3331, label %3332, label %3338

3332:                                             ; preds = %3330
  store i32 0, ptr %3306, align 4, !tbaa !5
  %3333 = getelementptr inbounds i32, ptr %8, i64 %3305
  %3334 = load i32, ptr %3333, align 4, !tbaa !5
  %3335 = getelementptr inbounds i32, ptr %6, i64 %3305
  store i32 %3334, ptr %3335, align 4, !tbaa !5
  %3336 = add nuw nsw i64 %3305, 1
  %3337 = icmp eq i64 %3336, %3057
  br i1 %3337, label %3345, label %3304, !llvm.loop !1412

3338:                                             ; preds = %3300, %3330
  %3339 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3340:                                             ; preds = %3313, %3322
  %3341 = phi ptr [ %3329, %3322 ], [ %3306, %3313 ]
  %3342 = phi i32 [ %3328, %3322 ], [ 1, %3313 ]
  %3343 = load i32, ptr %3341, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, %3342
  store i32 %3344, ptr %3341, align 4, !tbaa !5
  br label %3345

3345:                                             ; preds = %3332, %3340, %3302, %3285
  %3346 = icmp eq i32 %3294, %5
  br i1 %3346, label %5437, label %3207, !llvm.loop !1413

3347:                                             ; preds = %3045
  %3348 = getelementptr inbounds i32, ptr %3, i64 %19
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp sgt i32 %5, 0
  br i1 %3350, label %3361, label %3352

3352:                                             ; preds = %3347
  br i1 %3351, label %3353, label %5437

3353:                                             ; preds = %3352
  %3354 = icmp sgt i32 %13, 1
  %3355 = icmp sgt i32 %13, 0
  %3356 = add i32 %13, -2
  %3357 = zext i32 %3356 to i64
  %3358 = zext i32 %13 to i64
  %3359 = add nuw i32 %5, 1
  %3360 = icmp eq i32 %13, 1
  br label %3502

3361:                                             ; preds = %3347
  br i1 %3351, label %3362, label %5437

3362:                                             ; preds = %3361
  %3363 = icmp sgt i32 %13, 1
  %3364 = icmp sgt i32 %13, 0
  %3365 = add i32 %13, -2
  %3366 = zext i32 %3365 to i64
  %3367 = zext i32 %13 to i64
  %3368 = add nuw i32 %5, 1
  %3369 = icmp eq i32 %13, 1
  br label %3370

3370:                                             ; preds = %3362, %3500
  %3371 = phi i64 [ 0, %3362 ], [ %3450, %3500 ]
  %3372 = phi i32 [ 0, %3362 ], [ %3452, %3500 ]
  %3373 = phi double [ 0.000000e+00, %3362 ], [ %3451, %3500 ]
  %3374 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3363, label %3375, label %3444

3375:                                             ; preds = %3370, %3434
  %3376 = phi i32 [ %3443, %3434 ], [ 0, %3370 ]
  %3377 = phi i64 [ %3385, %3434 ], [ %3367, %3370 ]
  %3378 = phi i64 [ %3442, %3434 ], [ %3366, %3370 ]
  %3379 = phi i32 [ %3440, %3434 ], [ %3374, %3370 ]
  %3380 = sub i32 %3365, %3376
  %3381 = tail call i32 @llvm.smin.i32(i32 %3380, i32 0)
  %3382 = sub i32 %3380, %3381
  %3383 = zext i32 %3382 to i64
  %3384 = add nuw nsw i64 %3383, 1
  %3385 = add nsw i64 %3377, -1
  %3386 = icmp ult i32 %3382, 31
  br i1 %3386, label %3422, label %3387

3387:                                             ; preds = %3375
  %3388 = and i64 %3384, 8589934560
  %3389 = sub i64 %3378, %3388
  br label %3390

3390:                                             ; preds = %3390, %3387
  %3391 = phi i64 [ 0, %3387 ], [ %3414, %3390 ]
  %3392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3410, %3390 ]
  %3393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3411, %3390 ]
  %3394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3412, %3390 ]
  %3395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3387 ], [ %3413, %3390 ]
  %3396 = sub i64 %3378, %3391
  %3397 = getelementptr inbounds i32, ptr %9, i64 %3396
  %3398 = getelementptr inbounds i32, ptr %3397, i64 -7
  %3399 = load <8 x i32>, ptr %3398, align 4, !tbaa !5
  %3400 = shufflevector <8 x i32> %3399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3401 = getelementptr inbounds i32, ptr %3397, i64 -15
  %3402 = load <8 x i32>, ptr %3401, align 4, !tbaa !5
  %3403 = shufflevector <8 x i32> %3402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3404 = getelementptr inbounds i32, ptr %3397, i64 -23
  %3405 = load <8 x i32>, ptr %3404, align 4, !tbaa !5
  %3406 = shufflevector <8 x i32> %3405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3407 = getelementptr inbounds i32, ptr %3397, i64 -31
  %3408 = load <8 x i32>, ptr %3407, align 4, !tbaa !5
  %3409 = shufflevector <8 x i32> %3408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3410 = mul <8 x i32> %3400, %3392
  %3411 = mul <8 x i32> %3403, %3393
  %3412 = mul <8 x i32> %3406, %3394
  %3413 = mul <8 x i32> %3409, %3395
  %3414 = add nuw i64 %3391, 32
  %3415 = icmp eq i64 %3414, %3388
  br i1 %3415, label %3416, label %3390, !llvm.loop !1414

3416:                                             ; preds = %3390
  %3417 = mul <8 x i32> %3411, %3410
  %3418 = mul <8 x i32> %3412, %3417
  %3419 = mul <8 x i32> %3413, %3418
  %3420 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3419)
  %3421 = icmp eq i64 %3384, %3388
  br i1 %3421, label %3434, label %3422

3422:                                             ; preds = %3375, %3416
  %3423 = phi i64 [ %3378, %3375 ], [ %3389, %3416 ]
  %3424 = phi i32 [ 1, %3375 ], [ %3420, %3416 ]
  br label %3425

3425:                                             ; preds = %3422, %3425
  %3426 = phi i64 [ %3431, %3425 ], [ %3423, %3422 ]
  %3427 = phi i32 [ %3430, %3425 ], [ %3424, %3422 ]
  %3428 = getelementptr inbounds i32, ptr %9, i64 %3426
  %3429 = load i32, ptr %3428, align 4, !tbaa !5
  %3430 = mul nsw i32 %3429, %3427
  %3431 = add nsw i64 %3426, -1
  %3432 = trunc i64 %3426 to i32
  %3433 = icmp sgt i32 %3432, 0
  br i1 %3433, label %3425, label %3434, !llvm.loop !1415

3434:                                             ; preds = %3425, %3416
  %3435 = phi i32 [ %3420, %3416 ], [ %3430, %3425 ]
  %3436 = and i64 %3385, 4294967295
  %3437 = getelementptr inbounds i32, ptr %6, i64 %3436
  %3438 = load i32, ptr %3437, align 4, !tbaa !5
  %3439 = mul nsw i32 %3438, %3435
  %3440 = add nsw i32 %3439, %3379
  %3441 = icmp sgt i64 %3377, 2
  %3442 = add nsw i64 %3378, -1
  %3443 = add i32 %3376, 1
  br i1 %3441, label %3375, label %3444, !llvm.loop !1416

3444:                                             ; preds = %3434, %3370
  %3445 = phi i32 [ %3374, %3370 ], [ %3440, %3434 ]
  %3446 = sext i32 %3445 to i64
  %3447 = getelementptr inbounds double, ptr %3038, i64 %3446
  %3448 = load double, ptr %3447, align 8, !tbaa !18
  %3449 = fptosi double %3448 to i64
  %3450 = add nsw i64 %3371, %3449
  %3451 = fadd fast double %3373, 1.000000e+00
  %3452 = add nuw nsw i32 %3372, 1
  br i1 %3364, label %3453, label %3500

3453:                                             ; preds = %3444
  %3454 = load i32, ptr %4, align 4, !tbaa !5
  %3455 = load i32, ptr %12, align 4, !tbaa !5
  %3456 = add nsw i32 %3455, -1
  %3457 = icmp slt i32 %3454, %3456
  br i1 %3457, label %3477, label %3458

3458:                                             ; preds = %3453
  %3459 = icmp eq i32 %3454, %3456
  br i1 %3459, label %3460, label %3493

3460:                                             ; preds = %3458
  store i32 0, ptr %4, align 4, !tbaa !5
  %3461 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3461, ptr %6, align 4, !tbaa !5
  br i1 %3369, label %3500, label %3462

3462:                                             ; preds = %3460, %3487
  %3463 = phi i64 [ %3491, %3487 ], [ 1, %3460 ]
  %3464 = getelementptr inbounds i32, ptr %4, i64 %3463
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %12, i64 %3463
  %3467 = load i32, ptr %3466, align 4, !tbaa !5
  %3468 = add nsw i32 %3467, -1
  %3469 = icmp slt i32 %3465, %3468
  br i1 %3469, label %3470, label %3485

3470:                                             ; preds = %3462
  br i1 %3457, label %3477, label %3471

3471:                                             ; preds = %3470
  %3472 = getelementptr inbounds i32, ptr %7, i64 %3463
  %3473 = load i32, ptr %3472, align 4, !tbaa !5
  %3474 = getelementptr inbounds i32, ptr %6, i64 %3463
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = add nsw i32 %3475, %3473
  store i32 %3476, ptr %3474, align 4, !tbaa !5
  br label %3495

3477:                                             ; preds = %3453, %3470
  %3478 = phi i32 [ %3465, %3470 ], [ %3454, %3453 ]
  %3479 = phi ptr [ %3464, %3470 ], [ %4, %3453 ]
  %3480 = phi i64 [ %3463, %3470 ], [ 0, %3453 ]
  %3481 = add nsw i32 %3478, 1
  store i32 %3481, ptr %3479, align 4, !tbaa !5
  %3482 = getelementptr inbounds i32, ptr %7, i64 %3480
  %3483 = load i32, ptr %3482, align 4, !tbaa !5
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3480
  br label %3495

3485:                                             ; preds = %3462
  %3486 = icmp eq i32 %3465, %3468
  br i1 %3486, label %3487, label %3493

3487:                                             ; preds = %3485
  store i32 0, ptr %3464, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %8, i64 %3463
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = getelementptr inbounds i32, ptr %6, i64 %3463
  store i32 %3489, ptr %3490, align 4, !tbaa !5
  %3491 = add nuw nsw i64 %3463, 1
  %3492 = icmp eq i64 %3491, %3367
  br i1 %3492, label %3500, label %3462, !llvm.loop !1417

3493:                                             ; preds = %3458, %3485
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  %3494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3495:                                             ; preds = %3471, %3477
  %3496 = phi ptr [ %3484, %3477 ], [ %3464, %3471 ]
  %3497 = phi i32 [ %3483, %3477 ], [ 1, %3471 ]
  %3498 = load i32, ptr %3496, align 4, !tbaa !5
  %3499 = add nsw i32 %3498, %3497
  store i32 %3499, ptr %3496, align 4, !tbaa !5
  br label %3500

3500:                                             ; preds = %3487, %3495, %3460, %3444
  %3501 = icmp eq i32 %3452, %5
  br i1 %3501, label %5434, label %3370, !llvm.loop !1418

3502:                                             ; preds = %3353, %3637
  %3503 = phi i64 [ 0, %3353 ], [ %3585, %3637 ]
  %3504 = phi i32 [ 0, %3353 ], [ %3586, %3637 ]
  %3505 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3354, label %3506, label %3575

3506:                                             ; preds = %3502, %3565
  %3507 = phi i32 [ %3574, %3565 ], [ 0, %3502 ]
  %3508 = phi i64 [ %3516, %3565 ], [ %3358, %3502 ]
  %3509 = phi i64 [ %3573, %3565 ], [ %3357, %3502 ]
  %3510 = phi i32 [ %3571, %3565 ], [ %3505, %3502 ]
  %3511 = sub i32 %3356, %3507
  %3512 = tail call i32 @llvm.smin.i32(i32 %3511, i32 0)
  %3513 = sub i32 %3511, %3512
  %3514 = zext i32 %3513 to i64
  %3515 = add nuw nsw i64 %3514, 1
  %3516 = add nsw i64 %3508, -1
  %3517 = icmp ult i32 %3513, 31
  br i1 %3517, label %3553, label %3518

3518:                                             ; preds = %3506
  %3519 = and i64 %3515, 8589934560
  %3520 = sub i64 %3509, %3519
  br label %3521

3521:                                             ; preds = %3521, %3518
  %3522 = phi i64 [ 0, %3518 ], [ %3545, %3521 ]
  %3523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3541, %3521 ]
  %3524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3542, %3521 ]
  %3525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3543, %3521 ]
  %3526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3518 ], [ %3544, %3521 ]
  %3527 = sub i64 %3509, %3522
  %3528 = getelementptr inbounds i32, ptr %11, i64 %3527
  %3529 = getelementptr inbounds i32, ptr %3528, i64 -7
  %3530 = load <8 x i32>, ptr %3529, align 4, !tbaa !5
  %3531 = shufflevector <8 x i32> %3530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3532 = getelementptr inbounds i32, ptr %3528, i64 -15
  %3533 = load <8 x i32>, ptr %3532, align 4, !tbaa !5
  %3534 = shufflevector <8 x i32> %3533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3535 = getelementptr inbounds i32, ptr %3528, i64 -23
  %3536 = load <8 x i32>, ptr %3535, align 4, !tbaa !5
  %3537 = shufflevector <8 x i32> %3536, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3538 = getelementptr inbounds i32, ptr %3528, i64 -31
  %3539 = load <8 x i32>, ptr %3538, align 4, !tbaa !5
  %3540 = shufflevector <8 x i32> %3539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3541 = mul <8 x i32> %3531, %3523
  %3542 = mul <8 x i32> %3534, %3524
  %3543 = mul <8 x i32> %3537, %3525
  %3544 = mul <8 x i32> %3540, %3526
  %3545 = add nuw i64 %3522, 32
  %3546 = icmp eq i64 %3545, %3519
  br i1 %3546, label %3547, label %3521, !llvm.loop !1419

3547:                                             ; preds = %3521
  %3548 = mul <8 x i32> %3542, %3541
  %3549 = mul <8 x i32> %3543, %3548
  %3550 = mul <8 x i32> %3544, %3549
  %3551 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3550)
  %3552 = icmp eq i64 %3515, %3519
  br i1 %3552, label %3565, label %3553

3553:                                             ; preds = %3506, %3547
  %3554 = phi i64 [ %3509, %3506 ], [ %3520, %3547 ]
  %3555 = phi i32 [ 1, %3506 ], [ %3551, %3547 ]
  br label %3556

3556:                                             ; preds = %3553, %3556
  %3557 = phi i64 [ %3562, %3556 ], [ %3554, %3553 ]
  %3558 = phi i32 [ %3561, %3556 ], [ %3555, %3553 ]
  %3559 = getelementptr inbounds i32, ptr %11, i64 %3557
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = mul nsw i32 %3560, %3558
  %3562 = add nsw i64 %3557, -1
  %3563 = trunc i64 %3557 to i32
  %3564 = icmp sgt i32 %3563, 0
  br i1 %3564, label %3556, label %3565, !llvm.loop !1420

3565:                                             ; preds = %3556, %3547
  %3566 = phi i32 [ %3551, %3547 ], [ %3561, %3556 ]
  %3567 = and i64 %3516, 4294967295
  %3568 = getelementptr inbounds i32, ptr %6, i64 %3567
  %3569 = load i32, ptr %3568, align 4, !tbaa !5
  %3570 = mul nsw i32 %3569, %3566
  %3571 = add nsw i32 %3570, %3510
  %3572 = icmp sgt i64 %3508, 2
  %3573 = add nsw i64 %3509, -1
  %3574 = add i32 %3507, 1
  br i1 %3572, label %3506, label %3575, !llvm.loop !1421

3575:                                             ; preds = %3565, %3502
  %3576 = phi i32 [ %3505, %3502 ], [ %3571, %3565 ]
  %3577 = icmp slt i32 %3576, %5
  br i1 %3577, label %3580, label %3578

3578:                                             ; preds = %3575
  %3579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3580:                                             ; preds = %3575
  %3581 = sext i32 %3576 to i64
  %3582 = getelementptr inbounds double, ptr %3038, i64 %3581
  %3583 = load double, ptr %3582, align 8, !tbaa !18
  %3584 = fptosi double %3583 to i64
  %3585 = add nsw i64 %3503, %3584
  store i64 %3585, ptr %3040, align 8, !tbaa !120
  %3586 = add nuw nsw i32 %3504, 1
  br i1 %3355, label %3587, label %3637

3587:                                             ; preds = %3580
  %3588 = load i32, ptr %4, align 4, !tbaa !5
  %3589 = load i32, ptr %12, align 4, !tbaa !5
  %3590 = add nsw i32 %3589, -1
  %3591 = icmp slt i32 %3588, %3590
  br i1 %3591, label %3614, label %3592

3592:                                             ; preds = %3587
  %3593 = icmp eq i32 %3588, %3590
  br i1 %3593, label %3594, label %3630

3594:                                             ; preds = %3592
  store i32 0, ptr %4, align 4, !tbaa !5
  %3595 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3595, ptr %6, align 4, !tbaa !5
  br i1 %3360, label %3637, label %3596

3596:                                             ; preds = %3594, %3624
  %3597 = phi i64 [ %3628, %3624 ], [ 1, %3594 ]
  %3598 = getelementptr inbounds i32, ptr %4, i64 %3597
  %3599 = load i32, ptr %3598, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %12, i64 %3597
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = add nsw i32 %3601, -1
  %3603 = icmp slt i32 %3599, %3602
  br i1 %3603, label %3604, label %3622

3604:                                             ; preds = %3596
  br i1 %3591, label %3614, label %3605

3605:                                             ; preds = %3604
  %3606 = shl i64 %3597, 32
  %3607 = add i64 %3606, -4294967296
  %3608 = ashr exact i64 %3607, 32
  %3609 = getelementptr inbounds i32, ptr %7, i64 %3608
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = getelementptr inbounds i32, ptr %6, i64 %3597
  %3612 = load i32, ptr %3611, align 4, !tbaa !5
  %3613 = add nsw i32 %3612, %3610
  store i32 %3613, ptr %3611, align 4, !tbaa !5
  br label %3632

3614:                                             ; preds = %3587, %3604
  %3615 = phi i32 [ %3599, %3604 ], [ %3588, %3587 ]
  %3616 = phi ptr [ %3598, %3604 ], [ %4, %3587 ]
  %3617 = phi i64 [ %3597, %3604 ], [ 0, %3587 ]
  %3618 = add nsw i32 %3615, 1
  store i32 %3618, ptr %3616, align 4, !tbaa !5
  %3619 = getelementptr inbounds i32, ptr %7, i64 %3617
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = getelementptr inbounds i32, ptr %6, i64 %3617
  br label %3632

3622:                                             ; preds = %3596
  %3623 = icmp eq i32 %3599, %3602
  br i1 %3623, label %3624, label %3630

3624:                                             ; preds = %3622
  store i32 0, ptr %3598, align 4, !tbaa !5
  %3625 = getelementptr inbounds i32, ptr %8, i64 %3597
  %3626 = load i32, ptr %3625, align 4, !tbaa !5
  %3627 = getelementptr inbounds i32, ptr %6, i64 %3597
  store i32 %3626, ptr %3627, align 4, !tbaa !5
  %3628 = add nuw nsw i64 %3597, 1
  %3629 = icmp eq i64 %3628, %3358
  br i1 %3629, label %3637, label %3596, !llvm.loop !1422

3630:                                             ; preds = %3592, %3622
  %3631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3632:                                             ; preds = %3605, %3614
  %3633 = phi ptr [ %3621, %3614 ], [ %3598, %3605 ]
  %3634 = phi i32 [ %3620, %3614 ], [ 1, %3605 ]
  %3635 = load i32, ptr %3633, align 4, !tbaa !5
  %3636 = add nsw i32 %3635, %3634
  store i32 %3636, ptr %3633, align 4, !tbaa !5
  br label %3637

3637:                                             ; preds = %3624, %3632, %3594, %3580
  %3638 = icmp eq i32 %3586, %5
  br i1 %3638, label %5437, label %3502, !llvm.loop !1423

3639:                                             ; preds = %3045
  %3640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

3641:                                             ; preds = %18
  %3642 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3643 = load ptr, ptr %3642, align 8, !tbaa !9
  %3644 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3645 = load ptr, ptr %3644, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3645, align 8, !tbaa !18
  %3646 = icmp eq i32 %13, 0
  br i1 %3646, label %3647, label %3649

3647:                                             ; preds = %3641
  %3648 = load double, ptr %3643, align 8, !tbaa !18
  store double %3648, ptr %3645, align 8, !tbaa !18
  br label %5437

3649:                                             ; preds = %3641
  switch i32 %1, label %4233 [
    i32 1, label %3650
    i32 0, label %3943
  ]

3650:                                             ; preds = %3649
  %3651 = getelementptr inbounds i32, ptr %3, i64 %19
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = icmp eq i32 %3652, 0
  %3654 = icmp sgt i32 %5, 0
  br i1 %3653, label %3664, label %3655

3655:                                             ; preds = %3650
  br i1 %3654, label %3656, label %5437

3656:                                             ; preds = %3655
  %3657 = icmp sgt i32 %13, 1
  %3658 = icmp sgt i32 %13, 0
  %3659 = add i32 %13, -2
  %3660 = zext i32 %3659 to i64
  %3661 = zext i32 %13 to i64
  %3662 = add nuw i32 %5, 1
  %3663 = icmp eq i32 %13, 1
  br label %3807

3664:                                             ; preds = %3650
  br i1 %3654, label %3665, label %5437

3665:                                             ; preds = %3664
  %3666 = icmp sgt i32 %13, 1
  %3667 = icmp sgt i32 %13, 0
  %3668 = add i32 %13, -2
  %3669 = zext i32 %3668 to i64
  %3670 = zext i32 %13 to i64
  %3671 = add nuw i32 %5, 1
  %3672 = icmp eq i32 %13, 1
  br label %3673

3673:                                             ; preds = %3665, %3805
  %3674 = phi double [ 0.000000e+00, %3665 ], [ %3755, %3805 ]
  %3675 = phi i32 [ 0, %3665 ], [ %3757, %3805 ]
  %3676 = phi double [ 0.000000e+00, %3665 ], [ %3756, %3805 ]
  %3677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3666, label %3678, label %3747

3678:                                             ; preds = %3673, %3737
  %3679 = phi i32 [ %3746, %3737 ], [ 0, %3673 ]
  %3680 = phi i64 [ %3688, %3737 ], [ %3670, %3673 ]
  %3681 = phi i64 [ %3745, %3737 ], [ %3669, %3673 ]
  %3682 = phi i32 [ %3743, %3737 ], [ %3677, %3673 ]
  %3683 = sub i32 %3668, %3679
  %3684 = tail call i32 @llvm.smin.i32(i32 %3683, i32 0)
  %3685 = sub i32 %3683, %3684
  %3686 = zext i32 %3685 to i64
  %3687 = add nuw nsw i64 %3686, 1
  %3688 = add nsw i64 %3680, -1
  %3689 = icmp ult i32 %3685, 31
  br i1 %3689, label %3725, label %3690

3690:                                             ; preds = %3678
  %3691 = and i64 %3687, 8589934560
  %3692 = sub i64 %3681, %3691
  br label %3693

3693:                                             ; preds = %3693, %3690
  %3694 = phi i64 [ 0, %3690 ], [ %3717, %3693 ]
  %3695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3713, %3693 ]
  %3696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3714, %3693 ]
  %3697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3715, %3693 ]
  %3698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3690 ], [ %3716, %3693 ]
  %3699 = sub i64 %3681, %3694
  %3700 = getelementptr inbounds i32, ptr %9, i64 %3699
  %3701 = getelementptr inbounds i32, ptr %3700, i64 -7
  %3702 = load <8 x i32>, ptr %3701, align 4, !tbaa !5
  %3703 = shufflevector <8 x i32> %3702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3704 = getelementptr inbounds i32, ptr %3700, i64 -15
  %3705 = load <8 x i32>, ptr %3704, align 4, !tbaa !5
  %3706 = shufflevector <8 x i32> %3705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3707 = getelementptr inbounds i32, ptr %3700, i64 -23
  %3708 = load <8 x i32>, ptr %3707, align 4, !tbaa !5
  %3709 = shufflevector <8 x i32> %3708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3710 = getelementptr inbounds i32, ptr %3700, i64 -31
  %3711 = load <8 x i32>, ptr %3710, align 4, !tbaa !5
  %3712 = shufflevector <8 x i32> %3711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3713 = mul <8 x i32> %3703, %3695
  %3714 = mul <8 x i32> %3706, %3696
  %3715 = mul <8 x i32> %3709, %3697
  %3716 = mul <8 x i32> %3712, %3698
  %3717 = add nuw i64 %3694, 32
  %3718 = icmp eq i64 %3717, %3691
  br i1 %3718, label %3719, label %3693, !llvm.loop !1424

3719:                                             ; preds = %3693
  %3720 = mul <8 x i32> %3714, %3713
  %3721 = mul <8 x i32> %3715, %3720
  %3722 = mul <8 x i32> %3716, %3721
  %3723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3722)
  %3724 = icmp eq i64 %3687, %3691
  br i1 %3724, label %3737, label %3725

3725:                                             ; preds = %3678, %3719
  %3726 = phi i64 [ %3681, %3678 ], [ %3692, %3719 ]
  %3727 = phi i32 [ 1, %3678 ], [ %3723, %3719 ]
  br label %3728

3728:                                             ; preds = %3725, %3728
  %3729 = phi i64 [ %3734, %3728 ], [ %3726, %3725 ]
  %3730 = phi i32 [ %3733, %3728 ], [ %3727, %3725 ]
  %3731 = getelementptr inbounds i32, ptr %9, i64 %3729
  %3732 = load i32, ptr %3731, align 4, !tbaa !5
  %3733 = mul nsw i32 %3732, %3730
  %3734 = add nsw i64 %3729, -1
  %3735 = trunc i64 %3729 to i32
  %3736 = icmp sgt i32 %3735, 0
  br i1 %3736, label %3728, label %3737, !llvm.loop !1425

3737:                                             ; preds = %3728, %3719
  %3738 = phi i32 [ %3723, %3719 ], [ %3733, %3728 ]
  %3739 = and i64 %3688, 4294967295
  %3740 = getelementptr inbounds i32, ptr %6, i64 %3739
  %3741 = load i32, ptr %3740, align 4, !tbaa !5
  %3742 = mul nsw i32 %3741, %3738
  %3743 = add nsw i32 %3742, %3682
  %3744 = icmp sgt i64 %3680, 2
  %3745 = add nsw i64 %3681, -1
  %3746 = add i32 %3679, 1
  br i1 %3744, label %3678, label %3747, !llvm.loop !1426

3747:                                             ; preds = %3737, %3673
  %3748 = phi i32 [ %3677, %3673 ], [ %3743, %3737 ]
  %3749 = sext i32 %3748 to i64
  %3750 = getelementptr inbounds double, ptr %2, i64 %3749
  %3751 = load double, ptr %3750, align 8, !tbaa !18
  %3752 = getelementptr inbounds double, ptr %3643, i64 %3749
  %3753 = load double, ptr %3752, align 8, !tbaa !18
  %3754 = fmul fast double %3753, %3751
  %3755 = fadd fast double %3674, %3754
  store double %3755, ptr %3645, align 8, !tbaa !18
  %3756 = fadd fast double %3751, %3676
  %3757 = add nuw nsw i32 %3675, 1
  br i1 %3667, label %3758, label %3805

3758:                                             ; preds = %3747
  %3759 = load i32, ptr %4, align 4, !tbaa !5
  %3760 = load i32, ptr %12, align 4, !tbaa !5
  %3761 = add nsw i32 %3760, -1
  %3762 = icmp slt i32 %3759, %3761
  br i1 %3762, label %3782, label %3763

3763:                                             ; preds = %3758
  %3764 = icmp eq i32 %3759, %3761
  br i1 %3764, label %3765, label %3798

3765:                                             ; preds = %3763
  store i32 0, ptr %4, align 4, !tbaa !5
  %3766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3766, ptr %6, align 4, !tbaa !5
  br i1 %3672, label %3805, label %3767

3767:                                             ; preds = %3765, %3792
  %3768 = phi i64 [ %3796, %3792 ], [ 1, %3765 ]
  %3769 = getelementptr inbounds i32, ptr %4, i64 %3768
  %3770 = load i32, ptr %3769, align 4, !tbaa !5
  %3771 = getelementptr inbounds i32, ptr %12, i64 %3768
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = add nsw i32 %3772, -1
  %3774 = icmp slt i32 %3770, %3773
  br i1 %3774, label %3775, label %3790

3775:                                             ; preds = %3767
  br i1 %3762, label %3782, label %3776

3776:                                             ; preds = %3775
  %3777 = getelementptr inbounds i32, ptr %7, i64 %3768
  %3778 = load i32, ptr %3777, align 4, !tbaa !5
  %3779 = getelementptr inbounds i32, ptr %6, i64 %3768
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = add nsw i32 %3780, %3778
  store i32 %3781, ptr %3779, align 4, !tbaa !5
  br label %3800

3782:                                             ; preds = %3758, %3775
  %3783 = phi i32 [ %3770, %3775 ], [ %3759, %3758 ]
  %3784 = phi ptr [ %3769, %3775 ], [ %4, %3758 ]
  %3785 = phi i64 [ %3768, %3775 ], [ 0, %3758 ]
  %3786 = add nsw i32 %3783, 1
  store i32 %3786, ptr %3784, align 4, !tbaa !5
  %3787 = getelementptr inbounds i32, ptr %7, i64 %3785
  %3788 = load i32, ptr %3787, align 4, !tbaa !5
  %3789 = getelementptr inbounds i32, ptr %6, i64 %3785
  br label %3800

3790:                                             ; preds = %3767
  %3791 = icmp eq i32 %3770, %3773
  br i1 %3791, label %3792, label %3798

3792:                                             ; preds = %3790
  store i32 0, ptr %3769, align 4, !tbaa !5
  %3793 = getelementptr inbounds i32, ptr %8, i64 %3768
  %3794 = load i32, ptr %3793, align 4, !tbaa !5
  %3795 = getelementptr inbounds i32, ptr %6, i64 %3768
  store i32 %3794, ptr %3795, align 4, !tbaa !5
  %3796 = add nuw nsw i64 %3768, 1
  %3797 = icmp eq i64 %3796, %3670
  br i1 %3797, label %3805, label %3767, !llvm.loop !1427

3798:                                             ; preds = %3763, %3790
  %3799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3800:                                             ; preds = %3776, %3782
  %3801 = phi ptr [ %3789, %3782 ], [ %3769, %3776 ]
  %3802 = phi i32 [ %3788, %3782 ], [ 1, %3776 ]
  %3803 = load i32, ptr %3801, align 4, !tbaa !5
  %3804 = add nsw i32 %3803, %3802
  store i32 %3804, ptr %3801, align 4, !tbaa !5
  br label %3805

3805:                                             ; preds = %3792, %3800, %3765, %3747
  %3806 = icmp eq i32 %3757, %5
  br i1 %3806, label %5437, label %3673, !llvm.loop !1428

3807:                                             ; preds = %3656, %3941
  %3808 = phi double [ 0.000000e+00, %3656 ], [ %3889, %3941 ]
  %3809 = phi i32 [ 0, %3656 ], [ %3890, %3941 ]
  %3810 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3657, label %3811, label %3880

3811:                                             ; preds = %3807, %3870
  %3812 = phi i32 [ %3879, %3870 ], [ 0, %3807 ]
  %3813 = phi i64 [ %3821, %3870 ], [ %3661, %3807 ]
  %3814 = phi i64 [ %3878, %3870 ], [ %3660, %3807 ]
  %3815 = phi i32 [ %3876, %3870 ], [ %3810, %3807 ]
  %3816 = sub i32 %3659, %3812
  %3817 = tail call i32 @llvm.smin.i32(i32 %3816, i32 0)
  %3818 = sub i32 %3816, %3817
  %3819 = zext i32 %3818 to i64
  %3820 = add nuw nsw i64 %3819, 1
  %3821 = add nsw i64 %3813, -1
  %3822 = icmp ult i32 %3818, 31
  br i1 %3822, label %3858, label %3823

3823:                                             ; preds = %3811
  %3824 = and i64 %3820, 8589934560
  %3825 = sub i64 %3814, %3824
  br label %3826

3826:                                             ; preds = %3826, %3823
  %3827 = phi i64 [ 0, %3823 ], [ %3850, %3826 ]
  %3828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3846, %3826 ]
  %3829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3847, %3826 ]
  %3830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3848, %3826 ]
  %3831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3823 ], [ %3849, %3826 ]
  %3832 = sub i64 %3814, %3827
  %3833 = getelementptr inbounds i32, ptr %11, i64 %3832
  %3834 = getelementptr inbounds i32, ptr %3833, i64 -7
  %3835 = load <8 x i32>, ptr %3834, align 4, !tbaa !5
  %3836 = shufflevector <8 x i32> %3835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3837 = getelementptr inbounds i32, ptr %3833, i64 -15
  %3838 = load <8 x i32>, ptr %3837, align 4, !tbaa !5
  %3839 = shufflevector <8 x i32> %3838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3840 = getelementptr inbounds i32, ptr %3833, i64 -23
  %3841 = load <8 x i32>, ptr %3840, align 4, !tbaa !5
  %3842 = shufflevector <8 x i32> %3841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3843 = getelementptr inbounds i32, ptr %3833, i64 -31
  %3844 = load <8 x i32>, ptr %3843, align 4, !tbaa !5
  %3845 = shufflevector <8 x i32> %3844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3846 = mul <8 x i32> %3836, %3828
  %3847 = mul <8 x i32> %3839, %3829
  %3848 = mul <8 x i32> %3842, %3830
  %3849 = mul <8 x i32> %3845, %3831
  %3850 = add nuw i64 %3827, 32
  %3851 = icmp eq i64 %3850, %3824
  br i1 %3851, label %3852, label %3826, !llvm.loop !1429

3852:                                             ; preds = %3826
  %3853 = mul <8 x i32> %3847, %3846
  %3854 = mul <8 x i32> %3848, %3853
  %3855 = mul <8 x i32> %3849, %3854
  %3856 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3855)
  %3857 = icmp eq i64 %3820, %3824
  br i1 %3857, label %3870, label %3858

3858:                                             ; preds = %3811, %3852
  %3859 = phi i64 [ %3814, %3811 ], [ %3825, %3852 ]
  %3860 = phi i32 [ 1, %3811 ], [ %3856, %3852 ]
  br label %3861

3861:                                             ; preds = %3858, %3861
  %3862 = phi i64 [ %3867, %3861 ], [ %3859, %3858 ]
  %3863 = phi i32 [ %3866, %3861 ], [ %3860, %3858 ]
  %3864 = getelementptr inbounds i32, ptr %11, i64 %3862
  %3865 = load i32, ptr %3864, align 4, !tbaa !5
  %3866 = mul nsw i32 %3865, %3863
  %3867 = add nsw i64 %3862, -1
  %3868 = trunc i64 %3862 to i32
  %3869 = icmp sgt i32 %3868, 0
  br i1 %3869, label %3861, label %3870, !llvm.loop !1430

3870:                                             ; preds = %3861, %3852
  %3871 = phi i32 [ %3856, %3852 ], [ %3866, %3861 ]
  %3872 = and i64 %3821, 4294967295
  %3873 = getelementptr inbounds i32, ptr %6, i64 %3872
  %3874 = load i32, ptr %3873, align 4, !tbaa !5
  %3875 = mul nsw i32 %3874, %3871
  %3876 = add nsw i32 %3875, %3815
  %3877 = icmp sgt i64 %3813, 2
  %3878 = add nsw i64 %3814, -1
  %3879 = add i32 %3812, 1
  br i1 %3877, label %3811, label %3880, !llvm.loop !1431

3880:                                             ; preds = %3870, %3807
  %3881 = phi i32 [ %3810, %3807 ], [ %3876, %3870 ]
  %3882 = icmp slt i32 %3881, %5
  br i1 %3882, label %3885, label %3883

3883:                                             ; preds = %3880
  %3884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

3885:                                             ; preds = %3880
  %3886 = sext i32 %3881 to i64
  %3887 = getelementptr inbounds double, ptr %3643, i64 %3886
  %3888 = load double, ptr %3887, align 8, !tbaa !18
  %3889 = fadd fast double %3808, %3888
  store double %3889, ptr %3645, align 8, !tbaa !18
  %3890 = add nuw nsw i32 %3809, 1
  br i1 %3658, label %3891, label %3941

3891:                                             ; preds = %3885
  %3892 = load i32, ptr %4, align 4, !tbaa !5
  %3893 = load i32, ptr %12, align 4, !tbaa !5
  %3894 = add nsw i32 %3893, -1
  %3895 = icmp slt i32 %3892, %3894
  br i1 %3895, label %3918, label %3896

3896:                                             ; preds = %3891
  %3897 = icmp eq i32 %3892, %3894
  br i1 %3897, label %3898, label %3934

3898:                                             ; preds = %3896
  store i32 0, ptr %4, align 4, !tbaa !5
  %3899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3899, ptr %6, align 4, !tbaa !5
  br i1 %3663, label %3941, label %3900

3900:                                             ; preds = %3898, %3928
  %3901 = phi i64 [ %3932, %3928 ], [ 1, %3898 ]
  %3902 = getelementptr inbounds i32, ptr %4, i64 %3901
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = getelementptr inbounds i32, ptr %12, i64 %3901
  %3905 = load i32, ptr %3904, align 4, !tbaa !5
  %3906 = add nsw i32 %3905, -1
  %3907 = icmp slt i32 %3903, %3906
  br i1 %3907, label %3908, label %3926

3908:                                             ; preds = %3900
  br i1 %3895, label %3918, label %3909

3909:                                             ; preds = %3908
  %3910 = shl i64 %3901, 32
  %3911 = add i64 %3910, -4294967296
  %3912 = ashr exact i64 %3911, 32
  %3913 = getelementptr inbounds i32, ptr %7, i64 %3912
  %3914 = load i32, ptr %3913, align 4, !tbaa !5
  %3915 = getelementptr inbounds i32, ptr %6, i64 %3901
  %3916 = load i32, ptr %3915, align 4, !tbaa !5
  %3917 = add nsw i32 %3916, %3914
  store i32 %3917, ptr %3915, align 4, !tbaa !5
  br label %3936

3918:                                             ; preds = %3891, %3908
  %3919 = phi i32 [ %3903, %3908 ], [ %3892, %3891 ]
  %3920 = phi ptr [ %3902, %3908 ], [ %4, %3891 ]
  %3921 = phi i64 [ %3901, %3908 ], [ 0, %3891 ]
  %3922 = add nsw i32 %3919, 1
  store i32 %3922, ptr %3920, align 4, !tbaa !5
  %3923 = getelementptr inbounds i32, ptr %7, i64 %3921
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = getelementptr inbounds i32, ptr %6, i64 %3921
  br label %3936

3926:                                             ; preds = %3900
  %3927 = icmp eq i32 %3903, %3906
  br i1 %3927, label %3928, label %3934

3928:                                             ; preds = %3926
  store i32 0, ptr %3902, align 4, !tbaa !5
  %3929 = getelementptr inbounds i32, ptr %8, i64 %3901
  %3930 = load i32, ptr %3929, align 4, !tbaa !5
  %3931 = getelementptr inbounds i32, ptr %6, i64 %3901
  store i32 %3930, ptr %3931, align 4, !tbaa !5
  %3932 = add nuw nsw i64 %3901, 1
  %3933 = icmp eq i64 %3932, %3661
  br i1 %3933, label %3941, label %3900, !llvm.loop !1432

3934:                                             ; preds = %3896, %3926
  %3935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

3936:                                             ; preds = %3909, %3918
  %3937 = phi ptr [ %3925, %3918 ], [ %3902, %3909 ]
  %3938 = phi i32 [ %3924, %3918 ], [ 1, %3909 ]
  %3939 = load i32, ptr %3937, align 4, !tbaa !5
  %3940 = add nsw i32 %3939, %3938
  store i32 %3940, ptr %3937, align 4, !tbaa !5
  br label %3941

3941:                                             ; preds = %3928, %3936, %3898, %3885
  %3942 = icmp eq i32 %3890, %5
  br i1 %3942, label %5437, label %3807, !llvm.loop !1433

3943:                                             ; preds = %3649
  %3944 = getelementptr inbounds i32, ptr %3, i64 %19
  %3945 = load i32, ptr %3944, align 4, !tbaa !5
  %3946 = icmp eq i32 %3945, 0
  %3947 = icmp sgt i32 %5, 0
  br i1 %3946, label %3957, label %3948

3948:                                             ; preds = %3943
  br i1 %3947, label %3949, label %5437

3949:                                             ; preds = %3948
  %3950 = icmp sgt i32 %13, 1
  %3951 = icmp sgt i32 %13, 0
  %3952 = add i32 %13, -2
  %3953 = zext i32 %3952 to i64
  %3954 = zext i32 %13 to i64
  %3955 = add nuw i32 %5, 1
  %3956 = icmp eq i32 %13, 1
  br label %4097

3957:                                             ; preds = %3943
  br i1 %3947, label %3958, label %5437

3958:                                             ; preds = %3957
  %3959 = icmp sgt i32 %13, 1
  %3960 = icmp sgt i32 %13, 0
  %3961 = add i32 %13, -2
  %3962 = zext i32 %3961 to i64
  %3963 = zext i32 %13 to i64
  %3964 = add nuw i32 %5, 1
  %3965 = icmp eq i32 %13, 1
  br label %3966

3966:                                             ; preds = %3958, %4095
  %3967 = phi double [ 0.000000e+00, %3958 ], [ %4045, %4095 ]
  %3968 = phi i32 [ 0, %3958 ], [ %4047, %4095 ]
  %3969 = phi double [ 0.000000e+00, %3958 ], [ %4046, %4095 ]
  %3970 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3959, label %3971, label %4040

3971:                                             ; preds = %3966, %4030
  %3972 = phi i32 [ %4039, %4030 ], [ 0, %3966 ]
  %3973 = phi i64 [ %3981, %4030 ], [ %3963, %3966 ]
  %3974 = phi i64 [ %4038, %4030 ], [ %3962, %3966 ]
  %3975 = phi i32 [ %4036, %4030 ], [ %3970, %3966 ]
  %3976 = sub i32 %3961, %3972
  %3977 = tail call i32 @llvm.smin.i32(i32 %3976, i32 0)
  %3978 = sub i32 %3976, %3977
  %3979 = zext i32 %3978 to i64
  %3980 = add nuw nsw i64 %3979, 1
  %3981 = add nsw i64 %3973, -1
  %3982 = icmp ult i32 %3978, 31
  br i1 %3982, label %4018, label %3983

3983:                                             ; preds = %3971
  %3984 = and i64 %3980, 8589934560
  %3985 = sub i64 %3974, %3984
  br label %3986

3986:                                             ; preds = %3986, %3983
  %3987 = phi i64 [ 0, %3983 ], [ %4010, %3986 ]
  %3988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4006, %3986 ]
  %3989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4007, %3986 ]
  %3990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4008, %3986 ]
  %3991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3983 ], [ %4009, %3986 ]
  %3992 = sub i64 %3974, %3987
  %3993 = getelementptr inbounds i32, ptr %9, i64 %3992
  %3994 = getelementptr inbounds i32, ptr %3993, i64 -7
  %3995 = load <8 x i32>, ptr %3994, align 4, !tbaa !5
  %3996 = shufflevector <8 x i32> %3995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3997 = getelementptr inbounds i32, ptr %3993, i64 -15
  %3998 = load <8 x i32>, ptr %3997, align 4, !tbaa !5
  %3999 = shufflevector <8 x i32> %3998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4000 = getelementptr inbounds i32, ptr %3993, i64 -23
  %4001 = load <8 x i32>, ptr %4000, align 4, !tbaa !5
  %4002 = shufflevector <8 x i32> %4001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4003 = getelementptr inbounds i32, ptr %3993, i64 -31
  %4004 = load <8 x i32>, ptr %4003, align 4, !tbaa !5
  %4005 = shufflevector <8 x i32> %4004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4006 = mul <8 x i32> %3996, %3988
  %4007 = mul <8 x i32> %3999, %3989
  %4008 = mul <8 x i32> %4002, %3990
  %4009 = mul <8 x i32> %4005, %3991
  %4010 = add nuw i64 %3987, 32
  %4011 = icmp eq i64 %4010, %3984
  br i1 %4011, label %4012, label %3986, !llvm.loop !1434

4012:                                             ; preds = %3986
  %4013 = mul <8 x i32> %4007, %4006
  %4014 = mul <8 x i32> %4008, %4013
  %4015 = mul <8 x i32> %4009, %4014
  %4016 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4015)
  %4017 = icmp eq i64 %3980, %3984
  br i1 %4017, label %4030, label %4018

4018:                                             ; preds = %3971, %4012
  %4019 = phi i64 [ %3974, %3971 ], [ %3985, %4012 ]
  %4020 = phi i32 [ 1, %3971 ], [ %4016, %4012 ]
  br label %4021

4021:                                             ; preds = %4018, %4021
  %4022 = phi i64 [ %4027, %4021 ], [ %4019, %4018 ]
  %4023 = phi i32 [ %4026, %4021 ], [ %4020, %4018 ]
  %4024 = getelementptr inbounds i32, ptr %9, i64 %4022
  %4025 = load i32, ptr %4024, align 4, !tbaa !5
  %4026 = mul nsw i32 %4025, %4023
  %4027 = add nsw i64 %4022, -1
  %4028 = trunc i64 %4022 to i32
  %4029 = icmp sgt i32 %4028, 0
  br i1 %4029, label %4021, label %4030, !llvm.loop !1435

4030:                                             ; preds = %4021, %4012
  %4031 = phi i32 [ %4016, %4012 ], [ %4026, %4021 ]
  %4032 = and i64 %3981, 4294967295
  %4033 = getelementptr inbounds i32, ptr %6, i64 %4032
  %4034 = load i32, ptr %4033, align 4, !tbaa !5
  %4035 = mul nsw i32 %4034, %4031
  %4036 = add nsw i32 %4035, %3975
  %4037 = icmp sgt i64 %3973, 2
  %4038 = add nsw i64 %3974, -1
  %4039 = add i32 %3972, 1
  br i1 %4037, label %3971, label %4040, !llvm.loop !1436

4040:                                             ; preds = %4030, %3966
  %4041 = phi i32 [ %3970, %3966 ], [ %4036, %4030 ]
  %4042 = sext i32 %4041 to i64
  %4043 = getelementptr inbounds double, ptr %3643, i64 %4042
  %4044 = load double, ptr %4043, align 8, !tbaa !18
  %4045 = fadd fast double %3967, %4044
  store double %4045, ptr %3645, align 8, !tbaa !18
  %4046 = fadd fast double %3969, 1.000000e+00
  %4047 = add nuw nsw i32 %3968, 1
  br i1 %3960, label %4048, label %4095

4048:                                             ; preds = %4040
  %4049 = load i32, ptr %4, align 4, !tbaa !5
  %4050 = load i32, ptr %12, align 4, !tbaa !5
  %4051 = add nsw i32 %4050, -1
  %4052 = icmp slt i32 %4049, %4051
  br i1 %4052, label %4072, label %4053

4053:                                             ; preds = %4048
  %4054 = icmp eq i32 %4049, %4051
  br i1 %4054, label %4055, label %4088

4055:                                             ; preds = %4053
  store i32 0, ptr %4, align 4, !tbaa !5
  %4056 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4056, ptr %6, align 4, !tbaa !5
  br i1 %3965, label %4095, label %4057

4057:                                             ; preds = %4055, %4082
  %4058 = phi i64 [ %4086, %4082 ], [ 1, %4055 ]
  %4059 = getelementptr inbounds i32, ptr %4, i64 %4058
  %4060 = load i32, ptr %4059, align 4, !tbaa !5
  %4061 = getelementptr inbounds i32, ptr %12, i64 %4058
  %4062 = load i32, ptr %4061, align 4, !tbaa !5
  %4063 = add nsw i32 %4062, -1
  %4064 = icmp slt i32 %4060, %4063
  br i1 %4064, label %4065, label %4080

4065:                                             ; preds = %4057
  br i1 %4052, label %4072, label %4066

4066:                                             ; preds = %4065
  %4067 = getelementptr inbounds i32, ptr %7, i64 %4058
  %4068 = load i32, ptr %4067, align 4, !tbaa !5
  %4069 = getelementptr inbounds i32, ptr %6, i64 %4058
  %4070 = load i32, ptr %4069, align 4, !tbaa !5
  %4071 = add nsw i32 %4070, %4068
  store i32 %4071, ptr %4069, align 4, !tbaa !5
  br label %4090

4072:                                             ; preds = %4048, %4065
  %4073 = phi i32 [ %4060, %4065 ], [ %4049, %4048 ]
  %4074 = phi ptr [ %4059, %4065 ], [ %4, %4048 ]
  %4075 = phi i64 [ %4058, %4065 ], [ 0, %4048 ]
  %4076 = add nsw i32 %4073, 1
  store i32 %4076, ptr %4074, align 4, !tbaa !5
  %4077 = getelementptr inbounds i32, ptr %7, i64 %4075
  %4078 = load i32, ptr %4077, align 4, !tbaa !5
  %4079 = getelementptr inbounds i32, ptr %6, i64 %4075
  br label %4090

4080:                                             ; preds = %4057
  %4081 = icmp eq i32 %4060, %4063
  br i1 %4081, label %4082, label %4088

4082:                                             ; preds = %4080
  store i32 0, ptr %4059, align 4, !tbaa !5
  %4083 = getelementptr inbounds i32, ptr %8, i64 %4058
  %4084 = load i32, ptr %4083, align 4, !tbaa !5
  %4085 = getelementptr inbounds i32, ptr %6, i64 %4058
  store i32 %4084, ptr %4085, align 4, !tbaa !5
  %4086 = add nuw nsw i64 %4058, 1
  %4087 = icmp eq i64 %4086, %3963
  br i1 %4087, label %4095, label %4057, !llvm.loop !1437

4088:                                             ; preds = %4053, %4080
  %4089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4090:                                             ; preds = %4066, %4072
  %4091 = phi ptr [ %4079, %4072 ], [ %4059, %4066 ]
  %4092 = phi i32 [ %4078, %4072 ], [ 1, %4066 ]
  %4093 = load i32, ptr %4091, align 4, !tbaa !5
  %4094 = add nsw i32 %4093, %4092
  store i32 %4094, ptr %4091, align 4, !tbaa !5
  br label %4095

4095:                                             ; preds = %4082, %4090, %4055, %4040
  %4096 = icmp eq i32 %4047, %5
  br i1 %4096, label %5437, label %3966, !llvm.loop !1438

4097:                                             ; preds = %3949, %4231
  %4098 = phi double [ 0.000000e+00, %3949 ], [ %4179, %4231 ]
  %4099 = phi i32 [ 0, %3949 ], [ %4180, %4231 ]
  %4100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3950, label %4101, label %4170

4101:                                             ; preds = %4097, %4160
  %4102 = phi i32 [ %4169, %4160 ], [ 0, %4097 ]
  %4103 = phi i64 [ %4111, %4160 ], [ %3954, %4097 ]
  %4104 = phi i64 [ %4168, %4160 ], [ %3953, %4097 ]
  %4105 = phi i32 [ %4166, %4160 ], [ %4100, %4097 ]
  %4106 = sub i32 %3952, %4102
  %4107 = tail call i32 @llvm.smin.i32(i32 %4106, i32 0)
  %4108 = sub i32 %4106, %4107
  %4109 = zext i32 %4108 to i64
  %4110 = add nuw nsw i64 %4109, 1
  %4111 = add nsw i64 %4103, -1
  %4112 = icmp ult i32 %4108, 31
  br i1 %4112, label %4148, label %4113

4113:                                             ; preds = %4101
  %4114 = and i64 %4110, 8589934560
  %4115 = sub i64 %4104, %4114
  br label %4116

4116:                                             ; preds = %4116, %4113
  %4117 = phi i64 [ 0, %4113 ], [ %4140, %4116 ]
  %4118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4136, %4116 ]
  %4119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4137, %4116 ]
  %4120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4138, %4116 ]
  %4121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4113 ], [ %4139, %4116 ]
  %4122 = sub i64 %4104, %4117
  %4123 = getelementptr inbounds i32, ptr %11, i64 %4122
  %4124 = getelementptr inbounds i32, ptr %4123, i64 -7
  %4125 = load <8 x i32>, ptr %4124, align 4, !tbaa !5
  %4126 = shufflevector <8 x i32> %4125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4127 = getelementptr inbounds i32, ptr %4123, i64 -15
  %4128 = load <8 x i32>, ptr %4127, align 4, !tbaa !5
  %4129 = shufflevector <8 x i32> %4128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4130 = getelementptr inbounds i32, ptr %4123, i64 -23
  %4131 = load <8 x i32>, ptr %4130, align 4, !tbaa !5
  %4132 = shufflevector <8 x i32> %4131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4133 = getelementptr inbounds i32, ptr %4123, i64 -31
  %4134 = load <8 x i32>, ptr %4133, align 4, !tbaa !5
  %4135 = shufflevector <8 x i32> %4134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4136 = mul <8 x i32> %4126, %4118
  %4137 = mul <8 x i32> %4129, %4119
  %4138 = mul <8 x i32> %4132, %4120
  %4139 = mul <8 x i32> %4135, %4121
  %4140 = add nuw i64 %4117, 32
  %4141 = icmp eq i64 %4140, %4114
  br i1 %4141, label %4142, label %4116, !llvm.loop !1439

4142:                                             ; preds = %4116
  %4143 = mul <8 x i32> %4137, %4136
  %4144 = mul <8 x i32> %4138, %4143
  %4145 = mul <8 x i32> %4139, %4144
  %4146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4145)
  %4147 = icmp eq i64 %4110, %4114
  br i1 %4147, label %4160, label %4148

4148:                                             ; preds = %4101, %4142
  %4149 = phi i64 [ %4104, %4101 ], [ %4115, %4142 ]
  %4150 = phi i32 [ 1, %4101 ], [ %4146, %4142 ]
  br label %4151

4151:                                             ; preds = %4148, %4151
  %4152 = phi i64 [ %4157, %4151 ], [ %4149, %4148 ]
  %4153 = phi i32 [ %4156, %4151 ], [ %4150, %4148 ]
  %4154 = getelementptr inbounds i32, ptr %11, i64 %4152
  %4155 = load i32, ptr %4154, align 4, !tbaa !5
  %4156 = mul nsw i32 %4155, %4153
  %4157 = add nsw i64 %4152, -1
  %4158 = trunc i64 %4152 to i32
  %4159 = icmp sgt i32 %4158, 0
  br i1 %4159, label %4151, label %4160, !llvm.loop !1440

4160:                                             ; preds = %4151, %4142
  %4161 = phi i32 [ %4146, %4142 ], [ %4156, %4151 ]
  %4162 = and i64 %4111, 4294967295
  %4163 = getelementptr inbounds i32, ptr %6, i64 %4162
  %4164 = load i32, ptr %4163, align 4, !tbaa !5
  %4165 = mul nsw i32 %4164, %4161
  %4166 = add nsw i32 %4165, %4105
  %4167 = icmp sgt i64 %4103, 2
  %4168 = add nsw i64 %4104, -1
  %4169 = add i32 %4102, 1
  br i1 %4167, label %4101, label %4170, !llvm.loop !1441

4170:                                             ; preds = %4160, %4097
  %4171 = phi i32 [ %4100, %4097 ], [ %4166, %4160 ]
  %4172 = icmp slt i32 %4171, %5
  br i1 %4172, label %4175, label %4173

4173:                                             ; preds = %4170
  %4174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4175:                                             ; preds = %4170
  %4176 = sext i32 %4171 to i64
  %4177 = getelementptr inbounds double, ptr %3643, i64 %4176
  %4178 = load double, ptr %4177, align 8, !tbaa !18
  %4179 = fadd fast double %4098, %4178
  store double %4179, ptr %3645, align 8, !tbaa !18
  %4180 = add nuw nsw i32 %4099, 1
  br i1 %3951, label %4181, label %4231

4181:                                             ; preds = %4175
  %4182 = load i32, ptr %4, align 4, !tbaa !5
  %4183 = load i32, ptr %12, align 4, !tbaa !5
  %4184 = add nsw i32 %4183, -1
  %4185 = icmp slt i32 %4182, %4184
  br i1 %4185, label %4208, label %4186

4186:                                             ; preds = %4181
  %4187 = icmp eq i32 %4182, %4184
  br i1 %4187, label %4188, label %4224

4188:                                             ; preds = %4186
  store i32 0, ptr %4, align 4, !tbaa !5
  %4189 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4189, ptr %6, align 4, !tbaa !5
  br i1 %3956, label %4231, label %4190

4190:                                             ; preds = %4188, %4218
  %4191 = phi i64 [ %4222, %4218 ], [ 1, %4188 ]
  %4192 = getelementptr inbounds i32, ptr %4, i64 %4191
  %4193 = load i32, ptr %4192, align 4, !tbaa !5
  %4194 = getelementptr inbounds i32, ptr %12, i64 %4191
  %4195 = load i32, ptr %4194, align 4, !tbaa !5
  %4196 = add nsw i32 %4195, -1
  %4197 = icmp slt i32 %4193, %4196
  br i1 %4197, label %4198, label %4216

4198:                                             ; preds = %4190
  br i1 %4185, label %4208, label %4199

4199:                                             ; preds = %4198
  %4200 = shl i64 %4191, 32
  %4201 = add i64 %4200, -4294967296
  %4202 = ashr exact i64 %4201, 32
  %4203 = getelementptr inbounds i32, ptr %7, i64 %4202
  %4204 = load i32, ptr %4203, align 4, !tbaa !5
  %4205 = getelementptr inbounds i32, ptr %6, i64 %4191
  %4206 = load i32, ptr %4205, align 4, !tbaa !5
  %4207 = add nsw i32 %4206, %4204
  store i32 %4207, ptr %4205, align 4, !tbaa !5
  br label %4226

4208:                                             ; preds = %4181, %4198
  %4209 = phi i32 [ %4193, %4198 ], [ %4182, %4181 ]
  %4210 = phi ptr [ %4192, %4198 ], [ %4, %4181 ]
  %4211 = phi i64 [ %4191, %4198 ], [ 0, %4181 ]
  %4212 = add nsw i32 %4209, 1
  store i32 %4212, ptr %4210, align 4, !tbaa !5
  %4213 = getelementptr inbounds i32, ptr %7, i64 %4211
  %4214 = load i32, ptr %4213, align 4, !tbaa !5
  %4215 = getelementptr inbounds i32, ptr %6, i64 %4211
  br label %4226

4216:                                             ; preds = %4190
  %4217 = icmp eq i32 %4193, %4196
  br i1 %4217, label %4218, label %4224

4218:                                             ; preds = %4216
  store i32 0, ptr %4192, align 4, !tbaa !5
  %4219 = getelementptr inbounds i32, ptr %8, i64 %4191
  %4220 = load i32, ptr %4219, align 4, !tbaa !5
  %4221 = getelementptr inbounds i32, ptr %6, i64 %4191
  store i32 %4220, ptr %4221, align 4, !tbaa !5
  %4222 = add nuw nsw i64 %4191, 1
  %4223 = icmp eq i64 %4222, %3954
  br i1 %4223, label %4231, label %4190, !llvm.loop !1442

4224:                                             ; preds = %4186, %4216
  %4225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4226:                                             ; preds = %4199, %4208
  %4227 = phi ptr [ %4215, %4208 ], [ %4192, %4199 ]
  %4228 = phi i32 [ %4214, %4208 ], [ 1, %4199 ]
  %4229 = load i32, ptr %4227, align 4, !tbaa !5
  %4230 = add nsw i32 %4229, %4228
  store i32 %4230, ptr %4227, align 4, !tbaa !5
  br label %4231

4231:                                             ; preds = %4218, %4226, %4188, %4175
  %4232 = icmp eq i32 %4180, %5
  br i1 %4232, label %5437, label %4097, !llvm.loop !1443

4233:                                             ; preds = %3649
  %4234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

4235:                                             ; preds = %18
  %4236 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4237 = load ptr, ptr %4236, align 8, !tbaa !9
  %4238 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4239 = load ptr, ptr %4238, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4239, align 4, !tbaa !162
  %4240 = icmp eq i32 %13, 0
  br i1 %4240, label %4241, label %4244

4241:                                             ; preds = %4235
  %4242 = load double, ptr %4237, align 8, !tbaa !18
  %4243 = fptrunc double %4242 to float
  store float %4243, ptr %4239, align 4, !tbaa !162
  br label %5437

4244:                                             ; preds = %4235
  switch i32 %1, label %4835 [
    i32 1, label %4245
    i32 0, label %4543
  ]

4245:                                             ; preds = %4244
  %4246 = getelementptr inbounds i32, ptr %3, i64 %19
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = icmp eq i32 %4247, 0
  %4249 = icmp sgt i32 %5, 0
  br i1 %4248, label %4259, label %4250

4250:                                             ; preds = %4245
  br i1 %4249, label %4251, label %5437

4251:                                             ; preds = %4250
  %4252 = icmp sgt i32 %13, 1
  %4253 = icmp sgt i32 %13, 0
  %4254 = add i32 %13, -2
  %4255 = zext i32 %4254 to i64
  %4256 = zext i32 %13 to i64
  %4257 = add nuw i32 %5, 1
  %4258 = icmp eq i32 %13, 1
  br label %4406

4259:                                             ; preds = %4245
  br i1 %4249, label %4260, label %5437

4260:                                             ; preds = %4259
  %4261 = icmp sgt i32 %13, 1
  %4262 = icmp sgt i32 %13, 0
  %4263 = add i32 %13, -2
  %4264 = zext i32 %4263 to i64
  %4265 = zext i32 %13 to i64
  %4266 = add nuw i32 %5, 1
  %4267 = icmp eq i32 %13, 1
  br label %4268

4268:                                             ; preds = %4260, %4404
  %4269 = phi float [ 0.000000e+00, %4260 ], [ %4354, %4404 ]
  %4270 = phi i32 [ 0, %4260 ], [ %4356, %4404 ]
  %4271 = phi double [ 0.000000e+00, %4260 ], [ %4355, %4404 ]
  %4272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4261, label %4273, label %4342

4273:                                             ; preds = %4268, %4332
  %4274 = phi i32 [ %4341, %4332 ], [ 0, %4268 ]
  %4275 = phi i64 [ %4283, %4332 ], [ %4265, %4268 ]
  %4276 = phi i64 [ %4340, %4332 ], [ %4264, %4268 ]
  %4277 = phi i32 [ %4338, %4332 ], [ %4272, %4268 ]
  %4278 = sub i32 %4263, %4274
  %4279 = tail call i32 @llvm.smin.i32(i32 %4278, i32 0)
  %4280 = sub i32 %4278, %4279
  %4281 = zext i32 %4280 to i64
  %4282 = add nuw nsw i64 %4281, 1
  %4283 = add nsw i64 %4275, -1
  %4284 = icmp ult i32 %4280, 31
  br i1 %4284, label %4320, label %4285

4285:                                             ; preds = %4273
  %4286 = and i64 %4282, 8589934560
  %4287 = sub i64 %4276, %4286
  br label %4288

4288:                                             ; preds = %4288, %4285
  %4289 = phi i64 [ 0, %4285 ], [ %4312, %4288 ]
  %4290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4308, %4288 ]
  %4291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4309, %4288 ]
  %4292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4310, %4288 ]
  %4293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4285 ], [ %4311, %4288 ]
  %4294 = sub i64 %4276, %4289
  %4295 = getelementptr inbounds i32, ptr %9, i64 %4294
  %4296 = getelementptr inbounds i32, ptr %4295, i64 -7
  %4297 = load <8 x i32>, ptr %4296, align 4, !tbaa !5
  %4298 = shufflevector <8 x i32> %4297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4299 = getelementptr inbounds i32, ptr %4295, i64 -15
  %4300 = load <8 x i32>, ptr %4299, align 4, !tbaa !5
  %4301 = shufflevector <8 x i32> %4300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4302 = getelementptr inbounds i32, ptr %4295, i64 -23
  %4303 = load <8 x i32>, ptr %4302, align 4, !tbaa !5
  %4304 = shufflevector <8 x i32> %4303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4305 = getelementptr inbounds i32, ptr %4295, i64 -31
  %4306 = load <8 x i32>, ptr %4305, align 4, !tbaa !5
  %4307 = shufflevector <8 x i32> %4306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4308 = mul <8 x i32> %4298, %4290
  %4309 = mul <8 x i32> %4301, %4291
  %4310 = mul <8 x i32> %4304, %4292
  %4311 = mul <8 x i32> %4307, %4293
  %4312 = add nuw i64 %4289, 32
  %4313 = icmp eq i64 %4312, %4286
  br i1 %4313, label %4314, label %4288, !llvm.loop !1444

4314:                                             ; preds = %4288
  %4315 = mul <8 x i32> %4309, %4308
  %4316 = mul <8 x i32> %4310, %4315
  %4317 = mul <8 x i32> %4311, %4316
  %4318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4317)
  %4319 = icmp eq i64 %4282, %4286
  br i1 %4319, label %4332, label %4320

4320:                                             ; preds = %4273, %4314
  %4321 = phi i64 [ %4276, %4273 ], [ %4287, %4314 ]
  %4322 = phi i32 [ 1, %4273 ], [ %4318, %4314 ]
  br label %4323

4323:                                             ; preds = %4320, %4323
  %4324 = phi i64 [ %4329, %4323 ], [ %4321, %4320 ]
  %4325 = phi i32 [ %4328, %4323 ], [ %4322, %4320 ]
  %4326 = getelementptr inbounds i32, ptr %9, i64 %4324
  %4327 = load i32, ptr %4326, align 4, !tbaa !5
  %4328 = mul nsw i32 %4327, %4325
  %4329 = add nsw i64 %4324, -1
  %4330 = trunc i64 %4324 to i32
  %4331 = icmp sgt i32 %4330, 0
  br i1 %4331, label %4323, label %4332, !llvm.loop !1445

4332:                                             ; preds = %4323, %4314
  %4333 = phi i32 [ %4318, %4314 ], [ %4328, %4323 ]
  %4334 = and i64 %4283, 4294967295
  %4335 = getelementptr inbounds i32, ptr %6, i64 %4334
  %4336 = load i32, ptr %4335, align 4, !tbaa !5
  %4337 = mul nsw i32 %4336, %4333
  %4338 = add nsw i32 %4337, %4277
  %4339 = icmp sgt i64 %4275, 2
  %4340 = add nsw i64 %4276, -1
  %4341 = add i32 %4274, 1
  br i1 %4339, label %4273, label %4342, !llvm.loop !1446

4342:                                             ; preds = %4332, %4268
  %4343 = phi i32 [ %4272, %4268 ], [ %4338, %4332 ]
  %4344 = sext i32 %4343 to i64
  %4345 = getelementptr inbounds double, ptr %2, i64 %4344
  %4346 = load double, ptr %4345, align 8, !tbaa !18
  %4347 = getelementptr inbounds double, ptr %4237, i64 %4344
  %4348 = load double, ptr %4347, align 8, !tbaa !18
  %4349 = fptrunc double %4348 to float
  %4350 = fpext float %4269 to double
  %4351 = fpext float %4349 to double
  %4352 = fmul fast double %4346, %4351
  %4353 = fadd fast double %4352, %4350
  %4354 = fptrunc double %4353 to float
  %4355 = fadd fast double %4346, %4271
  %4356 = add nuw nsw i32 %4270, 1
  br i1 %4262, label %4357, label %4404

4357:                                             ; preds = %4342
  %4358 = load i32, ptr %4, align 4, !tbaa !5
  %4359 = load i32, ptr %12, align 4, !tbaa !5
  %4360 = add nsw i32 %4359, -1
  %4361 = icmp slt i32 %4358, %4360
  br i1 %4361, label %4381, label %4362

4362:                                             ; preds = %4357
  %4363 = icmp eq i32 %4358, %4360
  br i1 %4363, label %4364, label %4397

4364:                                             ; preds = %4362
  store i32 0, ptr %4, align 4, !tbaa !5
  %4365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4365, ptr %6, align 4, !tbaa !5
  br i1 %4267, label %4404, label %4366

4366:                                             ; preds = %4364, %4391
  %4367 = phi i64 [ %4395, %4391 ], [ 1, %4364 ]
  %4368 = getelementptr inbounds i32, ptr %4, i64 %4367
  %4369 = load i32, ptr %4368, align 4, !tbaa !5
  %4370 = getelementptr inbounds i32, ptr %12, i64 %4367
  %4371 = load i32, ptr %4370, align 4, !tbaa !5
  %4372 = add nsw i32 %4371, -1
  %4373 = icmp slt i32 %4369, %4372
  br i1 %4373, label %4374, label %4389

4374:                                             ; preds = %4366
  br i1 %4361, label %4381, label %4375

4375:                                             ; preds = %4374
  %4376 = getelementptr inbounds i32, ptr %7, i64 %4367
  %4377 = load i32, ptr %4376, align 4, !tbaa !5
  %4378 = getelementptr inbounds i32, ptr %6, i64 %4367
  %4379 = load i32, ptr %4378, align 4, !tbaa !5
  %4380 = add nsw i32 %4379, %4377
  store i32 %4380, ptr %4378, align 4, !tbaa !5
  br label %4399

4381:                                             ; preds = %4357, %4374
  %4382 = phi i32 [ %4369, %4374 ], [ %4358, %4357 ]
  %4383 = phi ptr [ %4368, %4374 ], [ %4, %4357 ]
  %4384 = phi i64 [ %4367, %4374 ], [ 0, %4357 ]
  %4385 = add nsw i32 %4382, 1
  store i32 %4385, ptr %4383, align 4, !tbaa !5
  %4386 = getelementptr inbounds i32, ptr %7, i64 %4384
  %4387 = load i32, ptr %4386, align 4, !tbaa !5
  %4388 = getelementptr inbounds i32, ptr %6, i64 %4384
  br label %4399

4389:                                             ; preds = %4366
  %4390 = icmp eq i32 %4369, %4372
  br i1 %4390, label %4391, label %4397

4391:                                             ; preds = %4389
  store i32 0, ptr %4368, align 4, !tbaa !5
  %4392 = getelementptr inbounds i32, ptr %8, i64 %4367
  %4393 = load i32, ptr %4392, align 4, !tbaa !5
  %4394 = getelementptr inbounds i32, ptr %6, i64 %4367
  store i32 %4393, ptr %4394, align 4, !tbaa !5
  %4395 = add nuw nsw i64 %4367, 1
  %4396 = icmp eq i64 %4395, %4265
  br i1 %4396, label %4404, label %4366, !llvm.loop !1447

4397:                                             ; preds = %4362, %4389
  store float %4354, ptr %4239, align 4, !tbaa !162
  %4398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4399:                                             ; preds = %4375, %4381
  %4400 = phi ptr [ %4388, %4381 ], [ %4368, %4375 ]
  %4401 = phi i32 [ %4387, %4381 ], [ 1, %4375 ]
  %4402 = load i32, ptr %4400, align 4, !tbaa !5
  %4403 = add nsw i32 %4402, %4401
  store i32 %4403, ptr %4400, align 4, !tbaa !5
  br label %4404

4404:                                             ; preds = %4391, %4399, %4364, %4342
  %4405 = icmp eq i32 %4356, %5
  br i1 %4405, label %5435, label %4268, !llvm.loop !1448

4406:                                             ; preds = %4251, %4541
  %4407 = phi float [ 0.000000e+00, %4251 ], [ %4489, %4541 ]
  %4408 = phi i32 [ 0, %4251 ], [ %4490, %4541 ]
  %4409 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4252, label %4410, label %4479

4410:                                             ; preds = %4406, %4469
  %4411 = phi i32 [ %4478, %4469 ], [ 0, %4406 ]
  %4412 = phi i64 [ %4420, %4469 ], [ %4256, %4406 ]
  %4413 = phi i64 [ %4477, %4469 ], [ %4255, %4406 ]
  %4414 = phi i32 [ %4475, %4469 ], [ %4409, %4406 ]
  %4415 = sub i32 %4254, %4411
  %4416 = tail call i32 @llvm.smin.i32(i32 %4415, i32 0)
  %4417 = sub i32 %4415, %4416
  %4418 = zext i32 %4417 to i64
  %4419 = add nuw nsw i64 %4418, 1
  %4420 = add nsw i64 %4412, -1
  %4421 = icmp ult i32 %4417, 31
  br i1 %4421, label %4457, label %4422

4422:                                             ; preds = %4410
  %4423 = and i64 %4419, 8589934560
  %4424 = sub i64 %4413, %4423
  br label %4425

4425:                                             ; preds = %4425, %4422
  %4426 = phi i64 [ 0, %4422 ], [ %4449, %4425 ]
  %4427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4445, %4425 ]
  %4428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4446, %4425 ]
  %4429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4447, %4425 ]
  %4430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4448, %4425 ]
  %4431 = sub i64 %4413, %4426
  %4432 = getelementptr inbounds i32, ptr %11, i64 %4431
  %4433 = getelementptr inbounds i32, ptr %4432, i64 -7
  %4434 = load <8 x i32>, ptr %4433, align 4, !tbaa !5
  %4435 = shufflevector <8 x i32> %4434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4436 = getelementptr inbounds i32, ptr %4432, i64 -15
  %4437 = load <8 x i32>, ptr %4436, align 4, !tbaa !5
  %4438 = shufflevector <8 x i32> %4437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4439 = getelementptr inbounds i32, ptr %4432, i64 -23
  %4440 = load <8 x i32>, ptr %4439, align 4, !tbaa !5
  %4441 = shufflevector <8 x i32> %4440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4442 = getelementptr inbounds i32, ptr %4432, i64 -31
  %4443 = load <8 x i32>, ptr %4442, align 4, !tbaa !5
  %4444 = shufflevector <8 x i32> %4443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4445 = mul <8 x i32> %4435, %4427
  %4446 = mul <8 x i32> %4438, %4428
  %4447 = mul <8 x i32> %4441, %4429
  %4448 = mul <8 x i32> %4444, %4430
  %4449 = add nuw i64 %4426, 32
  %4450 = icmp eq i64 %4449, %4423
  br i1 %4450, label %4451, label %4425, !llvm.loop !1449

4451:                                             ; preds = %4425
  %4452 = mul <8 x i32> %4446, %4445
  %4453 = mul <8 x i32> %4447, %4452
  %4454 = mul <8 x i32> %4448, %4453
  %4455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4454)
  %4456 = icmp eq i64 %4419, %4423
  br i1 %4456, label %4469, label %4457

4457:                                             ; preds = %4410, %4451
  %4458 = phi i64 [ %4413, %4410 ], [ %4424, %4451 ]
  %4459 = phi i32 [ 1, %4410 ], [ %4455, %4451 ]
  br label %4460

4460:                                             ; preds = %4457, %4460
  %4461 = phi i64 [ %4466, %4460 ], [ %4458, %4457 ]
  %4462 = phi i32 [ %4465, %4460 ], [ %4459, %4457 ]
  %4463 = getelementptr inbounds i32, ptr %11, i64 %4461
  %4464 = load i32, ptr %4463, align 4, !tbaa !5
  %4465 = mul nsw i32 %4464, %4462
  %4466 = add nsw i64 %4461, -1
  %4467 = trunc i64 %4461 to i32
  %4468 = icmp sgt i32 %4467, 0
  br i1 %4468, label %4460, label %4469, !llvm.loop !1450

4469:                                             ; preds = %4460, %4451
  %4470 = phi i32 [ %4455, %4451 ], [ %4465, %4460 ]
  %4471 = and i64 %4420, 4294967295
  %4472 = getelementptr inbounds i32, ptr %6, i64 %4471
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = mul nsw i32 %4473, %4470
  %4475 = add nsw i32 %4474, %4414
  %4476 = icmp sgt i64 %4412, 2
  %4477 = add nsw i64 %4413, -1
  %4478 = add i32 %4411, 1
  br i1 %4476, label %4410, label %4479, !llvm.loop !1451

4479:                                             ; preds = %4469, %4406
  %4480 = phi i32 [ %4409, %4406 ], [ %4475, %4469 ]
  %4481 = icmp slt i32 %4480, %5
  br i1 %4481, label %4484, label %4482

4482:                                             ; preds = %4479
  %4483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4484:                                             ; preds = %4479
  %4485 = sext i32 %4480 to i64
  %4486 = getelementptr inbounds double, ptr %4237, i64 %4485
  %4487 = load double, ptr %4486, align 8, !tbaa !18
  %4488 = fptrunc double %4487 to float
  %4489 = fadd fast float %4407, %4488
  store float %4489, ptr %4239, align 4, !tbaa !162
  %4490 = add nuw nsw i32 %4408, 1
  br i1 %4253, label %4491, label %4541

4491:                                             ; preds = %4484
  %4492 = load i32, ptr %4, align 4, !tbaa !5
  %4493 = load i32, ptr %12, align 4, !tbaa !5
  %4494 = add nsw i32 %4493, -1
  %4495 = icmp slt i32 %4492, %4494
  br i1 %4495, label %4518, label %4496

4496:                                             ; preds = %4491
  %4497 = icmp eq i32 %4492, %4494
  br i1 %4497, label %4498, label %4534

4498:                                             ; preds = %4496
  store i32 0, ptr %4, align 4, !tbaa !5
  %4499 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4499, ptr %6, align 4, !tbaa !5
  br i1 %4258, label %4541, label %4500

4500:                                             ; preds = %4498, %4528
  %4501 = phi i64 [ %4532, %4528 ], [ 1, %4498 ]
  %4502 = getelementptr inbounds i32, ptr %4, i64 %4501
  %4503 = load i32, ptr %4502, align 4, !tbaa !5
  %4504 = getelementptr inbounds i32, ptr %12, i64 %4501
  %4505 = load i32, ptr %4504, align 4, !tbaa !5
  %4506 = add nsw i32 %4505, -1
  %4507 = icmp slt i32 %4503, %4506
  br i1 %4507, label %4508, label %4526

4508:                                             ; preds = %4500
  br i1 %4495, label %4518, label %4509

4509:                                             ; preds = %4508
  %4510 = shl i64 %4501, 32
  %4511 = add i64 %4510, -4294967296
  %4512 = ashr exact i64 %4511, 32
  %4513 = getelementptr inbounds i32, ptr %7, i64 %4512
  %4514 = load i32, ptr %4513, align 4, !tbaa !5
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4501
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = add nsw i32 %4516, %4514
  store i32 %4517, ptr %4515, align 4, !tbaa !5
  br label %4536

4518:                                             ; preds = %4491, %4508
  %4519 = phi i32 [ %4503, %4508 ], [ %4492, %4491 ]
  %4520 = phi ptr [ %4502, %4508 ], [ %4, %4491 ]
  %4521 = phi i64 [ %4501, %4508 ], [ 0, %4491 ]
  %4522 = add nsw i32 %4519, 1
  store i32 %4522, ptr %4520, align 4, !tbaa !5
  %4523 = getelementptr inbounds i32, ptr %7, i64 %4521
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = getelementptr inbounds i32, ptr %6, i64 %4521
  br label %4536

4526:                                             ; preds = %4500
  %4527 = icmp eq i32 %4503, %4506
  br i1 %4527, label %4528, label %4534

4528:                                             ; preds = %4526
  store i32 0, ptr %4502, align 4, !tbaa !5
  %4529 = getelementptr inbounds i32, ptr %8, i64 %4501
  %4530 = load i32, ptr %4529, align 4, !tbaa !5
  %4531 = getelementptr inbounds i32, ptr %6, i64 %4501
  store i32 %4530, ptr %4531, align 4, !tbaa !5
  %4532 = add nuw nsw i64 %4501, 1
  %4533 = icmp eq i64 %4532, %4256
  br i1 %4533, label %4541, label %4500, !llvm.loop !1452

4534:                                             ; preds = %4496, %4526
  %4535 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4536:                                             ; preds = %4509, %4518
  %4537 = phi ptr [ %4525, %4518 ], [ %4502, %4509 ]
  %4538 = phi i32 [ %4524, %4518 ], [ 1, %4509 ]
  %4539 = load i32, ptr %4537, align 4, !tbaa !5
  %4540 = add nsw i32 %4539, %4538
  store i32 %4540, ptr %4537, align 4, !tbaa !5
  br label %4541

4541:                                             ; preds = %4528, %4536, %4498, %4484
  %4542 = icmp eq i32 %4490, %5
  br i1 %4542, label %5437, label %4406, !llvm.loop !1453

4543:                                             ; preds = %4244
  %4544 = getelementptr inbounds i32, ptr %3, i64 %19
  %4545 = load i32, ptr %4544, align 4, !tbaa !5
  %4546 = icmp eq i32 %4545, 0
  %4547 = icmp sgt i32 %5, 0
  br i1 %4546, label %4557, label %4548

4548:                                             ; preds = %4543
  br i1 %4547, label %4549, label %5437

4549:                                             ; preds = %4548
  %4550 = icmp sgt i32 %13, 1
  %4551 = icmp sgt i32 %13, 0
  %4552 = add i32 %13, -2
  %4553 = zext i32 %4552 to i64
  %4554 = zext i32 %13 to i64
  %4555 = add nuw i32 %5, 1
  %4556 = icmp eq i32 %13, 1
  br label %4698

4557:                                             ; preds = %4543
  br i1 %4547, label %4558, label %5437

4558:                                             ; preds = %4557
  %4559 = icmp sgt i32 %13, 1
  %4560 = icmp sgt i32 %13, 0
  %4561 = add i32 %13, -2
  %4562 = zext i32 %4561 to i64
  %4563 = zext i32 %13 to i64
  %4564 = add nuw i32 %5, 1
  %4565 = icmp eq i32 %13, 1
  br label %4566

4566:                                             ; preds = %4558, %4696
  %4567 = phi float [ 0.000000e+00, %4558 ], [ %4646, %4696 ]
  %4568 = phi i32 [ 0, %4558 ], [ %4648, %4696 ]
  %4569 = phi double [ 0.000000e+00, %4558 ], [ %4647, %4696 ]
  %4570 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4559, label %4571, label %4640

4571:                                             ; preds = %4566, %4630
  %4572 = phi i32 [ %4639, %4630 ], [ 0, %4566 ]
  %4573 = phi i64 [ %4581, %4630 ], [ %4563, %4566 ]
  %4574 = phi i64 [ %4638, %4630 ], [ %4562, %4566 ]
  %4575 = phi i32 [ %4636, %4630 ], [ %4570, %4566 ]
  %4576 = sub i32 %4561, %4572
  %4577 = tail call i32 @llvm.smin.i32(i32 %4576, i32 0)
  %4578 = sub i32 %4576, %4577
  %4579 = zext i32 %4578 to i64
  %4580 = add nuw nsw i64 %4579, 1
  %4581 = add nsw i64 %4573, -1
  %4582 = icmp ult i32 %4578, 31
  br i1 %4582, label %4618, label %4583

4583:                                             ; preds = %4571
  %4584 = and i64 %4580, 8589934560
  %4585 = sub i64 %4574, %4584
  br label %4586

4586:                                             ; preds = %4586, %4583
  %4587 = phi i64 [ 0, %4583 ], [ %4610, %4586 ]
  %4588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4606, %4586 ]
  %4589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4607, %4586 ]
  %4590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4608, %4586 ]
  %4591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4583 ], [ %4609, %4586 ]
  %4592 = sub i64 %4574, %4587
  %4593 = getelementptr inbounds i32, ptr %9, i64 %4592
  %4594 = getelementptr inbounds i32, ptr %4593, i64 -7
  %4595 = load <8 x i32>, ptr %4594, align 4, !tbaa !5
  %4596 = shufflevector <8 x i32> %4595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4597 = getelementptr inbounds i32, ptr %4593, i64 -15
  %4598 = load <8 x i32>, ptr %4597, align 4, !tbaa !5
  %4599 = shufflevector <8 x i32> %4598, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4600 = getelementptr inbounds i32, ptr %4593, i64 -23
  %4601 = load <8 x i32>, ptr %4600, align 4, !tbaa !5
  %4602 = shufflevector <8 x i32> %4601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4603 = getelementptr inbounds i32, ptr %4593, i64 -31
  %4604 = load <8 x i32>, ptr %4603, align 4, !tbaa !5
  %4605 = shufflevector <8 x i32> %4604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4606 = mul <8 x i32> %4596, %4588
  %4607 = mul <8 x i32> %4599, %4589
  %4608 = mul <8 x i32> %4602, %4590
  %4609 = mul <8 x i32> %4605, %4591
  %4610 = add nuw i64 %4587, 32
  %4611 = icmp eq i64 %4610, %4584
  br i1 %4611, label %4612, label %4586, !llvm.loop !1454

4612:                                             ; preds = %4586
  %4613 = mul <8 x i32> %4607, %4606
  %4614 = mul <8 x i32> %4608, %4613
  %4615 = mul <8 x i32> %4609, %4614
  %4616 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4615)
  %4617 = icmp eq i64 %4580, %4584
  br i1 %4617, label %4630, label %4618

4618:                                             ; preds = %4571, %4612
  %4619 = phi i64 [ %4574, %4571 ], [ %4585, %4612 ]
  %4620 = phi i32 [ 1, %4571 ], [ %4616, %4612 ]
  br label %4621

4621:                                             ; preds = %4618, %4621
  %4622 = phi i64 [ %4627, %4621 ], [ %4619, %4618 ]
  %4623 = phi i32 [ %4626, %4621 ], [ %4620, %4618 ]
  %4624 = getelementptr inbounds i32, ptr %9, i64 %4622
  %4625 = load i32, ptr %4624, align 4, !tbaa !5
  %4626 = mul nsw i32 %4625, %4623
  %4627 = add nsw i64 %4622, -1
  %4628 = trunc i64 %4622 to i32
  %4629 = icmp sgt i32 %4628, 0
  br i1 %4629, label %4621, label %4630, !llvm.loop !1455

4630:                                             ; preds = %4621, %4612
  %4631 = phi i32 [ %4616, %4612 ], [ %4626, %4621 ]
  %4632 = and i64 %4581, 4294967295
  %4633 = getelementptr inbounds i32, ptr %6, i64 %4632
  %4634 = load i32, ptr %4633, align 4, !tbaa !5
  %4635 = mul nsw i32 %4634, %4631
  %4636 = add nsw i32 %4635, %4575
  %4637 = icmp sgt i64 %4573, 2
  %4638 = add nsw i64 %4574, -1
  %4639 = add i32 %4572, 1
  br i1 %4637, label %4571, label %4640, !llvm.loop !1456

4640:                                             ; preds = %4630, %4566
  %4641 = phi i32 [ %4570, %4566 ], [ %4636, %4630 ]
  %4642 = sext i32 %4641 to i64
  %4643 = getelementptr inbounds double, ptr %4237, i64 %4642
  %4644 = load double, ptr %4643, align 8, !tbaa !18
  %4645 = fptrunc double %4644 to float
  %4646 = fadd fast float %4567, %4645
  %4647 = fadd fast double %4569, 1.000000e+00
  %4648 = add nuw nsw i32 %4568, 1
  br i1 %4560, label %4649, label %4696

4649:                                             ; preds = %4640
  %4650 = load i32, ptr %4, align 4, !tbaa !5
  %4651 = load i32, ptr %12, align 4, !tbaa !5
  %4652 = add nsw i32 %4651, -1
  %4653 = icmp slt i32 %4650, %4652
  br i1 %4653, label %4673, label %4654

4654:                                             ; preds = %4649
  %4655 = icmp eq i32 %4650, %4652
  br i1 %4655, label %4656, label %4689

4656:                                             ; preds = %4654
  store i32 0, ptr %4, align 4, !tbaa !5
  %4657 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4657, ptr %6, align 4, !tbaa !5
  br i1 %4565, label %4696, label %4658

4658:                                             ; preds = %4656, %4683
  %4659 = phi i64 [ %4687, %4683 ], [ 1, %4656 ]
  %4660 = getelementptr inbounds i32, ptr %4, i64 %4659
  %4661 = load i32, ptr %4660, align 4, !tbaa !5
  %4662 = getelementptr inbounds i32, ptr %12, i64 %4659
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = add nsw i32 %4663, -1
  %4665 = icmp slt i32 %4661, %4664
  br i1 %4665, label %4666, label %4681

4666:                                             ; preds = %4658
  br i1 %4653, label %4673, label %4667

4667:                                             ; preds = %4666
  %4668 = getelementptr inbounds i32, ptr %7, i64 %4659
  %4669 = load i32, ptr %4668, align 4, !tbaa !5
  %4670 = getelementptr inbounds i32, ptr %6, i64 %4659
  %4671 = load i32, ptr %4670, align 4, !tbaa !5
  %4672 = add nsw i32 %4671, %4669
  store i32 %4672, ptr %4670, align 4, !tbaa !5
  br label %4691

4673:                                             ; preds = %4649, %4666
  %4674 = phi i32 [ %4661, %4666 ], [ %4650, %4649 ]
  %4675 = phi ptr [ %4660, %4666 ], [ %4, %4649 ]
  %4676 = phi i64 [ %4659, %4666 ], [ 0, %4649 ]
  %4677 = add nsw i32 %4674, 1
  store i32 %4677, ptr %4675, align 4, !tbaa !5
  %4678 = getelementptr inbounds i32, ptr %7, i64 %4676
  %4679 = load i32, ptr %4678, align 4, !tbaa !5
  %4680 = getelementptr inbounds i32, ptr %6, i64 %4676
  br label %4691

4681:                                             ; preds = %4658
  %4682 = icmp eq i32 %4661, %4664
  br i1 %4682, label %4683, label %4689

4683:                                             ; preds = %4681
  store i32 0, ptr %4660, align 4, !tbaa !5
  %4684 = getelementptr inbounds i32, ptr %8, i64 %4659
  %4685 = load i32, ptr %4684, align 4, !tbaa !5
  %4686 = getelementptr inbounds i32, ptr %6, i64 %4659
  store i32 %4685, ptr %4686, align 4, !tbaa !5
  %4687 = add nuw nsw i64 %4659, 1
  %4688 = icmp eq i64 %4687, %4563
  br i1 %4688, label %4696, label %4658, !llvm.loop !1457

4689:                                             ; preds = %4654, %4681
  store float %4646, ptr %4239, align 4, !tbaa !162
  %4690 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4691:                                             ; preds = %4667, %4673
  %4692 = phi ptr [ %4680, %4673 ], [ %4660, %4667 ]
  %4693 = phi i32 [ %4679, %4673 ], [ 1, %4667 ]
  %4694 = load i32, ptr %4692, align 4, !tbaa !5
  %4695 = add nsw i32 %4694, %4693
  store i32 %4695, ptr %4692, align 4, !tbaa !5
  br label %4696

4696:                                             ; preds = %4683, %4691, %4656, %4640
  %4697 = icmp eq i32 %4648, %5
  br i1 %4697, label %5436, label %4566, !llvm.loop !1458

4698:                                             ; preds = %4549, %4833
  %4699 = phi float [ 0.000000e+00, %4549 ], [ %4781, %4833 ]
  %4700 = phi i32 [ 0, %4549 ], [ %4782, %4833 ]
  %4701 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4550, label %4702, label %4771

4702:                                             ; preds = %4698, %4761
  %4703 = phi i32 [ %4770, %4761 ], [ 0, %4698 ]
  %4704 = phi i64 [ %4712, %4761 ], [ %4554, %4698 ]
  %4705 = phi i64 [ %4769, %4761 ], [ %4553, %4698 ]
  %4706 = phi i32 [ %4767, %4761 ], [ %4701, %4698 ]
  %4707 = sub i32 %4552, %4703
  %4708 = tail call i32 @llvm.smin.i32(i32 %4707, i32 0)
  %4709 = sub i32 %4707, %4708
  %4710 = zext i32 %4709 to i64
  %4711 = add nuw nsw i64 %4710, 1
  %4712 = add nsw i64 %4704, -1
  %4713 = icmp ult i32 %4709, 31
  br i1 %4713, label %4749, label %4714

4714:                                             ; preds = %4702
  %4715 = and i64 %4711, 8589934560
  %4716 = sub i64 %4705, %4715
  br label %4717

4717:                                             ; preds = %4717, %4714
  %4718 = phi i64 [ 0, %4714 ], [ %4741, %4717 ]
  %4719 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4737, %4717 ]
  %4720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4738, %4717 ]
  %4721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4739, %4717 ]
  %4722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4714 ], [ %4740, %4717 ]
  %4723 = sub i64 %4705, %4718
  %4724 = getelementptr inbounds i32, ptr %11, i64 %4723
  %4725 = getelementptr inbounds i32, ptr %4724, i64 -7
  %4726 = load <8 x i32>, ptr %4725, align 4, !tbaa !5
  %4727 = shufflevector <8 x i32> %4726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4728 = getelementptr inbounds i32, ptr %4724, i64 -15
  %4729 = load <8 x i32>, ptr %4728, align 4, !tbaa !5
  %4730 = shufflevector <8 x i32> %4729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4731 = getelementptr inbounds i32, ptr %4724, i64 -23
  %4732 = load <8 x i32>, ptr %4731, align 4, !tbaa !5
  %4733 = shufflevector <8 x i32> %4732, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4734 = getelementptr inbounds i32, ptr %4724, i64 -31
  %4735 = load <8 x i32>, ptr %4734, align 4, !tbaa !5
  %4736 = shufflevector <8 x i32> %4735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4737 = mul <8 x i32> %4727, %4719
  %4738 = mul <8 x i32> %4730, %4720
  %4739 = mul <8 x i32> %4733, %4721
  %4740 = mul <8 x i32> %4736, %4722
  %4741 = add nuw i64 %4718, 32
  %4742 = icmp eq i64 %4741, %4715
  br i1 %4742, label %4743, label %4717, !llvm.loop !1459

4743:                                             ; preds = %4717
  %4744 = mul <8 x i32> %4738, %4737
  %4745 = mul <8 x i32> %4739, %4744
  %4746 = mul <8 x i32> %4740, %4745
  %4747 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4746)
  %4748 = icmp eq i64 %4711, %4715
  br i1 %4748, label %4761, label %4749

4749:                                             ; preds = %4702, %4743
  %4750 = phi i64 [ %4705, %4702 ], [ %4716, %4743 ]
  %4751 = phi i32 [ 1, %4702 ], [ %4747, %4743 ]
  br label %4752

4752:                                             ; preds = %4749, %4752
  %4753 = phi i64 [ %4758, %4752 ], [ %4750, %4749 ]
  %4754 = phi i32 [ %4757, %4752 ], [ %4751, %4749 ]
  %4755 = getelementptr inbounds i32, ptr %11, i64 %4753
  %4756 = load i32, ptr %4755, align 4, !tbaa !5
  %4757 = mul nsw i32 %4756, %4754
  %4758 = add nsw i64 %4753, -1
  %4759 = trunc i64 %4753 to i32
  %4760 = icmp sgt i32 %4759, 0
  br i1 %4760, label %4752, label %4761, !llvm.loop !1460

4761:                                             ; preds = %4752, %4743
  %4762 = phi i32 [ %4747, %4743 ], [ %4757, %4752 ]
  %4763 = and i64 %4712, 4294967295
  %4764 = getelementptr inbounds i32, ptr %6, i64 %4763
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = mul nsw i32 %4765, %4762
  %4767 = add nsw i32 %4766, %4706
  %4768 = icmp sgt i64 %4704, 2
  %4769 = add nsw i64 %4705, -1
  %4770 = add i32 %4703, 1
  br i1 %4768, label %4702, label %4771, !llvm.loop !1461

4771:                                             ; preds = %4761, %4698
  %4772 = phi i32 [ %4701, %4698 ], [ %4767, %4761 ]
  %4773 = icmp slt i32 %4772, %5
  br i1 %4773, label %4776, label %4774

4774:                                             ; preds = %4771
  %4775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

4776:                                             ; preds = %4771
  %4777 = sext i32 %4772 to i64
  %4778 = getelementptr inbounds double, ptr %4237, i64 %4777
  %4779 = load double, ptr %4778, align 8, !tbaa !18
  %4780 = fptrunc double %4779 to float
  %4781 = fadd fast float %4699, %4780
  store float %4781, ptr %4239, align 4, !tbaa !162
  %4782 = add nuw nsw i32 %4700, 1
  br i1 %4551, label %4783, label %4833

4783:                                             ; preds = %4776
  %4784 = load i32, ptr %4, align 4, !tbaa !5
  %4785 = load i32, ptr %12, align 4, !tbaa !5
  %4786 = add nsw i32 %4785, -1
  %4787 = icmp slt i32 %4784, %4786
  br i1 %4787, label %4810, label %4788

4788:                                             ; preds = %4783
  %4789 = icmp eq i32 %4784, %4786
  br i1 %4789, label %4790, label %4826

4790:                                             ; preds = %4788
  store i32 0, ptr %4, align 4, !tbaa !5
  %4791 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4791, ptr %6, align 4, !tbaa !5
  br i1 %4556, label %4833, label %4792

4792:                                             ; preds = %4790, %4820
  %4793 = phi i64 [ %4824, %4820 ], [ 1, %4790 ]
  %4794 = getelementptr inbounds i32, ptr %4, i64 %4793
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %12, i64 %4793
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = add nsw i32 %4797, -1
  %4799 = icmp slt i32 %4795, %4798
  br i1 %4799, label %4800, label %4818

4800:                                             ; preds = %4792
  br i1 %4787, label %4810, label %4801

4801:                                             ; preds = %4800
  %4802 = shl i64 %4793, 32
  %4803 = add i64 %4802, -4294967296
  %4804 = ashr exact i64 %4803, 32
  %4805 = getelementptr inbounds i32, ptr %7, i64 %4804
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = getelementptr inbounds i32, ptr %6, i64 %4793
  %4808 = load i32, ptr %4807, align 4, !tbaa !5
  %4809 = add nsw i32 %4808, %4806
  store i32 %4809, ptr %4807, align 4, !tbaa !5
  br label %4828

4810:                                             ; preds = %4783, %4800
  %4811 = phi i32 [ %4795, %4800 ], [ %4784, %4783 ]
  %4812 = phi ptr [ %4794, %4800 ], [ %4, %4783 ]
  %4813 = phi i64 [ %4793, %4800 ], [ 0, %4783 ]
  %4814 = add nsw i32 %4811, 1
  store i32 %4814, ptr %4812, align 4, !tbaa !5
  %4815 = getelementptr inbounds i32, ptr %7, i64 %4813
  %4816 = load i32, ptr %4815, align 4, !tbaa !5
  %4817 = getelementptr inbounds i32, ptr %6, i64 %4813
  br label %4828

4818:                                             ; preds = %4792
  %4819 = icmp eq i32 %4795, %4798
  br i1 %4819, label %4820, label %4826

4820:                                             ; preds = %4818
  store i32 0, ptr %4794, align 4, !tbaa !5
  %4821 = getelementptr inbounds i32, ptr %8, i64 %4793
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = getelementptr inbounds i32, ptr %6, i64 %4793
  store i32 %4822, ptr %4823, align 4, !tbaa !5
  %4824 = add nuw nsw i64 %4793, 1
  %4825 = icmp eq i64 %4824, %4554
  br i1 %4825, label %4833, label %4792, !llvm.loop !1462

4826:                                             ; preds = %4788, %4818
  %4827 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4828:                                             ; preds = %4801, %4810
  %4829 = phi ptr [ %4817, %4810 ], [ %4794, %4801 ]
  %4830 = phi i32 [ %4816, %4810 ], [ 1, %4801 ]
  %4831 = load i32, ptr %4829, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, %4830
  store i32 %4832, ptr %4829, align 4, !tbaa !5
  br label %4833

4833:                                             ; preds = %4820, %4828, %4790, %4776
  %4834 = icmp eq i32 %4782, %5
  br i1 %4834, label %5437, label %4698, !llvm.loop !1463

4835:                                             ; preds = %4244
  %4836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

4837:                                             ; preds = %18
  %4838 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4839 = load ptr, ptr %4838, align 8, !tbaa !9
  %4840 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4841 = load ptr, ptr %4840, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4841, align 8, !tbaa !18
  %4842 = icmp eq i32 %13, 0
  br i1 %4842, label %4843, label %4845

4843:                                             ; preds = %4837
  %4844 = load double, ptr %4839, align 8, !tbaa !18
  store double %4844, ptr %4841, align 8, !tbaa !18
  br label %5437

4845:                                             ; preds = %4837
  switch i32 %1, label %5429 [
    i32 1, label %4846
    i32 0, label %5139
  ]

4846:                                             ; preds = %4845
  %4847 = getelementptr inbounds i32, ptr %3, i64 %19
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = icmp eq i32 %4848, 0
  %4850 = icmp sgt i32 %5, 0
  br i1 %4849, label %4860, label %4851

4851:                                             ; preds = %4846
  br i1 %4850, label %4852, label %5437

4852:                                             ; preds = %4851
  %4853 = icmp sgt i32 %13, 1
  %4854 = icmp sgt i32 %13, 0
  %4855 = add i32 %13, -2
  %4856 = zext i32 %4855 to i64
  %4857 = zext i32 %13 to i64
  %4858 = add nuw i32 %5, 1
  %4859 = icmp eq i32 %13, 1
  br label %5003

4860:                                             ; preds = %4846
  br i1 %4850, label %4861, label %5437

4861:                                             ; preds = %4860
  %4862 = icmp sgt i32 %13, 1
  %4863 = icmp sgt i32 %13, 0
  %4864 = add i32 %13, -2
  %4865 = zext i32 %4864 to i64
  %4866 = zext i32 %13 to i64
  %4867 = add nuw i32 %5, 1
  %4868 = icmp eq i32 %13, 1
  br label %4869

4869:                                             ; preds = %4861, %5001
  %4870 = phi double [ 0.000000e+00, %4861 ], [ %4951, %5001 ]
  %4871 = phi i32 [ 0, %4861 ], [ %4953, %5001 ]
  %4872 = phi double [ 0.000000e+00, %4861 ], [ %4952, %5001 ]
  %4873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4862, label %4874, label %4943

4874:                                             ; preds = %4869, %4933
  %4875 = phi i32 [ %4942, %4933 ], [ 0, %4869 ]
  %4876 = phi i64 [ %4884, %4933 ], [ %4866, %4869 ]
  %4877 = phi i64 [ %4941, %4933 ], [ %4865, %4869 ]
  %4878 = phi i32 [ %4939, %4933 ], [ %4873, %4869 ]
  %4879 = sub i32 %4864, %4875
  %4880 = tail call i32 @llvm.smin.i32(i32 %4879, i32 0)
  %4881 = sub i32 %4879, %4880
  %4882 = zext i32 %4881 to i64
  %4883 = add nuw nsw i64 %4882, 1
  %4884 = add nsw i64 %4876, -1
  %4885 = icmp ult i32 %4881, 31
  br i1 %4885, label %4921, label %4886

4886:                                             ; preds = %4874
  %4887 = and i64 %4883, 8589934560
  %4888 = sub i64 %4877, %4887
  br label %4889

4889:                                             ; preds = %4889, %4886
  %4890 = phi i64 [ 0, %4886 ], [ %4913, %4889 ]
  %4891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4909, %4889 ]
  %4892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4910, %4889 ]
  %4893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4911, %4889 ]
  %4894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4886 ], [ %4912, %4889 ]
  %4895 = sub i64 %4877, %4890
  %4896 = getelementptr inbounds i32, ptr %9, i64 %4895
  %4897 = getelementptr inbounds i32, ptr %4896, i64 -7
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = getelementptr inbounds i32, ptr %4896, i64 -15
  %4901 = load <8 x i32>, ptr %4900, align 4, !tbaa !5
  %4902 = shufflevector <8 x i32> %4901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4903 = getelementptr inbounds i32, ptr %4896, i64 -23
  %4904 = load <8 x i32>, ptr %4903, align 4, !tbaa !5
  %4905 = shufflevector <8 x i32> %4904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4906 = getelementptr inbounds i32, ptr %4896, i64 -31
  %4907 = load <8 x i32>, ptr %4906, align 4, !tbaa !5
  %4908 = shufflevector <8 x i32> %4907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4909 = mul <8 x i32> %4899, %4891
  %4910 = mul <8 x i32> %4902, %4892
  %4911 = mul <8 x i32> %4905, %4893
  %4912 = mul <8 x i32> %4908, %4894
  %4913 = add nuw i64 %4890, 32
  %4914 = icmp eq i64 %4913, %4887
  br i1 %4914, label %4915, label %4889, !llvm.loop !1464

4915:                                             ; preds = %4889
  %4916 = mul <8 x i32> %4910, %4909
  %4917 = mul <8 x i32> %4911, %4916
  %4918 = mul <8 x i32> %4912, %4917
  %4919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4918)
  %4920 = icmp eq i64 %4883, %4887
  br i1 %4920, label %4933, label %4921

4921:                                             ; preds = %4874, %4915
  %4922 = phi i64 [ %4877, %4874 ], [ %4888, %4915 ]
  %4923 = phi i32 [ 1, %4874 ], [ %4919, %4915 ]
  br label %4924

4924:                                             ; preds = %4921, %4924
  %4925 = phi i64 [ %4930, %4924 ], [ %4922, %4921 ]
  %4926 = phi i32 [ %4929, %4924 ], [ %4923, %4921 ]
  %4927 = getelementptr inbounds i32, ptr %9, i64 %4925
  %4928 = load i32, ptr %4927, align 4, !tbaa !5
  %4929 = mul nsw i32 %4928, %4926
  %4930 = add nsw i64 %4925, -1
  %4931 = trunc i64 %4925 to i32
  %4932 = icmp sgt i32 %4931, 0
  br i1 %4932, label %4924, label %4933, !llvm.loop !1465

4933:                                             ; preds = %4924, %4915
  %4934 = phi i32 [ %4919, %4915 ], [ %4929, %4924 ]
  %4935 = and i64 %4884, 4294967295
  %4936 = getelementptr inbounds i32, ptr %6, i64 %4935
  %4937 = load i32, ptr %4936, align 4, !tbaa !5
  %4938 = mul nsw i32 %4937, %4934
  %4939 = add nsw i32 %4938, %4878
  %4940 = icmp sgt i64 %4876, 2
  %4941 = add nsw i64 %4877, -1
  %4942 = add i32 %4875, 1
  br i1 %4940, label %4874, label %4943, !llvm.loop !1466

4943:                                             ; preds = %4933, %4869
  %4944 = phi i32 [ %4873, %4869 ], [ %4939, %4933 ]
  %4945 = sext i32 %4944 to i64
  %4946 = getelementptr inbounds double, ptr %2, i64 %4945
  %4947 = load double, ptr %4946, align 8, !tbaa !18
  %4948 = getelementptr inbounds double, ptr %4839, i64 %4945
  %4949 = load double, ptr %4948, align 8, !tbaa !18
  %4950 = fmul fast double %4949, %4947
  %4951 = fadd fast double %4870, %4950
  store double %4951, ptr %4841, align 8, !tbaa !18
  %4952 = fadd fast double %4947, %4872
  %4953 = add nuw nsw i32 %4871, 1
  br i1 %4863, label %4954, label %5001

4954:                                             ; preds = %4943
  %4955 = load i32, ptr %4, align 4, !tbaa !5
  %4956 = load i32, ptr %12, align 4, !tbaa !5
  %4957 = add nsw i32 %4956, -1
  %4958 = icmp slt i32 %4955, %4957
  br i1 %4958, label %4978, label %4959

4959:                                             ; preds = %4954
  %4960 = icmp eq i32 %4955, %4957
  br i1 %4960, label %4961, label %4994

4961:                                             ; preds = %4959
  store i32 0, ptr %4, align 4, !tbaa !5
  %4962 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4962, ptr %6, align 4, !tbaa !5
  br i1 %4868, label %5001, label %4963

4963:                                             ; preds = %4961, %4988
  %4964 = phi i64 [ %4992, %4988 ], [ 1, %4961 ]
  %4965 = getelementptr inbounds i32, ptr %4, i64 %4964
  %4966 = load i32, ptr %4965, align 4, !tbaa !5
  %4967 = getelementptr inbounds i32, ptr %12, i64 %4964
  %4968 = load i32, ptr %4967, align 4, !tbaa !5
  %4969 = add nsw i32 %4968, -1
  %4970 = icmp slt i32 %4966, %4969
  br i1 %4970, label %4971, label %4986

4971:                                             ; preds = %4963
  br i1 %4958, label %4978, label %4972

4972:                                             ; preds = %4971
  %4973 = getelementptr inbounds i32, ptr %7, i64 %4964
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = getelementptr inbounds i32, ptr %6, i64 %4964
  %4976 = load i32, ptr %4975, align 4, !tbaa !5
  %4977 = add nsw i32 %4976, %4974
  store i32 %4977, ptr %4975, align 4, !tbaa !5
  br label %4996

4978:                                             ; preds = %4954, %4971
  %4979 = phi i32 [ %4966, %4971 ], [ %4955, %4954 ]
  %4980 = phi ptr [ %4965, %4971 ], [ %4, %4954 ]
  %4981 = phi i64 [ %4964, %4971 ], [ 0, %4954 ]
  %4982 = add nsw i32 %4979, 1
  store i32 %4982, ptr %4980, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %7, i64 %4981
  %4984 = load i32, ptr %4983, align 4, !tbaa !5
  %4985 = getelementptr inbounds i32, ptr %6, i64 %4981
  br label %4996

4986:                                             ; preds = %4963
  %4987 = icmp eq i32 %4966, %4969
  br i1 %4987, label %4988, label %4994

4988:                                             ; preds = %4986
  store i32 0, ptr %4965, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %8, i64 %4964
  %4990 = load i32, ptr %4989, align 4, !tbaa !5
  %4991 = getelementptr inbounds i32, ptr %6, i64 %4964
  store i32 %4990, ptr %4991, align 4, !tbaa !5
  %4992 = add nuw nsw i64 %4964, 1
  %4993 = icmp eq i64 %4992, %4866
  br i1 %4993, label %5001, label %4963, !llvm.loop !1467

4994:                                             ; preds = %4959, %4986
  %4995 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

4996:                                             ; preds = %4972, %4978
  %4997 = phi ptr [ %4985, %4978 ], [ %4965, %4972 ]
  %4998 = phi i32 [ %4984, %4978 ], [ 1, %4972 ]
  %4999 = load i32, ptr %4997, align 4, !tbaa !5
  %5000 = add nsw i32 %4999, %4998
  store i32 %5000, ptr %4997, align 4, !tbaa !5
  br label %5001

5001:                                             ; preds = %4988, %4996, %4961, %4943
  %5002 = icmp eq i32 %4953, %5
  br i1 %5002, label %5437, label %4869, !llvm.loop !1468

5003:                                             ; preds = %4852, %5137
  %5004 = phi double [ 0.000000e+00, %4852 ], [ %5085, %5137 ]
  %5005 = phi i32 [ 0, %4852 ], [ %5086, %5137 ]
  %5006 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4853, label %5007, label %5076

5007:                                             ; preds = %5003, %5066
  %5008 = phi i32 [ %5075, %5066 ], [ 0, %5003 ]
  %5009 = phi i64 [ %5017, %5066 ], [ %4857, %5003 ]
  %5010 = phi i64 [ %5074, %5066 ], [ %4856, %5003 ]
  %5011 = phi i32 [ %5072, %5066 ], [ %5006, %5003 ]
  %5012 = sub i32 %4855, %5008
  %5013 = tail call i32 @llvm.smin.i32(i32 %5012, i32 0)
  %5014 = sub i32 %5012, %5013
  %5015 = zext i32 %5014 to i64
  %5016 = add nuw nsw i64 %5015, 1
  %5017 = add nsw i64 %5009, -1
  %5018 = icmp ult i32 %5014, 31
  br i1 %5018, label %5054, label %5019

5019:                                             ; preds = %5007
  %5020 = and i64 %5016, 8589934560
  %5021 = sub i64 %5010, %5020
  br label %5022

5022:                                             ; preds = %5022, %5019
  %5023 = phi i64 [ 0, %5019 ], [ %5046, %5022 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5042, %5022 ]
  %5025 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5043, %5022 ]
  %5026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5044, %5022 ]
  %5027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5019 ], [ %5045, %5022 ]
  %5028 = sub i64 %5010, %5023
  %5029 = getelementptr inbounds i32, ptr %11, i64 %5028
  %5030 = getelementptr inbounds i32, ptr %5029, i64 -7
  %5031 = load <8 x i32>, ptr %5030, align 4, !tbaa !5
  %5032 = shufflevector <8 x i32> %5031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5033 = getelementptr inbounds i32, ptr %5029, i64 -15
  %5034 = load <8 x i32>, ptr %5033, align 4, !tbaa !5
  %5035 = shufflevector <8 x i32> %5034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5036 = getelementptr inbounds i32, ptr %5029, i64 -23
  %5037 = load <8 x i32>, ptr %5036, align 4, !tbaa !5
  %5038 = shufflevector <8 x i32> %5037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5039 = getelementptr inbounds i32, ptr %5029, i64 -31
  %5040 = load <8 x i32>, ptr %5039, align 4, !tbaa !5
  %5041 = shufflevector <8 x i32> %5040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5042 = mul <8 x i32> %5032, %5024
  %5043 = mul <8 x i32> %5035, %5025
  %5044 = mul <8 x i32> %5038, %5026
  %5045 = mul <8 x i32> %5041, %5027
  %5046 = add nuw i64 %5023, 32
  %5047 = icmp eq i64 %5046, %5020
  br i1 %5047, label %5048, label %5022, !llvm.loop !1469

5048:                                             ; preds = %5022
  %5049 = mul <8 x i32> %5043, %5042
  %5050 = mul <8 x i32> %5044, %5049
  %5051 = mul <8 x i32> %5045, %5050
  %5052 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5051)
  %5053 = icmp eq i64 %5016, %5020
  br i1 %5053, label %5066, label %5054

5054:                                             ; preds = %5007, %5048
  %5055 = phi i64 [ %5010, %5007 ], [ %5021, %5048 ]
  %5056 = phi i32 [ 1, %5007 ], [ %5052, %5048 ]
  br label %5057

5057:                                             ; preds = %5054, %5057
  %5058 = phi i64 [ %5063, %5057 ], [ %5055, %5054 ]
  %5059 = phi i32 [ %5062, %5057 ], [ %5056, %5054 ]
  %5060 = getelementptr inbounds i32, ptr %11, i64 %5058
  %5061 = load i32, ptr %5060, align 4, !tbaa !5
  %5062 = mul nsw i32 %5061, %5059
  %5063 = add nsw i64 %5058, -1
  %5064 = trunc i64 %5058 to i32
  %5065 = icmp sgt i32 %5064, 0
  br i1 %5065, label %5057, label %5066, !llvm.loop !1470

5066:                                             ; preds = %5057, %5048
  %5067 = phi i32 [ %5052, %5048 ], [ %5062, %5057 ]
  %5068 = and i64 %5017, 4294967295
  %5069 = getelementptr inbounds i32, ptr %6, i64 %5068
  %5070 = load i32, ptr %5069, align 4, !tbaa !5
  %5071 = mul nsw i32 %5070, %5067
  %5072 = add nsw i32 %5071, %5011
  %5073 = icmp sgt i64 %5009, 2
  %5074 = add nsw i64 %5010, -1
  %5075 = add i32 %5008, 1
  br i1 %5073, label %5007, label %5076, !llvm.loop !1471

5076:                                             ; preds = %5066, %5003
  %5077 = phi i32 [ %5006, %5003 ], [ %5072, %5066 ]
  %5078 = icmp slt i32 %5077, %5
  br i1 %5078, label %5081, label %5079

5079:                                             ; preds = %5076
  %5080 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

5081:                                             ; preds = %5076
  %5082 = sext i32 %5077 to i64
  %5083 = getelementptr inbounds double, ptr %4839, i64 %5082
  %5084 = load double, ptr %5083, align 8, !tbaa !18
  %5085 = fadd fast double %5004, %5084
  store double %5085, ptr %4841, align 8, !tbaa !18
  %5086 = add nuw nsw i32 %5005, 1
  br i1 %4854, label %5087, label %5137

5087:                                             ; preds = %5081
  %5088 = load i32, ptr %4, align 4, !tbaa !5
  %5089 = load i32, ptr %12, align 4, !tbaa !5
  %5090 = add nsw i32 %5089, -1
  %5091 = icmp slt i32 %5088, %5090
  br i1 %5091, label %5114, label %5092

5092:                                             ; preds = %5087
  %5093 = icmp eq i32 %5088, %5090
  br i1 %5093, label %5094, label %5130

5094:                                             ; preds = %5092
  store i32 0, ptr %4, align 4, !tbaa !5
  %5095 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5095, ptr %6, align 4, !tbaa !5
  br i1 %4859, label %5137, label %5096

5096:                                             ; preds = %5094, %5124
  %5097 = phi i64 [ %5128, %5124 ], [ 1, %5094 ]
  %5098 = getelementptr inbounds i32, ptr %4, i64 %5097
  %5099 = load i32, ptr %5098, align 4, !tbaa !5
  %5100 = getelementptr inbounds i32, ptr %12, i64 %5097
  %5101 = load i32, ptr %5100, align 4, !tbaa !5
  %5102 = add nsw i32 %5101, -1
  %5103 = icmp slt i32 %5099, %5102
  br i1 %5103, label %5104, label %5122

5104:                                             ; preds = %5096
  br i1 %5091, label %5114, label %5105

5105:                                             ; preds = %5104
  %5106 = shl i64 %5097, 32
  %5107 = add i64 %5106, -4294967296
  %5108 = ashr exact i64 %5107, 32
  %5109 = getelementptr inbounds i32, ptr %7, i64 %5108
  %5110 = load i32, ptr %5109, align 4, !tbaa !5
  %5111 = getelementptr inbounds i32, ptr %6, i64 %5097
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = add nsw i32 %5112, %5110
  store i32 %5113, ptr %5111, align 4, !tbaa !5
  br label %5132

5114:                                             ; preds = %5087, %5104
  %5115 = phi i32 [ %5099, %5104 ], [ %5088, %5087 ]
  %5116 = phi ptr [ %5098, %5104 ], [ %4, %5087 ]
  %5117 = phi i64 [ %5097, %5104 ], [ 0, %5087 ]
  %5118 = add nsw i32 %5115, 1
  store i32 %5118, ptr %5116, align 4, !tbaa !5
  %5119 = getelementptr inbounds i32, ptr %7, i64 %5117
  %5120 = load i32, ptr %5119, align 4, !tbaa !5
  %5121 = getelementptr inbounds i32, ptr %6, i64 %5117
  br label %5132

5122:                                             ; preds = %5096
  %5123 = icmp eq i32 %5099, %5102
  br i1 %5123, label %5124, label %5130

5124:                                             ; preds = %5122
  store i32 0, ptr %5098, align 4, !tbaa !5
  %5125 = getelementptr inbounds i32, ptr %8, i64 %5097
  %5126 = load i32, ptr %5125, align 4, !tbaa !5
  %5127 = getelementptr inbounds i32, ptr %6, i64 %5097
  store i32 %5126, ptr %5127, align 4, !tbaa !5
  %5128 = add nuw nsw i64 %5097, 1
  %5129 = icmp eq i64 %5128, %4857
  br i1 %5129, label %5137, label %5096, !llvm.loop !1472

5130:                                             ; preds = %5092, %5122
  %5131 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5132:                                             ; preds = %5105, %5114
  %5133 = phi ptr [ %5121, %5114 ], [ %5098, %5105 ]
  %5134 = phi i32 [ %5120, %5114 ], [ 1, %5105 ]
  %5135 = load i32, ptr %5133, align 4, !tbaa !5
  %5136 = add nsw i32 %5135, %5134
  store i32 %5136, ptr %5133, align 4, !tbaa !5
  br label %5137

5137:                                             ; preds = %5124, %5132, %5094, %5081
  %5138 = icmp eq i32 %5086, %5
  br i1 %5138, label %5437, label %5003, !llvm.loop !1473

5139:                                             ; preds = %4845
  %5140 = getelementptr inbounds i32, ptr %3, i64 %19
  %5141 = load i32, ptr %5140, align 4, !tbaa !5
  %5142 = icmp eq i32 %5141, 0
  %5143 = icmp sgt i32 %5, 0
  br i1 %5142, label %5153, label %5144

5144:                                             ; preds = %5139
  br i1 %5143, label %5145, label %5437

5145:                                             ; preds = %5144
  %5146 = icmp sgt i32 %13, 1
  %5147 = icmp sgt i32 %13, 0
  %5148 = add i32 %13, -2
  %5149 = zext i32 %5148 to i64
  %5150 = zext i32 %13 to i64
  %5151 = add nuw i32 %5, 1
  %5152 = icmp eq i32 %13, 1
  br label %5293

5153:                                             ; preds = %5139
  br i1 %5143, label %5154, label %5437

5154:                                             ; preds = %5153
  %5155 = icmp sgt i32 %13, 1
  %5156 = icmp sgt i32 %13, 0
  %5157 = add i32 %13, -2
  %5158 = zext i32 %5157 to i64
  %5159 = zext i32 %13 to i64
  %5160 = add nuw i32 %5, 1
  %5161 = icmp eq i32 %13, 1
  br label %5162

5162:                                             ; preds = %5154, %5291
  %5163 = phi double [ 0.000000e+00, %5154 ], [ %5241, %5291 ]
  %5164 = phi i32 [ 0, %5154 ], [ %5243, %5291 ]
  %5165 = phi double [ 0.000000e+00, %5154 ], [ %5242, %5291 ]
  %5166 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5155, label %5167, label %5236

5167:                                             ; preds = %5162, %5226
  %5168 = phi i32 [ %5235, %5226 ], [ 0, %5162 ]
  %5169 = phi i64 [ %5177, %5226 ], [ %5159, %5162 ]
  %5170 = phi i64 [ %5234, %5226 ], [ %5158, %5162 ]
  %5171 = phi i32 [ %5232, %5226 ], [ %5166, %5162 ]
  %5172 = sub i32 %5157, %5168
  %5173 = tail call i32 @llvm.smin.i32(i32 %5172, i32 0)
  %5174 = sub i32 %5172, %5173
  %5175 = zext i32 %5174 to i64
  %5176 = add nuw nsw i64 %5175, 1
  %5177 = add nsw i64 %5169, -1
  %5178 = icmp ult i32 %5174, 31
  br i1 %5178, label %5214, label %5179

5179:                                             ; preds = %5167
  %5180 = and i64 %5176, 8589934560
  %5181 = sub i64 %5170, %5180
  br label %5182

5182:                                             ; preds = %5182, %5179
  %5183 = phi i64 [ 0, %5179 ], [ %5206, %5182 ]
  %5184 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5202, %5182 ]
  %5185 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5203, %5182 ]
  %5186 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5204, %5182 ]
  %5187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5179 ], [ %5205, %5182 ]
  %5188 = sub i64 %5170, %5183
  %5189 = getelementptr inbounds i32, ptr %9, i64 %5188
  %5190 = getelementptr inbounds i32, ptr %5189, i64 -7
  %5191 = load <8 x i32>, ptr %5190, align 4, !tbaa !5
  %5192 = shufflevector <8 x i32> %5191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5193 = getelementptr inbounds i32, ptr %5189, i64 -15
  %5194 = load <8 x i32>, ptr %5193, align 4, !tbaa !5
  %5195 = shufflevector <8 x i32> %5194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5196 = getelementptr inbounds i32, ptr %5189, i64 -23
  %5197 = load <8 x i32>, ptr %5196, align 4, !tbaa !5
  %5198 = shufflevector <8 x i32> %5197, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5199 = getelementptr inbounds i32, ptr %5189, i64 -31
  %5200 = load <8 x i32>, ptr %5199, align 4, !tbaa !5
  %5201 = shufflevector <8 x i32> %5200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5202 = mul <8 x i32> %5192, %5184
  %5203 = mul <8 x i32> %5195, %5185
  %5204 = mul <8 x i32> %5198, %5186
  %5205 = mul <8 x i32> %5201, %5187
  %5206 = add nuw i64 %5183, 32
  %5207 = icmp eq i64 %5206, %5180
  br i1 %5207, label %5208, label %5182, !llvm.loop !1474

5208:                                             ; preds = %5182
  %5209 = mul <8 x i32> %5203, %5202
  %5210 = mul <8 x i32> %5204, %5209
  %5211 = mul <8 x i32> %5205, %5210
  %5212 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5211)
  %5213 = icmp eq i64 %5176, %5180
  br i1 %5213, label %5226, label %5214

5214:                                             ; preds = %5167, %5208
  %5215 = phi i64 [ %5170, %5167 ], [ %5181, %5208 ]
  %5216 = phi i32 [ 1, %5167 ], [ %5212, %5208 ]
  br label %5217

5217:                                             ; preds = %5214, %5217
  %5218 = phi i64 [ %5223, %5217 ], [ %5215, %5214 ]
  %5219 = phi i32 [ %5222, %5217 ], [ %5216, %5214 ]
  %5220 = getelementptr inbounds i32, ptr %9, i64 %5218
  %5221 = load i32, ptr %5220, align 4, !tbaa !5
  %5222 = mul nsw i32 %5221, %5219
  %5223 = add nsw i64 %5218, -1
  %5224 = trunc i64 %5218 to i32
  %5225 = icmp sgt i32 %5224, 0
  br i1 %5225, label %5217, label %5226, !llvm.loop !1475

5226:                                             ; preds = %5217, %5208
  %5227 = phi i32 [ %5212, %5208 ], [ %5222, %5217 ]
  %5228 = and i64 %5177, 4294967295
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5228
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = mul nsw i32 %5230, %5227
  %5232 = add nsw i32 %5231, %5171
  %5233 = icmp sgt i64 %5169, 2
  %5234 = add nsw i64 %5170, -1
  %5235 = add i32 %5168, 1
  br i1 %5233, label %5167, label %5236, !llvm.loop !1476

5236:                                             ; preds = %5226, %5162
  %5237 = phi i32 [ %5166, %5162 ], [ %5232, %5226 ]
  %5238 = sext i32 %5237 to i64
  %5239 = getelementptr inbounds double, ptr %4839, i64 %5238
  %5240 = load double, ptr %5239, align 8, !tbaa !18
  %5241 = fadd fast double %5163, %5240
  store double %5241, ptr %4841, align 8, !tbaa !18
  %5242 = fadd fast double %5165, 1.000000e+00
  %5243 = add nuw nsw i32 %5164, 1
  br i1 %5156, label %5244, label %5291

5244:                                             ; preds = %5236
  %5245 = load i32, ptr %4, align 4, !tbaa !5
  %5246 = load i32, ptr %12, align 4, !tbaa !5
  %5247 = add nsw i32 %5246, -1
  %5248 = icmp slt i32 %5245, %5247
  br i1 %5248, label %5268, label %5249

5249:                                             ; preds = %5244
  %5250 = icmp eq i32 %5245, %5247
  br i1 %5250, label %5251, label %5284

5251:                                             ; preds = %5249
  store i32 0, ptr %4, align 4, !tbaa !5
  %5252 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5252, ptr %6, align 4, !tbaa !5
  br i1 %5161, label %5291, label %5253

5253:                                             ; preds = %5251, %5278
  %5254 = phi i64 [ %5282, %5278 ], [ 1, %5251 ]
  %5255 = getelementptr inbounds i32, ptr %4, i64 %5254
  %5256 = load i32, ptr %5255, align 4, !tbaa !5
  %5257 = getelementptr inbounds i32, ptr %12, i64 %5254
  %5258 = load i32, ptr %5257, align 4, !tbaa !5
  %5259 = add nsw i32 %5258, -1
  %5260 = icmp slt i32 %5256, %5259
  br i1 %5260, label %5261, label %5276

5261:                                             ; preds = %5253
  br i1 %5248, label %5268, label %5262

5262:                                             ; preds = %5261
  %5263 = getelementptr inbounds i32, ptr %7, i64 %5254
  %5264 = load i32, ptr %5263, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %6, i64 %5254
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = add nsw i32 %5266, %5264
  store i32 %5267, ptr %5265, align 4, !tbaa !5
  br label %5286

5268:                                             ; preds = %5244, %5261
  %5269 = phi i32 [ %5256, %5261 ], [ %5245, %5244 ]
  %5270 = phi ptr [ %5255, %5261 ], [ %4, %5244 ]
  %5271 = phi i64 [ %5254, %5261 ], [ 0, %5244 ]
  %5272 = add nsw i32 %5269, 1
  store i32 %5272, ptr %5270, align 4, !tbaa !5
  %5273 = getelementptr inbounds i32, ptr %7, i64 %5271
  %5274 = load i32, ptr %5273, align 4, !tbaa !5
  %5275 = getelementptr inbounds i32, ptr %6, i64 %5271
  br label %5286

5276:                                             ; preds = %5253
  %5277 = icmp eq i32 %5256, %5259
  br i1 %5277, label %5278, label %5284

5278:                                             ; preds = %5276
  store i32 0, ptr %5255, align 4, !tbaa !5
  %5279 = getelementptr inbounds i32, ptr %8, i64 %5254
  %5280 = load i32, ptr %5279, align 4, !tbaa !5
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5254
  store i32 %5280, ptr %5281, align 4, !tbaa !5
  %5282 = add nuw nsw i64 %5254, 1
  %5283 = icmp eq i64 %5282, %5159
  br i1 %5283, label %5291, label %5253, !llvm.loop !1477

5284:                                             ; preds = %5249, %5276
  %5285 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5286:                                             ; preds = %5262, %5268
  %5287 = phi ptr [ %5275, %5268 ], [ %5255, %5262 ]
  %5288 = phi i32 [ %5274, %5268 ], [ 1, %5262 ]
  %5289 = load i32, ptr %5287, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, %5288
  store i32 %5290, ptr %5287, align 4, !tbaa !5
  br label %5291

5291:                                             ; preds = %5278, %5286, %5251, %5236
  %5292 = icmp eq i32 %5243, %5
  br i1 %5292, label %5437, label %5162, !llvm.loop !1478

5293:                                             ; preds = %5145, %5427
  %5294 = phi double [ 0.000000e+00, %5145 ], [ %5375, %5427 ]
  %5295 = phi i32 [ 0, %5145 ], [ %5376, %5427 ]
  %5296 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5146, label %5297, label %5366

5297:                                             ; preds = %5293, %5356
  %5298 = phi i32 [ %5365, %5356 ], [ 0, %5293 ]
  %5299 = phi i64 [ %5307, %5356 ], [ %5150, %5293 ]
  %5300 = phi i64 [ %5364, %5356 ], [ %5149, %5293 ]
  %5301 = phi i32 [ %5362, %5356 ], [ %5296, %5293 ]
  %5302 = sub i32 %5148, %5298
  %5303 = tail call i32 @llvm.smin.i32(i32 %5302, i32 0)
  %5304 = sub i32 %5302, %5303
  %5305 = zext i32 %5304 to i64
  %5306 = add nuw nsw i64 %5305, 1
  %5307 = add nsw i64 %5299, -1
  %5308 = icmp ult i32 %5304, 31
  br i1 %5308, label %5344, label %5309

5309:                                             ; preds = %5297
  %5310 = and i64 %5306, 8589934560
  %5311 = sub i64 %5300, %5310
  br label %5312

5312:                                             ; preds = %5312, %5309
  %5313 = phi i64 [ 0, %5309 ], [ %5336, %5312 ]
  %5314 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5332, %5312 ]
  %5315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5333, %5312 ]
  %5316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5334, %5312 ]
  %5317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5309 ], [ %5335, %5312 ]
  %5318 = sub i64 %5300, %5313
  %5319 = getelementptr inbounds i32, ptr %11, i64 %5318
  %5320 = getelementptr inbounds i32, ptr %5319, i64 -7
  %5321 = load <8 x i32>, ptr %5320, align 4, !tbaa !5
  %5322 = shufflevector <8 x i32> %5321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5323 = getelementptr inbounds i32, ptr %5319, i64 -15
  %5324 = load <8 x i32>, ptr %5323, align 4, !tbaa !5
  %5325 = shufflevector <8 x i32> %5324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5326 = getelementptr inbounds i32, ptr %5319, i64 -23
  %5327 = load <8 x i32>, ptr %5326, align 4, !tbaa !5
  %5328 = shufflevector <8 x i32> %5327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5329 = getelementptr inbounds i32, ptr %5319, i64 -31
  %5330 = load <8 x i32>, ptr %5329, align 4, !tbaa !5
  %5331 = shufflevector <8 x i32> %5330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5332 = mul <8 x i32> %5322, %5314
  %5333 = mul <8 x i32> %5325, %5315
  %5334 = mul <8 x i32> %5328, %5316
  %5335 = mul <8 x i32> %5331, %5317
  %5336 = add nuw i64 %5313, 32
  %5337 = icmp eq i64 %5336, %5310
  br i1 %5337, label %5338, label %5312, !llvm.loop !1479

5338:                                             ; preds = %5312
  %5339 = mul <8 x i32> %5333, %5332
  %5340 = mul <8 x i32> %5334, %5339
  %5341 = mul <8 x i32> %5335, %5340
  %5342 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5341)
  %5343 = icmp eq i64 %5306, %5310
  br i1 %5343, label %5356, label %5344

5344:                                             ; preds = %5297, %5338
  %5345 = phi i64 [ %5300, %5297 ], [ %5311, %5338 ]
  %5346 = phi i32 [ 1, %5297 ], [ %5342, %5338 ]
  br label %5347

5347:                                             ; preds = %5344, %5347
  %5348 = phi i64 [ %5353, %5347 ], [ %5345, %5344 ]
  %5349 = phi i32 [ %5352, %5347 ], [ %5346, %5344 ]
  %5350 = getelementptr inbounds i32, ptr %11, i64 %5348
  %5351 = load i32, ptr %5350, align 4, !tbaa !5
  %5352 = mul nsw i32 %5351, %5349
  %5353 = add nsw i64 %5348, -1
  %5354 = trunc i64 %5348 to i32
  %5355 = icmp sgt i32 %5354, 0
  br i1 %5355, label %5347, label %5356, !llvm.loop !1480

5356:                                             ; preds = %5347, %5338
  %5357 = phi i32 [ %5342, %5338 ], [ %5352, %5347 ]
  %5358 = and i64 %5307, 4294967295
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5358
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = mul nsw i32 %5360, %5357
  %5362 = add nsw i32 %5361, %5301
  %5363 = icmp sgt i64 %5299, 2
  %5364 = add nsw i64 %5300, -1
  %5365 = add i32 %5298, 1
  br i1 %5363, label %5297, label %5366, !llvm.loop !1481

5366:                                             ; preds = %5356, %5293
  %5367 = phi i32 [ %5296, %5293 ], [ %5362, %5356 ]
  %5368 = icmp slt i32 %5367, %5
  br i1 %5368, label %5371, label %5369

5369:                                             ; preds = %5366
  %5370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5442

5371:                                             ; preds = %5366
  %5372 = sext i32 %5367 to i64
  %5373 = getelementptr inbounds double, ptr %4839, i64 %5372
  %5374 = load double, ptr %5373, align 8, !tbaa !18
  %5375 = fadd fast double %5294, %5374
  store double %5375, ptr %4841, align 8, !tbaa !18
  %5376 = add nuw nsw i32 %5295, 1
  br i1 %5147, label %5377, label %5427

5377:                                             ; preds = %5371
  %5378 = load i32, ptr %4, align 4, !tbaa !5
  %5379 = load i32, ptr %12, align 4, !tbaa !5
  %5380 = add nsw i32 %5379, -1
  %5381 = icmp slt i32 %5378, %5380
  br i1 %5381, label %5404, label %5382

5382:                                             ; preds = %5377
  %5383 = icmp eq i32 %5378, %5380
  br i1 %5383, label %5384, label %5420

5384:                                             ; preds = %5382
  store i32 0, ptr %4, align 4, !tbaa !5
  %5385 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5385, ptr %6, align 4, !tbaa !5
  br i1 %5152, label %5427, label %5386

5386:                                             ; preds = %5384, %5414
  %5387 = phi i64 [ %5418, %5414 ], [ 1, %5384 ]
  %5388 = getelementptr inbounds i32, ptr %4, i64 %5387
  %5389 = load i32, ptr %5388, align 4, !tbaa !5
  %5390 = getelementptr inbounds i32, ptr %12, i64 %5387
  %5391 = load i32, ptr %5390, align 4, !tbaa !5
  %5392 = add nsw i32 %5391, -1
  %5393 = icmp slt i32 %5389, %5392
  br i1 %5393, label %5394, label %5412

5394:                                             ; preds = %5386
  br i1 %5381, label %5404, label %5395

5395:                                             ; preds = %5394
  %5396 = shl i64 %5387, 32
  %5397 = add i64 %5396, -4294967296
  %5398 = ashr exact i64 %5397, 32
  %5399 = getelementptr inbounds i32, ptr %7, i64 %5398
  %5400 = load i32, ptr %5399, align 4, !tbaa !5
  %5401 = getelementptr inbounds i32, ptr %6, i64 %5387
  %5402 = load i32, ptr %5401, align 4, !tbaa !5
  %5403 = add nsw i32 %5402, %5400
  store i32 %5403, ptr %5401, align 4, !tbaa !5
  br label %5422

5404:                                             ; preds = %5377, %5394
  %5405 = phi i32 [ %5389, %5394 ], [ %5378, %5377 ]
  %5406 = phi ptr [ %5388, %5394 ], [ %4, %5377 ]
  %5407 = phi i64 [ %5387, %5394 ], [ 0, %5377 ]
  %5408 = add nsw i32 %5405, 1
  store i32 %5408, ptr %5406, align 4, !tbaa !5
  %5409 = getelementptr inbounds i32, ptr %7, i64 %5407
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = getelementptr inbounds i32, ptr %6, i64 %5407
  br label %5422

5412:                                             ; preds = %5386
  %5413 = icmp eq i32 %5389, %5392
  br i1 %5413, label %5414, label %5420

5414:                                             ; preds = %5412
  store i32 0, ptr %5388, align 4, !tbaa !5
  %5415 = getelementptr inbounds i32, ptr %8, i64 %5387
  %5416 = load i32, ptr %5415, align 4, !tbaa !5
  %5417 = getelementptr inbounds i32, ptr %6, i64 %5387
  store i32 %5416, ptr %5417, align 4, !tbaa !5
  %5418 = add nuw nsw i64 %5387, 1
  %5419 = icmp eq i64 %5418, %5150
  br i1 %5419, label %5427, label %5386, !llvm.loop !1482

5420:                                             ; preds = %5382, %5412
  %5421 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5442

5422:                                             ; preds = %5395, %5404
  %5423 = phi ptr [ %5411, %5404 ], [ %5388, %5395 ]
  %5424 = phi i32 [ %5410, %5404 ], [ 1, %5395 ]
  %5425 = load i32, ptr %5423, align 4, !tbaa !5
  %5426 = add nsw i32 %5425, %5424
  store i32 %5426, ptr %5423, align 4, !tbaa !5
  br label %5427

5427:                                             ; preds = %5414, %5422, %5384, %5371
  %5428 = icmp eq i32 %5376, %5
  br i1 %5428, label %5437, label %5293, !llvm.loop !1483

5429:                                             ; preds = %4845
  %5430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5437

5431:                                             ; preds = %1997
  store i16 %1947, ptr %1832, align 2, !tbaa !78
  br label %5437

5432:                                             ; preds = %2293
  store i16 %2243, ptr %1832, align 2, !tbaa !78
  br label %5437

5433:                                             ; preds = %3205
  store i64 %3155, ptr %3040, align 8, !tbaa !120
  br label %5437

5434:                                             ; preds = %3500
  store i64 %3450, ptr %3040, align 8, !tbaa !120
  br label %5437

5435:                                             ; preds = %4404
  store float %4354, ptr %4239, align 4, !tbaa !162
  br label %5437

5436:                                             ; preds = %4696
  store float %4646, ptr %4239, align 4, !tbaa !162
  br label %5437

5437:                                             ; preds = %5427, %5291, %5137, %5001, %4833, %4541, %4231, %4095, %3941, %3805, %3637, %3345, %3032, %2895, %2740, %2603, %2430, %2138, %1824, %1687, %1532, %1395, %1222, %1085, %930, %793, %620, %483, %328, %191, %5144, %5153, %4851, %4860, %4548, %4557, %5436, %4250, %4259, %5435, %3948, %3957, %3655, %3664, %3352, %3361, %5434, %3051, %3060, %5433, %2747, %2756, %2449, %2458, %2145, %2154, %5432, %1843, %1852, %5431, %1539, %1548, %1241, %1250, %937, %946, %639, %648, %335, %344, %37, %46, %4843, %5429, %4241, %4835, %3647, %4233, %3042, %3639, %2440, %3034, %1834, %2432, %1232, %1826, %630, %1224, %28, %622, %18
  %5438 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1224 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1826 ], [ 0.000000e+00, %1232 ], [ 0.000000e+00, %2432 ], [ 0.000000e+00, %1834 ], [ 0.000000e+00, %3034 ], [ 0.000000e+00, %2440 ], [ 0.000000e+00, %3639 ], [ 0.000000e+00, %3042 ], [ 0.000000e+00, %4233 ], [ 0.000000e+00, %3647 ], [ 0.000000e+00, %4835 ], [ 0.000000e+00, %4241 ], [ 0.000000e+00, %5429 ], [ 0.000000e+00, %4843 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %937 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %1548 ], [ 0.000000e+00, %1539 ], [ %1948, %5431 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %1843 ], [ %2244, %5432 ], [ 0.000000e+00, %2154 ], [ 0.000000e+00, %2145 ], [ 0.000000e+00, %2458 ], [ 0.000000e+00, %2449 ], [ 0.000000e+00, %2756 ], [ 0.000000e+00, %2747 ], [ %3156, %5433 ], [ 0.000000e+00, %3060 ], [ 0.000000e+00, %3051 ], [ %3451, %5434 ], [ 0.000000e+00, %3361 ], [ 0.000000e+00, %3352 ], [ 0.000000e+00, %3664 ], [ 0.000000e+00, %3655 ], [ 0.000000e+00, %3957 ], [ 0.000000e+00, %3948 ], [ %4355, %5435 ], [ 0.000000e+00, %4259 ], [ 0.000000e+00, %4250 ], [ %4647, %5436 ], [ 0.000000e+00, %4557 ], [ 0.000000e+00, %4548 ], [ 0.000000e+00, %4860 ], [ 0.000000e+00, %4851 ], [ 0.000000e+00, %5153 ], [ 0.000000e+00, %5144 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %744, %793 ], [ 0.000000e+00, %930 ], [ %1036, %1085 ], [ 0.000000e+00, %1222 ], [ %1346, %1395 ], [ 0.000000e+00, %1532 ], [ %1638, %1687 ], [ 0.000000e+00, %1824 ], [ 0.000000e+00, %2138 ], [ 0.000000e+00, %2430 ], [ %2554, %2603 ], [ 0.000000e+00, %2740 ], [ %2846, %2895 ], [ 0.000000e+00, %3032 ], [ 0.000000e+00, %3345 ], [ 0.000000e+00, %3637 ], [ %3756, %3805 ], [ 0.000000e+00, %3941 ], [ %4046, %4095 ], [ 0.000000e+00, %4231 ], [ 0.000000e+00, %4541 ], [ 0.000000e+00, %4833 ], [ %4952, %5001 ], [ 0.000000e+00, %5137 ], [ %5242, %5291 ], [ 0.000000e+00, %5427 ]
  %5439 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1224 ], [ 1, %630 ], [ 1, %1826 ], [ 1, %1232 ], [ 1, %2432 ], [ 1, %1834 ], [ 1, %3034 ], [ 1, %2440 ], [ 1, %3639 ], [ 1, %3042 ], [ 1, %4233 ], [ 1, %3647 ], [ 1, %4835 ], [ 1, %4241 ], [ 1, %5429 ], [ 1, %4843 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %648 ], [ 1, %639 ], [ 1, %946 ], [ 1, %937 ], [ 1, %1250 ], [ 1, %1241 ], [ 1, %1548 ], [ 1, %1539 ], [ %1859, %5431 ], [ 1, %1852 ], [ 1, %1843 ], [ %2161, %5432 ], [ 1, %2154 ], [ 1, %2145 ], [ 1, %2458 ], [ 1, %2449 ], [ 1, %2756 ], [ 1, %2747 ], [ %3067, %5433 ], [ 1, %3060 ], [ 1, %3051 ], [ %3368, %5434 ], [ 1, %3361 ], [ 1, %3352 ], [ 1, %3664 ], [ 1, %3655 ], [ 1, %3957 ], [ 1, %3948 ], [ %4266, %5435 ], [ 1, %4259 ], [ 1, %4250 ], [ %4564, %5436 ], [ 1, %4557 ], [ 1, %4548 ], [ 1, %4860 ], [ 1, %4851 ], [ 1, %5153 ], [ 1, %5144 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %655, %793 ], [ %646, %930 ], [ %953, %1085 ], [ %944, %1222 ], [ %1257, %1395 ], [ %1248, %1532 ], [ %1555, %1687 ], [ %1546, %1824 ], [ %1850, %2138 ], [ %2152, %2430 ], [ %2465, %2603 ], [ %2456, %2740 ], [ %2763, %2895 ], [ %2754, %3032 ], [ %3058, %3345 ], [ %3359, %3637 ], [ %3671, %3805 ], [ %3662, %3941 ], [ %3964, %4095 ], [ %3955, %4231 ], [ %4257, %4541 ], [ %4555, %4833 ], [ %4867, %5001 ], [ %4858, %5137 ], [ %5160, %5291 ], [ %5151, %5427 ]
  %5440 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5439, ptr noundef nonnull @.str.5) #3
  %5441 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5438, ptr noundef nonnull @.str.6) #3
  br label %5442

5442:                                             ; preds = %4994, %5079, %5130, %5284, %5369, %5420, %4397, %4482, %4534, %4689, %4774, %4826, %3798, %3883, %3934, %4088, %4173, %4224, %3198, %3283, %3338, %3493, %3578, %3630, %2596, %2680, %2733, %2888, %2972, %3025, %1990, %2075, %2131, %2286, %2371, %2423, %1388, %1472, %1525, %1680, %1764, %1817, %786, %870, %923, %1078, %1162, %1215, %184, %268, %321, %476, %560, %613, %5437
  %5443 = phi i32 [ 0, %5437 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1215 ], [ -1, %1162 ], [ -1, %1078 ], [ -1, %923 ], [ -1, %870 ], [ -1, %786 ], [ -1, %1817 ], [ -1, %1764 ], [ -1, %1680 ], [ -1, %1525 ], [ -1, %1472 ], [ -1, %1388 ], [ -1, %2423 ], [ -1, %2371 ], [ -1, %2286 ], [ -1, %2131 ], [ -1, %2075 ], [ -1, %1990 ], [ -1, %3025 ], [ -1, %2972 ], [ -1, %2888 ], [ -1, %2733 ], [ -1, %2680 ], [ -1, %2596 ], [ -1, %3630 ], [ -1, %3578 ], [ -1, %3493 ], [ -1, %3338 ], [ -1, %3283 ], [ -1, %3198 ], [ -1, %4224 ], [ -1, %4173 ], [ -1, %4088 ], [ -1, %3934 ], [ -1, %3883 ], [ -1, %3798 ], [ -1, %4826 ], [ -1, %4774 ], [ -1, %4689 ], [ -1, %4534 ], [ -1, %4482 ], [ -1, %4397 ], [ -1, %5420 ], [ -1, %5369 ], [ -1, %5284 ], [ -1, %5130 ], [ -1, %5079 ], [ -1, %4994 ]
  ret i32 %5443
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
