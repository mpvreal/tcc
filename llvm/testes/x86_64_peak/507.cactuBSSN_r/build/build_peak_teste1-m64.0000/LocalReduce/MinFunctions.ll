; ModuleID = 'LocalReduce/MinFunctions.c'
source_filename = "LocalReduce/MinFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"LocalReduce/MinFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5542 [
    i32 101, label %22
    i32 102, label %628
    i32 103, label %1240
    i32 104, label %1846
    i32 105, label %2466
    i32 106, label %3078
    i32 107, label %3694
    i32 108, label %4310
    i32 109, label %4926
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %27, ptr %26, align 1, !tbaa !11
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load i8, ptr %24, align 1, !tbaa !11
  %31 = icmp ugt i8 %27, %30
  br i1 %31, label %32, label %5542

32:                                               ; preds = %29
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5542

33:                                               ; preds = %22
  switch i32 %1, label %626 [
    i32 1, label %34
    i32 0, label %332
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !5
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5542

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %194

48:                                               ; preds = %34
  br i1 %38, label %49, label %5542

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %192
  %58 = phi i32 [ 0, %49 ], [ %144, %192 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %143, %192 ]
  %60 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !5
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !12

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !5
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !16

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !5
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !17

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = getelementptr inbounds i8, ptr %24, i64 %132
  %136 = load i8, ptr %135, align 1, !tbaa !11
  %137 = fcmp fast ueq double %134, 0.000000e+00
  br i1 %137, label %142, label %138

138:                                              ; preds = %130
  %139 = load i8, ptr %26, align 1, !tbaa !11
  %140 = icmp ugt i8 %139, %136
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  store i8 %136, ptr %26, align 1, !tbaa !11
  br label %142

142:                                              ; preds = %138, %141, %130
  %143 = fadd fast double %134, %59
  %144 = add nuw nsw i32 %58, 1
  br i1 %51, label %145, label %192

145:                                              ; preds = %142
  %146 = load i32, ptr %4, align 4, !tbaa !5
  %147 = load i32, ptr %12, align 4, !tbaa !5
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !5
  %153 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %153, ptr %6, align 4, !tbaa !5
  br i1 %56, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !5
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !5
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %54
  br i1 %184, label %192, label %154, !llvm.loop !20

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !5
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !5
  br label %192

192:                                              ; preds = %179, %187, %152, %142
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5542, label %57, !llvm.loop !22

194:                                              ; preds = %40, %330
  %195 = phi i32 [ 0, %40 ], [ %279, %330 ]
  %196 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %41, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %45, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %44, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %43, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !5
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !23

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !5
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !24

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !5
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !25

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

271:                                              ; preds = %266
  %272 = sext i32 %267 to i64
  %273 = getelementptr inbounds i8, ptr %24, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !11
  %275 = load i8, ptr %26, align 1, !tbaa !11
  %276 = icmp ugt i8 %275, %274
  br i1 %276, label %277, label %278

277:                                              ; preds = %271
  store i8 %274, ptr %26, align 1, !tbaa !11
  br label %278

278:                                              ; preds = %271, %277
  %279 = add nuw nsw i32 %195, 1
  br i1 %42, label %280, label %330

280:                                              ; preds = %278
  %281 = load i32, ptr %4, align 4, !tbaa !5
  %282 = load i32, ptr %12, align 4, !tbaa !5
  %283 = add nsw i32 %282, -1
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %307, label %285

285:                                              ; preds = %280
  %286 = icmp eq i32 %281, %283
  br i1 %286, label %287, label %323

287:                                              ; preds = %285
  store i32 0, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %288, ptr %6, align 4, !tbaa !5
  br i1 %47, label %330, label %289

289:                                              ; preds = %287, %317
  %290 = phi i64 [ %321, %317 ], [ 1, %287 ]
  %291 = getelementptr inbounds i32, ptr %4, i64 %290
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = getelementptr inbounds i32, ptr %12, i64 %290
  %294 = load i32, ptr %293, align 4, !tbaa !5
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %292, %295
  br i1 %296, label %297, label %315

297:                                              ; preds = %289
  br i1 %284, label %307, label %298

298:                                              ; preds = %297
  %299 = shl i64 %290, 32
  %300 = add i64 %299, -4294967296
  %301 = ashr exact i64 %300, 32
  %302 = getelementptr inbounds i32, ptr %7, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = getelementptr inbounds i32, ptr %6, i64 %290
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = add nsw i32 %305, %303
  store i32 %306, ptr %304, align 4, !tbaa !5
  br label %325

307:                                              ; preds = %280, %297
  %308 = phi i32 [ %292, %297 ], [ %281, %280 ]
  %309 = phi ptr [ %291, %297 ], [ %4, %280 ]
  %310 = phi i64 [ %290, %297 ], [ 0, %280 ]
  %311 = add nsw i32 %308, 1
  store i32 %311, ptr %309, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %7, i64 %310
  %313 = load i32, ptr %312, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %6, i64 %310
  br label %325

315:                                              ; preds = %289
  %316 = icmp eq i32 %292, %295
  br i1 %316, label %317, label %323

317:                                              ; preds = %315
  store i32 0, ptr %291, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %8, i64 %290
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %290
  store i32 %319, ptr %320, align 4, !tbaa !5
  %321 = add nuw nsw i64 %290, 1
  %322 = icmp eq i64 %321, %45
  br i1 %322, label %330, label %289, !llvm.loop !26

323:                                              ; preds = %285, %315
  %324 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

325:                                              ; preds = %298, %307
  %326 = phi ptr [ %314, %307 ], [ %291, %298 ]
  %327 = phi i32 [ %313, %307 ], [ 1, %298 ]
  %328 = load i32, ptr %326, align 4, !tbaa !5
  %329 = add nsw i32 %328, %327
  store i32 %329, ptr %326, align 4, !tbaa !5
  br label %330

330:                                              ; preds = %317, %325, %287, %278
  %331 = icmp eq i32 %279, %5
  br i1 %331, label %5542, label %194, !llvm.loop !27

332:                                              ; preds = %33
  %333 = getelementptr inbounds i32, ptr %3, i64 %19
  %334 = load i32, ptr %333, align 4, !tbaa !5
  %335 = icmp eq i32 %334, 0
  %336 = icmp sgt i32 %5, 0
  br i1 %335, label %346, label %337

337:                                              ; preds = %332
  br i1 %336, label %338, label %5542

338:                                              ; preds = %337
  %339 = icmp sgt i32 %13, 1
  %340 = icmp sgt i32 %13, 0
  %341 = add i32 %13, -2
  %342 = zext i32 %341 to i64
  %343 = zext i32 %13 to i64
  %344 = add nuw i32 %5, 1
  %345 = icmp eq i32 %13, 1
  br label %488

346:                                              ; preds = %332
  br i1 %336, label %347, label %5542

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %355

355:                                              ; preds = %347, %486
  %356 = phi i32 [ 0, %347 ], [ %438, %486 ]
  %357 = phi double [ 0.000000e+00, %347 ], [ %437, %486 ]
  %358 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %348, label %359, label %428

359:                                              ; preds = %355, %418
  %360 = phi i32 [ %427, %418 ], [ 0, %355 ]
  %361 = phi i64 [ %369, %418 ], [ %352, %355 ]
  %362 = phi i64 [ %426, %418 ], [ %351, %355 ]
  %363 = phi i32 [ %424, %418 ], [ %358, %355 ]
  %364 = sub i32 %350, %360
  %365 = tail call i32 @llvm.smin.i32(i32 %364, i32 0)
  %366 = sub i32 %364, %365
  %367 = zext i32 %366 to i64
  %368 = add nuw nsw i64 %367, 1
  %369 = add nsw i64 %361, -1
  %370 = icmp ult i32 %366, 31
  br i1 %370, label %406, label %371

371:                                              ; preds = %359
  %372 = and i64 %368, 8589934560
  %373 = sub i64 %362, %372
  br label %374

374:                                              ; preds = %374, %371
  %375 = phi i64 [ 0, %371 ], [ %398, %374 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %394, %374 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %395, %374 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %396, %374 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %397, %374 ]
  %380 = sub i64 %362, %375
  %381 = getelementptr inbounds i32, ptr %9, i64 %380
  %382 = getelementptr inbounds i32, ptr %381, i64 -7
  %383 = load <8 x i32>, ptr %382, align 4, !tbaa !5
  %384 = shufflevector <8 x i32> %383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %385 = getelementptr inbounds i32, ptr %381, i64 -15
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !5
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %381, i64 -23
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %381, i64 -31
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = mul <8 x i32> %384, %376
  %395 = mul <8 x i32> %387, %377
  %396 = mul <8 x i32> %390, %378
  %397 = mul <8 x i32> %393, %379
  %398 = add nuw i64 %375, 32
  %399 = icmp eq i64 %398, %372
  br i1 %399, label %400, label %374, !llvm.loop !28

400:                                              ; preds = %374
  %401 = mul <8 x i32> %395, %394
  %402 = mul <8 x i32> %396, %401
  %403 = mul <8 x i32> %397, %402
  %404 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %403)
  %405 = icmp eq i64 %368, %372
  br i1 %405, label %418, label %406

406:                                              ; preds = %359, %400
  %407 = phi i64 [ %362, %359 ], [ %373, %400 ]
  %408 = phi i32 [ 1, %359 ], [ %404, %400 ]
  br label %409

409:                                              ; preds = %406, %409
  %410 = phi i64 [ %415, %409 ], [ %407, %406 ]
  %411 = phi i32 [ %414, %409 ], [ %408, %406 ]
  %412 = getelementptr inbounds i32, ptr %9, i64 %410
  %413 = load i32, ptr %412, align 4, !tbaa !5
  %414 = mul nsw i32 %413, %411
  %415 = add nsw i64 %410, -1
  %416 = trunc i64 %410 to i32
  %417 = icmp sgt i32 %416, 0
  br i1 %417, label %409, label %418, !llvm.loop !29

418:                                              ; preds = %409, %400
  %419 = phi i32 [ %404, %400 ], [ %414, %409 ]
  %420 = and i64 %369, 4294967295
  %421 = getelementptr inbounds i32, ptr %6, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !5
  %423 = mul nsw i32 %422, %419
  %424 = add nsw i32 %423, %363
  %425 = icmp sgt i64 %361, 2
  %426 = add nsw i64 %362, -1
  %427 = add i32 %360, 1
  br i1 %425, label %359, label %428, !llvm.loop !30

428:                                              ; preds = %418, %355
  %429 = phi i32 [ %358, %355 ], [ %424, %418 ]
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, ptr %24, i64 %430
  %432 = load i8, ptr %431, align 1, !tbaa !11
  %433 = load i8, ptr %26, align 1, !tbaa !11
  %434 = icmp ugt i8 %433, %432
  br i1 %434, label %435, label %436

435:                                              ; preds = %428
  store i8 %432, ptr %26, align 1, !tbaa !11
  br label %436

436:                                              ; preds = %435, %428
  %437 = fadd fast double %357, 1.000000e+00
  %438 = add nuw nsw i32 %356, 1
  br i1 %349, label %439, label %486

439:                                              ; preds = %436
  %440 = load i32, ptr %4, align 4, !tbaa !5
  %441 = load i32, ptr %12, align 4, !tbaa !5
  %442 = add nsw i32 %441, -1
  %443 = icmp slt i32 %440, %442
  br i1 %443, label %463, label %444

444:                                              ; preds = %439
  %445 = icmp eq i32 %440, %442
  br i1 %445, label %446, label %479

446:                                              ; preds = %444
  store i32 0, ptr %4, align 4, !tbaa !5
  %447 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %447, ptr %6, align 4, !tbaa !5
  br i1 %354, label %486, label %448

448:                                              ; preds = %446, %473
  %449 = phi i64 [ %477, %473 ], [ 1, %446 ]
  %450 = getelementptr inbounds i32, ptr %4, i64 %449
  %451 = load i32, ptr %450, align 4, !tbaa !5
  %452 = getelementptr inbounds i32, ptr %12, i64 %449
  %453 = load i32, ptr %452, align 4, !tbaa !5
  %454 = add nsw i32 %453, -1
  %455 = icmp slt i32 %451, %454
  br i1 %455, label %456, label %471

456:                                              ; preds = %448
  br i1 %443, label %463, label %457

457:                                              ; preds = %456
  %458 = getelementptr inbounds i32, ptr %7, i64 %449
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = getelementptr inbounds i32, ptr %6, i64 %449
  %461 = load i32, ptr %460, align 4, !tbaa !5
  %462 = add nsw i32 %461, %459
  store i32 %462, ptr %460, align 4, !tbaa !5
  br label %481

463:                                              ; preds = %439, %456
  %464 = phi i32 [ %451, %456 ], [ %440, %439 ]
  %465 = phi ptr [ %450, %456 ], [ %4, %439 ]
  %466 = phi i64 [ %449, %456 ], [ 0, %439 ]
  %467 = add nsw i32 %464, 1
  store i32 %467, ptr %465, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %7, i64 %466
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %466
  br label %481

471:                                              ; preds = %448
  %472 = icmp eq i32 %451, %454
  br i1 %472, label %473, label %479

473:                                              ; preds = %471
  store i32 0, ptr %450, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %8, i64 %449
  %475 = load i32, ptr %474, align 4, !tbaa !5
  %476 = getelementptr inbounds i32, ptr %6, i64 %449
  store i32 %475, ptr %476, align 4, !tbaa !5
  %477 = add nuw nsw i64 %449, 1
  %478 = icmp eq i64 %477, %352
  br i1 %478, label %486, label %448, !llvm.loop !31

479:                                              ; preds = %444, %471
  %480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

481:                                              ; preds = %457, %463
  %482 = phi ptr [ %470, %463 ], [ %450, %457 ]
  %483 = phi i32 [ %469, %463 ], [ 1, %457 ]
  %484 = load i32, ptr %482, align 4, !tbaa !5
  %485 = add nsw i32 %484, %483
  store i32 %485, ptr %482, align 4, !tbaa !5
  br label %486

486:                                              ; preds = %473, %481, %446, %436
  %487 = icmp eq i32 %438, %5
  br i1 %487, label %5542, label %355, !llvm.loop !32

488:                                              ; preds = %338, %624
  %489 = phi i32 [ 0, %338 ], [ %573, %624 ]
  %490 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %339, label %491, label %560

491:                                              ; preds = %488, %550
  %492 = phi i32 [ %559, %550 ], [ 0, %488 ]
  %493 = phi i64 [ %501, %550 ], [ %343, %488 ]
  %494 = phi i64 [ %558, %550 ], [ %342, %488 ]
  %495 = phi i32 [ %556, %550 ], [ %490, %488 ]
  %496 = sub i32 %341, %492
  %497 = tail call i32 @llvm.smin.i32(i32 %496, i32 0)
  %498 = sub i32 %496, %497
  %499 = zext i32 %498 to i64
  %500 = add nuw nsw i64 %499, 1
  %501 = add nsw i64 %493, -1
  %502 = icmp ult i32 %498, 31
  br i1 %502, label %538, label %503

503:                                              ; preds = %491
  %504 = and i64 %500, 8589934560
  %505 = sub i64 %494, %504
  br label %506

506:                                              ; preds = %506, %503
  %507 = phi i64 [ 0, %503 ], [ %530, %506 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %526, %506 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %527, %506 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %528, %506 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %529, %506 ]
  %512 = sub i64 %494, %507
  %513 = getelementptr inbounds i32, ptr %11, i64 %512
  %514 = getelementptr inbounds i32, ptr %513, i64 -7
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %513, i64 -15
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %513, i64 -23
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %513, i64 -31
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !5
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = mul <8 x i32> %516, %508
  %527 = mul <8 x i32> %519, %509
  %528 = mul <8 x i32> %522, %510
  %529 = mul <8 x i32> %525, %511
  %530 = add nuw i64 %507, 32
  %531 = icmp eq i64 %530, %504
  br i1 %531, label %532, label %506, !llvm.loop !33

532:                                              ; preds = %506
  %533 = mul <8 x i32> %527, %526
  %534 = mul <8 x i32> %528, %533
  %535 = mul <8 x i32> %529, %534
  %536 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %535)
  %537 = icmp eq i64 %500, %504
  br i1 %537, label %550, label %538

538:                                              ; preds = %491, %532
  %539 = phi i64 [ %494, %491 ], [ %505, %532 ]
  %540 = phi i32 [ 1, %491 ], [ %536, %532 ]
  br label %541

541:                                              ; preds = %538, %541
  %542 = phi i64 [ %547, %541 ], [ %539, %538 ]
  %543 = phi i32 [ %546, %541 ], [ %540, %538 ]
  %544 = getelementptr inbounds i32, ptr %11, i64 %542
  %545 = load i32, ptr %544, align 4, !tbaa !5
  %546 = mul nsw i32 %545, %543
  %547 = add nsw i64 %542, -1
  %548 = trunc i64 %542 to i32
  %549 = icmp sgt i32 %548, 0
  br i1 %549, label %541, label %550, !llvm.loop !34

550:                                              ; preds = %541, %532
  %551 = phi i32 [ %536, %532 ], [ %546, %541 ]
  %552 = and i64 %501, 4294967295
  %553 = getelementptr inbounds i32, ptr %6, i64 %552
  %554 = load i32, ptr %553, align 4, !tbaa !5
  %555 = mul nsw i32 %554, %551
  %556 = add nsw i32 %555, %495
  %557 = icmp sgt i64 %493, 2
  %558 = add nsw i64 %494, -1
  %559 = add i32 %492, 1
  br i1 %557, label %491, label %560, !llvm.loop !35

560:                                              ; preds = %550, %488
  %561 = phi i32 [ %490, %488 ], [ %556, %550 ]
  %562 = icmp slt i32 %561, %5
  br i1 %562, label %565, label %563

563:                                              ; preds = %560
  %564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

565:                                              ; preds = %560
  %566 = sext i32 %561 to i64
  %567 = getelementptr inbounds i8, ptr %24, i64 %566
  %568 = load i8, ptr %567, align 1, !tbaa !11
  %569 = load i8, ptr %26, align 1, !tbaa !11
  %570 = icmp ugt i8 %569, %568
  br i1 %570, label %571, label %572

571:                                              ; preds = %565
  store i8 %568, ptr %26, align 1, !tbaa !11
  br label %572

572:                                              ; preds = %571, %565
  %573 = add nuw nsw i32 %489, 1
  br i1 %340, label %574, label %624

574:                                              ; preds = %572
  %575 = load i32, ptr %4, align 4, !tbaa !5
  %576 = load i32, ptr %12, align 4, !tbaa !5
  %577 = add nsw i32 %576, -1
  %578 = icmp slt i32 %575, %577
  br i1 %578, label %601, label %579

579:                                              ; preds = %574
  %580 = icmp eq i32 %575, %577
  br i1 %580, label %581, label %617

581:                                              ; preds = %579
  store i32 0, ptr %4, align 4, !tbaa !5
  %582 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %582, ptr %6, align 4, !tbaa !5
  br i1 %345, label %624, label %583

583:                                              ; preds = %581, %611
  %584 = phi i64 [ %615, %611 ], [ 1, %581 ]
  %585 = getelementptr inbounds i32, ptr %4, i64 %584
  %586 = load i32, ptr %585, align 4, !tbaa !5
  %587 = getelementptr inbounds i32, ptr %12, i64 %584
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %586, %589
  br i1 %590, label %591, label %609

591:                                              ; preds = %583
  br i1 %578, label %601, label %592

592:                                              ; preds = %591
  %593 = shl i64 %584, 32
  %594 = add i64 %593, -4294967296
  %595 = ashr exact i64 %594, 32
  %596 = getelementptr inbounds i32, ptr %7, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %6, i64 %584
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = add nsw i32 %599, %597
  store i32 %600, ptr %598, align 4, !tbaa !5
  br label %619

601:                                              ; preds = %574, %591
  %602 = phi i32 [ %586, %591 ], [ %575, %574 ]
  %603 = phi ptr [ %585, %591 ], [ %4, %574 ]
  %604 = phi i64 [ %584, %591 ], [ 0, %574 ]
  %605 = add nsw i32 %602, 1
  store i32 %605, ptr %603, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %7, i64 %604
  %607 = load i32, ptr %606, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %6, i64 %604
  br label %619

609:                                              ; preds = %583
  %610 = icmp eq i32 %586, %589
  br i1 %610, label %611, label %617

611:                                              ; preds = %609
  store i32 0, ptr %585, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %8, i64 %584
  %613 = load i32, ptr %612, align 4, !tbaa !5
  %614 = getelementptr inbounds i32, ptr %6, i64 %584
  store i32 %613, ptr %614, align 4, !tbaa !5
  %615 = add nuw nsw i64 %584, 1
  %616 = icmp eq i64 %615, %343
  br i1 %616, label %624, label %583, !llvm.loop !36

617:                                              ; preds = %579, %609
  %618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

619:                                              ; preds = %592, %601
  %620 = phi ptr [ %608, %601 ], [ %585, %592 ]
  %621 = phi i32 [ %607, %601 ], [ 1, %592 ]
  %622 = load i32, ptr %620, align 4, !tbaa !5
  %623 = add nsw i32 %622, %621
  store i32 %623, ptr %620, align 4, !tbaa !5
  br label %624

624:                                              ; preds = %611, %619, %581, %572
  %625 = icmp eq i32 %573, %5
  br i1 %625, label %5542, label %488, !llvm.loop !37

626:                                              ; preds = %33
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 52, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

628:                                              ; preds = %18
  %629 = getelementptr inbounds ptr, ptr %14, i64 %19
  %630 = load ptr, ptr %629, align 8, !tbaa !9
  %631 = getelementptr inbounds ptr, ptr %16, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !9
  %633 = load i8, ptr %630, align 1, !tbaa !11
  %634 = zext i8 %633 to i32
  store i32 %634, ptr %632, align 4, !tbaa !5
  %635 = icmp eq i32 %13, 0
  br i1 %635, label %636, label %641

636:                                              ; preds = %628
  %637 = load i8, ptr %630, align 1, !tbaa !11
  %638 = icmp ugt i8 %633, %637
  br i1 %638, label %639, label %5542

639:                                              ; preds = %636
  %640 = zext i8 %637 to i32
  store i32 %640, ptr %632, align 4, !tbaa !5
  br label %5542

641:                                              ; preds = %628
  switch i32 %1, label %1238 [
    i32 1, label %642
    i32 0, label %942
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !5
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %5542

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %803

656:                                              ; preds = %642
  br i1 %646, label %657, label %5542

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %801
  %666 = phi i32 [ 0, %657 ], [ %753, %801 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %752, %801 ]
  %668 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !38

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !39

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !40

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = getelementptr inbounds i8, ptr %630, i64 %740
  %744 = load i8, ptr %743, align 1, !tbaa !11
  %745 = zext i8 %744 to i32
  %746 = fcmp fast ueq double %742, 0.000000e+00
  br i1 %746, label %751, label %747

747:                                              ; preds = %738
  %748 = load i32, ptr %632, align 4, !tbaa !5
  %749 = icmp sgt i32 %748, %745
  br i1 %749, label %750, label %751

750:                                              ; preds = %747
  store i32 %745, ptr %632, align 4, !tbaa !5
  br label %751

751:                                              ; preds = %747, %750, %738
  %752 = fadd fast double %742, %667
  %753 = add nuw nsw i32 %666, 1
  br i1 %659, label %754, label %801

754:                                              ; preds = %751
  %755 = load i32, ptr %4, align 4, !tbaa !5
  %756 = load i32, ptr %12, align 4, !tbaa !5
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %755, %757
  br i1 %758, label %778, label %759

759:                                              ; preds = %754
  %760 = icmp eq i32 %755, %757
  br i1 %760, label %761, label %794

761:                                              ; preds = %759
  store i32 0, ptr %4, align 4, !tbaa !5
  %762 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %762, ptr %6, align 4, !tbaa !5
  br i1 %664, label %801, label %763

763:                                              ; preds = %761, %788
  %764 = phi i64 [ %792, %788 ], [ 1, %761 ]
  %765 = getelementptr inbounds i32, ptr %4, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %12, i64 %764
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, -1
  %770 = icmp slt i32 %766, %769
  br i1 %770, label %771, label %786

771:                                              ; preds = %763
  br i1 %758, label %778, label %772

772:                                              ; preds = %771
  %773 = getelementptr inbounds i32, ptr %7, i64 %764
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %764
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, %774
  store i32 %777, ptr %775, align 4, !tbaa !5
  br label %796

778:                                              ; preds = %754, %771
  %779 = phi i32 [ %766, %771 ], [ %755, %754 ]
  %780 = phi ptr [ %765, %771 ], [ %4, %754 ]
  %781 = phi i64 [ %764, %771 ], [ 0, %754 ]
  %782 = add nsw i32 %779, 1
  store i32 %782, ptr %780, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %7, i64 %781
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %6, i64 %781
  br label %796

786:                                              ; preds = %763
  %787 = icmp eq i32 %766, %769
  br i1 %787, label %788, label %794

788:                                              ; preds = %786
  store i32 0, ptr %765, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %8, i64 %764
  %790 = load i32, ptr %789, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %6, i64 %764
  store i32 %790, ptr %791, align 4, !tbaa !5
  %792 = add nuw nsw i64 %764, 1
  %793 = icmp eq i64 %792, %662
  br i1 %793, label %801, label %763, !llvm.loop !41

794:                                              ; preds = %759, %786
  %795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

796:                                              ; preds = %772, %778
  %797 = phi ptr [ %785, %778 ], [ %765, %772 ]
  %798 = phi i32 [ %784, %778 ], [ 1, %772 ]
  %799 = load i32, ptr %797, align 4, !tbaa !5
  %800 = add nsw i32 %799, %798
  store i32 %800, ptr %797, align 4, !tbaa !5
  br label %801

801:                                              ; preds = %788, %796, %761, %751
  %802 = icmp eq i32 %753, %5
  br i1 %802, label %5542, label %665, !llvm.loop !42

803:                                              ; preds = %648, %940
  %804 = phi i32 [ 0, %648 ], [ %889, %940 ]
  %805 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %806, label %875

806:                                              ; preds = %803, %865
  %807 = phi i32 [ %874, %865 ], [ 0, %803 ]
  %808 = phi i64 [ %816, %865 ], [ %653, %803 ]
  %809 = phi i64 [ %873, %865 ], [ %652, %803 ]
  %810 = phi i32 [ %871, %865 ], [ %805, %803 ]
  %811 = sub i32 %651, %807
  %812 = tail call i32 @llvm.smin.i32(i32 %811, i32 0)
  %813 = sub i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = add nuw nsw i64 %814, 1
  %816 = add nsw i64 %808, -1
  %817 = icmp ult i32 %813, 31
  br i1 %817, label %853, label %818

818:                                              ; preds = %806
  %819 = and i64 %815, 8589934560
  %820 = sub i64 %809, %819
  br label %821

821:                                              ; preds = %821, %818
  %822 = phi i64 [ 0, %818 ], [ %845, %821 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %841, %821 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %842, %821 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %843, %821 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %844, %821 ]
  %827 = sub i64 %809, %822
  %828 = getelementptr inbounds i32, ptr %11, i64 %827
  %829 = getelementptr inbounds i32, ptr %828, i64 -7
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %828, i64 -15
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !5
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = getelementptr inbounds i32, ptr %828, i64 -23
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !5
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %828, i64 -31
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !5
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = mul <8 x i32> %831, %823
  %842 = mul <8 x i32> %834, %824
  %843 = mul <8 x i32> %837, %825
  %844 = mul <8 x i32> %840, %826
  %845 = add nuw i64 %822, 32
  %846 = icmp eq i64 %845, %819
  br i1 %846, label %847, label %821, !llvm.loop !43

847:                                              ; preds = %821
  %848 = mul <8 x i32> %842, %841
  %849 = mul <8 x i32> %843, %848
  %850 = mul <8 x i32> %844, %849
  %851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %850)
  %852 = icmp eq i64 %815, %819
  br i1 %852, label %865, label %853

853:                                              ; preds = %806, %847
  %854 = phi i64 [ %809, %806 ], [ %820, %847 ]
  %855 = phi i32 [ 1, %806 ], [ %851, %847 ]
  br label %856

856:                                              ; preds = %853, %856
  %857 = phi i64 [ %862, %856 ], [ %854, %853 ]
  %858 = phi i32 [ %861, %856 ], [ %855, %853 ]
  %859 = getelementptr inbounds i32, ptr %11, i64 %857
  %860 = load i32, ptr %859, align 4, !tbaa !5
  %861 = mul nsw i32 %860, %858
  %862 = add nsw i64 %857, -1
  %863 = trunc i64 %857 to i32
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %856, label %865, !llvm.loop !44

865:                                              ; preds = %856, %847
  %866 = phi i32 [ %851, %847 ], [ %861, %856 ]
  %867 = and i64 %816, 4294967295
  %868 = getelementptr inbounds i32, ptr %6, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !5
  %870 = mul nsw i32 %869, %866
  %871 = add nsw i32 %870, %810
  %872 = icmp sgt i64 %808, 2
  %873 = add nsw i64 %809, -1
  %874 = add i32 %807, 1
  br i1 %872, label %806, label %875, !llvm.loop !45

875:                                              ; preds = %865, %803
  %876 = phi i32 [ %805, %803 ], [ %871, %865 ]
  %877 = icmp slt i32 %876, %5
  br i1 %877, label %880, label %878

878:                                              ; preds = %875
  %879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

880:                                              ; preds = %875
  %881 = sext i32 %876 to i64
  %882 = getelementptr inbounds i8, ptr %630, i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !11
  %884 = zext i8 %883 to i32
  %885 = load i32, ptr %632, align 4, !tbaa !5
  %886 = icmp sgt i32 %885, %884
  br i1 %886, label %887, label %888

887:                                              ; preds = %880
  store i32 %884, ptr %632, align 4, !tbaa !5
  br label %888

888:                                              ; preds = %880, %887
  %889 = add nuw nsw i32 %804, 1
  br i1 %650, label %890, label %940

890:                                              ; preds = %888
  %891 = load i32, ptr %4, align 4, !tbaa !5
  %892 = load i32, ptr %12, align 4, !tbaa !5
  %893 = add nsw i32 %892, -1
  %894 = icmp slt i32 %891, %893
  br i1 %894, label %917, label %895

895:                                              ; preds = %890
  %896 = icmp eq i32 %891, %893
  br i1 %896, label %897, label %933

897:                                              ; preds = %895
  store i32 0, ptr %4, align 4, !tbaa !5
  %898 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %898, ptr %6, align 4, !tbaa !5
  br i1 %655, label %940, label %899

899:                                              ; preds = %897, %927
  %900 = phi i64 [ %931, %927 ], [ 1, %897 ]
  %901 = getelementptr inbounds i32, ptr %4, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = getelementptr inbounds i32, ptr %12, i64 %900
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %902, %905
  br i1 %906, label %907, label %925

907:                                              ; preds = %899
  br i1 %894, label %917, label %908

908:                                              ; preds = %907
  %909 = shl i64 %900, 32
  %910 = add i64 %909, -4294967296
  %911 = ashr exact i64 %910, 32
  %912 = getelementptr inbounds i32, ptr %7, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %900
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = add nsw i32 %915, %913
  store i32 %916, ptr %914, align 4, !tbaa !5
  br label %935

917:                                              ; preds = %890, %907
  %918 = phi i32 [ %902, %907 ], [ %891, %890 ]
  %919 = phi ptr [ %901, %907 ], [ %4, %890 ]
  %920 = phi i64 [ %900, %907 ], [ 0, %890 ]
  %921 = add nsw i32 %918, 1
  store i32 %921, ptr %919, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %7, i64 %920
  %923 = load i32, ptr %922, align 4, !tbaa !5
  %924 = getelementptr inbounds i32, ptr %6, i64 %920
  br label %935

925:                                              ; preds = %899
  %926 = icmp eq i32 %902, %905
  br i1 %926, label %927, label %933

927:                                              ; preds = %925
  store i32 0, ptr %901, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %8, i64 %900
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %6, i64 %900
  store i32 %929, ptr %930, align 4, !tbaa !5
  %931 = add nuw nsw i64 %900, 1
  %932 = icmp eq i64 %931, %653
  br i1 %932, label %940, label %899, !llvm.loop !46

933:                                              ; preds = %895, %925
  %934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

935:                                              ; preds = %908, %917
  %936 = phi ptr [ %924, %917 ], [ %901, %908 ]
  %937 = phi i32 [ %923, %917 ], [ 1, %908 ]
  %938 = load i32, ptr %936, align 4, !tbaa !5
  %939 = add nsw i32 %938, %937
  store i32 %939, ptr %936, align 4, !tbaa !5
  br label %940

940:                                              ; preds = %927, %935, %897, %888
  %941 = icmp eq i32 %889, %5
  br i1 %941, label %5542, label %803, !llvm.loop !47

942:                                              ; preds = %641
  %943 = getelementptr inbounds i32, ptr %3, i64 %19
  %944 = load i32, ptr %943, align 4, !tbaa !5
  %945 = icmp eq i32 %944, 0
  %946 = icmp sgt i32 %5, 0
  br i1 %945, label %956, label %947

947:                                              ; preds = %942
  br i1 %946, label %948, label %5542

948:                                              ; preds = %947
  %949 = icmp sgt i32 %13, 1
  %950 = icmp sgt i32 %13, 0
  %951 = add i32 %13, -2
  %952 = zext i32 %951 to i64
  %953 = zext i32 %13 to i64
  %954 = add nuw i32 %5, 1
  %955 = icmp eq i32 %13, 1
  br label %1099

956:                                              ; preds = %942
  br i1 %946, label %957, label %5542

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %965

965:                                              ; preds = %957, %1097
  %966 = phi i32 [ 0, %957 ], [ %1049, %1097 ]
  %967 = phi double [ 0.000000e+00, %957 ], [ %1048, %1097 ]
  %968 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %958, label %969, label %1038

969:                                              ; preds = %965, %1028
  %970 = phi i32 [ %1037, %1028 ], [ 0, %965 ]
  %971 = phi i64 [ %979, %1028 ], [ %962, %965 ]
  %972 = phi i64 [ %1036, %1028 ], [ %961, %965 ]
  %973 = phi i32 [ %1034, %1028 ], [ %968, %965 ]
  %974 = sub i32 %960, %970
  %975 = tail call i32 @llvm.smin.i32(i32 %974, i32 0)
  %976 = sub i32 %974, %975
  %977 = zext i32 %976 to i64
  %978 = add nuw nsw i64 %977, 1
  %979 = add nsw i64 %971, -1
  %980 = icmp ult i32 %976, 31
  br i1 %980, label %1016, label %981

981:                                              ; preds = %969
  %982 = and i64 %978, 8589934560
  %983 = sub i64 %972, %982
  br label %984

984:                                              ; preds = %984, %981
  %985 = phi i64 [ 0, %981 ], [ %1008, %984 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1004, %984 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1005, %984 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1006, %984 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1007, %984 ]
  %990 = sub i64 %972, %985
  %991 = getelementptr inbounds i32, ptr %9, i64 %990
  %992 = getelementptr inbounds i32, ptr %991, i64 -7
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %991, i64 -15
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %991, i64 -23
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !5
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %991, i64 -31
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !5
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = mul <8 x i32> %994, %986
  %1005 = mul <8 x i32> %997, %987
  %1006 = mul <8 x i32> %1000, %988
  %1007 = mul <8 x i32> %1003, %989
  %1008 = add nuw i64 %985, 32
  %1009 = icmp eq i64 %1008, %982
  br i1 %1009, label %1010, label %984, !llvm.loop !48

1010:                                             ; preds = %984
  %1011 = mul <8 x i32> %1005, %1004
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1013)
  %1015 = icmp eq i64 %978, %982
  br i1 %1015, label %1028, label %1016

1016:                                             ; preds = %969, %1010
  %1017 = phi i64 [ %972, %969 ], [ %983, %1010 ]
  %1018 = phi i32 [ 1, %969 ], [ %1014, %1010 ]
  br label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1025, %1019 ], [ %1017, %1016 ]
  %1021 = phi i32 [ %1024, %1019 ], [ %1018, %1016 ]
  %1022 = getelementptr inbounds i32, ptr %9, i64 %1020
  %1023 = load i32, ptr %1022, align 4, !tbaa !5
  %1024 = mul nsw i32 %1023, %1021
  %1025 = add nsw i64 %1020, -1
  %1026 = trunc i64 %1020 to i32
  %1027 = icmp sgt i32 %1026, 0
  br i1 %1027, label %1019, label %1028, !llvm.loop !49

1028:                                             ; preds = %1019, %1010
  %1029 = phi i32 [ %1014, %1010 ], [ %1024, %1019 ]
  %1030 = and i64 %979, 4294967295
  %1031 = getelementptr inbounds i32, ptr %6, i64 %1030
  %1032 = load i32, ptr %1031, align 4, !tbaa !5
  %1033 = mul nsw i32 %1032, %1029
  %1034 = add nsw i32 %1033, %973
  %1035 = icmp sgt i64 %971, 2
  %1036 = add nsw i64 %972, -1
  %1037 = add i32 %970, 1
  br i1 %1035, label %969, label %1038, !llvm.loop !50

1038:                                             ; preds = %1028, %965
  %1039 = phi i32 [ %968, %965 ], [ %1034, %1028 ]
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i8, ptr %630, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !11
  %1043 = zext i8 %1042 to i32
  %1044 = load i32, ptr %632, align 4, !tbaa !5
  %1045 = icmp sgt i32 %1044, %1043
  br i1 %1045, label %1046, label %1047

1046:                                             ; preds = %1038
  store i32 %1043, ptr %632, align 4, !tbaa !5
  br label %1047

1047:                                             ; preds = %1046, %1038
  %1048 = fadd fast double %967, 1.000000e+00
  %1049 = add nuw nsw i32 %966, 1
  br i1 %959, label %1050, label %1097

1050:                                             ; preds = %1047
  %1051 = load i32, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %12, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !5
  %1058 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1058, ptr %6, align 4, !tbaa !5
  br i1 %964, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !5
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !5
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !5
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %962
  br i1 %1089, label %1097, label %1059, !llvm.loop !51

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !5
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !5
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1047
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %5542, label %965, !llvm.loop !52

1099:                                             ; preds = %948, %1236
  %1100 = phi i32 [ 0, %948 ], [ %1185, %1236 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %949, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %953, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %952, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %951, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !53

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !5
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !54

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !5
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !55

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds i8, ptr %630, i64 %1177
  %1179 = load i8, ptr %1178, align 1, !tbaa !11
  %1180 = zext i8 %1179 to i32
  %1181 = load i32, ptr %632, align 4, !tbaa !5
  %1182 = icmp sgt i32 %1181, %1180
  br i1 %1182, label %1183, label %1184

1183:                                             ; preds = %1176
  store i32 %1180, ptr %632, align 4, !tbaa !5
  br label %1184

1184:                                             ; preds = %1183, %1176
  %1185 = add nuw nsw i32 %1100, 1
  br i1 %950, label %1186, label %1236

1186:                                             ; preds = %1184
  %1187 = load i32, ptr %4, align 4, !tbaa !5
  %1188 = load i32, ptr %12, align 4, !tbaa !5
  %1189 = add nsw i32 %1188, -1
  %1190 = icmp slt i32 %1187, %1189
  br i1 %1190, label %1213, label %1191

1191:                                             ; preds = %1186
  %1192 = icmp eq i32 %1187, %1189
  br i1 %1192, label %1193, label %1229

1193:                                             ; preds = %1191
  store i32 0, ptr %4, align 4, !tbaa !5
  %1194 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1194, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1236, label %1195

1195:                                             ; preds = %1193, %1223
  %1196 = phi i64 [ %1227, %1223 ], [ 1, %1193 ]
  %1197 = getelementptr inbounds i32, ptr %4, i64 %1196
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %12, i64 %1196
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = add nsw i32 %1200, -1
  %1202 = icmp slt i32 %1198, %1201
  br i1 %1202, label %1203, label %1221

1203:                                             ; preds = %1195
  br i1 %1190, label %1213, label %1204

1204:                                             ; preds = %1203
  %1205 = shl i64 %1196, 32
  %1206 = add i64 %1205, -4294967296
  %1207 = ashr exact i64 %1206, 32
  %1208 = getelementptr inbounds i32, ptr %7, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %6, i64 %1196
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = add nsw i32 %1211, %1209
  store i32 %1212, ptr %1210, align 4, !tbaa !5
  br label %1231

1213:                                             ; preds = %1186, %1203
  %1214 = phi i32 [ %1198, %1203 ], [ %1187, %1186 ]
  %1215 = phi ptr [ %1197, %1203 ], [ %4, %1186 ]
  %1216 = phi i64 [ %1196, %1203 ], [ 0, %1186 ]
  %1217 = add nsw i32 %1214, 1
  store i32 %1217, ptr %1215, align 4, !tbaa !5
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1216
  %1219 = load i32, ptr %1218, align 4, !tbaa !5
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1216
  br label %1231

1221:                                             ; preds = %1195
  %1222 = icmp eq i32 %1198, %1201
  br i1 %1222, label %1223, label %1229

1223:                                             ; preds = %1221
  store i32 0, ptr %1197, align 4, !tbaa !5
  %1224 = getelementptr inbounds i32, ptr %8, i64 %1196
  %1225 = load i32, ptr %1224, align 4, !tbaa !5
  %1226 = getelementptr inbounds i32, ptr %6, i64 %1196
  store i32 %1225, ptr %1226, align 4, !tbaa !5
  %1227 = add nuw nsw i64 %1196, 1
  %1228 = icmp eq i64 %1227, %953
  br i1 %1228, label %1236, label %1195, !llvm.loop !56

1229:                                             ; preds = %1191, %1221
  %1230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1231:                                             ; preds = %1204, %1213
  %1232 = phi ptr [ %1220, %1213 ], [ %1197, %1204 ]
  %1233 = phi i32 [ %1219, %1213 ], [ 1, %1204 ]
  %1234 = load i32, ptr %1232, align 4, !tbaa !5
  %1235 = add nsw i32 %1234, %1233
  store i32 %1235, ptr %1232, align 4, !tbaa !5
  br label %1236

1236:                                             ; preds = %1223, %1231, %1193, %1184
  %1237 = icmp eq i32 %1185, %5
  br i1 %1237, label %5542, label %1099, !llvm.loop !57

1238:                                             ; preds = %641
  %1239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 55, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

1240:                                             ; preds = %18
  %1241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1242 = load ptr, ptr %1241, align 8, !tbaa !9
  %1243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1244 = load ptr, ptr %1243, align 8, !tbaa !9
  %1245 = load i8, ptr %1242, align 1, !tbaa !11
  store i8 %1245, ptr %1244, align 1, !tbaa !11
  %1246 = icmp eq i32 %13, 0
  br i1 %1246, label %1247, label %1251

1247:                                             ; preds = %1240
  %1248 = load i8, ptr %1242, align 1, !tbaa !11
  %1249 = icmp sgt i8 %1245, %1248
  br i1 %1249, label %1250, label %5542

1250:                                             ; preds = %1247
  store i8 %1248, ptr %1244, align 1, !tbaa !11
  br label %5542

1251:                                             ; preds = %1240
  switch i32 %1, label %1844 [
    i32 1, label %1252
    i32 0, label %1550
  ]

1252:                                             ; preds = %1251
  %1253 = getelementptr inbounds i32, ptr %3, i64 %19
  %1254 = load i32, ptr %1253, align 4, !tbaa !5
  %1255 = icmp eq i32 %1254, 0
  %1256 = icmp sgt i32 %5, 0
  br i1 %1255, label %1266, label %1257

1257:                                             ; preds = %1252
  br i1 %1256, label %1258, label %5542

1258:                                             ; preds = %1257
  %1259 = icmp sgt i32 %13, 1
  %1260 = icmp sgt i32 %13, 0
  %1261 = add i32 %13, -2
  %1262 = zext i32 %1261 to i64
  %1263 = zext i32 %13 to i64
  %1264 = add nuw i32 %5, 1
  %1265 = icmp eq i32 %13, 1
  br label %1412

1266:                                             ; preds = %1252
  br i1 %1256, label %1267, label %5542

1267:                                             ; preds = %1266
  %1268 = icmp sgt i32 %13, 1
  %1269 = icmp sgt i32 %13, 0
  %1270 = add i32 %13, -2
  %1271 = zext i32 %1270 to i64
  %1272 = zext i32 %13 to i64
  %1273 = add nuw i32 %5, 1
  %1274 = icmp eq i32 %13, 1
  br label %1275

1275:                                             ; preds = %1267, %1410
  %1276 = phi i32 [ 0, %1267 ], [ %1362, %1410 ]
  %1277 = phi double [ 0.000000e+00, %1267 ], [ %1361, %1410 ]
  %1278 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1279, label %1348

1279:                                             ; preds = %1275, %1338
  %1280 = phi i32 [ %1347, %1338 ], [ 0, %1275 ]
  %1281 = phi i64 [ %1289, %1338 ], [ %1272, %1275 ]
  %1282 = phi i64 [ %1346, %1338 ], [ %1271, %1275 ]
  %1283 = phi i32 [ %1344, %1338 ], [ %1278, %1275 ]
  %1284 = sub i32 %1270, %1280
  %1285 = tail call i32 @llvm.smin.i32(i32 %1284, i32 0)
  %1286 = sub i32 %1284, %1285
  %1287 = zext i32 %1286 to i64
  %1288 = add nuw nsw i64 %1287, 1
  %1289 = add nsw i64 %1281, -1
  %1290 = icmp ult i32 %1286, 31
  br i1 %1290, label %1326, label %1291

1291:                                             ; preds = %1279
  %1292 = and i64 %1288, 8589934560
  %1293 = sub i64 %1282, %1292
  br label %1294

1294:                                             ; preds = %1294, %1291
  %1295 = phi i64 [ 0, %1291 ], [ %1318, %1294 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1314, %1294 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1315, %1294 ]
  %1298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1316, %1294 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1317, %1294 ]
  %1300 = sub i64 %1282, %1295
  %1301 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1302 = getelementptr inbounds i32, ptr %1301, i64 -7
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1301, i64 -15
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1301, i64 -23
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !5
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1301, i64 -31
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !5
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = mul <8 x i32> %1304, %1296
  %1315 = mul <8 x i32> %1307, %1297
  %1316 = mul <8 x i32> %1310, %1298
  %1317 = mul <8 x i32> %1313, %1299
  %1318 = add nuw i64 %1295, 32
  %1319 = icmp eq i64 %1318, %1292
  br i1 %1319, label %1320, label %1294, !llvm.loop !58

1320:                                             ; preds = %1294
  %1321 = mul <8 x i32> %1315, %1314
  %1322 = mul <8 x i32> %1316, %1321
  %1323 = mul <8 x i32> %1317, %1322
  %1324 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1323)
  %1325 = icmp eq i64 %1288, %1292
  br i1 %1325, label %1338, label %1326

1326:                                             ; preds = %1279, %1320
  %1327 = phi i64 [ %1282, %1279 ], [ %1293, %1320 ]
  %1328 = phi i32 [ 1, %1279 ], [ %1324, %1320 ]
  br label %1329

1329:                                             ; preds = %1326, %1329
  %1330 = phi i64 [ %1335, %1329 ], [ %1327, %1326 ]
  %1331 = phi i32 [ %1334, %1329 ], [ %1328, %1326 ]
  %1332 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1333 = load i32, ptr %1332, align 4, !tbaa !5
  %1334 = mul nsw i32 %1333, %1331
  %1335 = add nsw i64 %1330, -1
  %1336 = trunc i64 %1330 to i32
  %1337 = icmp sgt i32 %1336, 0
  br i1 %1337, label %1329, label %1338, !llvm.loop !59

1338:                                             ; preds = %1329, %1320
  %1339 = phi i32 [ %1324, %1320 ], [ %1334, %1329 ]
  %1340 = and i64 %1289, 4294967295
  %1341 = getelementptr inbounds i32, ptr %6, i64 %1340
  %1342 = load i32, ptr %1341, align 4, !tbaa !5
  %1343 = mul nsw i32 %1342, %1339
  %1344 = add nsw i32 %1343, %1283
  %1345 = icmp sgt i64 %1281, 2
  %1346 = add nsw i64 %1282, -1
  %1347 = add i32 %1280, 1
  br i1 %1345, label %1279, label %1348, !llvm.loop !60

1348:                                             ; preds = %1338, %1275
  %1349 = phi i32 [ %1278, %1275 ], [ %1344, %1338 ]
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds double, ptr %2, i64 %1350
  %1352 = load double, ptr %1351, align 8, !tbaa !18
  %1353 = getelementptr inbounds i8, ptr %1242, i64 %1350
  %1354 = load i8, ptr %1353, align 1, !tbaa !11
  %1355 = fcmp fast ueq double %1352, 0.000000e+00
  br i1 %1355, label %1360, label %1356

1356:                                             ; preds = %1348
  %1357 = load i8, ptr %1244, align 1, !tbaa !11
  %1358 = icmp sgt i8 %1357, %1354
  br i1 %1358, label %1359, label %1360

1359:                                             ; preds = %1356
  store i8 %1354, ptr %1244, align 1, !tbaa !11
  br label %1360

1360:                                             ; preds = %1356, %1359, %1348
  %1361 = fadd fast double %1352, %1277
  %1362 = add nuw nsw i32 %1276, 1
  br i1 %1269, label %1363, label %1410

1363:                                             ; preds = %1360
  %1364 = load i32, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %12, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !5
  %1371 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1371, ptr %6, align 4, !tbaa !5
  br i1 %1274, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !5
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1272
  br i1 %1402, label %1410, label %1372, !llvm.loop !61

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !5
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !5
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1360
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %5542, label %1275, !llvm.loop !62

1412:                                             ; preds = %1258, %1548
  %1413 = phi i32 [ 0, %1258 ], [ %1497, %1548 ]
  %1414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1415, label %1484

1415:                                             ; preds = %1412, %1474
  %1416 = phi i32 [ %1483, %1474 ], [ 0, %1412 ]
  %1417 = phi i64 [ %1425, %1474 ], [ %1263, %1412 ]
  %1418 = phi i64 [ %1482, %1474 ], [ %1262, %1412 ]
  %1419 = phi i32 [ %1480, %1474 ], [ %1414, %1412 ]
  %1420 = sub i32 %1261, %1416
  %1421 = tail call i32 @llvm.smin.i32(i32 %1420, i32 0)
  %1422 = sub i32 %1420, %1421
  %1423 = zext i32 %1422 to i64
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = add nsw i64 %1417, -1
  %1426 = icmp ult i32 %1422, 31
  br i1 %1426, label %1462, label %1427

1427:                                             ; preds = %1415
  %1428 = and i64 %1424, 8589934560
  %1429 = sub i64 %1418, %1428
  br label %1430

1430:                                             ; preds = %1430, %1427
  %1431 = phi i64 [ 0, %1427 ], [ %1454, %1430 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1450, %1430 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1451, %1430 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1452, %1430 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1453, %1430 ]
  %1436 = sub i64 %1418, %1431
  %1437 = getelementptr inbounds i32, ptr %11, i64 %1436
  %1438 = getelementptr inbounds i32, ptr %1437, i64 -7
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1437, i64 -15
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1437, i64 -23
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = getelementptr inbounds i32, ptr %1437, i64 -31
  %1448 = load <8 x i32>, ptr %1447, align 4, !tbaa !5
  %1449 = shufflevector <8 x i32> %1448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1450 = mul <8 x i32> %1440, %1432
  %1451 = mul <8 x i32> %1443, %1433
  %1452 = mul <8 x i32> %1446, %1434
  %1453 = mul <8 x i32> %1449, %1435
  %1454 = add nuw i64 %1431, 32
  %1455 = icmp eq i64 %1454, %1428
  br i1 %1455, label %1456, label %1430, !llvm.loop !63

1456:                                             ; preds = %1430
  %1457 = mul <8 x i32> %1451, %1450
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1459)
  %1461 = icmp eq i64 %1424, %1428
  br i1 %1461, label %1474, label %1462

1462:                                             ; preds = %1415, %1456
  %1463 = phi i64 [ %1418, %1415 ], [ %1429, %1456 ]
  %1464 = phi i32 [ 1, %1415 ], [ %1460, %1456 ]
  br label %1465

1465:                                             ; preds = %1462, %1465
  %1466 = phi i64 [ %1471, %1465 ], [ %1463, %1462 ]
  %1467 = phi i32 [ %1470, %1465 ], [ %1464, %1462 ]
  %1468 = getelementptr inbounds i32, ptr %11, i64 %1466
  %1469 = load i32, ptr %1468, align 4, !tbaa !5
  %1470 = mul nsw i32 %1469, %1467
  %1471 = add nsw i64 %1466, -1
  %1472 = trunc i64 %1466 to i32
  %1473 = icmp sgt i32 %1472, 0
  br i1 %1473, label %1465, label %1474, !llvm.loop !64

1474:                                             ; preds = %1465, %1456
  %1475 = phi i32 [ %1460, %1456 ], [ %1470, %1465 ]
  %1476 = and i64 %1425, 4294967295
  %1477 = getelementptr inbounds i32, ptr %6, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !5
  %1479 = mul nsw i32 %1478, %1475
  %1480 = add nsw i32 %1479, %1419
  %1481 = icmp sgt i64 %1417, 2
  %1482 = add nsw i64 %1418, -1
  %1483 = add i32 %1416, 1
  br i1 %1481, label %1415, label %1484, !llvm.loop !65

1484:                                             ; preds = %1474, %1412
  %1485 = phi i32 [ %1414, %1412 ], [ %1480, %1474 ]
  %1486 = icmp slt i32 %1485, %5
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1489:                                             ; preds = %1484
  %1490 = sext i32 %1485 to i64
  %1491 = getelementptr inbounds i8, ptr %1242, i64 %1490
  %1492 = load i8, ptr %1491, align 1, !tbaa !11
  %1493 = load i8, ptr %1244, align 1, !tbaa !11
  %1494 = icmp sgt i8 %1493, %1492
  br i1 %1494, label %1495, label %1496

1495:                                             ; preds = %1489
  store i8 %1492, ptr %1244, align 1, !tbaa !11
  br label %1496

1496:                                             ; preds = %1489, %1495
  %1497 = add nuw nsw i32 %1413, 1
  br i1 %1260, label %1498, label %1548

1498:                                             ; preds = %1496
  %1499 = load i32, ptr %4, align 4, !tbaa !5
  %1500 = load i32, ptr %12, align 4, !tbaa !5
  %1501 = add nsw i32 %1500, -1
  %1502 = icmp slt i32 %1499, %1501
  br i1 %1502, label %1525, label %1503

1503:                                             ; preds = %1498
  %1504 = icmp eq i32 %1499, %1501
  br i1 %1504, label %1505, label %1541

1505:                                             ; preds = %1503
  store i32 0, ptr %4, align 4, !tbaa !5
  %1506 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1506, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1548, label %1507

1507:                                             ; preds = %1505, %1535
  %1508 = phi i64 [ %1539, %1535 ], [ 1, %1505 ]
  %1509 = getelementptr inbounds i32, ptr %4, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %12, i64 %1508
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1510, %1513
  br i1 %1514, label %1515, label %1533

1515:                                             ; preds = %1507
  br i1 %1502, label %1525, label %1516

1516:                                             ; preds = %1515
  %1517 = shl i64 %1508, 32
  %1518 = add i64 %1517, -4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = getelementptr inbounds i32, ptr %7, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, %1521
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  br label %1543

1525:                                             ; preds = %1498, %1515
  %1526 = phi i32 [ %1510, %1515 ], [ %1499, %1498 ]
  %1527 = phi ptr [ %1509, %1515 ], [ %4, %1498 ]
  %1528 = phi i64 [ %1508, %1515 ], [ 0, %1498 ]
  %1529 = add nsw i32 %1526, 1
  store i32 %1529, ptr %1527, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %7, i64 %1528
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1528
  br label %1543

1533:                                             ; preds = %1507
  %1534 = icmp eq i32 %1510, %1513
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  store i32 0, ptr %1509, align 4, !tbaa !5
  %1536 = getelementptr inbounds i32, ptr %8, i64 %1508
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1508
  store i32 %1537, ptr %1538, align 4, !tbaa !5
  %1539 = add nuw nsw i64 %1508, 1
  %1540 = icmp eq i64 %1539, %1263
  br i1 %1540, label %1548, label %1507, !llvm.loop !66

1541:                                             ; preds = %1503, %1533
  %1542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1543:                                             ; preds = %1516, %1525
  %1544 = phi ptr [ %1532, %1525 ], [ %1509, %1516 ]
  %1545 = phi i32 [ %1531, %1525 ], [ 1, %1516 ]
  %1546 = load i32, ptr %1544, align 4, !tbaa !5
  %1547 = add nsw i32 %1546, %1545
  store i32 %1547, ptr %1544, align 4, !tbaa !5
  br label %1548

1548:                                             ; preds = %1535, %1543, %1505, %1496
  %1549 = icmp eq i32 %1497, %5
  br i1 %1549, label %5542, label %1412, !llvm.loop !67

1550:                                             ; preds = %1251
  %1551 = getelementptr inbounds i32, ptr %3, i64 %19
  %1552 = load i32, ptr %1551, align 4, !tbaa !5
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp sgt i32 %5, 0
  br i1 %1553, label %1564, label %1555

1555:                                             ; preds = %1550
  br i1 %1554, label %1556, label %5542

1556:                                             ; preds = %1555
  %1557 = icmp sgt i32 %13, 1
  %1558 = icmp sgt i32 %13, 0
  %1559 = add i32 %13, -2
  %1560 = zext i32 %1559 to i64
  %1561 = zext i32 %13 to i64
  %1562 = add nuw i32 %5, 1
  %1563 = icmp eq i32 %13, 1
  br label %1706

1564:                                             ; preds = %1550
  br i1 %1554, label %1565, label %5542

1565:                                             ; preds = %1564
  %1566 = icmp sgt i32 %13, 1
  %1567 = icmp sgt i32 %13, 0
  %1568 = add i32 %13, -2
  %1569 = zext i32 %1568 to i64
  %1570 = zext i32 %13 to i64
  %1571 = add nuw i32 %5, 1
  %1572 = icmp eq i32 %13, 1
  br label %1573

1573:                                             ; preds = %1565, %1704
  %1574 = phi i32 [ 0, %1565 ], [ %1656, %1704 ]
  %1575 = phi double [ 0.000000e+00, %1565 ], [ %1655, %1704 ]
  %1576 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1577, label %1646

1577:                                             ; preds = %1573, %1636
  %1578 = phi i32 [ %1645, %1636 ], [ 0, %1573 ]
  %1579 = phi i64 [ %1587, %1636 ], [ %1570, %1573 ]
  %1580 = phi i64 [ %1644, %1636 ], [ %1569, %1573 ]
  %1581 = phi i32 [ %1642, %1636 ], [ %1576, %1573 ]
  %1582 = sub i32 %1568, %1578
  %1583 = tail call i32 @llvm.smin.i32(i32 %1582, i32 0)
  %1584 = sub i32 %1582, %1583
  %1585 = zext i32 %1584 to i64
  %1586 = add nuw nsw i64 %1585, 1
  %1587 = add nsw i64 %1579, -1
  %1588 = icmp ult i32 %1584, 31
  br i1 %1588, label %1624, label %1589

1589:                                             ; preds = %1577
  %1590 = and i64 %1586, 8589934560
  %1591 = sub i64 %1580, %1590
  br label %1592

1592:                                             ; preds = %1592, %1589
  %1593 = phi i64 [ 0, %1589 ], [ %1616, %1592 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1612, %1592 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1613, %1592 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1614, %1592 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1615, %1592 ]
  %1598 = sub i64 %1580, %1593
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1600 = getelementptr inbounds i32, ptr %1599, i64 -7
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1599, i64 -15
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1599, i64 -23
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1599, i64 -31
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = mul <8 x i32> %1602, %1594
  %1613 = mul <8 x i32> %1605, %1595
  %1614 = mul <8 x i32> %1608, %1596
  %1615 = mul <8 x i32> %1611, %1597
  %1616 = add nuw i64 %1593, 32
  %1617 = icmp eq i64 %1616, %1590
  br i1 %1617, label %1618, label %1592, !llvm.loop !68

1618:                                             ; preds = %1592
  %1619 = mul <8 x i32> %1613, %1612
  %1620 = mul <8 x i32> %1614, %1619
  %1621 = mul <8 x i32> %1615, %1620
  %1622 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1621)
  %1623 = icmp eq i64 %1586, %1590
  br i1 %1623, label %1636, label %1624

1624:                                             ; preds = %1577, %1618
  %1625 = phi i64 [ %1580, %1577 ], [ %1591, %1618 ]
  %1626 = phi i32 [ 1, %1577 ], [ %1622, %1618 ]
  br label %1627

1627:                                             ; preds = %1624, %1627
  %1628 = phi i64 [ %1633, %1627 ], [ %1625, %1624 ]
  %1629 = phi i32 [ %1632, %1627 ], [ %1626, %1624 ]
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1628
  %1631 = load i32, ptr %1630, align 4, !tbaa !5
  %1632 = mul nsw i32 %1631, %1629
  %1633 = add nsw i64 %1628, -1
  %1634 = trunc i64 %1628 to i32
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1627, label %1636, !llvm.loop !69

1636:                                             ; preds = %1627, %1618
  %1637 = phi i32 [ %1622, %1618 ], [ %1632, %1627 ]
  %1638 = and i64 %1587, 4294967295
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = mul nsw i32 %1640, %1637
  %1642 = add nsw i32 %1641, %1581
  %1643 = icmp sgt i64 %1579, 2
  %1644 = add nsw i64 %1580, -1
  %1645 = add i32 %1578, 1
  br i1 %1643, label %1577, label %1646, !llvm.loop !70

1646:                                             ; preds = %1636, %1573
  %1647 = phi i32 [ %1576, %1573 ], [ %1642, %1636 ]
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds i8, ptr %1242, i64 %1648
  %1650 = load i8, ptr %1649, align 1, !tbaa !11
  %1651 = load i8, ptr %1244, align 1, !tbaa !11
  %1652 = icmp sgt i8 %1651, %1650
  br i1 %1652, label %1653, label %1654

1653:                                             ; preds = %1646
  store i8 %1650, ptr %1244, align 1, !tbaa !11
  br label %1654

1654:                                             ; preds = %1653, %1646
  %1655 = fadd fast double %1575, 1.000000e+00
  %1656 = add nuw nsw i32 %1574, 1
  br i1 %1567, label %1657, label %1704

1657:                                             ; preds = %1654
  %1658 = load i32, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %12, align 4, !tbaa !5
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1658, %1660
  br i1 %1661, label %1681, label %1662

1662:                                             ; preds = %1657
  %1663 = icmp eq i32 %1658, %1660
  br i1 %1663, label %1664, label %1697

1664:                                             ; preds = %1662
  store i32 0, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1665, ptr %6, align 4, !tbaa !5
  br i1 %1572, label %1704, label %1666

1666:                                             ; preds = %1664, %1691
  %1667 = phi i64 [ %1695, %1691 ], [ 1, %1664 ]
  %1668 = getelementptr inbounds i32, ptr %4, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !5
  %1670 = getelementptr inbounds i32, ptr %12, i64 %1667
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1669, %1672
  br i1 %1673, label %1674, label %1689

1674:                                             ; preds = %1666
  br i1 %1661, label %1681, label %1675

1675:                                             ; preds = %1674
  %1676 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = add nsw i32 %1679, %1677
  store i32 %1680, ptr %1678, align 4, !tbaa !5
  br label %1699

1681:                                             ; preds = %1657, %1674
  %1682 = phi i32 [ %1669, %1674 ], [ %1658, %1657 ]
  %1683 = phi ptr [ %1668, %1674 ], [ %4, %1657 ]
  %1684 = phi i64 [ %1667, %1674 ], [ 0, %1657 ]
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, ptr %1683, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1684
  br label %1699

1689:                                             ; preds = %1666
  %1690 = icmp eq i32 %1669, %1672
  br i1 %1690, label %1691, label %1697

1691:                                             ; preds = %1689
  store i32 0, ptr %1668, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %8, i64 %1667
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1667
  store i32 %1693, ptr %1694, align 4, !tbaa !5
  %1695 = add nuw nsw i64 %1667, 1
  %1696 = icmp eq i64 %1695, %1570
  br i1 %1696, label %1704, label %1666, !llvm.loop !71

1697:                                             ; preds = %1662, %1689
  %1698 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1699:                                             ; preds = %1675, %1681
  %1700 = phi ptr [ %1688, %1681 ], [ %1668, %1675 ]
  %1701 = phi i32 [ %1687, %1681 ], [ 1, %1675 ]
  %1702 = load i32, ptr %1700, align 4, !tbaa !5
  %1703 = add nsw i32 %1702, %1701
  store i32 %1703, ptr %1700, align 4, !tbaa !5
  br label %1704

1704:                                             ; preds = %1691, %1699, %1664, %1654
  %1705 = icmp eq i32 %1656, %5
  br i1 %1705, label %5542, label %1573, !llvm.loop !72

1706:                                             ; preds = %1556, %1842
  %1707 = phi i32 [ 0, %1556 ], [ %1791, %1842 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1709, label %1778

1709:                                             ; preds = %1706, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1706 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1561, %1706 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1560, %1706 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1706 ]
  %1714 = sub i32 %1559, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !73

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !74

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !75

1778:                                             ; preds = %1768, %1706
  %1779 = phi i32 [ %1708, %1706 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds i8, ptr %1242, i64 %1784
  %1786 = load i8, ptr %1785, align 1, !tbaa !11
  %1787 = load i8, ptr %1244, align 1, !tbaa !11
  %1788 = icmp sgt i8 %1787, %1786
  br i1 %1788, label %1789, label %1790

1789:                                             ; preds = %1783
  store i8 %1786, ptr %1244, align 1, !tbaa !11
  br label %1790

1790:                                             ; preds = %1789, %1783
  %1791 = add nuw nsw i32 %1707, 1
  br i1 %1558, label %1792, label %1842

1792:                                             ; preds = %1790
  %1793 = load i32, ptr %4, align 4, !tbaa !5
  %1794 = load i32, ptr %12, align 4, !tbaa !5
  %1795 = add nsw i32 %1794, -1
  %1796 = icmp slt i32 %1793, %1795
  br i1 %1796, label %1819, label %1797

1797:                                             ; preds = %1792
  %1798 = icmp eq i32 %1793, %1795
  br i1 %1798, label %1799, label %1835

1799:                                             ; preds = %1797
  store i32 0, ptr %4, align 4, !tbaa !5
  %1800 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1800, ptr %6, align 4, !tbaa !5
  br i1 %1563, label %1842, label %1801

1801:                                             ; preds = %1799, %1829
  %1802 = phi i64 [ %1833, %1829 ], [ 1, %1799 ]
  %1803 = getelementptr inbounds i32, ptr %4, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %12, i64 %1802
  %1806 = load i32, ptr %1805, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1804, %1807
  br i1 %1808, label %1809, label %1827

1809:                                             ; preds = %1801
  br i1 %1796, label %1819, label %1810

1810:                                             ; preds = %1809
  %1811 = shl i64 %1802, 32
  %1812 = add i64 %1811, -4294967296
  %1813 = ashr exact i64 %1812, 32
  %1814 = getelementptr inbounds i32, ptr %7, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = getelementptr inbounds i32, ptr %6, i64 %1802
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = add nsw i32 %1817, %1815
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  br label %1837

1819:                                             ; preds = %1792, %1809
  %1820 = phi i32 [ %1804, %1809 ], [ %1793, %1792 ]
  %1821 = phi ptr [ %1803, %1809 ], [ %4, %1792 ]
  %1822 = phi i64 [ %1802, %1809 ], [ 0, %1792 ]
  %1823 = add nsw i32 %1820, 1
  store i32 %1823, ptr %1821, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1822
  br label %1837

1827:                                             ; preds = %1801
  %1828 = icmp eq i32 %1804, %1807
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1827
  store i32 0, ptr %1803, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %8, i64 %1802
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1802
  store i32 %1831, ptr %1832, align 4, !tbaa !5
  %1833 = add nuw nsw i64 %1802, 1
  %1834 = icmp eq i64 %1833, %1561
  br i1 %1834, label %1842, label %1801, !llvm.loop !76

1835:                                             ; preds = %1797, %1827
  %1836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1837:                                             ; preds = %1810, %1819
  %1838 = phi ptr [ %1826, %1819 ], [ %1803, %1810 ]
  %1839 = phi i32 [ %1825, %1819 ], [ 1, %1810 ]
  %1840 = load i32, ptr %1838, align 4, !tbaa !5
  %1841 = add nsw i32 %1840, %1839
  store i32 %1841, ptr %1838, align 4, !tbaa !5
  br label %1842

1842:                                             ; preds = %1829, %1837, %1799, %1790
  %1843 = icmp eq i32 %1791, %5
  br i1 %1843, label %5542, label %1706, !llvm.loop !77

1844:                                             ; preds = %1251
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 59, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

1846:                                             ; preds = %18
  %1847 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !9
  %1849 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1850 = load ptr, ptr %1849, align 8, !tbaa !9
  %1851 = load i8, ptr %1848, align 1, !tbaa !11
  %1852 = zext i8 %1851 to i16
  store i16 %1852, ptr %1850, align 2, !tbaa !78
  %1853 = icmp eq i32 %13, 0
  br i1 %1853, label %1854, label %1859

1854:                                             ; preds = %1846
  %1855 = load i8, ptr %1848, align 1, !tbaa !11
  %1856 = icmp ugt i8 %1851, %1855
  br i1 %1856, label %1857, label %5542

1857:                                             ; preds = %1854
  %1858 = zext i8 %1855 to i16
  store i16 %1858, ptr %1850, align 2, !tbaa !78
  br label %5542

1859:                                             ; preds = %1846
  switch i32 %1, label %2464 [
    i32 1, label %1860
    i32 0, label %2164
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5542

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2023

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5542

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2021
  %1884 = phi i16 [ %1852, %1875 ], [ %1971, %2021 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1973, %2021 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1972, %2021 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !80

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !81

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !82

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds i8, ptr %1848, i64 %1959
  %1963 = load i8, ptr %1962, align 1, !tbaa !11
  %1964 = fcmp fast one double %1961, 0.000000e+00
  %1965 = zext i8 %1963 to i16
  %1966 = icmp ugt i16 %1884, %1965
  %1967 = select i1 %1964, i1 %1966, i1 false
  br i1 %1967, label %1968, label %1970

1968:                                             ; preds = %1957
  %1969 = zext i8 %1963 to i16
  store i16 %1969, ptr %1850, align 2, !tbaa !78
  br label %1970

1970:                                             ; preds = %1968, %1957
  %1971 = phi i16 [ %1969, %1968 ], [ %1884, %1957 ]
  %1972 = fadd fast double %1961, %1886
  %1973 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1974, label %2021

1974:                                             ; preds = %1970
  %1975 = load i32, ptr %4, align 4, !tbaa !5
  %1976 = load i32, ptr %12, align 4, !tbaa !5
  %1977 = add nsw i32 %1976, -1
  %1978 = icmp slt i32 %1975, %1977
  br i1 %1978, label %1998, label %1979

1979:                                             ; preds = %1974
  %1980 = icmp eq i32 %1975, %1977
  br i1 %1980, label %1981, label %2014

1981:                                             ; preds = %1979
  store i32 0, ptr %4, align 4, !tbaa !5
  %1982 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1982, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2021, label %1983

1983:                                             ; preds = %1981, %2008
  %1984 = phi i64 [ %2012, %2008 ], [ 1, %1981 ]
  %1985 = getelementptr inbounds i32, ptr %4, i64 %1984
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %12, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !5
  %1989 = add nsw i32 %1988, -1
  %1990 = icmp slt i32 %1986, %1989
  br i1 %1990, label %1991, label %2006

1991:                                             ; preds = %1983
  br i1 %1978, label %1998, label %1992

1992:                                             ; preds = %1991
  %1993 = getelementptr inbounds i32, ptr %7, i64 %1984
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = getelementptr inbounds i32, ptr %6, i64 %1984
  %1996 = load i32, ptr %1995, align 4, !tbaa !5
  %1997 = add nsw i32 %1996, %1994
  store i32 %1997, ptr %1995, align 4, !tbaa !5
  br label %2016

1998:                                             ; preds = %1974, %1991
  %1999 = phi i32 [ %1986, %1991 ], [ %1975, %1974 ]
  %2000 = phi ptr [ %1985, %1991 ], [ %4, %1974 ]
  %2001 = phi i64 [ %1984, %1991 ], [ 0, %1974 ]
  %2002 = add nsw i32 %1999, 1
  store i32 %2002, ptr %2000, align 4, !tbaa !5
  %2003 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2004 = load i32, ptr %2003, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %6, i64 %2001
  br label %2016

2006:                                             ; preds = %1983
  %2007 = icmp eq i32 %1986, %1989
  br i1 %2007, label %2008, label %2014

2008:                                             ; preds = %2006
  store i32 0, ptr %1985, align 4, !tbaa !5
  %2009 = getelementptr inbounds i32, ptr %8, i64 %1984
  %2010 = load i32, ptr %2009, align 4, !tbaa !5
  %2011 = getelementptr inbounds i32, ptr %6, i64 %1984
  store i32 %2010, ptr %2011, align 4, !tbaa !5
  %2012 = add nuw nsw i64 %1984, 1
  %2013 = icmp eq i64 %2012, %1880
  br i1 %2013, label %2021, label %1983, !llvm.loop !83

2014:                                             ; preds = %1979, %2006
  %2015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2016:                                             ; preds = %1992, %1998
  %2017 = phi ptr [ %2005, %1998 ], [ %1985, %1992 ]
  %2018 = phi i32 [ %2004, %1998 ], [ 1, %1992 ]
  %2019 = load i32, ptr %2017, align 4, !tbaa !5
  %2020 = add nsw i32 %2019, %2018
  store i32 %2020, ptr %2017, align 4, !tbaa !5
  br label %2021

2021:                                             ; preds = %2008, %2016, %1981, %1970
  %2022 = icmp eq i32 %1973, %5
  br i1 %2022, label %5542, label %1883, !llvm.loop !84

2023:                                             ; preds = %1866, %2162
  %2024 = phi i16 [ %1852, %1866 ], [ %2110, %2162 ]
  %2025 = phi i32 [ 0, %1866 ], [ %2111, %2162 ]
  %2026 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2027, label %2096

2027:                                             ; preds = %2023, %2086
  %2028 = phi i32 [ %2095, %2086 ], [ 0, %2023 ]
  %2029 = phi i64 [ %2037, %2086 ], [ %1871, %2023 ]
  %2030 = phi i64 [ %2094, %2086 ], [ %1870, %2023 ]
  %2031 = phi i32 [ %2092, %2086 ], [ %2026, %2023 ]
  %2032 = sub i32 %1869, %2028
  %2033 = tail call i32 @llvm.smin.i32(i32 %2032, i32 0)
  %2034 = sub i32 %2032, %2033
  %2035 = zext i32 %2034 to i64
  %2036 = add nuw nsw i64 %2035, 1
  %2037 = add nsw i64 %2029, -1
  %2038 = icmp ult i32 %2034, 31
  br i1 %2038, label %2074, label %2039

2039:                                             ; preds = %2027
  %2040 = and i64 %2036, 8589934560
  %2041 = sub i64 %2030, %2040
  br label %2042

2042:                                             ; preds = %2042, %2039
  %2043 = phi i64 [ 0, %2039 ], [ %2066, %2042 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2062, %2042 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2063, %2042 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2064, %2042 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2065, %2042 ]
  %2048 = sub i64 %2030, %2043
  %2049 = getelementptr inbounds i32, ptr %11, i64 %2048
  %2050 = getelementptr inbounds i32, ptr %2049, i64 -7
  %2051 = load <8 x i32>, ptr %2050, align 4, !tbaa !5
  %2052 = shufflevector <8 x i32> %2051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2053 = getelementptr inbounds i32, ptr %2049, i64 -15
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !5
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2049, i64 -23
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !5
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2049, i64 -31
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = mul <8 x i32> %2052, %2044
  %2063 = mul <8 x i32> %2055, %2045
  %2064 = mul <8 x i32> %2058, %2046
  %2065 = mul <8 x i32> %2061, %2047
  %2066 = add nuw i64 %2043, 32
  %2067 = icmp eq i64 %2066, %2040
  br i1 %2067, label %2068, label %2042, !llvm.loop !85

2068:                                             ; preds = %2042
  %2069 = mul <8 x i32> %2063, %2062
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2071)
  %2073 = icmp eq i64 %2036, %2040
  br i1 %2073, label %2086, label %2074

2074:                                             ; preds = %2027, %2068
  %2075 = phi i64 [ %2030, %2027 ], [ %2041, %2068 ]
  %2076 = phi i32 [ 1, %2027 ], [ %2072, %2068 ]
  br label %2077

2077:                                             ; preds = %2074, %2077
  %2078 = phi i64 [ %2083, %2077 ], [ %2075, %2074 ]
  %2079 = phi i32 [ %2082, %2077 ], [ %2076, %2074 ]
  %2080 = getelementptr inbounds i32, ptr %11, i64 %2078
  %2081 = load i32, ptr %2080, align 4, !tbaa !5
  %2082 = mul nsw i32 %2081, %2079
  %2083 = add nsw i64 %2078, -1
  %2084 = trunc i64 %2078 to i32
  %2085 = icmp sgt i32 %2084, 0
  br i1 %2085, label %2077, label %2086, !llvm.loop !86

2086:                                             ; preds = %2077, %2068
  %2087 = phi i32 [ %2072, %2068 ], [ %2082, %2077 ]
  %2088 = and i64 %2037, 4294967295
  %2089 = getelementptr inbounds i32, ptr %6, i64 %2088
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = mul nsw i32 %2090, %2087
  %2092 = add nsw i32 %2091, %2031
  %2093 = icmp sgt i64 %2029, 2
  %2094 = add nsw i64 %2030, -1
  %2095 = add i32 %2028, 1
  br i1 %2093, label %2027, label %2096, !llvm.loop !87

2096:                                             ; preds = %2086, %2023
  %2097 = phi i32 [ %2026, %2023 ], [ %2092, %2086 ]
  %2098 = icmp slt i32 %2097, %5
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2096
  %2100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2101:                                             ; preds = %2096
  %2102 = sext i32 %2097 to i64
  %2103 = getelementptr inbounds i8, ptr %1848, i64 %2102
  %2104 = load i8, ptr %2103, align 1, !tbaa !11
  %2105 = zext i8 %2104 to i16
  %2106 = icmp ugt i16 %2024, %2105
  br i1 %2106, label %2107, label %2109

2107:                                             ; preds = %2101
  %2108 = zext i8 %2104 to i16
  store i16 %2108, ptr %1850, align 2, !tbaa !78
  br label %2109

2109:                                             ; preds = %2101, %2107
  %2110 = phi i16 [ %2024, %2101 ], [ %2108, %2107 ]
  %2111 = add nuw nsw i32 %2025, 1
  br i1 %1868, label %2112, label %2162

2112:                                             ; preds = %2109
  %2113 = load i32, ptr %4, align 4, !tbaa !5
  %2114 = load i32, ptr %12, align 4, !tbaa !5
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2113, %2115
  br i1 %2116, label %2139, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp eq i32 %2113, %2115
  br i1 %2118, label %2119, label %2155

2119:                                             ; preds = %2117
  store i32 0, ptr %4, align 4, !tbaa !5
  %2120 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2120, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2162, label %2121

2121:                                             ; preds = %2119, %2149
  %2122 = phi i64 [ %2153, %2149 ], [ 1, %2119 ]
  %2123 = getelementptr inbounds i32, ptr %4, i64 %2122
  %2124 = load i32, ptr %2123, align 4, !tbaa !5
  %2125 = getelementptr inbounds i32, ptr %12, i64 %2122
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2124, %2127
  br i1 %2128, label %2129, label %2147

2129:                                             ; preds = %2121
  br i1 %2116, label %2139, label %2130

2130:                                             ; preds = %2129
  %2131 = shl i64 %2122, 32
  %2132 = add i64 %2131, -4294967296
  %2133 = ashr exact i64 %2132, 32
  %2134 = getelementptr inbounds i32, ptr %7, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !5
  %2136 = getelementptr inbounds i32, ptr %6, i64 %2122
  %2137 = load i32, ptr %2136, align 4, !tbaa !5
  %2138 = add nsw i32 %2137, %2135
  store i32 %2138, ptr %2136, align 4, !tbaa !5
  br label %2157

2139:                                             ; preds = %2112, %2129
  %2140 = phi i32 [ %2124, %2129 ], [ %2113, %2112 ]
  %2141 = phi ptr [ %2123, %2129 ], [ %4, %2112 ]
  %2142 = phi i64 [ %2122, %2129 ], [ 0, %2112 ]
  %2143 = add nsw i32 %2140, 1
  store i32 %2143, ptr %2141, align 4, !tbaa !5
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2145 = load i32, ptr %2144, align 4, !tbaa !5
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2142
  br label %2157

2147:                                             ; preds = %2121
  %2148 = icmp eq i32 %2124, %2127
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2147
  store i32 0, ptr %2123, align 4, !tbaa !5
  %2150 = getelementptr inbounds i32, ptr %8, i64 %2122
  %2151 = load i32, ptr %2150, align 4, !tbaa !5
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2122
  store i32 %2151, ptr %2152, align 4, !tbaa !5
  %2153 = add nuw nsw i64 %2122, 1
  %2154 = icmp eq i64 %2153, %1871
  br i1 %2154, label %2162, label %2121, !llvm.loop !88

2155:                                             ; preds = %2117, %2147
  %2156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2157:                                             ; preds = %2130, %2139
  %2158 = phi ptr [ %2146, %2139 ], [ %2123, %2130 ]
  %2159 = phi i32 [ %2145, %2139 ], [ 1, %2130 ]
  %2160 = load i32, ptr %2158, align 4, !tbaa !5
  %2161 = add nsw i32 %2160, %2159
  store i32 %2161, ptr %2158, align 4, !tbaa !5
  br label %2162

2162:                                             ; preds = %2149, %2157, %2119, %2109
  %2163 = icmp eq i32 %2111, %5
  br i1 %2163, label %5542, label %2023, !llvm.loop !89

2164:                                             ; preds = %1859
  %2165 = getelementptr inbounds i32, ptr %3, i64 %19
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp sgt i32 %5, 0
  br i1 %2167, label %2178, label %2169

2169:                                             ; preds = %2164
  br i1 %2168, label %2170, label %5542

2170:                                             ; preds = %2169
  %2171 = icmp sgt i32 %13, 1
  %2172 = icmp sgt i32 %13, 0
  %2173 = add i32 %13, -2
  %2174 = zext i32 %2173 to i64
  %2175 = zext i32 %13 to i64
  %2176 = add nuw i32 %5, 1
  %2177 = icmp eq i32 %13, 1
  br label %2323

2178:                                             ; preds = %2164
  br i1 %2168, label %2179, label %5542

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2187

2187:                                             ; preds = %2179, %2321
  %2188 = phi i16 [ %1852, %2179 ], [ %2271, %2321 ]
  %2189 = phi i32 [ 0, %2179 ], [ %2273, %2321 ]
  %2190 = phi double [ 0.000000e+00, %2179 ], [ %2272, %2321 ]
  %2191 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2180, label %2192, label %2261

2192:                                             ; preds = %2187, %2251
  %2193 = phi i32 [ %2260, %2251 ], [ 0, %2187 ]
  %2194 = phi i64 [ %2202, %2251 ], [ %2184, %2187 ]
  %2195 = phi i64 [ %2259, %2251 ], [ %2183, %2187 ]
  %2196 = phi i32 [ %2257, %2251 ], [ %2191, %2187 ]
  %2197 = sub i32 %2182, %2193
  %2198 = tail call i32 @llvm.smin.i32(i32 %2197, i32 0)
  %2199 = sub i32 %2197, %2198
  %2200 = zext i32 %2199 to i64
  %2201 = add nuw nsw i64 %2200, 1
  %2202 = add nsw i64 %2194, -1
  %2203 = icmp ult i32 %2199, 31
  br i1 %2203, label %2239, label %2204

2204:                                             ; preds = %2192
  %2205 = and i64 %2201, 8589934560
  %2206 = sub i64 %2195, %2205
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ 0, %2204 ], [ %2231, %2207 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2227, %2207 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2228, %2207 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2229, %2207 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2230, %2207 ]
  %2213 = sub i64 %2195, %2208
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2213
  %2215 = getelementptr inbounds i32, ptr %2214, i64 -7
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2214, i64 -15
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2214, i64 -23
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !5
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2214, i64 -31
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !5
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = mul <8 x i32> %2217, %2209
  %2228 = mul <8 x i32> %2220, %2210
  %2229 = mul <8 x i32> %2223, %2211
  %2230 = mul <8 x i32> %2226, %2212
  %2231 = add nuw i64 %2208, 32
  %2232 = icmp eq i64 %2231, %2205
  br i1 %2232, label %2233, label %2207, !llvm.loop !90

2233:                                             ; preds = %2207
  %2234 = mul <8 x i32> %2228, %2227
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2236)
  %2238 = icmp eq i64 %2201, %2205
  br i1 %2238, label %2251, label %2239

2239:                                             ; preds = %2192, %2233
  %2240 = phi i64 [ %2195, %2192 ], [ %2206, %2233 ]
  %2241 = phi i32 [ 1, %2192 ], [ %2237, %2233 ]
  br label %2242

2242:                                             ; preds = %2239, %2242
  %2243 = phi i64 [ %2248, %2242 ], [ %2240, %2239 ]
  %2244 = phi i32 [ %2247, %2242 ], [ %2241, %2239 ]
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2246 = load i32, ptr %2245, align 4, !tbaa !5
  %2247 = mul nsw i32 %2246, %2244
  %2248 = add nsw i64 %2243, -1
  %2249 = trunc i64 %2243 to i32
  %2250 = icmp sgt i32 %2249, 0
  br i1 %2250, label %2242, label %2251, !llvm.loop !91

2251:                                             ; preds = %2242, %2233
  %2252 = phi i32 [ %2237, %2233 ], [ %2247, %2242 ]
  %2253 = and i64 %2202, 4294967295
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2253
  %2255 = load i32, ptr %2254, align 4, !tbaa !5
  %2256 = mul nsw i32 %2255, %2252
  %2257 = add nsw i32 %2256, %2196
  %2258 = icmp sgt i64 %2194, 2
  %2259 = add nsw i64 %2195, -1
  %2260 = add i32 %2193, 1
  br i1 %2258, label %2192, label %2261, !llvm.loop !92

2261:                                             ; preds = %2251, %2187
  %2262 = phi i32 [ %2191, %2187 ], [ %2257, %2251 ]
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds i8, ptr %1848, i64 %2263
  %2265 = load i8, ptr %2264, align 1, !tbaa !11
  %2266 = zext i8 %2265 to i16
  %2267 = icmp ugt i16 %2188, %2266
  br i1 %2267, label %2268, label %2270

2268:                                             ; preds = %2261
  %2269 = zext i8 %2265 to i16
  store i16 %2269, ptr %1850, align 2, !tbaa !78
  br label %2270

2270:                                             ; preds = %2268, %2261
  %2271 = phi i16 [ %2269, %2268 ], [ %2188, %2261 ]
  %2272 = fadd fast double %2190, 1.000000e+00
  %2273 = add nuw nsw i32 %2189, 1
  br i1 %2181, label %2274, label %2321

2274:                                             ; preds = %2270
  %2275 = load i32, ptr %4, align 4, !tbaa !5
  %2276 = load i32, ptr %12, align 4, !tbaa !5
  %2277 = add nsw i32 %2276, -1
  %2278 = icmp slt i32 %2275, %2277
  br i1 %2278, label %2298, label %2279

2279:                                             ; preds = %2274
  %2280 = icmp eq i32 %2275, %2277
  br i1 %2280, label %2281, label %2314

2281:                                             ; preds = %2279
  store i32 0, ptr %4, align 4, !tbaa !5
  %2282 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2282, ptr %6, align 4, !tbaa !5
  br i1 %2186, label %2321, label %2283

2283:                                             ; preds = %2281, %2308
  %2284 = phi i64 [ %2312, %2308 ], [ 1, %2281 ]
  %2285 = getelementptr inbounds i32, ptr %4, i64 %2284
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = getelementptr inbounds i32, ptr %12, i64 %2284
  %2288 = load i32, ptr %2287, align 4, !tbaa !5
  %2289 = add nsw i32 %2288, -1
  %2290 = icmp slt i32 %2286, %2289
  br i1 %2290, label %2291, label %2306

2291:                                             ; preds = %2283
  br i1 %2278, label %2298, label %2292

2292:                                             ; preds = %2291
  %2293 = getelementptr inbounds i32, ptr %7, i64 %2284
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = getelementptr inbounds i32, ptr %6, i64 %2284
  %2296 = load i32, ptr %2295, align 4, !tbaa !5
  %2297 = add nsw i32 %2296, %2294
  store i32 %2297, ptr %2295, align 4, !tbaa !5
  br label %2316

2298:                                             ; preds = %2274, %2291
  %2299 = phi i32 [ %2286, %2291 ], [ %2275, %2274 ]
  %2300 = phi ptr [ %2285, %2291 ], [ %4, %2274 ]
  %2301 = phi i64 [ %2284, %2291 ], [ 0, %2274 ]
  %2302 = add nsw i32 %2299, 1
  store i32 %2302, ptr %2300, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %7, i64 %2301
  %2304 = load i32, ptr %2303, align 4, !tbaa !5
  %2305 = getelementptr inbounds i32, ptr %6, i64 %2301
  br label %2316

2306:                                             ; preds = %2283
  %2307 = icmp eq i32 %2286, %2289
  br i1 %2307, label %2308, label %2314

2308:                                             ; preds = %2306
  store i32 0, ptr %2285, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %8, i64 %2284
  %2310 = load i32, ptr %2309, align 4, !tbaa !5
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2284
  store i32 %2310, ptr %2311, align 4, !tbaa !5
  %2312 = add nuw nsw i64 %2284, 1
  %2313 = icmp eq i64 %2312, %2184
  br i1 %2313, label %2321, label %2283, !llvm.loop !93

2314:                                             ; preds = %2279, %2306
  %2315 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2316:                                             ; preds = %2292, %2298
  %2317 = phi ptr [ %2305, %2298 ], [ %2285, %2292 ]
  %2318 = phi i32 [ %2304, %2298 ], [ 1, %2292 ]
  %2319 = load i32, ptr %2317, align 4, !tbaa !5
  %2320 = add nsw i32 %2319, %2318
  store i32 %2320, ptr %2317, align 4, !tbaa !5
  br label %2321

2321:                                             ; preds = %2308, %2316, %2281, %2270
  %2322 = icmp eq i32 %2273, %5
  br i1 %2322, label %5542, label %2187, !llvm.loop !94

2323:                                             ; preds = %2170, %2462
  %2324 = phi i16 [ %1852, %2170 ], [ %2410, %2462 ]
  %2325 = phi i32 [ 0, %2170 ], [ %2411, %2462 ]
  %2326 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2171, label %2327, label %2396

2327:                                             ; preds = %2323, %2386
  %2328 = phi i32 [ %2395, %2386 ], [ 0, %2323 ]
  %2329 = phi i64 [ %2337, %2386 ], [ %2175, %2323 ]
  %2330 = phi i64 [ %2394, %2386 ], [ %2174, %2323 ]
  %2331 = phi i32 [ %2392, %2386 ], [ %2326, %2323 ]
  %2332 = sub i32 %2173, %2328
  %2333 = tail call i32 @llvm.smin.i32(i32 %2332, i32 0)
  %2334 = sub i32 %2332, %2333
  %2335 = zext i32 %2334 to i64
  %2336 = add nuw nsw i64 %2335, 1
  %2337 = add nsw i64 %2329, -1
  %2338 = icmp ult i32 %2334, 31
  br i1 %2338, label %2374, label %2339

2339:                                             ; preds = %2327
  %2340 = and i64 %2336, 8589934560
  %2341 = sub i64 %2330, %2340
  br label %2342

2342:                                             ; preds = %2342, %2339
  %2343 = phi i64 [ 0, %2339 ], [ %2366, %2342 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2362, %2342 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2363, %2342 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2364, %2342 ]
  %2347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2365, %2342 ]
  %2348 = sub i64 %2330, %2343
  %2349 = getelementptr inbounds i32, ptr %11, i64 %2348
  %2350 = getelementptr inbounds i32, ptr %2349, i64 -7
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !5
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = getelementptr inbounds i32, ptr %2349, i64 -15
  %2354 = load <8 x i32>, ptr %2353, align 4, !tbaa !5
  %2355 = shufflevector <8 x i32> %2354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2356 = getelementptr inbounds i32, ptr %2349, i64 -23
  %2357 = load <8 x i32>, ptr %2356, align 4, !tbaa !5
  %2358 = shufflevector <8 x i32> %2357, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2359 = getelementptr inbounds i32, ptr %2349, i64 -31
  %2360 = load <8 x i32>, ptr %2359, align 4, !tbaa !5
  %2361 = shufflevector <8 x i32> %2360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2362 = mul <8 x i32> %2352, %2344
  %2363 = mul <8 x i32> %2355, %2345
  %2364 = mul <8 x i32> %2358, %2346
  %2365 = mul <8 x i32> %2361, %2347
  %2366 = add nuw i64 %2343, 32
  %2367 = icmp eq i64 %2366, %2340
  br i1 %2367, label %2368, label %2342, !llvm.loop !95

2368:                                             ; preds = %2342
  %2369 = mul <8 x i32> %2363, %2362
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = mul <8 x i32> %2365, %2370
  %2372 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2371)
  %2373 = icmp eq i64 %2336, %2340
  br i1 %2373, label %2386, label %2374

2374:                                             ; preds = %2327, %2368
  %2375 = phi i64 [ %2330, %2327 ], [ %2341, %2368 ]
  %2376 = phi i32 [ 1, %2327 ], [ %2372, %2368 ]
  br label %2377

2377:                                             ; preds = %2374, %2377
  %2378 = phi i64 [ %2383, %2377 ], [ %2375, %2374 ]
  %2379 = phi i32 [ %2382, %2377 ], [ %2376, %2374 ]
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2378
  %2381 = load i32, ptr %2380, align 4, !tbaa !5
  %2382 = mul nsw i32 %2381, %2379
  %2383 = add nsw i64 %2378, -1
  %2384 = trunc i64 %2378 to i32
  %2385 = icmp sgt i32 %2384, 0
  br i1 %2385, label %2377, label %2386, !llvm.loop !96

2386:                                             ; preds = %2377, %2368
  %2387 = phi i32 [ %2372, %2368 ], [ %2382, %2377 ]
  %2388 = and i64 %2337, 4294967295
  %2389 = getelementptr inbounds i32, ptr %6, i64 %2388
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = mul nsw i32 %2390, %2387
  %2392 = add nsw i32 %2391, %2331
  %2393 = icmp sgt i64 %2329, 2
  %2394 = add nsw i64 %2330, -1
  %2395 = add i32 %2328, 1
  br i1 %2393, label %2327, label %2396, !llvm.loop !97

2396:                                             ; preds = %2386, %2323
  %2397 = phi i32 [ %2326, %2323 ], [ %2392, %2386 ]
  %2398 = icmp slt i32 %2397, %5
  br i1 %2398, label %2401, label %2399

2399:                                             ; preds = %2396
  %2400 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2401:                                             ; preds = %2396
  %2402 = sext i32 %2397 to i64
  %2403 = getelementptr inbounds i8, ptr %1848, i64 %2402
  %2404 = load i8, ptr %2403, align 1, !tbaa !11
  %2405 = zext i8 %2404 to i16
  %2406 = icmp ugt i16 %2324, %2405
  br i1 %2406, label %2407, label %2409

2407:                                             ; preds = %2401
  %2408 = zext i8 %2404 to i16
  store i16 %2408, ptr %1850, align 2, !tbaa !78
  br label %2409

2409:                                             ; preds = %2407, %2401
  %2410 = phi i16 [ %2408, %2407 ], [ %2324, %2401 ]
  %2411 = add nuw nsw i32 %2325, 1
  br i1 %2172, label %2412, label %2462

2412:                                             ; preds = %2409
  %2413 = load i32, ptr %4, align 4, !tbaa !5
  %2414 = load i32, ptr %12, align 4, !tbaa !5
  %2415 = add nsw i32 %2414, -1
  %2416 = icmp slt i32 %2413, %2415
  br i1 %2416, label %2439, label %2417

2417:                                             ; preds = %2412
  %2418 = icmp eq i32 %2413, %2415
  br i1 %2418, label %2419, label %2455

2419:                                             ; preds = %2417
  store i32 0, ptr %4, align 4, !tbaa !5
  %2420 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2420, ptr %6, align 4, !tbaa !5
  br i1 %2177, label %2462, label %2421

2421:                                             ; preds = %2419, %2449
  %2422 = phi i64 [ %2453, %2449 ], [ 1, %2419 ]
  %2423 = getelementptr inbounds i32, ptr %4, i64 %2422
  %2424 = load i32, ptr %2423, align 4, !tbaa !5
  %2425 = getelementptr inbounds i32, ptr %12, i64 %2422
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = add nsw i32 %2426, -1
  %2428 = icmp slt i32 %2424, %2427
  br i1 %2428, label %2429, label %2447

2429:                                             ; preds = %2421
  br i1 %2416, label %2439, label %2430

2430:                                             ; preds = %2429
  %2431 = shl i64 %2422, 32
  %2432 = add i64 %2431, -4294967296
  %2433 = ashr exact i64 %2432, 32
  %2434 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !5
  %2436 = getelementptr inbounds i32, ptr %6, i64 %2422
  %2437 = load i32, ptr %2436, align 4, !tbaa !5
  %2438 = add nsw i32 %2437, %2435
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  br label %2457

2439:                                             ; preds = %2412, %2429
  %2440 = phi i32 [ %2424, %2429 ], [ %2413, %2412 ]
  %2441 = phi ptr [ %2423, %2429 ], [ %4, %2412 ]
  %2442 = phi i64 [ %2422, %2429 ], [ 0, %2412 ]
  %2443 = add nsw i32 %2440, 1
  store i32 %2443, ptr %2441, align 4, !tbaa !5
  %2444 = getelementptr inbounds i32, ptr %7, i64 %2442
  %2445 = load i32, ptr %2444, align 4, !tbaa !5
  %2446 = getelementptr inbounds i32, ptr %6, i64 %2442
  br label %2457

2447:                                             ; preds = %2421
  %2448 = icmp eq i32 %2424, %2427
  br i1 %2448, label %2449, label %2455

2449:                                             ; preds = %2447
  store i32 0, ptr %2423, align 4, !tbaa !5
  %2450 = getelementptr inbounds i32, ptr %8, i64 %2422
  %2451 = load i32, ptr %2450, align 4, !tbaa !5
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2422
  store i32 %2451, ptr %2452, align 4, !tbaa !5
  %2453 = add nuw nsw i64 %2422, 1
  %2454 = icmp eq i64 %2453, %2175
  br i1 %2454, label %2462, label %2421, !llvm.loop !98

2455:                                             ; preds = %2417, %2447
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2457:                                             ; preds = %2430, %2439
  %2458 = phi ptr [ %2446, %2439 ], [ %2423, %2430 ]
  %2459 = phi i32 [ %2445, %2439 ], [ 1, %2430 ]
  %2460 = load i32, ptr %2458, align 4, !tbaa !5
  %2461 = add nsw i32 %2460, %2459
  store i32 %2461, ptr %2458, align 4, !tbaa !5
  br label %2462

2462:                                             ; preds = %2449, %2457, %2419, %2409
  %2463 = icmp eq i32 %2411, %5
  br i1 %2463, label %5542, label %2323, !llvm.loop !99

2464:                                             ; preds = %1859
  %2465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

2466:                                             ; preds = %18
  %2467 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !9
  %2469 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2470 = load ptr, ptr %2469, align 8, !tbaa !9
  %2471 = load i8, ptr %2468, align 1, !tbaa !11
  %2472 = zext i8 %2471 to i32
  store i32 %2472, ptr %2470, align 4, !tbaa !5
  %2473 = icmp eq i32 %13, 0
  br i1 %2473, label %2474, label %2479

2474:                                             ; preds = %2466
  %2475 = load i8, ptr %2468, align 1, !tbaa !11
  %2476 = icmp ugt i8 %2471, %2475
  br i1 %2476, label %2477, label %5542

2477:                                             ; preds = %2474
  %2478 = zext i8 %2475 to i32
  store i32 %2478, ptr %2470, align 4, !tbaa !5
  br label %5542

2479:                                             ; preds = %2466
  switch i32 %1, label %3076 [
    i32 1, label %2480
    i32 0, label %2780
  ]

2480:                                             ; preds = %2479
  %2481 = getelementptr inbounds i32, ptr %3, i64 %19
  %2482 = load i32, ptr %2481, align 4, !tbaa !5
  %2483 = icmp eq i32 %2482, 0
  %2484 = icmp sgt i32 %5, 0
  br i1 %2483, label %2494, label %2485

2485:                                             ; preds = %2480
  br i1 %2484, label %2486, label %5542

2486:                                             ; preds = %2485
  %2487 = icmp sgt i32 %13, 1
  %2488 = icmp sgt i32 %13, 0
  %2489 = add i32 %13, -2
  %2490 = zext i32 %2489 to i64
  %2491 = zext i32 %13 to i64
  %2492 = add nuw i32 %5, 1
  %2493 = icmp eq i32 %13, 1
  br label %2641

2494:                                             ; preds = %2480
  br i1 %2484, label %2495, label %5542

2495:                                             ; preds = %2494
  %2496 = icmp sgt i32 %13, 1
  %2497 = icmp sgt i32 %13, 0
  %2498 = add i32 %13, -2
  %2499 = zext i32 %2498 to i64
  %2500 = zext i32 %13 to i64
  %2501 = add nuw i32 %5, 1
  %2502 = icmp eq i32 %13, 1
  br label %2503

2503:                                             ; preds = %2495, %2639
  %2504 = phi i32 [ 0, %2495 ], [ %2591, %2639 ]
  %2505 = phi double [ 0.000000e+00, %2495 ], [ %2590, %2639 ]
  %2506 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2496, label %2507, label %2576

2507:                                             ; preds = %2503, %2566
  %2508 = phi i32 [ %2575, %2566 ], [ 0, %2503 ]
  %2509 = phi i64 [ %2517, %2566 ], [ %2500, %2503 ]
  %2510 = phi i64 [ %2574, %2566 ], [ %2499, %2503 ]
  %2511 = phi i32 [ %2572, %2566 ], [ %2506, %2503 ]
  %2512 = sub i32 %2498, %2508
  %2513 = tail call i32 @llvm.smin.i32(i32 %2512, i32 0)
  %2514 = sub i32 %2512, %2513
  %2515 = zext i32 %2514 to i64
  %2516 = add nuw nsw i64 %2515, 1
  %2517 = add nsw i64 %2509, -1
  %2518 = icmp ult i32 %2514, 31
  br i1 %2518, label %2554, label %2519

2519:                                             ; preds = %2507
  %2520 = and i64 %2516, 8589934560
  %2521 = sub i64 %2510, %2520
  br label %2522

2522:                                             ; preds = %2522, %2519
  %2523 = phi i64 [ 0, %2519 ], [ %2546, %2522 ]
  %2524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2542, %2522 ]
  %2525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2543, %2522 ]
  %2526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2544, %2522 ]
  %2527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2545, %2522 ]
  %2528 = sub i64 %2510, %2523
  %2529 = getelementptr inbounds i32, ptr %9, i64 %2528
  %2530 = getelementptr inbounds i32, ptr %2529, i64 -7
  %2531 = load <8 x i32>, ptr %2530, align 4, !tbaa !5
  %2532 = shufflevector <8 x i32> %2531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2533 = getelementptr inbounds i32, ptr %2529, i64 -15
  %2534 = load <8 x i32>, ptr %2533, align 4, !tbaa !5
  %2535 = shufflevector <8 x i32> %2534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2536 = getelementptr inbounds i32, ptr %2529, i64 -23
  %2537 = load <8 x i32>, ptr %2536, align 4, !tbaa !5
  %2538 = shufflevector <8 x i32> %2537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2539 = getelementptr inbounds i32, ptr %2529, i64 -31
  %2540 = load <8 x i32>, ptr %2539, align 4, !tbaa !5
  %2541 = shufflevector <8 x i32> %2540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2542 = mul <8 x i32> %2532, %2524
  %2543 = mul <8 x i32> %2535, %2525
  %2544 = mul <8 x i32> %2538, %2526
  %2545 = mul <8 x i32> %2541, %2527
  %2546 = add nuw i64 %2523, 32
  %2547 = icmp eq i64 %2546, %2520
  br i1 %2547, label %2548, label %2522, !llvm.loop !100

2548:                                             ; preds = %2522
  %2549 = mul <8 x i32> %2543, %2542
  %2550 = mul <8 x i32> %2544, %2549
  %2551 = mul <8 x i32> %2545, %2550
  %2552 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2551)
  %2553 = icmp eq i64 %2516, %2520
  br i1 %2553, label %2566, label %2554

2554:                                             ; preds = %2507, %2548
  %2555 = phi i64 [ %2510, %2507 ], [ %2521, %2548 ]
  %2556 = phi i32 [ 1, %2507 ], [ %2552, %2548 ]
  br label %2557

2557:                                             ; preds = %2554, %2557
  %2558 = phi i64 [ %2563, %2557 ], [ %2555, %2554 ]
  %2559 = phi i32 [ %2562, %2557 ], [ %2556, %2554 ]
  %2560 = getelementptr inbounds i32, ptr %9, i64 %2558
  %2561 = load i32, ptr %2560, align 4, !tbaa !5
  %2562 = mul nsw i32 %2561, %2559
  %2563 = add nsw i64 %2558, -1
  %2564 = trunc i64 %2558 to i32
  %2565 = icmp sgt i32 %2564, 0
  br i1 %2565, label %2557, label %2566, !llvm.loop !101

2566:                                             ; preds = %2557, %2548
  %2567 = phi i32 [ %2552, %2548 ], [ %2562, %2557 ]
  %2568 = and i64 %2517, 4294967295
  %2569 = getelementptr inbounds i32, ptr %6, i64 %2568
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = mul nsw i32 %2570, %2567
  %2572 = add nsw i32 %2571, %2511
  %2573 = icmp sgt i64 %2509, 2
  %2574 = add nsw i64 %2510, -1
  %2575 = add i32 %2508, 1
  br i1 %2573, label %2507, label %2576, !llvm.loop !102

2576:                                             ; preds = %2566, %2503
  %2577 = phi i32 [ %2506, %2503 ], [ %2572, %2566 ]
  %2578 = sext i32 %2577 to i64
  %2579 = getelementptr inbounds double, ptr %2, i64 %2578
  %2580 = load double, ptr %2579, align 8, !tbaa !18
  %2581 = getelementptr inbounds i8, ptr %2468, i64 %2578
  %2582 = load i8, ptr %2581, align 1, !tbaa !11
  %2583 = zext i8 %2582 to i32
  %2584 = fcmp fast ueq double %2580, 0.000000e+00
  br i1 %2584, label %2589, label %2585

2585:                                             ; preds = %2576
  %2586 = load i32, ptr %2470, align 4, !tbaa !5
  %2587 = icmp sgt i32 %2586, %2583
  br i1 %2587, label %2588, label %2589

2588:                                             ; preds = %2585
  store i32 %2583, ptr %2470, align 4, !tbaa !5
  br label %2589

2589:                                             ; preds = %2585, %2588, %2576
  %2590 = fadd fast double %2580, %2505
  %2591 = add nuw nsw i32 %2504, 1
  br i1 %2497, label %2592, label %2639

2592:                                             ; preds = %2589
  %2593 = load i32, ptr %4, align 4, !tbaa !5
  %2594 = load i32, ptr %12, align 4, !tbaa !5
  %2595 = add nsw i32 %2594, -1
  %2596 = icmp slt i32 %2593, %2595
  br i1 %2596, label %2616, label %2597

2597:                                             ; preds = %2592
  %2598 = icmp eq i32 %2593, %2595
  br i1 %2598, label %2599, label %2632

2599:                                             ; preds = %2597
  store i32 0, ptr %4, align 4, !tbaa !5
  %2600 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2600, ptr %6, align 4, !tbaa !5
  br i1 %2502, label %2639, label %2601

2601:                                             ; preds = %2599, %2626
  %2602 = phi i64 [ %2630, %2626 ], [ 1, %2599 ]
  %2603 = getelementptr inbounds i32, ptr %4, i64 %2602
  %2604 = load i32, ptr %2603, align 4, !tbaa !5
  %2605 = getelementptr inbounds i32, ptr %12, i64 %2602
  %2606 = load i32, ptr %2605, align 4, !tbaa !5
  %2607 = add nsw i32 %2606, -1
  %2608 = icmp slt i32 %2604, %2607
  br i1 %2608, label %2609, label %2624

2609:                                             ; preds = %2601
  br i1 %2596, label %2616, label %2610

2610:                                             ; preds = %2609
  %2611 = getelementptr inbounds i32, ptr %7, i64 %2602
  %2612 = load i32, ptr %2611, align 4, !tbaa !5
  %2613 = getelementptr inbounds i32, ptr %6, i64 %2602
  %2614 = load i32, ptr %2613, align 4, !tbaa !5
  %2615 = add nsw i32 %2614, %2612
  store i32 %2615, ptr %2613, align 4, !tbaa !5
  br label %2634

2616:                                             ; preds = %2592, %2609
  %2617 = phi i32 [ %2604, %2609 ], [ %2593, %2592 ]
  %2618 = phi ptr [ %2603, %2609 ], [ %4, %2592 ]
  %2619 = phi i64 [ %2602, %2609 ], [ 0, %2592 ]
  %2620 = add nsw i32 %2617, 1
  store i32 %2620, ptr %2618, align 4, !tbaa !5
  %2621 = getelementptr inbounds i32, ptr %7, i64 %2619
  %2622 = load i32, ptr %2621, align 4, !tbaa !5
  %2623 = getelementptr inbounds i32, ptr %6, i64 %2619
  br label %2634

2624:                                             ; preds = %2601
  %2625 = icmp eq i32 %2604, %2607
  br i1 %2625, label %2626, label %2632

2626:                                             ; preds = %2624
  store i32 0, ptr %2603, align 4, !tbaa !5
  %2627 = getelementptr inbounds i32, ptr %8, i64 %2602
  %2628 = load i32, ptr %2627, align 4, !tbaa !5
  %2629 = getelementptr inbounds i32, ptr %6, i64 %2602
  store i32 %2628, ptr %2629, align 4, !tbaa !5
  %2630 = add nuw nsw i64 %2602, 1
  %2631 = icmp eq i64 %2630, %2500
  br i1 %2631, label %2639, label %2601, !llvm.loop !103

2632:                                             ; preds = %2597, %2624
  %2633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2634:                                             ; preds = %2610, %2616
  %2635 = phi ptr [ %2623, %2616 ], [ %2603, %2610 ]
  %2636 = phi i32 [ %2622, %2616 ], [ 1, %2610 ]
  %2637 = load i32, ptr %2635, align 4, !tbaa !5
  %2638 = add nsw i32 %2637, %2636
  store i32 %2638, ptr %2635, align 4, !tbaa !5
  br label %2639

2639:                                             ; preds = %2626, %2634, %2599, %2589
  %2640 = icmp eq i32 %2591, %5
  br i1 %2640, label %5542, label %2503, !llvm.loop !104

2641:                                             ; preds = %2486, %2778
  %2642 = phi i32 [ 0, %2486 ], [ %2727, %2778 ]
  %2643 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2487, label %2644, label %2713

2644:                                             ; preds = %2641, %2703
  %2645 = phi i32 [ %2712, %2703 ], [ 0, %2641 ]
  %2646 = phi i64 [ %2654, %2703 ], [ %2491, %2641 ]
  %2647 = phi i64 [ %2711, %2703 ], [ %2490, %2641 ]
  %2648 = phi i32 [ %2709, %2703 ], [ %2643, %2641 ]
  %2649 = sub i32 %2489, %2645
  %2650 = tail call i32 @llvm.smin.i32(i32 %2649, i32 0)
  %2651 = sub i32 %2649, %2650
  %2652 = zext i32 %2651 to i64
  %2653 = add nuw nsw i64 %2652, 1
  %2654 = add nsw i64 %2646, -1
  %2655 = icmp ult i32 %2651, 31
  br i1 %2655, label %2691, label %2656

2656:                                             ; preds = %2644
  %2657 = and i64 %2653, 8589934560
  %2658 = sub i64 %2647, %2657
  br label %2659

2659:                                             ; preds = %2659, %2656
  %2660 = phi i64 [ 0, %2656 ], [ %2683, %2659 ]
  %2661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2679, %2659 ]
  %2662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2680, %2659 ]
  %2663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2681, %2659 ]
  %2664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2682, %2659 ]
  %2665 = sub i64 %2647, %2660
  %2666 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2667 = getelementptr inbounds i32, ptr %2666, i64 -7
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !5
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = getelementptr inbounds i32, ptr %2666, i64 -15
  %2671 = load <8 x i32>, ptr %2670, align 4, !tbaa !5
  %2672 = shufflevector <8 x i32> %2671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2673 = getelementptr inbounds i32, ptr %2666, i64 -23
  %2674 = load <8 x i32>, ptr %2673, align 4, !tbaa !5
  %2675 = shufflevector <8 x i32> %2674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2676 = getelementptr inbounds i32, ptr %2666, i64 -31
  %2677 = load <8 x i32>, ptr %2676, align 4, !tbaa !5
  %2678 = shufflevector <8 x i32> %2677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2679 = mul <8 x i32> %2669, %2661
  %2680 = mul <8 x i32> %2672, %2662
  %2681 = mul <8 x i32> %2675, %2663
  %2682 = mul <8 x i32> %2678, %2664
  %2683 = add nuw i64 %2660, 32
  %2684 = icmp eq i64 %2683, %2657
  br i1 %2684, label %2685, label %2659, !llvm.loop !105

2685:                                             ; preds = %2659
  %2686 = mul <8 x i32> %2680, %2679
  %2687 = mul <8 x i32> %2681, %2686
  %2688 = mul <8 x i32> %2682, %2687
  %2689 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2688)
  %2690 = icmp eq i64 %2653, %2657
  br i1 %2690, label %2703, label %2691

2691:                                             ; preds = %2644, %2685
  %2692 = phi i64 [ %2647, %2644 ], [ %2658, %2685 ]
  %2693 = phi i32 [ 1, %2644 ], [ %2689, %2685 ]
  br label %2694

2694:                                             ; preds = %2691, %2694
  %2695 = phi i64 [ %2700, %2694 ], [ %2692, %2691 ]
  %2696 = phi i32 [ %2699, %2694 ], [ %2693, %2691 ]
  %2697 = getelementptr inbounds i32, ptr %11, i64 %2695
  %2698 = load i32, ptr %2697, align 4, !tbaa !5
  %2699 = mul nsw i32 %2698, %2696
  %2700 = add nsw i64 %2695, -1
  %2701 = trunc i64 %2695 to i32
  %2702 = icmp sgt i32 %2701, 0
  br i1 %2702, label %2694, label %2703, !llvm.loop !106

2703:                                             ; preds = %2694, %2685
  %2704 = phi i32 [ %2689, %2685 ], [ %2699, %2694 ]
  %2705 = and i64 %2654, 4294967295
  %2706 = getelementptr inbounds i32, ptr %6, i64 %2705
  %2707 = load i32, ptr %2706, align 4, !tbaa !5
  %2708 = mul nsw i32 %2707, %2704
  %2709 = add nsw i32 %2708, %2648
  %2710 = icmp sgt i64 %2646, 2
  %2711 = add nsw i64 %2647, -1
  %2712 = add i32 %2645, 1
  br i1 %2710, label %2644, label %2713, !llvm.loop !107

2713:                                             ; preds = %2703, %2641
  %2714 = phi i32 [ %2643, %2641 ], [ %2709, %2703 ]
  %2715 = icmp slt i32 %2714, %5
  br i1 %2715, label %2718, label %2716

2716:                                             ; preds = %2713
  %2717 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2718:                                             ; preds = %2713
  %2719 = sext i32 %2714 to i64
  %2720 = getelementptr inbounds i8, ptr %2468, i64 %2719
  %2721 = load i8, ptr %2720, align 1, !tbaa !11
  %2722 = zext i8 %2721 to i32
  %2723 = load i32, ptr %2470, align 4, !tbaa !5
  %2724 = icmp sgt i32 %2723, %2722
  br i1 %2724, label %2725, label %2726

2725:                                             ; preds = %2718
  store i32 %2722, ptr %2470, align 4, !tbaa !5
  br label %2726

2726:                                             ; preds = %2718, %2725
  %2727 = add nuw nsw i32 %2642, 1
  br i1 %2488, label %2728, label %2778

2728:                                             ; preds = %2726
  %2729 = load i32, ptr %4, align 4, !tbaa !5
  %2730 = load i32, ptr %12, align 4, !tbaa !5
  %2731 = add nsw i32 %2730, -1
  %2732 = icmp slt i32 %2729, %2731
  br i1 %2732, label %2755, label %2733

2733:                                             ; preds = %2728
  %2734 = icmp eq i32 %2729, %2731
  br i1 %2734, label %2735, label %2771

2735:                                             ; preds = %2733
  store i32 0, ptr %4, align 4, !tbaa !5
  %2736 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2736, ptr %6, align 4, !tbaa !5
  br i1 %2493, label %2778, label %2737

2737:                                             ; preds = %2735, %2765
  %2738 = phi i64 [ %2769, %2765 ], [ 1, %2735 ]
  %2739 = getelementptr inbounds i32, ptr %4, i64 %2738
  %2740 = load i32, ptr %2739, align 4, !tbaa !5
  %2741 = getelementptr inbounds i32, ptr %12, i64 %2738
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = add nsw i32 %2742, -1
  %2744 = icmp slt i32 %2740, %2743
  br i1 %2744, label %2745, label %2763

2745:                                             ; preds = %2737
  br i1 %2732, label %2755, label %2746

2746:                                             ; preds = %2745
  %2747 = shl i64 %2738, 32
  %2748 = add i64 %2747, -4294967296
  %2749 = ashr exact i64 %2748, 32
  %2750 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %6, i64 %2738
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = add nsw i32 %2753, %2751
  store i32 %2754, ptr %2752, align 4, !tbaa !5
  br label %2773

2755:                                             ; preds = %2728, %2745
  %2756 = phi i32 [ %2740, %2745 ], [ %2729, %2728 ]
  %2757 = phi ptr [ %2739, %2745 ], [ %4, %2728 ]
  %2758 = phi i64 [ %2738, %2745 ], [ 0, %2728 ]
  %2759 = add nsw i32 %2756, 1
  store i32 %2759, ptr %2757, align 4, !tbaa !5
  %2760 = getelementptr inbounds i32, ptr %7, i64 %2758
  %2761 = load i32, ptr %2760, align 4, !tbaa !5
  %2762 = getelementptr inbounds i32, ptr %6, i64 %2758
  br label %2773

2763:                                             ; preds = %2737
  %2764 = icmp eq i32 %2740, %2743
  br i1 %2764, label %2765, label %2771

2765:                                             ; preds = %2763
  store i32 0, ptr %2739, align 4, !tbaa !5
  %2766 = getelementptr inbounds i32, ptr %8, i64 %2738
  %2767 = load i32, ptr %2766, align 4, !tbaa !5
  %2768 = getelementptr inbounds i32, ptr %6, i64 %2738
  store i32 %2767, ptr %2768, align 4, !tbaa !5
  %2769 = add nuw nsw i64 %2738, 1
  %2770 = icmp eq i64 %2769, %2491
  br i1 %2770, label %2778, label %2737, !llvm.loop !108

2771:                                             ; preds = %2733, %2763
  %2772 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2773:                                             ; preds = %2746, %2755
  %2774 = phi ptr [ %2762, %2755 ], [ %2739, %2746 ]
  %2775 = phi i32 [ %2761, %2755 ], [ 1, %2746 ]
  %2776 = load i32, ptr %2774, align 4, !tbaa !5
  %2777 = add nsw i32 %2776, %2775
  store i32 %2777, ptr %2774, align 4, !tbaa !5
  br label %2778

2778:                                             ; preds = %2765, %2773, %2735, %2726
  %2779 = icmp eq i32 %2727, %5
  br i1 %2779, label %5542, label %2641, !llvm.loop !109

2780:                                             ; preds = %2479
  %2781 = getelementptr inbounds i32, ptr %3, i64 %19
  %2782 = load i32, ptr %2781, align 4, !tbaa !5
  %2783 = icmp eq i32 %2782, 0
  %2784 = icmp sgt i32 %5, 0
  br i1 %2783, label %2794, label %2785

2785:                                             ; preds = %2780
  br i1 %2784, label %2786, label %5542

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2937

2794:                                             ; preds = %2780
  br i1 %2784, label %2795, label %5542

2795:                                             ; preds = %2794
  %2796 = icmp sgt i32 %13, 1
  %2797 = icmp sgt i32 %13, 0
  %2798 = add i32 %13, -2
  %2799 = zext i32 %2798 to i64
  %2800 = zext i32 %13 to i64
  %2801 = add nuw i32 %5, 1
  %2802 = icmp eq i32 %13, 1
  br label %2803

2803:                                             ; preds = %2795, %2935
  %2804 = phi i32 [ 0, %2795 ], [ %2887, %2935 ]
  %2805 = phi double [ 0.000000e+00, %2795 ], [ %2886, %2935 ]
  %2806 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2796, label %2807, label %2876

2807:                                             ; preds = %2803, %2866
  %2808 = phi i32 [ %2875, %2866 ], [ 0, %2803 ]
  %2809 = phi i64 [ %2817, %2866 ], [ %2800, %2803 ]
  %2810 = phi i64 [ %2874, %2866 ], [ %2799, %2803 ]
  %2811 = phi i32 [ %2872, %2866 ], [ %2806, %2803 ]
  %2812 = sub i32 %2798, %2808
  %2813 = tail call i32 @llvm.smin.i32(i32 %2812, i32 0)
  %2814 = sub i32 %2812, %2813
  %2815 = zext i32 %2814 to i64
  %2816 = add nuw nsw i64 %2815, 1
  %2817 = add nsw i64 %2809, -1
  %2818 = icmp ult i32 %2814, 31
  br i1 %2818, label %2854, label %2819

2819:                                             ; preds = %2807
  %2820 = and i64 %2816, 8589934560
  %2821 = sub i64 %2810, %2820
  br label %2822

2822:                                             ; preds = %2822, %2819
  %2823 = phi i64 [ 0, %2819 ], [ %2846, %2822 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2842, %2822 ]
  %2825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2843, %2822 ]
  %2826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2844, %2822 ]
  %2827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2845, %2822 ]
  %2828 = sub i64 %2810, %2823
  %2829 = getelementptr inbounds i32, ptr %9, i64 %2828
  %2830 = getelementptr inbounds i32, ptr %2829, i64 -7
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2829, i64 -15
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !5
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2829, i64 -23
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = getelementptr inbounds i32, ptr %2829, i64 -31
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !5
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = mul <8 x i32> %2832, %2824
  %2843 = mul <8 x i32> %2835, %2825
  %2844 = mul <8 x i32> %2838, %2826
  %2845 = mul <8 x i32> %2841, %2827
  %2846 = add nuw i64 %2823, 32
  %2847 = icmp eq i64 %2846, %2820
  br i1 %2847, label %2848, label %2822, !llvm.loop !110

2848:                                             ; preds = %2822
  %2849 = mul <8 x i32> %2843, %2842
  %2850 = mul <8 x i32> %2844, %2849
  %2851 = mul <8 x i32> %2845, %2850
  %2852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2851)
  %2853 = icmp eq i64 %2816, %2820
  br i1 %2853, label %2866, label %2854

2854:                                             ; preds = %2807, %2848
  %2855 = phi i64 [ %2810, %2807 ], [ %2821, %2848 ]
  %2856 = phi i32 [ 1, %2807 ], [ %2852, %2848 ]
  br label %2857

2857:                                             ; preds = %2854, %2857
  %2858 = phi i64 [ %2863, %2857 ], [ %2855, %2854 ]
  %2859 = phi i32 [ %2862, %2857 ], [ %2856, %2854 ]
  %2860 = getelementptr inbounds i32, ptr %9, i64 %2858
  %2861 = load i32, ptr %2860, align 4, !tbaa !5
  %2862 = mul nsw i32 %2861, %2859
  %2863 = add nsw i64 %2858, -1
  %2864 = trunc i64 %2858 to i32
  %2865 = icmp sgt i32 %2864, 0
  br i1 %2865, label %2857, label %2866, !llvm.loop !111

2866:                                             ; preds = %2857, %2848
  %2867 = phi i32 [ %2852, %2848 ], [ %2862, %2857 ]
  %2868 = and i64 %2817, 4294967295
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2868
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = mul nsw i32 %2870, %2867
  %2872 = add nsw i32 %2871, %2811
  %2873 = icmp sgt i64 %2809, 2
  %2874 = add nsw i64 %2810, -1
  %2875 = add i32 %2808, 1
  br i1 %2873, label %2807, label %2876, !llvm.loop !112

2876:                                             ; preds = %2866, %2803
  %2877 = phi i32 [ %2806, %2803 ], [ %2872, %2866 ]
  %2878 = sext i32 %2877 to i64
  %2879 = getelementptr inbounds i8, ptr %2468, i64 %2878
  %2880 = load i8, ptr %2879, align 1, !tbaa !11
  %2881 = zext i8 %2880 to i32
  %2882 = load i32, ptr %2470, align 4, !tbaa !5
  %2883 = icmp sgt i32 %2882, %2881
  br i1 %2883, label %2884, label %2885

2884:                                             ; preds = %2876
  store i32 %2881, ptr %2470, align 4, !tbaa !5
  br label %2885

2885:                                             ; preds = %2884, %2876
  %2886 = fadd fast double %2805, 1.000000e+00
  %2887 = add nuw nsw i32 %2804, 1
  br i1 %2797, label %2888, label %2935

2888:                                             ; preds = %2885
  %2889 = load i32, ptr %4, align 4, !tbaa !5
  %2890 = load i32, ptr %12, align 4, !tbaa !5
  %2891 = add nsw i32 %2890, -1
  %2892 = icmp slt i32 %2889, %2891
  br i1 %2892, label %2912, label %2893

2893:                                             ; preds = %2888
  %2894 = icmp eq i32 %2889, %2891
  br i1 %2894, label %2895, label %2928

2895:                                             ; preds = %2893
  store i32 0, ptr %4, align 4, !tbaa !5
  %2896 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2896, ptr %6, align 4, !tbaa !5
  br i1 %2802, label %2935, label %2897

2897:                                             ; preds = %2895, %2922
  %2898 = phi i64 [ %2926, %2922 ], [ 1, %2895 ]
  %2899 = getelementptr inbounds i32, ptr %4, i64 %2898
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = getelementptr inbounds i32, ptr %12, i64 %2898
  %2902 = load i32, ptr %2901, align 4, !tbaa !5
  %2903 = add nsw i32 %2902, -1
  %2904 = icmp slt i32 %2900, %2903
  br i1 %2904, label %2905, label %2920

2905:                                             ; preds = %2897
  br i1 %2892, label %2912, label %2906

2906:                                             ; preds = %2905
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2898
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2898
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = add nsw i32 %2910, %2908
  store i32 %2911, ptr %2909, align 4, !tbaa !5
  br label %2930

2912:                                             ; preds = %2888, %2905
  %2913 = phi i32 [ %2900, %2905 ], [ %2889, %2888 ]
  %2914 = phi ptr [ %2899, %2905 ], [ %4, %2888 ]
  %2915 = phi i64 [ %2898, %2905 ], [ 0, %2888 ]
  %2916 = add nsw i32 %2913, 1
  store i32 %2916, ptr %2914, align 4, !tbaa !5
  %2917 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2918 = load i32, ptr %2917, align 4, !tbaa !5
  %2919 = getelementptr inbounds i32, ptr %6, i64 %2915
  br label %2930

2920:                                             ; preds = %2897
  %2921 = icmp eq i32 %2900, %2903
  br i1 %2921, label %2922, label %2928

2922:                                             ; preds = %2920
  store i32 0, ptr %2899, align 4, !tbaa !5
  %2923 = getelementptr inbounds i32, ptr %8, i64 %2898
  %2924 = load i32, ptr %2923, align 4, !tbaa !5
  %2925 = getelementptr inbounds i32, ptr %6, i64 %2898
  store i32 %2924, ptr %2925, align 4, !tbaa !5
  %2926 = add nuw nsw i64 %2898, 1
  %2927 = icmp eq i64 %2926, %2800
  br i1 %2927, label %2935, label %2897, !llvm.loop !113

2928:                                             ; preds = %2893, %2920
  %2929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2930:                                             ; preds = %2906, %2912
  %2931 = phi ptr [ %2919, %2912 ], [ %2899, %2906 ]
  %2932 = phi i32 [ %2918, %2912 ], [ 1, %2906 ]
  %2933 = load i32, ptr %2931, align 4, !tbaa !5
  %2934 = add nsw i32 %2933, %2932
  store i32 %2934, ptr %2931, align 4, !tbaa !5
  br label %2935

2935:                                             ; preds = %2922, %2930, %2895, %2885
  %2936 = icmp eq i32 %2887, %5
  br i1 %2936, label %5542, label %2803, !llvm.loop !114

2937:                                             ; preds = %2786, %3074
  %2938 = phi i32 [ 0, %2786 ], [ %3023, %3074 ]
  %2939 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2787, label %2940, label %3009

2940:                                             ; preds = %2937, %2999
  %2941 = phi i32 [ %3008, %2999 ], [ 0, %2937 ]
  %2942 = phi i64 [ %2950, %2999 ], [ %2791, %2937 ]
  %2943 = phi i64 [ %3007, %2999 ], [ %2790, %2937 ]
  %2944 = phi i32 [ %3005, %2999 ], [ %2939, %2937 ]
  %2945 = sub i32 %2789, %2941
  %2946 = tail call i32 @llvm.smin.i32(i32 %2945, i32 0)
  %2947 = sub i32 %2945, %2946
  %2948 = zext i32 %2947 to i64
  %2949 = add nuw nsw i64 %2948, 1
  %2950 = add nsw i64 %2942, -1
  %2951 = icmp ult i32 %2947, 31
  br i1 %2951, label %2987, label %2952

2952:                                             ; preds = %2940
  %2953 = and i64 %2949, 8589934560
  %2954 = sub i64 %2943, %2953
  br label %2955

2955:                                             ; preds = %2955, %2952
  %2956 = phi i64 [ 0, %2952 ], [ %2979, %2955 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2975, %2955 ]
  %2958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2976, %2955 ]
  %2959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2977, %2955 ]
  %2960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2978, %2955 ]
  %2961 = sub i64 %2943, %2956
  %2962 = getelementptr inbounds i32, ptr %11, i64 %2961
  %2963 = getelementptr inbounds i32, ptr %2962, i64 -7
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !5
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2962, i64 -15
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !5
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2962, i64 -23
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !5
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = getelementptr inbounds i32, ptr %2962, i64 -31
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !5
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = mul <8 x i32> %2965, %2957
  %2976 = mul <8 x i32> %2968, %2958
  %2977 = mul <8 x i32> %2971, %2959
  %2978 = mul <8 x i32> %2974, %2960
  %2979 = add nuw i64 %2956, 32
  %2980 = icmp eq i64 %2979, %2953
  br i1 %2980, label %2981, label %2955, !llvm.loop !115

2981:                                             ; preds = %2955
  %2982 = mul <8 x i32> %2976, %2975
  %2983 = mul <8 x i32> %2977, %2982
  %2984 = mul <8 x i32> %2978, %2983
  %2985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2984)
  %2986 = icmp eq i64 %2949, %2953
  br i1 %2986, label %2999, label %2987

2987:                                             ; preds = %2940, %2981
  %2988 = phi i64 [ %2943, %2940 ], [ %2954, %2981 ]
  %2989 = phi i32 [ 1, %2940 ], [ %2985, %2981 ]
  br label %2990

2990:                                             ; preds = %2987, %2990
  %2991 = phi i64 [ %2996, %2990 ], [ %2988, %2987 ]
  %2992 = phi i32 [ %2995, %2990 ], [ %2989, %2987 ]
  %2993 = getelementptr inbounds i32, ptr %11, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = mul nsw i32 %2994, %2992
  %2996 = add nsw i64 %2991, -1
  %2997 = trunc i64 %2991 to i32
  %2998 = icmp sgt i32 %2997, 0
  br i1 %2998, label %2990, label %2999, !llvm.loop !116

2999:                                             ; preds = %2990, %2981
  %3000 = phi i32 [ %2985, %2981 ], [ %2995, %2990 ]
  %3001 = and i64 %2950, 4294967295
  %3002 = getelementptr inbounds i32, ptr %6, i64 %3001
  %3003 = load i32, ptr %3002, align 4, !tbaa !5
  %3004 = mul nsw i32 %3003, %3000
  %3005 = add nsw i32 %3004, %2944
  %3006 = icmp sgt i64 %2942, 2
  %3007 = add nsw i64 %2943, -1
  %3008 = add i32 %2941, 1
  br i1 %3006, label %2940, label %3009, !llvm.loop !117

3009:                                             ; preds = %2999, %2937
  %3010 = phi i32 [ %2939, %2937 ], [ %3005, %2999 ]
  %3011 = icmp slt i32 %3010, %5
  br i1 %3011, label %3014, label %3012

3012:                                             ; preds = %3009
  %3013 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3014:                                             ; preds = %3009
  %3015 = sext i32 %3010 to i64
  %3016 = getelementptr inbounds i8, ptr %2468, i64 %3015
  %3017 = load i8, ptr %3016, align 1, !tbaa !11
  %3018 = zext i8 %3017 to i32
  %3019 = load i32, ptr %2470, align 4, !tbaa !5
  %3020 = icmp sgt i32 %3019, %3018
  br i1 %3020, label %3021, label %3022

3021:                                             ; preds = %3014
  store i32 %3018, ptr %2470, align 4, !tbaa !5
  br label %3022

3022:                                             ; preds = %3021, %3014
  %3023 = add nuw nsw i32 %2938, 1
  br i1 %2788, label %3024, label %3074

3024:                                             ; preds = %3022
  %3025 = load i32, ptr %4, align 4, !tbaa !5
  %3026 = load i32, ptr %12, align 4, !tbaa !5
  %3027 = add nsw i32 %3026, -1
  %3028 = icmp slt i32 %3025, %3027
  br i1 %3028, label %3051, label %3029

3029:                                             ; preds = %3024
  %3030 = icmp eq i32 %3025, %3027
  br i1 %3030, label %3031, label %3067

3031:                                             ; preds = %3029
  store i32 0, ptr %4, align 4, !tbaa !5
  %3032 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3032, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %3074, label %3033

3033:                                             ; preds = %3031, %3061
  %3034 = phi i64 [ %3065, %3061 ], [ 1, %3031 ]
  %3035 = getelementptr inbounds i32, ptr %4, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %12, i64 %3034
  %3038 = load i32, ptr %3037, align 4, !tbaa !5
  %3039 = add nsw i32 %3038, -1
  %3040 = icmp slt i32 %3036, %3039
  br i1 %3040, label %3041, label %3059

3041:                                             ; preds = %3033
  br i1 %3028, label %3051, label %3042

3042:                                             ; preds = %3041
  %3043 = shl i64 %3034, 32
  %3044 = add i64 %3043, -4294967296
  %3045 = ashr exact i64 %3044, 32
  %3046 = getelementptr inbounds i32, ptr %7, i64 %3045
  %3047 = load i32, ptr %3046, align 4, !tbaa !5
  %3048 = getelementptr inbounds i32, ptr %6, i64 %3034
  %3049 = load i32, ptr %3048, align 4, !tbaa !5
  %3050 = add nsw i32 %3049, %3047
  store i32 %3050, ptr %3048, align 4, !tbaa !5
  br label %3069

3051:                                             ; preds = %3024, %3041
  %3052 = phi i32 [ %3036, %3041 ], [ %3025, %3024 ]
  %3053 = phi ptr [ %3035, %3041 ], [ %4, %3024 ]
  %3054 = phi i64 [ %3034, %3041 ], [ 0, %3024 ]
  %3055 = add nsw i32 %3052, 1
  store i32 %3055, ptr %3053, align 4, !tbaa !5
  %3056 = getelementptr inbounds i32, ptr %7, i64 %3054
  %3057 = load i32, ptr %3056, align 4, !tbaa !5
  %3058 = getelementptr inbounds i32, ptr %6, i64 %3054
  br label %3069

3059:                                             ; preds = %3033
  %3060 = icmp eq i32 %3036, %3039
  br i1 %3060, label %3061, label %3067

3061:                                             ; preds = %3059
  store i32 0, ptr %3035, align 4, !tbaa !5
  %3062 = getelementptr inbounds i32, ptr %8, i64 %3034
  %3063 = load i32, ptr %3062, align 4, !tbaa !5
  %3064 = getelementptr inbounds i32, ptr %6, i64 %3034
  store i32 %3063, ptr %3064, align 4, !tbaa !5
  %3065 = add nuw nsw i64 %3034, 1
  %3066 = icmp eq i64 %3065, %2791
  br i1 %3066, label %3074, label %3033, !llvm.loop !118

3067:                                             ; preds = %3029, %3059
  %3068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3069:                                             ; preds = %3042, %3051
  %3070 = phi ptr [ %3058, %3051 ], [ %3035, %3042 ]
  %3071 = phi i32 [ %3057, %3051 ], [ 1, %3042 ]
  %3072 = load i32, ptr %3070, align 4, !tbaa !5
  %3073 = add nsw i32 %3072, %3071
  store i32 %3073, ptr %3070, align 4, !tbaa !5
  br label %3074

3074:                                             ; preds = %3061, %3069, %3031, %3022
  %3075 = icmp eq i32 %3023, %5
  br i1 %3075, label %5542, label %2937, !llvm.loop !119

3076:                                             ; preds = %2479
  %3077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

3078:                                             ; preds = %18
  %3079 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3080 = load ptr, ptr %3079, align 8, !tbaa !9
  %3081 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3082 = load ptr, ptr %3081, align 8, !tbaa !9
  %3083 = load i8, ptr %3080, align 1, !tbaa !11
  %3084 = zext i8 %3083 to i64
  store i64 %3084, ptr %3082, align 8, !tbaa !120
  %3085 = icmp eq i32 %13, 0
  br i1 %3085, label %3086, label %3091

3086:                                             ; preds = %3078
  %3087 = load i8, ptr %3080, align 1, !tbaa !11
  %3088 = icmp ugt i8 %3083, %3087
  br i1 %3088, label %3089, label %5542

3089:                                             ; preds = %3086
  %3090 = zext i8 %3087 to i64
  store i64 %3090, ptr %3082, align 8, !tbaa !120
  br label %5542

3091:                                             ; preds = %3078
  switch i32 %1, label %3692 [
    i32 1, label %3092
    i32 0, label %3394
  ]

3092:                                             ; preds = %3091
  %3093 = getelementptr inbounds i32, ptr %3, i64 %19
  %3094 = load i32, ptr %3093, align 4, !tbaa !5
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp sgt i32 %5, 0
  br i1 %3095, label %3106, label %3097

3097:                                             ; preds = %3092
  br i1 %3096, label %3098, label %5542

3098:                                             ; preds = %3097
  %3099 = icmp sgt i32 %13, 1
  %3100 = icmp sgt i32 %13, 0
  %3101 = add i32 %13, -2
  %3102 = zext i32 %3101 to i64
  %3103 = zext i32 %13 to i64
  %3104 = add nuw i32 %5, 1
  %3105 = icmp eq i32 %13, 1
  br label %3254

3106:                                             ; preds = %3092
  br i1 %3096, label %3107, label %5542

3107:                                             ; preds = %3106
  %3108 = icmp sgt i32 %13, 1
  %3109 = icmp sgt i32 %13, 0
  %3110 = add i32 %13, -2
  %3111 = zext i32 %3110 to i64
  %3112 = zext i32 %13 to i64
  %3113 = add nuw i32 %5, 1
  %3114 = icmp eq i32 %13, 1
  br label %3115

3115:                                             ; preds = %3107, %3252
  %3116 = phi i64 [ %3084, %3107 ], [ %3202, %3252 ]
  %3117 = phi i32 [ 0, %3107 ], [ %3204, %3252 ]
  %3118 = phi double [ 0.000000e+00, %3107 ], [ %3203, %3252 ]
  %3119 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3108, label %3120, label %3189

3120:                                             ; preds = %3115, %3179
  %3121 = phi i32 [ %3188, %3179 ], [ 0, %3115 ]
  %3122 = phi i64 [ %3130, %3179 ], [ %3112, %3115 ]
  %3123 = phi i64 [ %3187, %3179 ], [ %3111, %3115 ]
  %3124 = phi i32 [ %3185, %3179 ], [ %3119, %3115 ]
  %3125 = sub i32 %3110, %3121
  %3126 = tail call i32 @llvm.smin.i32(i32 %3125, i32 0)
  %3127 = sub i32 %3125, %3126
  %3128 = zext i32 %3127 to i64
  %3129 = add nuw nsw i64 %3128, 1
  %3130 = add nsw i64 %3122, -1
  %3131 = icmp ult i32 %3127, 31
  br i1 %3131, label %3167, label %3132

3132:                                             ; preds = %3120
  %3133 = and i64 %3129, 8589934560
  %3134 = sub i64 %3123, %3133
  br label %3135

3135:                                             ; preds = %3135, %3132
  %3136 = phi i64 [ 0, %3132 ], [ %3159, %3135 ]
  %3137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3155, %3135 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3156, %3135 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3157, %3135 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3158, %3135 ]
  %3141 = sub i64 %3123, %3136
  %3142 = getelementptr inbounds i32, ptr %9, i64 %3141
  %3143 = getelementptr inbounds i32, ptr %3142, i64 -7
  %3144 = load <8 x i32>, ptr %3143, align 4, !tbaa !5
  %3145 = shufflevector <8 x i32> %3144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3146 = getelementptr inbounds i32, ptr %3142, i64 -15
  %3147 = load <8 x i32>, ptr %3146, align 4, !tbaa !5
  %3148 = shufflevector <8 x i32> %3147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3149 = getelementptr inbounds i32, ptr %3142, i64 -23
  %3150 = load <8 x i32>, ptr %3149, align 4, !tbaa !5
  %3151 = shufflevector <8 x i32> %3150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3152 = getelementptr inbounds i32, ptr %3142, i64 -31
  %3153 = load <8 x i32>, ptr %3152, align 4, !tbaa !5
  %3154 = shufflevector <8 x i32> %3153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3155 = mul <8 x i32> %3145, %3137
  %3156 = mul <8 x i32> %3148, %3138
  %3157 = mul <8 x i32> %3151, %3139
  %3158 = mul <8 x i32> %3154, %3140
  %3159 = add nuw i64 %3136, 32
  %3160 = icmp eq i64 %3159, %3133
  br i1 %3160, label %3161, label %3135, !llvm.loop !122

3161:                                             ; preds = %3135
  %3162 = mul <8 x i32> %3156, %3155
  %3163 = mul <8 x i32> %3157, %3162
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3164)
  %3166 = icmp eq i64 %3129, %3133
  br i1 %3166, label %3179, label %3167

3167:                                             ; preds = %3120, %3161
  %3168 = phi i64 [ %3123, %3120 ], [ %3134, %3161 ]
  %3169 = phi i32 [ 1, %3120 ], [ %3165, %3161 ]
  br label %3170

3170:                                             ; preds = %3167, %3170
  %3171 = phi i64 [ %3176, %3170 ], [ %3168, %3167 ]
  %3172 = phi i32 [ %3175, %3170 ], [ %3169, %3167 ]
  %3173 = getelementptr inbounds i32, ptr %9, i64 %3171
  %3174 = load i32, ptr %3173, align 4, !tbaa !5
  %3175 = mul nsw i32 %3174, %3172
  %3176 = add nsw i64 %3171, -1
  %3177 = trunc i64 %3171 to i32
  %3178 = icmp sgt i32 %3177, 0
  br i1 %3178, label %3170, label %3179, !llvm.loop !123

3179:                                             ; preds = %3170, %3161
  %3180 = phi i32 [ %3165, %3161 ], [ %3175, %3170 ]
  %3181 = and i64 %3130, 4294967295
  %3182 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = mul nsw i32 %3183, %3180
  %3185 = add nsw i32 %3184, %3124
  %3186 = icmp sgt i64 %3122, 2
  %3187 = add nsw i64 %3123, -1
  %3188 = add i32 %3121, 1
  br i1 %3186, label %3120, label %3189, !llvm.loop !124

3189:                                             ; preds = %3179, %3115
  %3190 = phi i32 [ %3119, %3115 ], [ %3185, %3179 ]
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds double, ptr %2, i64 %3191
  %3193 = load double, ptr %3192, align 8, !tbaa !18
  %3194 = getelementptr inbounds i8, ptr %3080, i64 %3191
  %3195 = load i8, ptr %3194, align 1, !tbaa !11
  %3196 = zext i8 %3195 to i64
  %3197 = fcmp fast one double %3193, 0.000000e+00
  %3198 = icmp sgt i64 %3116, %3196
  %3199 = select i1 %3197, i1 %3198, i1 false
  br i1 %3199, label %3200, label %3201

3200:                                             ; preds = %3189
  store i64 %3196, ptr %3082, align 8, !tbaa !120
  br label %3201

3201:                                             ; preds = %3200, %3189
  %3202 = phi i64 [ %3196, %3200 ], [ %3116, %3189 ]
  %3203 = fadd fast double %3193, %3118
  %3204 = add nuw nsw i32 %3117, 1
  br i1 %3109, label %3205, label %3252

3205:                                             ; preds = %3201
  %3206 = load i32, ptr %4, align 4, !tbaa !5
  %3207 = load i32, ptr %12, align 4, !tbaa !5
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3206, %3208
  br i1 %3209, label %3229, label %3210

3210:                                             ; preds = %3205
  %3211 = icmp eq i32 %3206, %3208
  br i1 %3211, label %3212, label %3245

3212:                                             ; preds = %3210
  store i32 0, ptr %4, align 4, !tbaa !5
  %3213 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3213, ptr %6, align 4, !tbaa !5
  br i1 %3114, label %3252, label %3214

3214:                                             ; preds = %3212, %3239
  %3215 = phi i64 [ %3243, %3239 ], [ 1, %3212 ]
  %3216 = getelementptr inbounds i32, ptr %4, i64 %3215
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %12, i64 %3215
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, -1
  %3221 = icmp slt i32 %3217, %3220
  br i1 %3221, label %3222, label %3237

3222:                                             ; preds = %3214
  br i1 %3209, label %3229, label %3223

3223:                                             ; preds = %3222
  %3224 = getelementptr inbounds i32, ptr %7, i64 %3215
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3215
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = add nsw i32 %3227, %3225
  store i32 %3228, ptr %3226, align 4, !tbaa !5
  br label %3247

3229:                                             ; preds = %3205, %3222
  %3230 = phi i32 [ %3217, %3222 ], [ %3206, %3205 ]
  %3231 = phi ptr [ %3216, %3222 ], [ %4, %3205 ]
  %3232 = phi i64 [ %3215, %3222 ], [ 0, %3205 ]
  %3233 = add nsw i32 %3230, 1
  store i32 %3233, ptr %3231, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %7, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3232
  br label %3247

3237:                                             ; preds = %3214
  %3238 = icmp eq i32 %3217, %3220
  br i1 %3238, label %3239, label %3245

3239:                                             ; preds = %3237
  store i32 0, ptr %3216, align 4, !tbaa !5
  %3240 = getelementptr inbounds i32, ptr %8, i64 %3215
  %3241 = load i32, ptr %3240, align 4, !tbaa !5
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3215
  store i32 %3241, ptr %3242, align 4, !tbaa !5
  %3243 = add nuw nsw i64 %3215, 1
  %3244 = icmp eq i64 %3243, %3112
  br i1 %3244, label %3252, label %3214, !llvm.loop !125

3245:                                             ; preds = %3210, %3237
  %3246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3247:                                             ; preds = %3223, %3229
  %3248 = phi ptr [ %3236, %3229 ], [ %3216, %3223 ]
  %3249 = phi i32 [ %3235, %3229 ], [ 1, %3223 ]
  %3250 = load i32, ptr %3248, align 4, !tbaa !5
  %3251 = add nsw i32 %3250, %3249
  store i32 %3251, ptr %3248, align 4, !tbaa !5
  br label %3252

3252:                                             ; preds = %3239, %3247, %3212, %3201
  %3253 = icmp eq i32 %3204, %5
  br i1 %3253, label %5542, label %3115, !llvm.loop !126

3254:                                             ; preds = %3098, %3392
  %3255 = phi i64 [ %3084, %3098 ], [ %3340, %3392 ]
  %3256 = phi i32 [ 0, %3098 ], [ %3341, %3392 ]
  %3257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3258, label %3327

3258:                                             ; preds = %3254, %3317
  %3259 = phi i32 [ %3326, %3317 ], [ 0, %3254 ]
  %3260 = phi i64 [ %3268, %3317 ], [ %3103, %3254 ]
  %3261 = phi i64 [ %3325, %3317 ], [ %3102, %3254 ]
  %3262 = phi i32 [ %3323, %3317 ], [ %3257, %3254 ]
  %3263 = sub i32 %3101, %3259
  %3264 = tail call i32 @llvm.smin.i32(i32 %3263, i32 0)
  %3265 = sub i32 %3263, %3264
  %3266 = zext i32 %3265 to i64
  %3267 = add nuw nsw i64 %3266, 1
  %3268 = add nsw i64 %3260, -1
  %3269 = icmp ult i32 %3265, 31
  br i1 %3269, label %3305, label %3270

3270:                                             ; preds = %3258
  %3271 = and i64 %3267, 8589934560
  %3272 = sub i64 %3261, %3271
  br label %3273

3273:                                             ; preds = %3273, %3270
  %3274 = phi i64 [ 0, %3270 ], [ %3297, %3273 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3293, %3273 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3294, %3273 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3295, %3273 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3296, %3273 ]
  %3279 = sub i64 %3261, %3274
  %3280 = getelementptr inbounds i32, ptr %11, i64 %3279
  %3281 = getelementptr inbounds i32, ptr %3280, i64 -7
  %3282 = load <8 x i32>, ptr %3281, align 4, !tbaa !5
  %3283 = shufflevector <8 x i32> %3282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3284 = getelementptr inbounds i32, ptr %3280, i64 -15
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3280, i64 -23
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !5
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3280, i64 -31
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !5
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = mul <8 x i32> %3283, %3275
  %3294 = mul <8 x i32> %3286, %3276
  %3295 = mul <8 x i32> %3289, %3277
  %3296 = mul <8 x i32> %3292, %3278
  %3297 = add nuw i64 %3274, 32
  %3298 = icmp eq i64 %3297, %3271
  br i1 %3298, label %3299, label %3273, !llvm.loop !127

3299:                                             ; preds = %3273
  %3300 = mul <8 x i32> %3294, %3293
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = mul <8 x i32> %3296, %3301
  %3303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3302)
  %3304 = icmp eq i64 %3267, %3271
  br i1 %3304, label %3317, label %3305

3305:                                             ; preds = %3258, %3299
  %3306 = phi i64 [ %3261, %3258 ], [ %3272, %3299 ]
  %3307 = phi i32 [ 1, %3258 ], [ %3303, %3299 ]
  br label %3308

3308:                                             ; preds = %3305, %3308
  %3309 = phi i64 [ %3314, %3308 ], [ %3306, %3305 ]
  %3310 = phi i32 [ %3313, %3308 ], [ %3307, %3305 ]
  %3311 = getelementptr inbounds i32, ptr %11, i64 %3309
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = mul nsw i32 %3312, %3310
  %3314 = add nsw i64 %3309, -1
  %3315 = trunc i64 %3309 to i32
  %3316 = icmp sgt i32 %3315, 0
  br i1 %3316, label %3308, label %3317, !llvm.loop !128

3317:                                             ; preds = %3308, %3299
  %3318 = phi i32 [ %3303, %3299 ], [ %3313, %3308 ]
  %3319 = and i64 %3268, 4294967295
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3319
  %3321 = load i32, ptr %3320, align 4, !tbaa !5
  %3322 = mul nsw i32 %3321, %3318
  %3323 = add nsw i32 %3322, %3262
  %3324 = icmp sgt i64 %3260, 2
  %3325 = add nsw i64 %3261, -1
  %3326 = add i32 %3259, 1
  br i1 %3324, label %3258, label %3327, !llvm.loop !129

3327:                                             ; preds = %3317, %3254
  %3328 = phi i32 [ %3257, %3254 ], [ %3323, %3317 ]
  %3329 = icmp slt i32 %3328, %5
  br i1 %3329, label %3332, label %3330

3330:                                             ; preds = %3327
  %3331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3332:                                             ; preds = %3327
  %3333 = sext i32 %3328 to i64
  %3334 = getelementptr inbounds i8, ptr %3080, i64 %3333
  %3335 = load i8, ptr %3334, align 1, !tbaa !11
  %3336 = zext i8 %3335 to i64
  %3337 = icmp sgt i64 %3255, %3336
  br i1 %3337, label %3338, label %3339

3338:                                             ; preds = %3332
  store i64 %3336, ptr %3082, align 8, !tbaa !120
  br label %3339

3339:                                             ; preds = %3332, %3338
  %3340 = phi i64 [ %3255, %3332 ], [ %3336, %3338 ]
  %3341 = add nuw nsw i32 %3256, 1
  br i1 %3100, label %3342, label %3392

3342:                                             ; preds = %3339
  %3343 = load i32, ptr %4, align 4, !tbaa !5
  %3344 = load i32, ptr %12, align 4, !tbaa !5
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3343, %3345
  br i1 %3346, label %3369, label %3347

3347:                                             ; preds = %3342
  %3348 = icmp eq i32 %3343, %3345
  br i1 %3348, label %3349, label %3385

3349:                                             ; preds = %3347
  store i32 0, ptr %4, align 4, !tbaa !5
  %3350 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3350, ptr %6, align 4, !tbaa !5
  br i1 %3105, label %3392, label %3351

3351:                                             ; preds = %3349, %3379
  %3352 = phi i64 [ %3383, %3379 ], [ 1, %3349 ]
  %3353 = getelementptr inbounds i32, ptr %4, i64 %3352
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = getelementptr inbounds i32, ptr %12, i64 %3352
  %3356 = load i32, ptr %3355, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3354, %3357
  br i1 %3358, label %3359, label %3377

3359:                                             ; preds = %3351
  br i1 %3346, label %3369, label %3360

3360:                                             ; preds = %3359
  %3361 = shl i64 %3352, 32
  %3362 = add i64 %3361, -4294967296
  %3363 = ashr exact i64 %3362, 32
  %3364 = getelementptr inbounds i32, ptr %7, i64 %3363
  %3365 = load i32, ptr %3364, align 4, !tbaa !5
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3352
  %3367 = load i32, ptr %3366, align 4, !tbaa !5
  %3368 = add nsw i32 %3367, %3365
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  br label %3387

3369:                                             ; preds = %3342, %3359
  %3370 = phi i32 [ %3354, %3359 ], [ %3343, %3342 ]
  %3371 = phi ptr [ %3353, %3359 ], [ %4, %3342 ]
  %3372 = phi i64 [ %3352, %3359 ], [ 0, %3342 ]
  %3373 = add nsw i32 %3370, 1
  store i32 %3373, ptr %3371, align 4, !tbaa !5
  %3374 = getelementptr inbounds i32, ptr %7, i64 %3372
  %3375 = load i32, ptr %3374, align 4, !tbaa !5
  %3376 = getelementptr inbounds i32, ptr %6, i64 %3372
  br label %3387

3377:                                             ; preds = %3351
  %3378 = icmp eq i32 %3354, %3357
  br i1 %3378, label %3379, label %3385

3379:                                             ; preds = %3377
  store i32 0, ptr %3353, align 4, !tbaa !5
  %3380 = getelementptr inbounds i32, ptr %8, i64 %3352
  %3381 = load i32, ptr %3380, align 4, !tbaa !5
  %3382 = getelementptr inbounds i32, ptr %6, i64 %3352
  store i32 %3381, ptr %3382, align 4, !tbaa !5
  %3383 = add nuw nsw i64 %3352, 1
  %3384 = icmp eq i64 %3383, %3103
  br i1 %3384, label %3392, label %3351, !llvm.loop !130

3385:                                             ; preds = %3347, %3377
  %3386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3387:                                             ; preds = %3360, %3369
  %3388 = phi ptr [ %3376, %3369 ], [ %3353, %3360 ]
  %3389 = phi i32 [ %3375, %3369 ], [ 1, %3360 ]
  %3390 = load i32, ptr %3388, align 4, !tbaa !5
  %3391 = add nsw i32 %3390, %3389
  store i32 %3391, ptr %3388, align 4, !tbaa !5
  br label %3392

3392:                                             ; preds = %3379, %3387, %3349, %3339
  %3393 = icmp eq i32 %3341, %5
  br i1 %3393, label %5542, label %3254, !llvm.loop !131

3394:                                             ; preds = %3091
  %3395 = getelementptr inbounds i32, ptr %3, i64 %19
  %3396 = load i32, ptr %3395, align 4, !tbaa !5
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp sgt i32 %5, 0
  br i1 %3397, label %3408, label %3399

3399:                                             ; preds = %3394
  br i1 %3398, label %3400, label %5542

3400:                                             ; preds = %3399
  %3401 = icmp sgt i32 %13, 1
  %3402 = icmp sgt i32 %13, 0
  %3403 = add i32 %13, -2
  %3404 = zext i32 %3403 to i64
  %3405 = zext i32 %13 to i64
  %3406 = add nuw i32 %5, 1
  %3407 = icmp eq i32 %13, 1
  br label %3552

3408:                                             ; preds = %3394
  br i1 %3398, label %3409, label %5542

3409:                                             ; preds = %3408
  %3410 = icmp sgt i32 %13, 1
  %3411 = icmp sgt i32 %13, 0
  %3412 = add i32 %13, -2
  %3413 = zext i32 %3412 to i64
  %3414 = zext i32 %13 to i64
  %3415 = add nuw i32 %5, 1
  %3416 = icmp eq i32 %13, 1
  br label %3417

3417:                                             ; preds = %3409, %3550
  %3418 = phi i64 [ %3084, %3409 ], [ %3500, %3550 ]
  %3419 = phi i32 [ 0, %3409 ], [ %3502, %3550 ]
  %3420 = phi double [ 0.000000e+00, %3409 ], [ %3501, %3550 ]
  %3421 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3410, label %3422, label %3491

3422:                                             ; preds = %3417, %3481
  %3423 = phi i32 [ %3490, %3481 ], [ 0, %3417 ]
  %3424 = phi i64 [ %3432, %3481 ], [ %3414, %3417 ]
  %3425 = phi i64 [ %3489, %3481 ], [ %3413, %3417 ]
  %3426 = phi i32 [ %3487, %3481 ], [ %3421, %3417 ]
  %3427 = sub i32 %3412, %3423
  %3428 = tail call i32 @llvm.smin.i32(i32 %3427, i32 0)
  %3429 = sub i32 %3427, %3428
  %3430 = zext i32 %3429 to i64
  %3431 = add nuw nsw i64 %3430, 1
  %3432 = add nsw i64 %3424, -1
  %3433 = icmp ult i32 %3429, 31
  br i1 %3433, label %3469, label %3434

3434:                                             ; preds = %3422
  %3435 = and i64 %3431, 8589934560
  %3436 = sub i64 %3425, %3435
  br label %3437

3437:                                             ; preds = %3437, %3434
  %3438 = phi i64 [ 0, %3434 ], [ %3461, %3437 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3457, %3437 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3458, %3437 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3459, %3437 ]
  %3442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3460, %3437 ]
  %3443 = sub i64 %3425, %3438
  %3444 = getelementptr inbounds i32, ptr %9, i64 %3443
  %3445 = getelementptr inbounds i32, ptr %3444, i64 -7
  %3446 = load <8 x i32>, ptr %3445, align 4, !tbaa !5
  %3447 = shufflevector <8 x i32> %3446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3448 = getelementptr inbounds i32, ptr %3444, i64 -15
  %3449 = load <8 x i32>, ptr %3448, align 4, !tbaa !5
  %3450 = shufflevector <8 x i32> %3449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3451 = getelementptr inbounds i32, ptr %3444, i64 -23
  %3452 = load <8 x i32>, ptr %3451, align 4, !tbaa !5
  %3453 = shufflevector <8 x i32> %3452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3454 = getelementptr inbounds i32, ptr %3444, i64 -31
  %3455 = load <8 x i32>, ptr %3454, align 4, !tbaa !5
  %3456 = shufflevector <8 x i32> %3455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3457 = mul <8 x i32> %3447, %3439
  %3458 = mul <8 x i32> %3450, %3440
  %3459 = mul <8 x i32> %3453, %3441
  %3460 = mul <8 x i32> %3456, %3442
  %3461 = add nuw i64 %3438, 32
  %3462 = icmp eq i64 %3461, %3435
  br i1 %3462, label %3463, label %3437, !llvm.loop !132

3463:                                             ; preds = %3437
  %3464 = mul <8 x i32> %3458, %3457
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = mul <8 x i32> %3460, %3465
  %3467 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3466)
  %3468 = icmp eq i64 %3431, %3435
  br i1 %3468, label %3481, label %3469

3469:                                             ; preds = %3422, %3463
  %3470 = phi i64 [ %3425, %3422 ], [ %3436, %3463 ]
  %3471 = phi i32 [ 1, %3422 ], [ %3467, %3463 ]
  br label %3472

3472:                                             ; preds = %3469, %3472
  %3473 = phi i64 [ %3478, %3472 ], [ %3470, %3469 ]
  %3474 = phi i32 [ %3477, %3472 ], [ %3471, %3469 ]
  %3475 = getelementptr inbounds i32, ptr %9, i64 %3473
  %3476 = load i32, ptr %3475, align 4, !tbaa !5
  %3477 = mul nsw i32 %3476, %3474
  %3478 = add nsw i64 %3473, -1
  %3479 = trunc i64 %3473 to i32
  %3480 = icmp sgt i32 %3479, 0
  br i1 %3480, label %3472, label %3481, !llvm.loop !133

3481:                                             ; preds = %3472, %3463
  %3482 = phi i32 [ %3467, %3463 ], [ %3477, %3472 ]
  %3483 = and i64 %3432, 4294967295
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3483
  %3485 = load i32, ptr %3484, align 4, !tbaa !5
  %3486 = mul nsw i32 %3485, %3482
  %3487 = add nsw i32 %3486, %3426
  %3488 = icmp sgt i64 %3424, 2
  %3489 = add nsw i64 %3425, -1
  %3490 = add i32 %3423, 1
  br i1 %3488, label %3422, label %3491, !llvm.loop !134

3491:                                             ; preds = %3481, %3417
  %3492 = phi i32 [ %3421, %3417 ], [ %3487, %3481 ]
  %3493 = sext i32 %3492 to i64
  %3494 = getelementptr inbounds i8, ptr %3080, i64 %3493
  %3495 = load i8, ptr %3494, align 1, !tbaa !11
  %3496 = zext i8 %3495 to i64
  %3497 = icmp sgt i64 %3418, %3496
  br i1 %3497, label %3498, label %3499

3498:                                             ; preds = %3491
  store i64 %3496, ptr %3082, align 8, !tbaa !120
  br label %3499

3499:                                             ; preds = %3498, %3491
  %3500 = phi i64 [ %3496, %3498 ], [ %3418, %3491 ]
  %3501 = fadd fast double %3420, 1.000000e+00
  %3502 = add nuw nsw i32 %3419, 1
  br i1 %3411, label %3503, label %3550

3503:                                             ; preds = %3499
  %3504 = load i32, ptr %4, align 4, !tbaa !5
  %3505 = load i32, ptr %12, align 4, !tbaa !5
  %3506 = add nsw i32 %3505, -1
  %3507 = icmp slt i32 %3504, %3506
  br i1 %3507, label %3527, label %3508

3508:                                             ; preds = %3503
  %3509 = icmp eq i32 %3504, %3506
  br i1 %3509, label %3510, label %3543

3510:                                             ; preds = %3508
  store i32 0, ptr %4, align 4, !tbaa !5
  %3511 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3511, ptr %6, align 4, !tbaa !5
  br i1 %3416, label %3550, label %3512

3512:                                             ; preds = %3510, %3537
  %3513 = phi i64 [ %3541, %3537 ], [ 1, %3510 ]
  %3514 = getelementptr inbounds i32, ptr %4, i64 %3513
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = getelementptr inbounds i32, ptr %12, i64 %3513
  %3517 = load i32, ptr %3516, align 4, !tbaa !5
  %3518 = add nsw i32 %3517, -1
  %3519 = icmp slt i32 %3515, %3518
  br i1 %3519, label %3520, label %3535

3520:                                             ; preds = %3512
  br i1 %3507, label %3527, label %3521

3521:                                             ; preds = %3520
  %3522 = getelementptr inbounds i32, ptr %7, i64 %3513
  %3523 = load i32, ptr %3522, align 4, !tbaa !5
  %3524 = getelementptr inbounds i32, ptr %6, i64 %3513
  %3525 = load i32, ptr %3524, align 4, !tbaa !5
  %3526 = add nsw i32 %3525, %3523
  store i32 %3526, ptr %3524, align 4, !tbaa !5
  br label %3545

3527:                                             ; preds = %3503, %3520
  %3528 = phi i32 [ %3515, %3520 ], [ %3504, %3503 ]
  %3529 = phi ptr [ %3514, %3520 ], [ %4, %3503 ]
  %3530 = phi i64 [ %3513, %3520 ], [ 0, %3503 ]
  %3531 = add nsw i32 %3528, 1
  store i32 %3531, ptr %3529, align 4, !tbaa !5
  %3532 = getelementptr inbounds i32, ptr %7, i64 %3530
  %3533 = load i32, ptr %3532, align 4, !tbaa !5
  %3534 = getelementptr inbounds i32, ptr %6, i64 %3530
  br label %3545

3535:                                             ; preds = %3512
  %3536 = icmp eq i32 %3515, %3518
  br i1 %3536, label %3537, label %3543

3537:                                             ; preds = %3535
  store i32 0, ptr %3514, align 4, !tbaa !5
  %3538 = getelementptr inbounds i32, ptr %8, i64 %3513
  %3539 = load i32, ptr %3538, align 4, !tbaa !5
  %3540 = getelementptr inbounds i32, ptr %6, i64 %3513
  store i32 %3539, ptr %3540, align 4, !tbaa !5
  %3541 = add nuw nsw i64 %3513, 1
  %3542 = icmp eq i64 %3541, %3414
  br i1 %3542, label %3550, label %3512, !llvm.loop !135

3543:                                             ; preds = %3508, %3535
  %3544 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3545:                                             ; preds = %3521, %3527
  %3546 = phi ptr [ %3534, %3527 ], [ %3514, %3521 ]
  %3547 = phi i32 [ %3533, %3527 ], [ 1, %3521 ]
  %3548 = load i32, ptr %3546, align 4, !tbaa !5
  %3549 = add nsw i32 %3548, %3547
  store i32 %3549, ptr %3546, align 4, !tbaa !5
  br label %3550

3550:                                             ; preds = %3537, %3545, %3510, %3499
  %3551 = icmp eq i32 %3502, %5
  br i1 %3551, label %5542, label %3417, !llvm.loop !136

3552:                                             ; preds = %3400, %3690
  %3553 = phi i64 [ %3084, %3400 ], [ %3638, %3690 ]
  %3554 = phi i32 [ 0, %3400 ], [ %3639, %3690 ]
  %3555 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3401, label %3556, label %3625

3556:                                             ; preds = %3552, %3615
  %3557 = phi i32 [ %3624, %3615 ], [ 0, %3552 ]
  %3558 = phi i64 [ %3566, %3615 ], [ %3405, %3552 ]
  %3559 = phi i64 [ %3623, %3615 ], [ %3404, %3552 ]
  %3560 = phi i32 [ %3621, %3615 ], [ %3555, %3552 ]
  %3561 = sub i32 %3403, %3557
  %3562 = tail call i32 @llvm.smin.i32(i32 %3561, i32 0)
  %3563 = sub i32 %3561, %3562
  %3564 = zext i32 %3563 to i64
  %3565 = add nuw nsw i64 %3564, 1
  %3566 = add nsw i64 %3558, -1
  %3567 = icmp ult i32 %3563, 31
  br i1 %3567, label %3603, label %3568

3568:                                             ; preds = %3556
  %3569 = and i64 %3565, 8589934560
  %3570 = sub i64 %3559, %3569
  br label %3571

3571:                                             ; preds = %3571, %3568
  %3572 = phi i64 [ 0, %3568 ], [ %3595, %3571 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3591, %3571 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3592, %3571 ]
  %3575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3593, %3571 ]
  %3576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3594, %3571 ]
  %3577 = sub i64 %3559, %3572
  %3578 = getelementptr inbounds i32, ptr %11, i64 %3577
  %3579 = getelementptr inbounds i32, ptr %3578, i64 -7
  %3580 = load <8 x i32>, ptr %3579, align 4, !tbaa !5
  %3581 = shufflevector <8 x i32> %3580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3582 = getelementptr inbounds i32, ptr %3578, i64 -15
  %3583 = load <8 x i32>, ptr %3582, align 4, !tbaa !5
  %3584 = shufflevector <8 x i32> %3583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3585 = getelementptr inbounds i32, ptr %3578, i64 -23
  %3586 = load <8 x i32>, ptr %3585, align 4, !tbaa !5
  %3587 = shufflevector <8 x i32> %3586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3588 = getelementptr inbounds i32, ptr %3578, i64 -31
  %3589 = load <8 x i32>, ptr %3588, align 4, !tbaa !5
  %3590 = shufflevector <8 x i32> %3589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3591 = mul <8 x i32> %3581, %3573
  %3592 = mul <8 x i32> %3584, %3574
  %3593 = mul <8 x i32> %3587, %3575
  %3594 = mul <8 x i32> %3590, %3576
  %3595 = add nuw i64 %3572, 32
  %3596 = icmp eq i64 %3595, %3569
  br i1 %3596, label %3597, label %3571, !llvm.loop !137

3597:                                             ; preds = %3571
  %3598 = mul <8 x i32> %3592, %3591
  %3599 = mul <8 x i32> %3593, %3598
  %3600 = mul <8 x i32> %3594, %3599
  %3601 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3600)
  %3602 = icmp eq i64 %3565, %3569
  br i1 %3602, label %3615, label %3603

3603:                                             ; preds = %3556, %3597
  %3604 = phi i64 [ %3559, %3556 ], [ %3570, %3597 ]
  %3605 = phi i32 [ 1, %3556 ], [ %3601, %3597 ]
  br label %3606

3606:                                             ; preds = %3603, %3606
  %3607 = phi i64 [ %3612, %3606 ], [ %3604, %3603 ]
  %3608 = phi i32 [ %3611, %3606 ], [ %3605, %3603 ]
  %3609 = getelementptr inbounds i32, ptr %11, i64 %3607
  %3610 = load i32, ptr %3609, align 4, !tbaa !5
  %3611 = mul nsw i32 %3610, %3608
  %3612 = add nsw i64 %3607, -1
  %3613 = trunc i64 %3607 to i32
  %3614 = icmp sgt i32 %3613, 0
  br i1 %3614, label %3606, label %3615, !llvm.loop !138

3615:                                             ; preds = %3606, %3597
  %3616 = phi i32 [ %3601, %3597 ], [ %3611, %3606 ]
  %3617 = and i64 %3566, 4294967295
  %3618 = getelementptr inbounds i32, ptr %6, i64 %3617
  %3619 = load i32, ptr %3618, align 4, !tbaa !5
  %3620 = mul nsw i32 %3619, %3616
  %3621 = add nsw i32 %3620, %3560
  %3622 = icmp sgt i64 %3558, 2
  %3623 = add nsw i64 %3559, -1
  %3624 = add i32 %3557, 1
  br i1 %3622, label %3556, label %3625, !llvm.loop !139

3625:                                             ; preds = %3615, %3552
  %3626 = phi i32 [ %3555, %3552 ], [ %3621, %3615 ]
  %3627 = icmp slt i32 %3626, %5
  br i1 %3627, label %3630, label %3628

3628:                                             ; preds = %3625
  %3629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3630:                                             ; preds = %3625
  %3631 = sext i32 %3626 to i64
  %3632 = getelementptr inbounds i8, ptr %3080, i64 %3631
  %3633 = load i8, ptr %3632, align 1, !tbaa !11
  %3634 = zext i8 %3633 to i64
  %3635 = icmp sgt i64 %3553, %3634
  br i1 %3635, label %3636, label %3637

3636:                                             ; preds = %3630
  store i64 %3634, ptr %3082, align 8, !tbaa !120
  br label %3637

3637:                                             ; preds = %3636, %3630
  %3638 = phi i64 [ %3634, %3636 ], [ %3553, %3630 ]
  %3639 = add nuw nsw i32 %3554, 1
  br i1 %3402, label %3640, label %3690

3640:                                             ; preds = %3637
  %3641 = load i32, ptr %4, align 4, !tbaa !5
  %3642 = load i32, ptr %12, align 4, !tbaa !5
  %3643 = add nsw i32 %3642, -1
  %3644 = icmp slt i32 %3641, %3643
  br i1 %3644, label %3667, label %3645

3645:                                             ; preds = %3640
  %3646 = icmp eq i32 %3641, %3643
  br i1 %3646, label %3647, label %3683

3647:                                             ; preds = %3645
  store i32 0, ptr %4, align 4, !tbaa !5
  %3648 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3648, ptr %6, align 4, !tbaa !5
  br i1 %3407, label %3690, label %3649

3649:                                             ; preds = %3647, %3677
  %3650 = phi i64 [ %3681, %3677 ], [ 1, %3647 ]
  %3651 = getelementptr inbounds i32, ptr %4, i64 %3650
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = getelementptr inbounds i32, ptr %12, i64 %3650
  %3654 = load i32, ptr %3653, align 4, !tbaa !5
  %3655 = add nsw i32 %3654, -1
  %3656 = icmp slt i32 %3652, %3655
  br i1 %3656, label %3657, label %3675

3657:                                             ; preds = %3649
  br i1 %3644, label %3667, label %3658

3658:                                             ; preds = %3657
  %3659 = shl i64 %3650, 32
  %3660 = add i64 %3659, -4294967296
  %3661 = ashr exact i64 %3660, 32
  %3662 = getelementptr inbounds i32, ptr %7, i64 %3661
  %3663 = load i32, ptr %3662, align 4, !tbaa !5
  %3664 = getelementptr inbounds i32, ptr %6, i64 %3650
  %3665 = load i32, ptr %3664, align 4, !tbaa !5
  %3666 = add nsw i32 %3665, %3663
  store i32 %3666, ptr %3664, align 4, !tbaa !5
  br label %3685

3667:                                             ; preds = %3640, %3657
  %3668 = phi i32 [ %3652, %3657 ], [ %3641, %3640 ]
  %3669 = phi ptr [ %3651, %3657 ], [ %4, %3640 ]
  %3670 = phi i64 [ %3650, %3657 ], [ 0, %3640 ]
  %3671 = add nsw i32 %3668, 1
  store i32 %3671, ptr %3669, align 4, !tbaa !5
  %3672 = getelementptr inbounds i32, ptr %7, i64 %3670
  %3673 = load i32, ptr %3672, align 4, !tbaa !5
  %3674 = getelementptr inbounds i32, ptr %6, i64 %3670
  br label %3685

3675:                                             ; preds = %3649
  %3676 = icmp eq i32 %3652, %3655
  br i1 %3676, label %3677, label %3683

3677:                                             ; preds = %3675
  store i32 0, ptr %3651, align 4, !tbaa !5
  %3678 = getelementptr inbounds i32, ptr %8, i64 %3650
  %3679 = load i32, ptr %3678, align 4, !tbaa !5
  %3680 = getelementptr inbounds i32, ptr %6, i64 %3650
  store i32 %3679, ptr %3680, align 4, !tbaa !5
  %3681 = add nuw nsw i64 %3650, 1
  %3682 = icmp eq i64 %3681, %3405
  br i1 %3682, label %3690, label %3649, !llvm.loop !140

3683:                                             ; preds = %3645, %3675
  %3684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3685:                                             ; preds = %3658, %3667
  %3686 = phi ptr [ %3674, %3667 ], [ %3651, %3658 ]
  %3687 = phi i32 [ %3673, %3667 ], [ 1, %3658 ]
  %3688 = load i32, ptr %3686, align 4, !tbaa !5
  %3689 = add nsw i32 %3688, %3687
  store i32 %3689, ptr %3686, align 4, !tbaa !5
  br label %3690

3690:                                             ; preds = %3677, %3685, %3647, %3637
  %3691 = icmp eq i32 %3639, %5
  br i1 %3691, label %5542, label %3552, !llvm.loop !141

3692:                                             ; preds = %3091
  %3693 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

3694:                                             ; preds = %18
  %3695 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3696 = load ptr, ptr %3695, align 8, !tbaa !9
  %3697 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3698 = load ptr, ptr %3697, align 8, !tbaa !9
  %3699 = load i8, ptr %3696, align 1, !tbaa !11
  %3700 = uitofp i8 %3699 to double
  store double %3700, ptr %3698, align 8, !tbaa !18
  %3701 = icmp eq i32 %13, 0
  br i1 %3701, label %3702, label %3707

3702:                                             ; preds = %3694
  %3703 = load i8, ptr %3696, align 1, !tbaa !11
  %3704 = uitofp i8 %3703 to double
  %3705 = fcmp fast ogt double %3700, %3704
  br i1 %3705, label %3706, label %5542

3706:                                             ; preds = %3702
  store double %3704, ptr %3698, align 8, !tbaa !18
  br label %5542

3707:                                             ; preds = %3694
  switch i32 %1, label %4308 [
    i32 1, label %3708
    i32 0, label %4010
  ]

3708:                                             ; preds = %3707
  %3709 = getelementptr inbounds i32, ptr %3, i64 %19
  %3710 = load i32, ptr %3709, align 4, !tbaa !5
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp sgt i32 %5, 0
  br i1 %3711, label %3722, label %3713

3713:                                             ; preds = %3708
  br i1 %3712, label %3714, label %5542

3714:                                             ; preds = %3713
  %3715 = icmp sgt i32 %13, 1
  %3716 = icmp sgt i32 %13, 0
  %3717 = add i32 %13, -2
  %3718 = zext i32 %3717 to i64
  %3719 = zext i32 %13 to i64
  %3720 = add nuw i32 %5, 1
  %3721 = icmp eq i32 %13, 1
  br label %3870

3722:                                             ; preds = %3708
  br i1 %3712, label %3723, label %5542

3723:                                             ; preds = %3722
  %3724 = icmp sgt i32 %13, 1
  %3725 = icmp sgt i32 %13, 0
  %3726 = add i32 %13, -2
  %3727 = zext i32 %3726 to i64
  %3728 = zext i32 %13 to i64
  %3729 = add nuw i32 %5, 1
  %3730 = icmp eq i32 %13, 1
  br label %3731

3731:                                             ; preds = %3723, %3868
  %3732 = phi double [ %3700, %3723 ], [ %3818, %3868 ]
  %3733 = phi i32 [ 0, %3723 ], [ %3820, %3868 ]
  %3734 = phi double [ 0.000000e+00, %3723 ], [ %3819, %3868 ]
  %3735 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3724, label %3736, label %3805

3736:                                             ; preds = %3731, %3795
  %3737 = phi i32 [ %3804, %3795 ], [ 0, %3731 ]
  %3738 = phi i64 [ %3746, %3795 ], [ %3728, %3731 ]
  %3739 = phi i64 [ %3803, %3795 ], [ %3727, %3731 ]
  %3740 = phi i32 [ %3801, %3795 ], [ %3735, %3731 ]
  %3741 = sub i32 %3726, %3737
  %3742 = tail call i32 @llvm.smin.i32(i32 %3741, i32 0)
  %3743 = sub i32 %3741, %3742
  %3744 = zext i32 %3743 to i64
  %3745 = add nuw nsw i64 %3744, 1
  %3746 = add nsw i64 %3738, -1
  %3747 = icmp ult i32 %3743, 31
  br i1 %3747, label %3783, label %3748

3748:                                             ; preds = %3736
  %3749 = and i64 %3745, 8589934560
  %3750 = sub i64 %3739, %3749
  br label %3751

3751:                                             ; preds = %3751, %3748
  %3752 = phi i64 [ 0, %3748 ], [ %3775, %3751 ]
  %3753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3771, %3751 ]
  %3754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3772, %3751 ]
  %3755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3773, %3751 ]
  %3756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3774, %3751 ]
  %3757 = sub i64 %3739, %3752
  %3758 = getelementptr inbounds i32, ptr %9, i64 %3757
  %3759 = getelementptr inbounds i32, ptr %3758, i64 -7
  %3760 = load <8 x i32>, ptr %3759, align 4, !tbaa !5
  %3761 = shufflevector <8 x i32> %3760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3762 = getelementptr inbounds i32, ptr %3758, i64 -15
  %3763 = load <8 x i32>, ptr %3762, align 4, !tbaa !5
  %3764 = shufflevector <8 x i32> %3763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3765 = getelementptr inbounds i32, ptr %3758, i64 -23
  %3766 = load <8 x i32>, ptr %3765, align 4, !tbaa !5
  %3767 = shufflevector <8 x i32> %3766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3768 = getelementptr inbounds i32, ptr %3758, i64 -31
  %3769 = load <8 x i32>, ptr %3768, align 4, !tbaa !5
  %3770 = shufflevector <8 x i32> %3769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3771 = mul <8 x i32> %3761, %3753
  %3772 = mul <8 x i32> %3764, %3754
  %3773 = mul <8 x i32> %3767, %3755
  %3774 = mul <8 x i32> %3770, %3756
  %3775 = add nuw i64 %3752, 32
  %3776 = icmp eq i64 %3775, %3749
  br i1 %3776, label %3777, label %3751, !llvm.loop !142

3777:                                             ; preds = %3751
  %3778 = mul <8 x i32> %3772, %3771
  %3779 = mul <8 x i32> %3773, %3778
  %3780 = mul <8 x i32> %3774, %3779
  %3781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3780)
  %3782 = icmp eq i64 %3745, %3749
  br i1 %3782, label %3795, label %3783

3783:                                             ; preds = %3736, %3777
  %3784 = phi i64 [ %3739, %3736 ], [ %3750, %3777 ]
  %3785 = phi i32 [ 1, %3736 ], [ %3781, %3777 ]
  br label %3786

3786:                                             ; preds = %3783, %3786
  %3787 = phi i64 [ %3792, %3786 ], [ %3784, %3783 ]
  %3788 = phi i32 [ %3791, %3786 ], [ %3785, %3783 ]
  %3789 = getelementptr inbounds i32, ptr %9, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = mul nsw i32 %3790, %3788
  %3792 = add nsw i64 %3787, -1
  %3793 = trunc i64 %3787 to i32
  %3794 = icmp sgt i32 %3793, 0
  br i1 %3794, label %3786, label %3795, !llvm.loop !143

3795:                                             ; preds = %3786, %3777
  %3796 = phi i32 [ %3781, %3777 ], [ %3791, %3786 ]
  %3797 = and i64 %3746, 4294967295
  %3798 = getelementptr inbounds i32, ptr %6, i64 %3797
  %3799 = load i32, ptr %3798, align 4, !tbaa !5
  %3800 = mul nsw i32 %3799, %3796
  %3801 = add nsw i32 %3800, %3740
  %3802 = icmp sgt i64 %3738, 2
  %3803 = add nsw i64 %3739, -1
  %3804 = add i32 %3737, 1
  br i1 %3802, label %3736, label %3805, !llvm.loop !144

3805:                                             ; preds = %3795, %3731
  %3806 = phi i32 [ %3735, %3731 ], [ %3801, %3795 ]
  %3807 = sext i32 %3806 to i64
  %3808 = getelementptr inbounds double, ptr %2, i64 %3807
  %3809 = load double, ptr %3808, align 8, !tbaa !18
  %3810 = getelementptr inbounds i8, ptr %3696, i64 %3807
  %3811 = load i8, ptr %3810, align 1, !tbaa !11
  %3812 = uitofp i8 %3811 to double
  %3813 = fcmp fast one double %3809, 0.000000e+00
  %3814 = fcmp fast ogt double %3732, %3812
  %3815 = select i1 %3813, i1 %3814, i1 false
  br i1 %3815, label %3816, label %3817

3816:                                             ; preds = %3805
  store double %3812, ptr %3698, align 8, !tbaa !18
  br label %3817

3817:                                             ; preds = %3816, %3805
  %3818 = phi double [ %3812, %3816 ], [ %3732, %3805 ]
  %3819 = fadd fast double %3809, %3734
  %3820 = add nuw nsw i32 %3733, 1
  br i1 %3725, label %3821, label %3868

3821:                                             ; preds = %3817
  %3822 = load i32, ptr %4, align 4, !tbaa !5
  %3823 = load i32, ptr %12, align 4, !tbaa !5
  %3824 = add nsw i32 %3823, -1
  %3825 = icmp slt i32 %3822, %3824
  br i1 %3825, label %3845, label %3826

3826:                                             ; preds = %3821
  %3827 = icmp eq i32 %3822, %3824
  br i1 %3827, label %3828, label %3861

3828:                                             ; preds = %3826
  store i32 0, ptr %4, align 4, !tbaa !5
  %3829 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3829, ptr %6, align 4, !tbaa !5
  br i1 %3730, label %3868, label %3830

3830:                                             ; preds = %3828, %3855
  %3831 = phi i64 [ %3859, %3855 ], [ 1, %3828 ]
  %3832 = getelementptr inbounds i32, ptr %4, i64 %3831
  %3833 = load i32, ptr %3832, align 4, !tbaa !5
  %3834 = getelementptr inbounds i32, ptr %12, i64 %3831
  %3835 = load i32, ptr %3834, align 4, !tbaa !5
  %3836 = add nsw i32 %3835, -1
  %3837 = icmp slt i32 %3833, %3836
  br i1 %3837, label %3838, label %3853

3838:                                             ; preds = %3830
  br i1 %3825, label %3845, label %3839

3839:                                             ; preds = %3838
  %3840 = getelementptr inbounds i32, ptr %7, i64 %3831
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = getelementptr inbounds i32, ptr %6, i64 %3831
  %3843 = load i32, ptr %3842, align 4, !tbaa !5
  %3844 = add nsw i32 %3843, %3841
  store i32 %3844, ptr %3842, align 4, !tbaa !5
  br label %3863

3845:                                             ; preds = %3821, %3838
  %3846 = phi i32 [ %3833, %3838 ], [ %3822, %3821 ]
  %3847 = phi ptr [ %3832, %3838 ], [ %4, %3821 ]
  %3848 = phi i64 [ %3831, %3838 ], [ 0, %3821 ]
  %3849 = add nsw i32 %3846, 1
  store i32 %3849, ptr %3847, align 4, !tbaa !5
  %3850 = getelementptr inbounds i32, ptr %7, i64 %3848
  %3851 = load i32, ptr %3850, align 4, !tbaa !5
  %3852 = getelementptr inbounds i32, ptr %6, i64 %3848
  br label %3863

3853:                                             ; preds = %3830
  %3854 = icmp eq i32 %3833, %3836
  br i1 %3854, label %3855, label %3861

3855:                                             ; preds = %3853
  store i32 0, ptr %3832, align 4, !tbaa !5
  %3856 = getelementptr inbounds i32, ptr %8, i64 %3831
  %3857 = load i32, ptr %3856, align 4, !tbaa !5
  %3858 = getelementptr inbounds i32, ptr %6, i64 %3831
  store i32 %3857, ptr %3858, align 4, !tbaa !5
  %3859 = add nuw nsw i64 %3831, 1
  %3860 = icmp eq i64 %3859, %3728
  br i1 %3860, label %3868, label %3830, !llvm.loop !145

3861:                                             ; preds = %3826, %3853
  %3862 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3863:                                             ; preds = %3839, %3845
  %3864 = phi ptr [ %3852, %3845 ], [ %3832, %3839 ]
  %3865 = phi i32 [ %3851, %3845 ], [ 1, %3839 ]
  %3866 = load i32, ptr %3864, align 4, !tbaa !5
  %3867 = add nsw i32 %3866, %3865
  store i32 %3867, ptr %3864, align 4, !tbaa !5
  br label %3868

3868:                                             ; preds = %3855, %3863, %3828, %3817
  %3869 = icmp eq i32 %3820, %5
  br i1 %3869, label %5542, label %3731, !llvm.loop !146

3870:                                             ; preds = %3714, %4008
  %3871 = phi double [ %3700, %3714 ], [ %3956, %4008 ]
  %3872 = phi i32 [ 0, %3714 ], [ %3957, %4008 ]
  %3873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3715, label %3874, label %3943

3874:                                             ; preds = %3870, %3933
  %3875 = phi i32 [ %3942, %3933 ], [ 0, %3870 ]
  %3876 = phi i64 [ %3884, %3933 ], [ %3719, %3870 ]
  %3877 = phi i64 [ %3941, %3933 ], [ %3718, %3870 ]
  %3878 = phi i32 [ %3939, %3933 ], [ %3873, %3870 ]
  %3879 = sub i32 %3717, %3875
  %3880 = tail call i32 @llvm.smin.i32(i32 %3879, i32 0)
  %3881 = sub i32 %3879, %3880
  %3882 = zext i32 %3881 to i64
  %3883 = add nuw nsw i64 %3882, 1
  %3884 = add nsw i64 %3876, -1
  %3885 = icmp ult i32 %3881, 31
  br i1 %3885, label %3921, label %3886

3886:                                             ; preds = %3874
  %3887 = and i64 %3883, 8589934560
  %3888 = sub i64 %3877, %3887
  br label %3889

3889:                                             ; preds = %3889, %3886
  %3890 = phi i64 [ 0, %3886 ], [ %3913, %3889 ]
  %3891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3909, %3889 ]
  %3892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3910, %3889 ]
  %3893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3911, %3889 ]
  %3894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3912, %3889 ]
  %3895 = sub i64 %3877, %3890
  %3896 = getelementptr inbounds i32, ptr %11, i64 %3895
  %3897 = getelementptr inbounds i32, ptr %3896, i64 -7
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = getelementptr inbounds i32, ptr %3896, i64 -15
  %3901 = load <8 x i32>, ptr %3900, align 4, !tbaa !5
  %3902 = shufflevector <8 x i32> %3901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3903 = getelementptr inbounds i32, ptr %3896, i64 -23
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !5
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = getelementptr inbounds i32, ptr %3896, i64 -31
  %3907 = load <8 x i32>, ptr %3906, align 4, !tbaa !5
  %3908 = shufflevector <8 x i32> %3907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3909 = mul <8 x i32> %3899, %3891
  %3910 = mul <8 x i32> %3902, %3892
  %3911 = mul <8 x i32> %3905, %3893
  %3912 = mul <8 x i32> %3908, %3894
  %3913 = add nuw i64 %3890, 32
  %3914 = icmp eq i64 %3913, %3887
  br i1 %3914, label %3915, label %3889, !llvm.loop !147

3915:                                             ; preds = %3889
  %3916 = mul <8 x i32> %3910, %3909
  %3917 = mul <8 x i32> %3911, %3916
  %3918 = mul <8 x i32> %3912, %3917
  %3919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3918)
  %3920 = icmp eq i64 %3883, %3887
  br i1 %3920, label %3933, label %3921

3921:                                             ; preds = %3874, %3915
  %3922 = phi i64 [ %3877, %3874 ], [ %3888, %3915 ]
  %3923 = phi i32 [ 1, %3874 ], [ %3919, %3915 ]
  br label %3924

3924:                                             ; preds = %3921, %3924
  %3925 = phi i64 [ %3930, %3924 ], [ %3922, %3921 ]
  %3926 = phi i32 [ %3929, %3924 ], [ %3923, %3921 ]
  %3927 = getelementptr inbounds i32, ptr %11, i64 %3925
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = mul nsw i32 %3928, %3926
  %3930 = add nsw i64 %3925, -1
  %3931 = trunc i64 %3925 to i32
  %3932 = icmp sgt i32 %3931, 0
  br i1 %3932, label %3924, label %3933, !llvm.loop !148

3933:                                             ; preds = %3924, %3915
  %3934 = phi i32 [ %3919, %3915 ], [ %3929, %3924 ]
  %3935 = and i64 %3884, 4294967295
  %3936 = getelementptr inbounds i32, ptr %6, i64 %3935
  %3937 = load i32, ptr %3936, align 4, !tbaa !5
  %3938 = mul nsw i32 %3937, %3934
  %3939 = add nsw i32 %3938, %3878
  %3940 = icmp sgt i64 %3876, 2
  %3941 = add nsw i64 %3877, -1
  %3942 = add i32 %3875, 1
  br i1 %3940, label %3874, label %3943, !llvm.loop !149

3943:                                             ; preds = %3933, %3870
  %3944 = phi i32 [ %3873, %3870 ], [ %3939, %3933 ]
  %3945 = icmp slt i32 %3944, %5
  br i1 %3945, label %3948, label %3946

3946:                                             ; preds = %3943
  %3947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3948:                                             ; preds = %3943
  %3949 = sext i32 %3944 to i64
  %3950 = getelementptr inbounds i8, ptr %3696, i64 %3949
  %3951 = load i8, ptr %3950, align 1, !tbaa !11
  %3952 = uitofp i8 %3951 to double
  %3953 = fcmp fast ogt double %3871, %3952
  br i1 %3953, label %3954, label %3955

3954:                                             ; preds = %3948
  store double %3952, ptr %3698, align 8, !tbaa !18
  br label %3955

3955:                                             ; preds = %3948, %3954
  %3956 = phi double [ %3871, %3948 ], [ %3952, %3954 ]
  %3957 = add nuw nsw i32 %3872, 1
  br i1 %3716, label %3958, label %4008

3958:                                             ; preds = %3955
  %3959 = load i32, ptr %4, align 4, !tbaa !5
  %3960 = load i32, ptr %12, align 4, !tbaa !5
  %3961 = add nsw i32 %3960, -1
  %3962 = icmp slt i32 %3959, %3961
  br i1 %3962, label %3985, label %3963

3963:                                             ; preds = %3958
  %3964 = icmp eq i32 %3959, %3961
  br i1 %3964, label %3965, label %4001

3965:                                             ; preds = %3963
  store i32 0, ptr %4, align 4, !tbaa !5
  %3966 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3966, ptr %6, align 4, !tbaa !5
  br i1 %3721, label %4008, label %3967

3967:                                             ; preds = %3965, %3995
  %3968 = phi i64 [ %3999, %3995 ], [ 1, %3965 ]
  %3969 = getelementptr inbounds i32, ptr %4, i64 %3968
  %3970 = load i32, ptr %3969, align 4, !tbaa !5
  %3971 = getelementptr inbounds i32, ptr %12, i64 %3968
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = add nsw i32 %3972, -1
  %3974 = icmp slt i32 %3970, %3973
  br i1 %3974, label %3975, label %3993

3975:                                             ; preds = %3967
  br i1 %3962, label %3985, label %3976

3976:                                             ; preds = %3975
  %3977 = shl i64 %3968, 32
  %3978 = add i64 %3977, -4294967296
  %3979 = ashr exact i64 %3978, 32
  %3980 = getelementptr inbounds i32, ptr %7, i64 %3979
  %3981 = load i32, ptr %3980, align 4, !tbaa !5
  %3982 = getelementptr inbounds i32, ptr %6, i64 %3968
  %3983 = load i32, ptr %3982, align 4, !tbaa !5
  %3984 = add nsw i32 %3983, %3981
  store i32 %3984, ptr %3982, align 4, !tbaa !5
  br label %4003

3985:                                             ; preds = %3958, %3975
  %3986 = phi i32 [ %3970, %3975 ], [ %3959, %3958 ]
  %3987 = phi ptr [ %3969, %3975 ], [ %4, %3958 ]
  %3988 = phi i64 [ %3968, %3975 ], [ 0, %3958 ]
  %3989 = add nsw i32 %3986, 1
  store i32 %3989, ptr %3987, align 4, !tbaa !5
  %3990 = getelementptr inbounds i32, ptr %7, i64 %3988
  %3991 = load i32, ptr %3990, align 4, !tbaa !5
  %3992 = getelementptr inbounds i32, ptr %6, i64 %3988
  br label %4003

3993:                                             ; preds = %3967
  %3994 = icmp eq i32 %3970, %3973
  br i1 %3994, label %3995, label %4001

3995:                                             ; preds = %3993
  store i32 0, ptr %3969, align 4, !tbaa !5
  %3996 = getelementptr inbounds i32, ptr %8, i64 %3968
  %3997 = load i32, ptr %3996, align 4, !tbaa !5
  %3998 = getelementptr inbounds i32, ptr %6, i64 %3968
  store i32 %3997, ptr %3998, align 4, !tbaa !5
  %3999 = add nuw nsw i64 %3968, 1
  %4000 = icmp eq i64 %3999, %3719
  br i1 %4000, label %4008, label %3967, !llvm.loop !150

4001:                                             ; preds = %3963, %3993
  %4002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4003:                                             ; preds = %3976, %3985
  %4004 = phi ptr [ %3992, %3985 ], [ %3969, %3976 ]
  %4005 = phi i32 [ %3991, %3985 ], [ 1, %3976 ]
  %4006 = load i32, ptr %4004, align 4, !tbaa !5
  %4007 = add nsw i32 %4006, %4005
  store i32 %4007, ptr %4004, align 4, !tbaa !5
  br label %4008

4008:                                             ; preds = %3995, %4003, %3965, %3955
  %4009 = icmp eq i32 %3957, %5
  br i1 %4009, label %5542, label %3870, !llvm.loop !151

4010:                                             ; preds = %3707
  %4011 = getelementptr inbounds i32, ptr %3, i64 %19
  %4012 = load i32, ptr %4011, align 4, !tbaa !5
  %4013 = icmp eq i32 %4012, 0
  %4014 = icmp sgt i32 %5, 0
  br i1 %4013, label %4024, label %4015

4015:                                             ; preds = %4010
  br i1 %4014, label %4016, label %5542

4016:                                             ; preds = %4015
  %4017 = icmp sgt i32 %13, 1
  %4018 = icmp sgt i32 %13, 0
  %4019 = add i32 %13, -2
  %4020 = zext i32 %4019 to i64
  %4021 = zext i32 %13 to i64
  %4022 = add nuw i32 %5, 1
  %4023 = icmp eq i32 %13, 1
  br label %4168

4024:                                             ; preds = %4010
  br i1 %4014, label %4025, label %5542

4025:                                             ; preds = %4024
  %4026 = icmp sgt i32 %13, 1
  %4027 = icmp sgt i32 %13, 0
  %4028 = add i32 %13, -2
  %4029 = zext i32 %4028 to i64
  %4030 = zext i32 %13 to i64
  %4031 = add nuw i32 %5, 1
  %4032 = icmp eq i32 %13, 1
  br label %4033

4033:                                             ; preds = %4025, %4166
  %4034 = phi double [ %3700, %4025 ], [ %4116, %4166 ]
  %4035 = phi i32 [ 0, %4025 ], [ %4118, %4166 ]
  %4036 = phi double [ 0.000000e+00, %4025 ], [ %4117, %4166 ]
  %4037 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4026, label %4038, label %4107

4038:                                             ; preds = %4033, %4097
  %4039 = phi i32 [ %4106, %4097 ], [ 0, %4033 ]
  %4040 = phi i64 [ %4048, %4097 ], [ %4030, %4033 ]
  %4041 = phi i64 [ %4105, %4097 ], [ %4029, %4033 ]
  %4042 = phi i32 [ %4103, %4097 ], [ %4037, %4033 ]
  %4043 = sub i32 %4028, %4039
  %4044 = tail call i32 @llvm.smin.i32(i32 %4043, i32 0)
  %4045 = sub i32 %4043, %4044
  %4046 = zext i32 %4045 to i64
  %4047 = add nuw nsw i64 %4046, 1
  %4048 = add nsw i64 %4040, -1
  %4049 = icmp ult i32 %4045, 31
  br i1 %4049, label %4085, label %4050

4050:                                             ; preds = %4038
  %4051 = and i64 %4047, 8589934560
  %4052 = sub i64 %4041, %4051
  br label %4053

4053:                                             ; preds = %4053, %4050
  %4054 = phi i64 [ 0, %4050 ], [ %4077, %4053 ]
  %4055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4073, %4053 ]
  %4056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4074, %4053 ]
  %4057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4075, %4053 ]
  %4058 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4076, %4053 ]
  %4059 = sub i64 %4041, %4054
  %4060 = getelementptr inbounds i32, ptr %9, i64 %4059
  %4061 = getelementptr inbounds i32, ptr %4060, i64 -7
  %4062 = load <8 x i32>, ptr %4061, align 4, !tbaa !5
  %4063 = shufflevector <8 x i32> %4062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4064 = getelementptr inbounds i32, ptr %4060, i64 -15
  %4065 = load <8 x i32>, ptr %4064, align 4, !tbaa !5
  %4066 = shufflevector <8 x i32> %4065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4067 = getelementptr inbounds i32, ptr %4060, i64 -23
  %4068 = load <8 x i32>, ptr %4067, align 4, !tbaa !5
  %4069 = shufflevector <8 x i32> %4068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4070 = getelementptr inbounds i32, ptr %4060, i64 -31
  %4071 = load <8 x i32>, ptr %4070, align 4, !tbaa !5
  %4072 = shufflevector <8 x i32> %4071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4073 = mul <8 x i32> %4063, %4055
  %4074 = mul <8 x i32> %4066, %4056
  %4075 = mul <8 x i32> %4069, %4057
  %4076 = mul <8 x i32> %4072, %4058
  %4077 = add nuw i64 %4054, 32
  %4078 = icmp eq i64 %4077, %4051
  br i1 %4078, label %4079, label %4053, !llvm.loop !152

4079:                                             ; preds = %4053
  %4080 = mul <8 x i32> %4074, %4073
  %4081 = mul <8 x i32> %4075, %4080
  %4082 = mul <8 x i32> %4076, %4081
  %4083 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4082)
  %4084 = icmp eq i64 %4047, %4051
  br i1 %4084, label %4097, label %4085

4085:                                             ; preds = %4038, %4079
  %4086 = phi i64 [ %4041, %4038 ], [ %4052, %4079 ]
  %4087 = phi i32 [ 1, %4038 ], [ %4083, %4079 ]
  br label %4088

4088:                                             ; preds = %4085, %4088
  %4089 = phi i64 [ %4094, %4088 ], [ %4086, %4085 ]
  %4090 = phi i32 [ %4093, %4088 ], [ %4087, %4085 ]
  %4091 = getelementptr inbounds i32, ptr %9, i64 %4089
  %4092 = load i32, ptr %4091, align 4, !tbaa !5
  %4093 = mul nsw i32 %4092, %4090
  %4094 = add nsw i64 %4089, -1
  %4095 = trunc i64 %4089 to i32
  %4096 = icmp sgt i32 %4095, 0
  br i1 %4096, label %4088, label %4097, !llvm.loop !153

4097:                                             ; preds = %4088, %4079
  %4098 = phi i32 [ %4083, %4079 ], [ %4093, %4088 ]
  %4099 = and i64 %4048, 4294967295
  %4100 = getelementptr inbounds i32, ptr %6, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = mul nsw i32 %4101, %4098
  %4103 = add nsw i32 %4102, %4042
  %4104 = icmp sgt i64 %4040, 2
  %4105 = add nsw i64 %4041, -1
  %4106 = add i32 %4039, 1
  br i1 %4104, label %4038, label %4107, !llvm.loop !154

4107:                                             ; preds = %4097, %4033
  %4108 = phi i32 [ %4037, %4033 ], [ %4103, %4097 ]
  %4109 = sext i32 %4108 to i64
  %4110 = getelementptr inbounds i8, ptr %3696, i64 %4109
  %4111 = load i8, ptr %4110, align 1, !tbaa !11
  %4112 = uitofp i8 %4111 to double
  %4113 = fcmp fast ogt double %4034, %4112
  br i1 %4113, label %4114, label %4115

4114:                                             ; preds = %4107
  store double %4112, ptr %3698, align 8, !tbaa !18
  br label %4115

4115:                                             ; preds = %4114, %4107
  %4116 = phi double [ %4112, %4114 ], [ %4034, %4107 ]
  %4117 = fadd fast double %4036, 1.000000e+00
  %4118 = add nuw nsw i32 %4035, 1
  br i1 %4027, label %4119, label %4166

4119:                                             ; preds = %4115
  %4120 = load i32, ptr %4, align 4, !tbaa !5
  %4121 = load i32, ptr %12, align 4, !tbaa !5
  %4122 = add nsw i32 %4121, -1
  %4123 = icmp slt i32 %4120, %4122
  br i1 %4123, label %4143, label %4124

4124:                                             ; preds = %4119
  %4125 = icmp eq i32 %4120, %4122
  br i1 %4125, label %4126, label %4159

4126:                                             ; preds = %4124
  store i32 0, ptr %4, align 4, !tbaa !5
  %4127 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4127, ptr %6, align 4, !tbaa !5
  br i1 %4032, label %4166, label %4128

4128:                                             ; preds = %4126, %4153
  %4129 = phi i64 [ %4157, %4153 ], [ 1, %4126 ]
  %4130 = getelementptr inbounds i32, ptr %4, i64 %4129
  %4131 = load i32, ptr %4130, align 4, !tbaa !5
  %4132 = getelementptr inbounds i32, ptr %12, i64 %4129
  %4133 = load i32, ptr %4132, align 4, !tbaa !5
  %4134 = add nsw i32 %4133, -1
  %4135 = icmp slt i32 %4131, %4134
  br i1 %4135, label %4136, label %4151

4136:                                             ; preds = %4128
  br i1 %4123, label %4143, label %4137

4137:                                             ; preds = %4136
  %4138 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4139 = load i32, ptr %4138, align 4, !tbaa !5
  %4140 = getelementptr inbounds i32, ptr %6, i64 %4129
  %4141 = load i32, ptr %4140, align 4, !tbaa !5
  %4142 = add nsw i32 %4141, %4139
  store i32 %4142, ptr %4140, align 4, !tbaa !5
  br label %4161

4143:                                             ; preds = %4119, %4136
  %4144 = phi i32 [ %4131, %4136 ], [ %4120, %4119 ]
  %4145 = phi ptr [ %4130, %4136 ], [ %4, %4119 ]
  %4146 = phi i64 [ %4129, %4136 ], [ 0, %4119 ]
  %4147 = add nsw i32 %4144, 1
  store i32 %4147, ptr %4145, align 4, !tbaa !5
  %4148 = getelementptr inbounds i32, ptr %7, i64 %4146
  %4149 = load i32, ptr %4148, align 4, !tbaa !5
  %4150 = getelementptr inbounds i32, ptr %6, i64 %4146
  br label %4161

4151:                                             ; preds = %4128
  %4152 = icmp eq i32 %4131, %4134
  br i1 %4152, label %4153, label %4159

4153:                                             ; preds = %4151
  store i32 0, ptr %4130, align 4, !tbaa !5
  %4154 = getelementptr inbounds i32, ptr %8, i64 %4129
  %4155 = load i32, ptr %4154, align 4, !tbaa !5
  %4156 = getelementptr inbounds i32, ptr %6, i64 %4129
  store i32 %4155, ptr %4156, align 4, !tbaa !5
  %4157 = add nuw nsw i64 %4129, 1
  %4158 = icmp eq i64 %4157, %4030
  br i1 %4158, label %4166, label %4128, !llvm.loop !155

4159:                                             ; preds = %4124, %4151
  %4160 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4161:                                             ; preds = %4137, %4143
  %4162 = phi ptr [ %4150, %4143 ], [ %4130, %4137 ]
  %4163 = phi i32 [ %4149, %4143 ], [ 1, %4137 ]
  %4164 = load i32, ptr %4162, align 4, !tbaa !5
  %4165 = add nsw i32 %4164, %4163
  store i32 %4165, ptr %4162, align 4, !tbaa !5
  br label %4166

4166:                                             ; preds = %4153, %4161, %4126, %4115
  %4167 = icmp eq i32 %4118, %5
  br i1 %4167, label %5542, label %4033, !llvm.loop !156

4168:                                             ; preds = %4016, %4306
  %4169 = phi double [ %3700, %4016 ], [ %4254, %4306 ]
  %4170 = phi i32 [ 0, %4016 ], [ %4255, %4306 ]
  %4171 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4017, label %4172, label %4241

4172:                                             ; preds = %4168, %4231
  %4173 = phi i32 [ %4240, %4231 ], [ 0, %4168 ]
  %4174 = phi i64 [ %4182, %4231 ], [ %4021, %4168 ]
  %4175 = phi i64 [ %4239, %4231 ], [ %4020, %4168 ]
  %4176 = phi i32 [ %4237, %4231 ], [ %4171, %4168 ]
  %4177 = sub i32 %4019, %4173
  %4178 = tail call i32 @llvm.smin.i32(i32 %4177, i32 0)
  %4179 = sub i32 %4177, %4178
  %4180 = zext i32 %4179 to i64
  %4181 = add nuw nsw i64 %4180, 1
  %4182 = add nsw i64 %4174, -1
  %4183 = icmp ult i32 %4179, 31
  br i1 %4183, label %4219, label %4184

4184:                                             ; preds = %4172
  %4185 = and i64 %4181, 8589934560
  %4186 = sub i64 %4175, %4185
  br label %4187

4187:                                             ; preds = %4187, %4184
  %4188 = phi i64 [ 0, %4184 ], [ %4211, %4187 ]
  %4189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4207, %4187 ]
  %4190 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4208, %4187 ]
  %4191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4209, %4187 ]
  %4192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4210, %4187 ]
  %4193 = sub i64 %4175, %4188
  %4194 = getelementptr inbounds i32, ptr %11, i64 %4193
  %4195 = getelementptr inbounds i32, ptr %4194, i64 -7
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !5
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = getelementptr inbounds i32, ptr %4194, i64 -15
  %4199 = load <8 x i32>, ptr %4198, align 4, !tbaa !5
  %4200 = shufflevector <8 x i32> %4199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4201 = getelementptr inbounds i32, ptr %4194, i64 -23
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !5
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = getelementptr inbounds i32, ptr %4194, i64 -31
  %4205 = load <8 x i32>, ptr %4204, align 4, !tbaa !5
  %4206 = shufflevector <8 x i32> %4205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4207 = mul <8 x i32> %4197, %4189
  %4208 = mul <8 x i32> %4200, %4190
  %4209 = mul <8 x i32> %4203, %4191
  %4210 = mul <8 x i32> %4206, %4192
  %4211 = add nuw i64 %4188, 32
  %4212 = icmp eq i64 %4211, %4185
  br i1 %4212, label %4213, label %4187, !llvm.loop !157

4213:                                             ; preds = %4187
  %4214 = mul <8 x i32> %4208, %4207
  %4215 = mul <8 x i32> %4209, %4214
  %4216 = mul <8 x i32> %4210, %4215
  %4217 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4216)
  %4218 = icmp eq i64 %4181, %4185
  br i1 %4218, label %4231, label %4219

4219:                                             ; preds = %4172, %4213
  %4220 = phi i64 [ %4175, %4172 ], [ %4186, %4213 ]
  %4221 = phi i32 [ 1, %4172 ], [ %4217, %4213 ]
  br label %4222

4222:                                             ; preds = %4219, %4222
  %4223 = phi i64 [ %4228, %4222 ], [ %4220, %4219 ]
  %4224 = phi i32 [ %4227, %4222 ], [ %4221, %4219 ]
  %4225 = getelementptr inbounds i32, ptr %11, i64 %4223
  %4226 = load i32, ptr %4225, align 4, !tbaa !5
  %4227 = mul nsw i32 %4226, %4224
  %4228 = add nsw i64 %4223, -1
  %4229 = trunc i64 %4223 to i32
  %4230 = icmp sgt i32 %4229, 0
  br i1 %4230, label %4222, label %4231, !llvm.loop !158

4231:                                             ; preds = %4222, %4213
  %4232 = phi i32 [ %4217, %4213 ], [ %4227, %4222 ]
  %4233 = and i64 %4182, 4294967295
  %4234 = getelementptr inbounds i32, ptr %6, i64 %4233
  %4235 = load i32, ptr %4234, align 4, !tbaa !5
  %4236 = mul nsw i32 %4235, %4232
  %4237 = add nsw i32 %4236, %4176
  %4238 = icmp sgt i64 %4174, 2
  %4239 = add nsw i64 %4175, -1
  %4240 = add i32 %4173, 1
  br i1 %4238, label %4172, label %4241, !llvm.loop !159

4241:                                             ; preds = %4231, %4168
  %4242 = phi i32 [ %4171, %4168 ], [ %4237, %4231 ]
  %4243 = icmp slt i32 %4242, %5
  br i1 %4243, label %4246, label %4244

4244:                                             ; preds = %4241
  %4245 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4246:                                             ; preds = %4241
  %4247 = sext i32 %4242 to i64
  %4248 = getelementptr inbounds i8, ptr %3696, i64 %4247
  %4249 = load i8, ptr %4248, align 1, !tbaa !11
  %4250 = uitofp i8 %4249 to double
  %4251 = fcmp fast ogt double %4169, %4250
  br i1 %4251, label %4252, label %4253

4252:                                             ; preds = %4246
  store double %4250, ptr %3698, align 8, !tbaa !18
  br label %4253

4253:                                             ; preds = %4252, %4246
  %4254 = phi double [ %4250, %4252 ], [ %4169, %4246 ]
  %4255 = add nuw nsw i32 %4170, 1
  br i1 %4018, label %4256, label %4306

4256:                                             ; preds = %4253
  %4257 = load i32, ptr %4, align 4, !tbaa !5
  %4258 = load i32, ptr %12, align 4, !tbaa !5
  %4259 = add nsw i32 %4258, -1
  %4260 = icmp slt i32 %4257, %4259
  br i1 %4260, label %4283, label %4261

4261:                                             ; preds = %4256
  %4262 = icmp eq i32 %4257, %4259
  br i1 %4262, label %4263, label %4299

4263:                                             ; preds = %4261
  store i32 0, ptr %4, align 4, !tbaa !5
  %4264 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4264, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4306, label %4265

4265:                                             ; preds = %4263, %4293
  %4266 = phi i64 [ %4297, %4293 ], [ 1, %4263 ]
  %4267 = getelementptr inbounds i32, ptr %4, i64 %4266
  %4268 = load i32, ptr %4267, align 4, !tbaa !5
  %4269 = getelementptr inbounds i32, ptr %12, i64 %4266
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = add nsw i32 %4270, -1
  %4272 = icmp slt i32 %4268, %4271
  br i1 %4272, label %4273, label %4291

4273:                                             ; preds = %4265
  br i1 %4260, label %4283, label %4274

4274:                                             ; preds = %4273
  %4275 = shl i64 %4266, 32
  %4276 = add i64 %4275, -4294967296
  %4277 = ashr exact i64 %4276, 32
  %4278 = getelementptr inbounds i32, ptr %7, i64 %4277
  %4279 = load i32, ptr %4278, align 4, !tbaa !5
  %4280 = getelementptr inbounds i32, ptr %6, i64 %4266
  %4281 = load i32, ptr %4280, align 4, !tbaa !5
  %4282 = add nsw i32 %4281, %4279
  store i32 %4282, ptr %4280, align 4, !tbaa !5
  br label %4301

4283:                                             ; preds = %4256, %4273
  %4284 = phi i32 [ %4268, %4273 ], [ %4257, %4256 ]
  %4285 = phi ptr [ %4267, %4273 ], [ %4, %4256 ]
  %4286 = phi i64 [ %4266, %4273 ], [ 0, %4256 ]
  %4287 = add nsw i32 %4284, 1
  store i32 %4287, ptr %4285, align 4, !tbaa !5
  %4288 = getelementptr inbounds i32, ptr %7, i64 %4286
  %4289 = load i32, ptr %4288, align 4, !tbaa !5
  %4290 = getelementptr inbounds i32, ptr %6, i64 %4286
  br label %4301

4291:                                             ; preds = %4265
  %4292 = icmp eq i32 %4268, %4271
  br i1 %4292, label %4293, label %4299

4293:                                             ; preds = %4291
  store i32 0, ptr %4267, align 4, !tbaa !5
  %4294 = getelementptr inbounds i32, ptr %8, i64 %4266
  %4295 = load i32, ptr %4294, align 4, !tbaa !5
  %4296 = getelementptr inbounds i32, ptr %6, i64 %4266
  store i32 %4295, ptr %4296, align 4, !tbaa !5
  %4297 = add nuw nsw i64 %4266, 1
  %4298 = icmp eq i64 %4297, %4021
  br i1 %4298, label %4306, label %4265, !llvm.loop !160

4299:                                             ; preds = %4261, %4291
  %4300 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4301:                                             ; preds = %4274, %4283
  %4302 = phi ptr [ %4290, %4283 ], [ %4267, %4274 ]
  %4303 = phi i32 [ %4289, %4283 ], [ 1, %4274 ]
  %4304 = load i32, ptr %4302, align 4, !tbaa !5
  %4305 = add nsw i32 %4304, %4303
  store i32 %4305, ptr %4302, align 4, !tbaa !5
  br label %4306

4306:                                             ; preds = %4293, %4301, %4263, %4253
  %4307 = icmp eq i32 %4255, %5
  br i1 %4307, label %5542, label %4168, !llvm.loop !161

4308:                                             ; preds = %3707
  %4309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

4310:                                             ; preds = %18
  %4311 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4312 = load ptr, ptr %4311, align 8, !tbaa !9
  %4313 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4314 = load ptr, ptr %4313, align 8, !tbaa !9
  %4315 = load i8, ptr %4312, align 1, !tbaa !11
  %4316 = uitofp i8 %4315 to float
  store float %4316, ptr %4314, align 4, !tbaa !162
  %4317 = icmp eq i32 %13, 0
  br i1 %4317, label %4318, label %4323

4318:                                             ; preds = %4310
  %4319 = load i8, ptr %4312, align 1, !tbaa !11
  %4320 = uitofp i8 %4319 to float
  %4321 = fcmp fast ogt float %4316, %4320
  br i1 %4321, label %4322, label %5542

4322:                                             ; preds = %4318
  store float %4320, ptr %4314, align 4, !tbaa !162
  br label %5542

4323:                                             ; preds = %4310
  switch i32 %1, label %4924 [
    i32 1, label %4324
    i32 0, label %4626
  ]

4324:                                             ; preds = %4323
  %4325 = getelementptr inbounds i32, ptr %3, i64 %19
  %4326 = load i32, ptr %4325, align 4, !tbaa !5
  %4327 = icmp eq i32 %4326, 0
  %4328 = icmp sgt i32 %5, 0
  br i1 %4327, label %4338, label %4329

4329:                                             ; preds = %4324
  br i1 %4328, label %4330, label %5542

4330:                                             ; preds = %4329
  %4331 = icmp sgt i32 %13, 1
  %4332 = icmp sgt i32 %13, 0
  %4333 = add i32 %13, -2
  %4334 = zext i32 %4333 to i64
  %4335 = zext i32 %13 to i64
  %4336 = add nuw i32 %5, 1
  %4337 = icmp eq i32 %13, 1
  br label %4486

4338:                                             ; preds = %4324
  br i1 %4328, label %4339, label %5542

4339:                                             ; preds = %4338
  %4340 = icmp sgt i32 %13, 1
  %4341 = icmp sgt i32 %13, 0
  %4342 = add i32 %13, -2
  %4343 = zext i32 %4342 to i64
  %4344 = zext i32 %13 to i64
  %4345 = add nuw i32 %5, 1
  %4346 = icmp eq i32 %13, 1
  br label %4347

4347:                                             ; preds = %4339, %4484
  %4348 = phi float [ %4316, %4339 ], [ %4434, %4484 ]
  %4349 = phi i32 [ 0, %4339 ], [ %4436, %4484 ]
  %4350 = phi double [ 0.000000e+00, %4339 ], [ %4435, %4484 ]
  %4351 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4340, label %4352, label %4421

4352:                                             ; preds = %4347, %4411
  %4353 = phi i32 [ %4420, %4411 ], [ 0, %4347 ]
  %4354 = phi i64 [ %4362, %4411 ], [ %4344, %4347 ]
  %4355 = phi i64 [ %4419, %4411 ], [ %4343, %4347 ]
  %4356 = phi i32 [ %4417, %4411 ], [ %4351, %4347 ]
  %4357 = sub i32 %4342, %4353
  %4358 = tail call i32 @llvm.smin.i32(i32 %4357, i32 0)
  %4359 = sub i32 %4357, %4358
  %4360 = zext i32 %4359 to i64
  %4361 = add nuw nsw i64 %4360, 1
  %4362 = add nsw i64 %4354, -1
  %4363 = icmp ult i32 %4359, 31
  br i1 %4363, label %4399, label %4364

4364:                                             ; preds = %4352
  %4365 = and i64 %4361, 8589934560
  %4366 = sub i64 %4355, %4365
  br label %4367

4367:                                             ; preds = %4367, %4364
  %4368 = phi i64 [ 0, %4364 ], [ %4391, %4367 ]
  %4369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4387, %4367 ]
  %4370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4388, %4367 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4389, %4367 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4390, %4367 ]
  %4373 = sub i64 %4355, %4368
  %4374 = getelementptr inbounds i32, ptr %9, i64 %4373
  %4375 = getelementptr inbounds i32, ptr %4374, i64 -7
  %4376 = load <8 x i32>, ptr %4375, align 4, !tbaa !5
  %4377 = shufflevector <8 x i32> %4376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4378 = getelementptr inbounds i32, ptr %4374, i64 -15
  %4379 = load <8 x i32>, ptr %4378, align 4, !tbaa !5
  %4380 = shufflevector <8 x i32> %4379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4381 = getelementptr inbounds i32, ptr %4374, i64 -23
  %4382 = load <8 x i32>, ptr %4381, align 4, !tbaa !5
  %4383 = shufflevector <8 x i32> %4382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4384 = getelementptr inbounds i32, ptr %4374, i64 -31
  %4385 = load <8 x i32>, ptr %4384, align 4, !tbaa !5
  %4386 = shufflevector <8 x i32> %4385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4387 = mul <8 x i32> %4377, %4369
  %4388 = mul <8 x i32> %4380, %4370
  %4389 = mul <8 x i32> %4383, %4371
  %4390 = mul <8 x i32> %4386, %4372
  %4391 = add nuw i64 %4368, 32
  %4392 = icmp eq i64 %4391, %4365
  br i1 %4392, label %4393, label %4367, !llvm.loop !164

4393:                                             ; preds = %4367
  %4394 = mul <8 x i32> %4388, %4387
  %4395 = mul <8 x i32> %4389, %4394
  %4396 = mul <8 x i32> %4390, %4395
  %4397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4396)
  %4398 = icmp eq i64 %4361, %4365
  br i1 %4398, label %4411, label %4399

4399:                                             ; preds = %4352, %4393
  %4400 = phi i64 [ %4355, %4352 ], [ %4366, %4393 ]
  %4401 = phi i32 [ 1, %4352 ], [ %4397, %4393 ]
  br label %4402

4402:                                             ; preds = %4399, %4402
  %4403 = phi i64 [ %4408, %4402 ], [ %4400, %4399 ]
  %4404 = phi i32 [ %4407, %4402 ], [ %4401, %4399 ]
  %4405 = getelementptr inbounds i32, ptr %9, i64 %4403
  %4406 = load i32, ptr %4405, align 4, !tbaa !5
  %4407 = mul nsw i32 %4406, %4404
  %4408 = add nsw i64 %4403, -1
  %4409 = trunc i64 %4403 to i32
  %4410 = icmp sgt i32 %4409, 0
  br i1 %4410, label %4402, label %4411, !llvm.loop !165

4411:                                             ; preds = %4402, %4393
  %4412 = phi i32 [ %4397, %4393 ], [ %4407, %4402 ]
  %4413 = and i64 %4362, 4294967295
  %4414 = getelementptr inbounds i32, ptr %6, i64 %4413
  %4415 = load i32, ptr %4414, align 4, !tbaa !5
  %4416 = mul nsw i32 %4415, %4412
  %4417 = add nsw i32 %4416, %4356
  %4418 = icmp sgt i64 %4354, 2
  %4419 = add nsw i64 %4355, -1
  %4420 = add i32 %4353, 1
  br i1 %4418, label %4352, label %4421, !llvm.loop !166

4421:                                             ; preds = %4411, %4347
  %4422 = phi i32 [ %4351, %4347 ], [ %4417, %4411 ]
  %4423 = sext i32 %4422 to i64
  %4424 = getelementptr inbounds double, ptr %2, i64 %4423
  %4425 = load double, ptr %4424, align 8, !tbaa !18
  %4426 = getelementptr inbounds i8, ptr %4312, i64 %4423
  %4427 = load i8, ptr %4426, align 1, !tbaa !11
  %4428 = uitofp i8 %4427 to float
  %4429 = fcmp fast one double %4425, 0.000000e+00
  %4430 = fcmp fast ogt float %4348, %4428
  %4431 = select i1 %4429, i1 %4430, i1 false
  br i1 %4431, label %4432, label %4433

4432:                                             ; preds = %4421
  store float %4428, ptr %4314, align 4, !tbaa !162
  br label %4433

4433:                                             ; preds = %4432, %4421
  %4434 = phi float [ %4428, %4432 ], [ %4348, %4421 ]
  %4435 = fadd fast double %4425, %4350
  %4436 = add nuw nsw i32 %4349, 1
  br i1 %4341, label %4437, label %4484

4437:                                             ; preds = %4433
  %4438 = load i32, ptr %4, align 4, !tbaa !5
  %4439 = load i32, ptr %12, align 4, !tbaa !5
  %4440 = add nsw i32 %4439, -1
  %4441 = icmp slt i32 %4438, %4440
  br i1 %4441, label %4461, label %4442

4442:                                             ; preds = %4437
  %4443 = icmp eq i32 %4438, %4440
  br i1 %4443, label %4444, label %4477

4444:                                             ; preds = %4442
  store i32 0, ptr %4, align 4, !tbaa !5
  %4445 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4445, ptr %6, align 4, !tbaa !5
  br i1 %4346, label %4484, label %4446

4446:                                             ; preds = %4444, %4471
  %4447 = phi i64 [ %4475, %4471 ], [ 1, %4444 ]
  %4448 = getelementptr inbounds i32, ptr %4, i64 %4447
  %4449 = load i32, ptr %4448, align 4, !tbaa !5
  %4450 = getelementptr inbounds i32, ptr %12, i64 %4447
  %4451 = load i32, ptr %4450, align 4, !tbaa !5
  %4452 = add nsw i32 %4451, -1
  %4453 = icmp slt i32 %4449, %4452
  br i1 %4453, label %4454, label %4469

4454:                                             ; preds = %4446
  br i1 %4441, label %4461, label %4455

4455:                                             ; preds = %4454
  %4456 = getelementptr inbounds i32, ptr %7, i64 %4447
  %4457 = load i32, ptr %4456, align 4, !tbaa !5
  %4458 = getelementptr inbounds i32, ptr %6, i64 %4447
  %4459 = load i32, ptr %4458, align 4, !tbaa !5
  %4460 = add nsw i32 %4459, %4457
  store i32 %4460, ptr %4458, align 4, !tbaa !5
  br label %4479

4461:                                             ; preds = %4437, %4454
  %4462 = phi i32 [ %4449, %4454 ], [ %4438, %4437 ]
  %4463 = phi ptr [ %4448, %4454 ], [ %4, %4437 ]
  %4464 = phi i64 [ %4447, %4454 ], [ 0, %4437 ]
  %4465 = add nsw i32 %4462, 1
  store i32 %4465, ptr %4463, align 4, !tbaa !5
  %4466 = getelementptr inbounds i32, ptr %7, i64 %4464
  %4467 = load i32, ptr %4466, align 4, !tbaa !5
  %4468 = getelementptr inbounds i32, ptr %6, i64 %4464
  br label %4479

4469:                                             ; preds = %4446
  %4470 = icmp eq i32 %4449, %4452
  br i1 %4470, label %4471, label %4477

4471:                                             ; preds = %4469
  store i32 0, ptr %4448, align 4, !tbaa !5
  %4472 = getelementptr inbounds i32, ptr %8, i64 %4447
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = getelementptr inbounds i32, ptr %6, i64 %4447
  store i32 %4473, ptr %4474, align 4, !tbaa !5
  %4475 = add nuw nsw i64 %4447, 1
  %4476 = icmp eq i64 %4475, %4344
  br i1 %4476, label %4484, label %4446, !llvm.loop !167

4477:                                             ; preds = %4442, %4469
  %4478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4479:                                             ; preds = %4455, %4461
  %4480 = phi ptr [ %4468, %4461 ], [ %4448, %4455 ]
  %4481 = phi i32 [ %4467, %4461 ], [ 1, %4455 ]
  %4482 = load i32, ptr %4480, align 4, !tbaa !5
  %4483 = add nsw i32 %4482, %4481
  store i32 %4483, ptr %4480, align 4, !tbaa !5
  br label %4484

4484:                                             ; preds = %4471, %4479, %4444, %4433
  %4485 = icmp eq i32 %4436, %5
  br i1 %4485, label %5542, label %4347, !llvm.loop !168

4486:                                             ; preds = %4330, %4624
  %4487 = phi float [ %4316, %4330 ], [ %4572, %4624 ]
  %4488 = phi i32 [ 0, %4330 ], [ %4573, %4624 ]
  %4489 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4331, label %4490, label %4559

4490:                                             ; preds = %4486, %4549
  %4491 = phi i32 [ %4558, %4549 ], [ 0, %4486 ]
  %4492 = phi i64 [ %4500, %4549 ], [ %4335, %4486 ]
  %4493 = phi i64 [ %4557, %4549 ], [ %4334, %4486 ]
  %4494 = phi i32 [ %4555, %4549 ], [ %4489, %4486 ]
  %4495 = sub i32 %4333, %4491
  %4496 = tail call i32 @llvm.smin.i32(i32 %4495, i32 0)
  %4497 = sub i32 %4495, %4496
  %4498 = zext i32 %4497 to i64
  %4499 = add nuw nsw i64 %4498, 1
  %4500 = add nsw i64 %4492, -1
  %4501 = icmp ult i32 %4497, 31
  br i1 %4501, label %4537, label %4502

4502:                                             ; preds = %4490
  %4503 = and i64 %4499, 8589934560
  %4504 = sub i64 %4493, %4503
  br label %4505

4505:                                             ; preds = %4505, %4502
  %4506 = phi i64 [ 0, %4502 ], [ %4529, %4505 ]
  %4507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4525, %4505 ]
  %4508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4526, %4505 ]
  %4509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4527, %4505 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4528, %4505 ]
  %4511 = sub i64 %4493, %4506
  %4512 = getelementptr inbounds i32, ptr %11, i64 %4511
  %4513 = getelementptr inbounds i32, ptr %4512, i64 -7
  %4514 = load <8 x i32>, ptr %4513, align 4, !tbaa !5
  %4515 = shufflevector <8 x i32> %4514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4516 = getelementptr inbounds i32, ptr %4512, i64 -15
  %4517 = load <8 x i32>, ptr %4516, align 4, !tbaa !5
  %4518 = shufflevector <8 x i32> %4517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4519 = getelementptr inbounds i32, ptr %4512, i64 -23
  %4520 = load <8 x i32>, ptr %4519, align 4, !tbaa !5
  %4521 = shufflevector <8 x i32> %4520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4522 = getelementptr inbounds i32, ptr %4512, i64 -31
  %4523 = load <8 x i32>, ptr %4522, align 4, !tbaa !5
  %4524 = shufflevector <8 x i32> %4523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4525 = mul <8 x i32> %4515, %4507
  %4526 = mul <8 x i32> %4518, %4508
  %4527 = mul <8 x i32> %4521, %4509
  %4528 = mul <8 x i32> %4524, %4510
  %4529 = add nuw i64 %4506, 32
  %4530 = icmp eq i64 %4529, %4503
  br i1 %4530, label %4531, label %4505, !llvm.loop !169

4531:                                             ; preds = %4505
  %4532 = mul <8 x i32> %4526, %4525
  %4533 = mul <8 x i32> %4527, %4532
  %4534 = mul <8 x i32> %4528, %4533
  %4535 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4534)
  %4536 = icmp eq i64 %4499, %4503
  br i1 %4536, label %4549, label %4537

4537:                                             ; preds = %4490, %4531
  %4538 = phi i64 [ %4493, %4490 ], [ %4504, %4531 ]
  %4539 = phi i32 [ 1, %4490 ], [ %4535, %4531 ]
  br label %4540

4540:                                             ; preds = %4537, %4540
  %4541 = phi i64 [ %4546, %4540 ], [ %4538, %4537 ]
  %4542 = phi i32 [ %4545, %4540 ], [ %4539, %4537 ]
  %4543 = getelementptr inbounds i32, ptr %11, i64 %4541
  %4544 = load i32, ptr %4543, align 4, !tbaa !5
  %4545 = mul nsw i32 %4544, %4542
  %4546 = add nsw i64 %4541, -1
  %4547 = trunc i64 %4541 to i32
  %4548 = icmp sgt i32 %4547, 0
  br i1 %4548, label %4540, label %4549, !llvm.loop !170

4549:                                             ; preds = %4540, %4531
  %4550 = phi i32 [ %4535, %4531 ], [ %4545, %4540 ]
  %4551 = and i64 %4500, 4294967295
  %4552 = getelementptr inbounds i32, ptr %6, i64 %4551
  %4553 = load i32, ptr %4552, align 4, !tbaa !5
  %4554 = mul nsw i32 %4553, %4550
  %4555 = add nsw i32 %4554, %4494
  %4556 = icmp sgt i64 %4492, 2
  %4557 = add nsw i64 %4493, -1
  %4558 = add i32 %4491, 1
  br i1 %4556, label %4490, label %4559, !llvm.loop !171

4559:                                             ; preds = %4549, %4486
  %4560 = phi i32 [ %4489, %4486 ], [ %4555, %4549 ]
  %4561 = icmp slt i32 %4560, %5
  br i1 %4561, label %4564, label %4562

4562:                                             ; preds = %4559
  %4563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4564:                                             ; preds = %4559
  %4565 = sext i32 %4560 to i64
  %4566 = getelementptr inbounds i8, ptr %4312, i64 %4565
  %4567 = load i8, ptr %4566, align 1, !tbaa !11
  %4568 = uitofp i8 %4567 to float
  %4569 = fcmp fast ogt float %4487, %4568
  br i1 %4569, label %4570, label %4571

4570:                                             ; preds = %4564
  store float %4568, ptr %4314, align 4, !tbaa !162
  br label %4571

4571:                                             ; preds = %4564, %4570
  %4572 = phi float [ %4487, %4564 ], [ %4568, %4570 ]
  %4573 = add nuw nsw i32 %4488, 1
  br i1 %4332, label %4574, label %4624

4574:                                             ; preds = %4571
  %4575 = load i32, ptr %4, align 4, !tbaa !5
  %4576 = load i32, ptr %12, align 4, !tbaa !5
  %4577 = add nsw i32 %4576, -1
  %4578 = icmp slt i32 %4575, %4577
  br i1 %4578, label %4601, label %4579

4579:                                             ; preds = %4574
  %4580 = icmp eq i32 %4575, %4577
  br i1 %4580, label %4581, label %4617

4581:                                             ; preds = %4579
  store i32 0, ptr %4, align 4, !tbaa !5
  %4582 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4582, ptr %6, align 4, !tbaa !5
  br i1 %4337, label %4624, label %4583

4583:                                             ; preds = %4581, %4611
  %4584 = phi i64 [ %4615, %4611 ], [ 1, %4581 ]
  %4585 = getelementptr inbounds i32, ptr %4, i64 %4584
  %4586 = load i32, ptr %4585, align 4, !tbaa !5
  %4587 = getelementptr inbounds i32, ptr %12, i64 %4584
  %4588 = load i32, ptr %4587, align 4, !tbaa !5
  %4589 = add nsw i32 %4588, -1
  %4590 = icmp slt i32 %4586, %4589
  br i1 %4590, label %4591, label %4609

4591:                                             ; preds = %4583
  br i1 %4578, label %4601, label %4592

4592:                                             ; preds = %4591
  %4593 = shl i64 %4584, 32
  %4594 = add i64 %4593, -4294967296
  %4595 = ashr exact i64 %4594, 32
  %4596 = getelementptr inbounds i32, ptr %7, i64 %4595
  %4597 = load i32, ptr %4596, align 4, !tbaa !5
  %4598 = getelementptr inbounds i32, ptr %6, i64 %4584
  %4599 = load i32, ptr %4598, align 4, !tbaa !5
  %4600 = add nsw i32 %4599, %4597
  store i32 %4600, ptr %4598, align 4, !tbaa !5
  br label %4619

4601:                                             ; preds = %4574, %4591
  %4602 = phi i32 [ %4586, %4591 ], [ %4575, %4574 ]
  %4603 = phi ptr [ %4585, %4591 ], [ %4, %4574 ]
  %4604 = phi i64 [ %4584, %4591 ], [ 0, %4574 ]
  %4605 = add nsw i32 %4602, 1
  store i32 %4605, ptr %4603, align 4, !tbaa !5
  %4606 = getelementptr inbounds i32, ptr %7, i64 %4604
  %4607 = load i32, ptr %4606, align 4, !tbaa !5
  %4608 = getelementptr inbounds i32, ptr %6, i64 %4604
  br label %4619

4609:                                             ; preds = %4583
  %4610 = icmp eq i32 %4586, %4589
  br i1 %4610, label %4611, label %4617

4611:                                             ; preds = %4609
  store i32 0, ptr %4585, align 4, !tbaa !5
  %4612 = getelementptr inbounds i32, ptr %8, i64 %4584
  %4613 = load i32, ptr %4612, align 4, !tbaa !5
  %4614 = getelementptr inbounds i32, ptr %6, i64 %4584
  store i32 %4613, ptr %4614, align 4, !tbaa !5
  %4615 = add nuw nsw i64 %4584, 1
  %4616 = icmp eq i64 %4615, %4335
  br i1 %4616, label %4624, label %4583, !llvm.loop !172

4617:                                             ; preds = %4579, %4609
  %4618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4619:                                             ; preds = %4592, %4601
  %4620 = phi ptr [ %4608, %4601 ], [ %4585, %4592 ]
  %4621 = phi i32 [ %4607, %4601 ], [ 1, %4592 ]
  %4622 = load i32, ptr %4620, align 4, !tbaa !5
  %4623 = add nsw i32 %4622, %4621
  store i32 %4623, ptr %4620, align 4, !tbaa !5
  br label %4624

4624:                                             ; preds = %4611, %4619, %4581, %4571
  %4625 = icmp eq i32 %4573, %5
  br i1 %4625, label %5542, label %4486, !llvm.loop !173

4626:                                             ; preds = %4323
  %4627 = getelementptr inbounds i32, ptr %3, i64 %19
  %4628 = load i32, ptr %4627, align 4, !tbaa !5
  %4629 = icmp eq i32 %4628, 0
  %4630 = icmp sgt i32 %5, 0
  br i1 %4629, label %4640, label %4631

4631:                                             ; preds = %4626
  br i1 %4630, label %4632, label %5542

4632:                                             ; preds = %4631
  %4633 = icmp sgt i32 %13, 1
  %4634 = icmp sgt i32 %13, 0
  %4635 = add i32 %13, -2
  %4636 = zext i32 %4635 to i64
  %4637 = zext i32 %13 to i64
  %4638 = add nuw i32 %5, 1
  %4639 = icmp eq i32 %13, 1
  br label %4784

4640:                                             ; preds = %4626
  br i1 %4630, label %4641, label %5542

4641:                                             ; preds = %4640
  %4642 = icmp sgt i32 %13, 1
  %4643 = icmp sgt i32 %13, 0
  %4644 = add i32 %13, -2
  %4645 = zext i32 %4644 to i64
  %4646 = zext i32 %13 to i64
  %4647 = add nuw i32 %5, 1
  %4648 = icmp eq i32 %13, 1
  br label %4649

4649:                                             ; preds = %4641, %4782
  %4650 = phi float [ %4316, %4641 ], [ %4732, %4782 ]
  %4651 = phi i32 [ 0, %4641 ], [ %4734, %4782 ]
  %4652 = phi double [ 0.000000e+00, %4641 ], [ %4733, %4782 ]
  %4653 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4642, label %4654, label %4723

4654:                                             ; preds = %4649, %4713
  %4655 = phi i32 [ %4722, %4713 ], [ 0, %4649 ]
  %4656 = phi i64 [ %4664, %4713 ], [ %4646, %4649 ]
  %4657 = phi i64 [ %4721, %4713 ], [ %4645, %4649 ]
  %4658 = phi i32 [ %4719, %4713 ], [ %4653, %4649 ]
  %4659 = sub i32 %4644, %4655
  %4660 = tail call i32 @llvm.smin.i32(i32 %4659, i32 0)
  %4661 = sub i32 %4659, %4660
  %4662 = zext i32 %4661 to i64
  %4663 = add nuw nsw i64 %4662, 1
  %4664 = add nsw i64 %4656, -1
  %4665 = icmp ult i32 %4661, 31
  br i1 %4665, label %4701, label %4666

4666:                                             ; preds = %4654
  %4667 = and i64 %4663, 8589934560
  %4668 = sub i64 %4657, %4667
  br label %4669

4669:                                             ; preds = %4669, %4666
  %4670 = phi i64 [ 0, %4666 ], [ %4693, %4669 ]
  %4671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4689, %4669 ]
  %4672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4690, %4669 ]
  %4673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4691, %4669 ]
  %4674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4692, %4669 ]
  %4675 = sub i64 %4657, %4670
  %4676 = getelementptr inbounds i32, ptr %9, i64 %4675
  %4677 = getelementptr inbounds i32, ptr %4676, i64 -7
  %4678 = load <8 x i32>, ptr %4677, align 4, !tbaa !5
  %4679 = shufflevector <8 x i32> %4678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4680 = getelementptr inbounds i32, ptr %4676, i64 -15
  %4681 = load <8 x i32>, ptr %4680, align 4, !tbaa !5
  %4682 = shufflevector <8 x i32> %4681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4683 = getelementptr inbounds i32, ptr %4676, i64 -23
  %4684 = load <8 x i32>, ptr %4683, align 4, !tbaa !5
  %4685 = shufflevector <8 x i32> %4684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4686 = getelementptr inbounds i32, ptr %4676, i64 -31
  %4687 = load <8 x i32>, ptr %4686, align 4, !tbaa !5
  %4688 = shufflevector <8 x i32> %4687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4689 = mul <8 x i32> %4679, %4671
  %4690 = mul <8 x i32> %4682, %4672
  %4691 = mul <8 x i32> %4685, %4673
  %4692 = mul <8 x i32> %4688, %4674
  %4693 = add nuw i64 %4670, 32
  %4694 = icmp eq i64 %4693, %4667
  br i1 %4694, label %4695, label %4669, !llvm.loop !174

4695:                                             ; preds = %4669
  %4696 = mul <8 x i32> %4690, %4689
  %4697 = mul <8 x i32> %4691, %4696
  %4698 = mul <8 x i32> %4692, %4697
  %4699 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4698)
  %4700 = icmp eq i64 %4663, %4667
  br i1 %4700, label %4713, label %4701

4701:                                             ; preds = %4654, %4695
  %4702 = phi i64 [ %4657, %4654 ], [ %4668, %4695 ]
  %4703 = phi i32 [ 1, %4654 ], [ %4699, %4695 ]
  br label %4704

4704:                                             ; preds = %4701, %4704
  %4705 = phi i64 [ %4710, %4704 ], [ %4702, %4701 ]
  %4706 = phi i32 [ %4709, %4704 ], [ %4703, %4701 ]
  %4707 = getelementptr inbounds i32, ptr %9, i64 %4705
  %4708 = load i32, ptr %4707, align 4, !tbaa !5
  %4709 = mul nsw i32 %4708, %4706
  %4710 = add nsw i64 %4705, -1
  %4711 = trunc i64 %4705 to i32
  %4712 = icmp sgt i32 %4711, 0
  br i1 %4712, label %4704, label %4713, !llvm.loop !175

4713:                                             ; preds = %4704, %4695
  %4714 = phi i32 [ %4699, %4695 ], [ %4709, %4704 ]
  %4715 = and i64 %4664, 4294967295
  %4716 = getelementptr inbounds i32, ptr %6, i64 %4715
  %4717 = load i32, ptr %4716, align 4, !tbaa !5
  %4718 = mul nsw i32 %4717, %4714
  %4719 = add nsw i32 %4718, %4658
  %4720 = icmp sgt i64 %4656, 2
  %4721 = add nsw i64 %4657, -1
  %4722 = add i32 %4655, 1
  br i1 %4720, label %4654, label %4723, !llvm.loop !176

4723:                                             ; preds = %4713, %4649
  %4724 = phi i32 [ %4653, %4649 ], [ %4719, %4713 ]
  %4725 = sext i32 %4724 to i64
  %4726 = getelementptr inbounds i8, ptr %4312, i64 %4725
  %4727 = load i8, ptr %4726, align 1, !tbaa !11
  %4728 = uitofp i8 %4727 to float
  %4729 = fcmp fast ogt float %4650, %4728
  br i1 %4729, label %4730, label %4731

4730:                                             ; preds = %4723
  store float %4728, ptr %4314, align 4, !tbaa !162
  br label %4731

4731:                                             ; preds = %4730, %4723
  %4732 = phi float [ %4728, %4730 ], [ %4650, %4723 ]
  %4733 = fadd fast double %4652, 1.000000e+00
  %4734 = add nuw nsw i32 %4651, 1
  br i1 %4643, label %4735, label %4782

4735:                                             ; preds = %4731
  %4736 = load i32, ptr %4, align 4, !tbaa !5
  %4737 = load i32, ptr %12, align 4, !tbaa !5
  %4738 = add nsw i32 %4737, -1
  %4739 = icmp slt i32 %4736, %4738
  br i1 %4739, label %4759, label %4740

4740:                                             ; preds = %4735
  %4741 = icmp eq i32 %4736, %4738
  br i1 %4741, label %4742, label %4775

4742:                                             ; preds = %4740
  store i32 0, ptr %4, align 4, !tbaa !5
  %4743 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4743, ptr %6, align 4, !tbaa !5
  br i1 %4648, label %4782, label %4744

4744:                                             ; preds = %4742, %4769
  %4745 = phi i64 [ %4773, %4769 ], [ 1, %4742 ]
  %4746 = getelementptr inbounds i32, ptr %4, i64 %4745
  %4747 = load i32, ptr %4746, align 4, !tbaa !5
  %4748 = getelementptr inbounds i32, ptr %12, i64 %4745
  %4749 = load i32, ptr %4748, align 4, !tbaa !5
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4747, %4750
  br i1 %4751, label %4752, label %4767

4752:                                             ; preds = %4744
  br i1 %4739, label %4759, label %4753

4753:                                             ; preds = %4752
  %4754 = getelementptr inbounds i32, ptr %7, i64 %4745
  %4755 = load i32, ptr %4754, align 4, !tbaa !5
  %4756 = getelementptr inbounds i32, ptr %6, i64 %4745
  %4757 = load i32, ptr %4756, align 4, !tbaa !5
  %4758 = add nsw i32 %4757, %4755
  store i32 %4758, ptr %4756, align 4, !tbaa !5
  br label %4777

4759:                                             ; preds = %4735, %4752
  %4760 = phi i32 [ %4747, %4752 ], [ %4736, %4735 ]
  %4761 = phi ptr [ %4746, %4752 ], [ %4, %4735 ]
  %4762 = phi i64 [ %4745, %4752 ], [ 0, %4735 ]
  %4763 = add nsw i32 %4760, 1
  store i32 %4763, ptr %4761, align 4, !tbaa !5
  %4764 = getelementptr inbounds i32, ptr %7, i64 %4762
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = getelementptr inbounds i32, ptr %6, i64 %4762
  br label %4777

4767:                                             ; preds = %4744
  %4768 = icmp eq i32 %4747, %4750
  br i1 %4768, label %4769, label %4775

4769:                                             ; preds = %4767
  store i32 0, ptr %4746, align 4, !tbaa !5
  %4770 = getelementptr inbounds i32, ptr %8, i64 %4745
  %4771 = load i32, ptr %4770, align 4, !tbaa !5
  %4772 = getelementptr inbounds i32, ptr %6, i64 %4745
  store i32 %4771, ptr %4772, align 4, !tbaa !5
  %4773 = add nuw nsw i64 %4745, 1
  %4774 = icmp eq i64 %4773, %4646
  br i1 %4774, label %4782, label %4744, !llvm.loop !177

4775:                                             ; preds = %4740, %4767
  %4776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4777:                                             ; preds = %4753, %4759
  %4778 = phi ptr [ %4766, %4759 ], [ %4746, %4753 ]
  %4779 = phi i32 [ %4765, %4759 ], [ 1, %4753 ]
  %4780 = load i32, ptr %4778, align 4, !tbaa !5
  %4781 = add nsw i32 %4780, %4779
  store i32 %4781, ptr %4778, align 4, !tbaa !5
  br label %4782

4782:                                             ; preds = %4769, %4777, %4742, %4731
  %4783 = icmp eq i32 %4734, %5
  br i1 %4783, label %5542, label %4649, !llvm.loop !178

4784:                                             ; preds = %4632, %4922
  %4785 = phi float [ %4316, %4632 ], [ %4870, %4922 ]
  %4786 = phi i32 [ 0, %4632 ], [ %4871, %4922 ]
  %4787 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4633, label %4788, label %4857

4788:                                             ; preds = %4784, %4847
  %4789 = phi i32 [ %4856, %4847 ], [ 0, %4784 ]
  %4790 = phi i64 [ %4798, %4847 ], [ %4637, %4784 ]
  %4791 = phi i64 [ %4855, %4847 ], [ %4636, %4784 ]
  %4792 = phi i32 [ %4853, %4847 ], [ %4787, %4784 ]
  %4793 = sub i32 %4635, %4789
  %4794 = tail call i32 @llvm.smin.i32(i32 %4793, i32 0)
  %4795 = sub i32 %4793, %4794
  %4796 = zext i32 %4795 to i64
  %4797 = add nuw nsw i64 %4796, 1
  %4798 = add nsw i64 %4790, -1
  %4799 = icmp ult i32 %4795, 31
  br i1 %4799, label %4835, label %4800

4800:                                             ; preds = %4788
  %4801 = and i64 %4797, 8589934560
  %4802 = sub i64 %4791, %4801
  br label %4803

4803:                                             ; preds = %4803, %4800
  %4804 = phi i64 [ 0, %4800 ], [ %4827, %4803 ]
  %4805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4823, %4803 ]
  %4806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4824, %4803 ]
  %4807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4825, %4803 ]
  %4808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4826, %4803 ]
  %4809 = sub i64 %4791, %4804
  %4810 = getelementptr inbounds i32, ptr %11, i64 %4809
  %4811 = getelementptr inbounds i32, ptr %4810, i64 -7
  %4812 = load <8 x i32>, ptr %4811, align 4, !tbaa !5
  %4813 = shufflevector <8 x i32> %4812, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4814 = getelementptr inbounds i32, ptr %4810, i64 -15
  %4815 = load <8 x i32>, ptr %4814, align 4, !tbaa !5
  %4816 = shufflevector <8 x i32> %4815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4817 = getelementptr inbounds i32, ptr %4810, i64 -23
  %4818 = load <8 x i32>, ptr %4817, align 4, !tbaa !5
  %4819 = shufflevector <8 x i32> %4818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4820 = getelementptr inbounds i32, ptr %4810, i64 -31
  %4821 = load <8 x i32>, ptr %4820, align 4, !tbaa !5
  %4822 = shufflevector <8 x i32> %4821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4823 = mul <8 x i32> %4813, %4805
  %4824 = mul <8 x i32> %4816, %4806
  %4825 = mul <8 x i32> %4819, %4807
  %4826 = mul <8 x i32> %4822, %4808
  %4827 = add nuw i64 %4804, 32
  %4828 = icmp eq i64 %4827, %4801
  br i1 %4828, label %4829, label %4803, !llvm.loop !179

4829:                                             ; preds = %4803
  %4830 = mul <8 x i32> %4824, %4823
  %4831 = mul <8 x i32> %4825, %4830
  %4832 = mul <8 x i32> %4826, %4831
  %4833 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4832)
  %4834 = icmp eq i64 %4797, %4801
  br i1 %4834, label %4847, label %4835

4835:                                             ; preds = %4788, %4829
  %4836 = phi i64 [ %4791, %4788 ], [ %4802, %4829 ]
  %4837 = phi i32 [ 1, %4788 ], [ %4833, %4829 ]
  br label %4838

4838:                                             ; preds = %4835, %4838
  %4839 = phi i64 [ %4844, %4838 ], [ %4836, %4835 ]
  %4840 = phi i32 [ %4843, %4838 ], [ %4837, %4835 ]
  %4841 = getelementptr inbounds i32, ptr %11, i64 %4839
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = mul nsw i32 %4842, %4840
  %4844 = add nsw i64 %4839, -1
  %4845 = trunc i64 %4839 to i32
  %4846 = icmp sgt i32 %4845, 0
  br i1 %4846, label %4838, label %4847, !llvm.loop !180

4847:                                             ; preds = %4838, %4829
  %4848 = phi i32 [ %4833, %4829 ], [ %4843, %4838 ]
  %4849 = and i64 %4798, 4294967295
  %4850 = getelementptr inbounds i32, ptr %6, i64 %4849
  %4851 = load i32, ptr %4850, align 4, !tbaa !5
  %4852 = mul nsw i32 %4851, %4848
  %4853 = add nsw i32 %4852, %4792
  %4854 = icmp sgt i64 %4790, 2
  %4855 = add nsw i64 %4791, -1
  %4856 = add i32 %4789, 1
  br i1 %4854, label %4788, label %4857, !llvm.loop !181

4857:                                             ; preds = %4847, %4784
  %4858 = phi i32 [ %4787, %4784 ], [ %4853, %4847 ]
  %4859 = icmp slt i32 %4858, %5
  br i1 %4859, label %4862, label %4860

4860:                                             ; preds = %4857
  %4861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4862:                                             ; preds = %4857
  %4863 = sext i32 %4858 to i64
  %4864 = getelementptr inbounds i8, ptr %4312, i64 %4863
  %4865 = load i8, ptr %4864, align 1, !tbaa !11
  %4866 = uitofp i8 %4865 to float
  %4867 = fcmp fast ogt float %4785, %4866
  br i1 %4867, label %4868, label %4869

4868:                                             ; preds = %4862
  store float %4866, ptr %4314, align 4, !tbaa !162
  br label %4869

4869:                                             ; preds = %4868, %4862
  %4870 = phi float [ %4866, %4868 ], [ %4785, %4862 ]
  %4871 = add nuw nsw i32 %4786, 1
  br i1 %4634, label %4872, label %4922

4872:                                             ; preds = %4869
  %4873 = load i32, ptr %4, align 4, !tbaa !5
  %4874 = load i32, ptr %12, align 4, !tbaa !5
  %4875 = add nsw i32 %4874, -1
  %4876 = icmp slt i32 %4873, %4875
  br i1 %4876, label %4899, label %4877

4877:                                             ; preds = %4872
  %4878 = icmp eq i32 %4873, %4875
  br i1 %4878, label %4879, label %4915

4879:                                             ; preds = %4877
  store i32 0, ptr %4, align 4, !tbaa !5
  %4880 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4880, ptr %6, align 4, !tbaa !5
  br i1 %4639, label %4922, label %4881

4881:                                             ; preds = %4879, %4909
  %4882 = phi i64 [ %4913, %4909 ], [ 1, %4879 ]
  %4883 = getelementptr inbounds i32, ptr %4, i64 %4882
  %4884 = load i32, ptr %4883, align 4, !tbaa !5
  %4885 = getelementptr inbounds i32, ptr %12, i64 %4882
  %4886 = load i32, ptr %4885, align 4, !tbaa !5
  %4887 = add nsw i32 %4886, -1
  %4888 = icmp slt i32 %4884, %4887
  br i1 %4888, label %4889, label %4907

4889:                                             ; preds = %4881
  br i1 %4876, label %4899, label %4890

4890:                                             ; preds = %4889
  %4891 = shl i64 %4882, 32
  %4892 = add i64 %4891, -4294967296
  %4893 = ashr exact i64 %4892, 32
  %4894 = getelementptr inbounds i32, ptr %7, i64 %4893
  %4895 = load i32, ptr %4894, align 4, !tbaa !5
  %4896 = getelementptr inbounds i32, ptr %6, i64 %4882
  %4897 = load i32, ptr %4896, align 4, !tbaa !5
  %4898 = add nsw i32 %4897, %4895
  store i32 %4898, ptr %4896, align 4, !tbaa !5
  br label %4917

4899:                                             ; preds = %4872, %4889
  %4900 = phi i32 [ %4884, %4889 ], [ %4873, %4872 ]
  %4901 = phi ptr [ %4883, %4889 ], [ %4, %4872 ]
  %4902 = phi i64 [ %4882, %4889 ], [ 0, %4872 ]
  %4903 = add nsw i32 %4900, 1
  store i32 %4903, ptr %4901, align 4, !tbaa !5
  %4904 = getelementptr inbounds i32, ptr %7, i64 %4902
  %4905 = load i32, ptr %4904, align 4, !tbaa !5
  %4906 = getelementptr inbounds i32, ptr %6, i64 %4902
  br label %4917

4907:                                             ; preds = %4881
  %4908 = icmp eq i32 %4884, %4887
  br i1 %4908, label %4909, label %4915

4909:                                             ; preds = %4907
  store i32 0, ptr %4883, align 4, !tbaa !5
  %4910 = getelementptr inbounds i32, ptr %8, i64 %4882
  %4911 = load i32, ptr %4910, align 4, !tbaa !5
  %4912 = getelementptr inbounds i32, ptr %6, i64 %4882
  store i32 %4911, ptr %4912, align 4, !tbaa !5
  %4913 = add nuw nsw i64 %4882, 1
  %4914 = icmp eq i64 %4913, %4637
  br i1 %4914, label %4922, label %4881, !llvm.loop !182

4915:                                             ; preds = %4877, %4907
  %4916 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4917:                                             ; preds = %4890, %4899
  %4918 = phi ptr [ %4906, %4899 ], [ %4883, %4890 ]
  %4919 = phi i32 [ %4905, %4899 ], [ 1, %4890 ]
  %4920 = load i32, ptr %4918, align 4, !tbaa !5
  %4921 = add nsw i32 %4920, %4919
  store i32 %4921, ptr %4918, align 4, !tbaa !5
  br label %4922

4922:                                             ; preds = %4909, %4917, %4879, %4869
  %4923 = icmp eq i32 %4871, %5
  br i1 %4923, label %5542, label %4784, !llvm.loop !183

4924:                                             ; preds = %4323
  %4925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 82, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

4926:                                             ; preds = %18
  %4927 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4928 = load ptr, ptr %4927, align 8, !tbaa !9
  %4929 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4930 = load ptr, ptr %4929, align 8, !tbaa !9
  %4931 = load i8, ptr %4928, align 1, !tbaa !11
  %4932 = uitofp i8 %4931 to double
  store double %4932, ptr %4930, align 8, !tbaa !18
  %4933 = icmp eq i32 %13, 0
  br i1 %4933, label %4934, label %4939

4934:                                             ; preds = %4926
  %4935 = load i8, ptr %4928, align 1, !tbaa !11
  %4936 = uitofp i8 %4935 to double
  %4937 = fcmp fast ogt double %4932, %4936
  br i1 %4937, label %4938, label %5542

4938:                                             ; preds = %4934
  store double %4936, ptr %4930, align 8, !tbaa !18
  br label %5542

4939:                                             ; preds = %4926
  switch i32 %1, label %5540 [
    i32 1, label %4940
    i32 0, label %5242
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5542

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5102

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5542

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5100
  %4964 = phi double [ %4932, %4955 ], [ %5050, %5100 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5052, %5100 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5051, %5100 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !5
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !5
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !5
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !5
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !184

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !5
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !185

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !5
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !186

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !18
  %5042 = getelementptr inbounds i8, ptr %4928, i64 %5039
  %5043 = load i8, ptr %5042, align 1, !tbaa !11
  %5044 = uitofp i8 %5043 to double
  %5045 = fcmp fast one double %5041, 0.000000e+00
  %5046 = fcmp fast ogt double %4964, %5044
  %5047 = select i1 %5045, i1 %5046, i1 false
  br i1 %5047, label %5048, label %5049

5048:                                             ; preds = %5037
  store double %5044, ptr %4930, align 8, !tbaa !18
  br label %5049

5049:                                             ; preds = %5048, %5037
  %5050 = phi double [ %5044, %5048 ], [ %4964, %5037 ]
  %5051 = fadd fast double %5041, %4966
  %5052 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5053, label %5100

5053:                                             ; preds = %5049
  %5054 = load i32, ptr %4, align 4, !tbaa !5
  %5055 = load i32, ptr %12, align 4, !tbaa !5
  %5056 = add nsw i32 %5055, -1
  %5057 = icmp slt i32 %5054, %5056
  br i1 %5057, label %5077, label %5058

5058:                                             ; preds = %5053
  %5059 = icmp eq i32 %5054, %5056
  br i1 %5059, label %5060, label %5093

5060:                                             ; preds = %5058
  store i32 0, ptr %4, align 4, !tbaa !5
  %5061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5061, ptr %6, align 4, !tbaa !5
  br i1 %4962, label %5100, label %5062

5062:                                             ; preds = %5060, %5087
  %5063 = phi i64 [ %5091, %5087 ], [ 1, %5060 ]
  %5064 = getelementptr inbounds i32, ptr %4, i64 %5063
  %5065 = load i32, ptr %5064, align 4, !tbaa !5
  %5066 = getelementptr inbounds i32, ptr %12, i64 %5063
  %5067 = load i32, ptr %5066, align 4, !tbaa !5
  %5068 = add nsw i32 %5067, -1
  %5069 = icmp slt i32 %5065, %5068
  br i1 %5069, label %5070, label %5085

5070:                                             ; preds = %5062
  br i1 %5057, label %5077, label %5071

5071:                                             ; preds = %5070
  %5072 = getelementptr inbounds i32, ptr %7, i64 %5063
  %5073 = load i32, ptr %5072, align 4, !tbaa !5
  %5074 = getelementptr inbounds i32, ptr %6, i64 %5063
  %5075 = load i32, ptr %5074, align 4, !tbaa !5
  %5076 = add nsw i32 %5075, %5073
  store i32 %5076, ptr %5074, align 4, !tbaa !5
  br label %5095

5077:                                             ; preds = %5053, %5070
  %5078 = phi i32 [ %5065, %5070 ], [ %5054, %5053 ]
  %5079 = phi ptr [ %5064, %5070 ], [ %4, %5053 ]
  %5080 = phi i64 [ %5063, %5070 ], [ 0, %5053 ]
  %5081 = add nsw i32 %5078, 1
  store i32 %5081, ptr %5079, align 4, !tbaa !5
  %5082 = getelementptr inbounds i32, ptr %7, i64 %5080
  %5083 = load i32, ptr %5082, align 4, !tbaa !5
  %5084 = getelementptr inbounds i32, ptr %6, i64 %5080
  br label %5095

5085:                                             ; preds = %5062
  %5086 = icmp eq i32 %5065, %5068
  br i1 %5086, label %5087, label %5093

5087:                                             ; preds = %5085
  store i32 0, ptr %5064, align 4, !tbaa !5
  %5088 = getelementptr inbounds i32, ptr %8, i64 %5063
  %5089 = load i32, ptr %5088, align 4, !tbaa !5
  %5090 = getelementptr inbounds i32, ptr %6, i64 %5063
  store i32 %5089, ptr %5090, align 4, !tbaa !5
  %5091 = add nuw nsw i64 %5063, 1
  %5092 = icmp eq i64 %5091, %4960
  br i1 %5092, label %5100, label %5062, !llvm.loop !187

5093:                                             ; preds = %5058, %5085
  %5094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5095:                                             ; preds = %5071, %5077
  %5096 = phi ptr [ %5084, %5077 ], [ %5064, %5071 ]
  %5097 = phi i32 [ %5083, %5077 ], [ 1, %5071 ]
  %5098 = load i32, ptr %5096, align 4, !tbaa !5
  %5099 = add nsw i32 %5098, %5097
  store i32 %5099, ptr %5096, align 4, !tbaa !5
  br label %5100

5100:                                             ; preds = %5087, %5095, %5060, %5049
  %5101 = icmp eq i32 %5052, %5
  br i1 %5101, label %5542, label %4963, !llvm.loop !188

5102:                                             ; preds = %4946, %5240
  %5103 = phi double [ %4932, %4946 ], [ %5188, %5240 ]
  %5104 = phi i32 [ 0, %4946 ], [ %5189, %5240 ]
  %5105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4947, label %5106, label %5175

5106:                                             ; preds = %5102, %5165
  %5107 = phi i32 [ %5174, %5165 ], [ 0, %5102 ]
  %5108 = phi i64 [ %5116, %5165 ], [ %4951, %5102 ]
  %5109 = phi i64 [ %5173, %5165 ], [ %4950, %5102 ]
  %5110 = phi i32 [ %5171, %5165 ], [ %5105, %5102 ]
  %5111 = sub i32 %4949, %5107
  %5112 = tail call i32 @llvm.smin.i32(i32 %5111, i32 0)
  %5113 = sub i32 %5111, %5112
  %5114 = zext i32 %5113 to i64
  %5115 = add nuw nsw i64 %5114, 1
  %5116 = add nsw i64 %5108, -1
  %5117 = icmp ult i32 %5113, 31
  br i1 %5117, label %5153, label %5118

5118:                                             ; preds = %5106
  %5119 = and i64 %5115, 8589934560
  %5120 = sub i64 %5109, %5119
  br label %5121

5121:                                             ; preds = %5121, %5118
  %5122 = phi i64 [ 0, %5118 ], [ %5145, %5121 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5141, %5121 ]
  %5124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5142, %5121 ]
  %5125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5143, %5121 ]
  %5126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5144, %5121 ]
  %5127 = sub i64 %5109, %5122
  %5128 = getelementptr inbounds i32, ptr %11, i64 %5127
  %5129 = getelementptr inbounds i32, ptr %5128, i64 -7
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !5
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = getelementptr inbounds i32, ptr %5128, i64 -15
  %5133 = load <8 x i32>, ptr %5132, align 4, !tbaa !5
  %5134 = shufflevector <8 x i32> %5133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5135 = getelementptr inbounds i32, ptr %5128, i64 -23
  %5136 = load <8 x i32>, ptr %5135, align 4, !tbaa !5
  %5137 = shufflevector <8 x i32> %5136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5138 = getelementptr inbounds i32, ptr %5128, i64 -31
  %5139 = load <8 x i32>, ptr %5138, align 4, !tbaa !5
  %5140 = shufflevector <8 x i32> %5139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5141 = mul <8 x i32> %5131, %5123
  %5142 = mul <8 x i32> %5134, %5124
  %5143 = mul <8 x i32> %5137, %5125
  %5144 = mul <8 x i32> %5140, %5126
  %5145 = add nuw i64 %5122, 32
  %5146 = icmp eq i64 %5145, %5119
  br i1 %5146, label %5147, label %5121, !llvm.loop !189

5147:                                             ; preds = %5121
  %5148 = mul <8 x i32> %5142, %5141
  %5149 = mul <8 x i32> %5143, %5148
  %5150 = mul <8 x i32> %5144, %5149
  %5151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5150)
  %5152 = icmp eq i64 %5115, %5119
  br i1 %5152, label %5165, label %5153

5153:                                             ; preds = %5106, %5147
  %5154 = phi i64 [ %5109, %5106 ], [ %5120, %5147 ]
  %5155 = phi i32 [ 1, %5106 ], [ %5151, %5147 ]
  br label %5156

5156:                                             ; preds = %5153, %5156
  %5157 = phi i64 [ %5162, %5156 ], [ %5154, %5153 ]
  %5158 = phi i32 [ %5161, %5156 ], [ %5155, %5153 ]
  %5159 = getelementptr inbounds i32, ptr %11, i64 %5157
  %5160 = load i32, ptr %5159, align 4, !tbaa !5
  %5161 = mul nsw i32 %5160, %5158
  %5162 = add nsw i64 %5157, -1
  %5163 = trunc i64 %5157 to i32
  %5164 = icmp sgt i32 %5163, 0
  br i1 %5164, label %5156, label %5165, !llvm.loop !190

5165:                                             ; preds = %5156, %5147
  %5166 = phi i32 [ %5151, %5147 ], [ %5161, %5156 ]
  %5167 = and i64 %5116, 4294967295
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5167
  %5169 = load i32, ptr %5168, align 4, !tbaa !5
  %5170 = mul nsw i32 %5169, %5166
  %5171 = add nsw i32 %5170, %5110
  %5172 = icmp sgt i64 %5108, 2
  %5173 = add nsw i64 %5109, -1
  %5174 = add i32 %5107, 1
  br i1 %5172, label %5106, label %5175, !llvm.loop !191

5175:                                             ; preds = %5165, %5102
  %5176 = phi i32 [ %5105, %5102 ], [ %5171, %5165 ]
  %5177 = icmp slt i32 %5176, %5
  br i1 %5177, label %5180, label %5178

5178:                                             ; preds = %5175
  %5179 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

5180:                                             ; preds = %5175
  %5181 = sext i32 %5176 to i64
  %5182 = getelementptr inbounds i8, ptr %4928, i64 %5181
  %5183 = load i8, ptr %5182, align 1, !tbaa !11
  %5184 = uitofp i8 %5183 to double
  %5185 = fcmp fast ogt double %5103, %5184
  br i1 %5185, label %5186, label %5187

5186:                                             ; preds = %5180
  store double %5184, ptr %4930, align 8, !tbaa !18
  br label %5187

5187:                                             ; preds = %5180, %5186
  %5188 = phi double [ %5103, %5180 ], [ %5184, %5186 ]
  %5189 = add nuw nsw i32 %5104, 1
  br i1 %4948, label %5190, label %5240

5190:                                             ; preds = %5187
  %5191 = load i32, ptr %4, align 4, !tbaa !5
  %5192 = load i32, ptr %12, align 4, !tbaa !5
  %5193 = add nsw i32 %5192, -1
  %5194 = icmp slt i32 %5191, %5193
  br i1 %5194, label %5217, label %5195

5195:                                             ; preds = %5190
  %5196 = icmp eq i32 %5191, %5193
  br i1 %5196, label %5197, label %5233

5197:                                             ; preds = %5195
  store i32 0, ptr %4, align 4, !tbaa !5
  %5198 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5198, ptr %6, align 4, !tbaa !5
  br i1 %4953, label %5240, label %5199

5199:                                             ; preds = %5197, %5227
  %5200 = phi i64 [ %5231, %5227 ], [ 1, %5197 ]
  %5201 = getelementptr inbounds i32, ptr %4, i64 %5200
  %5202 = load i32, ptr %5201, align 4, !tbaa !5
  %5203 = getelementptr inbounds i32, ptr %12, i64 %5200
  %5204 = load i32, ptr %5203, align 4, !tbaa !5
  %5205 = add nsw i32 %5204, -1
  %5206 = icmp slt i32 %5202, %5205
  br i1 %5206, label %5207, label %5225

5207:                                             ; preds = %5199
  br i1 %5194, label %5217, label %5208

5208:                                             ; preds = %5207
  %5209 = shl i64 %5200, 32
  %5210 = add i64 %5209, -4294967296
  %5211 = ashr exact i64 %5210, 32
  %5212 = getelementptr inbounds i32, ptr %7, i64 %5211
  %5213 = load i32, ptr %5212, align 4, !tbaa !5
  %5214 = getelementptr inbounds i32, ptr %6, i64 %5200
  %5215 = load i32, ptr %5214, align 4, !tbaa !5
  %5216 = add nsw i32 %5215, %5213
  store i32 %5216, ptr %5214, align 4, !tbaa !5
  br label %5235

5217:                                             ; preds = %5190, %5207
  %5218 = phi i32 [ %5202, %5207 ], [ %5191, %5190 ]
  %5219 = phi ptr [ %5201, %5207 ], [ %4, %5190 ]
  %5220 = phi i64 [ %5200, %5207 ], [ 0, %5190 ]
  %5221 = add nsw i32 %5218, 1
  store i32 %5221, ptr %5219, align 4, !tbaa !5
  %5222 = getelementptr inbounds i32, ptr %7, i64 %5220
  %5223 = load i32, ptr %5222, align 4, !tbaa !5
  %5224 = getelementptr inbounds i32, ptr %6, i64 %5220
  br label %5235

5225:                                             ; preds = %5199
  %5226 = icmp eq i32 %5202, %5205
  br i1 %5226, label %5227, label %5233

5227:                                             ; preds = %5225
  store i32 0, ptr %5201, align 4, !tbaa !5
  %5228 = getelementptr inbounds i32, ptr %8, i64 %5200
  %5229 = load i32, ptr %5228, align 4, !tbaa !5
  %5230 = getelementptr inbounds i32, ptr %6, i64 %5200
  store i32 %5229, ptr %5230, align 4, !tbaa !5
  %5231 = add nuw nsw i64 %5200, 1
  %5232 = icmp eq i64 %5231, %4951
  br i1 %5232, label %5240, label %5199, !llvm.loop !192

5233:                                             ; preds = %5195, %5225
  %5234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5235:                                             ; preds = %5208, %5217
  %5236 = phi ptr [ %5224, %5217 ], [ %5201, %5208 ]
  %5237 = phi i32 [ %5223, %5217 ], [ 1, %5208 ]
  %5238 = load i32, ptr %5236, align 4, !tbaa !5
  %5239 = add nsw i32 %5238, %5237
  store i32 %5239, ptr %5236, align 4, !tbaa !5
  br label %5240

5240:                                             ; preds = %5227, %5235, %5197, %5187
  %5241 = icmp eq i32 %5189, %5
  br i1 %5241, label %5542, label %5102, !llvm.loop !193

5242:                                             ; preds = %4939
  %5243 = getelementptr inbounds i32, ptr %3, i64 %19
  %5244 = load i32, ptr %5243, align 4, !tbaa !5
  %5245 = icmp eq i32 %5244, 0
  %5246 = icmp sgt i32 %5, 0
  br i1 %5245, label %5256, label %5247

5247:                                             ; preds = %5242
  br i1 %5246, label %5248, label %5542

5248:                                             ; preds = %5247
  %5249 = icmp sgt i32 %13, 1
  %5250 = icmp sgt i32 %13, 0
  %5251 = add i32 %13, -2
  %5252 = zext i32 %5251 to i64
  %5253 = zext i32 %13 to i64
  %5254 = add nuw i32 %5, 1
  %5255 = icmp eq i32 %13, 1
  br label %5400

5256:                                             ; preds = %5242
  br i1 %5246, label %5257, label %5542

5257:                                             ; preds = %5256
  %5258 = icmp sgt i32 %13, 1
  %5259 = icmp sgt i32 %13, 0
  %5260 = add i32 %13, -2
  %5261 = zext i32 %5260 to i64
  %5262 = zext i32 %13 to i64
  %5263 = add nuw i32 %5, 1
  %5264 = icmp eq i32 %13, 1
  br label %5265

5265:                                             ; preds = %5257, %5398
  %5266 = phi double [ %4932, %5257 ], [ %5348, %5398 ]
  %5267 = phi i32 [ 0, %5257 ], [ %5350, %5398 ]
  %5268 = phi double [ 0.000000e+00, %5257 ], [ %5349, %5398 ]
  %5269 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5258, label %5270, label %5339

5270:                                             ; preds = %5265, %5329
  %5271 = phi i32 [ %5338, %5329 ], [ 0, %5265 ]
  %5272 = phi i64 [ %5280, %5329 ], [ %5262, %5265 ]
  %5273 = phi i64 [ %5337, %5329 ], [ %5261, %5265 ]
  %5274 = phi i32 [ %5335, %5329 ], [ %5269, %5265 ]
  %5275 = sub i32 %5260, %5271
  %5276 = tail call i32 @llvm.smin.i32(i32 %5275, i32 0)
  %5277 = sub i32 %5275, %5276
  %5278 = zext i32 %5277 to i64
  %5279 = add nuw nsw i64 %5278, 1
  %5280 = add nsw i64 %5272, -1
  %5281 = icmp ult i32 %5277, 31
  br i1 %5281, label %5317, label %5282

5282:                                             ; preds = %5270
  %5283 = and i64 %5279, 8589934560
  %5284 = sub i64 %5273, %5283
  br label %5285

5285:                                             ; preds = %5285, %5282
  %5286 = phi i64 [ 0, %5282 ], [ %5309, %5285 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5305, %5285 ]
  %5288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5306, %5285 ]
  %5289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5307, %5285 ]
  %5290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5308, %5285 ]
  %5291 = sub i64 %5273, %5286
  %5292 = getelementptr inbounds i32, ptr %9, i64 %5291
  %5293 = getelementptr inbounds i32, ptr %5292, i64 -7
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = getelementptr inbounds i32, ptr %5292, i64 -15
  %5297 = load <8 x i32>, ptr %5296, align 4, !tbaa !5
  %5298 = shufflevector <8 x i32> %5297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5299 = getelementptr inbounds i32, ptr %5292, i64 -23
  %5300 = load <8 x i32>, ptr %5299, align 4, !tbaa !5
  %5301 = shufflevector <8 x i32> %5300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5302 = getelementptr inbounds i32, ptr %5292, i64 -31
  %5303 = load <8 x i32>, ptr %5302, align 4, !tbaa !5
  %5304 = shufflevector <8 x i32> %5303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5305 = mul <8 x i32> %5295, %5287
  %5306 = mul <8 x i32> %5298, %5288
  %5307 = mul <8 x i32> %5301, %5289
  %5308 = mul <8 x i32> %5304, %5290
  %5309 = add nuw i64 %5286, 32
  %5310 = icmp eq i64 %5309, %5283
  br i1 %5310, label %5311, label %5285, !llvm.loop !194

5311:                                             ; preds = %5285
  %5312 = mul <8 x i32> %5306, %5305
  %5313 = mul <8 x i32> %5307, %5312
  %5314 = mul <8 x i32> %5308, %5313
  %5315 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5314)
  %5316 = icmp eq i64 %5279, %5283
  br i1 %5316, label %5329, label %5317

5317:                                             ; preds = %5270, %5311
  %5318 = phi i64 [ %5273, %5270 ], [ %5284, %5311 ]
  %5319 = phi i32 [ 1, %5270 ], [ %5315, %5311 ]
  br label %5320

5320:                                             ; preds = %5317, %5320
  %5321 = phi i64 [ %5326, %5320 ], [ %5318, %5317 ]
  %5322 = phi i32 [ %5325, %5320 ], [ %5319, %5317 ]
  %5323 = getelementptr inbounds i32, ptr %9, i64 %5321
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5322
  %5326 = add nsw i64 %5321, -1
  %5327 = trunc i64 %5321 to i32
  %5328 = icmp sgt i32 %5327, 0
  br i1 %5328, label %5320, label %5329, !llvm.loop !195

5329:                                             ; preds = %5320, %5311
  %5330 = phi i32 [ %5315, %5311 ], [ %5325, %5320 ]
  %5331 = and i64 %5280, 4294967295
  %5332 = getelementptr inbounds i32, ptr %6, i64 %5331
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = mul nsw i32 %5333, %5330
  %5335 = add nsw i32 %5334, %5274
  %5336 = icmp sgt i64 %5272, 2
  %5337 = add nsw i64 %5273, -1
  %5338 = add i32 %5271, 1
  br i1 %5336, label %5270, label %5339, !llvm.loop !196

5339:                                             ; preds = %5329, %5265
  %5340 = phi i32 [ %5269, %5265 ], [ %5335, %5329 ]
  %5341 = sext i32 %5340 to i64
  %5342 = getelementptr inbounds i8, ptr %4928, i64 %5341
  %5343 = load i8, ptr %5342, align 1, !tbaa !11
  %5344 = uitofp i8 %5343 to double
  %5345 = fcmp fast ogt double %5266, %5344
  br i1 %5345, label %5346, label %5347

5346:                                             ; preds = %5339
  store double %5344, ptr %4930, align 8, !tbaa !18
  br label %5347

5347:                                             ; preds = %5346, %5339
  %5348 = phi double [ %5344, %5346 ], [ %5266, %5339 ]
  %5349 = fadd fast double %5268, 1.000000e+00
  %5350 = add nuw nsw i32 %5267, 1
  br i1 %5259, label %5351, label %5398

5351:                                             ; preds = %5347
  %5352 = load i32, ptr %4, align 4, !tbaa !5
  %5353 = load i32, ptr %12, align 4, !tbaa !5
  %5354 = add nsw i32 %5353, -1
  %5355 = icmp slt i32 %5352, %5354
  br i1 %5355, label %5375, label %5356

5356:                                             ; preds = %5351
  %5357 = icmp eq i32 %5352, %5354
  br i1 %5357, label %5358, label %5391

5358:                                             ; preds = %5356
  store i32 0, ptr %4, align 4, !tbaa !5
  %5359 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5359, ptr %6, align 4, !tbaa !5
  br i1 %5264, label %5398, label %5360

5360:                                             ; preds = %5358, %5385
  %5361 = phi i64 [ %5389, %5385 ], [ 1, %5358 ]
  %5362 = getelementptr inbounds i32, ptr %4, i64 %5361
  %5363 = load i32, ptr %5362, align 4, !tbaa !5
  %5364 = getelementptr inbounds i32, ptr %12, i64 %5361
  %5365 = load i32, ptr %5364, align 4, !tbaa !5
  %5366 = add nsw i32 %5365, -1
  %5367 = icmp slt i32 %5363, %5366
  br i1 %5367, label %5368, label %5383

5368:                                             ; preds = %5360
  br i1 %5355, label %5375, label %5369

5369:                                             ; preds = %5368
  %5370 = getelementptr inbounds i32, ptr %7, i64 %5361
  %5371 = load i32, ptr %5370, align 4, !tbaa !5
  %5372 = getelementptr inbounds i32, ptr %6, i64 %5361
  %5373 = load i32, ptr %5372, align 4, !tbaa !5
  %5374 = add nsw i32 %5373, %5371
  store i32 %5374, ptr %5372, align 4, !tbaa !5
  br label %5393

5375:                                             ; preds = %5351, %5368
  %5376 = phi i32 [ %5363, %5368 ], [ %5352, %5351 ]
  %5377 = phi ptr [ %5362, %5368 ], [ %4, %5351 ]
  %5378 = phi i64 [ %5361, %5368 ], [ 0, %5351 ]
  %5379 = add nsw i32 %5376, 1
  store i32 %5379, ptr %5377, align 4, !tbaa !5
  %5380 = getelementptr inbounds i32, ptr %7, i64 %5378
  %5381 = load i32, ptr %5380, align 4, !tbaa !5
  %5382 = getelementptr inbounds i32, ptr %6, i64 %5378
  br label %5393

5383:                                             ; preds = %5360
  %5384 = icmp eq i32 %5363, %5366
  br i1 %5384, label %5385, label %5391

5385:                                             ; preds = %5383
  store i32 0, ptr %5362, align 4, !tbaa !5
  %5386 = getelementptr inbounds i32, ptr %8, i64 %5361
  %5387 = load i32, ptr %5386, align 4, !tbaa !5
  %5388 = getelementptr inbounds i32, ptr %6, i64 %5361
  store i32 %5387, ptr %5388, align 4, !tbaa !5
  %5389 = add nuw nsw i64 %5361, 1
  %5390 = icmp eq i64 %5389, %5262
  br i1 %5390, label %5398, label %5360, !llvm.loop !197

5391:                                             ; preds = %5356, %5383
  %5392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5393:                                             ; preds = %5369, %5375
  %5394 = phi ptr [ %5382, %5375 ], [ %5362, %5369 ]
  %5395 = phi i32 [ %5381, %5375 ], [ 1, %5369 ]
  %5396 = load i32, ptr %5394, align 4, !tbaa !5
  %5397 = add nsw i32 %5396, %5395
  store i32 %5397, ptr %5394, align 4, !tbaa !5
  br label %5398

5398:                                             ; preds = %5385, %5393, %5358, %5347
  %5399 = icmp eq i32 %5350, %5
  br i1 %5399, label %5542, label %5265, !llvm.loop !198

5400:                                             ; preds = %5248, %5538
  %5401 = phi double [ %4932, %5248 ], [ %5486, %5538 ]
  %5402 = phi i32 [ 0, %5248 ], [ %5487, %5538 ]
  %5403 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5249, label %5404, label %5473

5404:                                             ; preds = %5400, %5463
  %5405 = phi i32 [ %5472, %5463 ], [ 0, %5400 ]
  %5406 = phi i64 [ %5414, %5463 ], [ %5253, %5400 ]
  %5407 = phi i64 [ %5471, %5463 ], [ %5252, %5400 ]
  %5408 = phi i32 [ %5469, %5463 ], [ %5403, %5400 ]
  %5409 = sub i32 %5251, %5405
  %5410 = tail call i32 @llvm.smin.i32(i32 %5409, i32 0)
  %5411 = sub i32 %5409, %5410
  %5412 = zext i32 %5411 to i64
  %5413 = add nuw nsw i64 %5412, 1
  %5414 = add nsw i64 %5406, -1
  %5415 = icmp ult i32 %5411, 31
  br i1 %5415, label %5451, label %5416

5416:                                             ; preds = %5404
  %5417 = and i64 %5413, 8589934560
  %5418 = sub i64 %5407, %5417
  br label %5419

5419:                                             ; preds = %5419, %5416
  %5420 = phi i64 [ 0, %5416 ], [ %5443, %5419 ]
  %5421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5439, %5419 ]
  %5422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5440, %5419 ]
  %5423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5441, %5419 ]
  %5424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5442, %5419 ]
  %5425 = sub i64 %5407, %5420
  %5426 = getelementptr inbounds i32, ptr %11, i64 %5425
  %5427 = getelementptr inbounds i32, ptr %5426, i64 -7
  %5428 = load <8 x i32>, ptr %5427, align 4, !tbaa !5
  %5429 = shufflevector <8 x i32> %5428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5430 = getelementptr inbounds i32, ptr %5426, i64 -15
  %5431 = load <8 x i32>, ptr %5430, align 4, !tbaa !5
  %5432 = shufflevector <8 x i32> %5431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5433 = getelementptr inbounds i32, ptr %5426, i64 -23
  %5434 = load <8 x i32>, ptr %5433, align 4, !tbaa !5
  %5435 = shufflevector <8 x i32> %5434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5436 = getelementptr inbounds i32, ptr %5426, i64 -31
  %5437 = load <8 x i32>, ptr %5436, align 4, !tbaa !5
  %5438 = shufflevector <8 x i32> %5437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5439 = mul <8 x i32> %5429, %5421
  %5440 = mul <8 x i32> %5432, %5422
  %5441 = mul <8 x i32> %5435, %5423
  %5442 = mul <8 x i32> %5438, %5424
  %5443 = add nuw i64 %5420, 32
  %5444 = icmp eq i64 %5443, %5417
  br i1 %5444, label %5445, label %5419, !llvm.loop !199

5445:                                             ; preds = %5419
  %5446 = mul <8 x i32> %5440, %5439
  %5447 = mul <8 x i32> %5441, %5446
  %5448 = mul <8 x i32> %5442, %5447
  %5449 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5448)
  %5450 = icmp eq i64 %5413, %5417
  br i1 %5450, label %5463, label %5451

5451:                                             ; preds = %5404, %5445
  %5452 = phi i64 [ %5407, %5404 ], [ %5418, %5445 ]
  %5453 = phi i32 [ 1, %5404 ], [ %5449, %5445 ]
  br label %5454

5454:                                             ; preds = %5451, %5454
  %5455 = phi i64 [ %5460, %5454 ], [ %5452, %5451 ]
  %5456 = phi i32 [ %5459, %5454 ], [ %5453, %5451 ]
  %5457 = getelementptr inbounds i32, ptr %11, i64 %5455
  %5458 = load i32, ptr %5457, align 4, !tbaa !5
  %5459 = mul nsw i32 %5458, %5456
  %5460 = add nsw i64 %5455, -1
  %5461 = trunc i64 %5455 to i32
  %5462 = icmp sgt i32 %5461, 0
  br i1 %5462, label %5454, label %5463, !llvm.loop !200

5463:                                             ; preds = %5454, %5445
  %5464 = phi i32 [ %5449, %5445 ], [ %5459, %5454 ]
  %5465 = and i64 %5414, 4294967295
  %5466 = getelementptr inbounds i32, ptr %6, i64 %5465
  %5467 = load i32, ptr %5466, align 4, !tbaa !5
  %5468 = mul nsw i32 %5467, %5464
  %5469 = add nsw i32 %5468, %5408
  %5470 = icmp sgt i64 %5406, 2
  %5471 = add nsw i64 %5407, -1
  %5472 = add i32 %5405, 1
  br i1 %5470, label %5404, label %5473, !llvm.loop !201

5473:                                             ; preds = %5463, %5400
  %5474 = phi i32 [ %5403, %5400 ], [ %5469, %5463 ]
  %5475 = icmp slt i32 %5474, %5
  br i1 %5475, label %5478, label %5476

5476:                                             ; preds = %5473
  %5477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

5478:                                             ; preds = %5473
  %5479 = sext i32 %5474 to i64
  %5480 = getelementptr inbounds i8, ptr %4928, i64 %5479
  %5481 = load i8, ptr %5480, align 1, !tbaa !11
  %5482 = uitofp i8 %5481 to double
  %5483 = fcmp fast ogt double %5401, %5482
  br i1 %5483, label %5484, label %5485

5484:                                             ; preds = %5478
  store double %5482, ptr %4930, align 8, !tbaa !18
  br label %5485

5485:                                             ; preds = %5484, %5478
  %5486 = phi double [ %5482, %5484 ], [ %5401, %5478 ]
  %5487 = add nuw nsw i32 %5402, 1
  br i1 %5250, label %5488, label %5538

5488:                                             ; preds = %5485
  %5489 = load i32, ptr %4, align 4, !tbaa !5
  %5490 = load i32, ptr %12, align 4, !tbaa !5
  %5491 = add nsw i32 %5490, -1
  %5492 = icmp slt i32 %5489, %5491
  br i1 %5492, label %5515, label %5493

5493:                                             ; preds = %5488
  %5494 = icmp eq i32 %5489, %5491
  br i1 %5494, label %5495, label %5531

5495:                                             ; preds = %5493
  store i32 0, ptr %4, align 4, !tbaa !5
  %5496 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5496, ptr %6, align 4, !tbaa !5
  br i1 %5255, label %5538, label %5497

5497:                                             ; preds = %5495, %5525
  %5498 = phi i64 [ %5529, %5525 ], [ 1, %5495 ]
  %5499 = getelementptr inbounds i32, ptr %4, i64 %5498
  %5500 = load i32, ptr %5499, align 4, !tbaa !5
  %5501 = getelementptr inbounds i32, ptr %12, i64 %5498
  %5502 = load i32, ptr %5501, align 4, !tbaa !5
  %5503 = add nsw i32 %5502, -1
  %5504 = icmp slt i32 %5500, %5503
  br i1 %5504, label %5505, label %5523

5505:                                             ; preds = %5497
  br i1 %5492, label %5515, label %5506

5506:                                             ; preds = %5505
  %5507 = shl i64 %5498, 32
  %5508 = add i64 %5507, -4294967296
  %5509 = ashr exact i64 %5508, 32
  %5510 = getelementptr inbounds i32, ptr %7, i64 %5509
  %5511 = load i32, ptr %5510, align 4, !tbaa !5
  %5512 = getelementptr inbounds i32, ptr %6, i64 %5498
  %5513 = load i32, ptr %5512, align 4, !tbaa !5
  %5514 = add nsw i32 %5513, %5511
  store i32 %5514, ptr %5512, align 4, !tbaa !5
  br label %5533

5515:                                             ; preds = %5488, %5505
  %5516 = phi i32 [ %5500, %5505 ], [ %5489, %5488 ]
  %5517 = phi ptr [ %5499, %5505 ], [ %4, %5488 ]
  %5518 = phi i64 [ %5498, %5505 ], [ 0, %5488 ]
  %5519 = add nsw i32 %5516, 1
  store i32 %5519, ptr %5517, align 4, !tbaa !5
  %5520 = getelementptr inbounds i32, ptr %7, i64 %5518
  %5521 = load i32, ptr %5520, align 4, !tbaa !5
  %5522 = getelementptr inbounds i32, ptr %6, i64 %5518
  br label %5533

5523:                                             ; preds = %5497
  %5524 = icmp eq i32 %5500, %5503
  br i1 %5524, label %5525, label %5531

5525:                                             ; preds = %5523
  store i32 0, ptr %5499, align 4, !tbaa !5
  %5526 = getelementptr inbounds i32, ptr %8, i64 %5498
  %5527 = load i32, ptr %5526, align 4, !tbaa !5
  %5528 = getelementptr inbounds i32, ptr %6, i64 %5498
  store i32 %5527, ptr %5528, align 4, !tbaa !5
  %5529 = add nuw nsw i64 %5498, 1
  %5530 = icmp eq i64 %5529, %5253
  br i1 %5530, label %5538, label %5497, !llvm.loop !202

5531:                                             ; preds = %5493, %5523
  %5532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5533:                                             ; preds = %5506, %5515
  %5534 = phi ptr [ %5522, %5515 ], [ %5499, %5506 ]
  %5535 = phi i32 [ %5521, %5515 ], [ 1, %5506 ]
  %5536 = load i32, ptr %5534, align 4, !tbaa !5
  %5537 = add nsw i32 %5536, %5535
  store i32 %5537, ptr %5534, align 4, !tbaa !5
  br label %5538

5538:                                             ; preds = %5525, %5533, %5495, %5485
  %5539 = icmp eq i32 %5487, %5
  br i1 %5539, label %5542, label %5400, !llvm.loop !203

5540:                                             ; preds = %4939
  %5541 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

5542:                                             ; preds = %5538, %5398, %5240, %5100, %4922, %4782, %4624, %4484, %4306, %4166, %4008, %3868, %3690, %3550, %3392, %3252, %3074, %2935, %2778, %2639, %2462, %2321, %2162, %2021, %1842, %1704, %1548, %1410, %1236, %1097, %940, %801, %624, %486, %330, %192, %5247, %5256, %4945, %4954, %4631, %4640, %4329, %4338, %4015, %4024, %3713, %3722, %3399, %3408, %3097, %3106, %2785, %2794, %2485, %2494, %2169, %2178, %1865, %1874, %1555, %1564, %1257, %1266, %947, %956, %647, %656, %337, %346, %39, %48, %4938, %4934, %5540, %4322, %4318, %4924, %3706, %3702, %4308, %3089, %3086, %3692, %2477, %2474, %3076, %1857, %1854, %2464, %1250, %1247, %1844, %639, %636, %1238, %32, %29, %626, %18
  %5543 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %626 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %32 ], [ 0.000000e+00, %1238 ], [ 0.000000e+00, %636 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %1247 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %1854 ], [ 0.000000e+00, %1857 ], [ 0.000000e+00, %3076 ], [ 0.000000e+00, %2474 ], [ 0.000000e+00, %2477 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %3086 ], [ 0.000000e+00, %3089 ], [ 0.000000e+00, %4308 ], [ 0.000000e+00, %3702 ], [ 0.000000e+00, %3706 ], [ 0.000000e+00, %4924 ], [ 0.000000e+00, %4318 ], [ 0.000000e+00, %4322 ], [ 0.000000e+00, %5540 ], [ 0.000000e+00, %4934 ], [ 0.000000e+00, %4938 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %337 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %947 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %1564 ], [ 0.000000e+00, %1555 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2169 ], [ 0.000000e+00, %2494 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %2794 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %3106 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3408 ], [ 0.000000e+00, %3399 ], [ 0.000000e+00, %3722 ], [ 0.000000e+00, %3713 ], [ 0.000000e+00, %4024 ], [ 0.000000e+00, %4015 ], [ 0.000000e+00, %4338 ], [ 0.000000e+00, %4329 ], [ 0.000000e+00, %4640 ], [ 0.000000e+00, %4631 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ 0.000000e+00, %5256 ], [ 0.000000e+00, %5247 ], [ %143, %192 ], [ 0.000000e+00, %330 ], [ %437, %486 ], [ 0.000000e+00, %624 ], [ %752, %801 ], [ 0.000000e+00, %940 ], [ %1048, %1097 ], [ 0.000000e+00, %1236 ], [ %1361, %1410 ], [ 0.000000e+00, %1548 ], [ %1655, %1704 ], [ 0.000000e+00, %1842 ], [ %1972, %2021 ], [ 0.000000e+00, %2162 ], [ %2272, %2321 ], [ 0.000000e+00, %2462 ], [ %2590, %2639 ], [ 0.000000e+00, %2778 ], [ %2886, %2935 ], [ 0.000000e+00, %3074 ], [ %3203, %3252 ], [ 0.000000e+00, %3392 ], [ %3501, %3550 ], [ 0.000000e+00, %3690 ], [ %3819, %3868 ], [ 0.000000e+00, %4008 ], [ %4117, %4166 ], [ 0.000000e+00, %4306 ], [ %4435, %4484 ], [ 0.000000e+00, %4624 ], [ %4733, %4782 ], [ 0.000000e+00, %4922 ], [ %5051, %5100 ], [ 0.000000e+00, %5240 ], [ %5349, %5398 ], [ 0.000000e+00, %5538 ]
  %5544 = phi i32 [ %10, %18 ], [ 1, %626 ], [ 1, %29 ], [ 1, %32 ], [ 1, %1238 ], [ 1, %636 ], [ 1, %639 ], [ 1, %1844 ], [ 1, %1247 ], [ 1, %1250 ], [ 1, %2464 ], [ 1, %1854 ], [ 1, %1857 ], [ 1, %3076 ], [ 1, %2474 ], [ 1, %2477 ], [ 1, %3692 ], [ 1, %3086 ], [ 1, %3089 ], [ 1, %4308 ], [ 1, %3702 ], [ 1, %3706 ], [ 1, %4924 ], [ 1, %4318 ], [ 1, %4322 ], [ 1, %5540 ], [ 1, %4934 ], [ 1, %4938 ], [ 1, %48 ], [ 1, %39 ], [ 1, %346 ], [ 1, %337 ], [ 1, %656 ], [ 1, %647 ], [ 1, %956 ], [ 1, %947 ], [ 1, %1266 ], [ 1, %1257 ], [ 1, %1564 ], [ 1, %1555 ], [ 1, %1874 ], [ 1, %1865 ], [ 1, %2178 ], [ 1, %2169 ], [ 1, %2494 ], [ 1, %2485 ], [ 1, %2794 ], [ 1, %2785 ], [ 1, %3106 ], [ 1, %3097 ], [ 1, %3408 ], [ 1, %3399 ], [ 1, %3722 ], [ 1, %3713 ], [ 1, %4024 ], [ 1, %4015 ], [ 1, %4338 ], [ 1, %4329 ], [ 1, %4640 ], [ 1, %4631 ], [ 1, %4954 ], [ 1, %4945 ], [ 1, %5256 ], [ 1, %5247 ], [ %55, %192 ], [ %46, %330 ], [ %353, %486 ], [ %344, %624 ], [ %663, %801 ], [ %654, %940 ], [ %963, %1097 ], [ %954, %1236 ], [ %1273, %1410 ], [ %1264, %1548 ], [ %1571, %1704 ], [ %1562, %1842 ], [ %1881, %2021 ], [ %1872, %2162 ], [ %2185, %2321 ], [ %2176, %2462 ], [ %2501, %2639 ], [ %2492, %2778 ], [ %2801, %2935 ], [ %2792, %3074 ], [ %3113, %3252 ], [ %3104, %3392 ], [ %3415, %3550 ], [ %3406, %3690 ], [ %3729, %3868 ], [ %3720, %4008 ], [ %4031, %4166 ], [ %4022, %4306 ], [ %4345, %4484 ], [ %4336, %4624 ], [ %4647, %4782 ], [ %4638, %4922 ], [ %4961, %5100 ], [ %4952, %5240 ], [ %5263, %5398 ], [ %5254, %5538 ]
  %5545 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5544, ptr noundef nonnull @.str.5) #3
  %5546 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5543, ptr noundef nonnull @.str.6) #3
  br label %5547

5547:                                             ; preds = %5093, %5178, %5233, %5391, %5476, %5531, %4477, %4562, %4617, %4775, %4860, %4915, %3861, %3946, %4001, %4159, %4244, %4299, %3245, %3330, %3385, %3543, %3628, %3683, %2632, %2716, %2771, %2928, %3012, %3067, %2014, %2099, %2155, %2314, %2399, %2455, %1403, %1487, %1541, %1697, %1781, %1835, %794, %878, %933, %1090, %1174, %1229, %185, %269, %323, %479, %563, %617, %5542
  %5548 = phi i32 [ 0, %5542 ], [ -1, %617 ], [ -1, %563 ], [ -1, %479 ], [ -1, %323 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1229 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %933 ], [ -1, %878 ], [ -1, %794 ], [ -1, %1835 ], [ -1, %1781 ], [ -1, %1697 ], [ -1, %1541 ], [ -1, %1487 ], [ -1, %1403 ], [ -1, %2455 ], [ -1, %2399 ], [ -1, %2314 ], [ -1, %2155 ], [ -1, %2099 ], [ -1, %2014 ], [ -1, %3067 ], [ -1, %3012 ], [ -1, %2928 ], [ -1, %2771 ], [ -1, %2716 ], [ -1, %2632 ], [ -1, %3683 ], [ -1, %3628 ], [ -1, %3543 ], [ -1, %3385 ], [ -1, %3330 ], [ -1, %3245 ], [ -1, %4299 ], [ -1, %4244 ], [ -1, %4159 ], [ -1, %4001 ], [ -1, %3946 ], [ -1, %3861 ], [ -1, %4915 ], [ -1, %4860 ], [ -1, %4775 ], [ -1, %4617 ], [ -1, %4562 ], [ -1, %4477 ], [ -1, %5531 ], [ -1, %5476 ], [ -1, %5391 ], [ -1, %5233 ], [ -1, %5178 ], [ -1, %5093 ]
  ret i32 %5548
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5513 [
    i32 101, label %22
    i32 102, label %640
    i32 103, label %1242
    i32 104, label %1864
    i32 105, label %2483
    i32 106, label %3085
    i32 107, label %3692
    i32 108, label %4299
    i32 109, label %4906
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i32, ptr %24, align 4, !tbaa !5
  %28 = trunc i32 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i32, ptr %24, align 4, !tbaa !5
  %32 = and i32 %27, 255
  %33 = and i32 %31, 255
  %34 = icmp ugt i32 %32, %33
  br i1 %34, label %35, label %5513

35:                                               ; preds = %30
  %36 = trunc i32 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !11
  br label %5513

37:                                               ; preds = %22
  switch i32 %1, label %638 [
    i32 1, label %38
    i32 0, label %340
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %5513

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %199

52:                                               ; preds = %38
  br i1 %42, label %53, label %5513

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %197
  %62 = phi i32 [ 0, %53 ], [ %149, %197 ]
  %63 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %54, label %64, label %133

64:                                               ; preds = %61, %123
  %65 = phi i32 [ %132, %123 ], [ 0, %61 ]
  %66 = phi i64 [ %74, %123 ], [ %58, %61 ]
  %67 = phi i64 [ %131, %123 ], [ %57, %61 ]
  %68 = phi i32 [ %129, %123 ], [ %63, %61 ]
  %69 = sub i32 %56, %65
  %70 = tail call i32 @llvm.smin.i32(i32 %69, i32 0)
  %71 = sub i32 %69, %70
  %72 = zext i32 %71 to i64
  %73 = add nuw nsw i64 %72, 1
  %74 = add nsw i64 %66, -1
  %75 = icmp ult i32 %71, 31
  br i1 %75, label %111, label %76

76:                                               ; preds = %64
  %77 = and i64 %73, 8589934560
  %78 = sub i64 %67, %77
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi i64 [ 0, %76 ], [ %103, %79 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %99, %79 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %100, %79 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %101, %79 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %102, %79 ]
  %85 = sub i64 %67, %80
  %86 = getelementptr inbounds i32, ptr %9, i64 %85
  %87 = getelementptr inbounds i32, ptr %86, i64 -7
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %86, i64 -15
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %86, i64 -23
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !5
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = getelementptr inbounds i32, ptr %86, i64 -31
  %97 = load <8 x i32>, ptr %96, align 4, !tbaa !5
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %99 = mul <8 x i32> %89, %81
  %100 = mul <8 x i32> %92, %82
  %101 = mul <8 x i32> %95, %83
  %102 = mul <8 x i32> %98, %84
  %103 = add nuw i64 %80, 32
  %104 = icmp eq i64 %103, %77
  br i1 %104, label %105, label %79, !llvm.loop !204

105:                                              ; preds = %79
  %106 = mul <8 x i32> %100, %99
  %107 = mul <8 x i32> %101, %106
  %108 = mul <8 x i32> %102, %107
  %109 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %108)
  %110 = icmp eq i64 %73, %77
  br i1 %110, label %123, label %111

111:                                              ; preds = %64, %105
  %112 = phi i64 [ %67, %64 ], [ %78, %105 ]
  %113 = phi i32 [ 1, %64 ], [ %109, %105 ]
  br label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %120, %114 ], [ %112, %111 ]
  %116 = phi i32 [ %119, %114 ], [ %113, %111 ]
  %117 = getelementptr inbounds i32, ptr %9, i64 %115
  %118 = load i32, ptr %117, align 4, !tbaa !5
  %119 = mul nsw i32 %118, %116
  %120 = add nsw i64 %115, -1
  %121 = trunc i64 %115 to i32
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %114, label %123, !llvm.loop !205

123:                                              ; preds = %114, %105
  %124 = phi i32 [ %109, %105 ], [ %119, %114 ]
  %125 = and i64 %74, 4294967295
  %126 = getelementptr inbounds i32, ptr %6, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !5
  %128 = mul nsw i32 %127, %124
  %129 = add nsw i32 %128, %68
  %130 = icmp sgt i64 %66, 2
  %131 = add nsw i64 %67, -1
  %132 = add i32 %65, 1
  br i1 %130, label %64, label %133, !llvm.loop !206

133:                                              ; preds = %123, %61
  %134 = phi i32 [ %63, %61 ], [ %129, %123 ]
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds double, ptr %2, i64 %135
  %137 = load double, ptr %136, align 8, !tbaa !18
  %138 = getelementptr inbounds i32, ptr %24, i64 %135
  %139 = load i32, ptr %138, align 4, !tbaa !5
  %140 = trunc i32 %139 to i8
  %141 = fcmp fast ueq double %137, 0.000000e+00
  br i1 %141, label %148, label %142

142:                                              ; preds = %133
  %143 = load i8, ptr %26, align 1, !tbaa !11
  %144 = zext i8 %143 to i32
  %145 = and i32 %139, 255
  %146 = icmp ult i32 %145, %144
  br i1 %146, label %147, label %148

147:                                              ; preds = %142
  store i8 %140, ptr %26, align 1, !tbaa !11
  br label %148

148:                                              ; preds = %142, %147, %133
  %149 = add nuw nsw i32 %62, 1
  br i1 %55, label %150, label %197

150:                                              ; preds = %148
  %151 = load i32, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %12, align 4, !tbaa !5
  %153 = add nsw i32 %152, -1
  %154 = icmp slt i32 %151, %153
  br i1 %154, label %174, label %155

155:                                              ; preds = %150
  %156 = icmp eq i32 %151, %153
  br i1 %156, label %157, label %190

157:                                              ; preds = %155
  store i32 0, ptr %4, align 4, !tbaa !5
  %158 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %158, ptr %6, align 4, !tbaa !5
  br i1 %60, label %197, label %159

159:                                              ; preds = %157, %184
  %160 = phi i64 [ %188, %184 ], [ 1, %157 ]
  %161 = getelementptr inbounds i32, ptr %4, i64 %160
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %12, i64 %160
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, -1
  %166 = icmp slt i32 %162, %165
  br i1 %166, label %167, label %182

167:                                              ; preds = %159
  br i1 %154, label %174, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds i32, ptr %7, i64 %160
  %170 = load i32, ptr %169, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %6, i64 %160
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = add nsw i32 %172, %170
  store i32 %173, ptr %171, align 4, !tbaa !5
  br label %192

174:                                              ; preds = %150, %167
  %175 = phi i32 [ %162, %167 ], [ %151, %150 ]
  %176 = phi ptr [ %161, %167 ], [ %4, %150 ]
  %177 = phi i64 [ %160, %167 ], [ 0, %150 ]
  %178 = add nsw i32 %175, 1
  store i32 %178, ptr %176, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %7, i64 %177
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %177
  br label %192

182:                                              ; preds = %159
  %183 = icmp eq i32 %162, %165
  br i1 %183, label %184, label %190

184:                                              ; preds = %182
  store i32 0, ptr %161, align 4, !tbaa !5
  %185 = getelementptr inbounds i32, ptr %8, i64 %160
  %186 = load i32, ptr %185, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %6, i64 %160
  store i32 %186, ptr %187, align 4, !tbaa !5
  %188 = add nuw nsw i64 %160, 1
  %189 = icmp eq i64 %188, %58
  br i1 %189, label %197, label %159, !llvm.loop !207

190:                                              ; preds = %155, %182
  %191 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

192:                                              ; preds = %168, %174
  %193 = phi ptr [ %181, %174 ], [ %161, %168 ]
  %194 = phi i32 [ %180, %174 ], [ 1, %168 ]
  %195 = load i32, ptr %193, align 4, !tbaa !5
  %196 = add nsw i32 %195, %194
  store i32 %196, ptr %193, align 4, !tbaa !5
  br label %197

197:                                              ; preds = %184, %192, %157, %148
  %198 = icmp eq i32 %149, %5
  br i1 %198, label %5513, label %61, !llvm.loop !208

199:                                              ; preds = %44, %338
  %200 = phi i32 [ 0, %44 ], [ %287, %338 ]
  %201 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %45, label %202, label %271

202:                                              ; preds = %199, %261
  %203 = phi i32 [ %270, %261 ], [ 0, %199 ]
  %204 = phi i64 [ %212, %261 ], [ %49, %199 ]
  %205 = phi i64 [ %269, %261 ], [ %48, %199 ]
  %206 = phi i32 [ %267, %261 ], [ %201, %199 ]
  %207 = sub i32 %47, %203
  %208 = tail call i32 @llvm.smin.i32(i32 %207, i32 0)
  %209 = sub i32 %207, %208
  %210 = zext i32 %209 to i64
  %211 = add nuw nsw i64 %210, 1
  %212 = add nsw i64 %204, -1
  %213 = icmp ult i32 %209, 31
  br i1 %213, label %249, label %214

214:                                              ; preds = %202
  %215 = and i64 %211, 8589934560
  %216 = sub i64 %205, %215
  br label %217

217:                                              ; preds = %217, %214
  %218 = phi i64 [ 0, %214 ], [ %241, %217 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %237, %217 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %238, %217 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %239, %217 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %240, %217 ]
  %223 = sub i64 %205, %218
  %224 = getelementptr inbounds i32, ptr %11, i64 %223
  %225 = getelementptr inbounds i32, ptr %224, i64 -7
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %224, i64 -15
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %224, i64 -23
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = getelementptr inbounds i32, ptr %224, i64 -31
  %235 = load <8 x i32>, ptr %234, align 4, !tbaa !5
  %236 = shufflevector <8 x i32> %235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %237 = mul <8 x i32> %227, %219
  %238 = mul <8 x i32> %230, %220
  %239 = mul <8 x i32> %233, %221
  %240 = mul <8 x i32> %236, %222
  %241 = add nuw i64 %218, 32
  %242 = icmp eq i64 %241, %215
  br i1 %242, label %243, label %217, !llvm.loop !209

243:                                              ; preds = %217
  %244 = mul <8 x i32> %238, %237
  %245 = mul <8 x i32> %239, %244
  %246 = mul <8 x i32> %240, %245
  %247 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %246)
  %248 = icmp eq i64 %211, %215
  br i1 %248, label %261, label %249

249:                                              ; preds = %202, %243
  %250 = phi i64 [ %205, %202 ], [ %216, %243 ]
  %251 = phi i32 [ 1, %202 ], [ %247, %243 ]
  br label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %258, %252 ], [ %250, %249 ]
  %254 = phi i32 [ %257, %252 ], [ %251, %249 ]
  %255 = getelementptr inbounds i32, ptr %11, i64 %253
  %256 = load i32, ptr %255, align 4, !tbaa !5
  %257 = mul nsw i32 %256, %254
  %258 = add nsw i64 %253, -1
  %259 = trunc i64 %253 to i32
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %252, label %261, !llvm.loop !210

261:                                              ; preds = %252, %243
  %262 = phi i32 [ %247, %243 ], [ %257, %252 ]
  %263 = and i64 %212, 4294967295
  %264 = getelementptr inbounds i32, ptr %6, i64 %263
  %265 = load i32, ptr %264, align 4, !tbaa !5
  %266 = mul nsw i32 %265, %262
  %267 = add nsw i32 %266, %206
  %268 = icmp sgt i64 %204, 2
  %269 = add nsw i64 %205, -1
  %270 = add i32 %203, 1
  br i1 %268, label %202, label %271, !llvm.loop !211

271:                                              ; preds = %261, %199
  %272 = phi i32 [ %201, %199 ], [ %267, %261 ]
  %273 = icmp slt i32 %272, %5
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

276:                                              ; preds = %271
  %277 = sext i32 %272 to i64
  %278 = getelementptr inbounds i32, ptr %24, i64 %277
  %279 = load i32, ptr %278, align 4, !tbaa !5
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = zext i8 %280 to i32
  %282 = and i32 %279, 255
  %283 = icmp ult i32 %282, %281
  br i1 %283, label %284, label %286

284:                                              ; preds = %276
  %285 = trunc i32 %279 to i8
  store i8 %285, ptr %26, align 1, !tbaa !11
  br label %286

286:                                              ; preds = %276, %284
  %287 = add nuw nsw i32 %200, 1
  br i1 %46, label %288, label %338

288:                                              ; preds = %286
  %289 = load i32, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %12, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %289, %291
  br i1 %292, label %315, label %293

293:                                              ; preds = %288
  %294 = icmp eq i32 %289, %291
  br i1 %294, label %295, label %331

295:                                              ; preds = %293
  store i32 0, ptr %4, align 4, !tbaa !5
  %296 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %296, ptr %6, align 4, !tbaa !5
  br i1 %51, label %338, label %297

297:                                              ; preds = %295, %325
  %298 = phi i64 [ %329, %325 ], [ 1, %295 ]
  %299 = getelementptr inbounds i32, ptr %4, i64 %298
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = getelementptr inbounds i32, ptr %12, i64 %298
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = add nsw i32 %302, -1
  %304 = icmp slt i32 %300, %303
  br i1 %304, label %305, label %323

305:                                              ; preds = %297
  br i1 %292, label %315, label %306

306:                                              ; preds = %305
  %307 = shl i64 %298, 32
  %308 = add i64 %307, -4294967296
  %309 = ashr exact i64 %308, 32
  %310 = getelementptr inbounds i32, ptr %7, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %298
  %313 = load i32, ptr %312, align 4, !tbaa !5
  %314 = add nsw i32 %313, %311
  store i32 %314, ptr %312, align 4, !tbaa !5
  br label %333

315:                                              ; preds = %288, %305
  %316 = phi i32 [ %300, %305 ], [ %289, %288 ]
  %317 = phi ptr [ %299, %305 ], [ %4, %288 ]
  %318 = phi i64 [ %298, %305 ], [ 0, %288 ]
  %319 = add nsw i32 %316, 1
  store i32 %319, ptr %317, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %7, i64 %318
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %318
  br label %333

323:                                              ; preds = %297
  %324 = icmp eq i32 %300, %303
  br i1 %324, label %325, label %331

325:                                              ; preds = %323
  store i32 0, ptr %299, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %8, i64 %298
  %327 = load i32, ptr %326, align 4, !tbaa !5
  %328 = getelementptr inbounds i32, ptr %6, i64 %298
  store i32 %327, ptr %328, align 4, !tbaa !5
  %329 = add nuw nsw i64 %298, 1
  %330 = icmp eq i64 %329, %49
  br i1 %330, label %338, label %297, !llvm.loop !212

331:                                              ; preds = %293, %323
  %332 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

333:                                              ; preds = %306, %315
  %334 = phi ptr [ %322, %315 ], [ %299, %306 ]
  %335 = phi i32 [ %321, %315 ], [ 1, %306 ]
  %336 = load i32, ptr %334, align 4, !tbaa !5
  %337 = add nsw i32 %336, %335
  store i32 %337, ptr %334, align 4, !tbaa !5
  br label %338

338:                                              ; preds = %325, %333, %295, %286
  %339 = icmp eq i32 %287, %5
  br i1 %339, label %5513, label %199, !llvm.loop !213

340:                                              ; preds = %37
  %341 = getelementptr inbounds i32, ptr %3, i64 %19
  %342 = load i32, ptr %341, align 4, !tbaa !5
  %343 = icmp eq i32 %342, 0
  %344 = icmp sgt i32 %5, 0
  br i1 %343, label %354, label %345

345:                                              ; preds = %340
  br i1 %344, label %346, label %5513

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %497

354:                                              ; preds = %340
  br i1 %344, label %355, label %5513

355:                                              ; preds = %354
  %356 = icmp sgt i32 %13, 1
  %357 = icmp sgt i32 %13, 0
  %358 = add i32 %13, -2
  %359 = zext i32 %358 to i64
  %360 = zext i32 %13 to i64
  %361 = add nuw i32 %5, 1
  %362 = icmp eq i32 %13, 1
  br label %363

363:                                              ; preds = %355, %495
  %364 = phi i32 [ 0, %355 ], [ %447, %495 ]
  %365 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %356, label %366, label %435

366:                                              ; preds = %363, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %363 ]
  %368 = phi i64 [ %376, %425 ], [ %360, %363 ]
  %369 = phi i64 [ %433, %425 ], [ %359, %363 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %363 ]
  %371 = sub i32 %358, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !5
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !5
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !214

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !215

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !5
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !216

435:                                              ; preds = %425, %363
  %436 = phi i32 [ %365, %363 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i32, ptr %24, i64 %437
  %439 = load i32, ptr %438, align 4, !tbaa !5
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = zext i8 %440 to i32
  %442 = and i32 %439, 255
  %443 = icmp ult i32 %442, %441
  br i1 %443, label %444, label %446

444:                                              ; preds = %435
  %445 = trunc i32 %439 to i8
  store i8 %445, ptr %26, align 1, !tbaa !11
  br label %446

446:                                              ; preds = %444, %435
  %447 = add nuw nsw i32 %364, 1
  br i1 %357, label %448, label %495

448:                                              ; preds = %446
  %449 = load i32, ptr %4, align 4, !tbaa !5
  %450 = load i32, ptr %12, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %449, %451
  br i1 %452, label %472, label %453

453:                                              ; preds = %448
  %454 = icmp eq i32 %449, %451
  br i1 %454, label %455, label %488

455:                                              ; preds = %453
  store i32 0, ptr %4, align 4, !tbaa !5
  %456 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %456, ptr %6, align 4, !tbaa !5
  br i1 %362, label %495, label %457

457:                                              ; preds = %455, %482
  %458 = phi i64 [ %486, %482 ], [ 1, %455 ]
  %459 = getelementptr inbounds i32, ptr %4, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %12, i64 %458
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, -1
  %464 = icmp slt i32 %460, %463
  br i1 %464, label %465, label %480

465:                                              ; preds = %457
  br i1 %452, label %472, label %466

466:                                              ; preds = %465
  %467 = getelementptr inbounds i32, ptr %7, i64 %458
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %458
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = add nsw i32 %470, %468
  store i32 %471, ptr %469, align 4, !tbaa !5
  br label %490

472:                                              ; preds = %448, %465
  %473 = phi i32 [ %460, %465 ], [ %449, %448 ]
  %474 = phi ptr [ %459, %465 ], [ %4, %448 ]
  %475 = phi i64 [ %458, %465 ], [ 0, %448 ]
  %476 = add nsw i32 %473, 1
  store i32 %476, ptr %474, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %7, i64 %475
  %478 = load i32, ptr %477, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %6, i64 %475
  br label %490

480:                                              ; preds = %457
  %481 = icmp eq i32 %460, %463
  br i1 %481, label %482, label %488

482:                                              ; preds = %480
  store i32 0, ptr %459, align 4, !tbaa !5
  %483 = getelementptr inbounds i32, ptr %8, i64 %458
  %484 = load i32, ptr %483, align 4, !tbaa !5
  %485 = getelementptr inbounds i32, ptr %6, i64 %458
  store i32 %484, ptr %485, align 4, !tbaa !5
  %486 = add nuw nsw i64 %458, 1
  %487 = icmp eq i64 %486, %360
  br i1 %487, label %495, label %457, !llvm.loop !217

488:                                              ; preds = %453, %480
  %489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

490:                                              ; preds = %466, %472
  %491 = phi ptr [ %479, %472 ], [ %459, %466 ]
  %492 = phi i32 [ %478, %472 ], [ 1, %466 ]
  %493 = load i32, ptr %491, align 4, !tbaa !5
  %494 = add nsw i32 %493, %492
  store i32 %494, ptr %491, align 4, !tbaa !5
  br label %495

495:                                              ; preds = %482, %490, %455, %446
  %496 = icmp eq i32 %447, %5
  br i1 %496, label %5513, label %363, !llvm.loop !218

497:                                              ; preds = %346, %636
  %498 = phi i32 [ 0, %346 ], [ %585, %636 ]
  %499 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %500, label %569

500:                                              ; preds = %497, %559
  %501 = phi i32 [ %568, %559 ], [ 0, %497 ]
  %502 = phi i64 [ %510, %559 ], [ %351, %497 ]
  %503 = phi i64 [ %567, %559 ], [ %350, %497 ]
  %504 = phi i32 [ %565, %559 ], [ %499, %497 ]
  %505 = sub i32 %349, %501
  %506 = tail call i32 @llvm.smin.i32(i32 %505, i32 0)
  %507 = sub i32 %505, %506
  %508 = zext i32 %507 to i64
  %509 = add nuw nsw i64 %508, 1
  %510 = add nsw i64 %502, -1
  %511 = icmp ult i32 %507, 31
  br i1 %511, label %547, label %512

512:                                              ; preds = %500
  %513 = and i64 %509, 8589934560
  %514 = sub i64 %503, %513
  br label %515

515:                                              ; preds = %515, %512
  %516 = phi i64 [ 0, %512 ], [ %539, %515 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %535, %515 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %536, %515 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %537, %515 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %538, %515 ]
  %521 = sub i64 %503, %516
  %522 = getelementptr inbounds i32, ptr %11, i64 %521
  %523 = getelementptr inbounds i32, ptr %522, i64 -7
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !5
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %522, i64 -15
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !5
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = getelementptr inbounds i32, ptr %522, i64 -23
  %530 = load <8 x i32>, ptr %529, align 4, !tbaa !5
  %531 = shufflevector <8 x i32> %530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %532 = getelementptr inbounds i32, ptr %522, i64 -31
  %533 = load <8 x i32>, ptr %532, align 4, !tbaa !5
  %534 = shufflevector <8 x i32> %533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %535 = mul <8 x i32> %525, %517
  %536 = mul <8 x i32> %528, %518
  %537 = mul <8 x i32> %531, %519
  %538 = mul <8 x i32> %534, %520
  %539 = add nuw i64 %516, 32
  %540 = icmp eq i64 %539, %513
  br i1 %540, label %541, label %515, !llvm.loop !219

541:                                              ; preds = %515
  %542 = mul <8 x i32> %536, %535
  %543 = mul <8 x i32> %537, %542
  %544 = mul <8 x i32> %538, %543
  %545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %544)
  %546 = icmp eq i64 %509, %513
  br i1 %546, label %559, label %547

547:                                              ; preds = %500, %541
  %548 = phi i64 [ %503, %500 ], [ %514, %541 ]
  %549 = phi i32 [ 1, %500 ], [ %545, %541 ]
  br label %550

550:                                              ; preds = %547, %550
  %551 = phi i64 [ %556, %550 ], [ %548, %547 ]
  %552 = phi i32 [ %555, %550 ], [ %549, %547 ]
  %553 = getelementptr inbounds i32, ptr %11, i64 %551
  %554 = load i32, ptr %553, align 4, !tbaa !5
  %555 = mul nsw i32 %554, %552
  %556 = add nsw i64 %551, -1
  %557 = trunc i64 %551 to i32
  %558 = icmp sgt i32 %557, 0
  br i1 %558, label %550, label %559, !llvm.loop !220

559:                                              ; preds = %550, %541
  %560 = phi i32 [ %545, %541 ], [ %555, %550 ]
  %561 = and i64 %510, 4294967295
  %562 = getelementptr inbounds i32, ptr %6, i64 %561
  %563 = load i32, ptr %562, align 4, !tbaa !5
  %564 = mul nsw i32 %563, %560
  %565 = add nsw i32 %564, %504
  %566 = icmp sgt i64 %502, 2
  %567 = add nsw i64 %503, -1
  %568 = add i32 %501, 1
  br i1 %566, label %500, label %569, !llvm.loop !221

569:                                              ; preds = %559, %497
  %570 = phi i32 [ %499, %497 ], [ %565, %559 ]
  %571 = icmp slt i32 %570, %5
  br i1 %571, label %574, label %572

572:                                              ; preds = %569
  %573 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

574:                                              ; preds = %569
  %575 = sext i32 %570 to i64
  %576 = getelementptr inbounds i32, ptr %24, i64 %575
  %577 = load i32, ptr %576, align 4, !tbaa !5
  %578 = load i8, ptr %26, align 1, !tbaa !11
  %579 = zext i8 %578 to i32
  %580 = and i32 %577, 255
  %581 = icmp ult i32 %580, %579
  br i1 %581, label %582, label %584

582:                                              ; preds = %574
  %583 = trunc i32 %577 to i8
  store i8 %583, ptr %26, align 1, !tbaa !11
  br label %584

584:                                              ; preds = %582, %574
  %585 = add nuw nsw i32 %498, 1
  br i1 %348, label %586, label %636

586:                                              ; preds = %584
  %587 = load i32, ptr %4, align 4, !tbaa !5
  %588 = load i32, ptr %12, align 4, !tbaa !5
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %587, %589
  br i1 %590, label %613, label %591

591:                                              ; preds = %586
  %592 = icmp eq i32 %587, %589
  br i1 %592, label %593, label %629

593:                                              ; preds = %591
  store i32 0, ptr %4, align 4, !tbaa !5
  %594 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %594, ptr %6, align 4, !tbaa !5
  br i1 %353, label %636, label %595

595:                                              ; preds = %593, %623
  %596 = phi i64 [ %627, %623 ], [ 1, %593 ]
  %597 = getelementptr inbounds i32, ptr %4, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %12, i64 %596
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, -1
  %602 = icmp slt i32 %598, %601
  br i1 %602, label %603, label %621

603:                                              ; preds = %595
  br i1 %590, label %613, label %604

604:                                              ; preds = %603
  %605 = shl i64 %596, 32
  %606 = add i64 %605, -4294967296
  %607 = ashr exact i64 %606, 32
  %608 = getelementptr inbounds i32, ptr %7, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %596
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = add nsw i32 %611, %609
  store i32 %612, ptr %610, align 4, !tbaa !5
  br label %631

613:                                              ; preds = %586, %603
  %614 = phi i32 [ %598, %603 ], [ %587, %586 ]
  %615 = phi ptr [ %597, %603 ], [ %4, %586 ]
  %616 = phi i64 [ %596, %603 ], [ 0, %586 ]
  %617 = add nsw i32 %614, 1
  store i32 %617, ptr %615, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %7, i64 %616
  %619 = load i32, ptr %618, align 4, !tbaa !5
  %620 = getelementptr inbounds i32, ptr %6, i64 %616
  br label %631

621:                                              ; preds = %595
  %622 = icmp eq i32 %598, %601
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  store i32 0, ptr %597, align 4, !tbaa !5
  %624 = getelementptr inbounds i32, ptr %8, i64 %596
  %625 = load i32, ptr %624, align 4, !tbaa !5
  %626 = getelementptr inbounds i32, ptr %6, i64 %596
  store i32 %625, ptr %626, align 4, !tbaa !5
  %627 = add nuw nsw i64 %596, 1
  %628 = icmp eq i64 %627, %351
  br i1 %628, label %636, label %595, !llvm.loop !222

629:                                              ; preds = %591, %621
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

631:                                              ; preds = %604, %613
  %632 = phi ptr [ %620, %613 ], [ %597, %604 ]
  %633 = phi i32 [ %619, %613 ], [ 1, %604 ]
  %634 = load i32, ptr %632, align 4, !tbaa !5
  %635 = add nsw i32 %634, %633
  store i32 %635, ptr %632, align 4, !tbaa !5
  br label %636

636:                                              ; preds = %623, %631, %593, %584
  %637 = icmp eq i32 %585, %5
  br i1 %637, label %5513, label %497, !llvm.loop !223

638:                                              ; preds = %37
  %639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

640:                                              ; preds = %18
  %641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %642 = load ptr, ptr %641, align 8, !tbaa !9
  %643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !9
  %645 = load i32, ptr %642, align 4, !tbaa !5
  store i32 %645, ptr %644, align 4, !tbaa !5
  %646 = icmp eq i32 %13, 0
  br i1 %646, label %647, label %651

647:                                              ; preds = %640
  %648 = load i32, ptr %642, align 4, !tbaa !5
  %649 = icmp sgt i32 %645, %648
  br i1 %649, label %650, label %5513

650:                                              ; preds = %647
  store i32 %648, ptr %644, align 4, !tbaa !5
  br label %5513

651:                                              ; preds = %640
  switch i32 %1, label %1240 [
    i32 1, label %652
    i32 0, label %948
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !5
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %5513

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %810

666:                                              ; preds = %652
  br i1 %656, label %667, label %5513

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %808
  %676 = phi i32 [ 0, %667 ], [ %760, %808 ]
  %677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %668, label %678, label %747

678:                                              ; preds = %675, %737
  %679 = phi i32 [ %746, %737 ], [ 0, %675 ]
  %680 = phi i64 [ %688, %737 ], [ %672, %675 ]
  %681 = phi i64 [ %745, %737 ], [ %671, %675 ]
  %682 = phi i32 [ %743, %737 ], [ %677, %675 ]
  %683 = sub i32 %670, %679
  %684 = tail call i32 @llvm.smin.i32(i32 %683, i32 0)
  %685 = sub i32 %683, %684
  %686 = zext i32 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = add nsw i64 %680, -1
  %689 = icmp ult i32 %685, 31
  br i1 %689, label %725, label %690

690:                                              ; preds = %678
  %691 = and i64 %687, 8589934560
  %692 = sub i64 %681, %691
  br label %693

693:                                              ; preds = %693, %690
  %694 = phi i64 [ 0, %690 ], [ %717, %693 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %713, %693 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %714, %693 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %715, %693 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %716, %693 ]
  %699 = sub i64 %681, %694
  %700 = getelementptr inbounds i32, ptr %9, i64 %699
  %701 = getelementptr inbounds i32, ptr %700, i64 -7
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %700, i64 -15
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %700, i64 -23
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %700, i64 -31
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !5
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = mul <8 x i32> %703, %695
  %714 = mul <8 x i32> %706, %696
  %715 = mul <8 x i32> %709, %697
  %716 = mul <8 x i32> %712, %698
  %717 = add nuw i64 %694, 32
  %718 = icmp eq i64 %717, %691
  br i1 %718, label %719, label %693, !llvm.loop !224

719:                                              ; preds = %693
  %720 = mul <8 x i32> %714, %713
  %721 = mul <8 x i32> %715, %720
  %722 = mul <8 x i32> %716, %721
  %723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %722)
  %724 = icmp eq i64 %687, %691
  br i1 %724, label %737, label %725

725:                                              ; preds = %678, %719
  %726 = phi i64 [ %681, %678 ], [ %692, %719 ]
  %727 = phi i32 [ 1, %678 ], [ %723, %719 ]
  br label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %734, %728 ], [ %726, %725 ]
  %730 = phi i32 [ %733, %728 ], [ %727, %725 ]
  %731 = getelementptr inbounds i32, ptr %9, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %730
  %734 = add nsw i64 %729, -1
  %735 = trunc i64 %729 to i32
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %728, label %737, !llvm.loop !225

737:                                              ; preds = %728, %719
  %738 = phi i32 [ %723, %719 ], [ %733, %728 ]
  %739 = and i64 %688, 4294967295
  %740 = getelementptr inbounds i32, ptr %6, i64 %739
  %741 = load i32, ptr %740, align 4, !tbaa !5
  %742 = mul nsw i32 %741, %738
  %743 = add nsw i32 %742, %682
  %744 = icmp sgt i64 %680, 2
  %745 = add nsw i64 %681, -1
  %746 = add i32 %679, 1
  br i1 %744, label %678, label %747, !llvm.loop !226

747:                                              ; preds = %737, %675
  %748 = phi i32 [ %677, %675 ], [ %743, %737 ]
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %2, i64 %749
  %751 = load double, ptr %750, align 8, !tbaa !18
  %752 = getelementptr inbounds i32, ptr %642, i64 %749
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = fcmp fast ueq double %751, 0.000000e+00
  br i1 %754, label %759, label %755

755:                                              ; preds = %747
  %756 = load i32, ptr %644, align 4, !tbaa !5
  %757 = icmp sgt i32 %756, %753
  br i1 %757, label %758, label %759

758:                                              ; preds = %755
  store i32 %753, ptr %644, align 4, !tbaa !5
  br label %759

759:                                              ; preds = %755, %758, %747
  %760 = add nuw nsw i32 %676, 1
  br i1 %669, label %761, label %808

761:                                              ; preds = %759
  %762 = load i32, ptr %4, align 4, !tbaa !5
  %763 = load i32, ptr %12, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %762, %764
  br i1 %765, label %785, label %766

766:                                              ; preds = %761
  %767 = icmp eq i32 %762, %764
  br i1 %767, label %768, label %801

768:                                              ; preds = %766
  store i32 0, ptr %4, align 4, !tbaa !5
  %769 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %769, ptr %6, align 4, !tbaa !5
  br i1 %674, label %808, label %770

770:                                              ; preds = %768, %795
  %771 = phi i64 [ %799, %795 ], [ 1, %768 ]
  %772 = getelementptr inbounds i32, ptr %4, i64 %771
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %12, i64 %771
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, -1
  %777 = icmp slt i32 %773, %776
  br i1 %777, label %778, label %793

778:                                              ; preds = %770
  br i1 %765, label %785, label %779

779:                                              ; preds = %778
  %780 = getelementptr inbounds i32, ptr %7, i64 %771
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %6, i64 %771
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = add nsw i32 %783, %781
  store i32 %784, ptr %782, align 4, !tbaa !5
  br label %803

785:                                              ; preds = %761, %778
  %786 = phi i32 [ %773, %778 ], [ %762, %761 ]
  %787 = phi ptr [ %772, %778 ], [ %4, %761 ]
  %788 = phi i64 [ %771, %778 ], [ 0, %761 ]
  %789 = add nsw i32 %786, 1
  store i32 %789, ptr %787, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %7, i64 %788
  %791 = load i32, ptr %790, align 4, !tbaa !5
  %792 = getelementptr inbounds i32, ptr %6, i64 %788
  br label %803

793:                                              ; preds = %770
  %794 = icmp eq i32 %773, %776
  br i1 %794, label %795, label %801

795:                                              ; preds = %793
  store i32 0, ptr %772, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %8, i64 %771
  %797 = load i32, ptr %796, align 4, !tbaa !5
  %798 = getelementptr inbounds i32, ptr %6, i64 %771
  store i32 %797, ptr %798, align 4, !tbaa !5
  %799 = add nuw nsw i64 %771, 1
  %800 = icmp eq i64 %799, %672
  br i1 %800, label %808, label %770, !llvm.loop !227

801:                                              ; preds = %766, %793
  %802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

803:                                              ; preds = %779, %785
  %804 = phi ptr [ %792, %785 ], [ %772, %779 ]
  %805 = phi i32 [ %791, %785 ], [ 1, %779 ]
  %806 = load i32, ptr %804, align 4, !tbaa !5
  %807 = add nsw i32 %806, %805
  store i32 %807, ptr %804, align 4, !tbaa !5
  br label %808

808:                                              ; preds = %795, %803, %768, %759
  %809 = icmp eq i32 %760, %5
  br i1 %809, label %5513, label %675, !llvm.loop !228

810:                                              ; preds = %658, %946
  %811 = phi i32 [ 0, %658 ], [ %895, %946 ]
  %812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %659, label %813, label %882

813:                                              ; preds = %810, %872
  %814 = phi i32 [ %881, %872 ], [ 0, %810 ]
  %815 = phi i64 [ %823, %872 ], [ %663, %810 ]
  %816 = phi i64 [ %880, %872 ], [ %662, %810 ]
  %817 = phi i32 [ %878, %872 ], [ %812, %810 ]
  %818 = sub i32 %661, %814
  %819 = tail call i32 @llvm.smin.i32(i32 %818, i32 0)
  %820 = sub i32 %818, %819
  %821 = zext i32 %820 to i64
  %822 = add nuw nsw i64 %821, 1
  %823 = add nsw i64 %815, -1
  %824 = icmp ult i32 %820, 31
  br i1 %824, label %860, label %825

825:                                              ; preds = %813
  %826 = and i64 %822, 8589934560
  %827 = sub i64 %816, %826
  br label %828

828:                                              ; preds = %828, %825
  %829 = phi i64 [ 0, %825 ], [ %852, %828 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %848, %828 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %849, %828 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %850, %828 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %851, %828 ]
  %834 = sub i64 %816, %829
  %835 = getelementptr inbounds i32, ptr %11, i64 %834
  %836 = getelementptr inbounds i32, ptr %835, i64 -7
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !5
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %835, i64 -15
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !5
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %835, i64 -23
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %835, i64 -31
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !5
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = mul <8 x i32> %838, %830
  %849 = mul <8 x i32> %841, %831
  %850 = mul <8 x i32> %844, %832
  %851 = mul <8 x i32> %847, %833
  %852 = add nuw i64 %829, 32
  %853 = icmp eq i64 %852, %826
  br i1 %853, label %854, label %828, !llvm.loop !229

854:                                              ; preds = %828
  %855 = mul <8 x i32> %849, %848
  %856 = mul <8 x i32> %850, %855
  %857 = mul <8 x i32> %851, %856
  %858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %857)
  %859 = icmp eq i64 %822, %826
  br i1 %859, label %872, label %860

860:                                              ; preds = %813, %854
  %861 = phi i64 [ %816, %813 ], [ %827, %854 ]
  %862 = phi i32 [ 1, %813 ], [ %858, %854 ]
  br label %863

863:                                              ; preds = %860, %863
  %864 = phi i64 [ %869, %863 ], [ %861, %860 ]
  %865 = phi i32 [ %868, %863 ], [ %862, %860 ]
  %866 = getelementptr inbounds i32, ptr %11, i64 %864
  %867 = load i32, ptr %866, align 4, !tbaa !5
  %868 = mul nsw i32 %867, %865
  %869 = add nsw i64 %864, -1
  %870 = trunc i64 %864 to i32
  %871 = icmp sgt i32 %870, 0
  br i1 %871, label %863, label %872, !llvm.loop !230

872:                                              ; preds = %863, %854
  %873 = phi i32 [ %858, %854 ], [ %868, %863 ]
  %874 = and i64 %823, 4294967295
  %875 = getelementptr inbounds i32, ptr %6, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !5
  %877 = mul nsw i32 %876, %873
  %878 = add nsw i32 %877, %817
  %879 = icmp sgt i64 %815, 2
  %880 = add nsw i64 %816, -1
  %881 = add i32 %814, 1
  br i1 %879, label %813, label %882, !llvm.loop !231

882:                                              ; preds = %872, %810
  %883 = phi i32 [ %812, %810 ], [ %878, %872 ]
  %884 = icmp slt i32 %883, %5
  br i1 %884, label %887, label %885

885:                                              ; preds = %882
  %886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

887:                                              ; preds = %882
  %888 = sext i32 %883 to i64
  %889 = getelementptr inbounds i32, ptr %642, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !5
  %891 = load i32, ptr %644, align 4, !tbaa !5
  %892 = icmp sgt i32 %891, %890
  br i1 %892, label %893, label %894

893:                                              ; preds = %887
  store i32 %890, ptr %644, align 4, !tbaa !5
  br label %894

894:                                              ; preds = %887, %893
  %895 = add nuw nsw i32 %811, 1
  br i1 %660, label %896, label %946

896:                                              ; preds = %894
  %897 = load i32, ptr %4, align 4, !tbaa !5
  %898 = load i32, ptr %12, align 4, !tbaa !5
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %897, %899
  br i1 %900, label %923, label %901

901:                                              ; preds = %896
  %902 = icmp eq i32 %897, %899
  br i1 %902, label %903, label %939

903:                                              ; preds = %901
  store i32 0, ptr %4, align 4, !tbaa !5
  %904 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %904, ptr %6, align 4, !tbaa !5
  br i1 %665, label %946, label %905

905:                                              ; preds = %903, %933
  %906 = phi i64 [ %937, %933 ], [ 1, %903 ]
  %907 = getelementptr inbounds i32, ptr %4, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %12, i64 %906
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, -1
  %912 = icmp slt i32 %908, %911
  br i1 %912, label %913, label %931

913:                                              ; preds = %905
  br i1 %900, label %923, label %914

914:                                              ; preds = %913
  %915 = shl i64 %906, 32
  %916 = add i64 %915, -4294967296
  %917 = ashr exact i64 %916, 32
  %918 = getelementptr inbounds i32, ptr %7, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %906
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = add nsw i32 %921, %919
  store i32 %922, ptr %920, align 4, !tbaa !5
  br label %941

923:                                              ; preds = %896, %913
  %924 = phi i32 [ %908, %913 ], [ %897, %896 ]
  %925 = phi ptr [ %907, %913 ], [ %4, %896 ]
  %926 = phi i64 [ %906, %913 ], [ 0, %896 ]
  %927 = add nsw i32 %924, 1
  store i32 %927, ptr %925, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %7, i64 %926
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %6, i64 %926
  br label %941

931:                                              ; preds = %905
  %932 = icmp eq i32 %908, %911
  br i1 %932, label %933, label %939

933:                                              ; preds = %931
  store i32 0, ptr %907, align 4, !tbaa !5
  %934 = getelementptr inbounds i32, ptr %8, i64 %906
  %935 = load i32, ptr %934, align 4, !tbaa !5
  %936 = getelementptr inbounds i32, ptr %6, i64 %906
  store i32 %935, ptr %936, align 4, !tbaa !5
  %937 = add nuw nsw i64 %906, 1
  %938 = icmp eq i64 %937, %663
  br i1 %938, label %946, label %905, !llvm.loop !232

939:                                              ; preds = %901, %931
  %940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

941:                                              ; preds = %914, %923
  %942 = phi ptr [ %930, %923 ], [ %907, %914 ]
  %943 = phi i32 [ %929, %923 ], [ 1, %914 ]
  %944 = load i32, ptr %942, align 4, !tbaa !5
  %945 = add nsw i32 %944, %943
  store i32 %945, ptr %942, align 4, !tbaa !5
  br label %946

946:                                              ; preds = %933, %941, %903, %894
  %947 = icmp eq i32 %895, %5
  br i1 %947, label %5513, label %810, !llvm.loop !233

948:                                              ; preds = %651
  %949 = getelementptr inbounds i32, ptr %3, i64 %19
  %950 = load i32, ptr %949, align 4, !tbaa !5
  %951 = icmp eq i32 %950, 0
  %952 = icmp sgt i32 %5, 0
  br i1 %951, label %962, label %953

953:                                              ; preds = %948
  br i1 %952, label %954, label %5513

954:                                              ; preds = %953
  %955 = icmp sgt i32 %13, 1
  %956 = icmp sgt i32 %13, 0
  %957 = add i32 %13, -2
  %958 = zext i32 %957 to i64
  %959 = zext i32 %13 to i64
  %960 = add nuw i32 %5, 1
  %961 = icmp eq i32 %13, 1
  br label %1102

962:                                              ; preds = %948
  br i1 %952, label %963, label %5513

963:                                              ; preds = %962
  %964 = icmp sgt i32 %13, 1
  %965 = icmp sgt i32 %13, 0
  %966 = add i32 %13, -2
  %967 = zext i32 %966 to i64
  %968 = zext i32 %13 to i64
  %969 = add nuw i32 %5, 1
  %970 = icmp eq i32 %13, 1
  br label %971

971:                                              ; preds = %963, %1100
  %972 = phi i32 [ 0, %963 ], [ %1052, %1100 ]
  %973 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %964, label %974, label %1043

974:                                              ; preds = %971, %1033
  %975 = phi i32 [ %1042, %1033 ], [ 0, %971 ]
  %976 = phi i64 [ %984, %1033 ], [ %968, %971 ]
  %977 = phi i64 [ %1041, %1033 ], [ %967, %971 ]
  %978 = phi i32 [ %1039, %1033 ], [ %973, %971 ]
  %979 = sub i32 %966, %975
  %980 = tail call i32 @llvm.smin.i32(i32 %979, i32 0)
  %981 = sub i32 %979, %980
  %982 = zext i32 %981 to i64
  %983 = add nuw nsw i64 %982, 1
  %984 = add nsw i64 %976, -1
  %985 = icmp ult i32 %981, 31
  br i1 %985, label %1021, label %986

986:                                              ; preds = %974
  %987 = and i64 %983, 8589934560
  %988 = sub i64 %977, %987
  br label %989

989:                                              ; preds = %989, %986
  %990 = phi i64 [ 0, %986 ], [ %1013, %989 ]
  %991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1009, %989 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1010, %989 ]
  %993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1011, %989 ]
  %994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1012, %989 ]
  %995 = sub i64 %977, %990
  %996 = getelementptr inbounds i32, ptr %9, i64 %995
  %997 = getelementptr inbounds i32, ptr %996, i64 -7
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %996, i64 -15
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = getelementptr inbounds i32, ptr %996, i64 -23
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !5
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %996, i64 -31
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !5
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = mul <8 x i32> %999, %991
  %1010 = mul <8 x i32> %1002, %992
  %1011 = mul <8 x i32> %1005, %993
  %1012 = mul <8 x i32> %1008, %994
  %1013 = add nuw i64 %990, 32
  %1014 = icmp eq i64 %1013, %987
  br i1 %1014, label %1015, label %989, !llvm.loop !234

1015:                                             ; preds = %989
  %1016 = mul <8 x i32> %1010, %1009
  %1017 = mul <8 x i32> %1011, %1016
  %1018 = mul <8 x i32> %1012, %1017
  %1019 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1018)
  %1020 = icmp eq i64 %983, %987
  br i1 %1020, label %1033, label %1021

1021:                                             ; preds = %974, %1015
  %1022 = phi i64 [ %977, %974 ], [ %988, %1015 ]
  %1023 = phi i32 [ 1, %974 ], [ %1019, %1015 ]
  br label %1024

1024:                                             ; preds = %1021, %1024
  %1025 = phi i64 [ %1030, %1024 ], [ %1022, %1021 ]
  %1026 = phi i32 [ %1029, %1024 ], [ %1023, %1021 ]
  %1027 = getelementptr inbounds i32, ptr %9, i64 %1025
  %1028 = load i32, ptr %1027, align 4, !tbaa !5
  %1029 = mul nsw i32 %1028, %1026
  %1030 = add nsw i64 %1025, -1
  %1031 = trunc i64 %1025 to i32
  %1032 = icmp sgt i32 %1031, 0
  br i1 %1032, label %1024, label %1033, !llvm.loop !235

1033:                                             ; preds = %1024, %1015
  %1034 = phi i32 [ %1019, %1015 ], [ %1029, %1024 ]
  %1035 = and i64 %984, 4294967295
  %1036 = getelementptr inbounds i32, ptr %6, i64 %1035
  %1037 = load i32, ptr %1036, align 4, !tbaa !5
  %1038 = mul nsw i32 %1037, %1034
  %1039 = add nsw i32 %1038, %978
  %1040 = icmp sgt i64 %976, 2
  %1041 = add nsw i64 %977, -1
  %1042 = add i32 %975, 1
  br i1 %1040, label %974, label %1043, !llvm.loop !236

1043:                                             ; preds = %1033, %971
  %1044 = phi i32 [ %973, %971 ], [ %1039, %1033 ]
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds i32, ptr %642, i64 %1045
  %1047 = load i32, ptr %1046, align 4, !tbaa !5
  %1048 = load i32, ptr %644, align 4, !tbaa !5
  %1049 = icmp sgt i32 %1048, %1047
  br i1 %1049, label %1050, label %1051

1050:                                             ; preds = %1043
  store i32 %1047, ptr %644, align 4, !tbaa !5
  br label %1051

1051:                                             ; preds = %1050, %1043
  %1052 = add nuw nsw i32 %972, 1
  br i1 %965, label %1053, label %1100

1053:                                             ; preds = %1051
  %1054 = load i32, ptr %4, align 4, !tbaa !5
  %1055 = load i32, ptr %12, align 4, !tbaa !5
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1054, %1056
  br i1 %1057, label %1077, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp eq i32 %1054, %1056
  br i1 %1059, label %1060, label %1093

1060:                                             ; preds = %1058
  store i32 0, ptr %4, align 4, !tbaa !5
  %1061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1061, ptr %6, align 4, !tbaa !5
  br i1 %970, label %1100, label %1062

1062:                                             ; preds = %1060, %1087
  %1063 = phi i64 [ %1091, %1087 ], [ 1, %1060 ]
  %1064 = getelementptr inbounds i32, ptr %4, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %12, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1065, %1068
  br i1 %1069, label %1070, label %1085

1070:                                             ; preds = %1062
  br i1 %1057, label %1077, label %1071

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1063
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1063
  %1075 = load i32, ptr %1074, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1073
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  br label %1095

1077:                                             ; preds = %1053, %1070
  %1078 = phi i32 [ %1065, %1070 ], [ %1054, %1053 ]
  %1079 = phi ptr [ %1064, %1070 ], [ %4, %1053 ]
  %1080 = phi i64 [ %1063, %1070 ], [ 0, %1053 ]
  %1081 = add nsw i32 %1078, 1
  store i32 %1081, ptr %1079, align 4, !tbaa !5
  %1082 = getelementptr inbounds i32, ptr %7, i64 %1080
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1080
  br label %1095

1085:                                             ; preds = %1062
  %1086 = icmp eq i32 %1065, %1068
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1085
  store i32 0, ptr %1064, align 4, !tbaa !5
  %1088 = getelementptr inbounds i32, ptr %8, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !5
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1063
  store i32 %1089, ptr %1090, align 4, !tbaa !5
  %1091 = add nuw nsw i64 %1063, 1
  %1092 = icmp eq i64 %1091, %968
  br i1 %1092, label %1100, label %1062, !llvm.loop !237

1093:                                             ; preds = %1058, %1085
  %1094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1095:                                             ; preds = %1071, %1077
  %1096 = phi ptr [ %1084, %1077 ], [ %1064, %1071 ]
  %1097 = phi i32 [ %1083, %1077 ], [ 1, %1071 ]
  %1098 = load i32, ptr %1096, align 4, !tbaa !5
  %1099 = add nsw i32 %1098, %1097
  store i32 %1099, ptr %1096, align 4, !tbaa !5
  br label %1100

1100:                                             ; preds = %1087, %1095, %1060, %1051
  %1101 = icmp eq i32 %1052, %5
  br i1 %1101, label %5513, label %971, !llvm.loop !238

1102:                                             ; preds = %954, %1238
  %1103 = phi i32 [ 0, %954 ], [ %1187, %1238 ]
  %1104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1105, label %1174

1105:                                             ; preds = %1102, %1164
  %1106 = phi i32 [ %1173, %1164 ], [ 0, %1102 ]
  %1107 = phi i64 [ %1115, %1164 ], [ %959, %1102 ]
  %1108 = phi i64 [ %1172, %1164 ], [ %958, %1102 ]
  %1109 = phi i32 [ %1170, %1164 ], [ %1104, %1102 ]
  %1110 = sub i32 %957, %1106
  %1111 = tail call i32 @llvm.smin.i32(i32 %1110, i32 0)
  %1112 = sub i32 %1110, %1111
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1113, 1
  %1115 = add nsw i64 %1107, -1
  %1116 = icmp ult i32 %1112, 31
  br i1 %1116, label %1152, label %1117

1117:                                             ; preds = %1105
  %1118 = and i64 %1114, 8589934560
  %1119 = sub i64 %1108, %1118
  br label %1120

1120:                                             ; preds = %1120, %1117
  %1121 = phi i64 [ 0, %1117 ], [ %1144, %1120 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1140, %1120 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1141, %1120 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1142, %1120 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1143, %1120 ]
  %1126 = sub i64 %1108, %1121
  %1127 = getelementptr inbounds i32, ptr %11, i64 %1126
  %1128 = getelementptr inbounds i32, ptr %1127, i64 -7
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1127, i64 -15
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1127, i64 -23
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1127, i64 -31
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = mul <8 x i32> %1130, %1122
  %1141 = mul <8 x i32> %1133, %1123
  %1142 = mul <8 x i32> %1136, %1124
  %1143 = mul <8 x i32> %1139, %1125
  %1144 = add nuw i64 %1121, 32
  %1145 = icmp eq i64 %1144, %1118
  br i1 %1145, label %1146, label %1120, !llvm.loop !239

1146:                                             ; preds = %1120
  %1147 = mul <8 x i32> %1141, %1140
  %1148 = mul <8 x i32> %1142, %1147
  %1149 = mul <8 x i32> %1143, %1148
  %1150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1149)
  %1151 = icmp eq i64 %1114, %1118
  br i1 %1151, label %1164, label %1152

1152:                                             ; preds = %1105, %1146
  %1153 = phi i64 [ %1108, %1105 ], [ %1119, %1146 ]
  %1154 = phi i32 [ 1, %1105 ], [ %1150, %1146 ]
  br label %1155

1155:                                             ; preds = %1152, %1155
  %1156 = phi i64 [ %1161, %1155 ], [ %1153, %1152 ]
  %1157 = phi i32 [ %1160, %1155 ], [ %1154, %1152 ]
  %1158 = getelementptr inbounds i32, ptr %11, i64 %1156
  %1159 = load i32, ptr %1158, align 4, !tbaa !5
  %1160 = mul nsw i32 %1159, %1157
  %1161 = add nsw i64 %1156, -1
  %1162 = trunc i64 %1156 to i32
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1155, label %1164, !llvm.loop !240

1164:                                             ; preds = %1155, %1146
  %1165 = phi i32 [ %1150, %1146 ], [ %1160, %1155 ]
  %1166 = and i64 %1115, 4294967295
  %1167 = getelementptr inbounds i32, ptr %6, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1165
  %1170 = add nsw i32 %1169, %1109
  %1171 = icmp sgt i64 %1107, 2
  %1172 = add nsw i64 %1108, -1
  %1173 = add i32 %1106, 1
  br i1 %1171, label %1105, label %1174, !llvm.loop !241

1174:                                             ; preds = %1164, %1102
  %1175 = phi i32 [ %1104, %1102 ], [ %1170, %1164 ]
  %1176 = icmp slt i32 %1175, %5
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1174
  %1178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1179:                                             ; preds = %1174
  %1180 = sext i32 %1175 to i64
  %1181 = getelementptr inbounds i32, ptr %642, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !5
  %1183 = load i32, ptr %644, align 4, !tbaa !5
  %1184 = icmp sgt i32 %1183, %1182
  br i1 %1184, label %1185, label %1186

1185:                                             ; preds = %1179
  store i32 %1182, ptr %644, align 4, !tbaa !5
  br label %1186

1186:                                             ; preds = %1185, %1179
  %1187 = add nuw nsw i32 %1103, 1
  br i1 %956, label %1188, label %1238

1188:                                             ; preds = %1186
  %1189 = load i32, ptr %4, align 4, !tbaa !5
  %1190 = load i32, ptr %12, align 4, !tbaa !5
  %1191 = add nsw i32 %1190, -1
  %1192 = icmp slt i32 %1189, %1191
  br i1 %1192, label %1215, label %1193

1193:                                             ; preds = %1188
  %1194 = icmp eq i32 %1189, %1191
  br i1 %1194, label %1195, label %1231

1195:                                             ; preds = %1193
  store i32 0, ptr %4, align 4, !tbaa !5
  %1196 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1196, ptr %6, align 4, !tbaa !5
  br i1 %961, label %1238, label %1197

1197:                                             ; preds = %1195, %1225
  %1198 = phi i64 [ %1229, %1225 ], [ 1, %1195 ]
  %1199 = getelementptr inbounds i32, ptr %4, i64 %1198
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %12, i64 %1198
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = add nsw i32 %1202, -1
  %1204 = icmp slt i32 %1200, %1203
  br i1 %1204, label %1205, label %1223

1205:                                             ; preds = %1197
  br i1 %1192, label %1215, label %1206

1206:                                             ; preds = %1205
  %1207 = shl i64 %1198, 32
  %1208 = add i64 %1207, -4294967296
  %1209 = ashr exact i64 %1208, 32
  %1210 = getelementptr inbounds i32, ptr %7, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1198
  %1213 = load i32, ptr %1212, align 4, !tbaa !5
  %1214 = add nsw i32 %1213, %1211
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  br label %1233

1215:                                             ; preds = %1188, %1205
  %1216 = phi i32 [ %1200, %1205 ], [ %1189, %1188 ]
  %1217 = phi ptr [ %1199, %1205 ], [ %4, %1188 ]
  %1218 = phi i64 [ %1198, %1205 ], [ 0, %1188 ]
  %1219 = add nsw i32 %1216, 1
  store i32 %1219, ptr %1217, align 4, !tbaa !5
  %1220 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1221 = load i32, ptr %1220, align 4, !tbaa !5
  %1222 = getelementptr inbounds i32, ptr %6, i64 %1218
  br label %1233

1223:                                             ; preds = %1197
  %1224 = icmp eq i32 %1200, %1203
  br i1 %1224, label %1225, label %1231

1225:                                             ; preds = %1223
  store i32 0, ptr %1199, align 4, !tbaa !5
  %1226 = getelementptr inbounds i32, ptr %8, i64 %1198
  %1227 = load i32, ptr %1226, align 4, !tbaa !5
  %1228 = getelementptr inbounds i32, ptr %6, i64 %1198
  store i32 %1227, ptr %1228, align 4, !tbaa !5
  %1229 = add nuw nsw i64 %1198, 1
  %1230 = icmp eq i64 %1229, %959
  br i1 %1230, label %1238, label %1197, !llvm.loop !242

1231:                                             ; preds = %1193, %1223
  %1232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1233:                                             ; preds = %1206, %1215
  %1234 = phi ptr [ %1222, %1215 ], [ %1199, %1206 ]
  %1235 = phi i32 [ %1221, %1215 ], [ 1, %1206 ]
  %1236 = load i32, ptr %1234, align 4, !tbaa !5
  %1237 = add nsw i32 %1236, %1235
  store i32 %1237, ptr %1234, align 4, !tbaa !5
  br label %1238

1238:                                             ; preds = %1225, %1233, %1195, %1186
  %1239 = icmp eq i32 %1187, %5
  br i1 %1239, label %5513, label %1102, !llvm.loop !243

1240:                                             ; preds = %651
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1242:                                             ; preds = %18
  %1243 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1244 = load ptr, ptr %1243, align 8, !tbaa !9
  %1245 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1246 = load ptr, ptr %1245, align 8, !tbaa !9
  %1247 = load i32, ptr %1244, align 4, !tbaa !5
  %1248 = trunc i32 %1247 to i8
  store i8 %1248, ptr %1246, align 1, !tbaa !11
  %1249 = icmp eq i32 %13, 0
  br i1 %1249, label %1250, label %1257

1250:                                             ; preds = %1242
  %1251 = load i32, ptr %1244, align 4, !tbaa !5
  %1252 = shl i32 %1247, 24
  %1253 = shl i32 %1251, 24
  %1254 = icmp sgt i32 %1252, %1253
  br i1 %1254, label %1255, label %5513

1255:                                             ; preds = %1250
  %1256 = trunc i32 %1251 to i8
  store i8 %1256, ptr %1246, align 1, !tbaa !11
  br label %5513

1257:                                             ; preds = %1242
  switch i32 %1, label %1862 [
    i32 1, label %1258
    i32 0, label %1562
  ]

1258:                                             ; preds = %1257
  %1259 = getelementptr inbounds i32, ptr %3, i64 %19
  %1260 = load i32, ptr %1259, align 4, !tbaa !5
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp sgt i32 %5, 0
  br i1 %1261, label %1272, label %1263

1263:                                             ; preds = %1258
  br i1 %1262, label %1264, label %5513

1264:                                             ; preds = %1263
  %1265 = icmp sgt i32 %13, 1
  %1266 = icmp sgt i32 %13, 0
  %1267 = add i32 %13, -2
  %1268 = zext i32 %1267 to i64
  %1269 = zext i32 %13 to i64
  %1270 = add nuw i32 %5, 1
  %1271 = icmp eq i32 %13, 1
  br label %1420

1272:                                             ; preds = %1258
  br i1 %1262, label %1273, label %5513

1273:                                             ; preds = %1272
  %1274 = icmp sgt i32 %13, 1
  %1275 = icmp sgt i32 %13, 0
  %1276 = add i32 %13, -2
  %1277 = zext i32 %1276 to i64
  %1278 = zext i32 %13 to i64
  %1279 = add nuw i32 %5, 1
  %1280 = icmp eq i32 %13, 1
  br label %1281

1281:                                             ; preds = %1273, %1418
  %1282 = phi i32 [ 0, %1273 ], [ %1370, %1418 ]
  %1283 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1274, label %1284, label %1353

1284:                                             ; preds = %1281, %1343
  %1285 = phi i32 [ %1352, %1343 ], [ 0, %1281 ]
  %1286 = phi i64 [ %1294, %1343 ], [ %1278, %1281 ]
  %1287 = phi i64 [ %1351, %1343 ], [ %1277, %1281 ]
  %1288 = phi i32 [ %1349, %1343 ], [ %1283, %1281 ]
  %1289 = sub i32 %1276, %1285
  %1290 = tail call i32 @llvm.smin.i32(i32 %1289, i32 0)
  %1291 = sub i32 %1289, %1290
  %1292 = zext i32 %1291 to i64
  %1293 = add nuw nsw i64 %1292, 1
  %1294 = add nsw i64 %1286, -1
  %1295 = icmp ult i32 %1291, 31
  br i1 %1295, label %1331, label %1296

1296:                                             ; preds = %1284
  %1297 = and i64 %1293, 8589934560
  %1298 = sub i64 %1287, %1297
  br label %1299

1299:                                             ; preds = %1299, %1296
  %1300 = phi i64 [ 0, %1296 ], [ %1323, %1299 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1319, %1299 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1320, %1299 ]
  %1303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1321, %1299 ]
  %1304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1322, %1299 ]
  %1305 = sub i64 %1287, %1300
  %1306 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1307 = getelementptr inbounds i32, ptr %1306, i64 -7
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = getelementptr inbounds i32, ptr %1306, i64 -15
  %1311 = load <8 x i32>, ptr %1310, align 4, !tbaa !5
  %1312 = shufflevector <8 x i32> %1311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1313 = getelementptr inbounds i32, ptr %1306, i64 -23
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !5
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1306, i64 -31
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !5
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = mul <8 x i32> %1309, %1301
  %1320 = mul <8 x i32> %1312, %1302
  %1321 = mul <8 x i32> %1315, %1303
  %1322 = mul <8 x i32> %1318, %1304
  %1323 = add nuw i64 %1300, 32
  %1324 = icmp eq i64 %1323, %1297
  br i1 %1324, label %1325, label %1299, !llvm.loop !244

1325:                                             ; preds = %1299
  %1326 = mul <8 x i32> %1320, %1319
  %1327 = mul <8 x i32> %1321, %1326
  %1328 = mul <8 x i32> %1322, %1327
  %1329 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1328)
  %1330 = icmp eq i64 %1293, %1297
  br i1 %1330, label %1343, label %1331

1331:                                             ; preds = %1284, %1325
  %1332 = phi i64 [ %1287, %1284 ], [ %1298, %1325 ]
  %1333 = phi i32 [ 1, %1284 ], [ %1329, %1325 ]
  br label %1334

1334:                                             ; preds = %1331, %1334
  %1335 = phi i64 [ %1340, %1334 ], [ %1332, %1331 ]
  %1336 = phi i32 [ %1339, %1334 ], [ %1333, %1331 ]
  %1337 = getelementptr inbounds i32, ptr %9, i64 %1335
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1336
  %1340 = add nsw i64 %1335, -1
  %1341 = trunc i64 %1335 to i32
  %1342 = icmp sgt i32 %1341, 0
  br i1 %1342, label %1334, label %1343, !llvm.loop !245

1343:                                             ; preds = %1334, %1325
  %1344 = phi i32 [ %1329, %1325 ], [ %1339, %1334 ]
  %1345 = and i64 %1294, 4294967295
  %1346 = getelementptr inbounds i32, ptr %6, i64 %1345
  %1347 = load i32, ptr %1346, align 4, !tbaa !5
  %1348 = mul nsw i32 %1347, %1344
  %1349 = add nsw i32 %1348, %1288
  %1350 = icmp sgt i64 %1286, 2
  %1351 = add nsw i64 %1287, -1
  %1352 = add i32 %1285, 1
  br i1 %1350, label %1284, label %1353, !llvm.loop !246

1353:                                             ; preds = %1343, %1281
  %1354 = phi i32 [ %1283, %1281 ], [ %1349, %1343 ]
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds double, ptr %2, i64 %1355
  %1357 = load double, ptr %1356, align 8, !tbaa !18
  %1358 = getelementptr inbounds i32, ptr %1244, i64 %1355
  %1359 = load i32, ptr %1358, align 4, !tbaa !5
  %1360 = trunc i32 %1359 to i8
  %1361 = fcmp fast ueq double %1357, 0.000000e+00
  br i1 %1361, label %1369, label %1362

1362:                                             ; preds = %1353
  %1363 = load i8, ptr %1246, align 1, !tbaa !11
  %1364 = sext i8 %1363 to i32
  %1365 = shl i32 %1359, 24
  %1366 = ashr exact i32 %1365, 24
  %1367 = icmp slt i32 %1366, %1364
  br i1 %1367, label %1368, label %1369

1368:                                             ; preds = %1362
  store i8 %1360, ptr %1246, align 1, !tbaa !11
  br label %1369

1369:                                             ; preds = %1362, %1368, %1353
  %1370 = add nuw nsw i32 %1282, 1
  br i1 %1275, label %1371, label %1418

1371:                                             ; preds = %1369
  %1372 = load i32, ptr %4, align 4, !tbaa !5
  %1373 = load i32, ptr %12, align 4, !tbaa !5
  %1374 = add nsw i32 %1373, -1
  %1375 = icmp slt i32 %1372, %1374
  br i1 %1375, label %1395, label %1376

1376:                                             ; preds = %1371
  %1377 = icmp eq i32 %1372, %1374
  br i1 %1377, label %1378, label %1411

1378:                                             ; preds = %1376
  store i32 0, ptr %4, align 4, !tbaa !5
  %1379 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1379, ptr %6, align 4, !tbaa !5
  br i1 %1280, label %1418, label %1380

1380:                                             ; preds = %1378, %1405
  %1381 = phi i64 [ %1409, %1405 ], [ 1, %1378 ]
  %1382 = getelementptr inbounds i32, ptr %4, i64 %1381
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %12, i64 %1381
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, -1
  %1387 = icmp slt i32 %1383, %1386
  br i1 %1387, label %1388, label %1403

1388:                                             ; preds = %1380
  br i1 %1375, label %1395, label %1389

1389:                                             ; preds = %1388
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1381
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1381
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, %1391
  store i32 %1394, ptr %1392, align 4, !tbaa !5
  br label %1413

1395:                                             ; preds = %1371, %1388
  %1396 = phi i32 [ %1383, %1388 ], [ %1372, %1371 ]
  %1397 = phi ptr [ %1382, %1388 ], [ %4, %1371 ]
  %1398 = phi i64 [ %1381, %1388 ], [ 0, %1371 ]
  %1399 = add nsw i32 %1396, 1
  store i32 %1399, ptr %1397, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %7, i64 %1398
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %6, i64 %1398
  br label %1413

1403:                                             ; preds = %1380
  %1404 = icmp eq i32 %1383, %1386
  br i1 %1404, label %1405, label %1411

1405:                                             ; preds = %1403
  store i32 0, ptr %1382, align 4, !tbaa !5
  %1406 = getelementptr inbounds i32, ptr %8, i64 %1381
  %1407 = load i32, ptr %1406, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1381
  store i32 %1407, ptr %1408, align 4, !tbaa !5
  %1409 = add nuw nsw i64 %1381, 1
  %1410 = icmp eq i64 %1409, %1278
  br i1 %1410, label %1418, label %1380, !llvm.loop !247

1411:                                             ; preds = %1376, %1403
  %1412 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1413:                                             ; preds = %1389, %1395
  %1414 = phi ptr [ %1402, %1395 ], [ %1382, %1389 ]
  %1415 = phi i32 [ %1401, %1395 ], [ 1, %1389 ]
  %1416 = load i32, ptr %1414, align 4, !tbaa !5
  %1417 = add nsw i32 %1416, %1415
  store i32 %1417, ptr %1414, align 4, !tbaa !5
  br label %1418

1418:                                             ; preds = %1405, %1413, %1378, %1369
  %1419 = icmp eq i32 %1370, %5
  br i1 %1419, label %5513, label %1281, !llvm.loop !248

1420:                                             ; preds = %1264, %1560
  %1421 = phi i32 [ 0, %1264 ], [ %1509, %1560 ]
  %1422 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1423, label %1492

1423:                                             ; preds = %1420, %1482
  %1424 = phi i32 [ %1491, %1482 ], [ 0, %1420 ]
  %1425 = phi i64 [ %1433, %1482 ], [ %1269, %1420 ]
  %1426 = phi i64 [ %1490, %1482 ], [ %1268, %1420 ]
  %1427 = phi i32 [ %1488, %1482 ], [ %1422, %1420 ]
  %1428 = sub i32 %1267, %1424
  %1429 = tail call i32 @llvm.smin.i32(i32 %1428, i32 0)
  %1430 = sub i32 %1428, %1429
  %1431 = zext i32 %1430 to i64
  %1432 = add nuw nsw i64 %1431, 1
  %1433 = add nsw i64 %1425, -1
  %1434 = icmp ult i32 %1430, 31
  br i1 %1434, label %1470, label %1435

1435:                                             ; preds = %1423
  %1436 = and i64 %1432, 8589934560
  %1437 = sub i64 %1426, %1436
  br label %1438

1438:                                             ; preds = %1438, %1435
  %1439 = phi i64 [ 0, %1435 ], [ %1462, %1438 ]
  %1440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1458, %1438 ]
  %1441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1459, %1438 ]
  %1442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1460, %1438 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1461, %1438 ]
  %1444 = sub i64 %1426, %1439
  %1445 = getelementptr inbounds i32, ptr %11, i64 %1444
  %1446 = getelementptr inbounds i32, ptr %1445, i64 -7
  %1447 = load <8 x i32>, ptr %1446, align 4, !tbaa !5
  %1448 = shufflevector <8 x i32> %1447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1449 = getelementptr inbounds i32, ptr %1445, i64 -15
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !5
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1445, i64 -23
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !5
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1445, i64 -31
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !5
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = mul <8 x i32> %1448, %1440
  %1459 = mul <8 x i32> %1451, %1441
  %1460 = mul <8 x i32> %1454, %1442
  %1461 = mul <8 x i32> %1457, %1443
  %1462 = add nuw i64 %1439, 32
  %1463 = icmp eq i64 %1462, %1436
  br i1 %1463, label %1464, label %1438, !llvm.loop !249

1464:                                             ; preds = %1438
  %1465 = mul <8 x i32> %1459, %1458
  %1466 = mul <8 x i32> %1460, %1465
  %1467 = mul <8 x i32> %1461, %1466
  %1468 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1467)
  %1469 = icmp eq i64 %1432, %1436
  br i1 %1469, label %1482, label %1470

1470:                                             ; preds = %1423, %1464
  %1471 = phi i64 [ %1426, %1423 ], [ %1437, %1464 ]
  %1472 = phi i32 [ 1, %1423 ], [ %1468, %1464 ]
  br label %1473

1473:                                             ; preds = %1470, %1473
  %1474 = phi i64 [ %1479, %1473 ], [ %1471, %1470 ]
  %1475 = phi i32 [ %1478, %1473 ], [ %1472, %1470 ]
  %1476 = getelementptr inbounds i32, ptr %11, i64 %1474
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = mul nsw i32 %1477, %1475
  %1479 = add nsw i64 %1474, -1
  %1480 = trunc i64 %1474 to i32
  %1481 = icmp sgt i32 %1480, 0
  br i1 %1481, label %1473, label %1482, !llvm.loop !250

1482:                                             ; preds = %1473, %1464
  %1483 = phi i32 [ %1468, %1464 ], [ %1478, %1473 ]
  %1484 = and i64 %1433, 4294967295
  %1485 = getelementptr inbounds i32, ptr %6, i64 %1484
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = mul nsw i32 %1486, %1483
  %1488 = add nsw i32 %1487, %1427
  %1489 = icmp sgt i64 %1425, 2
  %1490 = add nsw i64 %1426, -1
  %1491 = add i32 %1424, 1
  br i1 %1489, label %1423, label %1492, !llvm.loop !251

1492:                                             ; preds = %1482, %1420
  %1493 = phi i32 [ %1422, %1420 ], [ %1488, %1482 ]
  %1494 = icmp slt i32 %1493, %5
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1492
  %1496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1497:                                             ; preds = %1492
  %1498 = sext i32 %1493 to i64
  %1499 = getelementptr inbounds i32, ptr %1244, i64 %1498
  %1500 = load i32, ptr %1499, align 4, !tbaa !5
  %1501 = load i8, ptr %1246, align 1, !tbaa !11
  %1502 = sext i8 %1501 to i32
  %1503 = shl i32 %1500, 24
  %1504 = ashr exact i32 %1503, 24
  %1505 = icmp slt i32 %1504, %1502
  br i1 %1505, label %1506, label %1508

1506:                                             ; preds = %1497
  %1507 = trunc i32 %1500 to i8
  store i8 %1507, ptr %1246, align 1, !tbaa !11
  br label %1508

1508:                                             ; preds = %1497, %1506
  %1509 = add nuw nsw i32 %1421, 1
  br i1 %1266, label %1510, label %1560

1510:                                             ; preds = %1508
  %1511 = load i32, ptr %4, align 4, !tbaa !5
  %1512 = load i32, ptr %12, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1511, %1513
  br i1 %1514, label %1537, label %1515

1515:                                             ; preds = %1510
  %1516 = icmp eq i32 %1511, %1513
  br i1 %1516, label %1517, label %1553

1517:                                             ; preds = %1515
  store i32 0, ptr %4, align 4, !tbaa !5
  %1518 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1518, ptr %6, align 4, !tbaa !5
  br i1 %1271, label %1560, label %1519

1519:                                             ; preds = %1517, %1547
  %1520 = phi i64 [ %1551, %1547 ], [ 1, %1517 ]
  %1521 = getelementptr inbounds i32, ptr %4, i64 %1520
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = getelementptr inbounds i32, ptr %12, i64 %1520
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = add nsw i32 %1524, -1
  %1526 = icmp slt i32 %1522, %1525
  br i1 %1526, label %1527, label %1545

1527:                                             ; preds = %1519
  br i1 %1514, label %1537, label %1528

1528:                                             ; preds = %1527
  %1529 = shl i64 %1520, 32
  %1530 = add i64 %1529, -4294967296
  %1531 = ashr exact i64 %1530, 32
  %1532 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !5
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1520
  %1535 = load i32, ptr %1534, align 4, !tbaa !5
  %1536 = add nsw i32 %1535, %1533
  store i32 %1536, ptr %1534, align 4, !tbaa !5
  br label %1555

1537:                                             ; preds = %1510, %1527
  %1538 = phi i32 [ %1522, %1527 ], [ %1511, %1510 ]
  %1539 = phi ptr [ %1521, %1527 ], [ %4, %1510 ]
  %1540 = phi i64 [ %1520, %1527 ], [ 0, %1510 ]
  %1541 = add nsw i32 %1538, 1
  store i32 %1541, ptr %1539, align 4, !tbaa !5
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1540
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1540
  br label %1555

1545:                                             ; preds = %1519
  %1546 = icmp eq i32 %1522, %1525
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1545
  store i32 0, ptr %1521, align 4, !tbaa !5
  %1548 = getelementptr inbounds i32, ptr %8, i64 %1520
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = getelementptr inbounds i32, ptr %6, i64 %1520
  store i32 %1549, ptr %1550, align 4, !tbaa !5
  %1551 = add nuw nsw i64 %1520, 1
  %1552 = icmp eq i64 %1551, %1269
  br i1 %1552, label %1560, label %1519, !llvm.loop !252

1553:                                             ; preds = %1515, %1545
  %1554 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1555:                                             ; preds = %1528, %1537
  %1556 = phi ptr [ %1544, %1537 ], [ %1521, %1528 ]
  %1557 = phi i32 [ %1543, %1537 ], [ 1, %1528 ]
  %1558 = load i32, ptr %1556, align 4, !tbaa !5
  %1559 = add nsw i32 %1558, %1557
  store i32 %1559, ptr %1556, align 4, !tbaa !5
  br label %1560

1560:                                             ; preds = %1547, %1555, %1517, %1508
  %1561 = icmp eq i32 %1509, %5
  br i1 %1561, label %5513, label %1420, !llvm.loop !253

1562:                                             ; preds = %1257
  %1563 = getelementptr inbounds i32, ptr %3, i64 %19
  %1564 = load i32, ptr %1563, align 4, !tbaa !5
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp sgt i32 %5, 0
  br i1 %1565, label %1576, label %1567

1567:                                             ; preds = %1562
  br i1 %1566, label %1568, label %5513

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1720

1576:                                             ; preds = %1562
  br i1 %1566, label %1577, label %5513

1577:                                             ; preds = %1576
  %1578 = icmp sgt i32 %13, 1
  %1579 = icmp sgt i32 %13, 0
  %1580 = add i32 %13, -2
  %1581 = zext i32 %1580 to i64
  %1582 = zext i32 %13 to i64
  %1583 = add nuw i32 %5, 1
  %1584 = icmp eq i32 %13, 1
  br label %1585

1585:                                             ; preds = %1577, %1718
  %1586 = phi i32 [ 0, %1577 ], [ %1670, %1718 ]
  %1587 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1578, label %1588, label %1657

1588:                                             ; preds = %1585, %1647
  %1589 = phi i32 [ %1656, %1647 ], [ 0, %1585 ]
  %1590 = phi i64 [ %1598, %1647 ], [ %1582, %1585 ]
  %1591 = phi i64 [ %1655, %1647 ], [ %1581, %1585 ]
  %1592 = phi i32 [ %1653, %1647 ], [ %1587, %1585 ]
  %1593 = sub i32 %1580, %1589
  %1594 = tail call i32 @llvm.smin.i32(i32 %1593, i32 0)
  %1595 = sub i32 %1593, %1594
  %1596 = zext i32 %1595 to i64
  %1597 = add nuw nsw i64 %1596, 1
  %1598 = add nsw i64 %1590, -1
  %1599 = icmp ult i32 %1595, 31
  br i1 %1599, label %1635, label %1600

1600:                                             ; preds = %1588
  %1601 = and i64 %1597, 8589934560
  %1602 = sub i64 %1591, %1601
  br label %1603

1603:                                             ; preds = %1603, %1600
  %1604 = phi i64 [ 0, %1600 ], [ %1627, %1603 ]
  %1605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1623, %1603 ]
  %1606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1624, %1603 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1625, %1603 ]
  %1608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1626, %1603 ]
  %1609 = sub i64 %1591, %1604
  %1610 = getelementptr inbounds i32, ptr %9, i64 %1609
  %1611 = getelementptr inbounds i32, ptr %1610, i64 -7
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !5
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1610, i64 -15
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !5
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = getelementptr inbounds i32, ptr %1610, i64 -23
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !5
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = getelementptr inbounds i32, ptr %1610, i64 -31
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !5
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = mul <8 x i32> %1613, %1605
  %1624 = mul <8 x i32> %1616, %1606
  %1625 = mul <8 x i32> %1619, %1607
  %1626 = mul <8 x i32> %1622, %1608
  %1627 = add nuw i64 %1604, 32
  %1628 = icmp eq i64 %1627, %1601
  br i1 %1628, label %1629, label %1603, !llvm.loop !254

1629:                                             ; preds = %1603
  %1630 = mul <8 x i32> %1624, %1623
  %1631 = mul <8 x i32> %1625, %1630
  %1632 = mul <8 x i32> %1626, %1631
  %1633 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1632)
  %1634 = icmp eq i64 %1597, %1601
  br i1 %1634, label %1647, label %1635

1635:                                             ; preds = %1588, %1629
  %1636 = phi i64 [ %1591, %1588 ], [ %1602, %1629 ]
  %1637 = phi i32 [ 1, %1588 ], [ %1633, %1629 ]
  br label %1638

1638:                                             ; preds = %1635, %1638
  %1639 = phi i64 [ %1644, %1638 ], [ %1636, %1635 ]
  %1640 = phi i32 [ %1643, %1638 ], [ %1637, %1635 ]
  %1641 = getelementptr inbounds i32, ptr %9, i64 %1639
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = mul nsw i32 %1642, %1640
  %1644 = add nsw i64 %1639, -1
  %1645 = trunc i64 %1639 to i32
  %1646 = icmp sgt i32 %1645, 0
  br i1 %1646, label %1638, label %1647, !llvm.loop !255

1647:                                             ; preds = %1638, %1629
  %1648 = phi i32 [ %1633, %1629 ], [ %1643, %1638 ]
  %1649 = and i64 %1598, 4294967295
  %1650 = getelementptr inbounds i32, ptr %6, i64 %1649
  %1651 = load i32, ptr %1650, align 4, !tbaa !5
  %1652 = mul nsw i32 %1651, %1648
  %1653 = add nsw i32 %1652, %1592
  %1654 = icmp sgt i64 %1590, 2
  %1655 = add nsw i64 %1591, -1
  %1656 = add i32 %1589, 1
  br i1 %1654, label %1588, label %1657, !llvm.loop !256

1657:                                             ; preds = %1647, %1585
  %1658 = phi i32 [ %1587, %1585 ], [ %1653, %1647 ]
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds i32, ptr %1244, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !5
  %1662 = load i8, ptr %1246, align 1, !tbaa !11
  %1663 = sext i8 %1662 to i32
  %1664 = shl i32 %1661, 24
  %1665 = ashr exact i32 %1664, 24
  %1666 = icmp slt i32 %1665, %1663
  br i1 %1666, label %1667, label %1669

1667:                                             ; preds = %1657
  %1668 = trunc i32 %1661 to i8
  store i8 %1668, ptr %1246, align 1, !tbaa !11
  br label %1669

1669:                                             ; preds = %1667, %1657
  %1670 = add nuw nsw i32 %1586, 1
  br i1 %1579, label %1671, label %1718

1671:                                             ; preds = %1669
  %1672 = load i32, ptr %4, align 4, !tbaa !5
  %1673 = load i32, ptr %12, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, -1
  %1675 = icmp slt i32 %1672, %1674
  br i1 %1675, label %1695, label %1676

1676:                                             ; preds = %1671
  %1677 = icmp eq i32 %1672, %1674
  br i1 %1677, label %1678, label %1711

1678:                                             ; preds = %1676
  store i32 0, ptr %4, align 4, !tbaa !5
  %1679 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1679, ptr %6, align 4, !tbaa !5
  br i1 %1584, label %1718, label %1680

1680:                                             ; preds = %1678, %1705
  %1681 = phi i64 [ %1709, %1705 ], [ 1, %1678 ]
  %1682 = getelementptr inbounds i32, ptr %4, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = getelementptr inbounds i32, ptr %12, i64 %1681
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1683, %1686
  br i1 %1687, label %1688, label %1703

1688:                                             ; preds = %1680
  br i1 %1675, label %1695, label %1689

1689:                                             ; preds = %1688
  %1690 = getelementptr inbounds i32, ptr %7, i64 %1681
  %1691 = load i32, ptr %1690, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = add nsw i32 %1693, %1691
  store i32 %1694, ptr %1692, align 4, !tbaa !5
  br label %1713

1695:                                             ; preds = %1671, %1688
  %1696 = phi i32 [ %1683, %1688 ], [ %1672, %1671 ]
  %1697 = phi ptr [ %1682, %1688 ], [ %4, %1671 ]
  %1698 = phi i64 [ %1681, %1688 ], [ 0, %1671 ]
  %1699 = add nsw i32 %1696, 1
  store i32 %1699, ptr %1697, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %7, i64 %1698
  %1701 = load i32, ptr %1700, align 4, !tbaa !5
  %1702 = getelementptr inbounds i32, ptr %6, i64 %1698
  br label %1713

1703:                                             ; preds = %1680
  %1704 = icmp eq i32 %1683, %1686
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1703
  store i32 0, ptr %1682, align 4, !tbaa !5
  %1706 = getelementptr inbounds i32, ptr %8, i64 %1681
  %1707 = load i32, ptr %1706, align 4, !tbaa !5
  %1708 = getelementptr inbounds i32, ptr %6, i64 %1681
  store i32 %1707, ptr %1708, align 4, !tbaa !5
  %1709 = add nuw nsw i64 %1681, 1
  %1710 = icmp eq i64 %1709, %1582
  br i1 %1710, label %1718, label %1680, !llvm.loop !257

1711:                                             ; preds = %1676, %1703
  %1712 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1713:                                             ; preds = %1689, %1695
  %1714 = phi ptr [ %1702, %1695 ], [ %1682, %1689 ]
  %1715 = phi i32 [ %1701, %1695 ], [ 1, %1689 ]
  %1716 = load i32, ptr %1714, align 4, !tbaa !5
  %1717 = add nsw i32 %1716, %1715
  store i32 %1717, ptr %1714, align 4, !tbaa !5
  br label %1718

1718:                                             ; preds = %1705, %1713, %1678, %1669
  %1719 = icmp eq i32 %1670, %5
  br i1 %1719, label %5513, label %1585, !llvm.loop !258

1720:                                             ; preds = %1568, %1860
  %1721 = phi i32 [ 0, %1568 ], [ %1809, %1860 ]
  %1722 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1723, label %1792

1723:                                             ; preds = %1720, %1782
  %1724 = phi i32 [ %1791, %1782 ], [ 0, %1720 ]
  %1725 = phi i64 [ %1733, %1782 ], [ %1573, %1720 ]
  %1726 = phi i64 [ %1790, %1782 ], [ %1572, %1720 ]
  %1727 = phi i32 [ %1788, %1782 ], [ %1722, %1720 ]
  %1728 = sub i32 %1571, %1724
  %1729 = tail call i32 @llvm.smin.i32(i32 %1728, i32 0)
  %1730 = sub i32 %1728, %1729
  %1731 = zext i32 %1730 to i64
  %1732 = add nuw nsw i64 %1731, 1
  %1733 = add nsw i64 %1725, -1
  %1734 = icmp ult i32 %1730, 31
  br i1 %1734, label %1770, label %1735

1735:                                             ; preds = %1723
  %1736 = and i64 %1732, 8589934560
  %1737 = sub i64 %1726, %1736
  br label %1738

1738:                                             ; preds = %1738, %1735
  %1739 = phi i64 [ 0, %1735 ], [ %1762, %1738 ]
  %1740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1758, %1738 ]
  %1741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1759, %1738 ]
  %1742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1760, %1738 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1761, %1738 ]
  %1744 = sub i64 %1726, %1739
  %1745 = getelementptr inbounds i32, ptr %11, i64 %1744
  %1746 = getelementptr inbounds i32, ptr %1745, i64 -7
  %1747 = load <8 x i32>, ptr %1746, align 4, !tbaa !5
  %1748 = shufflevector <8 x i32> %1747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1749 = getelementptr inbounds i32, ptr %1745, i64 -15
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !5
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = getelementptr inbounds i32, ptr %1745, i64 -23
  %1753 = load <8 x i32>, ptr %1752, align 4, !tbaa !5
  %1754 = shufflevector <8 x i32> %1753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1755 = getelementptr inbounds i32, ptr %1745, i64 -31
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !5
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = mul <8 x i32> %1748, %1740
  %1759 = mul <8 x i32> %1751, %1741
  %1760 = mul <8 x i32> %1754, %1742
  %1761 = mul <8 x i32> %1757, %1743
  %1762 = add nuw i64 %1739, 32
  %1763 = icmp eq i64 %1762, %1736
  br i1 %1763, label %1764, label %1738, !llvm.loop !259

1764:                                             ; preds = %1738
  %1765 = mul <8 x i32> %1759, %1758
  %1766 = mul <8 x i32> %1760, %1765
  %1767 = mul <8 x i32> %1761, %1766
  %1768 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1767)
  %1769 = icmp eq i64 %1732, %1736
  br i1 %1769, label %1782, label %1770

1770:                                             ; preds = %1723, %1764
  %1771 = phi i64 [ %1726, %1723 ], [ %1737, %1764 ]
  %1772 = phi i32 [ 1, %1723 ], [ %1768, %1764 ]
  br label %1773

1773:                                             ; preds = %1770, %1773
  %1774 = phi i64 [ %1779, %1773 ], [ %1771, %1770 ]
  %1775 = phi i32 [ %1778, %1773 ], [ %1772, %1770 ]
  %1776 = getelementptr inbounds i32, ptr %11, i64 %1774
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = mul nsw i32 %1777, %1775
  %1779 = add nsw i64 %1774, -1
  %1780 = trunc i64 %1774 to i32
  %1781 = icmp sgt i32 %1780, 0
  br i1 %1781, label %1773, label %1782, !llvm.loop !260

1782:                                             ; preds = %1773, %1764
  %1783 = phi i32 [ %1768, %1764 ], [ %1778, %1773 ]
  %1784 = and i64 %1733, 4294967295
  %1785 = getelementptr inbounds i32, ptr %6, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = mul nsw i32 %1786, %1783
  %1788 = add nsw i32 %1787, %1727
  %1789 = icmp sgt i64 %1725, 2
  %1790 = add nsw i64 %1726, -1
  %1791 = add i32 %1724, 1
  br i1 %1789, label %1723, label %1792, !llvm.loop !261

1792:                                             ; preds = %1782, %1720
  %1793 = phi i32 [ %1722, %1720 ], [ %1788, %1782 ]
  %1794 = icmp slt i32 %1793, %5
  br i1 %1794, label %1797, label %1795

1795:                                             ; preds = %1792
  %1796 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1797:                                             ; preds = %1792
  %1798 = sext i32 %1793 to i64
  %1799 = getelementptr inbounds i32, ptr %1244, i64 %1798
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = load i8, ptr %1246, align 1, !tbaa !11
  %1802 = sext i8 %1801 to i32
  %1803 = shl i32 %1800, 24
  %1804 = ashr exact i32 %1803, 24
  %1805 = icmp slt i32 %1804, %1802
  br i1 %1805, label %1806, label %1808

1806:                                             ; preds = %1797
  %1807 = trunc i32 %1800 to i8
  store i8 %1807, ptr %1246, align 1, !tbaa !11
  br label %1808

1808:                                             ; preds = %1806, %1797
  %1809 = add nuw nsw i32 %1721, 1
  br i1 %1570, label %1810, label %1860

1810:                                             ; preds = %1808
  %1811 = load i32, ptr %4, align 4, !tbaa !5
  %1812 = load i32, ptr %12, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1811, %1813
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1810
  %1816 = icmp eq i32 %1811, %1813
  br i1 %1816, label %1817, label %1853

1817:                                             ; preds = %1815
  store i32 0, ptr %4, align 4, !tbaa !5
  %1818 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1818, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1860, label %1819

1819:                                             ; preds = %1817, %1847
  %1820 = phi i64 [ %1851, %1847 ], [ 1, %1817 ]
  %1821 = getelementptr inbounds i32, ptr %4, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !5
  %1823 = getelementptr inbounds i32, ptr %12, i64 %1820
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1822, %1825
  br i1 %1826, label %1827, label %1845

1827:                                             ; preds = %1819
  br i1 %1814, label %1837, label %1828

1828:                                             ; preds = %1827
  %1829 = shl i64 %1820, 32
  %1830 = add i64 %1829, -4294967296
  %1831 = ashr exact i64 %1830, 32
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1833 = load i32, ptr %1832, align 4, !tbaa !5
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1820
  %1835 = load i32, ptr %1834, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1833
  store i32 %1836, ptr %1834, align 4, !tbaa !5
  br label %1855

1837:                                             ; preds = %1810, %1827
  %1838 = phi i32 [ %1822, %1827 ], [ %1811, %1810 ]
  %1839 = phi ptr [ %1821, %1827 ], [ %4, %1810 ]
  %1840 = phi i64 [ %1820, %1827 ], [ 0, %1810 ]
  %1841 = add nsw i32 %1838, 1
  store i32 %1841, ptr %1839, align 4, !tbaa !5
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1840
  br label %1855

1845:                                             ; preds = %1819
  %1846 = icmp eq i32 %1822, %1825
  br i1 %1846, label %1847, label %1853

1847:                                             ; preds = %1845
  store i32 0, ptr %1821, align 4, !tbaa !5
  %1848 = getelementptr inbounds i32, ptr %8, i64 %1820
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = getelementptr inbounds i32, ptr %6, i64 %1820
  store i32 %1849, ptr %1850, align 4, !tbaa !5
  %1851 = add nuw nsw i64 %1820, 1
  %1852 = icmp eq i64 %1851, %1573
  br i1 %1852, label %1860, label %1819, !llvm.loop !262

1853:                                             ; preds = %1815, %1845
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1855:                                             ; preds = %1828, %1837
  %1856 = phi ptr [ %1844, %1837 ], [ %1821, %1828 ]
  %1857 = phi i32 [ %1843, %1837 ], [ 1, %1828 ]
  %1858 = load i32, ptr %1856, align 4, !tbaa !5
  %1859 = add nsw i32 %1858, %1857
  store i32 %1859, ptr %1856, align 4, !tbaa !5
  br label %1860

1860:                                             ; preds = %1847, %1855, %1817, %1808
  %1861 = icmp eq i32 %1809, %5
  br i1 %1861, label %5513, label %1720, !llvm.loop !263

1862:                                             ; preds = %1257
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 299, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1864:                                             ; preds = %18
  %1865 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !9
  %1867 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1868 = load ptr, ptr %1867, align 8, !tbaa !9
  %1869 = load i32, ptr %1866, align 4, !tbaa !5
  %1870 = trunc i32 %1869 to i16
  store i16 %1870, ptr %1868, align 2, !tbaa !78
  %1871 = icmp eq i32 %13, 0
  br i1 %1871, label %5513, label %1872

1872:                                             ; preds = %1864
  switch i32 %1, label %2481 [
    i32 1, label %1873
    i32 0, label %2179
  ]

1873:                                             ; preds = %1872
  %1874 = getelementptr inbounds i32, ptr %3, i64 %19
  %1875 = load i32, ptr %1874, align 4, !tbaa !5
  %1876 = icmp eq i32 %1875, 0
  %1877 = icmp sgt i32 %5, 0
  br i1 %1876, label %1887, label %1878

1878:                                             ; preds = %1873
  br i1 %1877, label %1879, label %5513

1879:                                             ; preds = %1878
  %1880 = icmp sgt i32 %13, 1
  %1881 = icmp sgt i32 %13, 0
  %1882 = add i32 %13, -2
  %1883 = zext i32 %1882 to i64
  %1884 = zext i32 %13 to i64
  %1885 = add nuw i32 %5, 1
  %1886 = icmp eq i32 %13, 1
  br label %2036

1887:                                             ; preds = %1873
  br i1 %1877, label %1888, label %5513

1888:                                             ; preds = %1887
  %1889 = icmp sgt i32 %13, 1
  %1890 = icmp sgt i32 %13, 0
  %1891 = add i32 %13, -2
  %1892 = zext i32 %1891 to i64
  %1893 = zext i32 %13 to i64
  %1894 = add nuw i32 %5, 1
  %1895 = icmp eq i32 %13, 1
  br label %1896

1896:                                             ; preds = %1888, %2034
  %1897 = phi i16 [ %1870, %1888 ], [ %1985, %2034 ]
  %1898 = phi i32 [ 0, %1888 ], [ %1986, %2034 ]
  %1899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1889, label %1900, label %1969

1900:                                             ; preds = %1896, %1959
  %1901 = phi i32 [ %1968, %1959 ], [ 0, %1896 ]
  %1902 = phi i64 [ %1910, %1959 ], [ %1893, %1896 ]
  %1903 = phi i64 [ %1967, %1959 ], [ %1892, %1896 ]
  %1904 = phi i32 [ %1965, %1959 ], [ %1899, %1896 ]
  %1905 = sub i32 %1891, %1901
  %1906 = tail call i32 @llvm.smin.i32(i32 %1905, i32 0)
  %1907 = sub i32 %1905, %1906
  %1908 = zext i32 %1907 to i64
  %1909 = add nuw nsw i64 %1908, 1
  %1910 = add nsw i64 %1902, -1
  %1911 = icmp ult i32 %1907, 31
  br i1 %1911, label %1947, label %1912

1912:                                             ; preds = %1900
  %1913 = and i64 %1909, 8589934560
  %1914 = sub i64 %1903, %1913
  br label %1915

1915:                                             ; preds = %1915, %1912
  %1916 = phi i64 [ 0, %1912 ], [ %1939, %1915 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1935, %1915 ]
  %1918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1936, %1915 ]
  %1919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1937, %1915 ]
  %1920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1938, %1915 ]
  %1921 = sub i64 %1903, %1916
  %1922 = getelementptr inbounds i32, ptr %9, i64 %1921
  %1923 = getelementptr inbounds i32, ptr %1922, i64 -7
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = getelementptr inbounds i32, ptr %1922, i64 -15
  %1927 = load <8 x i32>, ptr %1926, align 4, !tbaa !5
  %1928 = shufflevector <8 x i32> %1927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1929 = getelementptr inbounds i32, ptr %1922, i64 -23
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !5
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = getelementptr inbounds i32, ptr %1922, i64 -31
  %1933 = load <8 x i32>, ptr %1932, align 4, !tbaa !5
  %1934 = shufflevector <8 x i32> %1933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1935 = mul <8 x i32> %1925, %1917
  %1936 = mul <8 x i32> %1928, %1918
  %1937 = mul <8 x i32> %1931, %1919
  %1938 = mul <8 x i32> %1934, %1920
  %1939 = add nuw i64 %1916, 32
  %1940 = icmp eq i64 %1939, %1913
  br i1 %1940, label %1941, label %1915, !llvm.loop !264

1941:                                             ; preds = %1915
  %1942 = mul <8 x i32> %1936, %1935
  %1943 = mul <8 x i32> %1937, %1942
  %1944 = mul <8 x i32> %1938, %1943
  %1945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1944)
  %1946 = icmp eq i64 %1909, %1913
  br i1 %1946, label %1959, label %1947

1947:                                             ; preds = %1900, %1941
  %1948 = phi i64 [ %1903, %1900 ], [ %1914, %1941 ]
  %1949 = phi i32 [ 1, %1900 ], [ %1945, %1941 ]
  br label %1950

1950:                                             ; preds = %1947, %1950
  %1951 = phi i64 [ %1956, %1950 ], [ %1948, %1947 ]
  %1952 = phi i32 [ %1955, %1950 ], [ %1949, %1947 ]
  %1953 = getelementptr inbounds i32, ptr %9, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !5
  %1955 = mul nsw i32 %1954, %1952
  %1956 = add nsw i64 %1951, -1
  %1957 = trunc i64 %1951 to i32
  %1958 = icmp sgt i32 %1957, 0
  br i1 %1958, label %1950, label %1959, !llvm.loop !265

1959:                                             ; preds = %1950, %1941
  %1960 = phi i32 [ %1945, %1941 ], [ %1955, %1950 ]
  %1961 = and i64 %1910, 4294967295
  %1962 = getelementptr inbounds i32, ptr %6, i64 %1961
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = mul nsw i32 %1963, %1960
  %1965 = add nsw i32 %1964, %1904
  %1966 = icmp sgt i64 %1902, 2
  %1967 = add nsw i64 %1903, -1
  %1968 = add i32 %1901, 1
  br i1 %1966, label %1900, label %1969, !llvm.loop !266

1969:                                             ; preds = %1959, %1896
  %1970 = phi i32 [ %1899, %1896 ], [ %1965, %1959 ]
  %1971 = sext i32 %1970 to i64
  %1972 = getelementptr inbounds double, ptr %2, i64 %1971
  %1973 = load double, ptr %1972, align 8, !tbaa !18
  %1974 = getelementptr inbounds i32, ptr %1866, i64 %1971
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = trunc i32 %1975 to i16
  %1977 = fcmp fast ueq double %1973, 0.000000e+00
  br i1 %1977, label %1984, label %1978

1978:                                             ; preds = %1969
  %1979 = sext i16 %1897 to i32
  %1980 = shl i32 %1975, 16
  %1981 = ashr exact i32 %1980, 16
  %1982 = icmp slt i32 %1981, %1979
  br i1 %1982, label %1983, label %1984

1983:                                             ; preds = %1978
  store i16 %1976, ptr %1868, align 2, !tbaa !78
  br label %1984

1984:                                             ; preds = %1978, %1983, %1969
  %1985 = phi i16 [ %1897, %1978 ], [ %1976, %1983 ], [ %1897, %1969 ]
  %1986 = add nuw nsw i32 %1898, 1
  br i1 %1890, label %1987, label %2034

1987:                                             ; preds = %1984
  %1988 = load i32, ptr %4, align 4, !tbaa !5
  %1989 = load i32, ptr %12, align 4, !tbaa !5
  %1990 = add nsw i32 %1989, -1
  %1991 = icmp slt i32 %1988, %1990
  br i1 %1991, label %2011, label %1992

1992:                                             ; preds = %1987
  %1993 = icmp eq i32 %1988, %1990
  br i1 %1993, label %1994, label %2027

1994:                                             ; preds = %1992
  store i32 0, ptr %4, align 4, !tbaa !5
  %1995 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1995, ptr %6, align 4, !tbaa !5
  br i1 %1895, label %2034, label %1996

1996:                                             ; preds = %1994, %2021
  %1997 = phi i64 [ %2025, %2021 ], [ 1, %1994 ]
  %1998 = getelementptr inbounds i32, ptr %4, i64 %1997
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = getelementptr inbounds i32, ptr %12, i64 %1997
  %2001 = load i32, ptr %2000, align 4, !tbaa !5
  %2002 = add nsw i32 %2001, -1
  %2003 = icmp slt i32 %1999, %2002
  br i1 %2003, label %2004, label %2019

2004:                                             ; preds = %1996
  br i1 %1991, label %2011, label %2005

2005:                                             ; preds = %2004
  %2006 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2007 = load i32, ptr %2006, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %6, i64 %1997
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = add nsw i32 %2009, %2007
  store i32 %2010, ptr %2008, align 4, !tbaa !5
  br label %2029

2011:                                             ; preds = %1987, %2004
  %2012 = phi i32 [ %1999, %2004 ], [ %1988, %1987 ]
  %2013 = phi ptr [ %1998, %2004 ], [ %4, %1987 ]
  %2014 = phi i64 [ %1997, %2004 ], [ 0, %1987 ]
  %2015 = add nsw i32 %2012, 1
  store i32 %2015, ptr %2013, align 4, !tbaa !5
  %2016 = getelementptr inbounds i32, ptr %7, i64 %2014
  %2017 = load i32, ptr %2016, align 4, !tbaa !5
  %2018 = getelementptr inbounds i32, ptr %6, i64 %2014
  br label %2029

2019:                                             ; preds = %1996
  %2020 = icmp eq i32 %1999, %2002
  br i1 %2020, label %2021, label %2027

2021:                                             ; preds = %2019
  store i32 0, ptr %1998, align 4, !tbaa !5
  %2022 = getelementptr inbounds i32, ptr %8, i64 %1997
  %2023 = load i32, ptr %2022, align 4, !tbaa !5
  %2024 = getelementptr inbounds i32, ptr %6, i64 %1997
  store i32 %2023, ptr %2024, align 4, !tbaa !5
  %2025 = add nuw nsw i64 %1997, 1
  %2026 = icmp eq i64 %2025, %1893
  br i1 %2026, label %2034, label %1996, !llvm.loop !267

2027:                                             ; preds = %1992, %2019
  %2028 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2029:                                             ; preds = %2005, %2011
  %2030 = phi ptr [ %2018, %2011 ], [ %1998, %2005 ]
  %2031 = phi i32 [ %2017, %2011 ], [ 1, %2005 ]
  %2032 = load i32, ptr %2030, align 4, !tbaa !5
  %2033 = add nsw i32 %2032, %2031
  store i32 %2033, ptr %2030, align 4, !tbaa !5
  br label %2034

2034:                                             ; preds = %2021, %2029, %1994, %1984
  %2035 = icmp eq i32 %1986, %5
  br i1 %2035, label %5513, label %1896, !llvm.loop !268

2036:                                             ; preds = %1879, %2177
  %2037 = phi i16 [ %1870, %1879 ], [ %2125, %2177 ]
  %2038 = phi i32 [ 0, %1879 ], [ %2126, %2177 ]
  %2039 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1880, label %2040, label %2109

2040:                                             ; preds = %2036, %2099
  %2041 = phi i32 [ %2108, %2099 ], [ 0, %2036 ]
  %2042 = phi i64 [ %2050, %2099 ], [ %1884, %2036 ]
  %2043 = phi i64 [ %2107, %2099 ], [ %1883, %2036 ]
  %2044 = phi i32 [ %2105, %2099 ], [ %2039, %2036 ]
  %2045 = sub i32 %1882, %2041
  %2046 = tail call i32 @llvm.smin.i32(i32 %2045, i32 0)
  %2047 = sub i32 %2045, %2046
  %2048 = zext i32 %2047 to i64
  %2049 = add nuw nsw i64 %2048, 1
  %2050 = add nsw i64 %2042, -1
  %2051 = icmp ult i32 %2047, 31
  br i1 %2051, label %2087, label %2052

2052:                                             ; preds = %2040
  %2053 = and i64 %2049, 8589934560
  %2054 = sub i64 %2043, %2053
  br label %2055

2055:                                             ; preds = %2055, %2052
  %2056 = phi i64 [ 0, %2052 ], [ %2079, %2055 ]
  %2057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2075, %2055 ]
  %2058 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2076, %2055 ]
  %2059 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2077, %2055 ]
  %2060 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2078, %2055 ]
  %2061 = sub i64 %2043, %2056
  %2062 = getelementptr inbounds i32, ptr %11, i64 %2061
  %2063 = getelementptr inbounds i32, ptr %2062, i64 -7
  %2064 = load <8 x i32>, ptr %2063, align 4, !tbaa !5
  %2065 = shufflevector <8 x i32> %2064, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2066 = getelementptr inbounds i32, ptr %2062, i64 -15
  %2067 = load <8 x i32>, ptr %2066, align 4, !tbaa !5
  %2068 = shufflevector <8 x i32> %2067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2069 = getelementptr inbounds i32, ptr %2062, i64 -23
  %2070 = load <8 x i32>, ptr %2069, align 4, !tbaa !5
  %2071 = shufflevector <8 x i32> %2070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2072 = getelementptr inbounds i32, ptr %2062, i64 -31
  %2073 = load <8 x i32>, ptr %2072, align 4, !tbaa !5
  %2074 = shufflevector <8 x i32> %2073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2075 = mul <8 x i32> %2065, %2057
  %2076 = mul <8 x i32> %2068, %2058
  %2077 = mul <8 x i32> %2071, %2059
  %2078 = mul <8 x i32> %2074, %2060
  %2079 = add nuw i64 %2056, 32
  %2080 = icmp eq i64 %2079, %2053
  br i1 %2080, label %2081, label %2055, !llvm.loop !269

2081:                                             ; preds = %2055
  %2082 = mul <8 x i32> %2076, %2075
  %2083 = mul <8 x i32> %2077, %2082
  %2084 = mul <8 x i32> %2078, %2083
  %2085 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2084)
  %2086 = icmp eq i64 %2049, %2053
  br i1 %2086, label %2099, label %2087

2087:                                             ; preds = %2040, %2081
  %2088 = phi i64 [ %2043, %2040 ], [ %2054, %2081 ]
  %2089 = phi i32 [ 1, %2040 ], [ %2085, %2081 ]
  br label %2090

2090:                                             ; preds = %2087, %2090
  %2091 = phi i64 [ %2096, %2090 ], [ %2088, %2087 ]
  %2092 = phi i32 [ %2095, %2090 ], [ %2089, %2087 ]
  %2093 = getelementptr inbounds i32, ptr %11, i64 %2091
  %2094 = load i32, ptr %2093, align 4, !tbaa !5
  %2095 = mul nsw i32 %2094, %2092
  %2096 = add nsw i64 %2091, -1
  %2097 = trunc i64 %2091 to i32
  %2098 = icmp sgt i32 %2097, 0
  br i1 %2098, label %2090, label %2099, !llvm.loop !270

2099:                                             ; preds = %2090, %2081
  %2100 = phi i32 [ %2085, %2081 ], [ %2095, %2090 ]
  %2101 = and i64 %2050, 4294967295
  %2102 = getelementptr inbounds i32, ptr %6, i64 %2101
  %2103 = load i32, ptr %2102, align 4, !tbaa !5
  %2104 = mul nsw i32 %2103, %2100
  %2105 = add nsw i32 %2104, %2044
  %2106 = icmp sgt i64 %2042, 2
  %2107 = add nsw i64 %2043, -1
  %2108 = add i32 %2041, 1
  br i1 %2106, label %2040, label %2109, !llvm.loop !271

2109:                                             ; preds = %2099, %2036
  %2110 = phi i32 [ %2039, %2036 ], [ %2105, %2099 ]
  %2111 = icmp slt i32 %2110, %5
  br i1 %2111, label %2114, label %2112

2112:                                             ; preds = %2109
  %2113 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2114:                                             ; preds = %2109
  %2115 = sext i32 %2110 to i64
  %2116 = getelementptr inbounds i32, ptr %1866, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !5
  %2118 = sext i16 %2037 to i32
  %2119 = shl i32 %2117, 16
  %2120 = ashr exact i32 %2119, 16
  %2121 = icmp slt i32 %2120, %2118
  br i1 %2121, label %2122, label %2124

2122:                                             ; preds = %2114
  %2123 = trunc i32 %2117 to i16
  store i16 %2123, ptr %1868, align 2, !tbaa !78
  br label %2124

2124:                                             ; preds = %2114, %2122
  %2125 = phi i16 [ %2037, %2114 ], [ %2123, %2122 ]
  %2126 = add nuw nsw i32 %2038, 1
  br i1 %1881, label %2127, label %2177

2127:                                             ; preds = %2124
  %2128 = load i32, ptr %4, align 4, !tbaa !5
  %2129 = load i32, ptr %12, align 4, !tbaa !5
  %2130 = add nsw i32 %2129, -1
  %2131 = icmp slt i32 %2128, %2130
  br i1 %2131, label %2154, label %2132

2132:                                             ; preds = %2127
  %2133 = icmp eq i32 %2128, %2130
  br i1 %2133, label %2134, label %2170

2134:                                             ; preds = %2132
  store i32 0, ptr %4, align 4, !tbaa !5
  %2135 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2135, ptr %6, align 4, !tbaa !5
  br i1 %1886, label %2177, label %2136

2136:                                             ; preds = %2134, %2164
  %2137 = phi i64 [ %2168, %2164 ], [ 1, %2134 ]
  %2138 = getelementptr inbounds i32, ptr %4, i64 %2137
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = getelementptr inbounds i32, ptr %12, i64 %2137
  %2141 = load i32, ptr %2140, align 4, !tbaa !5
  %2142 = add nsw i32 %2141, -1
  %2143 = icmp slt i32 %2139, %2142
  br i1 %2143, label %2144, label %2162

2144:                                             ; preds = %2136
  br i1 %2131, label %2154, label %2145

2145:                                             ; preds = %2144
  %2146 = shl i64 %2137, 32
  %2147 = add i64 %2146, -4294967296
  %2148 = ashr exact i64 %2147, 32
  %2149 = getelementptr inbounds i32, ptr %7, i64 %2148
  %2150 = load i32, ptr %2149, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %6, i64 %2137
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = add nsw i32 %2152, %2150
  store i32 %2153, ptr %2151, align 4, !tbaa !5
  br label %2172

2154:                                             ; preds = %2127, %2144
  %2155 = phi i32 [ %2139, %2144 ], [ %2128, %2127 ]
  %2156 = phi ptr [ %2138, %2144 ], [ %4, %2127 ]
  %2157 = phi i64 [ %2137, %2144 ], [ 0, %2127 ]
  %2158 = add nsw i32 %2155, 1
  store i32 %2158, ptr %2156, align 4, !tbaa !5
  %2159 = getelementptr inbounds i32, ptr %7, i64 %2157
  %2160 = load i32, ptr %2159, align 4, !tbaa !5
  %2161 = getelementptr inbounds i32, ptr %6, i64 %2157
  br label %2172

2162:                                             ; preds = %2136
  %2163 = icmp eq i32 %2139, %2142
  br i1 %2163, label %2164, label %2170

2164:                                             ; preds = %2162
  store i32 0, ptr %2138, align 4, !tbaa !5
  %2165 = getelementptr inbounds i32, ptr %8, i64 %2137
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %6, i64 %2137
  store i32 %2166, ptr %2167, align 4, !tbaa !5
  %2168 = add nuw nsw i64 %2137, 1
  %2169 = icmp eq i64 %2168, %1884
  br i1 %2169, label %2177, label %2136, !llvm.loop !272

2170:                                             ; preds = %2132, %2162
  %2171 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2172:                                             ; preds = %2145, %2154
  %2173 = phi ptr [ %2161, %2154 ], [ %2138, %2145 ]
  %2174 = phi i32 [ %2160, %2154 ], [ 1, %2145 ]
  %2175 = load i32, ptr %2173, align 4, !tbaa !5
  %2176 = add nsw i32 %2175, %2174
  store i32 %2176, ptr %2173, align 4, !tbaa !5
  br label %2177

2177:                                             ; preds = %2164, %2172, %2134, %2124
  %2178 = icmp eq i32 %2126, %5
  br i1 %2178, label %5513, label %2036, !llvm.loop !273

2179:                                             ; preds = %1872
  %2180 = getelementptr inbounds i32, ptr %3, i64 %19
  %2181 = load i32, ptr %2180, align 4, !tbaa !5
  %2182 = icmp eq i32 %2181, 0
  %2183 = icmp sgt i32 %5, 0
  br i1 %2182, label %2193, label %2184

2184:                                             ; preds = %2179
  br i1 %2183, label %2185, label %5513

2185:                                             ; preds = %2184
  %2186 = icmp sgt i32 %13, 1
  %2187 = icmp sgt i32 %13, 0
  %2188 = add i32 %13, -2
  %2189 = zext i32 %2188 to i64
  %2190 = zext i32 %13 to i64
  %2191 = add nuw i32 %5, 1
  %2192 = icmp eq i32 %13, 1
  br label %2338

2193:                                             ; preds = %2179
  br i1 %2183, label %2194, label %5513

2194:                                             ; preds = %2193
  %2195 = icmp sgt i32 %13, 1
  %2196 = icmp sgt i32 %13, 0
  %2197 = add i32 %13, -2
  %2198 = zext i32 %2197 to i64
  %2199 = zext i32 %13 to i64
  %2200 = add nuw i32 %5, 1
  %2201 = icmp eq i32 %13, 1
  br label %2202

2202:                                             ; preds = %2194, %2336
  %2203 = phi i16 [ %1870, %2194 ], [ %2287, %2336 ]
  %2204 = phi i32 [ 0, %2194 ], [ %2288, %2336 ]
  %2205 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2195, label %2206, label %2275

2206:                                             ; preds = %2202, %2265
  %2207 = phi i32 [ %2274, %2265 ], [ 0, %2202 ]
  %2208 = phi i64 [ %2216, %2265 ], [ %2199, %2202 ]
  %2209 = phi i64 [ %2273, %2265 ], [ %2198, %2202 ]
  %2210 = phi i32 [ %2271, %2265 ], [ %2205, %2202 ]
  %2211 = sub i32 %2197, %2207
  %2212 = tail call i32 @llvm.smin.i32(i32 %2211, i32 0)
  %2213 = sub i32 %2211, %2212
  %2214 = zext i32 %2213 to i64
  %2215 = add nuw nsw i64 %2214, 1
  %2216 = add nsw i64 %2208, -1
  %2217 = icmp ult i32 %2213, 31
  br i1 %2217, label %2253, label %2218

2218:                                             ; preds = %2206
  %2219 = and i64 %2215, 8589934560
  %2220 = sub i64 %2209, %2219
  br label %2221

2221:                                             ; preds = %2221, %2218
  %2222 = phi i64 [ 0, %2218 ], [ %2245, %2221 ]
  %2223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2241, %2221 ]
  %2224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2242, %2221 ]
  %2225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2243, %2221 ]
  %2226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2244, %2221 ]
  %2227 = sub i64 %2209, %2222
  %2228 = getelementptr inbounds i32, ptr %9, i64 %2227
  %2229 = getelementptr inbounds i32, ptr %2228, i64 -7
  %2230 = load <8 x i32>, ptr %2229, align 4, !tbaa !5
  %2231 = shufflevector <8 x i32> %2230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2232 = getelementptr inbounds i32, ptr %2228, i64 -15
  %2233 = load <8 x i32>, ptr %2232, align 4, !tbaa !5
  %2234 = shufflevector <8 x i32> %2233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2235 = getelementptr inbounds i32, ptr %2228, i64 -23
  %2236 = load <8 x i32>, ptr %2235, align 4, !tbaa !5
  %2237 = shufflevector <8 x i32> %2236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2238 = getelementptr inbounds i32, ptr %2228, i64 -31
  %2239 = load <8 x i32>, ptr %2238, align 4, !tbaa !5
  %2240 = shufflevector <8 x i32> %2239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2241 = mul <8 x i32> %2231, %2223
  %2242 = mul <8 x i32> %2234, %2224
  %2243 = mul <8 x i32> %2237, %2225
  %2244 = mul <8 x i32> %2240, %2226
  %2245 = add nuw i64 %2222, 32
  %2246 = icmp eq i64 %2245, %2219
  br i1 %2246, label %2247, label %2221, !llvm.loop !274

2247:                                             ; preds = %2221
  %2248 = mul <8 x i32> %2242, %2241
  %2249 = mul <8 x i32> %2243, %2248
  %2250 = mul <8 x i32> %2244, %2249
  %2251 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2250)
  %2252 = icmp eq i64 %2215, %2219
  br i1 %2252, label %2265, label %2253

2253:                                             ; preds = %2206, %2247
  %2254 = phi i64 [ %2209, %2206 ], [ %2220, %2247 ]
  %2255 = phi i32 [ 1, %2206 ], [ %2251, %2247 ]
  br label %2256

2256:                                             ; preds = %2253, %2256
  %2257 = phi i64 [ %2262, %2256 ], [ %2254, %2253 ]
  %2258 = phi i32 [ %2261, %2256 ], [ %2255, %2253 ]
  %2259 = getelementptr inbounds i32, ptr %9, i64 %2257
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = mul nsw i32 %2260, %2258
  %2262 = add nsw i64 %2257, -1
  %2263 = trunc i64 %2257 to i32
  %2264 = icmp sgt i32 %2263, 0
  br i1 %2264, label %2256, label %2265, !llvm.loop !275

2265:                                             ; preds = %2256, %2247
  %2266 = phi i32 [ %2251, %2247 ], [ %2261, %2256 ]
  %2267 = and i64 %2216, 4294967295
  %2268 = getelementptr inbounds i32, ptr %6, i64 %2267
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = mul nsw i32 %2269, %2266
  %2271 = add nsw i32 %2270, %2210
  %2272 = icmp sgt i64 %2208, 2
  %2273 = add nsw i64 %2209, -1
  %2274 = add i32 %2207, 1
  br i1 %2272, label %2206, label %2275, !llvm.loop !276

2275:                                             ; preds = %2265, %2202
  %2276 = phi i32 [ %2205, %2202 ], [ %2271, %2265 ]
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds i32, ptr %1866, i64 %2277
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = sext i16 %2203 to i32
  %2281 = shl i32 %2279, 16
  %2282 = ashr exact i32 %2281, 16
  %2283 = icmp slt i32 %2282, %2280
  br i1 %2283, label %2284, label %2286

2284:                                             ; preds = %2275
  %2285 = trunc i32 %2279 to i16
  store i16 %2285, ptr %1868, align 2, !tbaa !78
  br label %2286

2286:                                             ; preds = %2284, %2275
  %2287 = phi i16 [ %2285, %2284 ], [ %2203, %2275 ]
  %2288 = add nuw nsw i32 %2204, 1
  br i1 %2196, label %2289, label %2336

2289:                                             ; preds = %2286
  %2290 = load i32, ptr %4, align 4, !tbaa !5
  %2291 = load i32, ptr %12, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, -1
  %2293 = icmp slt i32 %2290, %2292
  br i1 %2293, label %2313, label %2294

2294:                                             ; preds = %2289
  %2295 = icmp eq i32 %2290, %2292
  br i1 %2295, label %2296, label %2329

2296:                                             ; preds = %2294
  store i32 0, ptr %4, align 4, !tbaa !5
  %2297 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2297, ptr %6, align 4, !tbaa !5
  br i1 %2201, label %2336, label %2298

2298:                                             ; preds = %2296, %2323
  %2299 = phi i64 [ %2327, %2323 ], [ 1, %2296 ]
  %2300 = getelementptr inbounds i32, ptr %4, i64 %2299
  %2301 = load i32, ptr %2300, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %12, i64 %2299
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = add nsw i32 %2303, -1
  %2305 = icmp slt i32 %2301, %2304
  br i1 %2305, label %2306, label %2321

2306:                                             ; preds = %2298
  br i1 %2293, label %2313, label %2307

2307:                                             ; preds = %2306
  %2308 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2309 = load i32, ptr %2308, align 4, !tbaa !5
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2299
  %2311 = load i32, ptr %2310, align 4, !tbaa !5
  %2312 = add nsw i32 %2311, %2309
  store i32 %2312, ptr %2310, align 4, !tbaa !5
  br label %2331

2313:                                             ; preds = %2289, %2306
  %2314 = phi i32 [ %2301, %2306 ], [ %2290, %2289 ]
  %2315 = phi ptr [ %2300, %2306 ], [ %4, %2289 ]
  %2316 = phi i64 [ %2299, %2306 ], [ 0, %2289 ]
  %2317 = add nsw i32 %2314, 1
  store i32 %2317, ptr %2315, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %7, i64 %2316
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = getelementptr inbounds i32, ptr %6, i64 %2316
  br label %2331

2321:                                             ; preds = %2298
  %2322 = icmp eq i32 %2301, %2304
  br i1 %2322, label %2323, label %2329

2323:                                             ; preds = %2321
  store i32 0, ptr %2300, align 4, !tbaa !5
  %2324 = getelementptr inbounds i32, ptr %8, i64 %2299
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2299
  store i32 %2325, ptr %2326, align 4, !tbaa !5
  %2327 = add nuw nsw i64 %2299, 1
  %2328 = icmp eq i64 %2327, %2199
  br i1 %2328, label %2336, label %2298, !llvm.loop !277

2329:                                             ; preds = %2294, %2321
  %2330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2331:                                             ; preds = %2307, %2313
  %2332 = phi ptr [ %2320, %2313 ], [ %2300, %2307 ]
  %2333 = phi i32 [ %2319, %2313 ], [ 1, %2307 ]
  %2334 = load i32, ptr %2332, align 4, !tbaa !5
  %2335 = add nsw i32 %2334, %2333
  store i32 %2335, ptr %2332, align 4, !tbaa !5
  br label %2336

2336:                                             ; preds = %2323, %2331, %2296, %2286
  %2337 = icmp eq i32 %2288, %5
  br i1 %2337, label %5513, label %2202, !llvm.loop !278

2338:                                             ; preds = %2185, %2479
  %2339 = phi i16 [ %1870, %2185 ], [ %2427, %2479 ]
  %2340 = phi i32 [ 0, %2185 ], [ %2428, %2479 ]
  %2341 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2186, label %2342, label %2411

2342:                                             ; preds = %2338, %2401
  %2343 = phi i32 [ %2410, %2401 ], [ 0, %2338 ]
  %2344 = phi i64 [ %2352, %2401 ], [ %2190, %2338 ]
  %2345 = phi i64 [ %2409, %2401 ], [ %2189, %2338 ]
  %2346 = phi i32 [ %2407, %2401 ], [ %2341, %2338 ]
  %2347 = sub i32 %2188, %2343
  %2348 = tail call i32 @llvm.smin.i32(i32 %2347, i32 0)
  %2349 = sub i32 %2347, %2348
  %2350 = zext i32 %2349 to i64
  %2351 = add nuw nsw i64 %2350, 1
  %2352 = add nsw i64 %2344, -1
  %2353 = icmp ult i32 %2349, 31
  br i1 %2353, label %2389, label %2354

2354:                                             ; preds = %2342
  %2355 = and i64 %2351, 8589934560
  %2356 = sub i64 %2345, %2355
  br label %2357

2357:                                             ; preds = %2357, %2354
  %2358 = phi i64 [ 0, %2354 ], [ %2381, %2357 ]
  %2359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2377, %2357 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2378, %2357 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2379, %2357 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2380, %2357 ]
  %2363 = sub i64 %2345, %2358
  %2364 = getelementptr inbounds i32, ptr %11, i64 %2363
  %2365 = getelementptr inbounds i32, ptr %2364, i64 -7
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !5
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2364, i64 -15
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !5
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = getelementptr inbounds i32, ptr %2364, i64 -23
  %2372 = load <8 x i32>, ptr %2371, align 4, !tbaa !5
  %2373 = shufflevector <8 x i32> %2372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2374 = getelementptr inbounds i32, ptr %2364, i64 -31
  %2375 = load <8 x i32>, ptr %2374, align 4, !tbaa !5
  %2376 = shufflevector <8 x i32> %2375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2377 = mul <8 x i32> %2367, %2359
  %2378 = mul <8 x i32> %2370, %2360
  %2379 = mul <8 x i32> %2373, %2361
  %2380 = mul <8 x i32> %2376, %2362
  %2381 = add nuw i64 %2358, 32
  %2382 = icmp eq i64 %2381, %2355
  br i1 %2382, label %2383, label %2357, !llvm.loop !279

2383:                                             ; preds = %2357
  %2384 = mul <8 x i32> %2378, %2377
  %2385 = mul <8 x i32> %2379, %2384
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2386)
  %2388 = icmp eq i64 %2351, %2355
  br i1 %2388, label %2401, label %2389

2389:                                             ; preds = %2342, %2383
  %2390 = phi i64 [ %2345, %2342 ], [ %2356, %2383 ]
  %2391 = phi i32 [ 1, %2342 ], [ %2387, %2383 ]
  br label %2392

2392:                                             ; preds = %2389, %2392
  %2393 = phi i64 [ %2398, %2392 ], [ %2390, %2389 ]
  %2394 = phi i32 [ %2397, %2392 ], [ %2391, %2389 ]
  %2395 = getelementptr inbounds i32, ptr %11, i64 %2393
  %2396 = load i32, ptr %2395, align 4, !tbaa !5
  %2397 = mul nsw i32 %2396, %2394
  %2398 = add nsw i64 %2393, -1
  %2399 = trunc i64 %2393 to i32
  %2400 = icmp sgt i32 %2399, 0
  br i1 %2400, label %2392, label %2401, !llvm.loop !280

2401:                                             ; preds = %2392, %2383
  %2402 = phi i32 [ %2387, %2383 ], [ %2397, %2392 ]
  %2403 = and i64 %2352, 4294967295
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2403
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = mul nsw i32 %2405, %2402
  %2407 = add nsw i32 %2406, %2346
  %2408 = icmp sgt i64 %2344, 2
  %2409 = add nsw i64 %2345, -1
  %2410 = add i32 %2343, 1
  br i1 %2408, label %2342, label %2411, !llvm.loop !281

2411:                                             ; preds = %2401, %2338
  %2412 = phi i32 [ %2341, %2338 ], [ %2407, %2401 ]
  %2413 = icmp slt i32 %2412, %5
  br i1 %2413, label %2416, label %2414

2414:                                             ; preds = %2411
  %2415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2416:                                             ; preds = %2411
  %2417 = sext i32 %2412 to i64
  %2418 = getelementptr inbounds i32, ptr %1866, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = sext i16 %2339 to i32
  %2421 = shl i32 %2419, 16
  %2422 = ashr exact i32 %2421, 16
  %2423 = icmp slt i32 %2422, %2420
  br i1 %2423, label %2424, label %2426

2424:                                             ; preds = %2416
  %2425 = trunc i32 %2419 to i16
  store i16 %2425, ptr %1868, align 2, !tbaa !78
  br label %2426

2426:                                             ; preds = %2424, %2416
  %2427 = phi i16 [ %2425, %2424 ], [ %2339, %2416 ]
  %2428 = add nuw nsw i32 %2340, 1
  br i1 %2187, label %2429, label %2479

2429:                                             ; preds = %2426
  %2430 = load i32, ptr %4, align 4, !tbaa !5
  %2431 = load i32, ptr %12, align 4, !tbaa !5
  %2432 = add nsw i32 %2431, -1
  %2433 = icmp slt i32 %2430, %2432
  br i1 %2433, label %2456, label %2434

2434:                                             ; preds = %2429
  %2435 = icmp eq i32 %2430, %2432
  br i1 %2435, label %2436, label %2472

2436:                                             ; preds = %2434
  store i32 0, ptr %4, align 4, !tbaa !5
  %2437 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2437, ptr %6, align 4, !tbaa !5
  br i1 %2192, label %2479, label %2438

2438:                                             ; preds = %2436, %2466
  %2439 = phi i64 [ %2470, %2466 ], [ 1, %2436 ]
  %2440 = getelementptr inbounds i32, ptr %4, i64 %2439
  %2441 = load i32, ptr %2440, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %12, i64 %2439
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = add nsw i32 %2443, -1
  %2445 = icmp slt i32 %2441, %2444
  br i1 %2445, label %2446, label %2464

2446:                                             ; preds = %2438
  br i1 %2433, label %2456, label %2447

2447:                                             ; preds = %2446
  %2448 = shl i64 %2439, 32
  %2449 = add i64 %2448, -4294967296
  %2450 = ashr exact i64 %2449, 32
  %2451 = getelementptr inbounds i32, ptr %7, i64 %2450
  %2452 = load i32, ptr %2451, align 4, !tbaa !5
  %2453 = getelementptr inbounds i32, ptr %6, i64 %2439
  %2454 = load i32, ptr %2453, align 4, !tbaa !5
  %2455 = add nsw i32 %2454, %2452
  store i32 %2455, ptr %2453, align 4, !tbaa !5
  br label %2474

2456:                                             ; preds = %2429, %2446
  %2457 = phi i32 [ %2441, %2446 ], [ %2430, %2429 ]
  %2458 = phi ptr [ %2440, %2446 ], [ %4, %2429 ]
  %2459 = phi i64 [ %2439, %2446 ], [ 0, %2429 ]
  %2460 = add nsw i32 %2457, 1
  store i32 %2460, ptr %2458, align 4, !tbaa !5
  %2461 = getelementptr inbounds i32, ptr %7, i64 %2459
  %2462 = load i32, ptr %2461, align 4, !tbaa !5
  %2463 = getelementptr inbounds i32, ptr %6, i64 %2459
  br label %2474

2464:                                             ; preds = %2438
  %2465 = icmp eq i32 %2441, %2444
  br i1 %2465, label %2466, label %2472

2466:                                             ; preds = %2464
  store i32 0, ptr %2440, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %8, i64 %2439
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = getelementptr inbounds i32, ptr %6, i64 %2439
  store i32 %2468, ptr %2469, align 4, !tbaa !5
  %2470 = add nuw nsw i64 %2439, 1
  %2471 = icmp eq i64 %2470, %2190
  br i1 %2471, label %2479, label %2438, !llvm.loop !282

2472:                                             ; preds = %2434, %2464
  %2473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2474:                                             ; preds = %2447, %2456
  %2475 = phi ptr [ %2463, %2456 ], [ %2440, %2447 ]
  %2476 = phi i32 [ %2462, %2456 ], [ 1, %2447 ]
  %2477 = load i32, ptr %2475, align 4, !tbaa !5
  %2478 = add nsw i32 %2477, %2476
  store i32 %2478, ptr %2475, align 4, !tbaa !5
  br label %2479

2479:                                             ; preds = %2466, %2474, %2436, %2426
  %2480 = icmp eq i32 %2428, %5
  br i1 %2480, label %5513, label %2338, !llvm.loop !283

2481:                                             ; preds = %1872
  %2482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 304, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

2483:                                             ; preds = %18
  %2484 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2485 = load ptr, ptr %2484, align 8, !tbaa !9
  %2486 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2487 = load ptr, ptr %2486, align 8, !tbaa !9
  %2488 = load i32, ptr %2485, align 4, !tbaa !5
  store i32 %2488, ptr %2487, align 4, !tbaa !5
  %2489 = icmp eq i32 %13, 0
  br i1 %2489, label %2490, label %2494

2490:                                             ; preds = %2483
  %2491 = load i32, ptr %2485, align 4, !tbaa !5
  %2492 = icmp sgt i32 %2488, %2491
  br i1 %2492, label %2493, label %5513

2493:                                             ; preds = %2490
  store i32 %2491, ptr %2487, align 4, !tbaa !5
  br label %5513

2494:                                             ; preds = %2483
  switch i32 %1, label %3083 [
    i32 1, label %2495
    i32 0, label %2791
  ]

2495:                                             ; preds = %2494
  %2496 = getelementptr inbounds i32, ptr %3, i64 %19
  %2497 = load i32, ptr %2496, align 4, !tbaa !5
  %2498 = icmp eq i32 %2497, 0
  %2499 = icmp sgt i32 %5, 0
  br i1 %2498, label %2509, label %2500

2500:                                             ; preds = %2495
  br i1 %2499, label %2501, label %5513

2501:                                             ; preds = %2500
  %2502 = icmp sgt i32 %13, 1
  %2503 = icmp sgt i32 %13, 0
  %2504 = add i32 %13, -2
  %2505 = zext i32 %2504 to i64
  %2506 = zext i32 %13 to i64
  %2507 = add nuw i32 %5, 1
  %2508 = icmp eq i32 %13, 1
  br label %2653

2509:                                             ; preds = %2495
  br i1 %2499, label %2510, label %5513

2510:                                             ; preds = %2509
  %2511 = icmp sgt i32 %13, 1
  %2512 = icmp sgt i32 %13, 0
  %2513 = add i32 %13, -2
  %2514 = zext i32 %2513 to i64
  %2515 = zext i32 %13 to i64
  %2516 = add nuw i32 %5, 1
  %2517 = icmp eq i32 %13, 1
  br label %2518

2518:                                             ; preds = %2510, %2651
  %2519 = phi i32 [ 0, %2510 ], [ %2603, %2651 ]
  %2520 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2511, label %2521, label %2590

2521:                                             ; preds = %2518, %2580
  %2522 = phi i32 [ %2589, %2580 ], [ 0, %2518 ]
  %2523 = phi i64 [ %2531, %2580 ], [ %2515, %2518 ]
  %2524 = phi i64 [ %2588, %2580 ], [ %2514, %2518 ]
  %2525 = phi i32 [ %2586, %2580 ], [ %2520, %2518 ]
  %2526 = sub i32 %2513, %2522
  %2527 = tail call i32 @llvm.smin.i32(i32 %2526, i32 0)
  %2528 = sub i32 %2526, %2527
  %2529 = zext i32 %2528 to i64
  %2530 = add nuw nsw i64 %2529, 1
  %2531 = add nsw i64 %2523, -1
  %2532 = icmp ult i32 %2528, 31
  br i1 %2532, label %2568, label %2533

2533:                                             ; preds = %2521
  %2534 = and i64 %2530, 8589934560
  %2535 = sub i64 %2524, %2534
  br label %2536

2536:                                             ; preds = %2536, %2533
  %2537 = phi i64 [ 0, %2533 ], [ %2560, %2536 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2556, %2536 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2557, %2536 ]
  %2540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2558, %2536 ]
  %2541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2559, %2536 ]
  %2542 = sub i64 %2524, %2537
  %2543 = getelementptr inbounds i32, ptr %9, i64 %2542
  %2544 = getelementptr inbounds i32, ptr %2543, i64 -7
  %2545 = load <8 x i32>, ptr %2544, align 4, !tbaa !5
  %2546 = shufflevector <8 x i32> %2545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2547 = getelementptr inbounds i32, ptr %2543, i64 -15
  %2548 = load <8 x i32>, ptr %2547, align 4, !tbaa !5
  %2549 = shufflevector <8 x i32> %2548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2550 = getelementptr inbounds i32, ptr %2543, i64 -23
  %2551 = load <8 x i32>, ptr %2550, align 4, !tbaa !5
  %2552 = shufflevector <8 x i32> %2551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2553 = getelementptr inbounds i32, ptr %2543, i64 -31
  %2554 = load <8 x i32>, ptr %2553, align 4, !tbaa !5
  %2555 = shufflevector <8 x i32> %2554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2556 = mul <8 x i32> %2546, %2538
  %2557 = mul <8 x i32> %2549, %2539
  %2558 = mul <8 x i32> %2552, %2540
  %2559 = mul <8 x i32> %2555, %2541
  %2560 = add nuw i64 %2537, 32
  %2561 = icmp eq i64 %2560, %2534
  br i1 %2561, label %2562, label %2536, !llvm.loop !284

2562:                                             ; preds = %2536
  %2563 = mul <8 x i32> %2557, %2556
  %2564 = mul <8 x i32> %2558, %2563
  %2565 = mul <8 x i32> %2559, %2564
  %2566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2565)
  %2567 = icmp eq i64 %2530, %2534
  br i1 %2567, label %2580, label %2568

2568:                                             ; preds = %2521, %2562
  %2569 = phi i64 [ %2524, %2521 ], [ %2535, %2562 ]
  %2570 = phi i32 [ 1, %2521 ], [ %2566, %2562 ]
  br label %2571

2571:                                             ; preds = %2568, %2571
  %2572 = phi i64 [ %2577, %2571 ], [ %2569, %2568 ]
  %2573 = phi i32 [ %2576, %2571 ], [ %2570, %2568 ]
  %2574 = getelementptr inbounds i32, ptr %9, i64 %2572
  %2575 = load i32, ptr %2574, align 4, !tbaa !5
  %2576 = mul nsw i32 %2575, %2573
  %2577 = add nsw i64 %2572, -1
  %2578 = trunc i64 %2572 to i32
  %2579 = icmp sgt i32 %2578, 0
  br i1 %2579, label %2571, label %2580, !llvm.loop !285

2580:                                             ; preds = %2571, %2562
  %2581 = phi i32 [ %2566, %2562 ], [ %2576, %2571 ]
  %2582 = and i64 %2531, 4294967295
  %2583 = getelementptr inbounds i32, ptr %6, i64 %2582
  %2584 = load i32, ptr %2583, align 4, !tbaa !5
  %2585 = mul nsw i32 %2584, %2581
  %2586 = add nsw i32 %2585, %2525
  %2587 = icmp sgt i64 %2523, 2
  %2588 = add nsw i64 %2524, -1
  %2589 = add i32 %2522, 1
  br i1 %2587, label %2521, label %2590, !llvm.loop !286

2590:                                             ; preds = %2580, %2518
  %2591 = phi i32 [ %2520, %2518 ], [ %2586, %2580 ]
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds double, ptr %2, i64 %2592
  %2594 = load double, ptr %2593, align 8, !tbaa !18
  %2595 = getelementptr inbounds i32, ptr %2485, i64 %2592
  %2596 = load i32, ptr %2595, align 4, !tbaa !5
  %2597 = fcmp fast ueq double %2594, 0.000000e+00
  br i1 %2597, label %2602, label %2598

2598:                                             ; preds = %2590
  %2599 = load i32, ptr %2487, align 4, !tbaa !5
  %2600 = icmp sgt i32 %2599, %2596
  br i1 %2600, label %2601, label %2602

2601:                                             ; preds = %2598
  store i32 %2596, ptr %2487, align 4, !tbaa !5
  br label %2602

2602:                                             ; preds = %2598, %2601, %2590
  %2603 = add nuw nsw i32 %2519, 1
  br i1 %2512, label %2604, label %2651

2604:                                             ; preds = %2602
  %2605 = load i32, ptr %4, align 4, !tbaa !5
  %2606 = load i32, ptr %12, align 4, !tbaa !5
  %2607 = add nsw i32 %2606, -1
  %2608 = icmp slt i32 %2605, %2607
  br i1 %2608, label %2628, label %2609

2609:                                             ; preds = %2604
  %2610 = icmp eq i32 %2605, %2607
  br i1 %2610, label %2611, label %2644

2611:                                             ; preds = %2609
  store i32 0, ptr %4, align 4, !tbaa !5
  %2612 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2612, ptr %6, align 4, !tbaa !5
  br i1 %2517, label %2651, label %2613

2613:                                             ; preds = %2611, %2638
  %2614 = phi i64 [ %2642, %2638 ], [ 1, %2611 ]
  %2615 = getelementptr inbounds i32, ptr %4, i64 %2614
  %2616 = load i32, ptr %2615, align 4, !tbaa !5
  %2617 = getelementptr inbounds i32, ptr %12, i64 %2614
  %2618 = load i32, ptr %2617, align 4, !tbaa !5
  %2619 = add nsw i32 %2618, -1
  %2620 = icmp slt i32 %2616, %2619
  br i1 %2620, label %2621, label %2636

2621:                                             ; preds = %2613
  br i1 %2608, label %2628, label %2622

2622:                                             ; preds = %2621
  %2623 = getelementptr inbounds i32, ptr %7, i64 %2614
  %2624 = load i32, ptr %2623, align 4, !tbaa !5
  %2625 = getelementptr inbounds i32, ptr %6, i64 %2614
  %2626 = load i32, ptr %2625, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2624
  store i32 %2627, ptr %2625, align 4, !tbaa !5
  br label %2646

2628:                                             ; preds = %2604, %2621
  %2629 = phi i32 [ %2616, %2621 ], [ %2605, %2604 ]
  %2630 = phi ptr [ %2615, %2621 ], [ %4, %2604 ]
  %2631 = phi i64 [ %2614, %2621 ], [ 0, %2604 ]
  %2632 = add nsw i32 %2629, 1
  store i32 %2632, ptr %2630, align 4, !tbaa !5
  %2633 = getelementptr inbounds i32, ptr %7, i64 %2631
  %2634 = load i32, ptr %2633, align 4, !tbaa !5
  %2635 = getelementptr inbounds i32, ptr %6, i64 %2631
  br label %2646

2636:                                             ; preds = %2613
  %2637 = icmp eq i32 %2616, %2619
  br i1 %2637, label %2638, label %2644

2638:                                             ; preds = %2636
  store i32 0, ptr %2615, align 4, !tbaa !5
  %2639 = getelementptr inbounds i32, ptr %8, i64 %2614
  %2640 = load i32, ptr %2639, align 4, !tbaa !5
  %2641 = getelementptr inbounds i32, ptr %6, i64 %2614
  store i32 %2640, ptr %2641, align 4, !tbaa !5
  %2642 = add nuw nsw i64 %2614, 1
  %2643 = icmp eq i64 %2642, %2515
  br i1 %2643, label %2651, label %2613, !llvm.loop !287

2644:                                             ; preds = %2609, %2636
  %2645 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2646:                                             ; preds = %2622, %2628
  %2647 = phi ptr [ %2635, %2628 ], [ %2615, %2622 ]
  %2648 = phi i32 [ %2634, %2628 ], [ 1, %2622 ]
  %2649 = load i32, ptr %2647, align 4, !tbaa !5
  %2650 = add nsw i32 %2649, %2648
  store i32 %2650, ptr %2647, align 4, !tbaa !5
  br label %2651

2651:                                             ; preds = %2638, %2646, %2611, %2602
  %2652 = icmp eq i32 %2603, %5
  br i1 %2652, label %5513, label %2518, !llvm.loop !288

2653:                                             ; preds = %2501, %2789
  %2654 = phi i32 [ 0, %2501 ], [ %2738, %2789 ]
  %2655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2502, label %2656, label %2725

2656:                                             ; preds = %2653, %2715
  %2657 = phi i32 [ %2724, %2715 ], [ 0, %2653 ]
  %2658 = phi i64 [ %2666, %2715 ], [ %2506, %2653 ]
  %2659 = phi i64 [ %2723, %2715 ], [ %2505, %2653 ]
  %2660 = phi i32 [ %2721, %2715 ], [ %2655, %2653 ]
  %2661 = sub i32 %2504, %2657
  %2662 = tail call i32 @llvm.smin.i32(i32 %2661, i32 0)
  %2663 = sub i32 %2661, %2662
  %2664 = zext i32 %2663 to i64
  %2665 = add nuw nsw i64 %2664, 1
  %2666 = add nsw i64 %2658, -1
  %2667 = icmp ult i32 %2663, 31
  br i1 %2667, label %2703, label %2668

2668:                                             ; preds = %2656
  %2669 = and i64 %2665, 8589934560
  %2670 = sub i64 %2659, %2669
  br label %2671

2671:                                             ; preds = %2671, %2668
  %2672 = phi i64 [ 0, %2668 ], [ %2695, %2671 ]
  %2673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2691, %2671 ]
  %2674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2692, %2671 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2693, %2671 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2694, %2671 ]
  %2677 = sub i64 %2659, %2672
  %2678 = getelementptr inbounds i32, ptr %11, i64 %2677
  %2679 = getelementptr inbounds i32, ptr %2678, i64 -7
  %2680 = load <8 x i32>, ptr %2679, align 4, !tbaa !5
  %2681 = shufflevector <8 x i32> %2680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2682 = getelementptr inbounds i32, ptr %2678, i64 -15
  %2683 = load <8 x i32>, ptr %2682, align 4, !tbaa !5
  %2684 = shufflevector <8 x i32> %2683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2685 = getelementptr inbounds i32, ptr %2678, i64 -23
  %2686 = load <8 x i32>, ptr %2685, align 4, !tbaa !5
  %2687 = shufflevector <8 x i32> %2686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2688 = getelementptr inbounds i32, ptr %2678, i64 -31
  %2689 = load <8 x i32>, ptr %2688, align 4, !tbaa !5
  %2690 = shufflevector <8 x i32> %2689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2691 = mul <8 x i32> %2681, %2673
  %2692 = mul <8 x i32> %2684, %2674
  %2693 = mul <8 x i32> %2687, %2675
  %2694 = mul <8 x i32> %2690, %2676
  %2695 = add nuw i64 %2672, 32
  %2696 = icmp eq i64 %2695, %2669
  br i1 %2696, label %2697, label %2671, !llvm.loop !289

2697:                                             ; preds = %2671
  %2698 = mul <8 x i32> %2692, %2691
  %2699 = mul <8 x i32> %2693, %2698
  %2700 = mul <8 x i32> %2694, %2699
  %2701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2700)
  %2702 = icmp eq i64 %2665, %2669
  br i1 %2702, label %2715, label %2703

2703:                                             ; preds = %2656, %2697
  %2704 = phi i64 [ %2659, %2656 ], [ %2670, %2697 ]
  %2705 = phi i32 [ 1, %2656 ], [ %2701, %2697 ]
  br label %2706

2706:                                             ; preds = %2703, %2706
  %2707 = phi i64 [ %2712, %2706 ], [ %2704, %2703 ]
  %2708 = phi i32 [ %2711, %2706 ], [ %2705, %2703 ]
  %2709 = getelementptr inbounds i32, ptr %11, i64 %2707
  %2710 = load i32, ptr %2709, align 4, !tbaa !5
  %2711 = mul nsw i32 %2710, %2708
  %2712 = add nsw i64 %2707, -1
  %2713 = trunc i64 %2707 to i32
  %2714 = icmp sgt i32 %2713, 0
  br i1 %2714, label %2706, label %2715, !llvm.loop !290

2715:                                             ; preds = %2706, %2697
  %2716 = phi i32 [ %2701, %2697 ], [ %2711, %2706 ]
  %2717 = and i64 %2666, 4294967295
  %2718 = getelementptr inbounds i32, ptr %6, i64 %2717
  %2719 = load i32, ptr %2718, align 4, !tbaa !5
  %2720 = mul nsw i32 %2719, %2716
  %2721 = add nsw i32 %2720, %2660
  %2722 = icmp sgt i64 %2658, 2
  %2723 = add nsw i64 %2659, -1
  %2724 = add i32 %2657, 1
  br i1 %2722, label %2656, label %2725, !llvm.loop !291

2725:                                             ; preds = %2715, %2653
  %2726 = phi i32 [ %2655, %2653 ], [ %2721, %2715 ]
  %2727 = icmp slt i32 %2726, %5
  br i1 %2727, label %2730, label %2728

2728:                                             ; preds = %2725
  %2729 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2730:                                             ; preds = %2725
  %2731 = sext i32 %2726 to i64
  %2732 = getelementptr inbounds i32, ptr %2485, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = load i32, ptr %2487, align 4, !tbaa !5
  %2735 = icmp sgt i32 %2734, %2733
  br i1 %2735, label %2736, label %2737

2736:                                             ; preds = %2730
  store i32 %2733, ptr %2487, align 4, !tbaa !5
  br label %2737

2737:                                             ; preds = %2730, %2736
  %2738 = add nuw nsw i32 %2654, 1
  br i1 %2503, label %2739, label %2789

2739:                                             ; preds = %2737
  %2740 = load i32, ptr %4, align 4, !tbaa !5
  %2741 = load i32, ptr %12, align 4, !tbaa !5
  %2742 = add nsw i32 %2741, -1
  %2743 = icmp slt i32 %2740, %2742
  br i1 %2743, label %2766, label %2744

2744:                                             ; preds = %2739
  %2745 = icmp eq i32 %2740, %2742
  br i1 %2745, label %2746, label %2782

2746:                                             ; preds = %2744
  store i32 0, ptr %4, align 4, !tbaa !5
  %2747 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2747, ptr %6, align 4, !tbaa !5
  br i1 %2508, label %2789, label %2748

2748:                                             ; preds = %2746, %2776
  %2749 = phi i64 [ %2780, %2776 ], [ 1, %2746 ]
  %2750 = getelementptr inbounds i32, ptr %4, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %12, i64 %2749
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = add nsw i32 %2753, -1
  %2755 = icmp slt i32 %2751, %2754
  br i1 %2755, label %2756, label %2774

2756:                                             ; preds = %2748
  br i1 %2743, label %2766, label %2757

2757:                                             ; preds = %2756
  %2758 = shl i64 %2749, 32
  %2759 = add i64 %2758, -4294967296
  %2760 = ashr exact i64 %2759, 32
  %2761 = getelementptr inbounds i32, ptr %7, i64 %2760
  %2762 = load i32, ptr %2761, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %6, i64 %2749
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = add nsw i32 %2764, %2762
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  br label %2784

2766:                                             ; preds = %2739, %2756
  %2767 = phi i32 [ %2751, %2756 ], [ %2740, %2739 ]
  %2768 = phi ptr [ %2750, %2756 ], [ %4, %2739 ]
  %2769 = phi i64 [ %2749, %2756 ], [ 0, %2739 ]
  %2770 = add nsw i32 %2767, 1
  store i32 %2770, ptr %2768, align 4, !tbaa !5
  %2771 = getelementptr inbounds i32, ptr %7, i64 %2769
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2769
  br label %2784

2774:                                             ; preds = %2748
  %2775 = icmp eq i32 %2751, %2754
  br i1 %2775, label %2776, label %2782

2776:                                             ; preds = %2774
  store i32 0, ptr %2750, align 4, !tbaa !5
  %2777 = getelementptr inbounds i32, ptr %8, i64 %2749
  %2778 = load i32, ptr %2777, align 4, !tbaa !5
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2749
  store i32 %2778, ptr %2779, align 4, !tbaa !5
  %2780 = add nuw nsw i64 %2749, 1
  %2781 = icmp eq i64 %2780, %2506
  br i1 %2781, label %2789, label %2748, !llvm.loop !292

2782:                                             ; preds = %2744, %2774
  %2783 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2784:                                             ; preds = %2757, %2766
  %2785 = phi ptr [ %2773, %2766 ], [ %2750, %2757 ]
  %2786 = phi i32 [ %2772, %2766 ], [ 1, %2757 ]
  %2787 = load i32, ptr %2785, align 4, !tbaa !5
  %2788 = add nsw i32 %2787, %2786
  store i32 %2788, ptr %2785, align 4, !tbaa !5
  br label %2789

2789:                                             ; preds = %2776, %2784, %2746, %2737
  %2790 = icmp eq i32 %2738, %5
  br i1 %2790, label %5513, label %2653, !llvm.loop !293

2791:                                             ; preds = %2494
  %2792 = getelementptr inbounds i32, ptr %3, i64 %19
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = icmp eq i32 %2793, 0
  %2795 = icmp sgt i32 %5, 0
  br i1 %2794, label %2805, label %2796

2796:                                             ; preds = %2791
  br i1 %2795, label %2797, label %5513

2797:                                             ; preds = %2796
  %2798 = icmp sgt i32 %13, 1
  %2799 = icmp sgt i32 %13, 0
  %2800 = add i32 %13, -2
  %2801 = zext i32 %2800 to i64
  %2802 = zext i32 %13 to i64
  %2803 = add nuw i32 %5, 1
  %2804 = icmp eq i32 %13, 1
  br label %2945

2805:                                             ; preds = %2791
  br i1 %2795, label %2806, label %5513

2806:                                             ; preds = %2805
  %2807 = icmp sgt i32 %13, 1
  %2808 = icmp sgt i32 %13, 0
  %2809 = add i32 %13, -2
  %2810 = zext i32 %2809 to i64
  %2811 = zext i32 %13 to i64
  %2812 = add nuw i32 %5, 1
  %2813 = icmp eq i32 %13, 1
  br label %2814

2814:                                             ; preds = %2806, %2943
  %2815 = phi i32 [ 0, %2806 ], [ %2895, %2943 ]
  %2816 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2807, label %2817, label %2886

2817:                                             ; preds = %2814, %2876
  %2818 = phi i32 [ %2885, %2876 ], [ 0, %2814 ]
  %2819 = phi i64 [ %2827, %2876 ], [ %2811, %2814 ]
  %2820 = phi i64 [ %2884, %2876 ], [ %2810, %2814 ]
  %2821 = phi i32 [ %2882, %2876 ], [ %2816, %2814 ]
  %2822 = sub i32 %2809, %2818
  %2823 = tail call i32 @llvm.smin.i32(i32 %2822, i32 0)
  %2824 = sub i32 %2822, %2823
  %2825 = zext i32 %2824 to i64
  %2826 = add nuw nsw i64 %2825, 1
  %2827 = add nsw i64 %2819, -1
  %2828 = icmp ult i32 %2824, 31
  br i1 %2828, label %2864, label %2829

2829:                                             ; preds = %2817
  %2830 = and i64 %2826, 8589934560
  %2831 = sub i64 %2820, %2830
  br label %2832

2832:                                             ; preds = %2832, %2829
  %2833 = phi i64 [ 0, %2829 ], [ %2856, %2832 ]
  %2834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2852, %2832 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2853, %2832 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2854, %2832 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2855, %2832 ]
  %2838 = sub i64 %2820, %2833
  %2839 = getelementptr inbounds i32, ptr %9, i64 %2838
  %2840 = getelementptr inbounds i32, ptr %2839, i64 -7
  %2841 = load <8 x i32>, ptr %2840, align 4, !tbaa !5
  %2842 = shufflevector <8 x i32> %2841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2843 = getelementptr inbounds i32, ptr %2839, i64 -15
  %2844 = load <8 x i32>, ptr %2843, align 4, !tbaa !5
  %2845 = shufflevector <8 x i32> %2844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2846 = getelementptr inbounds i32, ptr %2839, i64 -23
  %2847 = load <8 x i32>, ptr %2846, align 4, !tbaa !5
  %2848 = shufflevector <8 x i32> %2847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2849 = getelementptr inbounds i32, ptr %2839, i64 -31
  %2850 = load <8 x i32>, ptr %2849, align 4, !tbaa !5
  %2851 = shufflevector <8 x i32> %2850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2852 = mul <8 x i32> %2842, %2834
  %2853 = mul <8 x i32> %2845, %2835
  %2854 = mul <8 x i32> %2848, %2836
  %2855 = mul <8 x i32> %2851, %2837
  %2856 = add nuw i64 %2833, 32
  %2857 = icmp eq i64 %2856, %2830
  br i1 %2857, label %2858, label %2832, !llvm.loop !294

2858:                                             ; preds = %2832
  %2859 = mul <8 x i32> %2853, %2852
  %2860 = mul <8 x i32> %2854, %2859
  %2861 = mul <8 x i32> %2855, %2860
  %2862 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2861)
  %2863 = icmp eq i64 %2826, %2830
  br i1 %2863, label %2876, label %2864

2864:                                             ; preds = %2817, %2858
  %2865 = phi i64 [ %2820, %2817 ], [ %2831, %2858 ]
  %2866 = phi i32 [ 1, %2817 ], [ %2862, %2858 ]
  br label %2867

2867:                                             ; preds = %2864, %2867
  %2868 = phi i64 [ %2873, %2867 ], [ %2865, %2864 ]
  %2869 = phi i32 [ %2872, %2867 ], [ %2866, %2864 ]
  %2870 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2871 = load i32, ptr %2870, align 4, !tbaa !5
  %2872 = mul nsw i32 %2871, %2869
  %2873 = add nsw i64 %2868, -1
  %2874 = trunc i64 %2868 to i32
  %2875 = icmp sgt i32 %2874, 0
  br i1 %2875, label %2867, label %2876, !llvm.loop !295

2876:                                             ; preds = %2867, %2858
  %2877 = phi i32 [ %2862, %2858 ], [ %2872, %2867 ]
  %2878 = and i64 %2827, 4294967295
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2878
  %2880 = load i32, ptr %2879, align 4, !tbaa !5
  %2881 = mul nsw i32 %2880, %2877
  %2882 = add nsw i32 %2881, %2821
  %2883 = icmp sgt i64 %2819, 2
  %2884 = add nsw i64 %2820, -1
  %2885 = add i32 %2818, 1
  br i1 %2883, label %2817, label %2886, !llvm.loop !296

2886:                                             ; preds = %2876, %2814
  %2887 = phi i32 [ %2816, %2814 ], [ %2882, %2876 ]
  %2888 = sext i32 %2887 to i64
  %2889 = getelementptr inbounds i32, ptr %2485, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = load i32, ptr %2487, align 4, !tbaa !5
  %2892 = icmp sgt i32 %2891, %2890
  br i1 %2892, label %2893, label %2894

2893:                                             ; preds = %2886
  store i32 %2890, ptr %2487, align 4, !tbaa !5
  br label %2894

2894:                                             ; preds = %2893, %2886
  %2895 = add nuw nsw i32 %2815, 1
  br i1 %2808, label %2896, label %2943

2896:                                             ; preds = %2894
  %2897 = load i32, ptr %4, align 4, !tbaa !5
  %2898 = load i32, ptr %12, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2920, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2936

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !5
  %2904 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2904, ptr %6, align 4, !tbaa !5
  br i1 %2813, label %2943, label %2905

2905:                                             ; preds = %2903, %2930
  %2906 = phi i64 [ %2934, %2930 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2928

2913:                                             ; preds = %2905
  br i1 %2900, label %2920, label %2914

2914:                                             ; preds = %2913
  %2915 = getelementptr inbounds i32, ptr %7, i64 %2906
  %2916 = load i32, ptr %2915, align 4, !tbaa !5
  %2917 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2918 = load i32, ptr %2917, align 4, !tbaa !5
  %2919 = add nsw i32 %2918, %2916
  store i32 %2919, ptr %2917, align 4, !tbaa !5
  br label %2938

2920:                                             ; preds = %2896, %2913
  %2921 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2922 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2923 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2924 = add nsw i32 %2921, 1
  store i32 %2924, ptr %2922, align 4, !tbaa !5
  %2925 = getelementptr inbounds i32, ptr %7, i64 %2923
  %2926 = load i32, ptr %2925, align 4, !tbaa !5
  %2927 = getelementptr inbounds i32, ptr %6, i64 %2923
  br label %2938

2928:                                             ; preds = %2905
  %2929 = icmp eq i32 %2908, %2911
  br i1 %2929, label %2930, label %2936

2930:                                             ; preds = %2928
  store i32 0, ptr %2907, align 4, !tbaa !5
  %2931 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2932 = load i32, ptr %2931, align 4, !tbaa !5
  %2933 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2932, ptr %2933, align 4, !tbaa !5
  %2934 = add nuw nsw i64 %2906, 1
  %2935 = icmp eq i64 %2934, %2811
  br i1 %2935, label %2943, label %2905, !llvm.loop !297

2936:                                             ; preds = %2901, %2928
  %2937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2938:                                             ; preds = %2914, %2920
  %2939 = phi ptr [ %2927, %2920 ], [ %2907, %2914 ]
  %2940 = phi i32 [ %2926, %2920 ], [ 1, %2914 ]
  %2941 = load i32, ptr %2939, align 4, !tbaa !5
  %2942 = add nsw i32 %2941, %2940
  store i32 %2942, ptr %2939, align 4, !tbaa !5
  br label %2943

2943:                                             ; preds = %2930, %2938, %2903, %2894
  %2944 = icmp eq i32 %2895, %5
  br i1 %2944, label %5513, label %2814, !llvm.loop !298

2945:                                             ; preds = %2797, %3081
  %2946 = phi i32 [ 0, %2797 ], [ %3030, %3081 ]
  %2947 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2798, label %2948, label %3017

2948:                                             ; preds = %2945, %3007
  %2949 = phi i32 [ %3016, %3007 ], [ 0, %2945 ]
  %2950 = phi i64 [ %2958, %3007 ], [ %2802, %2945 ]
  %2951 = phi i64 [ %3015, %3007 ], [ %2801, %2945 ]
  %2952 = phi i32 [ %3013, %3007 ], [ %2947, %2945 ]
  %2953 = sub i32 %2800, %2949
  %2954 = tail call i32 @llvm.smin.i32(i32 %2953, i32 0)
  %2955 = sub i32 %2953, %2954
  %2956 = zext i32 %2955 to i64
  %2957 = add nuw nsw i64 %2956, 1
  %2958 = add nsw i64 %2950, -1
  %2959 = icmp ult i32 %2955, 31
  br i1 %2959, label %2995, label %2960

2960:                                             ; preds = %2948
  %2961 = and i64 %2957, 8589934560
  %2962 = sub i64 %2951, %2961
  br label %2963

2963:                                             ; preds = %2963, %2960
  %2964 = phi i64 [ 0, %2960 ], [ %2987, %2963 ]
  %2965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2983, %2963 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2984, %2963 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2985, %2963 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2986, %2963 ]
  %2969 = sub i64 %2951, %2964
  %2970 = getelementptr inbounds i32, ptr %11, i64 %2969
  %2971 = getelementptr inbounds i32, ptr %2970, i64 -7
  %2972 = load <8 x i32>, ptr %2971, align 4, !tbaa !5
  %2973 = shufflevector <8 x i32> %2972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2974 = getelementptr inbounds i32, ptr %2970, i64 -15
  %2975 = load <8 x i32>, ptr %2974, align 4, !tbaa !5
  %2976 = shufflevector <8 x i32> %2975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2977 = getelementptr inbounds i32, ptr %2970, i64 -23
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !5
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = getelementptr inbounds i32, ptr %2970, i64 -31
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !5
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = mul <8 x i32> %2973, %2965
  %2984 = mul <8 x i32> %2976, %2966
  %2985 = mul <8 x i32> %2979, %2967
  %2986 = mul <8 x i32> %2982, %2968
  %2987 = add nuw i64 %2964, 32
  %2988 = icmp eq i64 %2987, %2961
  br i1 %2988, label %2989, label %2963, !llvm.loop !299

2989:                                             ; preds = %2963
  %2990 = mul <8 x i32> %2984, %2983
  %2991 = mul <8 x i32> %2985, %2990
  %2992 = mul <8 x i32> %2986, %2991
  %2993 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2992)
  %2994 = icmp eq i64 %2957, %2961
  br i1 %2994, label %3007, label %2995

2995:                                             ; preds = %2948, %2989
  %2996 = phi i64 [ %2951, %2948 ], [ %2962, %2989 ]
  %2997 = phi i32 [ 1, %2948 ], [ %2993, %2989 ]
  br label %2998

2998:                                             ; preds = %2995, %2998
  %2999 = phi i64 [ %3004, %2998 ], [ %2996, %2995 ]
  %3000 = phi i32 [ %3003, %2998 ], [ %2997, %2995 ]
  %3001 = getelementptr inbounds i32, ptr %11, i64 %2999
  %3002 = load i32, ptr %3001, align 4, !tbaa !5
  %3003 = mul nsw i32 %3002, %3000
  %3004 = add nsw i64 %2999, -1
  %3005 = trunc i64 %2999 to i32
  %3006 = icmp sgt i32 %3005, 0
  br i1 %3006, label %2998, label %3007, !llvm.loop !300

3007:                                             ; preds = %2998, %2989
  %3008 = phi i32 [ %2993, %2989 ], [ %3003, %2998 ]
  %3009 = and i64 %2958, 4294967295
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3009
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = mul nsw i32 %3011, %3008
  %3013 = add nsw i32 %3012, %2952
  %3014 = icmp sgt i64 %2950, 2
  %3015 = add nsw i64 %2951, -1
  %3016 = add i32 %2949, 1
  br i1 %3014, label %2948, label %3017, !llvm.loop !301

3017:                                             ; preds = %3007, %2945
  %3018 = phi i32 [ %2947, %2945 ], [ %3013, %3007 ]
  %3019 = icmp slt i32 %3018, %5
  br i1 %3019, label %3022, label %3020

3020:                                             ; preds = %3017
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3022:                                             ; preds = %3017
  %3023 = sext i32 %3018 to i64
  %3024 = getelementptr inbounds i32, ptr %2485, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = load i32, ptr %2487, align 4, !tbaa !5
  %3027 = icmp sgt i32 %3026, %3025
  br i1 %3027, label %3028, label %3029

3028:                                             ; preds = %3022
  store i32 %3025, ptr %2487, align 4, !tbaa !5
  br label %3029

3029:                                             ; preds = %3028, %3022
  %3030 = add nuw nsw i32 %2946, 1
  br i1 %2799, label %3031, label %3081

3031:                                             ; preds = %3029
  %3032 = load i32, ptr %4, align 4, !tbaa !5
  %3033 = load i32, ptr %12, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3032, %3034
  br i1 %3035, label %3058, label %3036

3036:                                             ; preds = %3031
  %3037 = icmp eq i32 %3032, %3034
  br i1 %3037, label %3038, label %3074

3038:                                             ; preds = %3036
  store i32 0, ptr %4, align 4, !tbaa !5
  %3039 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3039, ptr %6, align 4, !tbaa !5
  br i1 %2804, label %3081, label %3040

3040:                                             ; preds = %3038, %3068
  %3041 = phi i64 [ %3072, %3068 ], [ 1, %3038 ]
  %3042 = getelementptr inbounds i32, ptr %4, i64 %3041
  %3043 = load i32, ptr %3042, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %12, i64 %3041
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, -1
  %3047 = icmp slt i32 %3043, %3046
  br i1 %3047, label %3048, label %3066

3048:                                             ; preds = %3040
  br i1 %3035, label %3058, label %3049

3049:                                             ; preds = %3048
  %3050 = shl i64 %3041, 32
  %3051 = add i64 %3050, -4294967296
  %3052 = ashr exact i64 %3051, 32
  %3053 = getelementptr inbounds i32, ptr %7, i64 %3052
  %3054 = load i32, ptr %3053, align 4, !tbaa !5
  %3055 = getelementptr inbounds i32, ptr %6, i64 %3041
  %3056 = load i32, ptr %3055, align 4, !tbaa !5
  %3057 = add nsw i32 %3056, %3054
  store i32 %3057, ptr %3055, align 4, !tbaa !5
  br label %3076

3058:                                             ; preds = %3031, %3048
  %3059 = phi i32 [ %3043, %3048 ], [ %3032, %3031 ]
  %3060 = phi ptr [ %3042, %3048 ], [ %4, %3031 ]
  %3061 = phi i64 [ %3041, %3048 ], [ 0, %3031 ]
  %3062 = add nsw i32 %3059, 1
  store i32 %3062, ptr %3060, align 4, !tbaa !5
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3061
  %3064 = load i32, ptr %3063, align 4, !tbaa !5
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3061
  br label %3076

3066:                                             ; preds = %3040
  %3067 = icmp eq i32 %3043, %3046
  br i1 %3067, label %3068, label %3074

3068:                                             ; preds = %3066
  store i32 0, ptr %3042, align 4, !tbaa !5
  %3069 = getelementptr inbounds i32, ptr %8, i64 %3041
  %3070 = load i32, ptr %3069, align 4, !tbaa !5
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3041
  store i32 %3070, ptr %3071, align 4, !tbaa !5
  %3072 = add nuw nsw i64 %3041, 1
  %3073 = icmp eq i64 %3072, %2802
  br i1 %3073, label %3081, label %3040, !llvm.loop !302

3074:                                             ; preds = %3036, %3066
  %3075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3076:                                             ; preds = %3049, %3058
  %3077 = phi ptr [ %3065, %3058 ], [ %3042, %3049 ]
  %3078 = phi i32 [ %3064, %3058 ], [ 1, %3049 ]
  %3079 = load i32, ptr %3077, align 4, !tbaa !5
  %3080 = add nsw i32 %3079, %3078
  store i32 %3080, ptr %3077, align 4, !tbaa !5
  br label %3081

3081:                                             ; preds = %3068, %3076, %3038, %3029
  %3082 = icmp eq i32 %3030, %5
  br i1 %3082, label %5513, label %2945, !llvm.loop !303

3083:                                             ; preds = %2494
  %3084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3085:                                             ; preds = %18
  %3086 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3087 = load ptr, ptr %3086, align 8, !tbaa !9
  %3088 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3089 = load ptr, ptr %3088, align 8, !tbaa !9
  %3090 = load i32, ptr %3087, align 4, !tbaa !5
  %3091 = sext i32 %3090 to i64
  store i64 %3091, ptr %3089, align 8, !tbaa !120
  %3092 = icmp eq i32 %13, 0
  br i1 %3092, label %5513, label %3093

3093:                                             ; preds = %3085
  switch i32 %1, label %3690 [
    i32 1, label %3094
    i32 0, label %3394
  ]

3094:                                             ; preds = %3093
  %3095 = getelementptr inbounds i32, ptr %3, i64 %19
  %3096 = load i32, ptr %3095, align 4, !tbaa !5
  %3097 = icmp eq i32 %3096, 0
  %3098 = icmp sgt i32 %5, 0
  br i1 %3097, label %3108, label %3099

3099:                                             ; preds = %3094
  br i1 %3098, label %3100, label %5513

3100:                                             ; preds = %3099
  %3101 = icmp sgt i32 %13, 1
  %3102 = icmp sgt i32 %13, 0
  %3103 = add i32 %13, -2
  %3104 = zext i32 %3103 to i64
  %3105 = zext i32 %13 to i64
  %3106 = add nuw i32 %5, 1
  %3107 = icmp eq i32 %13, 1
  br label %3254

3108:                                             ; preds = %3094
  br i1 %3098, label %3109, label %5513

3109:                                             ; preds = %3108
  %3110 = icmp sgt i32 %13, 1
  %3111 = icmp sgt i32 %13, 0
  %3112 = add i32 %13, -2
  %3113 = zext i32 %3112 to i64
  %3114 = zext i32 %13 to i64
  %3115 = add nuw i32 %5, 1
  %3116 = icmp eq i32 %13, 1
  br label %3117

3117:                                             ; preds = %3109, %3252
  %3118 = phi i64 [ %3091, %3109 ], [ %3203, %3252 ]
  %3119 = phi i32 [ 0, %3109 ], [ %3204, %3252 ]
  %3120 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3110, label %3121, label %3190

3121:                                             ; preds = %3117, %3180
  %3122 = phi i32 [ %3189, %3180 ], [ 0, %3117 ]
  %3123 = phi i64 [ %3131, %3180 ], [ %3114, %3117 ]
  %3124 = phi i64 [ %3188, %3180 ], [ %3113, %3117 ]
  %3125 = phi i32 [ %3186, %3180 ], [ %3120, %3117 ]
  %3126 = sub i32 %3112, %3122
  %3127 = tail call i32 @llvm.smin.i32(i32 %3126, i32 0)
  %3128 = sub i32 %3126, %3127
  %3129 = zext i32 %3128 to i64
  %3130 = add nuw nsw i64 %3129, 1
  %3131 = add nsw i64 %3123, -1
  %3132 = icmp ult i32 %3128, 31
  br i1 %3132, label %3168, label %3133

3133:                                             ; preds = %3121
  %3134 = and i64 %3130, 8589934560
  %3135 = sub i64 %3124, %3134
  br label %3136

3136:                                             ; preds = %3136, %3133
  %3137 = phi i64 [ 0, %3133 ], [ %3160, %3136 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3156, %3136 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3157, %3136 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3158, %3136 ]
  %3141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3159, %3136 ]
  %3142 = sub i64 %3124, %3137
  %3143 = getelementptr inbounds i32, ptr %9, i64 %3142
  %3144 = getelementptr inbounds i32, ptr %3143, i64 -7
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !5
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = getelementptr inbounds i32, ptr %3143, i64 -15
  %3148 = load <8 x i32>, ptr %3147, align 4, !tbaa !5
  %3149 = shufflevector <8 x i32> %3148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3150 = getelementptr inbounds i32, ptr %3143, i64 -23
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !5
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = getelementptr inbounds i32, ptr %3143, i64 -31
  %3154 = load <8 x i32>, ptr %3153, align 4, !tbaa !5
  %3155 = shufflevector <8 x i32> %3154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3156 = mul <8 x i32> %3146, %3138
  %3157 = mul <8 x i32> %3149, %3139
  %3158 = mul <8 x i32> %3152, %3140
  %3159 = mul <8 x i32> %3155, %3141
  %3160 = add nuw i64 %3137, 32
  %3161 = icmp eq i64 %3160, %3134
  br i1 %3161, label %3162, label %3136, !llvm.loop !304

3162:                                             ; preds = %3136
  %3163 = mul <8 x i32> %3157, %3156
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = mul <8 x i32> %3159, %3164
  %3166 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3165)
  %3167 = icmp eq i64 %3130, %3134
  br i1 %3167, label %3180, label %3168

3168:                                             ; preds = %3121, %3162
  %3169 = phi i64 [ %3124, %3121 ], [ %3135, %3162 ]
  %3170 = phi i32 [ 1, %3121 ], [ %3166, %3162 ]
  br label %3171

3171:                                             ; preds = %3168, %3171
  %3172 = phi i64 [ %3177, %3171 ], [ %3169, %3168 ]
  %3173 = phi i32 [ %3176, %3171 ], [ %3170, %3168 ]
  %3174 = getelementptr inbounds i32, ptr %9, i64 %3172
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = mul nsw i32 %3175, %3173
  %3177 = add nsw i64 %3172, -1
  %3178 = trunc i64 %3172 to i32
  %3179 = icmp sgt i32 %3178, 0
  br i1 %3179, label %3171, label %3180, !llvm.loop !305

3180:                                             ; preds = %3171, %3162
  %3181 = phi i32 [ %3166, %3162 ], [ %3176, %3171 ]
  %3182 = and i64 %3131, 4294967295
  %3183 = getelementptr inbounds i32, ptr %6, i64 %3182
  %3184 = load i32, ptr %3183, align 4, !tbaa !5
  %3185 = mul nsw i32 %3184, %3181
  %3186 = add nsw i32 %3185, %3125
  %3187 = icmp sgt i64 %3123, 2
  %3188 = add nsw i64 %3124, -1
  %3189 = add i32 %3122, 1
  br i1 %3187, label %3121, label %3190, !llvm.loop !306

3190:                                             ; preds = %3180, %3117
  %3191 = phi i32 [ %3120, %3117 ], [ %3186, %3180 ]
  %3192 = sext i32 %3191 to i64
  %3193 = getelementptr inbounds double, ptr %2, i64 %3192
  %3194 = load double, ptr %3193, align 8, !tbaa !18
  %3195 = getelementptr inbounds i32, ptr %3087, i64 %3192
  %3196 = load i32, ptr %3195, align 4, !tbaa !5
  %3197 = sext i32 %3196 to i64
  %3198 = fcmp fast one double %3194, 0.000000e+00
  %3199 = icmp sgt i64 %3118, %3197
  %3200 = select i1 %3198, i1 %3199, i1 false
  br i1 %3200, label %3201, label %3202

3201:                                             ; preds = %3190
  store i64 %3197, ptr %3089, align 8, !tbaa !120
  br label %3202

3202:                                             ; preds = %3201, %3190
  %3203 = phi i64 [ %3197, %3201 ], [ %3118, %3190 ]
  %3204 = add nuw nsw i32 %3119, 1
  br i1 %3111, label %3205, label %3252

3205:                                             ; preds = %3202
  %3206 = load i32, ptr %4, align 4, !tbaa !5
  %3207 = load i32, ptr %12, align 4, !tbaa !5
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3206, %3208
  br i1 %3209, label %3229, label %3210

3210:                                             ; preds = %3205
  %3211 = icmp eq i32 %3206, %3208
  br i1 %3211, label %3212, label %3245

3212:                                             ; preds = %3210
  store i32 0, ptr %4, align 4, !tbaa !5
  %3213 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3213, ptr %6, align 4, !tbaa !5
  br i1 %3116, label %3252, label %3214

3214:                                             ; preds = %3212, %3239
  %3215 = phi i64 [ %3243, %3239 ], [ 1, %3212 ]
  %3216 = getelementptr inbounds i32, ptr %4, i64 %3215
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %12, i64 %3215
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, -1
  %3221 = icmp slt i32 %3217, %3220
  br i1 %3221, label %3222, label %3237

3222:                                             ; preds = %3214
  br i1 %3209, label %3229, label %3223

3223:                                             ; preds = %3222
  %3224 = getelementptr inbounds i32, ptr %7, i64 %3215
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3215
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = add nsw i32 %3227, %3225
  store i32 %3228, ptr %3226, align 4, !tbaa !5
  br label %3247

3229:                                             ; preds = %3205, %3222
  %3230 = phi i32 [ %3217, %3222 ], [ %3206, %3205 ]
  %3231 = phi ptr [ %3216, %3222 ], [ %4, %3205 ]
  %3232 = phi i64 [ %3215, %3222 ], [ 0, %3205 ]
  %3233 = add nsw i32 %3230, 1
  store i32 %3233, ptr %3231, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %7, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3232
  br label %3247

3237:                                             ; preds = %3214
  %3238 = icmp eq i32 %3217, %3220
  br i1 %3238, label %3239, label %3245

3239:                                             ; preds = %3237
  store i32 0, ptr %3216, align 4, !tbaa !5
  %3240 = getelementptr inbounds i32, ptr %8, i64 %3215
  %3241 = load i32, ptr %3240, align 4, !tbaa !5
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3215
  store i32 %3241, ptr %3242, align 4, !tbaa !5
  %3243 = add nuw nsw i64 %3215, 1
  %3244 = icmp eq i64 %3243, %3114
  br i1 %3244, label %3252, label %3214, !llvm.loop !307

3245:                                             ; preds = %3210, %3237
  %3246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3247:                                             ; preds = %3223, %3229
  %3248 = phi ptr [ %3236, %3229 ], [ %3216, %3223 ]
  %3249 = phi i32 [ %3235, %3229 ], [ 1, %3223 ]
  %3250 = load i32, ptr %3248, align 4, !tbaa !5
  %3251 = add nsw i32 %3250, %3249
  store i32 %3251, ptr %3248, align 4, !tbaa !5
  br label %3252

3252:                                             ; preds = %3239, %3247, %3212, %3202
  %3253 = icmp eq i32 %3204, %5
  br i1 %3253, label %5513, label %3117, !llvm.loop !308

3254:                                             ; preds = %3100, %3392
  %3255 = phi i64 [ %3091, %3100 ], [ %3340, %3392 ]
  %3256 = phi i32 [ 0, %3100 ], [ %3341, %3392 ]
  %3257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3101, label %3258, label %3327

3258:                                             ; preds = %3254, %3317
  %3259 = phi i32 [ %3326, %3317 ], [ 0, %3254 ]
  %3260 = phi i64 [ %3268, %3317 ], [ %3105, %3254 ]
  %3261 = phi i64 [ %3325, %3317 ], [ %3104, %3254 ]
  %3262 = phi i32 [ %3323, %3317 ], [ %3257, %3254 ]
  %3263 = sub i32 %3103, %3259
  %3264 = tail call i32 @llvm.smin.i32(i32 %3263, i32 0)
  %3265 = sub i32 %3263, %3264
  %3266 = zext i32 %3265 to i64
  %3267 = add nuw nsw i64 %3266, 1
  %3268 = add nsw i64 %3260, -1
  %3269 = icmp ult i32 %3265, 31
  br i1 %3269, label %3305, label %3270

3270:                                             ; preds = %3258
  %3271 = and i64 %3267, 8589934560
  %3272 = sub i64 %3261, %3271
  br label %3273

3273:                                             ; preds = %3273, %3270
  %3274 = phi i64 [ 0, %3270 ], [ %3297, %3273 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3293, %3273 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3294, %3273 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3295, %3273 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3296, %3273 ]
  %3279 = sub i64 %3261, %3274
  %3280 = getelementptr inbounds i32, ptr %11, i64 %3279
  %3281 = getelementptr inbounds i32, ptr %3280, i64 -7
  %3282 = load <8 x i32>, ptr %3281, align 4, !tbaa !5
  %3283 = shufflevector <8 x i32> %3282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3284 = getelementptr inbounds i32, ptr %3280, i64 -15
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3280, i64 -23
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !5
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3280, i64 -31
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !5
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = mul <8 x i32> %3283, %3275
  %3294 = mul <8 x i32> %3286, %3276
  %3295 = mul <8 x i32> %3289, %3277
  %3296 = mul <8 x i32> %3292, %3278
  %3297 = add nuw i64 %3274, 32
  %3298 = icmp eq i64 %3297, %3271
  br i1 %3298, label %3299, label %3273, !llvm.loop !309

3299:                                             ; preds = %3273
  %3300 = mul <8 x i32> %3294, %3293
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = mul <8 x i32> %3296, %3301
  %3303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3302)
  %3304 = icmp eq i64 %3267, %3271
  br i1 %3304, label %3317, label %3305

3305:                                             ; preds = %3258, %3299
  %3306 = phi i64 [ %3261, %3258 ], [ %3272, %3299 ]
  %3307 = phi i32 [ 1, %3258 ], [ %3303, %3299 ]
  br label %3308

3308:                                             ; preds = %3305, %3308
  %3309 = phi i64 [ %3314, %3308 ], [ %3306, %3305 ]
  %3310 = phi i32 [ %3313, %3308 ], [ %3307, %3305 ]
  %3311 = getelementptr inbounds i32, ptr %11, i64 %3309
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = mul nsw i32 %3312, %3310
  %3314 = add nsw i64 %3309, -1
  %3315 = trunc i64 %3309 to i32
  %3316 = icmp sgt i32 %3315, 0
  br i1 %3316, label %3308, label %3317, !llvm.loop !310

3317:                                             ; preds = %3308, %3299
  %3318 = phi i32 [ %3303, %3299 ], [ %3313, %3308 ]
  %3319 = and i64 %3268, 4294967295
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3319
  %3321 = load i32, ptr %3320, align 4, !tbaa !5
  %3322 = mul nsw i32 %3321, %3318
  %3323 = add nsw i32 %3322, %3262
  %3324 = icmp sgt i64 %3260, 2
  %3325 = add nsw i64 %3261, -1
  %3326 = add i32 %3259, 1
  br i1 %3324, label %3258, label %3327, !llvm.loop !311

3327:                                             ; preds = %3317, %3254
  %3328 = phi i32 [ %3257, %3254 ], [ %3323, %3317 ]
  %3329 = icmp slt i32 %3328, %5
  br i1 %3329, label %3332, label %3330

3330:                                             ; preds = %3327
  %3331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3332:                                             ; preds = %3327
  %3333 = sext i32 %3328 to i64
  %3334 = getelementptr inbounds i32, ptr %3087, i64 %3333
  %3335 = load i32, ptr %3334, align 4, !tbaa !5
  %3336 = sext i32 %3335 to i64
  %3337 = icmp sgt i64 %3255, %3336
  br i1 %3337, label %3338, label %3339

3338:                                             ; preds = %3332
  store i64 %3336, ptr %3089, align 8, !tbaa !120
  br label %3339

3339:                                             ; preds = %3332, %3338
  %3340 = phi i64 [ %3255, %3332 ], [ %3336, %3338 ]
  %3341 = add nuw nsw i32 %3256, 1
  br i1 %3102, label %3342, label %3392

3342:                                             ; preds = %3339
  %3343 = load i32, ptr %4, align 4, !tbaa !5
  %3344 = load i32, ptr %12, align 4, !tbaa !5
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3343, %3345
  br i1 %3346, label %3369, label %3347

3347:                                             ; preds = %3342
  %3348 = icmp eq i32 %3343, %3345
  br i1 %3348, label %3349, label %3385

3349:                                             ; preds = %3347
  store i32 0, ptr %4, align 4, !tbaa !5
  %3350 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3350, ptr %6, align 4, !tbaa !5
  br i1 %3107, label %3392, label %3351

3351:                                             ; preds = %3349, %3379
  %3352 = phi i64 [ %3383, %3379 ], [ 1, %3349 ]
  %3353 = getelementptr inbounds i32, ptr %4, i64 %3352
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = getelementptr inbounds i32, ptr %12, i64 %3352
  %3356 = load i32, ptr %3355, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3354, %3357
  br i1 %3358, label %3359, label %3377

3359:                                             ; preds = %3351
  br i1 %3346, label %3369, label %3360

3360:                                             ; preds = %3359
  %3361 = shl i64 %3352, 32
  %3362 = add i64 %3361, -4294967296
  %3363 = ashr exact i64 %3362, 32
  %3364 = getelementptr inbounds i32, ptr %7, i64 %3363
  %3365 = load i32, ptr %3364, align 4, !tbaa !5
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3352
  %3367 = load i32, ptr %3366, align 4, !tbaa !5
  %3368 = add nsw i32 %3367, %3365
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  br label %3387

3369:                                             ; preds = %3342, %3359
  %3370 = phi i32 [ %3354, %3359 ], [ %3343, %3342 ]
  %3371 = phi ptr [ %3353, %3359 ], [ %4, %3342 ]
  %3372 = phi i64 [ %3352, %3359 ], [ 0, %3342 ]
  %3373 = add nsw i32 %3370, 1
  store i32 %3373, ptr %3371, align 4, !tbaa !5
  %3374 = getelementptr inbounds i32, ptr %7, i64 %3372
  %3375 = load i32, ptr %3374, align 4, !tbaa !5
  %3376 = getelementptr inbounds i32, ptr %6, i64 %3372
  br label %3387

3377:                                             ; preds = %3351
  %3378 = icmp eq i32 %3354, %3357
  br i1 %3378, label %3379, label %3385

3379:                                             ; preds = %3377
  store i32 0, ptr %3353, align 4, !tbaa !5
  %3380 = getelementptr inbounds i32, ptr %8, i64 %3352
  %3381 = load i32, ptr %3380, align 4, !tbaa !5
  %3382 = getelementptr inbounds i32, ptr %6, i64 %3352
  store i32 %3381, ptr %3382, align 4, !tbaa !5
  %3383 = add nuw nsw i64 %3352, 1
  %3384 = icmp eq i64 %3383, %3105
  br i1 %3384, label %3392, label %3351, !llvm.loop !312

3385:                                             ; preds = %3347, %3377
  %3386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3387:                                             ; preds = %3360, %3369
  %3388 = phi ptr [ %3376, %3369 ], [ %3353, %3360 ]
  %3389 = phi i32 [ %3375, %3369 ], [ 1, %3360 ]
  %3390 = load i32, ptr %3388, align 4, !tbaa !5
  %3391 = add nsw i32 %3390, %3389
  store i32 %3391, ptr %3388, align 4, !tbaa !5
  br label %3392

3392:                                             ; preds = %3379, %3387, %3349, %3339
  %3393 = icmp eq i32 %3341, %5
  br i1 %3393, label %5513, label %3254, !llvm.loop !313

3394:                                             ; preds = %3093
  %3395 = getelementptr inbounds i32, ptr %3, i64 %19
  %3396 = load i32, ptr %3395, align 4, !tbaa !5
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp sgt i32 %5, 0
  br i1 %3397, label %3408, label %3399

3399:                                             ; preds = %3394
  br i1 %3398, label %3400, label %5513

3400:                                             ; preds = %3399
  %3401 = icmp sgt i32 %13, 1
  %3402 = icmp sgt i32 %13, 0
  %3403 = add i32 %13, -2
  %3404 = zext i32 %3403 to i64
  %3405 = zext i32 %13 to i64
  %3406 = add nuw i32 %5, 1
  %3407 = icmp eq i32 %13, 1
  br label %3550

3408:                                             ; preds = %3394
  br i1 %3398, label %3409, label %5513

3409:                                             ; preds = %3408
  %3410 = icmp sgt i32 %13, 1
  %3411 = icmp sgt i32 %13, 0
  %3412 = add i32 %13, -2
  %3413 = zext i32 %3412 to i64
  %3414 = zext i32 %13 to i64
  %3415 = add nuw i32 %5, 1
  %3416 = icmp eq i32 %13, 1
  br label %3417

3417:                                             ; preds = %3409, %3548
  %3418 = phi i64 [ %3091, %3409 ], [ %3499, %3548 ]
  %3419 = phi i32 [ 0, %3409 ], [ %3500, %3548 ]
  %3420 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3410, label %3421, label %3490

3421:                                             ; preds = %3417, %3480
  %3422 = phi i32 [ %3489, %3480 ], [ 0, %3417 ]
  %3423 = phi i64 [ %3431, %3480 ], [ %3414, %3417 ]
  %3424 = phi i64 [ %3488, %3480 ], [ %3413, %3417 ]
  %3425 = phi i32 [ %3486, %3480 ], [ %3420, %3417 ]
  %3426 = sub i32 %3412, %3422
  %3427 = tail call i32 @llvm.smin.i32(i32 %3426, i32 0)
  %3428 = sub i32 %3426, %3427
  %3429 = zext i32 %3428 to i64
  %3430 = add nuw nsw i64 %3429, 1
  %3431 = add nsw i64 %3423, -1
  %3432 = icmp ult i32 %3428, 31
  br i1 %3432, label %3468, label %3433

3433:                                             ; preds = %3421
  %3434 = and i64 %3430, 8589934560
  %3435 = sub i64 %3424, %3434
  br label %3436

3436:                                             ; preds = %3436, %3433
  %3437 = phi i64 [ 0, %3433 ], [ %3460, %3436 ]
  %3438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3456, %3436 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3457, %3436 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3458, %3436 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3459, %3436 ]
  %3442 = sub i64 %3424, %3437
  %3443 = getelementptr inbounds i32, ptr %9, i64 %3442
  %3444 = getelementptr inbounds i32, ptr %3443, i64 -7
  %3445 = load <8 x i32>, ptr %3444, align 4, !tbaa !5
  %3446 = shufflevector <8 x i32> %3445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3447 = getelementptr inbounds i32, ptr %3443, i64 -15
  %3448 = load <8 x i32>, ptr %3447, align 4, !tbaa !5
  %3449 = shufflevector <8 x i32> %3448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3450 = getelementptr inbounds i32, ptr %3443, i64 -23
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !5
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3443, i64 -31
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !5
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = mul <8 x i32> %3446, %3438
  %3457 = mul <8 x i32> %3449, %3439
  %3458 = mul <8 x i32> %3452, %3440
  %3459 = mul <8 x i32> %3455, %3441
  %3460 = add nuw i64 %3437, 32
  %3461 = icmp eq i64 %3460, %3434
  br i1 %3461, label %3462, label %3436, !llvm.loop !314

3462:                                             ; preds = %3436
  %3463 = mul <8 x i32> %3457, %3456
  %3464 = mul <8 x i32> %3458, %3463
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3465)
  %3467 = icmp eq i64 %3430, %3434
  br i1 %3467, label %3480, label %3468

3468:                                             ; preds = %3421, %3462
  %3469 = phi i64 [ %3424, %3421 ], [ %3435, %3462 ]
  %3470 = phi i32 [ 1, %3421 ], [ %3466, %3462 ]
  br label %3471

3471:                                             ; preds = %3468, %3471
  %3472 = phi i64 [ %3477, %3471 ], [ %3469, %3468 ]
  %3473 = phi i32 [ %3476, %3471 ], [ %3470, %3468 ]
  %3474 = getelementptr inbounds i32, ptr %9, i64 %3472
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = mul nsw i32 %3475, %3473
  %3477 = add nsw i64 %3472, -1
  %3478 = trunc i64 %3472 to i32
  %3479 = icmp sgt i32 %3478, 0
  br i1 %3479, label %3471, label %3480, !llvm.loop !315

3480:                                             ; preds = %3471, %3462
  %3481 = phi i32 [ %3466, %3462 ], [ %3476, %3471 ]
  %3482 = and i64 %3431, 4294967295
  %3483 = getelementptr inbounds i32, ptr %6, i64 %3482
  %3484 = load i32, ptr %3483, align 4, !tbaa !5
  %3485 = mul nsw i32 %3484, %3481
  %3486 = add nsw i32 %3485, %3425
  %3487 = icmp sgt i64 %3423, 2
  %3488 = add nsw i64 %3424, -1
  %3489 = add i32 %3422, 1
  br i1 %3487, label %3421, label %3490, !llvm.loop !316

3490:                                             ; preds = %3480, %3417
  %3491 = phi i32 [ %3420, %3417 ], [ %3486, %3480 ]
  %3492 = sext i32 %3491 to i64
  %3493 = getelementptr inbounds i32, ptr %3087, i64 %3492
  %3494 = load i32, ptr %3493, align 4, !tbaa !5
  %3495 = sext i32 %3494 to i64
  %3496 = icmp sgt i64 %3418, %3495
  br i1 %3496, label %3497, label %3498

3497:                                             ; preds = %3490
  store i64 %3495, ptr %3089, align 8, !tbaa !120
  br label %3498

3498:                                             ; preds = %3497, %3490
  %3499 = phi i64 [ %3495, %3497 ], [ %3418, %3490 ]
  %3500 = add nuw nsw i32 %3419, 1
  br i1 %3411, label %3501, label %3548

3501:                                             ; preds = %3498
  %3502 = load i32, ptr %4, align 4, !tbaa !5
  %3503 = load i32, ptr %12, align 4, !tbaa !5
  %3504 = add nsw i32 %3503, -1
  %3505 = icmp slt i32 %3502, %3504
  br i1 %3505, label %3525, label %3506

3506:                                             ; preds = %3501
  %3507 = icmp eq i32 %3502, %3504
  br i1 %3507, label %3508, label %3541

3508:                                             ; preds = %3506
  store i32 0, ptr %4, align 4, !tbaa !5
  %3509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3509, ptr %6, align 4, !tbaa !5
  br i1 %3416, label %3548, label %3510

3510:                                             ; preds = %3508, %3535
  %3511 = phi i64 [ %3539, %3535 ], [ 1, %3508 ]
  %3512 = getelementptr inbounds i32, ptr %4, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %12, i64 %3511
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = add nsw i32 %3515, -1
  %3517 = icmp slt i32 %3513, %3516
  br i1 %3517, label %3518, label %3533

3518:                                             ; preds = %3510
  br i1 %3505, label %3525, label %3519

3519:                                             ; preds = %3518
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3511
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3523 = load i32, ptr %3522, align 4, !tbaa !5
  %3524 = add nsw i32 %3523, %3521
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  br label %3543

3525:                                             ; preds = %3501, %3518
  %3526 = phi i32 [ %3513, %3518 ], [ %3502, %3501 ]
  %3527 = phi ptr [ %3512, %3518 ], [ %4, %3501 ]
  %3528 = phi i64 [ %3511, %3518 ], [ 0, %3501 ]
  %3529 = add nsw i32 %3526, 1
  store i32 %3529, ptr %3527, align 4, !tbaa !5
  %3530 = getelementptr inbounds i32, ptr %7, i64 %3528
  %3531 = load i32, ptr %3530, align 4, !tbaa !5
  %3532 = getelementptr inbounds i32, ptr %6, i64 %3528
  br label %3543

3533:                                             ; preds = %3510
  %3534 = icmp eq i32 %3513, %3516
  br i1 %3534, label %3535, label %3541

3535:                                             ; preds = %3533
  store i32 0, ptr %3512, align 4, !tbaa !5
  %3536 = getelementptr inbounds i32, ptr %8, i64 %3511
  %3537 = load i32, ptr %3536, align 4, !tbaa !5
  %3538 = getelementptr inbounds i32, ptr %6, i64 %3511
  store i32 %3537, ptr %3538, align 4, !tbaa !5
  %3539 = add nuw nsw i64 %3511, 1
  %3540 = icmp eq i64 %3539, %3414
  br i1 %3540, label %3548, label %3510, !llvm.loop !317

3541:                                             ; preds = %3506, %3533
  %3542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3543:                                             ; preds = %3519, %3525
  %3544 = phi ptr [ %3532, %3525 ], [ %3512, %3519 ]
  %3545 = phi i32 [ %3531, %3525 ], [ 1, %3519 ]
  %3546 = load i32, ptr %3544, align 4, !tbaa !5
  %3547 = add nsw i32 %3546, %3545
  store i32 %3547, ptr %3544, align 4, !tbaa !5
  br label %3548

3548:                                             ; preds = %3535, %3543, %3508, %3498
  %3549 = icmp eq i32 %3500, %5
  br i1 %3549, label %5513, label %3417, !llvm.loop !318

3550:                                             ; preds = %3400, %3688
  %3551 = phi i64 [ %3091, %3400 ], [ %3636, %3688 ]
  %3552 = phi i32 [ 0, %3400 ], [ %3637, %3688 ]
  %3553 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3401, label %3554, label %3623

3554:                                             ; preds = %3550, %3613
  %3555 = phi i32 [ %3622, %3613 ], [ 0, %3550 ]
  %3556 = phi i64 [ %3564, %3613 ], [ %3405, %3550 ]
  %3557 = phi i64 [ %3621, %3613 ], [ %3404, %3550 ]
  %3558 = phi i32 [ %3619, %3613 ], [ %3553, %3550 ]
  %3559 = sub i32 %3403, %3555
  %3560 = tail call i32 @llvm.smin.i32(i32 %3559, i32 0)
  %3561 = sub i32 %3559, %3560
  %3562 = zext i32 %3561 to i64
  %3563 = add nuw nsw i64 %3562, 1
  %3564 = add nsw i64 %3556, -1
  %3565 = icmp ult i32 %3561, 31
  br i1 %3565, label %3601, label %3566

3566:                                             ; preds = %3554
  %3567 = and i64 %3563, 8589934560
  %3568 = sub i64 %3557, %3567
  br label %3569

3569:                                             ; preds = %3569, %3566
  %3570 = phi i64 [ 0, %3566 ], [ %3593, %3569 ]
  %3571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3589, %3569 ]
  %3572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3590, %3569 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3591, %3569 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3592, %3569 ]
  %3575 = sub i64 %3557, %3570
  %3576 = getelementptr inbounds i32, ptr %11, i64 %3575
  %3577 = getelementptr inbounds i32, ptr %3576, i64 -7
  %3578 = load <8 x i32>, ptr %3577, align 4, !tbaa !5
  %3579 = shufflevector <8 x i32> %3578, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3580 = getelementptr inbounds i32, ptr %3576, i64 -15
  %3581 = load <8 x i32>, ptr %3580, align 4, !tbaa !5
  %3582 = shufflevector <8 x i32> %3581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3583 = getelementptr inbounds i32, ptr %3576, i64 -23
  %3584 = load <8 x i32>, ptr %3583, align 4, !tbaa !5
  %3585 = shufflevector <8 x i32> %3584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3586 = getelementptr inbounds i32, ptr %3576, i64 -31
  %3587 = load <8 x i32>, ptr %3586, align 4, !tbaa !5
  %3588 = shufflevector <8 x i32> %3587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3589 = mul <8 x i32> %3579, %3571
  %3590 = mul <8 x i32> %3582, %3572
  %3591 = mul <8 x i32> %3585, %3573
  %3592 = mul <8 x i32> %3588, %3574
  %3593 = add nuw i64 %3570, 32
  %3594 = icmp eq i64 %3593, %3567
  br i1 %3594, label %3595, label %3569, !llvm.loop !319

3595:                                             ; preds = %3569
  %3596 = mul <8 x i32> %3590, %3589
  %3597 = mul <8 x i32> %3591, %3596
  %3598 = mul <8 x i32> %3592, %3597
  %3599 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3598)
  %3600 = icmp eq i64 %3563, %3567
  br i1 %3600, label %3613, label %3601

3601:                                             ; preds = %3554, %3595
  %3602 = phi i64 [ %3557, %3554 ], [ %3568, %3595 ]
  %3603 = phi i32 [ 1, %3554 ], [ %3599, %3595 ]
  br label %3604

3604:                                             ; preds = %3601, %3604
  %3605 = phi i64 [ %3610, %3604 ], [ %3602, %3601 ]
  %3606 = phi i32 [ %3609, %3604 ], [ %3603, %3601 ]
  %3607 = getelementptr inbounds i32, ptr %11, i64 %3605
  %3608 = load i32, ptr %3607, align 4, !tbaa !5
  %3609 = mul nsw i32 %3608, %3606
  %3610 = add nsw i64 %3605, -1
  %3611 = trunc i64 %3605 to i32
  %3612 = icmp sgt i32 %3611, 0
  br i1 %3612, label %3604, label %3613, !llvm.loop !320

3613:                                             ; preds = %3604, %3595
  %3614 = phi i32 [ %3599, %3595 ], [ %3609, %3604 ]
  %3615 = and i64 %3564, 4294967295
  %3616 = getelementptr inbounds i32, ptr %6, i64 %3615
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = mul nsw i32 %3617, %3614
  %3619 = add nsw i32 %3618, %3558
  %3620 = icmp sgt i64 %3556, 2
  %3621 = add nsw i64 %3557, -1
  %3622 = add i32 %3555, 1
  br i1 %3620, label %3554, label %3623, !llvm.loop !321

3623:                                             ; preds = %3613, %3550
  %3624 = phi i32 [ %3553, %3550 ], [ %3619, %3613 ]
  %3625 = icmp slt i32 %3624, %5
  br i1 %3625, label %3628, label %3626

3626:                                             ; preds = %3623
  %3627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3628:                                             ; preds = %3623
  %3629 = sext i32 %3624 to i64
  %3630 = getelementptr inbounds i32, ptr %3087, i64 %3629
  %3631 = load i32, ptr %3630, align 4, !tbaa !5
  %3632 = sext i32 %3631 to i64
  %3633 = icmp sgt i64 %3551, %3632
  br i1 %3633, label %3634, label %3635

3634:                                             ; preds = %3628
  store i64 %3632, ptr %3089, align 8, !tbaa !120
  br label %3635

3635:                                             ; preds = %3634, %3628
  %3636 = phi i64 [ %3632, %3634 ], [ %3551, %3628 ]
  %3637 = add nuw nsw i32 %3552, 1
  br i1 %3402, label %3638, label %3688

3638:                                             ; preds = %3635
  %3639 = load i32, ptr %4, align 4, !tbaa !5
  %3640 = load i32, ptr %12, align 4, !tbaa !5
  %3641 = add nsw i32 %3640, -1
  %3642 = icmp slt i32 %3639, %3641
  br i1 %3642, label %3665, label %3643

3643:                                             ; preds = %3638
  %3644 = icmp eq i32 %3639, %3641
  br i1 %3644, label %3645, label %3681

3645:                                             ; preds = %3643
  store i32 0, ptr %4, align 4, !tbaa !5
  %3646 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3646, ptr %6, align 4, !tbaa !5
  br i1 %3407, label %3688, label %3647

3647:                                             ; preds = %3645, %3675
  %3648 = phi i64 [ %3679, %3675 ], [ 1, %3645 ]
  %3649 = getelementptr inbounds i32, ptr %4, i64 %3648
  %3650 = load i32, ptr %3649, align 4, !tbaa !5
  %3651 = getelementptr inbounds i32, ptr %12, i64 %3648
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, -1
  %3654 = icmp slt i32 %3650, %3653
  br i1 %3654, label %3655, label %3673

3655:                                             ; preds = %3647
  br i1 %3642, label %3665, label %3656

3656:                                             ; preds = %3655
  %3657 = shl i64 %3648, 32
  %3658 = add i64 %3657, -4294967296
  %3659 = ashr exact i64 %3658, 32
  %3660 = getelementptr inbounds i32, ptr %7, i64 %3659
  %3661 = load i32, ptr %3660, align 4, !tbaa !5
  %3662 = getelementptr inbounds i32, ptr %6, i64 %3648
  %3663 = load i32, ptr %3662, align 4, !tbaa !5
  %3664 = add nsw i32 %3663, %3661
  store i32 %3664, ptr %3662, align 4, !tbaa !5
  br label %3683

3665:                                             ; preds = %3638, %3655
  %3666 = phi i32 [ %3650, %3655 ], [ %3639, %3638 ]
  %3667 = phi ptr [ %3649, %3655 ], [ %4, %3638 ]
  %3668 = phi i64 [ %3648, %3655 ], [ 0, %3638 ]
  %3669 = add nsw i32 %3666, 1
  store i32 %3669, ptr %3667, align 4, !tbaa !5
  %3670 = getelementptr inbounds i32, ptr %7, i64 %3668
  %3671 = load i32, ptr %3670, align 4, !tbaa !5
  %3672 = getelementptr inbounds i32, ptr %6, i64 %3668
  br label %3683

3673:                                             ; preds = %3647
  %3674 = icmp eq i32 %3650, %3653
  br i1 %3674, label %3675, label %3681

3675:                                             ; preds = %3673
  store i32 0, ptr %3649, align 4, !tbaa !5
  %3676 = getelementptr inbounds i32, ptr %8, i64 %3648
  %3677 = load i32, ptr %3676, align 4, !tbaa !5
  %3678 = getelementptr inbounds i32, ptr %6, i64 %3648
  store i32 %3677, ptr %3678, align 4, !tbaa !5
  %3679 = add nuw nsw i64 %3648, 1
  %3680 = icmp eq i64 %3679, %3405
  br i1 %3680, label %3688, label %3647, !llvm.loop !322

3681:                                             ; preds = %3643, %3673
  %3682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3683:                                             ; preds = %3656, %3665
  %3684 = phi ptr [ %3672, %3665 ], [ %3649, %3656 ]
  %3685 = phi i32 [ %3671, %3665 ], [ 1, %3656 ]
  %3686 = load i32, ptr %3684, align 4, !tbaa !5
  %3687 = add nsw i32 %3686, %3685
  store i32 %3687, ptr %3684, align 4, !tbaa !5
  br label %3688

3688:                                             ; preds = %3675, %3683, %3645, %3635
  %3689 = icmp eq i32 %3637, %5
  br i1 %3689, label %5513, label %3550, !llvm.loop !323

3690:                                             ; preds = %3093
  %3691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 314, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3692:                                             ; preds = %18
  %3693 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3694 = load ptr, ptr %3693, align 8, !tbaa !9
  %3695 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3696 = load ptr, ptr %3695, align 8, !tbaa !9
  %3697 = load i32, ptr %3694, align 4, !tbaa !5
  %3698 = sitofp i32 %3697 to double
  store double %3698, ptr %3696, align 8, !tbaa !18
  %3699 = icmp eq i32 %13, 0
  br i1 %3699, label %5513, label %3700

3700:                                             ; preds = %3692
  switch i32 %1, label %4297 [
    i32 1, label %3701
    i32 0, label %4001
  ]

3701:                                             ; preds = %3700
  %3702 = getelementptr inbounds i32, ptr %3, i64 %19
  %3703 = load i32, ptr %3702, align 4, !tbaa !5
  %3704 = icmp eq i32 %3703, 0
  %3705 = icmp sgt i32 %5, 0
  br i1 %3704, label %3715, label %3706

3706:                                             ; preds = %3701
  br i1 %3705, label %3707, label %5513

3707:                                             ; preds = %3706
  %3708 = icmp sgt i32 %13, 1
  %3709 = icmp sgt i32 %13, 0
  %3710 = add i32 %13, -2
  %3711 = zext i32 %3710 to i64
  %3712 = zext i32 %13 to i64
  %3713 = add nuw i32 %5, 1
  %3714 = icmp eq i32 %13, 1
  br label %3861

3715:                                             ; preds = %3701
  br i1 %3705, label %3716, label %5513

3716:                                             ; preds = %3715
  %3717 = icmp sgt i32 %13, 1
  %3718 = icmp sgt i32 %13, 0
  %3719 = add i32 %13, -2
  %3720 = zext i32 %3719 to i64
  %3721 = zext i32 %13 to i64
  %3722 = add nuw i32 %5, 1
  %3723 = icmp eq i32 %13, 1
  br label %3724

3724:                                             ; preds = %3716, %3859
  %3725 = phi double [ %3698, %3716 ], [ %3810, %3859 ]
  %3726 = phi i32 [ 0, %3716 ], [ %3811, %3859 ]
  %3727 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3717, label %3728, label %3797

3728:                                             ; preds = %3724, %3787
  %3729 = phi i32 [ %3796, %3787 ], [ 0, %3724 ]
  %3730 = phi i64 [ %3738, %3787 ], [ %3721, %3724 ]
  %3731 = phi i64 [ %3795, %3787 ], [ %3720, %3724 ]
  %3732 = phi i32 [ %3793, %3787 ], [ %3727, %3724 ]
  %3733 = sub i32 %3719, %3729
  %3734 = tail call i32 @llvm.smin.i32(i32 %3733, i32 0)
  %3735 = sub i32 %3733, %3734
  %3736 = zext i32 %3735 to i64
  %3737 = add nuw nsw i64 %3736, 1
  %3738 = add nsw i64 %3730, -1
  %3739 = icmp ult i32 %3735, 31
  br i1 %3739, label %3775, label %3740

3740:                                             ; preds = %3728
  %3741 = and i64 %3737, 8589934560
  %3742 = sub i64 %3731, %3741
  br label %3743

3743:                                             ; preds = %3743, %3740
  %3744 = phi i64 [ 0, %3740 ], [ %3767, %3743 ]
  %3745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3763, %3743 ]
  %3746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3764, %3743 ]
  %3747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3765, %3743 ]
  %3748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3766, %3743 ]
  %3749 = sub i64 %3731, %3744
  %3750 = getelementptr inbounds i32, ptr %9, i64 %3749
  %3751 = getelementptr inbounds i32, ptr %3750, i64 -7
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !5
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = getelementptr inbounds i32, ptr %3750, i64 -15
  %3755 = load <8 x i32>, ptr %3754, align 4, !tbaa !5
  %3756 = shufflevector <8 x i32> %3755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3757 = getelementptr inbounds i32, ptr %3750, i64 -23
  %3758 = load <8 x i32>, ptr %3757, align 4, !tbaa !5
  %3759 = shufflevector <8 x i32> %3758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3760 = getelementptr inbounds i32, ptr %3750, i64 -31
  %3761 = load <8 x i32>, ptr %3760, align 4, !tbaa !5
  %3762 = shufflevector <8 x i32> %3761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3763 = mul <8 x i32> %3753, %3745
  %3764 = mul <8 x i32> %3756, %3746
  %3765 = mul <8 x i32> %3759, %3747
  %3766 = mul <8 x i32> %3762, %3748
  %3767 = add nuw i64 %3744, 32
  %3768 = icmp eq i64 %3767, %3741
  br i1 %3768, label %3769, label %3743, !llvm.loop !324

3769:                                             ; preds = %3743
  %3770 = mul <8 x i32> %3764, %3763
  %3771 = mul <8 x i32> %3765, %3770
  %3772 = mul <8 x i32> %3766, %3771
  %3773 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3772)
  %3774 = icmp eq i64 %3737, %3741
  br i1 %3774, label %3787, label %3775

3775:                                             ; preds = %3728, %3769
  %3776 = phi i64 [ %3731, %3728 ], [ %3742, %3769 ]
  %3777 = phi i32 [ 1, %3728 ], [ %3773, %3769 ]
  br label %3778

3778:                                             ; preds = %3775, %3778
  %3779 = phi i64 [ %3784, %3778 ], [ %3776, %3775 ]
  %3780 = phi i32 [ %3783, %3778 ], [ %3777, %3775 ]
  %3781 = getelementptr inbounds i32, ptr %9, i64 %3779
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = mul nsw i32 %3782, %3780
  %3784 = add nsw i64 %3779, -1
  %3785 = trunc i64 %3779 to i32
  %3786 = icmp sgt i32 %3785, 0
  br i1 %3786, label %3778, label %3787, !llvm.loop !325

3787:                                             ; preds = %3778, %3769
  %3788 = phi i32 [ %3773, %3769 ], [ %3783, %3778 ]
  %3789 = and i64 %3738, 4294967295
  %3790 = getelementptr inbounds i32, ptr %6, i64 %3789
  %3791 = load i32, ptr %3790, align 4, !tbaa !5
  %3792 = mul nsw i32 %3791, %3788
  %3793 = add nsw i32 %3792, %3732
  %3794 = icmp sgt i64 %3730, 2
  %3795 = add nsw i64 %3731, -1
  %3796 = add i32 %3729, 1
  br i1 %3794, label %3728, label %3797, !llvm.loop !326

3797:                                             ; preds = %3787, %3724
  %3798 = phi i32 [ %3727, %3724 ], [ %3793, %3787 ]
  %3799 = sext i32 %3798 to i64
  %3800 = getelementptr inbounds double, ptr %2, i64 %3799
  %3801 = load double, ptr %3800, align 8, !tbaa !18
  %3802 = getelementptr inbounds i32, ptr %3694, i64 %3799
  %3803 = load i32, ptr %3802, align 4, !tbaa !5
  %3804 = sitofp i32 %3803 to double
  %3805 = fcmp fast one double %3801, 0.000000e+00
  %3806 = fcmp fast ogt double %3725, %3804
  %3807 = select i1 %3805, i1 %3806, i1 false
  br i1 %3807, label %3808, label %3809

3808:                                             ; preds = %3797
  store double %3804, ptr %3696, align 8, !tbaa !18
  br label %3809

3809:                                             ; preds = %3808, %3797
  %3810 = phi double [ %3804, %3808 ], [ %3725, %3797 ]
  %3811 = add nuw nsw i32 %3726, 1
  br i1 %3718, label %3812, label %3859

3812:                                             ; preds = %3809
  %3813 = load i32, ptr %4, align 4, !tbaa !5
  %3814 = load i32, ptr %12, align 4, !tbaa !5
  %3815 = add nsw i32 %3814, -1
  %3816 = icmp slt i32 %3813, %3815
  br i1 %3816, label %3836, label %3817

3817:                                             ; preds = %3812
  %3818 = icmp eq i32 %3813, %3815
  br i1 %3818, label %3819, label %3852

3819:                                             ; preds = %3817
  store i32 0, ptr %4, align 4, !tbaa !5
  %3820 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3820, ptr %6, align 4, !tbaa !5
  br i1 %3723, label %3859, label %3821

3821:                                             ; preds = %3819, %3846
  %3822 = phi i64 [ %3850, %3846 ], [ 1, %3819 ]
  %3823 = getelementptr inbounds i32, ptr %4, i64 %3822
  %3824 = load i32, ptr %3823, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %12, i64 %3822
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = add nsw i32 %3826, -1
  %3828 = icmp slt i32 %3824, %3827
  br i1 %3828, label %3829, label %3844

3829:                                             ; preds = %3821
  br i1 %3816, label %3836, label %3830

3830:                                             ; preds = %3829
  %3831 = getelementptr inbounds i32, ptr %7, i64 %3822
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3822
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = add nsw i32 %3834, %3832
  store i32 %3835, ptr %3833, align 4, !tbaa !5
  br label %3854

3836:                                             ; preds = %3812, %3829
  %3837 = phi i32 [ %3824, %3829 ], [ %3813, %3812 ]
  %3838 = phi ptr [ %3823, %3829 ], [ %4, %3812 ]
  %3839 = phi i64 [ %3822, %3829 ], [ 0, %3812 ]
  %3840 = add nsw i32 %3837, 1
  store i32 %3840, ptr %3838, align 4, !tbaa !5
  %3841 = getelementptr inbounds i32, ptr %7, i64 %3839
  %3842 = load i32, ptr %3841, align 4, !tbaa !5
  %3843 = getelementptr inbounds i32, ptr %6, i64 %3839
  br label %3854

3844:                                             ; preds = %3821
  %3845 = icmp eq i32 %3824, %3827
  br i1 %3845, label %3846, label %3852

3846:                                             ; preds = %3844
  store i32 0, ptr %3823, align 4, !tbaa !5
  %3847 = getelementptr inbounds i32, ptr %8, i64 %3822
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3822
  store i32 %3848, ptr %3849, align 4, !tbaa !5
  %3850 = add nuw nsw i64 %3822, 1
  %3851 = icmp eq i64 %3850, %3721
  br i1 %3851, label %3859, label %3821, !llvm.loop !327

3852:                                             ; preds = %3817, %3844
  %3853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3854:                                             ; preds = %3830, %3836
  %3855 = phi ptr [ %3843, %3836 ], [ %3823, %3830 ]
  %3856 = phi i32 [ %3842, %3836 ], [ 1, %3830 ]
  %3857 = load i32, ptr %3855, align 4, !tbaa !5
  %3858 = add nsw i32 %3857, %3856
  store i32 %3858, ptr %3855, align 4, !tbaa !5
  br label %3859

3859:                                             ; preds = %3846, %3854, %3819, %3809
  %3860 = icmp eq i32 %3811, %5
  br i1 %3860, label %5513, label %3724, !llvm.loop !328

3861:                                             ; preds = %3707, %3999
  %3862 = phi double [ %3698, %3707 ], [ %3947, %3999 ]
  %3863 = phi i32 [ 0, %3707 ], [ %3948, %3999 ]
  %3864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3708, label %3865, label %3934

3865:                                             ; preds = %3861, %3924
  %3866 = phi i32 [ %3933, %3924 ], [ 0, %3861 ]
  %3867 = phi i64 [ %3875, %3924 ], [ %3712, %3861 ]
  %3868 = phi i64 [ %3932, %3924 ], [ %3711, %3861 ]
  %3869 = phi i32 [ %3930, %3924 ], [ %3864, %3861 ]
  %3870 = sub i32 %3710, %3866
  %3871 = tail call i32 @llvm.smin.i32(i32 %3870, i32 0)
  %3872 = sub i32 %3870, %3871
  %3873 = zext i32 %3872 to i64
  %3874 = add nuw nsw i64 %3873, 1
  %3875 = add nsw i64 %3867, -1
  %3876 = icmp ult i32 %3872, 31
  br i1 %3876, label %3912, label %3877

3877:                                             ; preds = %3865
  %3878 = and i64 %3874, 8589934560
  %3879 = sub i64 %3868, %3878
  br label %3880

3880:                                             ; preds = %3880, %3877
  %3881 = phi i64 [ 0, %3877 ], [ %3904, %3880 ]
  %3882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3900, %3880 ]
  %3883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3901, %3880 ]
  %3884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3902, %3880 ]
  %3885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3903, %3880 ]
  %3886 = sub i64 %3868, %3881
  %3887 = getelementptr inbounds i32, ptr %11, i64 %3886
  %3888 = getelementptr inbounds i32, ptr %3887, i64 -7
  %3889 = load <8 x i32>, ptr %3888, align 4, !tbaa !5
  %3890 = shufflevector <8 x i32> %3889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3891 = getelementptr inbounds i32, ptr %3887, i64 -15
  %3892 = load <8 x i32>, ptr %3891, align 4, !tbaa !5
  %3893 = shufflevector <8 x i32> %3892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3894 = getelementptr inbounds i32, ptr %3887, i64 -23
  %3895 = load <8 x i32>, ptr %3894, align 4, !tbaa !5
  %3896 = shufflevector <8 x i32> %3895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3897 = getelementptr inbounds i32, ptr %3887, i64 -31
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = mul <8 x i32> %3890, %3882
  %3901 = mul <8 x i32> %3893, %3883
  %3902 = mul <8 x i32> %3896, %3884
  %3903 = mul <8 x i32> %3899, %3885
  %3904 = add nuw i64 %3881, 32
  %3905 = icmp eq i64 %3904, %3878
  br i1 %3905, label %3906, label %3880, !llvm.loop !329

3906:                                             ; preds = %3880
  %3907 = mul <8 x i32> %3901, %3900
  %3908 = mul <8 x i32> %3902, %3907
  %3909 = mul <8 x i32> %3903, %3908
  %3910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3909)
  %3911 = icmp eq i64 %3874, %3878
  br i1 %3911, label %3924, label %3912

3912:                                             ; preds = %3865, %3906
  %3913 = phi i64 [ %3868, %3865 ], [ %3879, %3906 ]
  %3914 = phi i32 [ 1, %3865 ], [ %3910, %3906 ]
  br label %3915

3915:                                             ; preds = %3912, %3915
  %3916 = phi i64 [ %3921, %3915 ], [ %3913, %3912 ]
  %3917 = phi i32 [ %3920, %3915 ], [ %3914, %3912 ]
  %3918 = getelementptr inbounds i32, ptr %11, i64 %3916
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = mul nsw i32 %3919, %3917
  %3921 = add nsw i64 %3916, -1
  %3922 = trunc i64 %3916 to i32
  %3923 = icmp sgt i32 %3922, 0
  br i1 %3923, label %3915, label %3924, !llvm.loop !330

3924:                                             ; preds = %3915, %3906
  %3925 = phi i32 [ %3910, %3906 ], [ %3920, %3915 ]
  %3926 = and i64 %3875, 4294967295
  %3927 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = mul nsw i32 %3928, %3925
  %3930 = add nsw i32 %3929, %3869
  %3931 = icmp sgt i64 %3867, 2
  %3932 = add nsw i64 %3868, -1
  %3933 = add i32 %3866, 1
  br i1 %3931, label %3865, label %3934, !llvm.loop !331

3934:                                             ; preds = %3924, %3861
  %3935 = phi i32 [ %3864, %3861 ], [ %3930, %3924 ]
  %3936 = icmp slt i32 %3935, %5
  br i1 %3936, label %3939, label %3937

3937:                                             ; preds = %3934
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3939:                                             ; preds = %3934
  %3940 = sext i32 %3935 to i64
  %3941 = getelementptr inbounds i32, ptr %3694, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = sitofp i32 %3942 to double
  %3944 = fcmp fast ogt double %3862, %3943
  br i1 %3944, label %3945, label %3946

3945:                                             ; preds = %3939
  store double %3943, ptr %3696, align 8, !tbaa !18
  br label %3946

3946:                                             ; preds = %3939, %3945
  %3947 = phi double [ %3862, %3939 ], [ %3943, %3945 ]
  %3948 = add nuw nsw i32 %3863, 1
  br i1 %3709, label %3949, label %3999

3949:                                             ; preds = %3946
  %3950 = load i32, ptr %4, align 4, !tbaa !5
  %3951 = load i32, ptr %12, align 4, !tbaa !5
  %3952 = add nsw i32 %3951, -1
  %3953 = icmp slt i32 %3950, %3952
  br i1 %3953, label %3976, label %3954

3954:                                             ; preds = %3949
  %3955 = icmp eq i32 %3950, %3952
  br i1 %3955, label %3956, label %3992

3956:                                             ; preds = %3954
  store i32 0, ptr %4, align 4, !tbaa !5
  %3957 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3957, ptr %6, align 4, !tbaa !5
  br i1 %3714, label %3999, label %3958

3958:                                             ; preds = %3956, %3986
  %3959 = phi i64 [ %3990, %3986 ], [ 1, %3956 ]
  %3960 = getelementptr inbounds i32, ptr %4, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %12, i64 %3959
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, -1
  %3965 = icmp slt i32 %3961, %3964
  br i1 %3965, label %3966, label %3984

3966:                                             ; preds = %3958
  br i1 %3953, label %3976, label %3967

3967:                                             ; preds = %3966
  %3968 = shl i64 %3959, 32
  %3969 = add i64 %3968, -4294967296
  %3970 = ashr exact i64 %3969, 32
  %3971 = getelementptr inbounds i32, ptr %7, i64 %3970
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = getelementptr inbounds i32, ptr %6, i64 %3959
  %3974 = load i32, ptr %3973, align 4, !tbaa !5
  %3975 = add nsw i32 %3974, %3972
  store i32 %3975, ptr %3973, align 4, !tbaa !5
  br label %3994

3976:                                             ; preds = %3949, %3966
  %3977 = phi i32 [ %3961, %3966 ], [ %3950, %3949 ]
  %3978 = phi ptr [ %3960, %3966 ], [ %4, %3949 ]
  %3979 = phi i64 [ %3959, %3966 ], [ 0, %3949 ]
  %3980 = add nsw i32 %3977, 1
  store i32 %3980, ptr %3978, align 4, !tbaa !5
  %3981 = getelementptr inbounds i32, ptr %7, i64 %3979
  %3982 = load i32, ptr %3981, align 4, !tbaa !5
  %3983 = getelementptr inbounds i32, ptr %6, i64 %3979
  br label %3994

3984:                                             ; preds = %3958
  %3985 = icmp eq i32 %3961, %3964
  br i1 %3985, label %3986, label %3992

3986:                                             ; preds = %3984
  store i32 0, ptr %3960, align 4, !tbaa !5
  %3987 = getelementptr inbounds i32, ptr %8, i64 %3959
  %3988 = load i32, ptr %3987, align 4, !tbaa !5
  %3989 = getelementptr inbounds i32, ptr %6, i64 %3959
  store i32 %3988, ptr %3989, align 4, !tbaa !5
  %3990 = add nuw nsw i64 %3959, 1
  %3991 = icmp eq i64 %3990, %3712
  br i1 %3991, label %3999, label %3958, !llvm.loop !332

3992:                                             ; preds = %3954, %3984
  %3993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3994:                                             ; preds = %3967, %3976
  %3995 = phi ptr [ %3983, %3976 ], [ %3960, %3967 ]
  %3996 = phi i32 [ %3982, %3976 ], [ 1, %3967 ]
  %3997 = load i32, ptr %3995, align 4, !tbaa !5
  %3998 = add nsw i32 %3997, %3996
  store i32 %3998, ptr %3995, align 4, !tbaa !5
  br label %3999

3999:                                             ; preds = %3986, %3994, %3956, %3946
  %4000 = icmp eq i32 %3948, %5
  br i1 %4000, label %5513, label %3861, !llvm.loop !333

4001:                                             ; preds = %3700
  %4002 = getelementptr inbounds i32, ptr %3, i64 %19
  %4003 = load i32, ptr %4002, align 4, !tbaa !5
  %4004 = icmp eq i32 %4003, 0
  %4005 = icmp sgt i32 %5, 0
  br i1 %4004, label %4015, label %4006

4006:                                             ; preds = %4001
  br i1 %4005, label %4007, label %5513

4007:                                             ; preds = %4006
  %4008 = icmp sgt i32 %13, 1
  %4009 = icmp sgt i32 %13, 0
  %4010 = add i32 %13, -2
  %4011 = zext i32 %4010 to i64
  %4012 = zext i32 %13 to i64
  %4013 = add nuw i32 %5, 1
  %4014 = icmp eq i32 %13, 1
  br label %4157

4015:                                             ; preds = %4001
  br i1 %4005, label %4016, label %5513

4016:                                             ; preds = %4015
  %4017 = icmp sgt i32 %13, 1
  %4018 = icmp sgt i32 %13, 0
  %4019 = add i32 %13, -2
  %4020 = zext i32 %4019 to i64
  %4021 = zext i32 %13 to i64
  %4022 = add nuw i32 %5, 1
  %4023 = icmp eq i32 %13, 1
  br label %4024

4024:                                             ; preds = %4016, %4155
  %4025 = phi double [ %3698, %4016 ], [ %4106, %4155 ]
  %4026 = phi i32 [ 0, %4016 ], [ %4107, %4155 ]
  %4027 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4017, label %4028, label %4097

4028:                                             ; preds = %4024, %4087
  %4029 = phi i32 [ %4096, %4087 ], [ 0, %4024 ]
  %4030 = phi i64 [ %4038, %4087 ], [ %4021, %4024 ]
  %4031 = phi i64 [ %4095, %4087 ], [ %4020, %4024 ]
  %4032 = phi i32 [ %4093, %4087 ], [ %4027, %4024 ]
  %4033 = sub i32 %4019, %4029
  %4034 = tail call i32 @llvm.smin.i32(i32 %4033, i32 0)
  %4035 = sub i32 %4033, %4034
  %4036 = zext i32 %4035 to i64
  %4037 = add nuw nsw i64 %4036, 1
  %4038 = add nsw i64 %4030, -1
  %4039 = icmp ult i32 %4035, 31
  br i1 %4039, label %4075, label %4040

4040:                                             ; preds = %4028
  %4041 = and i64 %4037, 8589934560
  %4042 = sub i64 %4031, %4041
  br label %4043

4043:                                             ; preds = %4043, %4040
  %4044 = phi i64 [ 0, %4040 ], [ %4067, %4043 ]
  %4045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4063, %4043 ]
  %4046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4064, %4043 ]
  %4047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4065, %4043 ]
  %4048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4066, %4043 ]
  %4049 = sub i64 %4031, %4044
  %4050 = getelementptr inbounds i32, ptr %9, i64 %4049
  %4051 = getelementptr inbounds i32, ptr %4050, i64 -7
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !5
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = getelementptr inbounds i32, ptr %4050, i64 -15
  %4055 = load <8 x i32>, ptr %4054, align 4, !tbaa !5
  %4056 = shufflevector <8 x i32> %4055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4057 = getelementptr inbounds i32, ptr %4050, i64 -23
  %4058 = load <8 x i32>, ptr %4057, align 4, !tbaa !5
  %4059 = shufflevector <8 x i32> %4058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4060 = getelementptr inbounds i32, ptr %4050, i64 -31
  %4061 = load <8 x i32>, ptr %4060, align 4, !tbaa !5
  %4062 = shufflevector <8 x i32> %4061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4063 = mul <8 x i32> %4053, %4045
  %4064 = mul <8 x i32> %4056, %4046
  %4065 = mul <8 x i32> %4059, %4047
  %4066 = mul <8 x i32> %4062, %4048
  %4067 = add nuw i64 %4044, 32
  %4068 = icmp eq i64 %4067, %4041
  br i1 %4068, label %4069, label %4043, !llvm.loop !334

4069:                                             ; preds = %4043
  %4070 = mul <8 x i32> %4064, %4063
  %4071 = mul <8 x i32> %4065, %4070
  %4072 = mul <8 x i32> %4066, %4071
  %4073 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4072)
  %4074 = icmp eq i64 %4037, %4041
  br i1 %4074, label %4087, label %4075

4075:                                             ; preds = %4028, %4069
  %4076 = phi i64 [ %4031, %4028 ], [ %4042, %4069 ]
  %4077 = phi i32 [ 1, %4028 ], [ %4073, %4069 ]
  br label %4078

4078:                                             ; preds = %4075, %4078
  %4079 = phi i64 [ %4084, %4078 ], [ %4076, %4075 ]
  %4080 = phi i32 [ %4083, %4078 ], [ %4077, %4075 ]
  %4081 = getelementptr inbounds i32, ptr %9, i64 %4079
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = mul nsw i32 %4082, %4080
  %4084 = add nsw i64 %4079, -1
  %4085 = trunc i64 %4079 to i32
  %4086 = icmp sgt i32 %4085, 0
  br i1 %4086, label %4078, label %4087, !llvm.loop !335

4087:                                             ; preds = %4078, %4069
  %4088 = phi i32 [ %4073, %4069 ], [ %4083, %4078 ]
  %4089 = and i64 %4038, 4294967295
  %4090 = getelementptr inbounds i32, ptr %6, i64 %4089
  %4091 = load i32, ptr %4090, align 4, !tbaa !5
  %4092 = mul nsw i32 %4091, %4088
  %4093 = add nsw i32 %4092, %4032
  %4094 = icmp sgt i64 %4030, 2
  %4095 = add nsw i64 %4031, -1
  %4096 = add i32 %4029, 1
  br i1 %4094, label %4028, label %4097, !llvm.loop !336

4097:                                             ; preds = %4087, %4024
  %4098 = phi i32 [ %4027, %4024 ], [ %4093, %4087 ]
  %4099 = sext i32 %4098 to i64
  %4100 = getelementptr inbounds i32, ptr %3694, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = sitofp i32 %4101 to double
  %4103 = fcmp fast ogt double %4025, %4102
  br i1 %4103, label %4104, label %4105

4104:                                             ; preds = %4097
  store double %4102, ptr %3696, align 8, !tbaa !18
  br label %4105

4105:                                             ; preds = %4104, %4097
  %4106 = phi double [ %4102, %4104 ], [ %4025, %4097 ]
  %4107 = add nuw nsw i32 %4026, 1
  br i1 %4018, label %4108, label %4155

4108:                                             ; preds = %4105
  %4109 = load i32, ptr %4, align 4, !tbaa !5
  %4110 = load i32, ptr %12, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, -1
  %4112 = icmp slt i32 %4109, %4111
  br i1 %4112, label %4132, label %4113

4113:                                             ; preds = %4108
  %4114 = icmp eq i32 %4109, %4111
  br i1 %4114, label %4115, label %4148

4115:                                             ; preds = %4113
  store i32 0, ptr %4, align 4, !tbaa !5
  %4116 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4116, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4155, label %4117

4117:                                             ; preds = %4115, %4142
  %4118 = phi i64 [ %4146, %4142 ], [ 1, %4115 ]
  %4119 = getelementptr inbounds i32, ptr %4, i64 %4118
  %4120 = load i32, ptr %4119, align 4, !tbaa !5
  %4121 = getelementptr inbounds i32, ptr %12, i64 %4118
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = add nsw i32 %4122, -1
  %4124 = icmp slt i32 %4120, %4123
  br i1 %4124, label %4125, label %4140

4125:                                             ; preds = %4117
  br i1 %4112, label %4132, label %4126

4126:                                             ; preds = %4125
  %4127 = getelementptr inbounds i32, ptr %7, i64 %4118
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = getelementptr inbounds i32, ptr %6, i64 %4118
  %4130 = load i32, ptr %4129, align 4, !tbaa !5
  %4131 = add nsw i32 %4130, %4128
  store i32 %4131, ptr %4129, align 4, !tbaa !5
  br label %4150

4132:                                             ; preds = %4108, %4125
  %4133 = phi i32 [ %4120, %4125 ], [ %4109, %4108 ]
  %4134 = phi ptr [ %4119, %4125 ], [ %4, %4108 ]
  %4135 = phi i64 [ %4118, %4125 ], [ 0, %4108 ]
  %4136 = add nsw i32 %4133, 1
  store i32 %4136, ptr %4134, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %7, i64 %4135
  %4138 = load i32, ptr %4137, align 4, !tbaa !5
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4135
  br label %4150

4140:                                             ; preds = %4117
  %4141 = icmp eq i32 %4120, %4123
  br i1 %4141, label %4142, label %4148

4142:                                             ; preds = %4140
  store i32 0, ptr %4119, align 4, !tbaa !5
  %4143 = getelementptr inbounds i32, ptr %8, i64 %4118
  %4144 = load i32, ptr %4143, align 4, !tbaa !5
  %4145 = getelementptr inbounds i32, ptr %6, i64 %4118
  store i32 %4144, ptr %4145, align 4, !tbaa !5
  %4146 = add nuw nsw i64 %4118, 1
  %4147 = icmp eq i64 %4146, %4021
  br i1 %4147, label %4155, label %4117, !llvm.loop !337

4148:                                             ; preds = %4113, %4140
  %4149 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4150:                                             ; preds = %4126, %4132
  %4151 = phi ptr [ %4139, %4132 ], [ %4119, %4126 ]
  %4152 = phi i32 [ %4138, %4132 ], [ 1, %4126 ]
  %4153 = load i32, ptr %4151, align 4, !tbaa !5
  %4154 = add nsw i32 %4153, %4152
  store i32 %4154, ptr %4151, align 4, !tbaa !5
  br label %4155

4155:                                             ; preds = %4142, %4150, %4115, %4105
  %4156 = icmp eq i32 %4107, %5
  br i1 %4156, label %5513, label %4024, !llvm.loop !338

4157:                                             ; preds = %4007, %4295
  %4158 = phi double [ %3698, %4007 ], [ %4243, %4295 ]
  %4159 = phi i32 [ 0, %4007 ], [ %4244, %4295 ]
  %4160 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4008, label %4161, label %4230

4161:                                             ; preds = %4157, %4220
  %4162 = phi i32 [ %4229, %4220 ], [ 0, %4157 ]
  %4163 = phi i64 [ %4171, %4220 ], [ %4012, %4157 ]
  %4164 = phi i64 [ %4228, %4220 ], [ %4011, %4157 ]
  %4165 = phi i32 [ %4226, %4220 ], [ %4160, %4157 ]
  %4166 = sub i32 %4010, %4162
  %4167 = tail call i32 @llvm.smin.i32(i32 %4166, i32 0)
  %4168 = sub i32 %4166, %4167
  %4169 = zext i32 %4168 to i64
  %4170 = add nuw nsw i64 %4169, 1
  %4171 = add nsw i64 %4163, -1
  %4172 = icmp ult i32 %4168, 31
  br i1 %4172, label %4208, label %4173

4173:                                             ; preds = %4161
  %4174 = and i64 %4170, 8589934560
  %4175 = sub i64 %4164, %4174
  br label %4176

4176:                                             ; preds = %4176, %4173
  %4177 = phi i64 [ 0, %4173 ], [ %4200, %4176 ]
  %4178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4196, %4176 ]
  %4179 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4197, %4176 ]
  %4180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4198, %4176 ]
  %4181 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4199, %4176 ]
  %4182 = sub i64 %4164, %4177
  %4183 = getelementptr inbounds i32, ptr %11, i64 %4182
  %4184 = getelementptr inbounds i32, ptr %4183, i64 -7
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !5
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4183, i64 -15
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !5
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = getelementptr inbounds i32, ptr %4183, i64 -23
  %4191 = load <8 x i32>, ptr %4190, align 4, !tbaa !5
  %4192 = shufflevector <8 x i32> %4191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4193 = getelementptr inbounds i32, ptr %4183, i64 -31
  %4194 = load <8 x i32>, ptr %4193, align 4, !tbaa !5
  %4195 = shufflevector <8 x i32> %4194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4196 = mul <8 x i32> %4186, %4178
  %4197 = mul <8 x i32> %4189, %4179
  %4198 = mul <8 x i32> %4192, %4180
  %4199 = mul <8 x i32> %4195, %4181
  %4200 = add nuw i64 %4177, 32
  %4201 = icmp eq i64 %4200, %4174
  br i1 %4201, label %4202, label %4176, !llvm.loop !339

4202:                                             ; preds = %4176
  %4203 = mul <8 x i32> %4197, %4196
  %4204 = mul <8 x i32> %4198, %4203
  %4205 = mul <8 x i32> %4199, %4204
  %4206 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4205)
  %4207 = icmp eq i64 %4170, %4174
  br i1 %4207, label %4220, label %4208

4208:                                             ; preds = %4161, %4202
  %4209 = phi i64 [ %4164, %4161 ], [ %4175, %4202 ]
  %4210 = phi i32 [ 1, %4161 ], [ %4206, %4202 ]
  br label %4211

4211:                                             ; preds = %4208, %4211
  %4212 = phi i64 [ %4217, %4211 ], [ %4209, %4208 ]
  %4213 = phi i32 [ %4216, %4211 ], [ %4210, %4208 ]
  %4214 = getelementptr inbounds i32, ptr %11, i64 %4212
  %4215 = load i32, ptr %4214, align 4, !tbaa !5
  %4216 = mul nsw i32 %4215, %4213
  %4217 = add nsw i64 %4212, -1
  %4218 = trunc i64 %4212 to i32
  %4219 = icmp sgt i32 %4218, 0
  br i1 %4219, label %4211, label %4220, !llvm.loop !340

4220:                                             ; preds = %4211, %4202
  %4221 = phi i32 [ %4206, %4202 ], [ %4216, %4211 ]
  %4222 = and i64 %4171, 4294967295
  %4223 = getelementptr inbounds i32, ptr %6, i64 %4222
  %4224 = load i32, ptr %4223, align 4, !tbaa !5
  %4225 = mul nsw i32 %4224, %4221
  %4226 = add nsw i32 %4225, %4165
  %4227 = icmp sgt i64 %4163, 2
  %4228 = add nsw i64 %4164, -1
  %4229 = add i32 %4162, 1
  br i1 %4227, label %4161, label %4230, !llvm.loop !341

4230:                                             ; preds = %4220, %4157
  %4231 = phi i32 [ %4160, %4157 ], [ %4226, %4220 ]
  %4232 = icmp slt i32 %4231, %5
  br i1 %4232, label %4235, label %4233

4233:                                             ; preds = %4230
  %4234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4235:                                             ; preds = %4230
  %4236 = sext i32 %4231 to i64
  %4237 = getelementptr inbounds i32, ptr %3694, i64 %4236
  %4238 = load i32, ptr %4237, align 4, !tbaa !5
  %4239 = sitofp i32 %4238 to double
  %4240 = fcmp fast ogt double %4158, %4239
  br i1 %4240, label %4241, label %4242

4241:                                             ; preds = %4235
  store double %4239, ptr %3696, align 8, !tbaa !18
  br label %4242

4242:                                             ; preds = %4241, %4235
  %4243 = phi double [ %4239, %4241 ], [ %4158, %4235 ]
  %4244 = add nuw nsw i32 %4159, 1
  br i1 %4009, label %4245, label %4295

4245:                                             ; preds = %4242
  %4246 = load i32, ptr %4, align 4, !tbaa !5
  %4247 = load i32, ptr %12, align 4, !tbaa !5
  %4248 = add nsw i32 %4247, -1
  %4249 = icmp slt i32 %4246, %4248
  br i1 %4249, label %4272, label %4250

4250:                                             ; preds = %4245
  %4251 = icmp eq i32 %4246, %4248
  br i1 %4251, label %4252, label %4288

4252:                                             ; preds = %4250
  store i32 0, ptr %4, align 4, !tbaa !5
  %4253 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4253, ptr %6, align 4, !tbaa !5
  br i1 %4014, label %4295, label %4254

4254:                                             ; preds = %4252, %4282
  %4255 = phi i64 [ %4286, %4282 ], [ 1, %4252 ]
  %4256 = getelementptr inbounds i32, ptr %4, i64 %4255
  %4257 = load i32, ptr %4256, align 4, !tbaa !5
  %4258 = getelementptr inbounds i32, ptr %12, i64 %4255
  %4259 = load i32, ptr %4258, align 4, !tbaa !5
  %4260 = add nsw i32 %4259, -1
  %4261 = icmp slt i32 %4257, %4260
  br i1 %4261, label %4262, label %4280

4262:                                             ; preds = %4254
  br i1 %4249, label %4272, label %4263

4263:                                             ; preds = %4262
  %4264 = shl i64 %4255, 32
  %4265 = add i64 %4264, -4294967296
  %4266 = ashr exact i64 %4265, 32
  %4267 = getelementptr inbounds i32, ptr %7, i64 %4266
  %4268 = load i32, ptr %4267, align 4, !tbaa !5
  %4269 = getelementptr inbounds i32, ptr %6, i64 %4255
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = add nsw i32 %4270, %4268
  store i32 %4271, ptr %4269, align 4, !tbaa !5
  br label %4290

4272:                                             ; preds = %4245, %4262
  %4273 = phi i32 [ %4257, %4262 ], [ %4246, %4245 ]
  %4274 = phi ptr [ %4256, %4262 ], [ %4, %4245 ]
  %4275 = phi i64 [ %4255, %4262 ], [ 0, %4245 ]
  %4276 = add nsw i32 %4273, 1
  store i32 %4276, ptr %4274, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %7, i64 %4275
  %4278 = load i32, ptr %4277, align 4, !tbaa !5
  %4279 = getelementptr inbounds i32, ptr %6, i64 %4275
  br label %4290

4280:                                             ; preds = %4254
  %4281 = icmp eq i32 %4257, %4260
  br i1 %4281, label %4282, label %4288

4282:                                             ; preds = %4280
  store i32 0, ptr %4256, align 4, !tbaa !5
  %4283 = getelementptr inbounds i32, ptr %8, i64 %4255
  %4284 = load i32, ptr %4283, align 4, !tbaa !5
  %4285 = getelementptr inbounds i32, ptr %6, i64 %4255
  store i32 %4284, ptr %4285, align 4, !tbaa !5
  %4286 = add nuw nsw i64 %4255, 1
  %4287 = icmp eq i64 %4286, %4012
  br i1 %4287, label %4295, label %4254, !llvm.loop !342

4288:                                             ; preds = %4250, %4280
  %4289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4290:                                             ; preds = %4263, %4272
  %4291 = phi ptr [ %4279, %4272 ], [ %4256, %4263 ]
  %4292 = phi i32 [ %4278, %4272 ], [ 1, %4263 ]
  %4293 = load i32, ptr %4291, align 4, !tbaa !5
  %4294 = add nsw i32 %4293, %4292
  store i32 %4294, ptr %4291, align 4, !tbaa !5
  br label %4295

4295:                                             ; preds = %4282, %4290, %4252, %4242
  %4296 = icmp eq i32 %4244, %5
  br i1 %4296, label %5513, label %4157, !llvm.loop !343

4297:                                             ; preds = %3700
  %4298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 318, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4299:                                             ; preds = %18
  %4300 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4301 = load ptr, ptr %4300, align 8, !tbaa !9
  %4302 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4303 = load ptr, ptr %4302, align 8, !tbaa !9
  %4304 = load i32, ptr %4301, align 4, !tbaa !5
  %4305 = sitofp i32 %4304 to float
  store float %4305, ptr %4303, align 4, !tbaa !162
  %4306 = icmp eq i32 %13, 0
  br i1 %4306, label %5513, label %4307

4307:                                             ; preds = %4299
  switch i32 %1, label %4904 [
    i32 1, label %4308
    i32 0, label %4608
  ]

4308:                                             ; preds = %4307
  %4309 = getelementptr inbounds i32, ptr %3, i64 %19
  %4310 = load i32, ptr %4309, align 4, !tbaa !5
  %4311 = icmp eq i32 %4310, 0
  %4312 = icmp sgt i32 %5, 0
  br i1 %4311, label %4322, label %4313

4313:                                             ; preds = %4308
  br i1 %4312, label %4314, label %5513

4314:                                             ; preds = %4313
  %4315 = icmp sgt i32 %13, 1
  %4316 = icmp sgt i32 %13, 0
  %4317 = add i32 %13, -2
  %4318 = zext i32 %4317 to i64
  %4319 = zext i32 %13 to i64
  %4320 = add nuw i32 %5, 1
  %4321 = icmp eq i32 %13, 1
  br label %4468

4322:                                             ; preds = %4308
  br i1 %4312, label %4323, label %5513

4323:                                             ; preds = %4322
  %4324 = icmp sgt i32 %13, 1
  %4325 = icmp sgt i32 %13, 0
  %4326 = add i32 %13, -2
  %4327 = zext i32 %4326 to i64
  %4328 = zext i32 %13 to i64
  %4329 = add nuw i32 %5, 1
  %4330 = icmp eq i32 %13, 1
  br label %4331

4331:                                             ; preds = %4323, %4466
  %4332 = phi float [ %4305, %4323 ], [ %4417, %4466 ]
  %4333 = phi i32 [ 0, %4323 ], [ %4418, %4466 ]
  %4334 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4324, label %4335, label %4404

4335:                                             ; preds = %4331, %4394
  %4336 = phi i32 [ %4403, %4394 ], [ 0, %4331 ]
  %4337 = phi i64 [ %4345, %4394 ], [ %4328, %4331 ]
  %4338 = phi i64 [ %4402, %4394 ], [ %4327, %4331 ]
  %4339 = phi i32 [ %4400, %4394 ], [ %4334, %4331 ]
  %4340 = sub i32 %4326, %4336
  %4341 = tail call i32 @llvm.smin.i32(i32 %4340, i32 0)
  %4342 = sub i32 %4340, %4341
  %4343 = zext i32 %4342 to i64
  %4344 = add nuw nsw i64 %4343, 1
  %4345 = add nsw i64 %4337, -1
  %4346 = icmp ult i32 %4342, 31
  br i1 %4346, label %4382, label %4347

4347:                                             ; preds = %4335
  %4348 = and i64 %4344, 8589934560
  %4349 = sub i64 %4338, %4348
  br label %4350

4350:                                             ; preds = %4350, %4347
  %4351 = phi i64 [ 0, %4347 ], [ %4374, %4350 ]
  %4352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4370, %4350 ]
  %4353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4371, %4350 ]
  %4354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4372, %4350 ]
  %4355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4373, %4350 ]
  %4356 = sub i64 %4338, %4351
  %4357 = getelementptr inbounds i32, ptr %9, i64 %4356
  %4358 = getelementptr inbounds i32, ptr %4357, i64 -7
  %4359 = load <8 x i32>, ptr %4358, align 4, !tbaa !5
  %4360 = shufflevector <8 x i32> %4359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4361 = getelementptr inbounds i32, ptr %4357, i64 -15
  %4362 = load <8 x i32>, ptr %4361, align 4, !tbaa !5
  %4363 = shufflevector <8 x i32> %4362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4364 = getelementptr inbounds i32, ptr %4357, i64 -23
  %4365 = load <8 x i32>, ptr %4364, align 4, !tbaa !5
  %4366 = shufflevector <8 x i32> %4365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4367 = getelementptr inbounds i32, ptr %4357, i64 -31
  %4368 = load <8 x i32>, ptr %4367, align 4, !tbaa !5
  %4369 = shufflevector <8 x i32> %4368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4370 = mul <8 x i32> %4360, %4352
  %4371 = mul <8 x i32> %4363, %4353
  %4372 = mul <8 x i32> %4366, %4354
  %4373 = mul <8 x i32> %4369, %4355
  %4374 = add nuw i64 %4351, 32
  %4375 = icmp eq i64 %4374, %4348
  br i1 %4375, label %4376, label %4350, !llvm.loop !344

4376:                                             ; preds = %4350
  %4377 = mul <8 x i32> %4371, %4370
  %4378 = mul <8 x i32> %4372, %4377
  %4379 = mul <8 x i32> %4373, %4378
  %4380 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4379)
  %4381 = icmp eq i64 %4344, %4348
  br i1 %4381, label %4394, label %4382

4382:                                             ; preds = %4335, %4376
  %4383 = phi i64 [ %4338, %4335 ], [ %4349, %4376 ]
  %4384 = phi i32 [ 1, %4335 ], [ %4380, %4376 ]
  br label %4385

4385:                                             ; preds = %4382, %4385
  %4386 = phi i64 [ %4391, %4385 ], [ %4383, %4382 ]
  %4387 = phi i32 [ %4390, %4385 ], [ %4384, %4382 ]
  %4388 = getelementptr inbounds i32, ptr %9, i64 %4386
  %4389 = load i32, ptr %4388, align 4, !tbaa !5
  %4390 = mul nsw i32 %4389, %4387
  %4391 = add nsw i64 %4386, -1
  %4392 = trunc i64 %4386 to i32
  %4393 = icmp sgt i32 %4392, 0
  br i1 %4393, label %4385, label %4394, !llvm.loop !345

4394:                                             ; preds = %4385, %4376
  %4395 = phi i32 [ %4380, %4376 ], [ %4390, %4385 ]
  %4396 = and i64 %4345, 4294967295
  %4397 = getelementptr inbounds i32, ptr %6, i64 %4396
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = mul nsw i32 %4398, %4395
  %4400 = add nsw i32 %4399, %4339
  %4401 = icmp sgt i64 %4337, 2
  %4402 = add nsw i64 %4338, -1
  %4403 = add i32 %4336, 1
  br i1 %4401, label %4335, label %4404, !llvm.loop !346

4404:                                             ; preds = %4394, %4331
  %4405 = phi i32 [ %4334, %4331 ], [ %4400, %4394 ]
  %4406 = sext i32 %4405 to i64
  %4407 = getelementptr inbounds double, ptr %2, i64 %4406
  %4408 = load double, ptr %4407, align 8, !tbaa !18
  %4409 = getelementptr inbounds i32, ptr %4301, i64 %4406
  %4410 = load i32, ptr %4409, align 4, !tbaa !5
  %4411 = sitofp i32 %4410 to float
  %4412 = fcmp fast one double %4408, 0.000000e+00
  %4413 = fcmp fast ogt float %4332, %4411
  %4414 = select i1 %4412, i1 %4413, i1 false
  br i1 %4414, label %4415, label %4416

4415:                                             ; preds = %4404
  store float %4411, ptr %4303, align 4, !tbaa !162
  br label %4416

4416:                                             ; preds = %4415, %4404
  %4417 = phi float [ %4411, %4415 ], [ %4332, %4404 ]
  %4418 = add nuw nsw i32 %4333, 1
  br i1 %4325, label %4419, label %4466

4419:                                             ; preds = %4416
  %4420 = load i32, ptr %4, align 4, !tbaa !5
  %4421 = load i32, ptr %12, align 4, !tbaa !5
  %4422 = add nsw i32 %4421, -1
  %4423 = icmp slt i32 %4420, %4422
  br i1 %4423, label %4443, label %4424

4424:                                             ; preds = %4419
  %4425 = icmp eq i32 %4420, %4422
  br i1 %4425, label %4426, label %4459

4426:                                             ; preds = %4424
  store i32 0, ptr %4, align 4, !tbaa !5
  %4427 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4427, ptr %6, align 4, !tbaa !5
  br i1 %4330, label %4466, label %4428

4428:                                             ; preds = %4426, %4453
  %4429 = phi i64 [ %4457, %4453 ], [ 1, %4426 ]
  %4430 = getelementptr inbounds i32, ptr %4, i64 %4429
  %4431 = load i32, ptr %4430, align 4, !tbaa !5
  %4432 = getelementptr inbounds i32, ptr %12, i64 %4429
  %4433 = load i32, ptr %4432, align 4, !tbaa !5
  %4434 = add nsw i32 %4433, -1
  %4435 = icmp slt i32 %4431, %4434
  br i1 %4435, label %4436, label %4451

4436:                                             ; preds = %4428
  br i1 %4423, label %4443, label %4437

4437:                                             ; preds = %4436
  %4438 = getelementptr inbounds i32, ptr %7, i64 %4429
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %6, i64 %4429
  %4441 = load i32, ptr %4440, align 4, !tbaa !5
  %4442 = add nsw i32 %4441, %4439
  store i32 %4442, ptr %4440, align 4, !tbaa !5
  br label %4461

4443:                                             ; preds = %4419, %4436
  %4444 = phi i32 [ %4431, %4436 ], [ %4420, %4419 ]
  %4445 = phi ptr [ %4430, %4436 ], [ %4, %4419 ]
  %4446 = phi i64 [ %4429, %4436 ], [ 0, %4419 ]
  %4447 = add nsw i32 %4444, 1
  store i32 %4447, ptr %4445, align 4, !tbaa !5
  %4448 = getelementptr inbounds i32, ptr %7, i64 %4446
  %4449 = load i32, ptr %4448, align 4, !tbaa !5
  %4450 = getelementptr inbounds i32, ptr %6, i64 %4446
  br label %4461

4451:                                             ; preds = %4428
  %4452 = icmp eq i32 %4431, %4434
  br i1 %4452, label %4453, label %4459

4453:                                             ; preds = %4451
  store i32 0, ptr %4430, align 4, !tbaa !5
  %4454 = getelementptr inbounds i32, ptr %8, i64 %4429
  %4455 = load i32, ptr %4454, align 4, !tbaa !5
  %4456 = getelementptr inbounds i32, ptr %6, i64 %4429
  store i32 %4455, ptr %4456, align 4, !tbaa !5
  %4457 = add nuw nsw i64 %4429, 1
  %4458 = icmp eq i64 %4457, %4328
  br i1 %4458, label %4466, label %4428, !llvm.loop !347

4459:                                             ; preds = %4424, %4451
  %4460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4461:                                             ; preds = %4437, %4443
  %4462 = phi ptr [ %4450, %4443 ], [ %4430, %4437 ]
  %4463 = phi i32 [ %4449, %4443 ], [ 1, %4437 ]
  %4464 = load i32, ptr %4462, align 4, !tbaa !5
  %4465 = add nsw i32 %4464, %4463
  store i32 %4465, ptr %4462, align 4, !tbaa !5
  br label %4466

4466:                                             ; preds = %4453, %4461, %4426, %4416
  %4467 = icmp eq i32 %4418, %5
  br i1 %4467, label %5513, label %4331, !llvm.loop !348

4468:                                             ; preds = %4314, %4606
  %4469 = phi float [ %4305, %4314 ], [ %4554, %4606 ]
  %4470 = phi i32 [ 0, %4314 ], [ %4555, %4606 ]
  %4471 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4315, label %4472, label %4541

4472:                                             ; preds = %4468, %4531
  %4473 = phi i32 [ %4540, %4531 ], [ 0, %4468 ]
  %4474 = phi i64 [ %4482, %4531 ], [ %4319, %4468 ]
  %4475 = phi i64 [ %4539, %4531 ], [ %4318, %4468 ]
  %4476 = phi i32 [ %4537, %4531 ], [ %4471, %4468 ]
  %4477 = sub i32 %4317, %4473
  %4478 = tail call i32 @llvm.smin.i32(i32 %4477, i32 0)
  %4479 = sub i32 %4477, %4478
  %4480 = zext i32 %4479 to i64
  %4481 = add nuw nsw i64 %4480, 1
  %4482 = add nsw i64 %4474, -1
  %4483 = icmp ult i32 %4479, 31
  br i1 %4483, label %4519, label %4484

4484:                                             ; preds = %4472
  %4485 = and i64 %4481, 8589934560
  %4486 = sub i64 %4475, %4485
  br label %4487

4487:                                             ; preds = %4487, %4484
  %4488 = phi i64 [ 0, %4484 ], [ %4511, %4487 ]
  %4489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4507, %4487 ]
  %4490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4508, %4487 ]
  %4491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4509, %4487 ]
  %4492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4510, %4487 ]
  %4493 = sub i64 %4475, %4488
  %4494 = getelementptr inbounds i32, ptr %11, i64 %4493
  %4495 = getelementptr inbounds i32, ptr %4494, i64 -7
  %4496 = load <8 x i32>, ptr %4495, align 4, !tbaa !5
  %4497 = shufflevector <8 x i32> %4496, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4498 = getelementptr inbounds i32, ptr %4494, i64 -15
  %4499 = load <8 x i32>, ptr %4498, align 4, !tbaa !5
  %4500 = shufflevector <8 x i32> %4499, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4501 = getelementptr inbounds i32, ptr %4494, i64 -23
  %4502 = load <8 x i32>, ptr %4501, align 4, !tbaa !5
  %4503 = shufflevector <8 x i32> %4502, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4504 = getelementptr inbounds i32, ptr %4494, i64 -31
  %4505 = load <8 x i32>, ptr %4504, align 4, !tbaa !5
  %4506 = shufflevector <8 x i32> %4505, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4507 = mul <8 x i32> %4497, %4489
  %4508 = mul <8 x i32> %4500, %4490
  %4509 = mul <8 x i32> %4503, %4491
  %4510 = mul <8 x i32> %4506, %4492
  %4511 = add nuw i64 %4488, 32
  %4512 = icmp eq i64 %4511, %4485
  br i1 %4512, label %4513, label %4487, !llvm.loop !349

4513:                                             ; preds = %4487
  %4514 = mul <8 x i32> %4508, %4507
  %4515 = mul <8 x i32> %4509, %4514
  %4516 = mul <8 x i32> %4510, %4515
  %4517 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4516)
  %4518 = icmp eq i64 %4481, %4485
  br i1 %4518, label %4531, label %4519

4519:                                             ; preds = %4472, %4513
  %4520 = phi i64 [ %4475, %4472 ], [ %4486, %4513 ]
  %4521 = phi i32 [ 1, %4472 ], [ %4517, %4513 ]
  br label %4522

4522:                                             ; preds = %4519, %4522
  %4523 = phi i64 [ %4528, %4522 ], [ %4520, %4519 ]
  %4524 = phi i32 [ %4527, %4522 ], [ %4521, %4519 ]
  %4525 = getelementptr inbounds i32, ptr %11, i64 %4523
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = mul nsw i32 %4526, %4524
  %4528 = add nsw i64 %4523, -1
  %4529 = trunc i64 %4523 to i32
  %4530 = icmp sgt i32 %4529, 0
  br i1 %4530, label %4522, label %4531, !llvm.loop !350

4531:                                             ; preds = %4522, %4513
  %4532 = phi i32 [ %4517, %4513 ], [ %4527, %4522 ]
  %4533 = and i64 %4482, 4294967295
  %4534 = getelementptr inbounds i32, ptr %6, i64 %4533
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = mul nsw i32 %4535, %4532
  %4537 = add nsw i32 %4536, %4476
  %4538 = icmp sgt i64 %4474, 2
  %4539 = add nsw i64 %4475, -1
  %4540 = add i32 %4473, 1
  br i1 %4538, label %4472, label %4541, !llvm.loop !351

4541:                                             ; preds = %4531, %4468
  %4542 = phi i32 [ %4471, %4468 ], [ %4537, %4531 ]
  %4543 = icmp slt i32 %4542, %5
  br i1 %4543, label %4546, label %4544

4544:                                             ; preds = %4541
  %4545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4546:                                             ; preds = %4541
  %4547 = sext i32 %4542 to i64
  %4548 = getelementptr inbounds i32, ptr %4301, i64 %4547
  %4549 = load i32, ptr %4548, align 4, !tbaa !5
  %4550 = sitofp i32 %4549 to float
  %4551 = fcmp fast ogt float %4469, %4550
  br i1 %4551, label %4552, label %4553

4552:                                             ; preds = %4546
  store float %4550, ptr %4303, align 4, !tbaa !162
  br label %4553

4553:                                             ; preds = %4546, %4552
  %4554 = phi float [ %4469, %4546 ], [ %4550, %4552 ]
  %4555 = add nuw nsw i32 %4470, 1
  br i1 %4316, label %4556, label %4606

4556:                                             ; preds = %4553
  %4557 = load i32, ptr %4, align 4, !tbaa !5
  %4558 = load i32, ptr %12, align 4, !tbaa !5
  %4559 = add nsw i32 %4558, -1
  %4560 = icmp slt i32 %4557, %4559
  br i1 %4560, label %4583, label %4561

4561:                                             ; preds = %4556
  %4562 = icmp eq i32 %4557, %4559
  br i1 %4562, label %4563, label %4599

4563:                                             ; preds = %4561
  store i32 0, ptr %4, align 4, !tbaa !5
  %4564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4564, ptr %6, align 4, !tbaa !5
  br i1 %4321, label %4606, label %4565

4565:                                             ; preds = %4563, %4593
  %4566 = phi i64 [ %4597, %4593 ], [ 1, %4563 ]
  %4567 = getelementptr inbounds i32, ptr %4, i64 %4566
  %4568 = load i32, ptr %4567, align 4, !tbaa !5
  %4569 = getelementptr inbounds i32, ptr %12, i64 %4566
  %4570 = load i32, ptr %4569, align 4, !tbaa !5
  %4571 = add nsw i32 %4570, -1
  %4572 = icmp slt i32 %4568, %4571
  br i1 %4572, label %4573, label %4591

4573:                                             ; preds = %4565
  br i1 %4560, label %4583, label %4574

4574:                                             ; preds = %4573
  %4575 = shl i64 %4566, 32
  %4576 = add i64 %4575, -4294967296
  %4577 = ashr exact i64 %4576, 32
  %4578 = getelementptr inbounds i32, ptr %7, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %6, i64 %4566
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = add nsw i32 %4581, %4579
  store i32 %4582, ptr %4580, align 4, !tbaa !5
  br label %4601

4583:                                             ; preds = %4556, %4573
  %4584 = phi i32 [ %4568, %4573 ], [ %4557, %4556 ]
  %4585 = phi ptr [ %4567, %4573 ], [ %4, %4556 ]
  %4586 = phi i64 [ %4566, %4573 ], [ 0, %4556 ]
  %4587 = add nsw i32 %4584, 1
  store i32 %4587, ptr %4585, align 4, !tbaa !5
  %4588 = getelementptr inbounds i32, ptr %7, i64 %4586
  %4589 = load i32, ptr %4588, align 4, !tbaa !5
  %4590 = getelementptr inbounds i32, ptr %6, i64 %4586
  br label %4601

4591:                                             ; preds = %4565
  %4592 = icmp eq i32 %4568, %4571
  br i1 %4592, label %4593, label %4599

4593:                                             ; preds = %4591
  store i32 0, ptr %4567, align 4, !tbaa !5
  %4594 = getelementptr inbounds i32, ptr %8, i64 %4566
  %4595 = load i32, ptr %4594, align 4, !tbaa !5
  %4596 = getelementptr inbounds i32, ptr %6, i64 %4566
  store i32 %4595, ptr %4596, align 4, !tbaa !5
  %4597 = add nuw nsw i64 %4566, 1
  %4598 = icmp eq i64 %4597, %4319
  br i1 %4598, label %4606, label %4565, !llvm.loop !352

4599:                                             ; preds = %4561, %4591
  %4600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4601:                                             ; preds = %4574, %4583
  %4602 = phi ptr [ %4590, %4583 ], [ %4567, %4574 ]
  %4603 = phi i32 [ %4589, %4583 ], [ 1, %4574 ]
  %4604 = load i32, ptr %4602, align 4, !tbaa !5
  %4605 = add nsw i32 %4604, %4603
  store i32 %4605, ptr %4602, align 4, !tbaa !5
  br label %4606

4606:                                             ; preds = %4593, %4601, %4563, %4553
  %4607 = icmp eq i32 %4555, %5
  br i1 %4607, label %5513, label %4468, !llvm.loop !353

4608:                                             ; preds = %4307
  %4609 = getelementptr inbounds i32, ptr %3, i64 %19
  %4610 = load i32, ptr %4609, align 4, !tbaa !5
  %4611 = icmp eq i32 %4610, 0
  %4612 = icmp sgt i32 %5, 0
  br i1 %4611, label %4622, label %4613

4613:                                             ; preds = %4608
  br i1 %4612, label %4614, label %5513

4614:                                             ; preds = %4613
  %4615 = icmp sgt i32 %13, 1
  %4616 = icmp sgt i32 %13, 0
  %4617 = add i32 %13, -2
  %4618 = zext i32 %4617 to i64
  %4619 = zext i32 %13 to i64
  %4620 = add nuw i32 %5, 1
  %4621 = icmp eq i32 %13, 1
  br label %4764

4622:                                             ; preds = %4608
  br i1 %4612, label %4623, label %5513

4623:                                             ; preds = %4622
  %4624 = icmp sgt i32 %13, 1
  %4625 = icmp sgt i32 %13, 0
  %4626 = add i32 %13, -2
  %4627 = zext i32 %4626 to i64
  %4628 = zext i32 %13 to i64
  %4629 = add nuw i32 %5, 1
  %4630 = icmp eq i32 %13, 1
  br label %4631

4631:                                             ; preds = %4623, %4762
  %4632 = phi float [ %4305, %4623 ], [ %4713, %4762 ]
  %4633 = phi i32 [ 0, %4623 ], [ %4714, %4762 ]
  %4634 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4624, label %4635, label %4704

4635:                                             ; preds = %4631, %4694
  %4636 = phi i32 [ %4703, %4694 ], [ 0, %4631 ]
  %4637 = phi i64 [ %4645, %4694 ], [ %4628, %4631 ]
  %4638 = phi i64 [ %4702, %4694 ], [ %4627, %4631 ]
  %4639 = phi i32 [ %4700, %4694 ], [ %4634, %4631 ]
  %4640 = sub i32 %4626, %4636
  %4641 = tail call i32 @llvm.smin.i32(i32 %4640, i32 0)
  %4642 = sub i32 %4640, %4641
  %4643 = zext i32 %4642 to i64
  %4644 = add nuw nsw i64 %4643, 1
  %4645 = add nsw i64 %4637, -1
  %4646 = icmp ult i32 %4642, 31
  br i1 %4646, label %4682, label %4647

4647:                                             ; preds = %4635
  %4648 = and i64 %4644, 8589934560
  %4649 = sub i64 %4638, %4648
  br label %4650

4650:                                             ; preds = %4650, %4647
  %4651 = phi i64 [ 0, %4647 ], [ %4674, %4650 ]
  %4652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4670, %4650 ]
  %4653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4671, %4650 ]
  %4654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4672, %4650 ]
  %4655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4673, %4650 ]
  %4656 = sub i64 %4638, %4651
  %4657 = getelementptr inbounds i32, ptr %9, i64 %4656
  %4658 = getelementptr inbounds i32, ptr %4657, i64 -7
  %4659 = load <8 x i32>, ptr %4658, align 4, !tbaa !5
  %4660 = shufflevector <8 x i32> %4659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4661 = getelementptr inbounds i32, ptr %4657, i64 -15
  %4662 = load <8 x i32>, ptr %4661, align 4, !tbaa !5
  %4663 = shufflevector <8 x i32> %4662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4664 = getelementptr inbounds i32, ptr %4657, i64 -23
  %4665 = load <8 x i32>, ptr %4664, align 4, !tbaa !5
  %4666 = shufflevector <8 x i32> %4665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4667 = getelementptr inbounds i32, ptr %4657, i64 -31
  %4668 = load <8 x i32>, ptr %4667, align 4, !tbaa !5
  %4669 = shufflevector <8 x i32> %4668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4670 = mul <8 x i32> %4660, %4652
  %4671 = mul <8 x i32> %4663, %4653
  %4672 = mul <8 x i32> %4666, %4654
  %4673 = mul <8 x i32> %4669, %4655
  %4674 = add nuw i64 %4651, 32
  %4675 = icmp eq i64 %4674, %4648
  br i1 %4675, label %4676, label %4650, !llvm.loop !354

4676:                                             ; preds = %4650
  %4677 = mul <8 x i32> %4671, %4670
  %4678 = mul <8 x i32> %4672, %4677
  %4679 = mul <8 x i32> %4673, %4678
  %4680 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4679)
  %4681 = icmp eq i64 %4644, %4648
  br i1 %4681, label %4694, label %4682

4682:                                             ; preds = %4635, %4676
  %4683 = phi i64 [ %4638, %4635 ], [ %4649, %4676 ]
  %4684 = phi i32 [ 1, %4635 ], [ %4680, %4676 ]
  br label %4685

4685:                                             ; preds = %4682, %4685
  %4686 = phi i64 [ %4691, %4685 ], [ %4683, %4682 ]
  %4687 = phi i32 [ %4690, %4685 ], [ %4684, %4682 ]
  %4688 = getelementptr inbounds i32, ptr %9, i64 %4686
  %4689 = load i32, ptr %4688, align 4, !tbaa !5
  %4690 = mul nsw i32 %4689, %4687
  %4691 = add nsw i64 %4686, -1
  %4692 = trunc i64 %4686 to i32
  %4693 = icmp sgt i32 %4692, 0
  br i1 %4693, label %4685, label %4694, !llvm.loop !355

4694:                                             ; preds = %4685, %4676
  %4695 = phi i32 [ %4680, %4676 ], [ %4690, %4685 ]
  %4696 = and i64 %4645, 4294967295
  %4697 = getelementptr inbounds i32, ptr %6, i64 %4696
  %4698 = load i32, ptr %4697, align 4, !tbaa !5
  %4699 = mul nsw i32 %4698, %4695
  %4700 = add nsw i32 %4699, %4639
  %4701 = icmp sgt i64 %4637, 2
  %4702 = add nsw i64 %4638, -1
  %4703 = add i32 %4636, 1
  br i1 %4701, label %4635, label %4704, !llvm.loop !356

4704:                                             ; preds = %4694, %4631
  %4705 = phi i32 [ %4634, %4631 ], [ %4700, %4694 ]
  %4706 = sext i32 %4705 to i64
  %4707 = getelementptr inbounds i32, ptr %4301, i64 %4706
  %4708 = load i32, ptr %4707, align 4, !tbaa !5
  %4709 = sitofp i32 %4708 to float
  %4710 = fcmp fast ogt float %4632, %4709
  br i1 %4710, label %4711, label %4712

4711:                                             ; preds = %4704
  store float %4709, ptr %4303, align 4, !tbaa !162
  br label %4712

4712:                                             ; preds = %4711, %4704
  %4713 = phi float [ %4709, %4711 ], [ %4632, %4704 ]
  %4714 = add nuw nsw i32 %4633, 1
  br i1 %4625, label %4715, label %4762

4715:                                             ; preds = %4712
  %4716 = load i32, ptr %4, align 4, !tbaa !5
  %4717 = load i32, ptr %12, align 4, !tbaa !5
  %4718 = add nsw i32 %4717, -1
  %4719 = icmp slt i32 %4716, %4718
  br i1 %4719, label %4739, label %4720

4720:                                             ; preds = %4715
  %4721 = icmp eq i32 %4716, %4718
  br i1 %4721, label %4722, label %4755

4722:                                             ; preds = %4720
  store i32 0, ptr %4, align 4, !tbaa !5
  %4723 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4723, ptr %6, align 4, !tbaa !5
  br i1 %4630, label %4762, label %4724

4724:                                             ; preds = %4722, %4749
  %4725 = phi i64 [ %4753, %4749 ], [ 1, %4722 ]
  %4726 = getelementptr inbounds i32, ptr %4, i64 %4725
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %12, i64 %4725
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = add nsw i32 %4729, -1
  %4731 = icmp slt i32 %4727, %4730
  br i1 %4731, label %4732, label %4747

4732:                                             ; preds = %4724
  br i1 %4719, label %4739, label %4733

4733:                                             ; preds = %4732
  %4734 = getelementptr inbounds i32, ptr %7, i64 %4725
  %4735 = load i32, ptr %4734, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %6, i64 %4725
  %4737 = load i32, ptr %4736, align 4, !tbaa !5
  %4738 = add nsw i32 %4737, %4735
  store i32 %4738, ptr %4736, align 4, !tbaa !5
  br label %4757

4739:                                             ; preds = %4715, %4732
  %4740 = phi i32 [ %4727, %4732 ], [ %4716, %4715 ]
  %4741 = phi ptr [ %4726, %4732 ], [ %4, %4715 ]
  %4742 = phi i64 [ %4725, %4732 ], [ 0, %4715 ]
  %4743 = add nsw i32 %4740, 1
  store i32 %4743, ptr %4741, align 4, !tbaa !5
  %4744 = getelementptr inbounds i32, ptr %7, i64 %4742
  %4745 = load i32, ptr %4744, align 4, !tbaa !5
  %4746 = getelementptr inbounds i32, ptr %6, i64 %4742
  br label %4757

4747:                                             ; preds = %4724
  %4748 = icmp eq i32 %4727, %4730
  br i1 %4748, label %4749, label %4755

4749:                                             ; preds = %4747
  store i32 0, ptr %4726, align 4, !tbaa !5
  %4750 = getelementptr inbounds i32, ptr %8, i64 %4725
  %4751 = load i32, ptr %4750, align 4, !tbaa !5
  %4752 = getelementptr inbounds i32, ptr %6, i64 %4725
  store i32 %4751, ptr %4752, align 4, !tbaa !5
  %4753 = add nuw nsw i64 %4725, 1
  %4754 = icmp eq i64 %4753, %4628
  br i1 %4754, label %4762, label %4724, !llvm.loop !357

4755:                                             ; preds = %4720, %4747
  %4756 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4757:                                             ; preds = %4733, %4739
  %4758 = phi ptr [ %4746, %4739 ], [ %4726, %4733 ]
  %4759 = phi i32 [ %4745, %4739 ], [ 1, %4733 ]
  %4760 = load i32, ptr %4758, align 4, !tbaa !5
  %4761 = add nsw i32 %4760, %4759
  store i32 %4761, ptr %4758, align 4, !tbaa !5
  br label %4762

4762:                                             ; preds = %4749, %4757, %4722, %4712
  %4763 = icmp eq i32 %4714, %5
  br i1 %4763, label %5513, label %4631, !llvm.loop !358

4764:                                             ; preds = %4614, %4902
  %4765 = phi float [ %4305, %4614 ], [ %4850, %4902 ]
  %4766 = phi i32 [ 0, %4614 ], [ %4851, %4902 ]
  %4767 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4615, label %4768, label %4837

4768:                                             ; preds = %4764, %4827
  %4769 = phi i32 [ %4836, %4827 ], [ 0, %4764 ]
  %4770 = phi i64 [ %4778, %4827 ], [ %4619, %4764 ]
  %4771 = phi i64 [ %4835, %4827 ], [ %4618, %4764 ]
  %4772 = phi i32 [ %4833, %4827 ], [ %4767, %4764 ]
  %4773 = sub i32 %4617, %4769
  %4774 = tail call i32 @llvm.smin.i32(i32 %4773, i32 0)
  %4775 = sub i32 %4773, %4774
  %4776 = zext i32 %4775 to i64
  %4777 = add nuw nsw i64 %4776, 1
  %4778 = add nsw i64 %4770, -1
  %4779 = icmp ult i32 %4775, 31
  br i1 %4779, label %4815, label %4780

4780:                                             ; preds = %4768
  %4781 = and i64 %4777, 8589934560
  %4782 = sub i64 %4771, %4781
  br label %4783

4783:                                             ; preds = %4783, %4780
  %4784 = phi i64 [ 0, %4780 ], [ %4807, %4783 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4803, %4783 ]
  %4786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4804, %4783 ]
  %4787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4805, %4783 ]
  %4788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4806, %4783 ]
  %4789 = sub i64 %4771, %4784
  %4790 = getelementptr inbounds i32, ptr %11, i64 %4789
  %4791 = getelementptr inbounds i32, ptr %4790, i64 -7
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !5
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4790, i64 -15
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !5
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = getelementptr inbounds i32, ptr %4790, i64 -23
  %4798 = load <8 x i32>, ptr %4797, align 4, !tbaa !5
  %4799 = shufflevector <8 x i32> %4798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4800 = getelementptr inbounds i32, ptr %4790, i64 -31
  %4801 = load <8 x i32>, ptr %4800, align 4, !tbaa !5
  %4802 = shufflevector <8 x i32> %4801, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4803 = mul <8 x i32> %4793, %4785
  %4804 = mul <8 x i32> %4796, %4786
  %4805 = mul <8 x i32> %4799, %4787
  %4806 = mul <8 x i32> %4802, %4788
  %4807 = add nuw i64 %4784, 32
  %4808 = icmp eq i64 %4807, %4781
  br i1 %4808, label %4809, label %4783, !llvm.loop !359

4809:                                             ; preds = %4783
  %4810 = mul <8 x i32> %4804, %4803
  %4811 = mul <8 x i32> %4805, %4810
  %4812 = mul <8 x i32> %4806, %4811
  %4813 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4812)
  %4814 = icmp eq i64 %4777, %4781
  br i1 %4814, label %4827, label %4815

4815:                                             ; preds = %4768, %4809
  %4816 = phi i64 [ %4771, %4768 ], [ %4782, %4809 ]
  %4817 = phi i32 [ 1, %4768 ], [ %4813, %4809 ]
  br label %4818

4818:                                             ; preds = %4815, %4818
  %4819 = phi i64 [ %4824, %4818 ], [ %4816, %4815 ]
  %4820 = phi i32 [ %4823, %4818 ], [ %4817, %4815 ]
  %4821 = getelementptr inbounds i32, ptr %11, i64 %4819
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = mul nsw i32 %4822, %4820
  %4824 = add nsw i64 %4819, -1
  %4825 = trunc i64 %4819 to i32
  %4826 = icmp sgt i32 %4825, 0
  br i1 %4826, label %4818, label %4827, !llvm.loop !360

4827:                                             ; preds = %4818, %4809
  %4828 = phi i32 [ %4813, %4809 ], [ %4823, %4818 ]
  %4829 = and i64 %4778, 4294967295
  %4830 = getelementptr inbounds i32, ptr %6, i64 %4829
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = mul nsw i32 %4831, %4828
  %4833 = add nsw i32 %4832, %4772
  %4834 = icmp sgt i64 %4770, 2
  %4835 = add nsw i64 %4771, -1
  %4836 = add i32 %4769, 1
  br i1 %4834, label %4768, label %4837, !llvm.loop !361

4837:                                             ; preds = %4827, %4764
  %4838 = phi i32 [ %4767, %4764 ], [ %4833, %4827 ]
  %4839 = icmp slt i32 %4838, %5
  br i1 %4839, label %4842, label %4840

4840:                                             ; preds = %4837
  %4841 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4842:                                             ; preds = %4837
  %4843 = sext i32 %4838 to i64
  %4844 = getelementptr inbounds i32, ptr %4301, i64 %4843
  %4845 = load i32, ptr %4844, align 4, !tbaa !5
  %4846 = sitofp i32 %4845 to float
  %4847 = fcmp fast ogt float %4765, %4846
  br i1 %4847, label %4848, label %4849

4848:                                             ; preds = %4842
  store float %4846, ptr %4303, align 4, !tbaa !162
  br label %4849

4849:                                             ; preds = %4848, %4842
  %4850 = phi float [ %4846, %4848 ], [ %4765, %4842 ]
  %4851 = add nuw nsw i32 %4766, 1
  br i1 %4616, label %4852, label %4902

4852:                                             ; preds = %4849
  %4853 = load i32, ptr %4, align 4, !tbaa !5
  %4854 = load i32, ptr %12, align 4, !tbaa !5
  %4855 = add nsw i32 %4854, -1
  %4856 = icmp slt i32 %4853, %4855
  br i1 %4856, label %4879, label %4857

4857:                                             ; preds = %4852
  %4858 = icmp eq i32 %4853, %4855
  br i1 %4858, label %4859, label %4895

4859:                                             ; preds = %4857
  store i32 0, ptr %4, align 4, !tbaa !5
  %4860 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4860, ptr %6, align 4, !tbaa !5
  br i1 %4621, label %4902, label %4861

4861:                                             ; preds = %4859, %4889
  %4862 = phi i64 [ %4893, %4889 ], [ 1, %4859 ]
  %4863 = getelementptr inbounds i32, ptr %4, i64 %4862
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = getelementptr inbounds i32, ptr %12, i64 %4862
  %4866 = load i32, ptr %4865, align 4, !tbaa !5
  %4867 = add nsw i32 %4866, -1
  %4868 = icmp slt i32 %4864, %4867
  br i1 %4868, label %4869, label %4887

4869:                                             ; preds = %4861
  br i1 %4856, label %4879, label %4870

4870:                                             ; preds = %4869
  %4871 = shl i64 %4862, 32
  %4872 = add i64 %4871, -4294967296
  %4873 = ashr exact i64 %4872, 32
  %4874 = getelementptr inbounds i32, ptr %7, i64 %4873
  %4875 = load i32, ptr %4874, align 4, !tbaa !5
  %4876 = getelementptr inbounds i32, ptr %6, i64 %4862
  %4877 = load i32, ptr %4876, align 4, !tbaa !5
  %4878 = add nsw i32 %4877, %4875
  store i32 %4878, ptr %4876, align 4, !tbaa !5
  br label %4897

4879:                                             ; preds = %4852, %4869
  %4880 = phi i32 [ %4864, %4869 ], [ %4853, %4852 ]
  %4881 = phi ptr [ %4863, %4869 ], [ %4, %4852 ]
  %4882 = phi i64 [ %4862, %4869 ], [ 0, %4852 ]
  %4883 = add nsw i32 %4880, 1
  store i32 %4883, ptr %4881, align 4, !tbaa !5
  %4884 = getelementptr inbounds i32, ptr %7, i64 %4882
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = getelementptr inbounds i32, ptr %6, i64 %4882
  br label %4897

4887:                                             ; preds = %4861
  %4888 = icmp eq i32 %4864, %4867
  br i1 %4888, label %4889, label %4895

4889:                                             ; preds = %4887
  store i32 0, ptr %4863, align 4, !tbaa !5
  %4890 = getelementptr inbounds i32, ptr %8, i64 %4862
  %4891 = load i32, ptr %4890, align 4, !tbaa !5
  %4892 = getelementptr inbounds i32, ptr %6, i64 %4862
  store i32 %4891, ptr %4892, align 4, !tbaa !5
  %4893 = add nuw nsw i64 %4862, 1
  %4894 = icmp eq i64 %4893, %4619
  br i1 %4894, label %4902, label %4861, !llvm.loop !362

4895:                                             ; preds = %4857, %4887
  %4896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4897:                                             ; preds = %4870, %4879
  %4898 = phi ptr [ %4886, %4879 ], [ %4863, %4870 ]
  %4899 = phi i32 [ %4885, %4879 ], [ 1, %4870 ]
  %4900 = load i32, ptr %4898, align 4, !tbaa !5
  %4901 = add nsw i32 %4900, %4899
  store i32 %4901, ptr %4898, align 4, !tbaa !5
  br label %4902

4902:                                             ; preds = %4889, %4897, %4859, %4849
  %4903 = icmp eq i32 %4851, %5
  br i1 %4903, label %5513, label %4764, !llvm.loop !363

4904:                                             ; preds = %4307
  %4905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 322, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4906:                                             ; preds = %18
  %4907 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4908 = load ptr, ptr %4907, align 8, !tbaa !9
  %4909 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4910 = load ptr, ptr %4909, align 8, !tbaa !9
  %4911 = load i32, ptr %4908, align 4, !tbaa !5
  %4912 = sitofp i32 %4911 to double
  store double %4912, ptr %4910, align 8, !tbaa !18
  %4913 = icmp eq i32 %13, 0
  br i1 %4913, label %5513, label %4914

4914:                                             ; preds = %4906
  switch i32 %1, label %5511 [
    i32 1, label %4915
    i32 0, label %5215
  ]

4915:                                             ; preds = %4914
  %4916 = getelementptr inbounds i32, ptr %3, i64 %19
  %4917 = load i32, ptr %4916, align 4, !tbaa !5
  %4918 = icmp eq i32 %4917, 0
  %4919 = icmp sgt i32 %5, 0
  br i1 %4918, label %4929, label %4920

4920:                                             ; preds = %4915
  br i1 %4919, label %4921, label %5513

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %5075

4929:                                             ; preds = %4915
  br i1 %4919, label %4930, label %5513

4930:                                             ; preds = %4929
  %4931 = icmp sgt i32 %13, 1
  %4932 = icmp sgt i32 %13, 0
  %4933 = add i32 %13, -2
  %4934 = zext i32 %4933 to i64
  %4935 = zext i32 %13 to i64
  %4936 = add nuw i32 %5, 1
  %4937 = icmp eq i32 %13, 1
  br label %4938

4938:                                             ; preds = %4930, %5073
  %4939 = phi double [ %4912, %4930 ], [ %5024, %5073 ]
  %4940 = phi i32 [ 0, %4930 ], [ %5025, %5073 ]
  %4941 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4931, label %4942, label %5011

4942:                                             ; preds = %4938, %5001
  %4943 = phi i32 [ %5010, %5001 ], [ 0, %4938 ]
  %4944 = phi i64 [ %4952, %5001 ], [ %4935, %4938 ]
  %4945 = phi i64 [ %5009, %5001 ], [ %4934, %4938 ]
  %4946 = phi i32 [ %5007, %5001 ], [ %4941, %4938 ]
  %4947 = sub i32 %4933, %4943
  %4948 = tail call i32 @llvm.smin.i32(i32 %4947, i32 0)
  %4949 = sub i32 %4947, %4948
  %4950 = zext i32 %4949 to i64
  %4951 = add nuw nsw i64 %4950, 1
  %4952 = add nsw i64 %4944, -1
  %4953 = icmp ult i32 %4949, 31
  br i1 %4953, label %4989, label %4954

4954:                                             ; preds = %4942
  %4955 = and i64 %4951, 8589934560
  %4956 = sub i64 %4945, %4955
  br label %4957

4957:                                             ; preds = %4957, %4954
  %4958 = phi i64 [ 0, %4954 ], [ %4981, %4957 ]
  %4959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4977, %4957 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4978, %4957 ]
  %4961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4979, %4957 ]
  %4962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4980, %4957 ]
  %4963 = sub i64 %4945, %4958
  %4964 = getelementptr inbounds i32, ptr %9, i64 %4963
  %4965 = getelementptr inbounds i32, ptr %4964, i64 -7
  %4966 = load <8 x i32>, ptr %4965, align 4, !tbaa !5
  %4967 = shufflevector <8 x i32> %4966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4968 = getelementptr inbounds i32, ptr %4964, i64 -15
  %4969 = load <8 x i32>, ptr %4968, align 4, !tbaa !5
  %4970 = shufflevector <8 x i32> %4969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4971 = getelementptr inbounds i32, ptr %4964, i64 -23
  %4972 = load <8 x i32>, ptr %4971, align 4, !tbaa !5
  %4973 = shufflevector <8 x i32> %4972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4974 = getelementptr inbounds i32, ptr %4964, i64 -31
  %4975 = load <8 x i32>, ptr %4974, align 4, !tbaa !5
  %4976 = shufflevector <8 x i32> %4975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4977 = mul <8 x i32> %4967, %4959
  %4978 = mul <8 x i32> %4970, %4960
  %4979 = mul <8 x i32> %4973, %4961
  %4980 = mul <8 x i32> %4976, %4962
  %4981 = add nuw i64 %4958, 32
  %4982 = icmp eq i64 %4981, %4955
  br i1 %4982, label %4983, label %4957, !llvm.loop !364

4983:                                             ; preds = %4957
  %4984 = mul <8 x i32> %4978, %4977
  %4985 = mul <8 x i32> %4979, %4984
  %4986 = mul <8 x i32> %4980, %4985
  %4987 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4986)
  %4988 = icmp eq i64 %4951, %4955
  br i1 %4988, label %5001, label %4989

4989:                                             ; preds = %4942, %4983
  %4990 = phi i64 [ %4945, %4942 ], [ %4956, %4983 ]
  %4991 = phi i32 [ 1, %4942 ], [ %4987, %4983 ]
  br label %4992

4992:                                             ; preds = %4989, %4992
  %4993 = phi i64 [ %4998, %4992 ], [ %4990, %4989 ]
  %4994 = phi i32 [ %4997, %4992 ], [ %4991, %4989 ]
  %4995 = getelementptr inbounds i32, ptr %9, i64 %4993
  %4996 = load i32, ptr %4995, align 4, !tbaa !5
  %4997 = mul nsw i32 %4996, %4994
  %4998 = add nsw i64 %4993, -1
  %4999 = trunc i64 %4993 to i32
  %5000 = icmp sgt i32 %4999, 0
  br i1 %5000, label %4992, label %5001, !llvm.loop !365

5001:                                             ; preds = %4992, %4983
  %5002 = phi i32 [ %4987, %4983 ], [ %4997, %4992 ]
  %5003 = and i64 %4952, 4294967295
  %5004 = getelementptr inbounds i32, ptr %6, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !5
  %5006 = mul nsw i32 %5005, %5002
  %5007 = add nsw i32 %5006, %4946
  %5008 = icmp sgt i64 %4944, 2
  %5009 = add nsw i64 %4945, -1
  %5010 = add i32 %4943, 1
  br i1 %5008, label %4942, label %5011, !llvm.loop !366

5011:                                             ; preds = %5001, %4938
  %5012 = phi i32 [ %4941, %4938 ], [ %5007, %5001 ]
  %5013 = sext i32 %5012 to i64
  %5014 = getelementptr inbounds double, ptr %2, i64 %5013
  %5015 = load double, ptr %5014, align 8, !tbaa !18
  %5016 = getelementptr inbounds i32, ptr %4908, i64 %5013
  %5017 = load i32, ptr %5016, align 4, !tbaa !5
  %5018 = sitofp i32 %5017 to double
  %5019 = fcmp fast one double %5015, 0.000000e+00
  %5020 = fcmp fast ogt double %4939, %5018
  %5021 = select i1 %5019, i1 %5020, i1 false
  br i1 %5021, label %5022, label %5023

5022:                                             ; preds = %5011
  store double %5018, ptr %4910, align 8, !tbaa !18
  br label %5023

5023:                                             ; preds = %5022, %5011
  %5024 = phi double [ %5018, %5022 ], [ %4939, %5011 ]
  %5025 = add nuw nsw i32 %4940, 1
  br i1 %4932, label %5026, label %5073

5026:                                             ; preds = %5023
  %5027 = load i32, ptr %4, align 4, !tbaa !5
  %5028 = load i32, ptr %12, align 4, !tbaa !5
  %5029 = add nsw i32 %5028, -1
  %5030 = icmp slt i32 %5027, %5029
  br i1 %5030, label %5050, label %5031

5031:                                             ; preds = %5026
  %5032 = icmp eq i32 %5027, %5029
  br i1 %5032, label %5033, label %5066

5033:                                             ; preds = %5031
  store i32 0, ptr %4, align 4, !tbaa !5
  %5034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5034, ptr %6, align 4, !tbaa !5
  br i1 %4937, label %5073, label %5035

5035:                                             ; preds = %5033, %5060
  %5036 = phi i64 [ %5064, %5060 ], [ 1, %5033 ]
  %5037 = getelementptr inbounds i32, ptr %4, i64 %5036
  %5038 = load i32, ptr %5037, align 4, !tbaa !5
  %5039 = getelementptr inbounds i32, ptr %12, i64 %5036
  %5040 = load i32, ptr %5039, align 4, !tbaa !5
  %5041 = add nsw i32 %5040, -1
  %5042 = icmp slt i32 %5038, %5041
  br i1 %5042, label %5043, label %5058

5043:                                             ; preds = %5035
  br i1 %5030, label %5050, label %5044

5044:                                             ; preds = %5043
  %5045 = getelementptr inbounds i32, ptr %7, i64 %5036
  %5046 = load i32, ptr %5045, align 4, !tbaa !5
  %5047 = getelementptr inbounds i32, ptr %6, i64 %5036
  %5048 = load i32, ptr %5047, align 4, !tbaa !5
  %5049 = add nsw i32 %5048, %5046
  store i32 %5049, ptr %5047, align 4, !tbaa !5
  br label %5068

5050:                                             ; preds = %5026, %5043
  %5051 = phi i32 [ %5038, %5043 ], [ %5027, %5026 ]
  %5052 = phi ptr [ %5037, %5043 ], [ %4, %5026 ]
  %5053 = phi i64 [ %5036, %5043 ], [ 0, %5026 ]
  %5054 = add nsw i32 %5051, 1
  store i32 %5054, ptr %5052, align 4, !tbaa !5
  %5055 = getelementptr inbounds i32, ptr %7, i64 %5053
  %5056 = load i32, ptr %5055, align 4, !tbaa !5
  %5057 = getelementptr inbounds i32, ptr %6, i64 %5053
  br label %5068

5058:                                             ; preds = %5035
  %5059 = icmp eq i32 %5038, %5041
  br i1 %5059, label %5060, label %5066

5060:                                             ; preds = %5058
  store i32 0, ptr %5037, align 4, !tbaa !5
  %5061 = getelementptr inbounds i32, ptr %8, i64 %5036
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = getelementptr inbounds i32, ptr %6, i64 %5036
  store i32 %5062, ptr %5063, align 4, !tbaa !5
  %5064 = add nuw nsw i64 %5036, 1
  %5065 = icmp eq i64 %5064, %4935
  br i1 %5065, label %5073, label %5035, !llvm.loop !367

5066:                                             ; preds = %5031, %5058
  %5067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5068:                                             ; preds = %5044, %5050
  %5069 = phi ptr [ %5057, %5050 ], [ %5037, %5044 ]
  %5070 = phi i32 [ %5056, %5050 ], [ 1, %5044 ]
  %5071 = load i32, ptr %5069, align 4, !tbaa !5
  %5072 = add nsw i32 %5071, %5070
  store i32 %5072, ptr %5069, align 4, !tbaa !5
  br label %5073

5073:                                             ; preds = %5060, %5068, %5033, %5023
  %5074 = icmp eq i32 %5025, %5
  br i1 %5074, label %5513, label %4938, !llvm.loop !368

5075:                                             ; preds = %4921, %5213
  %5076 = phi double [ %4912, %4921 ], [ %5161, %5213 ]
  %5077 = phi i32 [ 0, %4921 ], [ %5162, %5213 ]
  %5078 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4922, label %5079, label %5148

5079:                                             ; preds = %5075, %5138
  %5080 = phi i32 [ %5147, %5138 ], [ 0, %5075 ]
  %5081 = phi i64 [ %5089, %5138 ], [ %4926, %5075 ]
  %5082 = phi i64 [ %5146, %5138 ], [ %4925, %5075 ]
  %5083 = phi i32 [ %5144, %5138 ], [ %5078, %5075 ]
  %5084 = sub i32 %4924, %5080
  %5085 = tail call i32 @llvm.smin.i32(i32 %5084, i32 0)
  %5086 = sub i32 %5084, %5085
  %5087 = zext i32 %5086 to i64
  %5088 = add nuw nsw i64 %5087, 1
  %5089 = add nsw i64 %5081, -1
  %5090 = icmp ult i32 %5086, 31
  br i1 %5090, label %5126, label %5091

5091:                                             ; preds = %5079
  %5092 = and i64 %5088, 8589934560
  %5093 = sub i64 %5082, %5092
  br label %5094

5094:                                             ; preds = %5094, %5091
  %5095 = phi i64 [ 0, %5091 ], [ %5118, %5094 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5114, %5094 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5115, %5094 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5116, %5094 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5117, %5094 ]
  %5100 = sub i64 %5082, %5095
  %5101 = getelementptr inbounds i32, ptr %11, i64 %5100
  %5102 = getelementptr inbounds i32, ptr %5101, i64 -7
  %5103 = load <8 x i32>, ptr %5102, align 4, !tbaa !5
  %5104 = shufflevector <8 x i32> %5103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5105 = getelementptr inbounds i32, ptr %5101, i64 -15
  %5106 = load <8 x i32>, ptr %5105, align 4, !tbaa !5
  %5107 = shufflevector <8 x i32> %5106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5108 = getelementptr inbounds i32, ptr %5101, i64 -23
  %5109 = load <8 x i32>, ptr %5108, align 4, !tbaa !5
  %5110 = shufflevector <8 x i32> %5109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5111 = getelementptr inbounds i32, ptr %5101, i64 -31
  %5112 = load <8 x i32>, ptr %5111, align 4, !tbaa !5
  %5113 = shufflevector <8 x i32> %5112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5114 = mul <8 x i32> %5104, %5096
  %5115 = mul <8 x i32> %5107, %5097
  %5116 = mul <8 x i32> %5110, %5098
  %5117 = mul <8 x i32> %5113, %5099
  %5118 = add nuw i64 %5095, 32
  %5119 = icmp eq i64 %5118, %5092
  br i1 %5119, label %5120, label %5094, !llvm.loop !369

5120:                                             ; preds = %5094
  %5121 = mul <8 x i32> %5115, %5114
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5123)
  %5125 = icmp eq i64 %5088, %5092
  br i1 %5125, label %5138, label %5126

5126:                                             ; preds = %5079, %5120
  %5127 = phi i64 [ %5082, %5079 ], [ %5093, %5120 ]
  %5128 = phi i32 [ 1, %5079 ], [ %5124, %5120 ]
  br label %5129

5129:                                             ; preds = %5126, %5129
  %5130 = phi i64 [ %5135, %5129 ], [ %5127, %5126 ]
  %5131 = phi i32 [ %5134, %5129 ], [ %5128, %5126 ]
  %5132 = getelementptr inbounds i32, ptr %11, i64 %5130
  %5133 = load i32, ptr %5132, align 4, !tbaa !5
  %5134 = mul nsw i32 %5133, %5131
  %5135 = add nsw i64 %5130, -1
  %5136 = trunc i64 %5130 to i32
  %5137 = icmp sgt i32 %5136, 0
  br i1 %5137, label %5129, label %5138, !llvm.loop !370

5138:                                             ; preds = %5129, %5120
  %5139 = phi i32 [ %5124, %5120 ], [ %5134, %5129 ]
  %5140 = and i64 %5089, 4294967295
  %5141 = getelementptr inbounds i32, ptr %6, i64 %5140
  %5142 = load i32, ptr %5141, align 4, !tbaa !5
  %5143 = mul nsw i32 %5142, %5139
  %5144 = add nsw i32 %5143, %5083
  %5145 = icmp sgt i64 %5081, 2
  %5146 = add nsw i64 %5082, -1
  %5147 = add i32 %5080, 1
  br i1 %5145, label %5079, label %5148, !llvm.loop !371

5148:                                             ; preds = %5138, %5075
  %5149 = phi i32 [ %5078, %5075 ], [ %5144, %5138 ]
  %5150 = icmp slt i32 %5149, %5
  br i1 %5150, label %5153, label %5151

5151:                                             ; preds = %5148
  %5152 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

5153:                                             ; preds = %5148
  %5154 = sext i32 %5149 to i64
  %5155 = getelementptr inbounds i32, ptr %4908, i64 %5154
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = sitofp i32 %5156 to double
  %5158 = fcmp fast ogt double %5076, %5157
  br i1 %5158, label %5159, label %5160

5159:                                             ; preds = %5153
  store double %5157, ptr %4910, align 8, !tbaa !18
  br label %5160

5160:                                             ; preds = %5153, %5159
  %5161 = phi double [ %5076, %5153 ], [ %5157, %5159 ]
  %5162 = add nuw nsw i32 %5077, 1
  br i1 %4923, label %5163, label %5213

5163:                                             ; preds = %5160
  %5164 = load i32, ptr %4, align 4, !tbaa !5
  %5165 = load i32, ptr %12, align 4, !tbaa !5
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5190, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5206

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !5
  %5171 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5171, ptr %6, align 4, !tbaa !5
  br i1 %4928, label %5213, label %5172

5172:                                             ; preds = %5170, %5200
  %5173 = phi i64 [ %5204, %5200 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5198

5180:                                             ; preds = %5172
  br i1 %5167, label %5190, label %5181

5181:                                             ; preds = %5180
  %5182 = shl i64 %5173, 32
  %5183 = add i64 %5182, -4294967296
  %5184 = ashr exact i64 %5183, 32
  %5185 = getelementptr inbounds i32, ptr %7, i64 %5184
  %5186 = load i32, ptr %5185, align 4, !tbaa !5
  %5187 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5188 = load i32, ptr %5187, align 4, !tbaa !5
  %5189 = add nsw i32 %5188, %5186
  store i32 %5189, ptr %5187, align 4, !tbaa !5
  br label %5208

5190:                                             ; preds = %5163, %5180
  %5191 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5192 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5193 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5194 = add nsw i32 %5191, 1
  store i32 %5194, ptr %5192, align 4, !tbaa !5
  %5195 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5193
  br label %5208

5198:                                             ; preds = %5172
  %5199 = icmp eq i32 %5175, %5178
  br i1 %5199, label %5200, label %5206

5200:                                             ; preds = %5198
  store i32 0, ptr %5174, align 4, !tbaa !5
  %5201 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5202 = load i32, ptr %5201, align 4, !tbaa !5
  %5203 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5202, ptr %5203, align 4, !tbaa !5
  %5204 = add nuw nsw i64 %5173, 1
  %5205 = icmp eq i64 %5204, %4926
  br i1 %5205, label %5213, label %5172, !llvm.loop !372

5206:                                             ; preds = %5168, %5198
  %5207 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5208:                                             ; preds = %5181, %5190
  %5209 = phi ptr [ %5197, %5190 ], [ %5174, %5181 ]
  %5210 = phi i32 [ %5196, %5190 ], [ 1, %5181 ]
  %5211 = load i32, ptr %5209, align 4, !tbaa !5
  %5212 = add nsw i32 %5211, %5210
  store i32 %5212, ptr %5209, align 4, !tbaa !5
  br label %5213

5213:                                             ; preds = %5200, %5208, %5170, %5160
  %5214 = icmp eq i32 %5162, %5
  br i1 %5214, label %5513, label %5075, !llvm.loop !373

5215:                                             ; preds = %4914
  %5216 = getelementptr inbounds i32, ptr %3, i64 %19
  %5217 = load i32, ptr %5216, align 4, !tbaa !5
  %5218 = icmp eq i32 %5217, 0
  %5219 = icmp sgt i32 %5, 0
  br i1 %5218, label %5229, label %5220

5220:                                             ; preds = %5215
  br i1 %5219, label %5221, label %5513

5221:                                             ; preds = %5220
  %5222 = icmp sgt i32 %13, 1
  %5223 = icmp sgt i32 %13, 0
  %5224 = add i32 %13, -2
  %5225 = zext i32 %5224 to i64
  %5226 = zext i32 %13 to i64
  %5227 = add nuw i32 %5, 1
  %5228 = icmp eq i32 %13, 1
  br label %5371

5229:                                             ; preds = %5215
  br i1 %5219, label %5230, label %5513

5230:                                             ; preds = %5229
  %5231 = icmp sgt i32 %13, 1
  %5232 = icmp sgt i32 %13, 0
  %5233 = add i32 %13, -2
  %5234 = zext i32 %5233 to i64
  %5235 = zext i32 %13 to i64
  %5236 = add nuw i32 %5, 1
  %5237 = icmp eq i32 %13, 1
  br label %5238

5238:                                             ; preds = %5230, %5369
  %5239 = phi double [ %4912, %5230 ], [ %5320, %5369 ]
  %5240 = phi i32 [ 0, %5230 ], [ %5321, %5369 ]
  %5241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5231, label %5242, label %5311

5242:                                             ; preds = %5238, %5301
  %5243 = phi i32 [ %5310, %5301 ], [ 0, %5238 ]
  %5244 = phi i64 [ %5252, %5301 ], [ %5235, %5238 ]
  %5245 = phi i64 [ %5309, %5301 ], [ %5234, %5238 ]
  %5246 = phi i32 [ %5307, %5301 ], [ %5241, %5238 ]
  %5247 = sub i32 %5233, %5243
  %5248 = tail call i32 @llvm.smin.i32(i32 %5247, i32 0)
  %5249 = sub i32 %5247, %5248
  %5250 = zext i32 %5249 to i64
  %5251 = add nuw nsw i64 %5250, 1
  %5252 = add nsw i64 %5244, -1
  %5253 = icmp ult i32 %5249, 31
  br i1 %5253, label %5289, label %5254

5254:                                             ; preds = %5242
  %5255 = and i64 %5251, 8589934560
  %5256 = sub i64 %5245, %5255
  br label %5257

5257:                                             ; preds = %5257, %5254
  %5258 = phi i64 [ 0, %5254 ], [ %5281, %5257 ]
  %5259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5277, %5257 ]
  %5260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5278, %5257 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5279, %5257 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5280, %5257 ]
  %5263 = sub i64 %5245, %5258
  %5264 = getelementptr inbounds i32, ptr %9, i64 %5263
  %5265 = getelementptr inbounds i32, ptr %5264, i64 -7
  %5266 = load <8 x i32>, ptr %5265, align 4, !tbaa !5
  %5267 = shufflevector <8 x i32> %5266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5268 = getelementptr inbounds i32, ptr %5264, i64 -15
  %5269 = load <8 x i32>, ptr %5268, align 4, !tbaa !5
  %5270 = shufflevector <8 x i32> %5269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5271 = getelementptr inbounds i32, ptr %5264, i64 -23
  %5272 = load <8 x i32>, ptr %5271, align 4, !tbaa !5
  %5273 = shufflevector <8 x i32> %5272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5274 = getelementptr inbounds i32, ptr %5264, i64 -31
  %5275 = load <8 x i32>, ptr %5274, align 4, !tbaa !5
  %5276 = shufflevector <8 x i32> %5275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5277 = mul <8 x i32> %5267, %5259
  %5278 = mul <8 x i32> %5270, %5260
  %5279 = mul <8 x i32> %5273, %5261
  %5280 = mul <8 x i32> %5276, %5262
  %5281 = add nuw i64 %5258, 32
  %5282 = icmp eq i64 %5281, %5255
  br i1 %5282, label %5283, label %5257, !llvm.loop !374

5283:                                             ; preds = %5257
  %5284 = mul <8 x i32> %5278, %5277
  %5285 = mul <8 x i32> %5279, %5284
  %5286 = mul <8 x i32> %5280, %5285
  %5287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5286)
  %5288 = icmp eq i64 %5251, %5255
  br i1 %5288, label %5301, label %5289

5289:                                             ; preds = %5242, %5283
  %5290 = phi i64 [ %5245, %5242 ], [ %5256, %5283 ]
  %5291 = phi i32 [ 1, %5242 ], [ %5287, %5283 ]
  br label %5292

5292:                                             ; preds = %5289, %5292
  %5293 = phi i64 [ %5298, %5292 ], [ %5290, %5289 ]
  %5294 = phi i32 [ %5297, %5292 ], [ %5291, %5289 ]
  %5295 = getelementptr inbounds i32, ptr %9, i64 %5293
  %5296 = load i32, ptr %5295, align 4, !tbaa !5
  %5297 = mul nsw i32 %5296, %5294
  %5298 = add nsw i64 %5293, -1
  %5299 = trunc i64 %5293 to i32
  %5300 = icmp sgt i32 %5299, 0
  br i1 %5300, label %5292, label %5301, !llvm.loop !375

5301:                                             ; preds = %5292, %5283
  %5302 = phi i32 [ %5287, %5283 ], [ %5297, %5292 ]
  %5303 = and i64 %5252, 4294967295
  %5304 = getelementptr inbounds i32, ptr %6, i64 %5303
  %5305 = load i32, ptr %5304, align 4, !tbaa !5
  %5306 = mul nsw i32 %5305, %5302
  %5307 = add nsw i32 %5306, %5246
  %5308 = icmp sgt i64 %5244, 2
  %5309 = add nsw i64 %5245, -1
  %5310 = add i32 %5243, 1
  br i1 %5308, label %5242, label %5311, !llvm.loop !376

5311:                                             ; preds = %5301, %5238
  %5312 = phi i32 [ %5241, %5238 ], [ %5307, %5301 ]
  %5313 = sext i32 %5312 to i64
  %5314 = getelementptr inbounds i32, ptr %4908, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = sitofp i32 %5315 to double
  %5317 = fcmp fast ogt double %5239, %5316
  br i1 %5317, label %5318, label %5319

5318:                                             ; preds = %5311
  store double %5316, ptr %4910, align 8, !tbaa !18
  br label %5319

5319:                                             ; preds = %5318, %5311
  %5320 = phi double [ %5316, %5318 ], [ %5239, %5311 ]
  %5321 = add nuw nsw i32 %5240, 1
  br i1 %5232, label %5322, label %5369

5322:                                             ; preds = %5319
  %5323 = load i32, ptr %4, align 4, !tbaa !5
  %5324 = load i32, ptr %12, align 4, !tbaa !5
  %5325 = add nsw i32 %5324, -1
  %5326 = icmp slt i32 %5323, %5325
  br i1 %5326, label %5346, label %5327

5327:                                             ; preds = %5322
  %5328 = icmp eq i32 %5323, %5325
  br i1 %5328, label %5329, label %5362

5329:                                             ; preds = %5327
  store i32 0, ptr %4, align 4, !tbaa !5
  %5330 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5330, ptr %6, align 4, !tbaa !5
  br i1 %5237, label %5369, label %5331

5331:                                             ; preds = %5329, %5356
  %5332 = phi i64 [ %5360, %5356 ], [ 1, %5329 ]
  %5333 = getelementptr inbounds i32, ptr %4, i64 %5332
  %5334 = load i32, ptr %5333, align 4, !tbaa !5
  %5335 = getelementptr inbounds i32, ptr %12, i64 %5332
  %5336 = load i32, ptr %5335, align 4, !tbaa !5
  %5337 = add nsw i32 %5336, -1
  %5338 = icmp slt i32 %5334, %5337
  br i1 %5338, label %5339, label %5354

5339:                                             ; preds = %5331
  br i1 %5326, label %5346, label %5340

5340:                                             ; preds = %5339
  %5341 = getelementptr inbounds i32, ptr %7, i64 %5332
  %5342 = load i32, ptr %5341, align 4, !tbaa !5
  %5343 = getelementptr inbounds i32, ptr %6, i64 %5332
  %5344 = load i32, ptr %5343, align 4, !tbaa !5
  %5345 = add nsw i32 %5344, %5342
  store i32 %5345, ptr %5343, align 4, !tbaa !5
  br label %5364

5346:                                             ; preds = %5322, %5339
  %5347 = phi i32 [ %5334, %5339 ], [ %5323, %5322 ]
  %5348 = phi ptr [ %5333, %5339 ], [ %4, %5322 ]
  %5349 = phi i64 [ %5332, %5339 ], [ 0, %5322 ]
  %5350 = add nsw i32 %5347, 1
  store i32 %5350, ptr %5348, align 4, !tbaa !5
  %5351 = getelementptr inbounds i32, ptr %7, i64 %5349
  %5352 = load i32, ptr %5351, align 4, !tbaa !5
  %5353 = getelementptr inbounds i32, ptr %6, i64 %5349
  br label %5364

5354:                                             ; preds = %5331
  %5355 = icmp eq i32 %5334, %5337
  br i1 %5355, label %5356, label %5362

5356:                                             ; preds = %5354
  store i32 0, ptr %5333, align 4, !tbaa !5
  %5357 = getelementptr inbounds i32, ptr %8, i64 %5332
  %5358 = load i32, ptr %5357, align 4, !tbaa !5
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5332
  store i32 %5358, ptr %5359, align 4, !tbaa !5
  %5360 = add nuw nsw i64 %5332, 1
  %5361 = icmp eq i64 %5360, %5235
  br i1 %5361, label %5369, label %5331, !llvm.loop !377

5362:                                             ; preds = %5327, %5354
  %5363 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5364:                                             ; preds = %5340, %5346
  %5365 = phi ptr [ %5353, %5346 ], [ %5333, %5340 ]
  %5366 = phi i32 [ %5352, %5346 ], [ 1, %5340 ]
  %5367 = load i32, ptr %5365, align 4, !tbaa !5
  %5368 = add nsw i32 %5367, %5366
  store i32 %5368, ptr %5365, align 4, !tbaa !5
  br label %5369

5369:                                             ; preds = %5356, %5364, %5329, %5319
  %5370 = icmp eq i32 %5321, %5
  br i1 %5370, label %5513, label %5238, !llvm.loop !378

5371:                                             ; preds = %5221, %5509
  %5372 = phi double [ %4912, %5221 ], [ %5457, %5509 ]
  %5373 = phi i32 [ 0, %5221 ], [ %5458, %5509 ]
  %5374 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5222, label %5375, label %5444

5375:                                             ; preds = %5371, %5434
  %5376 = phi i32 [ %5443, %5434 ], [ 0, %5371 ]
  %5377 = phi i64 [ %5385, %5434 ], [ %5226, %5371 ]
  %5378 = phi i64 [ %5442, %5434 ], [ %5225, %5371 ]
  %5379 = phi i32 [ %5440, %5434 ], [ %5374, %5371 ]
  %5380 = sub i32 %5224, %5376
  %5381 = tail call i32 @llvm.smin.i32(i32 %5380, i32 0)
  %5382 = sub i32 %5380, %5381
  %5383 = zext i32 %5382 to i64
  %5384 = add nuw nsw i64 %5383, 1
  %5385 = add nsw i64 %5377, -1
  %5386 = icmp ult i32 %5382, 31
  br i1 %5386, label %5422, label %5387

5387:                                             ; preds = %5375
  %5388 = and i64 %5384, 8589934560
  %5389 = sub i64 %5378, %5388
  br label %5390

5390:                                             ; preds = %5390, %5387
  %5391 = phi i64 [ 0, %5387 ], [ %5414, %5390 ]
  %5392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5410, %5390 ]
  %5393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5411, %5390 ]
  %5394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5412, %5390 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5413, %5390 ]
  %5396 = sub i64 %5378, %5391
  %5397 = getelementptr inbounds i32, ptr %11, i64 %5396
  %5398 = getelementptr inbounds i32, ptr %5397, i64 -7
  %5399 = load <8 x i32>, ptr %5398, align 4, !tbaa !5
  %5400 = shufflevector <8 x i32> %5399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5401 = getelementptr inbounds i32, ptr %5397, i64 -15
  %5402 = load <8 x i32>, ptr %5401, align 4, !tbaa !5
  %5403 = shufflevector <8 x i32> %5402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5404 = getelementptr inbounds i32, ptr %5397, i64 -23
  %5405 = load <8 x i32>, ptr %5404, align 4, !tbaa !5
  %5406 = shufflevector <8 x i32> %5405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5407 = getelementptr inbounds i32, ptr %5397, i64 -31
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !5
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = mul <8 x i32> %5400, %5392
  %5411 = mul <8 x i32> %5403, %5393
  %5412 = mul <8 x i32> %5406, %5394
  %5413 = mul <8 x i32> %5409, %5395
  %5414 = add nuw i64 %5391, 32
  %5415 = icmp eq i64 %5414, %5388
  br i1 %5415, label %5416, label %5390, !llvm.loop !379

5416:                                             ; preds = %5390
  %5417 = mul <8 x i32> %5411, %5410
  %5418 = mul <8 x i32> %5412, %5417
  %5419 = mul <8 x i32> %5413, %5418
  %5420 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5419)
  %5421 = icmp eq i64 %5384, %5388
  br i1 %5421, label %5434, label %5422

5422:                                             ; preds = %5375, %5416
  %5423 = phi i64 [ %5378, %5375 ], [ %5389, %5416 ]
  %5424 = phi i32 [ 1, %5375 ], [ %5420, %5416 ]
  br label %5425

5425:                                             ; preds = %5422, %5425
  %5426 = phi i64 [ %5431, %5425 ], [ %5423, %5422 ]
  %5427 = phi i32 [ %5430, %5425 ], [ %5424, %5422 ]
  %5428 = getelementptr inbounds i32, ptr %11, i64 %5426
  %5429 = load i32, ptr %5428, align 4, !tbaa !5
  %5430 = mul nsw i32 %5429, %5427
  %5431 = add nsw i64 %5426, -1
  %5432 = trunc i64 %5426 to i32
  %5433 = icmp sgt i32 %5432, 0
  br i1 %5433, label %5425, label %5434, !llvm.loop !380

5434:                                             ; preds = %5425, %5416
  %5435 = phi i32 [ %5420, %5416 ], [ %5430, %5425 ]
  %5436 = and i64 %5385, 4294967295
  %5437 = getelementptr inbounds i32, ptr %6, i64 %5436
  %5438 = load i32, ptr %5437, align 4, !tbaa !5
  %5439 = mul nsw i32 %5438, %5435
  %5440 = add nsw i32 %5439, %5379
  %5441 = icmp sgt i64 %5377, 2
  %5442 = add nsw i64 %5378, -1
  %5443 = add i32 %5376, 1
  br i1 %5441, label %5375, label %5444, !llvm.loop !381

5444:                                             ; preds = %5434, %5371
  %5445 = phi i32 [ %5374, %5371 ], [ %5440, %5434 ]
  %5446 = icmp slt i32 %5445, %5
  br i1 %5446, label %5449, label %5447

5447:                                             ; preds = %5444
  %5448 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

5449:                                             ; preds = %5444
  %5450 = sext i32 %5445 to i64
  %5451 = getelementptr inbounds i32, ptr %4908, i64 %5450
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = sitofp i32 %5452 to double
  %5454 = fcmp fast ogt double %5372, %5453
  br i1 %5454, label %5455, label %5456

5455:                                             ; preds = %5449
  store double %5453, ptr %4910, align 8, !tbaa !18
  br label %5456

5456:                                             ; preds = %5455, %5449
  %5457 = phi double [ %5453, %5455 ], [ %5372, %5449 ]
  %5458 = add nuw nsw i32 %5373, 1
  br i1 %5223, label %5459, label %5509

5459:                                             ; preds = %5456
  %5460 = load i32, ptr %4, align 4, !tbaa !5
  %5461 = load i32, ptr %12, align 4, !tbaa !5
  %5462 = add nsw i32 %5461, -1
  %5463 = icmp slt i32 %5460, %5462
  br i1 %5463, label %5486, label %5464

5464:                                             ; preds = %5459
  %5465 = icmp eq i32 %5460, %5462
  br i1 %5465, label %5466, label %5502

5466:                                             ; preds = %5464
  store i32 0, ptr %4, align 4, !tbaa !5
  %5467 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5467, ptr %6, align 4, !tbaa !5
  br i1 %5228, label %5509, label %5468

5468:                                             ; preds = %5466, %5496
  %5469 = phi i64 [ %5500, %5496 ], [ 1, %5466 ]
  %5470 = getelementptr inbounds i32, ptr %4, i64 %5469
  %5471 = load i32, ptr %5470, align 4, !tbaa !5
  %5472 = getelementptr inbounds i32, ptr %12, i64 %5469
  %5473 = load i32, ptr %5472, align 4, !tbaa !5
  %5474 = add nsw i32 %5473, -1
  %5475 = icmp slt i32 %5471, %5474
  br i1 %5475, label %5476, label %5494

5476:                                             ; preds = %5468
  br i1 %5463, label %5486, label %5477

5477:                                             ; preds = %5476
  %5478 = shl i64 %5469, 32
  %5479 = add i64 %5478, -4294967296
  %5480 = ashr exact i64 %5479, 32
  %5481 = getelementptr inbounds i32, ptr %7, i64 %5480
  %5482 = load i32, ptr %5481, align 4, !tbaa !5
  %5483 = getelementptr inbounds i32, ptr %6, i64 %5469
  %5484 = load i32, ptr %5483, align 4, !tbaa !5
  %5485 = add nsw i32 %5484, %5482
  store i32 %5485, ptr %5483, align 4, !tbaa !5
  br label %5504

5486:                                             ; preds = %5459, %5476
  %5487 = phi i32 [ %5471, %5476 ], [ %5460, %5459 ]
  %5488 = phi ptr [ %5470, %5476 ], [ %4, %5459 ]
  %5489 = phi i64 [ %5469, %5476 ], [ 0, %5459 ]
  %5490 = add nsw i32 %5487, 1
  store i32 %5490, ptr %5488, align 4, !tbaa !5
  %5491 = getelementptr inbounds i32, ptr %7, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !5
  %5493 = getelementptr inbounds i32, ptr %6, i64 %5489
  br label %5504

5494:                                             ; preds = %5468
  %5495 = icmp eq i32 %5471, %5474
  br i1 %5495, label %5496, label %5502

5496:                                             ; preds = %5494
  store i32 0, ptr %5470, align 4, !tbaa !5
  %5497 = getelementptr inbounds i32, ptr %8, i64 %5469
  %5498 = load i32, ptr %5497, align 4, !tbaa !5
  %5499 = getelementptr inbounds i32, ptr %6, i64 %5469
  store i32 %5498, ptr %5499, align 4, !tbaa !5
  %5500 = add nuw nsw i64 %5469, 1
  %5501 = icmp eq i64 %5500, %5226
  br i1 %5501, label %5509, label %5468, !llvm.loop !382

5502:                                             ; preds = %5464, %5494
  %5503 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5504:                                             ; preds = %5477, %5486
  %5505 = phi ptr [ %5493, %5486 ], [ %5470, %5477 ]
  %5506 = phi i32 [ %5492, %5486 ], [ 1, %5477 ]
  %5507 = load i32, ptr %5505, align 4, !tbaa !5
  %5508 = add nsw i32 %5507, %5506
  store i32 %5508, ptr %5505, align 4, !tbaa !5
  br label %5509

5509:                                             ; preds = %5496, %5504, %5466, %5456
  %5510 = icmp eq i32 %5458, %5
  br i1 %5510, label %5513, label %5371, !llvm.loop !383

5511:                                             ; preds = %4914
  %5512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 327, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

5513:                                             ; preds = %5509, %5369, %5213, %5073, %4902, %4762, %4606, %4466, %4295, %4155, %3999, %3859, %3688, %3548, %3392, %3252, %3081, %2943, %2789, %2651, %2479, %2336, %2177, %2034, %1860, %1718, %1560, %1418, %1238, %1100, %946, %808, %636, %495, %338, %197, %5220, %5229, %4920, %4929, %4613, %4622, %4313, %4322, %4006, %4015, %3706, %3715, %3399, %3408, %3099, %3108, %2796, %2805, %2500, %2509, %2184, %2193, %1878, %1887, %1567, %1576, %1263, %1272, %953, %962, %657, %666, %345, %354, %43, %52, %1864, %4906, %5511, %4299, %4904, %3692, %4297, %3085, %3690, %2493, %2490, %3083, %2481, %1255, %1250, %1862, %650, %647, %1240, %35, %30, %638, %18, %5066, %5151, %5206, %5362, %5447, %5502, %4459, %4544, %4599, %4755, %4840, %4895, %3852, %3937, %3992, %4148, %4233, %4288, %3245, %3330, %3385, %3541, %3626, %3681, %2644, %2728, %2782, %2936, %3020, %3074, %2027, %2112, %2170, %2329, %2414, %2472, %1411, %1495, %1553, %1711, %1795, %1853, %801, %885, %939, %1093, %1177, %1231, %190, %274, %331, %488, %572, %629
  %5514 = phi i32 [ -1, %629 ], [ -1, %572 ], [ -1, %488 ], [ -1, %331 ], [ -1, %274 ], [ -1, %190 ], [ -1, %1231 ], [ -1, %1177 ], [ -1, %1093 ], [ -1, %939 ], [ -1, %885 ], [ -1, %801 ], [ -1, %1853 ], [ -1, %1795 ], [ -1, %1711 ], [ -1, %1553 ], [ -1, %1495 ], [ -1, %1411 ], [ -1, %2472 ], [ -1, %2414 ], [ -1, %2329 ], [ -1, %2170 ], [ -1, %2112 ], [ -1, %2027 ], [ -1, %3074 ], [ -1, %3020 ], [ -1, %2936 ], [ -1, %2782 ], [ -1, %2728 ], [ -1, %2644 ], [ -1, %3681 ], [ -1, %3626 ], [ -1, %3541 ], [ -1, %3385 ], [ -1, %3330 ], [ -1, %3245 ], [ -1, %4288 ], [ -1, %4233 ], [ -1, %4148 ], [ -1, %3992 ], [ -1, %3937 ], [ -1, %3852 ], [ -1, %4895 ], [ -1, %4840 ], [ -1, %4755 ], [ -1, %4599 ], [ -1, %4544 ], [ -1, %4459 ], [ -1, %5502 ], [ -1, %5447 ], [ -1, %5362 ], [ -1, %5206 ], [ -1, %5151 ], [ -1, %5066 ], [ %10, %18 ], [ 1, %638 ], [ 1, %30 ], [ 1, %35 ], [ 1, %1240 ], [ 1, %647 ], [ 1, %650 ], [ 1, %1862 ], [ 1, %1250 ], [ 1, %1255 ], [ 1, %2481 ], [ 1, %3083 ], [ 1, %2490 ], [ 1, %2493 ], [ 1, %3085 ], [ 1, %3690 ], [ 1, %3692 ], [ 1, %4297 ], [ 1, %4299 ], [ 1, %4904 ], [ 1, %4906 ], [ 1, %5511 ], [ 1, %1864 ], [ 1, %52 ], [ 1, %43 ], [ 1, %354 ], [ 1, %345 ], [ 1, %666 ], [ 1, %657 ], [ 1, %962 ], [ 1, %953 ], [ 1, %1272 ], [ 1, %1263 ], [ 1, %1576 ], [ 1, %1567 ], [ 1, %1887 ], [ 1, %1878 ], [ 1, %2193 ], [ 1, %2184 ], [ 1, %2509 ], [ 1, %2500 ], [ 1, %2805 ], [ 1, %2796 ], [ 1, %3108 ], [ 1, %3099 ], [ 1, %3408 ], [ 1, %3399 ], [ 1, %3715 ], [ 1, %3706 ], [ 1, %4015 ], [ 1, %4006 ], [ 1, %4322 ], [ 1, %4313 ], [ 1, %4622 ], [ 1, %4613 ], [ 1, %4929 ], [ 1, %4920 ], [ 1, %5229 ], [ 1, %5220 ], [ %59, %197 ], [ %50, %338 ], [ %361, %495 ], [ %352, %636 ], [ %673, %808 ], [ %664, %946 ], [ %969, %1100 ], [ %960, %1238 ], [ %1279, %1418 ], [ %1270, %1560 ], [ %1583, %1718 ], [ %1574, %1860 ], [ %1894, %2034 ], [ %1885, %2177 ], [ %2200, %2336 ], [ %2191, %2479 ], [ %2516, %2651 ], [ %2507, %2789 ], [ %2812, %2943 ], [ %2803, %3081 ], [ %3115, %3252 ], [ %3106, %3392 ], [ %3415, %3548 ], [ %3406, %3688 ], [ %3722, %3859 ], [ %3713, %3999 ], [ %4022, %4155 ], [ %4013, %4295 ], [ %4329, %4466 ], [ %4320, %4606 ], [ %4629, %4762 ], [ %4620, %4902 ], [ %4936, %5073 ], [ %4927, %5213 ], [ %5236, %5369 ], [ %5227, %5509 ]
  ret i32 %5514
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3068 [
    i32 101, label %22
    i32 102, label %624
    i32 107, label %1232
    i32 108, label %1844
    i32 109, label %2456
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %27, ptr %26, align 1, !tbaa !11
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load i8, ptr %24, align 1, !tbaa !11
  %31 = icmp ugt i8 %27, %30
  br i1 %31, label %32, label %3068

32:                                               ; preds = %29
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %3068

33:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %34
    i32 0, label %330
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !5
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %3068

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %192

48:                                               ; preds = %34
  br i1 %38, label %49, label %3068

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %190
  %58 = phi i32 [ 0, %49 ], [ %142, %190 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %50, label %60, label %129

60:                                               ; preds = %57, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %57 ]
  %62 = phi i64 [ %70, %119 ], [ %54, %57 ]
  %63 = phi i64 [ %127, %119 ], [ %53, %57 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %57 ]
  %65 = sub i32 %52, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !384

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !385

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !386

129:                                              ; preds = %119, %57
  %130 = phi i32 [ %59, %57 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds i8, ptr %24, i64 %131
  %135 = load i8, ptr %134, align 1, !tbaa !11
  %136 = fcmp fast ueq double %133, 0.000000e+00
  br i1 %136, label %141, label %137

137:                                              ; preds = %129
  %138 = load i8, ptr %26, align 1, !tbaa !11
  %139 = icmp ugt i8 %138, %135
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  store i8 %135, ptr %26, align 1, !tbaa !11
  br label %141

141:                                              ; preds = %137, %140, %129
  %142 = add nuw nsw i32 %58, 1
  br i1 %51, label %143, label %190

143:                                              ; preds = %141
  %144 = load i32, ptr %4, align 4, !tbaa !5
  %145 = load i32, ptr %12, align 4, !tbaa !5
  %146 = add nsw i32 %145, -1
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %167, label %148

148:                                              ; preds = %143
  %149 = icmp eq i32 %144, %146
  br i1 %149, label %150, label %183

150:                                              ; preds = %148
  store i32 0, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %151, ptr %6, align 4, !tbaa !5
  br i1 %56, label %190, label %152

152:                                              ; preds = %150, %177
  %153 = phi i64 [ %181, %177 ], [ 1, %150 ]
  %154 = getelementptr inbounds i32, ptr %4, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !5
  %156 = getelementptr inbounds i32, ptr %12, i64 %153
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = add nsw i32 %157, -1
  %159 = icmp slt i32 %155, %158
  br i1 %159, label %160, label %175

160:                                              ; preds = %152
  br i1 %147, label %167, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds i32, ptr %7, i64 %153
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = getelementptr inbounds i32, ptr %6, i64 %153
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = add nsw i32 %165, %163
  store i32 %166, ptr %164, align 4, !tbaa !5
  br label %185

167:                                              ; preds = %143, %160
  %168 = phi i32 [ %155, %160 ], [ %144, %143 ]
  %169 = phi ptr [ %154, %160 ], [ %4, %143 ]
  %170 = phi i64 [ %153, %160 ], [ 0, %143 ]
  %171 = add nsw i32 %168, 1
  store i32 %171, ptr %169, align 4, !tbaa !5
  %172 = getelementptr inbounds i32, ptr %7, i64 %170
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %170
  br label %185

175:                                              ; preds = %152
  %176 = icmp eq i32 %155, %158
  br i1 %176, label %177, label %183

177:                                              ; preds = %175
  store i32 0, ptr %154, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %8, i64 %153
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %153
  store i32 %179, ptr %180, align 4, !tbaa !5
  %181 = add nuw nsw i64 %153, 1
  %182 = icmp eq i64 %181, %54
  br i1 %182, label %190, label %152, !llvm.loop !387

183:                                              ; preds = %148, %175
  %184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

185:                                              ; preds = %161, %167
  %186 = phi ptr [ %174, %167 ], [ %154, %161 ]
  %187 = phi i32 [ %173, %167 ], [ 1, %161 ]
  %188 = load i32, ptr %186, align 4, !tbaa !5
  %189 = add nsw i32 %188, %187
  store i32 %189, ptr %186, align 4, !tbaa !5
  br label %190

190:                                              ; preds = %177, %185, %150, %141
  %191 = icmp eq i32 %142, %5
  br i1 %191, label %3068, label %57, !llvm.loop !388

192:                                              ; preds = %40, %328
  %193 = phi i32 [ 0, %40 ], [ %277, %328 ]
  %194 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %41, label %195, label %264

195:                                              ; preds = %192, %254
  %196 = phi i32 [ %263, %254 ], [ 0, %192 ]
  %197 = phi i64 [ %205, %254 ], [ %45, %192 ]
  %198 = phi i64 [ %262, %254 ], [ %44, %192 ]
  %199 = phi i32 [ %260, %254 ], [ %194, %192 ]
  %200 = sub i32 %43, %196
  %201 = tail call i32 @llvm.smin.i32(i32 %200, i32 0)
  %202 = sub i32 %200, %201
  %203 = zext i32 %202 to i64
  %204 = add nuw nsw i64 %203, 1
  %205 = add nsw i64 %197, -1
  %206 = icmp ult i32 %202, 31
  br i1 %206, label %242, label %207

207:                                              ; preds = %195
  %208 = and i64 %204, 8589934560
  %209 = sub i64 %198, %208
  br label %210

210:                                              ; preds = %210, %207
  %211 = phi i64 [ 0, %207 ], [ %234, %210 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %230, %210 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %231, %210 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %232, %210 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %233, %210 ]
  %216 = sub i64 %198, %211
  %217 = getelementptr inbounds i32, ptr %11, i64 %216
  %218 = getelementptr inbounds i32, ptr %217, i64 -7
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %217, i64 -15
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %217, i64 -23
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %217, i64 -31
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = mul <8 x i32> %220, %212
  %231 = mul <8 x i32> %223, %213
  %232 = mul <8 x i32> %226, %214
  %233 = mul <8 x i32> %229, %215
  %234 = add nuw i64 %211, 32
  %235 = icmp eq i64 %234, %208
  br i1 %235, label %236, label %210, !llvm.loop !389

236:                                              ; preds = %210
  %237 = mul <8 x i32> %231, %230
  %238 = mul <8 x i32> %232, %237
  %239 = mul <8 x i32> %233, %238
  %240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %239)
  %241 = icmp eq i64 %204, %208
  br i1 %241, label %254, label %242

242:                                              ; preds = %195, %236
  %243 = phi i64 [ %198, %195 ], [ %209, %236 ]
  %244 = phi i32 [ 1, %195 ], [ %240, %236 ]
  br label %245

245:                                              ; preds = %242, %245
  %246 = phi i64 [ %251, %245 ], [ %243, %242 ]
  %247 = phi i32 [ %250, %245 ], [ %244, %242 ]
  %248 = getelementptr inbounds i32, ptr %11, i64 %246
  %249 = load i32, ptr %248, align 4, !tbaa !5
  %250 = mul nsw i32 %249, %247
  %251 = add nsw i64 %246, -1
  %252 = trunc i64 %246 to i32
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %245, label %254, !llvm.loop !390

254:                                              ; preds = %245, %236
  %255 = phi i32 [ %240, %236 ], [ %250, %245 ]
  %256 = and i64 %205, 4294967295
  %257 = getelementptr inbounds i32, ptr %6, i64 %256
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %255
  %260 = add nsw i32 %259, %199
  %261 = icmp sgt i64 %197, 2
  %262 = add nsw i64 %198, -1
  %263 = add i32 %196, 1
  br i1 %261, label %195, label %264, !llvm.loop !391

264:                                              ; preds = %254, %192
  %265 = phi i32 [ %194, %192 ], [ %260, %254 ]
  %266 = icmp slt i32 %265, %5
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

269:                                              ; preds = %264
  %270 = sext i32 %265 to i64
  %271 = getelementptr inbounds i8, ptr %24, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !11
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = icmp ugt i8 %273, %272
  br i1 %274, label %275, label %276

275:                                              ; preds = %269
  store i8 %272, ptr %26, align 1, !tbaa !11
  br label %276

276:                                              ; preds = %269, %275
  %277 = add nuw nsw i32 %193, 1
  br i1 %42, label %278, label %328

278:                                              ; preds = %276
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %47, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %45
  br i1 %320, label %328, label %287, !llvm.loop !392

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %276
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %3068, label %192, !llvm.loop !393

330:                                              ; preds = %33
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %3068

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %484

344:                                              ; preds = %330
  br i1 %334, label %345, label %3068

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %482
  %354 = phi i32 [ 0, %345 ], [ %434, %482 ]
  %355 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %356, label %425

356:                                              ; preds = %353, %415
  %357 = phi i32 [ %424, %415 ], [ 0, %353 ]
  %358 = phi i64 [ %366, %415 ], [ %350, %353 ]
  %359 = phi i64 [ %423, %415 ], [ %349, %353 ]
  %360 = phi i32 [ %421, %415 ], [ %355, %353 ]
  %361 = sub i32 %348, %357
  %362 = tail call i32 @llvm.smin.i32(i32 %361, i32 0)
  %363 = sub i32 %361, %362
  %364 = zext i32 %363 to i64
  %365 = add nuw nsw i64 %364, 1
  %366 = add nsw i64 %358, -1
  %367 = icmp ult i32 %363, 31
  br i1 %367, label %403, label %368

368:                                              ; preds = %356
  %369 = and i64 %365, 8589934560
  %370 = sub i64 %359, %369
  br label %371

371:                                              ; preds = %371, %368
  %372 = phi i64 [ 0, %368 ], [ %395, %371 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %368 ], [ %391, %371 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %368 ], [ %392, %371 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %368 ], [ %393, %371 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %368 ], [ %394, %371 ]
  %377 = sub i64 %359, %372
  %378 = getelementptr inbounds i32, ptr %9, i64 %377
  %379 = getelementptr inbounds i32, ptr %378, i64 -7
  %380 = load <8 x i32>, ptr %379, align 4, !tbaa !5
  %381 = shufflevector <8 x i32> %380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %382 = getelementptr inbounds i32, ptr %378, i64 -15
  %383 = load <8 x i32>, ptr %382, align 4, !tbaa !5
  %384 = shufflevector <8 x i32> %383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %385 = getelementptr inbounds i32, ptr %378, i64 -23
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !5
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %378, i64 -31
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = mul <8 x i32> %381, %373
  %392 = mul <8 x i32> %384, %374
  %393 = mul <8 x i32> %387, %375
  %394 = mul <8 x i32> %390, %376
  %395 = add nuw i64 %372, 32
  %396 = icmp eq i64 %395, %369
  br i1 %396, label %397, label %371, !llvm.loop !394

397:                                              ; preds = %371
  %398 = mul <8 x i32> %392, %391
  %399 = mul <8 x i32> %393, %398
  %400 = mul <8 x i32> %394, %399
  %401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %400)
  %402 = icmp eq i64 %365, %369
  br i1 %402, label %415, label %403

403:                                              ; preds = %356, %397
  %404 = phi i64 [ %359, %356 ], [ %370, %397 ]
  %405 = phi i32 [ 1, %356 ], [ %401, %397 ]
  br label %406

406:                                              ; preds = %403, %406
  %407 = phi i64 [ %412, %406 ], [ %404, %403 ]
  %408 = phi i32 [ %411, %406 ], [ %405, %403 ]
  %409 = getelementptr inbounds i32, ptr %9, i64 %407
  %410 = load i32, ptr %409, align 4, !tbaa !5
  %411 = mul nsw i32 %410, %408
  %412 = add nsw i64 %407, -1
  %413 = trunc i64 %407 to i32
  %414 = icmp sgt i32 %413, 0
  br i1 %414, label %406, label %415, !llvm.loop !395

415:                                              ; preds = %406, %397
  %416 = phi i32 [ %401, %397 ], [ %411, %406 ]
  %417 = and i64 %366, 4294967295
  %418 = getelementptr inbounds i32, ptr %6, i64 %417
  %419 = load i32, ptr %418, align 4, !tbaa !5
  %420 = mul nsw i32 %419, %416
  %421 = add nsw i32 %420, %360
  %422 = icmp sgt i64 %358, 2
  %423 = add nsw i64 %359, -1
  %424 = add i32 %357, 1
  br i1 %422, label %356, label %425, !llvm.loop !396

425:                                              ; preds = %415, %353
  %426 = phi i32 [ %355, %353 ], [ %421, %415 ]
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, ptr %24, i64 %427
  %429 = load i8, ptr %428, align 1, !tbaa !11
  %430 = load i8, ptr %26, align 1, !tbaa !11
  %431 = icmp ugt i8 %430, %429
  br i1 %431, label %432, label %433

432:                                              ; preds = %425
  store i8 %429, ptr %26, align 1, !tbaa !11
  br label %433

433:                                              ; preds = %432, %425
  %434 = add nuw nsw i32 %354, 1
  br i1 %347, label %435, label %482

435:                                              ; preds = %433
  %436 = load i32, ptr %4, align 4, !tbaa !5
  %437 = load i32, ptr %12, align 4, !tbaa !5
  %438 = add nsw i32 %437, -1
  %439 = icmp slt i32 %436, %438
  br i1 %439, label %459, label %440

440:                                              ; preds = %435
  %441 = icmp eq i32 %436, %438
  br i1 %441, label %442, label %475

442:                                              ; preds = %440
  store i32 0, ptr %4, align 4, !tbaa !5
  %443 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %443, ptr %6, align 4, !tbaa !5
  br i1 %352, label %482, label %444

444:                                              ; preds = %442, %469
  %445 = phi i64 [ %473, %469 ], [ 1, %442 ]
  %446 = getelementptr inbounds i32, ptr %4, i64 %445
  %447 = load i32, ptr %446, align 4, !tbaa !5
  %448 = getelementptr inbounds i32, ptr %12, i64 %445
  %449 = load i32, ptr %448, align 4, !tbaa !5
  %450 = add nsw i32 %449, -1
  %451 = icmp slt i32 %447, %450
  br i1 %451, label %452, label %467

452:                                              ; preds = %444
  br i1 %439, label %459, label %453

453:                                              ; preds = %452
  %454 = getelementptr inbounds i32, ptr %7, i64 %445
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = getelementptr inbounds i32, ptr %6, i64 %445
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = add nsw i32 %457, %455
  store i32 %458, ptr %456, align 4, !tbaa !5
  br label %477

459:                                              ; preds = %435, %452
  %460 = phi i32 [ %447, %452 ], [ %436, %435 ]
  %461 = phi ptr [ %446, %452 ], [ %4, %435 ]
  %462 = phi i64 [ %445, %452 ], [ 0, %435 ]
  %463 = add nsw i32 %460, 1
  store i32 %463, ptr %461, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %7, i64 %462
  %465 = load i32, ptr %464, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %6, i64 %462
  br label %477

467:                                              ; preds = %444
  %468 = icmp eq i32 %447, %450
  br i1 %468, label %469, label %475

469:                                              ; preds = %467
  store i32 0, ptr %446, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %8, i64 %445
  %471 = load i32, ptr %470, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %6, i64 %445
  store i32 %471, ptr %472, align 4, !tbaa !5
  %473 = add nuw nsw i64 %445, 1
  %474 = icmp eq i64 %473, %350
  br i1 %474, label %482, label %444, !llvm.loop !397

475:                                              ; preds = %440, %467
  %476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

477:                                              ; preds = %453, %459
  %478 = phi ptr [ %466, %459 ], [ %446, %453 ]
  %479 = phi i32 [ %465, %459 ], [ 1, %453 ]
  %480 = load i32, ptr %478, align 4, !tbaa !5
  %481 = add nsw i32 %480, %479
  store i32 %481, ptr %478, align 4, !tbaa !5
  br label %482

482:                                              ; preds = %469, %477, %442, %433
  %483 = icmp eq i32 %434, %5
  br i1 %483, label %3068, label %353, !llvm.loop !398

484:                                              ; preds = %336, %620
  %485 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %486 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %487, label %556

487:                                              ; preds = %484, %546
  %488 = phi i32 [ %555, %546 ], [ 0, %484 ]
  %489 = phi i64 [ %497, %546 ], [ %341, %484 ]
  %490 = phi i64 [ %554, %546 ], [ %340, %484 ]
  %491 = phi i32 [ %552, %546 ], [ %486, %484 ]
  %492 = sub i32 %339, %488
  %493 = tail call i32 @llvm.smin.i32(i32 %492, i32 0)
  %494 = sub i32 %492, %493
  %495 = zext i32 %494 to i64
  %496 = add nuw nsw i64 %495, 1
  %497 = add nsw i64 %489, -1
  %498 = icmp ult i32 %494, 31
  br i1 %498, label %534, label %499

499:                                              ; preds = %487
  %500 = and i64 %496, 8589934560
  %501 = sub i64 %490, %500
  br label %502

502:                                              ; preds = %502, %499
  %503 = phi i64 [ 0, %499 ], [ %526, %502 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %499 ], [ %522, %502 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %499 ], [ %523, %502 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %499 ], [ %524, %502 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %499 ], [ %525, %502 ]
  %508 = sub i64 %490, %503
  %509 = getelementptr inbounds i32, ptr %11, i64 %508
  %510 = getelementptr inbounds i32, ptr %509, i64 -7
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %509, i64 -15
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %509, i64 -23
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = getelementptr inbounds i32, ptr %509, i64 -31
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !5
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = mul <8 x i32> %512, %504
  %523 = mul <8 x i32> %515, %505
  %524 = mul <8 x i32> %518, %506
  %525 = mul <8 x i32> %521, %507
  %526 = add nuw i64 %503, 32
  %527 = icmp eq i64 %526, %500
  br i1 %527, label %528, label %502, !llvm.loop !399

528:                                              ; preds = %502
  %529 = mul <8 x i32> %523, %522
  %530 = mul <8 x i32> %524, %529
  %531 = mul <8 x i32> %525, %530
  %532 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %531)
  %533 = icmp eq i64 %496, %500
  br i1 %533, label %546, label %534

534:                                              ; preds = %487, %528
  %535 = phi i64 [ %490, %487 ], [ %501, %528 ]
  %536 = phi i32 [ 1, %487 ], [ %532, %528 ]
  br label %537

537:                                              ; preds = %534, %537
  %538 = phi i64 [ %543, %537 ], [ %535, %534 ]
  %539 = phi i32 [ %542, %537 ], [ %536, %534 ]
  %540 = getelementptr inbounds i32, ptr %11, i64 %538
  %541 = load i32, ptr %540, align 4, !tbaa !5
  %542 = mul nsw i32 %541, %539
  %543 = add nsw i64 %538, -1
  %544 = trunc i64 %538 to i32
  %545 = icmp sgt i32 %544, 0
  br i1 %545, label %537, label %546, !llvm.loop !400

546:                                              ; preds = %537, %528
  %547 = phi i32 [ %532, %528 ], [ %542, %537 ]
  %548 = and i64 %497, 4294967295
  %549 = getelementptr inbounds i32, ptr %6, i64 %548
  %550 = load i32, ptr %549, align 4, !tbaa !5
  %551 = mul nsw i32 %550, %547
  %552 = add nsw i32 %551, %491
  %553 = icmp sgt i64 %489, 2
  %554 = add nsw i64 %490, -1
  %555 = add i32 %488, 1
  br i1 %553, label %487, label %556, !llvm.loop !401

556:                                              ; preds = %546, %484
  %557 = phi i32 [ %486, %484 ], [ %552, %546 ]
  %558 = icmp slt i32 %557, %5
  br i1 %558, label %561, label %559

559:                                              ; preds = %556
  %560 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

561:                                              ; preds = %556
  %562 = sext i32 %557 to i64
  %563 = getelementptr inbounds i8, ptr %24, i64 %562
  %564 = load i8, ptr %563, align 1, !tbaa !11
  %565 = load i8, ptr %26, align 1, !tbaa !11
  %566 = icmp ugt i8 %565, %564
  br i1 %566, label %567, label %568

567:                                              ; preds = %561
  store i8 %564, ptr %26, align 1, !tbaa !11
  br label %568

568:                                              ; preds = %567, %561
  %569 = add nuw nsw i32 %485, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %568
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !402

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %568
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %3068, label %484, !llvm.loop !403

622:                                              ; preds = %33
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 528, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3068

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  %629 = load i8, ptr %626, align 1, !tbaa !11
  %630 = sext i8 %629 to i32
  store i32 %630, ptr %628, align 4, !tbaa !5
  %631 = icmp eq i32 %13, 0
  br i1 %631, label %632, label %637

632:                                              ; preds = %624
  %633 = load i8, ptr %626, align 1, !tbaa !11
  %634 = icmp sgt i8 %629, %633
  br i1 %634, label %635, label %3068

635:                                              ; preds = %632
  %636 = sext i8 %633 to i32
  store i32 %636, ptr %628, align 4, !tbaa !5
  br label %3068

637:                                              ; preds = %624
  switch i32 %1, label %1230 [
    i32 1, label %638
    i32 0, label %936
  ]

638:                                              ; preds = %637
  %639 = getelementptr inbounds i32, ptr %3, i64 %19
  %640 = load i32, ptr %639, align 4, !tbaa !5
  %641 = icmp eq i32 %640, 0
  %642 = icmp sgt i32 %5, 0
  br i1 %641, label %652, label %643

643:                                              ; preds = %638
  br i1 %642, label %644, label %3068

644:                                              ; preds = %643
  %645 = icmp sgt i32 %13, 1
  %646 = icmp sgt i32 %13, 0
  %647 = add i32 %13, -2
  %648 = zext i32 %647 to i64
  %649 = zext i32 %13 to i64
  %650 = add nuw i32 %5, 1
  %651 = icmp eq i32 %13, 1
  br label %797

652:                                              ; preds = %638
  br i1 %642, label %653, label %3068

653:                                              ; preds = %652
  %654 = icmp sgt i32 %13, 1
  %655 = icmp sgt i32 %13, 0
  %656 = add i32 %13, -2
  %657 = zext i32 %656 to i64
  %658 = zext i32 %13 to i64
  %659 = add nuw i32 %5, 1
  %660 = icmp eq i32 %13, 1
  br label %661

661:                                              ; preds = %653, %795
  %662 = phi i32 [ 0, %653 ], [ %747, %795 ]
  %663 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %654, label %664, label %733

664:                                              ; preds = %661, %723
  %665 = phi i32 [ %732, %723 ], [ 0, %661 ]
  %666 = phi i64 [ %674, %723 ], [ %658, %661 ]
  %667 = phi i64 [ %731, %723 ], [ %657, %661 ]
  %668 = phi i32 [ %729, %723 ], [ %663, %661 ]
  %669 = sub i32 %656, %665
  %670 = tail call i32 @llvm.smin.i32(i32 %669, i32 0)
  %671 = sub i32 %669, %670
  %672 = zext i32 %671 to i64
  %673 = add nuw nsw i64 %672, 1
  %674 = add nsw i64 %666, -1
  %675 = icmp ult i32 %671, 31
  br i1 %675, label %711, label %676

676:                                              ; preds = %664
  %677 = and i64 %673, 8589934560
  %678 = sub i64 %667, %677
  br label %679

679:                                              ; preds = %679, %676
  %680 = phi i64 [ 0, %676 ], [ %703, %679 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %699, %679 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %700, %679 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %701, %679 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %702, %679 ]
  %685 = sub i64 %667, %680
  %686 = getelementptr inbounds i32, ptr %9, i64 %685
  %687 = getelementptr inbounds i32, ptr %686, i64 -7
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %686, i64 -15
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %686, i64 -23
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %686, i64 -31
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = mul <8 x i32> %689, %681
  %700 = mul <8 x i32> %692, %682
  %701 = mul <8 x i32> %695, %683
  %702 = mul <8 x i32> %698, %684
  %703 = add nuw i64 %680, 32
  %704 = icmp eq i64 %703, %677
  br i1 %704, label %705, label %679, !llvm.loop !404

705:                                              ; preds = %679
  %706 = mul <8 x i32> %700, %699
  %707 = mul <8 x i32> %701, %706
  %708 = mul <8 x i32> %702, %707
  %709 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %708)
  %710 = icmp eq i64 %673, %677
  br i1 %710, label %723, label %711

711:                                              ; preds = %664, %705
  %712 = phi i64 [ %667, %664 ], [ %678, %705 ]
  %713 = phi i32 [ 1, %664 ], [ %709, %705 ]
  br label %714

714:                                              ; preds = %711, %714
  %715 = phi i64 [ %720, %714 ], [ %712, %711 ]
  %716 = phi i32 [ %719, %714 ], [ %713, %711 ]
  %717 = getelementptr inbounds i32, ptr %9, i64 %715
  %718 = load i32, ptr %717, align 4, !tbaa !5
  %719 = mul nsw i32 %718, %716
  %720 = add nsw i64 %715, -1
  %721 = trunc i64 %715 to i32
  %722 = icmp sgt i32 %721, 0
  br i1 %722, label %714, label %723, !llvm.loop !405

723:                                              ; preds = %714, %705
  %724 = phi i32 [ %709, %705 ], [ %719, %714 ]
  %725 = and i64 %674, 4294967295
  %726 = getelementptr inbounds i32, ptr %6, i64 %725
  %727 = load i32, ptr %726, align 4, !tbaa !5
  %728 = mul nsw i32 %727, %724
  %729 = add nsw i32 %728, %668
  %730 = icmp sgt i64 %666, 2
  %731 = add nsw i64 %667, -1
  %732 = add i32 %665, 1
  br i1 %730, label %664, label %733, !llvm.loop !406

733:                                              ; preds = %723, %661
  %734 = phi i32 [ %663, %661 ], [ %729, %723 ]
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds double, ptr %2, i64 %735
  %737 = load double, ptr %736, align 8, !tbaa !18
  %738 = getelementptr inbounds i8, ptr %626, i64 %735
  %739 = load i8, ptr %738, align 1, !tbaa !11
  %740 = sext i8 %739 to i32
  %741 = fcmp fast ueq double %737, 0.000000e+00
  br i1 %741, label %746, label %742

742:                                              ; preds = %733
  %743 = load i32, ptr %628, align 4, !tbaa !5
  %744 = icmp sgt i32 %743, %740
  br i1 %744, label %745, label %746

745:                                              ; preds = %742
  store i32 %740, ptr %628, align 4, !tbaa !5
  br label %746

746:                                              ; preds = %742, %745, %733
  %747 = add nuw nsw i32 %662, 1
  br i1 %655, label %748, label %795

748:                                              ; preds = %746
  %749 = load i32, ptr %4, align 4, !tbaa !5
  %750 = load i32, ptr %12, align 4, !tbaa !5
  %751 = add nsw i32 %750, -1
  %752 = icmp slt i32 %749, %751
  br i1 %752, label %772, label %753

753:                                              ; preds = %748
  %754 = icmp eq i32 %749, %751
  br i1 %754, label %755, label %788

755:                                              ; preds = %753
  store i32 0, ptr %4, align 4, !tbaa !5
  %756 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %756, ptr %6, align 4, !tbaa !5
  br i1 %660, label %795, label %757

757:                                              ; preds = %755, %782
  %758 = phi i64 [ %786, %782 ], [ 1, %755 ]
  %759 = getelementptr inbounds i32, ptr %4, i64 %758
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %12, i64 %758
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, -1
  %764 = icmp slt i32 %760, %763
  br i1 %764, label %765, label %780

765:                                              ; preds = %757
  br i1 %752, label %772, label %766

766:                                              ; preds = %765
  %767 = getelementptr inbounds i32, ptr %7, i64 %758
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %6, i64 %758
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = add nsw i32 %770, %768
  store i32 %771, ptr %769, align 4, !tbaa !5
  br label %790

772:                                              ; preds = %748, %765
  %773 = phi i32 [ %760, %765 ], [ %749, %748 ]
  %774 = phi ptr [ %759, %765 ], [ %4, %748 ]
  %775 = phi i64 [ %758, %765 ], [ 0, %748 ]
  %776 = add nsw i32 %773, 1
  store i32 %776, ptr %774, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %7, i64 %775
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %6, i64 %775
  br label %790

780:                                              ; preds = %757
  %781 = icmp eq i32 %760, %763
  br i1 %781, label %782, label %788

782:                                              ; preds = %780
  store i32 0, ptr %759, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %8, i64 %758
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %6, i64 %758
  store i32 %784, ptr %785, align 4, !tbaa !5
  %786 = add nuw nsw i64 %758, 1
  %787 = icmp eq i64 %786, %658
  br i1 %787, label %795, label %757, !llvm.loop !407

788:                                              ; preds = %753, %780
  %789 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

790:                                              ; preds = %766, %772
  %791 = phi ptr [ %779, %772 ], [ %759, %766 ]
  %792 = phi i32 [ %778, %772 ], [ 1, %766 ]
  %793 = load i32, ptr %791, align 4, !tbaa !5
  %794 = add nsw i32 %793, %792
  store i32 %794, ptr %791, align 4, !tbaa !5
  br label %795

795:                                              ; preds = %782, %790, %755, %746
  %796 = icmp eq i32 %747, %5
  br i1 %796, label %3068, label %661, !llvm.loop !408

797:                                              ; preds = %644, %934
  %798 = phi i32 [ 0, %644 ], [ %883, %934 ]
  %799 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %645, label %800, label %869

800:                                              ; preds = %797, %859
  %801 = phi i32 [ %868, %859 ], [ 0, %797 ]
  %802 = phi i64 [ %810, %859 ], [ %649, %797 ]
  %803 = phi i64 [ %867, %859 ], [ %648, %797 ]
  %804 = phi i32 [ %865, %859 ], [ %799, %797 ]
  %805 = sub i32 %647, %801
  %806 = tail call i32 @llvm.smin.i32(i32 %805, i32 0)
  %807 = sub i32 %805, %806
  %808 = zext i32 %807 to i64
  %809 = add nuw nsw i64 %808, 1
  %810 = add nsw i64 %802, -1
  %811 = icmp ult i32 %807, 31
  br i1 %811, label %847, label %812

812:                                              ; preds = %800
  %813 = and i64 %809, 8589934560
  %814 = sub i64 %803, %813
  br label %815

815:                                              ; preds = %815, %812
  %816 = phi i64 [ 0, %812 ], [ %839, %815 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %835, %815 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %836, %815 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %837, %815 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %812 ], [ %838, %815 ]
  %821 = sub i64 %803, %816
  %822 = getelementptr inbounds i32, ptr %11, i64 %821
  %823 = getelementptr inbounds i32, ptr %822, i64 -7
  %824 = load <8 x i32>, ptr %823, align 4, !tbaa !5
  %825 = shufflevector <8 x i32> %824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %826 = getelementptr inbounds i32, ptr %822, i64 -15
  %827 = load <8 x i32>, ptr %826, align 4, !tbaa !5
  %828 = shufflevector <8 x i32> %827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %829 = getelementptr inbounds i32, ptr %822, i64 -23
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %822, i64 -31
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !5
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = mul <8 x i32> %825, %817
  %836 = mul <8 x i32> %828, %818
  %837 = mul <8 x i32> %831, %819
  %838 = mul <8 x i32> %834, %820
  %839 = add nuw i64 %816, 32
  %840 = icmp eq i64 %839, %813
  br i1 %840, label %841, label %815, !llvm.loop !409

841:                                              ; preds = %815
  %842 = mul <8 x i32> %836, %835
  %843 = mul <8 x i32> %837, %842
  %844 = mul <8 x i32> %838, %843
  %845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %844)
  %846 = icmp eq i64 %809, %813
  br i1 %846, label %859, label %847

847:                                              ; preds = %800, %841
  %848 = phi i64 [ %803, %800 ], [ %814, %841 ]
  %849 = phi i32 [ 1, %800 ], [ %845, %841 ]
  br label %850

850:                                              ; preds = %847, %850
  %851 = phi i64 [ %856, %850 ], [ %848, %847 ]
  %852 = phi i32 [ %855, %850 ], [ %849, %847 ]
  %853 = getelementptr inbounds i32, ptr %11, i64 %851
  %854 = load i32, ptr %853, align 4, !tbaa !5
  %855 = mul nsw i32 %854, %852
  %856 = add nsw i64 %851, -1
  %857 = trunc i64 %851 to i32
  %858 = icmp sgt i32 %857, 0
  br i1 %858, label %850, label %859, !llvm.loop !410

859:                                              ; preds = %850, %841
  %860 = phi i32 [ %845, %841 ], [ %855, %850 ]
  %861 = and i64 %810, 4294967295
  %862 = getelementptr inbounds i32, ptr %6, i64 %861
  %863 = load i32, ptr %862, align 4, !tbaa !5
  %864 = mul nsw i32 %863, %860
  %865 = add nsw i32 %864, %804
  %866 = icmp sgt i64 %802, 2
  %867 = add nsw i64 %803, -1
  %868 = add i32 %801, 1
  br i1 %866, label %800, label %869, !llvm.loop !411

869:                                              ; preds = %859, %797
  %870 = phi i32 [ %799, %797 ], [ %865, %859 ]
  %871 = icmp slt i32 %870, %5
  br i1 %871, label %874, label %872

872:                                              ; preds = %869
  %873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

874:                                              ; preds = %869
  %875 = sext i32 %870 to i64
  %876 = getelementptr inbounds i8, ptr %626, i64 %875
  %877 = load i8, ptr %876, align 1, !tbaa !11
  %878 = sext i8 %877 to i32
  %879 = load i32, ptr %628, align 4, !tbaa !5
  %880 = icmp sgt i32 %879, %878
  br i1 %880, label %881, label %882

881:                                              ; preds = %874
  store i32 %878, ptr %628, align 4, !tbaa !5
  br label %882

882:                                              ; preds = %874, %881
  %883 = add nuw nsw i32 %798, 1
  br i1 %646, label %884, label %934

884:                                              ; preds = %882
  %885 = load i32, ptr %4, align 4, !tbaa !5
  %886 = load i32, ptr %12, align 4, !tbaa !5
  %887 = add nsw i32 %886, -1
  %888 = icmp slt i32 %885, %887
  br i1 %888, label %911, label %889

889:                                              ; preds = %884
  %890 = icmp eq i32 %885, %887
  br i1 %890, label %891, label %927

891:                                              ; preds = %889
  store i32 0, ptr %4, align 4, !tbaa !5
  %892 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %892, ptr %6, align 4, !tbaa !5
  br i1 %651, label %934, label %893

893:                                              ; preds = %891, %921
  %894 = phi i64 [ %925, %921 ], [ 1, %891 ]
  %895 = getelementptr inbounds i32, ptr %4, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = getelementptr inbounds i32, ptr %12, i64 %894
  %898 = load i32, ptr %897, align 4, !tbaa !5
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %896, %899
  br i1 %900, label %901, label %919

901:                                              ; preds = %893
  br i1 %888, label %911, label %902

902:                                              ; preds = %901
  %903 = shl i64 %894, 32
  %904 = add i64 %903, -4294967296
  %905 = ashr exact i64 %904, 32
  %906 = getelementptr inbounds i32, ptr %7, i64 %905
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %894
  %909 = load i32, ptr %908, align 4, !tbaa !5
  %910 = add nsw i32 %909, %907
  store i32 %910, ptr %908, align 4, !tbaa !5
  br label %929

911:                                              ; preds = %884, %901
  %912 = phi i32 [ %896, %901 ], [ %885, %884 ]
  %913 = phi ptr [ %895, %901 ], [ %4, %884 ]
  %914 = phi i64 [ %894, %901 ], [ 0, %884 ]
  %915 = add nsw i32 %912, 1
  store i32 %915, ptr %913, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %7, i64 %914
  %917 = load i32, ptr %916, align 4, !tbaa !5
  %918 = getelementptr inbounds i32, ptr %6, i64 %914
  br label %929

919:                                              ; preds = %893
  %920 = icmp eq i32 %896, %899
  br i1 %920, label %921, label %927

921:                                              ; preds = %919
  store i32 0, ptr %895, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %8, i64 %894
  %923 = load i32, ptr %922, align 4, !tbaa !5
  %924 = getelementptr inbounds i32, ptr %6, i64 %894
  store i32 %923, ptr %924, align 4, !tbaa !5
  %925 = add nuw nsw i64 %894, 1
  %926 = icmp eq i64 %925, %649
  br i1 %926, label %934, label %893, !llvm.loop !412

927:                                              ; preds = %889, %919
  %928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

929:                                              ; preds = %902, %911
  %930 = phi ptr [ %918, %911 ], [ %895, %902 ]
  %931 = phi i32 [ %917, %911 ], [ 1, %902 ]
  %932 = load i32, ptr %930, align 4, !tbaa !5
  %933 = add nsw i32 %932, %931
  store i32 %933, ptr %930, align 4, !tbaa !5
  br label %934

934:                                              ; preds = %921, %929, %891, %882
  %935 = icmp eq i32 %883, %5
  br i1 %935, label %3068, label %797, !llvm.loop !413

936:                                              ; preds = %637
  %937 = getelementptr inbounds i32, ptr %3, i64 %19
  %938 = load i32, ptr %937, align 4, !tbaa !5
  %939 = icmp eq i32 %938, 0
  %940 = icmp sgt i32 %5, 0
  br i1 %939, label %950, label %941

941:                                              ; preds = %936
  br i1 %940, label %942, label %3068

942:                                              ; preds = %941
  %943 = icmp sgt i32 %13, 1
  %944 = icmp sgt i32 %13, 0
  %945 = add i32 %13, -2
  %946 = zext i32 %945 to i64
  %947 = zext i32 %13 to i64
  %948 = add nuw i32 %5, 1
  %949 = icmp eq i32 %13, 1
  br label %1091

950:                                              ; preds = %936
  br i1 %940, label %951, label %3068

951:                                              ; preds = %950
  %952 = icmp sgt i32 %13, 1
  %953 = icmp sgt i32 %13, 0
  %954 = add i32 %13, -2
  %955 = zext i32 %954 to i64
  %956 = zext i32 %13 to i64
  %957 = add nuw i32 %5, 1
  %958 = icmp eq i32 %13, 1
  br label %959

959:                                              ; preds = %951, %1089
  %960 = phi i32 [ 0, %951 ], [ %1041, %1089 ]
  %961 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %952, label %962, label %1031

962:                                              ; preds = %959, %1021
  %963 = phi i32 [ %1030, %1021 ], [ 0, %959 ]
  %964 = phi i64 [ %972, %1021 ], [ %956, %959 ]
  %965 = phi i64 [ %1029, %1021 ], [ %955, %959 ]
  %966 = phi i32 [ %1027, %1021 ], [ %961, %959 ]
  %967 = sub i32 %954, %963
  %968 = tail call i32 @llvm.smin.i32(i32 %967, i32 0)
  %969 = sub i32 %967, %968
  %970 = zext i32 %969 to i64
  %971 = add nuw nsw i64 %970, 1
  %972 = add nsw i64 %964, -1
  %973 = icmp ult i32 %969, 31
  br i1 %973, label %1009, label %974

974:                                              ; preds = %962
  %975 = and i64 %971, 8589934560
  %976 = sub i64 %965, %975
  br label %977

977:                                              ; preds = %977, %974
  %978 = phi i64 [ 0, %974 ], [ %1001, %977 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %997, %977 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %998, %977 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %999, %977 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %1000, %977 ]
  %983 = sub i64 %965, %978
  %984 = getelementptr inbounds i32, ptr %9, i64 %983
  %985 = getelementptr inbounds i32, ptr %984, i64 -7
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %984, i64 -15
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %984, i64 -23
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %984, i64 -31
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = mul <8 x i32> %987, %979
  %998 = mul <8 x i32> %990, %980
  %999 = mul <8 x i32> %993, %981
  %1000 = mul <8 x i32> %996, %982
  %1001 = add nuw i64 %978, 32
  %1002 = icmp eq i64 %1001, %975
  br i1 %1002, label %1003, label %977, !llvm.loop !414

1003:                                             ; preds = %977
  %1004 = mul <8 x i32> %998, %997
  %1005 = mul <8 x i32> %999, %1004
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1006)
  %1008 = icmp eq i64 %971, %975
  br i1 %1008, label %1021, label %1009

1009:                                             ; preds = %962, %1003
  %1010 = phi i64 [ %965, %962 ], [ %976, %1003 ]
  %1011 = phi i32 [ 1, %962 ], [ %1007, %1003 ]
  br label %1012

1012:                                             ; preds = %1009, %1012
  %1013 = phi i64 [ %1018, %1012 ], [ %1010, %1009 ]
  %1014 = phi i32 [ %1017, %1012 ], [ %1011, %1009 ]
  %1015 = getelementptr inbounds i32, ptr %9, i64 %1013
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1014
  %1018 = add nsw i64 %1013, -1
  %1019 = trunc i64 %1013 to i32
  %1020 = icmp sgt i32 %1019, 0
  br i1 %1020, label %1012, label %1021, !llvm.loop !415

1021:                                             ; preds = %1012, %1003
  %1022 = phi i32 [ %1007, %1003 ], [ %1017, %1012 ]
  %1023 = and i64 %972, 4294967295
  %1024 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !5
  %1026 = mul nsw i32 %1025, %1022
  %1027 = add nsw i32 %1026, %966
  %1028 = icmp sgt i64 %964, 2
  %1029 = add nsw i64 %965, -1
  %1030 = add i32 %963, 1
  br i1 %1028, label %962, label %1031, !llvm.loop !416

1031:                                             ; preds = %1021, %959
  %1032 = phi i32 [ %961, %959 ], [ %1027, %1021 ]
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds i8, ptr %626, i64 %1033
  %1035 = load i8, ptr %1034, align 1, !tbaa !11
  %1036 = sext i8 %1035 to i32
  %1037 = load i32, ptr %628, align 4, !tbaa !5
  %1038 = icmp sgt i32 %1037, %1036
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1031
  store i32 %1036, ptr %628, align 4, !tbaa !5
  br label %1040

1040:                                             ; preds = %1039, %1031
  %1041 = add nuw nsw i32 %960, 1
  br i1 %953, label %1042, label %1089

1042:                                             ; preds = %1040
  %1043 = load i32, ptr %4, align 4, !tbaa !5
  %1044 = load i32, ptr %12, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1043, %1045
  br i1 %1046, label %1066, label %1047

1047:                                             ; preds = %1042
  %1048 = icmp eq i32 %1043, %1045
  br i1 %1048, label %1049, label %1082

1049:                                             ; preds = %1047
  store i32 0, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1050, ptr %6, align 4, !tbaa !5
  br i1 %958, label %1089, label %1051

1051:                                             ; preds = %1049, %1076
  %1052 = phi i64 [ %1080, %1076 ], [ 1, %1049 ]
  %1053 = getelementptr inbounds i32, ptr %4, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %12, i64 %1052
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, -1
  %1058 = icmp slt i32 %1054, %1057
  br i1 %1058, label %1059, label %1074

1059:                                             ; preds = %1051
  br i1 %1046, label %1066, label %1060

1060:                                             ; preds = %1059
  %1061 = getelementptr inbounds i32, ptr %7, i64 %1052
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1052
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, %1062
  store i32 %1065, ptr %1063, align 4, !tbaa !5
  br label %1084

1066:                                             ; preds = %1042, %1059
  %1067 = phi i32 [ %1054, %1059 ], [ %1043, %1042 ]
  %1068 = phi ptr [ %1053, %1059 ], [ %4, %1042 ]
  %1069 = phi i64 [ %1052, %1059 ], [ 0, %1042 ]
  %1070 = add nsw i32 %1067, 1
  store i32 %1070, ptr %1068, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %7, i64 %1069
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %6, i64 %1069
  br label %1084

1074:                                             ; preds = %1051
  %1075 = icmp eq i32 %1054, %1057
  br i1 %1075, label %1076, label %1082

1076:                                             ; preds = %1074
  store i32 0, ptr %1053, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %8, i64 %1052
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1052
  store i32 %1078, ptr %1079, align 4, !tbaa !5
  %1080 = add nuw nsw i64 %1052, 1
  %1081 = icmp eq i64 %1080, %956
  br i1 %1081, label %1089, label %1051, !llvm.loop !417

1082:                                             ; preds = %1047, %1074
  %1083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1084:                                             ; preds = %1060, %1066
  %1085 = phi ptr [ %1073, %1066 ], [ %1053, %1060 ]
  %1086 = phi i32 [ %1072, %1066 ], [ 1, %1060 ]
  %1087 = load i32, ptr %1085, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, %1086
  store i32 %1088, ptr %1085, align 4, !tbaa !5
  br label %1089

1089:                                             ; preds = %1076, %1084, %1049, %1040
  %1090 = icmp eq i32 %1041, %5
  br i1 %1090, label %3068, label %959, !llvm.loop !418

1091:                                             ; preds = %942, %1228
  %1092 = phi i32 [ 0, %942 ], [ %1177, %1228 ]
  %1093 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %943, label %1094, label %1163

1094:                                             ; preds = %1091, %1153
  %1095 = phi i32 [ %1162, %1153 ], [ 0, %1091 ]
  %1096 = phi i64 [ %1104, %1153 ], [ %947, %1091 ]
  %1097 = phi i64 [ %1161, %1153 ], [ %946, %1091 ]
  %1098 = phi i32 [ %1159, %1153 ], [ %1093, %1091 ]
  %1099 = sub i32 %945, %1095
  %1100 = tail call i32 @llvm.smin.i32(i32 %1099, i32 0)
  %1101 = sub i32 %1099, %1100
  %1102 = zext i32 %1101 to i64
  %1103 = add nuw nsw i64 %1102, 1
  %1104 = add nsw i64 %1096, -1
  %1105 = icmp ult i32 %1101, 31
  br i1 %1105, label %1141, label %1106

1106:                                             ; preds = %1094
  %1107 = and i64 %1103, 8589934560
  %1108 = sub i64 %1097, %1107
  br label %1109

1109:                                             ; preds = %1109, %1106
  %1110 = phi i64 [ 0, %1106 ], [ %1133, %1109 ]
  %1111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1129, %1109 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1130, %1109 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1131, %1109 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1132, %1109 ]
  %1115 = sub i64 %1097, %1110
  %1116 = getelementptr inbounds i32, ptr %11, i64 %1115
  %1117 = getelementptr inbounds i32, ptr %1116, i64 -7
  %1118 = load <8 x i32>, ptr %1117, align 4, !tbaa !5
  %1119 = shufflevector <8 x i32> %1118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1120 = getelementptr inbounds i32, ptr %1116, i64 -15
  %1121 = load <8 x i32>, ptr %1120, align 4, !tbaa !5
  %1122 = shufflevector <8 x i32> %1121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1123 = getelementptr inbounds i32, ptr %1116, i64 -23
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1116, i64 -31
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = mul <8 x i32> %1119, %1111
  %1130 = mul <8 x i32> %1122, %1112
  %1131 = mul <8 x i32> %1125, %1113
  %1132 = mul <8 x i32> %1128, %1114
  %1133 = add nuw i64 %1110, 32
  %1134 = icmp eq i64 %1133, %1107
  br i1 %1134, label %1135, label %1109, !llvm.loop !419

1135:                                             ; preds = %1109
  %1136 = mul <8 x i32> %1130, %1129
  %1137 = mul <8 x i32> %1131, %1136
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1138)
  %1140 = icmp eq i64 %1103, %1107
  br i1 %1140, label %1153, label %1141

1141:                                             ; preds = %1094, %1135
  %1142 = phi i64 [ %1097, %1094 ], [ %1108, %1135 ]
  %1143 = phi i32 [ 1, %1094 ], [ %1139, %1135 ]
  br label %1144

1144:                                             ; preds = %1141, %1144
  %1145 = phi i64 [ %1150, %1144 ], [ %1142, %1141 ]
  %1146 = phi i32 [ %1149, %1144 ], [ %1143, %1141 ]
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1145
  %1148 = load i32, ptr %1147, align 4, !tbaa !5
  %1149 = mul nsw i32 %1148, %1146
  %1150 = add nsw i64 %1145, -1
  %1151 = trunc i64 %1145 to i32
  %1152 = icmp sgt i32 %1151, 0
  br i1 %1152, label %1144, label %1153, !llvm.loop !420

1153:                                             ; preds = %1144, %1135
  %1154 = phi i32 [ %1139, %1135 ], [ %1149, %1144 ]
  %1155 = and i64 %1104, 4294967295
  %1156 = getelementptr inbounds i32, ptr %6, i64 %1155
  %1157 = load i32, ptr %1156, align 4, !tbaa !5
  %1158 = mul nsw i32 %1157, %1154
  %1159 = add nsw i32 %1158, %1098
  %1160 = icmp sgt i64 %1096, 2
  %1161 = add nsw i64 %1097, -1
  %1162 = add i32 %1095, 1
  br i1 %1160, label %1094, label %1163, !llvm.loop !421

1163:                                             ; preds = %1153, %1091
  %1164 = phi i32 [ %1093, %1091 ], [ %1159, %1153 ]
  %1165 = icmp slt i32 %1164, %5
  br i1 %1165, label %1168, label %1166

1166:                                             ; preds = %1163
  %1167 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

1168:                                             ; preds = %1163
  %1169 = sext i32 %1164 to i64
  %1170 = getelementptr inbounds i8, ptr %626, i64 %1169
  %1171 = load i8, ptr %1170, align 1, !tbaa !11
  %1172 = sext i8 %1171 to i32
  %1173 = load i32, ptr %628, align 4, !tbaa !5
  %1174 = icmp sgt i32 %1173, %1172
  br i1 %1174, label %1175, label %1176

1175:                                             ; preds = %1168
  store i32 %1172, ptr %628, align 4, !tbaa !5
  br label %1176

1176:                                             ; preds = %1175, %1168
  %1177 = add nuw nsw i32 %1092, 1
  br i1 %944, label %1178, label %1228

1178:                                             ; preds = %1176
  %1179 = load i32, ptr %4, align 4, !tbaa !5
  %1180 = load i32, ptr %12, align 4, !tbaa !5
  %1181 = add nsw i32 %1180, -1
  %1182 = icmp slt i32 %1179, %1181
  br i1 %1182, label %1205, label %1183

1183:                                             ; preds = %1178
  %1184 = icmp eq i32 %1179, %1181
  br i1 %1184, label %1185, label %1221

1185:                                             ; preds = %1183
  store i32 0, ptr %4, align 4, !tbaa !5
  %1186 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1186, ptr %6, align 4, !tbaa !5
  br i1 %949, label %1228, label %1187

1187:                                             ; preds = %1185, %1215
  %1188 = phi i64 [ %1219, %1215 ], [ 1, %1185 ]
  %1189 = getelementptr inbounds i32, ptr %4, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %12, i64 %1188
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, -1
  %1194 = icmp slt i32 %1190, %1193
  br i1 %1194, label %1195, label %1213

1195:                                             ; preds = %1187
  br i1 %1182, label %1205, label %1196

1196:                                             ; preds = %1195
  %1197 = shl i64 %1188, 32
  %1198 = add i64 %1197, -4294967296
  %1199 = ashr exact i64 %1198, 32
  %1200 = getelementptr inbounds i32, ptr %7, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %6, i64 %1188
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = add nsw i32 %1203, %1201
  store i32 %1204, ptr %1202, align 4, !tbaa !5
  br label %1223

1205:                                             ; preds = %1178, %1195
  %1206 = phi i32 [ %1190, %1195 ], [ %1179, %1178 ]
  %1207 = phi ptr [ %1189, %1195 ], [ %4, %1178 ]
  %1208 = phi i64 [ %1188, %1195 ], [ 0, %1178 ]
  %1209 = add nsw i32 %1206, 1
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1208
  br label %1223

1213:                                             ; preds = %1187
  %1214 = icmp eq i32 %1190, %1193
  br i1 %1214, label %1215, label %1221

1215:                                             ; preds = %1213
  store i32 0, ptr %1189, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %8, i64 %1188
  %1217 = load i32, ptr %1216, align 4, !tbaa !5
  %1218 = getelementptr inbounds i32, ptr %6, i64 %1188
  store i32 %1217, ptr %1218, align 4, !tbaa !5
  %1219 = add nuw nsw i64 %1188, 1
  %1220 = icmp eq i64 %1219, %947
  br i1 %1220, label %1228, label %1187, !llvm.loop !422

1221:                                             ; preds = %1183, %1213
  %1222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1223:                                             ; preds = %1196, %1205
  %1224 = phi ptr [ %1212, %1205 ], [ %1189, %1196 ]
  %1225 = phi i32 [ %1211, %1205 ], [ 1, %1196 ]
  %1226 = load i32, ptr %1224, align 4, !tbaa !5
  %1227 = add nsw i32 %1226, %1225
  store i32 %1227, ptr %1224, align 4, !tbaa !5
  br label %1228

1228:                                             ; preds = %1215, %1223, %1185, %1176
  %1229 = icmp eq i32 %1177, %5
  br i1 %1229, label %3068, label %1091, !llvm.loop !423

1230:                                             ; preds = %637
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3068

1232:                                             ; preds = %18
  %1233 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1234 = load ptr, ptr %1233, align 8, !tbaa !9
  %1235 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1236 = load ptr, ptr %1235, align 8, !tbaa !9
  %1237 = load i8, ptr %1234, align 1, !tbaa !11
  %1238 = sitofp i8 %1237 to double
  store double %1238, ptr %1236, align 8, !tbaa !18
  %1239 = icmp eq i32 %13, 0
  br i1 %1239, label %1240, label %1245

1240:                                             ; preds = %1232
  %1241 = load i8, ptr %1234, align 1, !tbaa !11
  %1242 = sitofp i8 %1241 to double
  %1243 = fcmp fast ogt double %1238, %1242
  br i1 %1243, label %1244, label %3068

1244:                                             ; preds = %1240
  store double %1242, ptr %1236, align 8, !tbaa !18
  br label %3068

1245:                                             ; preds = %1232
  switch i32 %1, label %1842 [
    i32 1, label %1246
    i32 0, label %1546
  ]

1246:                                             ; preds = %1245
  %1247 = getelementptr inbounds i32, ptr %3, i64 %19
  %1248 = load i32, ptr %1247, align 4, !tbaa !5
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp sgt i32 %5, 0
  br i1 %1249, label %1260, label %1251

1251:                                             ; preds = %1246
  br i1 %1250, label %1252, label %3068

1252:                                             ; preds = %1251
  %1253 = icmp sgt i32 %13, 1
  %1254 = icmp sgt i32 %13, 0
  %1255 = add i32 %13, -2
  %1256 = zext i32 %1255 to i64
  %1257 = zext i32 %13 to i64
  %1258 = add nuw i32 %5, 1
  %1259 = icmp eq i32 %13, 1
  br label %1406

1260:                                             ; preds = %1246
  br i1 %1250, label %1261, label %3068

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1269

1269:                                             ; preds = %1261, %1404
  %1270 = phi double [ %1238, %1261 ], [ %1355, %1404 ]
  %1271 = phi i32 [ 0, %1261 ], [ %1356, %1404 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1262, label %1273, label %1342

1273:                                             ; preds = %1269, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1269 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1266, %1269 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1265, %1269 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1269 ]
  %1278 = sub i32 %1264, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !424

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !425

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !426

1342:                                             ; preds = %1332, %1269
  %1343 = phi i32 [ %1272, %1269 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds i8, ptr %1234, i64 %1344
  %1348 = load i8, ptr %1347, align 1, !tbaa !11
  %1349 = sitofp i8 %1348 to double
  %1350 = fcmp fast one double %1346, 0.000000e+00
  %1351 = fcmp fast ogt double %1270, %1349
  %1352 = select i1 %1350, i1 %1351, i1 false
  br i1 %1352, label %1353, label %1354

1353:                                             ; preds = %1342
  store double %1349, ptr %1236, align 8, !tbaa !18
  br label %1354

1354:                                             ; preds = %1353, %1342
  %1355 = phi double [ %1349, %1353 ], [ %1270, %1342 ]
  %1356 = add nuw nsw i32 %1271, 1
  br i1 %1263, label %1357, label %1404

1357:                                             ; preds = %1354
  %1358 = load i32, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %12, align 4, !tbaa !5
  %1360 = add nsw i32 %1359, -1
  %1361 = icmp slt i32 %1358, %1360
  br i1 %1361, label %1381, label %1362

1362:                                             ; preds = %1357
  %1363 = icmp eq i32 %1358, %1360
  br i1 %1363, label %1364, label %1397

1364:                                             ; preds = %1362
  store i32 0, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1365, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1404, label %1366

1366:                                             ; preds = %1364, %1391
  %1367 = phi i64 [ %1395, %1391 ], [ 1, %1364 ]
  %1368 = getelementptr inbounds i32, ptr %4, i64 %1367
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %12, i64 %1367
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = add nsw i32 %1371, -1
  %1373 = icmp slt i32 %1369, %1372
  br i1 %1373, label %1374, label %1389

1374:                                             ; preds = %1366
  br i1 %1361, label %1381, label %1375

1375:                                             ; preds = %1374
  %1376 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1367
  %1379 = load i32, ptr %1378, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1377
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  br label %1399

1381:                                             ; preds = %1357, %1374
  %1382 = phi i32 [ %1369, %1374 ], [ %1358, %1357 ]
  %1383 = phi ptr [ %1368, %1374 ], [ %4, %1357 ]
  %1384 = phi i64 [ %1367, %1374 ], [ 0, %1357 ]
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1384
  br label %1399

1389:                                             ; preds = %1366
  %1390 = icmp eq i32 %1369, %1372
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1389
  store i32 0, ptr %1368, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %8, i64 %1367
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1367
  store i32 %1393, ptr %1394, align 4, !tbaa !5
  %1395 = add nuw nsw i64 %1367, 1
  %1396 = icmp eq i64 %1395, %1266
  br i1 %1396, label %1404, label %1366, !llvm.loop !427

1397:                                             ; preds = %1362, %1389
  %1398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1399:                                             ; preds = %1375, %1381
  %1400 = phi ptr [ %1388, %1381 ], [ %1368, %1375 ]
  %1401 = phi i32 [ %1387, %1381 ], [ 1, %1375 ]
  %1402 = load i32, ptr %1400, align 4, !tbaa !5
  %1403 = add nsw i32 %1402, %1401
  store i32 %1403, ptr %1400, align 4, !tbaa !5
  br label %1404

1404:                                             ; preds = %1391, %1399, %1364, %1354
  %1405 = icmp eq i32 %1356, %5
  br i1 %1405, label %3068, label %1269, !llvm.loop !428

1406:                                             ; preds = %1252, %1544
  %1407 = phi double [ %1238, %1252 ], [ %1492, %1544 ]
  %1408 = phi i32 [ 0, %1252 ], [ %1493, %1544 ]
  %1409 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1253, label %1410, label %1479

1410:                                             ; preds = %1406, %1469
  %1411 = phi i32 [ %1478, %1469 ], [ 0, %1406 ]
  %1412 = phi i64 [ %1420, %1469 ], [ %1257, %1406 ]
  %1413 = phi i64 [ %1477, %1469 ], [ %1256, %1406 ]
  %1414 = phi i32 [ %1475, %1469 ], [ %1409, %1406 ]
  %1415 = sub i32 %1255, %1411
  %1416 = tail call i32 @llvm.smin.i32(i32 %1415, i32 0)
  %1417 = sub i32 %1415, %1416
  %1418 = zext i32 %1417 to i64
  %1419 = add nuw nsw i64 %1418, 1
  %1420 = add nsw i64 %1412, -1
  %1421 = icmp ult i32 %1417, 31
  br i1 %1421, label %1457, label %1422

1422:                                             ; preds = %1410
  %1423 = and i64 %1419, 8589934560
  %1424 = sub i64 %1413, %1423
  br label %1425

1425:                                             ; preds = %1425, %1422
  %1426 = phi i64 [ 0, %1422 ], [ %1449, %1425 ]
  %1427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1445, %1425 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1446, %1425 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1447, %1425 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1448, %1425 ]
  %1431 = sub i64 %1413, %1426
  %1432 = getelementptr inbounds i32, ptr %11, i64 %1431
  %1433 = getelementptr inbounds i32, ptr %1432, i64 -7
  %1434 = load <8 x i32>, ptr %1433, align 4, !tbaa !5
  %1435 = shufflevector <8 x i32> %1434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1436 = getelementptr inbounds i32, ptr %1432, i64 -15
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1432, i64 -23
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1432, i64 -31
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = mul <8 x i32> %1435, %1427
  %1446 = mul <8 x i32> %1438, %1428
  %1447 = mul <8 x i32> %1441, %1429
  %1448 = mul <8 x i32> %1444, %1430
  %1449 = add nuw i64 %1426, 32
  %1450 = icmp eq i64 %1449, %1423
  br i1 %1450, label %1451, label %1425, !llvm.loop !429

1451:                                             ; preds = %1425
  %1452 = mul <8 x i32> %1446, %1445
  %1453 = mul <8 x i32> %1447, %1452
  %1454 = mul <8 x i32> %1448, %1453
  %1455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1454)
  %1456 = icmp eq i64 %1419, %1423
  br i1 %1456, label %1469, label %1457

1457:                                             ; preds = %1410, %1451
  %1458 = phi i64 [ %1413, %1410 ], [ %1424, %1451 ]
  %1459 = phi i32 [ 1, %1410 ], [ %1455, %1451 ]
  br label %1460

1460:                                             ; preds = %1457, %1460
  %1461 = phi i64 [ %1466, %1460 ], [ %1458, %1457 ]
  %1462 = phi i32 [ %1465, %1460 ], [ %1459, %1457 ]
  %1463 = getelementptr inbounds i32, ptr %11, i64 %1461
  %1464 = load i32, ptr %1463, align 4, !tbaa !5
  %1465 = mul nsw i32 %1464, %1462
  %1466 = add nsw i64 %1461, -1
  %1467 = trunc i64 %1461 to i32
  %1468 = icmp sgt i32 %1467, 0
  br i1 %1468, label %1460, label %1469, !llvm.loop !430

1469:                                             ; preds = %1460, %1451
  %1470 = phi i32 [ %1455, %1451 ], [ %1465, %1460 ]
  %1471 = and i64 %1420, 4294967295
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1471
  %1473 = load i32, ptr %1472, align 4, !tbaa !5
  %1474 = mul nsw i32 %1473, %1470
  %1475 = add nsw i32 %1474, %1414
  %1476 = icmp sgt i64 %1412, 2
  %1477 = add nsw i64 %1413, -1
  %1478 = add i32 %1411, 1
  br i1 %1476, label %1410, label %1479, !llvm.loop !431

1479:                                             ; preds = %1469, %1406
  %1480 = phi i32 [ %1409, %1406 ], [ %1475, %1469 ]
  %1481 = icmp slt i32 %1480, %5
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1479
  %1483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

1484:                                             ; preds = %1479
  %1485 = sext i32 %1480 to i64
  %1486 = getelementptr inbounds i8, ptr %1234, i64 %1485
  %1487 = load i8, ptr %1486, align 1, !tbaa !11
  %1488 = sitofp i8 %1487 to double
  %1489 = fcmp fast ogt double %1407, %1488
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1484
  store double %1488, ptr %1236, align 8, !tbaa !18
  br label %1491

1491:                                             ; preds = %1484, %1490
  %1492 = phi double [ %1407, %1484 ], [ %1488, %1490 ]
  %1493 = add nuw nsw i32 %1408, 1
  br i1 %1254, label %1494, label %1544

1494:                                             ; preds = %1491
  %1495 = load i32, ptr %4, align 4, !tbaa !5
  %1496 = load i32, ptr %12, align 4, !tbaa !5
  %1497 = add nsw i32 %1496, -1
  %1498 = icmp slt i32 %1495, %1497
  br i1 %1498, label %1521, label %1499

1499:                                             ; preds = %1494
  %1500 = icmp eq i32 %1495, %1497
  br i1 %1500, label %1501, label %1537

1501:                                             ; preds = %1499
  store i32 0, ptr %4, align 4, !tbaa !5
  %1502 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1502, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1544, label %1503

1503:                                             ; preds = %1501, %1531
  %1504 = phi i64 [ %1535, %1531 ], [ 1, %1501 ]
  %1505 = getelementptr inbounds i32, ptr %4, i64 %1504
  %1506 = load i32, ptr %1505, align 4, !tbaa !5
  %1507 = getelementptr inbounds i32, ptr %12, i64 %1504
  %1508 = load i32, ptr %1507, align 4, !tbaa !5
  %1509 = add nsw i32 %1508, -1
  %1510 = icmp slt i32 %1506, %1509
  br i1 %1510, label %1511, label %1529

1511:                                             ; preds = %1503
  br i1 %1498, label %1521, label %1512

1512:                                             ; preds = %1511
  %1513 = shl i64 %1504, 32
  %1514 = add i64 %1513, -4294967296
  %1515 = ashr exact i64 %1514, 32
  %1516 = getelementptr inbounds i32, ptr %7, i64 %1515
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = getelementptr inbounds i32, ptr %6, i64 %1504
  %1519 = load i32, ptr %1518, align 4, !tbaa !5
  %1520 = add nsw i32 %1519, %1517
  store i32 %1520, ptr %1518, align 4, !tbaa !5
  br label %1539

1521:                                             ; preds = %1494, %1511
  %1522 = phi i32 [ %1506, %1511 ], [ %1495, %1494 ]
  %1523 = phi ptr [ %1505, %1511 ], [ %4, %1494 ]
  %1524 = phi i64 [ %1504, %1511 ], [ 0, %1494 ]
  %1525 = add nsw i32 %1522, 1
  store i32 %1525, ptr %1523, align 4, !tbaa !5
  %1526 = getelementptr inbounds i32, ptr %7, i64 %1524
  %1527 = load i32, ptr %1526, align 4, !tbaa !5
  %1528 = getelementptr inbounds i32, ptr %6, i64 %1524
  br label %1539

1529:                                             ; preds = %1503
  %1530 = icmp eq i32 %1506, %1509
  br i1 %1530, label %1531, label %1537

1531:                                             ; preds = %1529
  store i32 0, ptr %1505, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %8, i64 %1504
  %1533 = load i32, ptr %1532, align 4, !tbaa !5
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1504
  store i32 %1533, ptr %1534, align 4, !tbaa !5
  %1535 = add nuw nsw i64 %1504, 1
  %1536 = icmp eq i64 %1535, %1257
  br i1 %1536, label %1544, label %1503, !llvm.loop !432

1537:                                             ; preds = %1499, %1529
  %1538 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1539:                                             ; preds = %1512, %1521
  %1540 = phi ptr [ %1528, %1521 ], [ %1505, %1512 ]
  %1541 = phi i32 [ %1527, %1521 ], [ 1, %1512 ]
  %1542 = load i32, ptr %1540, align 4, !tbaa !5
  %1543 = add nsw i32 %1542, %1541
  store i32 %1543, ptr %1540, align 4, !tbaa !5
  br label %1544

1544:                                             ; preds = %1531, %1539, %1501, %1491
  %1545 = icmp eq i32 %1493, %5
  br i1 %1545, label %3068, label %1406, !llvm.loop !433

1546:                                             ; preds = %1245
  %1547 = getelementptr inbounds i32, ptr %3, i64 %19
  %1548 = load i32, ptr %1547, align 4, !tbaa !5
  %1549 = icmp eq i32 %1548, 0
  %1550 = icmp sgt i32 %5, 0
  br i1 %1549, label %1560, label %1551

1551:                                             ; preds = %1546
  br i1 %1550, label %1552, label %3068

1552:                                             ; preds = %1551
  %1553 = icmp sgt i32 %13, 1
  %1554 = icmp sgt i32 %13, 0
  %1555 = add i32 %13, -2
  %1556 = zext i32 %1555 to i64
  %1557 = zext i32 %13 to i64
  %1558 = add nuw i32 %5, 1
  %1559 = icmp eq i32 %13, 1
  br label %1702

1560:                                             ; preds = %1546
  br i1 %1550, label %1561, label %3068

1561:                                             ; preds = %1560
  %1562 = icmp sgt i32 %13, 1
  %1563 = icmp sgt i32 %13, 0
  %1564 = add i32 %13, -2
  %1565 = zext i32 %1564 to i64
  %1566 = zext i32 %13 to i64
  %1567 = add nuw i32 %5, 1
  %1568 = icmp eq i32 %13, 1
  br label %1569

1569:                                             ; preds = %1561, %1700
  %1570 = phi double [ %1238, %1561 ], [ %1651, %1700 ]
  %1571 = phi i32 [ 0, %1561 ], [ %1652, %1700 ]
  %1572 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1562, label %1573, label %1642

1573:                                             ; preds = %1569, %1632
  %1574 = phi i32 [ %1641, %1632 ], [ 0, %1569 ]
  %1575 = phi i64 [ %1583, %1632 ], [ %1566, %1569 ]
  %1576 = phi i64 [ %1640, %1632 ], [ %1565, %1569 ]
  %1577 = phi i32 [ %1638, %1632 ], [ %1572, %1569 ]
  %1578 = sub i32 %1564, %1574
  %1579 = tail call i32 @llvm.smin.i32(i32 %1578, i32 0)
  %1580 = sub i32 %1578, %1579
  %1581 = zext i32 %1580 to i64
  %1582 = add nuw nsw i64 %1581, 1
  %1583 = add nsw i64 %1575, -1
  %1584 = icmp ult i32 %1580, 31
  br i1 %1584, label %1620, label %1585

1585:                                             ; preds = %1573
  %1586 = and i64 %1582, 8589934560
  %1587 = sub i64 %1576, %1586
  br label %1588

1588:                                             ; preds = %1588, %1585
  %1589 = phi i64 [ 0, %1585 ], [ %1612, %1588 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1585 ], [ %1608, %1588 ]
  %1591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1585 ], [ %1609, %1588 ]
  %1592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1585 ], [ %1610, %1588 ]
  %1593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1585 ], [ %1611, %1588 ]
  %1594 = sub i64 %1576, %1589
  %1595 = getelementptr inbounds i32, ptr %9, i64 %1594
  %1596 = getelementptr inbounds i32, ptr %1595, i64 -7
  %1597 = load <8 x i32>, ptr %1596, align 4, !tbaa !5
  %1598 = shufflevector <8 x i32> %1597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1599 = getelementptr inbounds i32, ptr %1595, i64 -15
  %1600 = load <8 x i32>, ptr %1599, align 4, !tbaa !5
  %1601 = shufflevector <8 x i32> %1600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1602 = getelementptr inbounds i32, ptr %1595, i64 -23
  %1603 = load <8 x i32>, ptr %1602, align 4, !tbaa !5
  %1604 = shufflevector <8 x i32> %1603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1605 = getelementptr inbounds i32, ptr %1595, i64 -31
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !5
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = mul <8 x i32> %1598, %1590
  %1609 = mul <8 x i32> %1601, %1591
  %1610 = mul <8 x i32> %1604, %1592
  %1611 = mul <8 x i32> %1607, %1593
  %1612 = add nuw i64 %1589, 32
  %1613 = icmp eq i64 %1612, %1586
  br i1 %1613, label %1614, label %1588, !llvm.loop !434

1614:                                             ; preds = %1588
  %1615 = mul <8 x i32> %1609, %1608
  %1616 = mul <8 x i32> %1610, %1615
  %1617 = mul <8 x i32> %1611, %1616
  %1618 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1617)
  %1619 = icmp eq i64 %1582, %1586
  br i1 %1619, label %1632, label %1620

1620:                                             ; preds = %1573, %1614
  %1621 = phi i64 [ %1576, %1573 ], [ %1587, %1614 ]
  %1622 = phi i32 [ 1, %1573 ], [ %1618, %1614 ]
  br label %1623

1623:                                             ; preds = %1620, %1623
  %1624 = phi i64 [ %1629, %1623 ], [ %1621, %1620 ]
  %1625 = phi i32 [ %1628, %1623 ], [ %1622, %1620 ]
  %1626 = getelementptr inbounds i32, ptr %9, i64 %1624
  %1627 = load i32, ptr %1626, align 4, !tbaa !5
  %1628 = mul nsw i32 %1627, %1625
  %1629 = add nsw i64 %1624, -1
  %1630 = trunc i64 %1624 to i32
  %1631 = icmp sgt i32 %1630, 0
  br i1 %1631, label %1623, label %1632, !llvm.loop !435

1632:                                             ; preds = %1623, %1614
  %1633 = phi i32 [ %1618, %1614 ], [ %1628, %1623 ]
  %1634 = and i64 %1583, 4294967295
  %1635 = getelementptr inbounds i32, ptr %6, i64 %1634
  %1636 = load i32, ptr %1635, align 4, !tbaa !5
  %1637 = mul nsw i32 %1636, %1633
  %1638 = add nsw i32 %1637, %1577
  %1639 = icmp sgt i64 %1575, 2
  %1640 = add nsw i64 %1576, -1
  %1641 = add i32 %1574, 1
  br i1 %1639, label %1573, label %1642, !llvm.loop !436

1642:                                             ; preds = %1632, %1569
  %1643 = phi i32 [ %1572, %1569 ], [ %1638, %1632 ]
  %1644 = sext i32 %1643 to i64
  %1645 = getelementptr inbounds i8, ptr %1234, i64 %1644
  %1646 = load i8, ptr %1645, align 1, !tbaa !11
  %1647 = sitofp i8 %1646 to double
  %1648 = fcmp fast ogt double %1570, %1647
  br i1 %1648, label %1649, label %1650

1649:                                             ; preds = %1642
  store double %1647, ptr %1236, align 8, !tbaa !18
  br label %1650

1650:                                             ; preds = %1649, %1642
  %1651 = phi double [ %1647, %1649 ], [ %1570, %1642 ]
  %1652 = add nuw nsw i32 %1571, 1
  br i1 %1563, label %1653, label %1700

1653:                                             ; preds = %1650
  %1654 = load i32, ptr %4, align 4, !tbaa !5
  %1655 = load i32, ptr %12, align 4, !tbaa !5
  %1656 = add nsw i32 %1655, -1
  %1657 = icmp slt i32 %1654, %1656
  br i1 %1657, label %1677, label %1658

1658:                                             ; preds = %1653
  %1659 = icmp eq i32 %1654, %1656
  br i1 %1659, label %1660, label %1693

1660:                                             ; preds = %1658
  store i32 0, ptr %4, align 4, !tbaa !5
  %1661 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1661, ptr %6, align 4, !tbaa !5
  br i1 %1568, label %1700, label %1662

1662:                                             ; preds = %1660, %1687
  %1663 = phi i64 [ %1691, %1687 ], [ 1, %1660 ]
  %1664 = getelementptr inbounds i32, ptr %4, i64 %1663
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = getelementptr inbounds i32, ptr %12, i64 %1663
  %1667 = load i32, ptr %1666, align 4, !tbaa !5
  %1668 = add nsw i32 %1667, -1
  %1669 = icmp slt i32 %1665, %1668
  br i1 %1669, label %1670, label %1685

1670:                                             ; preds = %1662
  br i1 %1657, label %1677, label %1671

1671:                                             ; preds = %1670
  %1672 = getelementptr inbounds i32, ptr %7, i64 %1663
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = getelementptr inbounds i32, ptr %6, i64 %1663
  %1675 = load i32, ptr %1674, align 4, !tbaa !5
  %1676 = add nsw i32 %1675, %1673
  store i32 %1676, ptr %1674, align 4, !tbaa !5
  br label %1695

1677:                                             ; preds = %1653, %1670
  %1678 = phi i32 [ %1665, %1670 ], [ %1654, %1653 ]
  %1679 = phi ptr [ %1664, %1670 ], [ %4, %1653 ]
  %1680 = phi i64 [ %1663, %1670 ], [ 0, %1653 ]
  %1681 = add nsw i32 %1678, 1
  store i32 %1681, ptr %1679, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1680
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1680
  br label %1695

1685:                                             ; preds = %1662
  %1686 = icmp eq i32 %1665, %1668
  br i1 %1686, label %1687, label %1693

1687:                                             ; preds = %1685
  store i32 0, ptr %1664, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %8, i64 %1663
  %1689 = load i32, ptr %1688, align 4, !tbaa !5
  %1690 = getelementptr inbounds i32, ptr %6, i64 %1663
  store i32 %1689, ptr %1690, align 4, !tbaa !5
  %1691 = add nuw nsw i64 %1663, 1
  %1692 = icmp eq i64 %1691, %1566
  br i1 %1692, label %1700, label %1662, !llvm.loop !437

1693:                                             ; preds = %1658, %1685
  %1694 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1695:                                             ; preds = %1671, %1677
  %1696 = phi ptr [ %1684, %1677 ], [ %1664, %1671 ]
  %1697 = phi i32 [ %1683, %1677 ], [ 1, %1671 ]
  %1698 = load i32, ptr %1696, align 4, !tbaa !5
  %1699 = add nsw i32 %1698, %1697
  store i32 %1699, ptr %1696, align 4, !tbaa !5
  br label %1700

1700:                                             ; preds = %1687, %1695, %1660, %1650
  %1701 = icmp eq i32 %1652, %5
  br i1 %1701, label %3068, label %1569, !llvm.loop !438

1702:                                             ; preds = %1552, %1840
  %1703 = phi double [ %1238, %1552 ], [ %1788, %1840 ]
  %1704 = phi i32 [ 0, %1552 ], [ %1789, %1840 ]
  %1705 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1553, label %1706, label %1775

1706:                                             ; preds = %1702, %1765
  %1707 = phi i32 [ %1774, %1765 ], [ 0, %1702 ]
  %1708 = phi i64 [ %1716, %1765 ], [ %1557, %1702 ]
  %1709 = phi i64 [ %1773, %1765 ], [ %1556, %1702 ]
  %1710 = phi i32 [ %1771, %1765 ], [ %1705, %1702 ]
  %1711 = sub i32 %1555, %1707
  %1712 = tail call i32 @llvm.smin.i32(i32 %1711, i32 0)
  %1713 = sub i32 %1711, %1712
  %1714 = zext i32 %1713 to i64
  %1715 = add nuw nsw i64 %1714, 1
  %1716 = add nsw i64 %1708, -1
  %1717 = icmp ult i32 %1713, 31
  br i1 %1717, label %1753, label %1718

1718:                                             ; preds = %1706
  %1719 = and i64 %1715, 8589934560
  %1720 = sub i64 %1709, %1719
  br label %1721

1721:                                             ; preds = %1721, %1718
  %1722 = phi i64 [ 0, %1718 ], [ %1745, %1721 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1718 ], [ %1741, %1721 ]
  %1724 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1718 ], [ %1742, %1721 ]
  %1725 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1718 ], [ %1743, %1721 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1718 ], [ %1744, %1721 ]
  %1727 = sub i64 %1709, %1722
  %1728 = getelementptr inbounds i32, ptr %11, i64 %1727
  %1729 = getelementptr inbounds i32, ptr %1728, i64 -7
  %1730 = load <8 x i32>, ptr %1729, align 4, !tbaa !5
  %1731 = shufflevector <8 x i32> %1730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1732 = getelementptr inbounds i32, ptr %1728, i64 -15
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1728, i64 -23
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1728, i64 -31
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = mul <8 x i32> %1731, %1723
  %1742 = mul <8 x i32> %1734, %1724
  %1743 = mul <8 x i32> %1737, %1725
  %1744 = mul <8 x i32> %1740, %1726
  %1745 = add nuw i64 %1722, 32
  %1746 = icmp eq i64 %1745, %1719
  br i1 %1746, label %1747, label %1721, !llvm.loop !439

1747:                                             ; preds = %1721
  %1748 = mul <8 x i32> %1742, %1741
  %1749 = mul <8 x i32> %1743, %1748
  %1750 = mul <8 x i32> %1744, %1749
  %1751 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1750)
  %1752 = icmp eq i64 %1715, %1719
  br i1 %1752, label %1765, label %1753

1753:                                             ; preds = %1706, %1747
  %1754 = phi i64 [ %1709, %1706 ], [ %1720, %1747 ]
  %1755 = phi i32 [ 1, %1706 ], [ %1751, %1747 ]
  br label %1756

1756:                                             ; preds = %1753, %1756
  %1757 = phi i64 [ %1762, %1756 ], [ %1754, %1753 ]
  %1758 = phi i32 [ %1761, %1756 ], [ %1755, %1753 ]
  %1759 = getelementptr inbounds i32, ptr %11, i64 %1757
  %1760 = load i32, ptr %1759, align 4, !tbaa !5
  %1761 = mul nsw i32 %1760, %1758
  %1762 = add nsw i64 %1757, -1
  %1763 = trunc i64 %1757 to i32
  %1764 = icmp sgt i32 %1763, 0
  br i1 %1764, label %1756, label %1765, !llvm.loop !440

1765:                                             ; preds = %1756, %1747
  %1766 = phi i32 [ %1751, %1747 ], [ %1761, %1756 ]
  %1767 = and i64 %1716, 4294967295
  %1768 = getelementptr inbounds i32, ptr %6, i64 %1767
  %1769 = load i32, ptr %1768, align 4, !tbaa !5
  %1770 = mul nsw i32 %1769, %1766
  %1771 = add nsw i32 %1770, %1710
  %1772 = icmp sgt i64 %1708, 2
  %1773 = add nsw i64 %1709, -1
  %1774 = add i32 %1707, 1
  br i1 %1772, label %1706, label %1775, !llvm.loop !441

1775:                                             ; preds = %1765, %1702
  %1776 = phi i32 [ %1705, %1702 ], [ %1771, %1765 ]
  %1777 = icmp slt i32 %1776, %5
  br i1 %1777, label %1780, label %1778

1778:                                             ; preds = %1775
  %1779 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

1780:                                             ; preds = %1775
  %1781 = sext i32 %1776 to i64
  %1782 = getelementptr inbounds i8, ptr %1234, i64 %1781
  %1783 = load i8, ptr %1782, align 1, !tbaa !11
  %1784 = sitofp i8 %1783 to double
  %1785 = fcmp fast ogt double %1703, %1784
  br i1 %1785, label %1786, label %1787

1786:                                             ; preds = %1780
  store double %1784, ptr %1236, align 8, !tbaa !18
  br label %1787

1787:                                             ; preds = %1786, %1780
  %1788 = phi double [ %1784, %1786 ], [ %1703, %1780 ]
  %1789 = add nuw nsw i32 %1704, 1
  br i1 %1554, label %1790, label %1840

1790:                                             ; preds = %1787
  %1791 = load i32, ptr %4, align 4, !tbaa !5
  %1792 = load i32, ptr %12, align 4, !tbaa !5
  %1793 = add nsw i32 %1792, -1
  %1794 = icmp slt i32 %1791, %1793
  br i1 %1794, label %1817, label %1795

1795:                                             ; preds = %1790
  %1796 = icmp eq i32 %1791, %1793
  br i1 %1796, label %1797, label %1833

1797:                                             ; preds = %1795
  store i32 0, ptr %4, align 4, !tbaa !5
  %1798 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1798, ptr %6, align 4, !tbaa !5
  br i1 %1559, label %1840, label %1799

1799:                                             ; preds = %1797, %1827
  %1800 = phi i64 [ %1831, %1827 ], [ 1, %1797 ]
  %1801 = getelementptr inbounds i32, ptr %4, i64 %1800
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = getelementptr inbounds i32, ptr %12, i64 %1800
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = add nsw i32 %1804, -1
  %1806 = icmp slt i32 %1802, %1805
  br i1 %1806, label %1807, label %1825

1807:                                             ; preds = %1799
  br i1 %1794, label %1817, label %1808

1808:                                             ; preds = %1807
  %1809 = shl i64 %1800, 32
  %1810 = add i64 %1809, -4294967296
  %1811 = ashr exact i64 %1810, 32
  %1812 = getelementptr inbounds i32, ptr %7, i64 %1811
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = getelementptr inbounds i32, ptr %6, i64 %1800
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = add nsw i32 %1815, %1813
  store i32 %1816, ptr %1814, align 4, !tbaa !5
  br label %1835

1817:                                             ; preds = %1790, %1807
  %1818 = phi i32 [ %1802, %1807 ], [ %1791, %1790 ]
  %1819 = phi ptr [ %1801, %1807 ], [ %4, %1790 ]
  %1820 = phi i64 [ %1800, %1807 ], [ 0, %1790 ]
  %1821 = add nsw i32 %1818, 1
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  %1822 = getelementptr inbounds i32, ptr %7, i64 %1820
  %1823 = load i32, ptr %1822, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %6, i64 %1820
  br label %1835

1825:                                             ; preds = %1799
  %1826 = icmp eq i32 %1802, %1805
  br i1 %1826, label %1827, label %1833

1827:                                             ; preds = %1825
  store i32 0, ptr %1801, align 4, !tbaa !5
  %1828 = getelementptr inbounds i32, ptr %8, i64 %1800
  %1829 = load i32, ptr %1828, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %6, i64 %1800
  store i32 %1829, ptr %1830, align 4, !tbaa !5
  %1831 = add nuw nsw i64 %1800, 1
  %1832 = icmp eq i64 %1831, %1557
  br i1 %1832, label %1840, label %1799, !llvm.loop !442

1833:                                             ; preds = %1795, %1825
  %1834 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

1835:                                             ; preds = %1808, %1817
  %1836 = phi ptr [ %1824, %1817 ], [ %1801, %1808 ]
  %1837 = phi i32 [ %1823, %1817 ], [ 1, %1808 ]
  %1838 = load i32, ptr %1836, align 4, !tbaa !5
  %1839 = add nsw i32 %1838, %1837
  store i32 %1839, ptr %1836, align 4, !tbaa !5
  br label %1840

1840:                                             ; preds = %1827, %1835, %1797, %1787
  %1841 = icmp eq i32 %1789, %5
  br i1 %1841, label %3068, label %1702, !llvm.loop !443

1842:                                             ; preds = %1245
  %1843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 554, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3068

1844:                                             ; preds = %18
  %1845 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1846 = load ptr, ptr %1845, align 8, !tbaa !9
  %1847 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !9
  %1849 = load i8, ptr %1846, align 1, !tbaa !11
  %1850 = sitofp i8 %1849 to float
  store float %1850, ptr %1848, align 4, !tbaa !162
  %1851 = icmp eq i32 %13, 0
  br i1 %1851, label %1852, label %1857

1852:                                             ; preds = %1844
  %1853 = load i8, ptr %1846, align 1, !tbaa !11
  %1854 = sitofp i8 %1853 to float
  %1855 = fcmp fast ogt float %1850, %1854
  br i1 %1855, label %1856, label %3068

1856:                                             ; preds = %1852
  store float %1854, ptr %1848, align 4, !tbaa !162
  br label %3068

1857:                                             ; preds = %1844
  switch i32 %1, label %2454 [
    i32 1, label %1858
    i32 0, label %2158
  ]

1858:                                             ; preds = %1857
  %1859 = getelementptr inbounds i32, ptr %3, i64 %19
  %1860 = load i32, ptr %1859, align 4, !tbaa !5
  %1861 = icmp eq i32 %1860, 0
  %1862 = icmp sgt i32 %5, 0
  br i1 %1861, label %1872, label %1863

1863:                                             ; preds = %1858
  br i1 %1862, label %1864, label %3068

1864:                                             ; preds = %1863
  %1865 = icmp sgt i32 %13, 1
  %1866 = icmp sgt i32 %13, 0
  %1867 = add i32 %13, -2
  %1868 = zext i32 %1867 to i64
  %1869 = zext i32 %13 to i64
  %1870 = add nuw i32 %5, 1
  %1871 = icmp eq i32 %13, 1
  br label %2018

1872:                                             ; preds = %1858
  br i1 %1862, label %1873, label %3068

1873:                                             ; preds = %1872
  %1874 = icmp sgt i32 %13, 1
  %1875 = icmp sgt i32 %13, 0
  %1876 = add i32 %13, -2
  %1877 = zext i32 %1876 to i64
  %1878 = zext i32 %13 to i64
  %1879 = add nuw i32 %5, 1
  %1880 = icmp eq i32 %13, 1
  br label %1881

1881:                                             ; preds = %1873, %2016
  %1882 = phi float [ %1850, %1873 ], [ %1967, %2016 ]
  %1883 = phi i32 [ 0, %1873 ], [ %1968, %2016 ]
  %1884 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1874, label %1885, label %1954

1885:                                             ; preds = %1881, %1944
  %1886 = phi i32 [ %1953, %1944 ], [ 0, %1881 ]
  %1887 = phi i64 [ %1895, %1944 ], [ %1878, %1881 ]
  %1888 = phi i64 [ %1952, %1944 ], [ %1877, %1881 ]
  %1889 = phi i32 [ %1950, %1944 ], [ %1884, %1881 ]
  %1890 = sub i32 %1876, %1886
  %1891 = tail call i32 @llvm.smin.i32(i32 %1890, i32 0)
  %1892 = sub i32 %1890, %1891
  %1893 = zext i32 %1892 to i64
  %1894 = add nuw nsw i64 %1893, 1
  %1895 = add nsw i64 %1887, -1
  %1896 = icmp ult i32 %1892, 31
  br i1 %1896, label %1932, label %1897

1897:                                             ; preds = %1885
  %1898 = and i64 %1894, 8589934560
  %1899 = sub i64 %1888, %1898
  br label %1900

1900:                                             ; preds = %1900, %1897
  %1901 = phi i64 [ 0, %1897 ], [ %1924, %1900 ]
  %1902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1920, %1900 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1921, %1900 ]
  %1904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1922, %1900 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1923, %1900 ]
  %1906 = sub i64 %1888, %1901
  %1907 = getelementptr inbounds i32, ptr %9, i64 %1906
  %1908 = getelementptr inbounds i32, ptr %1907, i64 -7
  %1909 = load <8 x i32>, ptr %1908, align 4, !tbaa !5
  %1910 = shufflevector <8 x i32> %1909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1911 = getelementptr inbounds i32, ptr %1907, i64 -15
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1907, i64 -23
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1907, i64 -31
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = mul <8 x i32> %1910, %1902
  %1921 = mul <8 x i32> %1913, %1903
  %1922 = mul <8 x i32> %1916, %1904
  %1923 = mul <8 x i32> %1919, %1905
  %1924 = add nuw i64 %1901, 32
  %1925 = icmp eq i64 %1924, %1898
  br i1 %1925, label %1926, label %1900, !llvm.loop !444

1926:                                             ; preds = %1900
  %1927 = mul <8 x i32> %1921, %1920
  %1928 = mul <8 x i32> %1922, %1927
  %1929 = mul <8 x i32> %1923, %1928
  %1930 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1929)
  %1931 = icmp eq i64 %1894, %1898
  br i1 %1931, label %1944, label %1932

1932:                                             ; preds = %1885, %1926
  %1933 = phi i64 [ %1888, %1885 ], [ %1899, %1926 ]
  %1934 = phi i32 [ 1, %1885 ], [ %1930, %1926 ]
  br label %1935

1935:                                             ; preds = %1932, %1935
  %1936 = phi i64 [ %1941, %1935 ], [ %1933, %1932 ]
  %1937 = phi i32 [ %1940, %1935 ], [ %1934, %1932 ]
  %1938 = getelementptr inbounds i32, ptr %9, i64 %1936
  %1939 = load i32, ptr %1938, align 4, !tbaa !5
  %1940 = mul nsw i32 %1939, %1937
  %1941 = add nsw i64 %1936, -1
  %1942 = trunc i64 %1936 to i32
  %1943 = icmp sgt i32 %1942, 0
  br i1 %1943, label %1935, label %1944, !llvm.loop !445

1944:                                             ; preds = %1935, %1926
  %1945 = phi i32 [ %1930, %1926 ], [ %1940, %1935 ]
  %1946 = and i64 %1895, 4294967295
  %1947 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = mul nsw i32 %1948, %1945
  %1950 = add nsw i32 %1949, %1889
  %1951 = icmp sgt i64 %1887, 2
  %1952 = add nsw i64 %1888, -1
  %1953 = add i32 %1886, 1
  br i1 %1951, label %1885, label %1954, !llvm.loop !446

1954:                                             ; preds = %1944, %1881
  %1955 = phi i32 [ %1884, %1881 ], [ %1950, %1944 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds double, ptr %2, i64 %1956
  %1958 = load double, ptr %1957, align 8, !tbaa !18
  %1959 = getelementptr inbounds i8, ptr %1846, i64 %1956
  %1960 = load i8, ptr %1959, align 1, !tbaa !11
  %1961 = sitofp i8 %1960 to float
  %1962 = fcmp fast one double %1958, 0.000000e+00
  %1963 = fcmp fast ogt float %1882, %1961
  %1964 = select i1 %1962, i1 %1963, i1 false
  br i1 %1964, label %1965, label %1966

1965:                                             ; preds = %1954
  store float %1961, ptr %1848, align 4, !tbaa !162
  br label %1966

1966:                                             ; preds = %1965, %1954
  %1967 = phi float [ %1961, %1965 ], [ %1882, %1954 ]
  %1968 = add nuw nsw i32 %1883, 1
  br i1 %1875, label %1969, label %2016

1969:                                             ; preds = %1966
  %1970 = load i32, ptr %4, align 4, !tbaa !5
  %1971 = load i32, ptr %12, align 4, !tbaa !5
  %1972 = add nsw i32 %1971, -1
  %1973 = icmp slt i32 %1970, %1972
  br i1 %1973, label %1993, label %1974

1974:                                             ; preds = %1969
  %1975 = icmp eq i32 %1970, %1972
  br i1 %1975, label %1976, label %2009

1976:                                             ; preds = %1974
  store i32 0, ptr %4, align 4, !tbaa !5
  %1977 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1977, ptr %6, align 4, !tbaa !5
  br i1 %1880, label %2016, label %1978

1978:                                             ; preds = %1976, %2003
  %1979 = phi i64 [ %2007, %2003 ], [ 1, %1976 ]
  %1980 = getelementptr inbounds i32, ptr %4, i64 %1979
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %12, i64 %1979
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = add nsw i32 %1983, -1
  %1985 = icmp slt i32 %1981, %1984
  br i1 %1985, label %1986, label %2001

1986:                                             ; preds = %1978
  br i1 %1973, label %1993, label %1987

1987:                                             ; preds = %1986
  %1988 = getelementptr inbounds i32, ptr %7, i64 %1979
  %1989 = load i32, ptr %1988, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %6, i64 %1979
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = add nsw i32 %1991, %1989
  store i32 %1992, ptr %1990, align 4, !tbaa !5
  br label %2011

1993:                                             ; preds = %1969, %1986
  %1994 = phi i32 [ %1981, %1986 ], [ %1970, %1969 ]
  %1995 = phi ptr [ %1980, %1986 ], [ %4, %1969 ]
  %1996 = phi i64 [ %1979, %1986 ], [ 0, %1969 ]
  %1997 = add nsw i32 %1994, 1
  store i32 %1997, ptr %1995, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %7, i64 %1996
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = getelementptr inbounds i32, ptr %6, i64 %1996
  br label %2011

2001:                                             ; preds = %1978
  %2002 = icmp eq i32 %1981, %1984
  br i1 %2002, label %2003, label %2009

2003:                                             ; preds = %2001
  store i32 0, ptr %1980, align 4, !tbaa !5
  %2004 = getelementptr inbounds i32, ptr %8, i64 %1979
  %2005 = load i32, ptr %2004, align 4, !tbaa !5
  %2006 = getelementptr inbounds i32, ptr %6, i64 %1979
  store i32 %2005, ptr %2006, align 4, !tbaa !5
  %2007 = add nuw nsw i64 %1979, 1
  %2008 = icmp eq i64 %2007, %1878
  br i1 %2008, label %2016, label %1978, !llvm.loop !447

2009:                                             ; preds = %1974, %2001
  %2010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2011:                                             ; preds = %1987, %1993
  %2012 = phi ptr [ %2000, %1993 ], [ %1980, %1987 ]
  %2013 = phi i32 [ %1999, %1993 ], [ 1, %1987 ]
  %2014 = load i32, ptr %2012, align 4, !tbaa !5
  %2015 = add nsw i32 %2014, %2013
  store i32 %2015, ptr %2012, align 4, !tbaa !5
  br label %2016

2016:                                             ; preds = %2003, %2011, %1976, %1966
  %2017 = icmp eq i32 %1968, %5
  br i1 %2017, label %3068, label %1881, !llvm.loop !448

2018:                                             ; preds = %1864, %2156
  %2019 = phi float [ %1850, %1864 ], [ %2104, %2156 ]
  %2020 = phi i32 [ 0, %1864 ], [ %2105, %2156 ]
  %2021 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1865, label %2022, label %2091

2022:                                             ; preds = %2018, %2081
  %2023 = phi i32 [ %2090, %2081 ], [ 0, %2018 ]
  %2024 = phi i64 [ %2032, %2081 ], [ %1869, %2018 ]
  %2025 = phi i64 [ %2089, %2081 ], [ %1868, %2018 ]
  %2026 = phi i32 [ %2087, %2081 ], [ %2021, %2018 ]
  %2027 = sub i32 %1867, %2023
  %2028 = tail call i32 @llvm.smin.i32(i32 %2027, i32 0)
  %2029 = sub i32 %2027, %2028
  %2030 = zext i32 %2029 to i64
  %2031 = add nuw nsw i64 %2030, 1
  %2032 = add nsw i64 %2024, -1
  %2033 = icmp ult i32 %2029, 31
  br i1 %2033, label %2069, label %2034

2034:                                             ; preds = %2022
  %2035 = and i64 %2031, 8589934560
  %2036 = sub i64 %2025, %2035
  br label %2037

2037:                                             ; preds = %2037, %2034
  %2038 = phi i64 [ 0, %2034 ], [ %2061, %2037 ]
  %2039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2034 ], [ %2057, %2037 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2034 ], [ %2058, %2037 ]
  %2041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2034 ], [ %2059, %2037 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2034 ], [ %2060, %2037 ]
  %2043 = sub i64 %2025, %2038
  %2044 = getelementptr inbounds i32, ptr %11, i64 %2043
  %2045 = getelementptr inbounds i32, ptr %2044, i64 -7
  %2046 = load <8 x i32>, ptr %2045, align 4, !tbaa !5
  %2047 = shufflevector <8 x i32> %2046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2048 = getelementptr inbounds i32, ptr %2044, i64 -15
  %2049 = load <8 x i32>, ptr %2048, align 4, !tbaa !5
  %2050 = shufflevector <8 x i32> %2049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2051 = getelementptr inbounds i32, ptr %2044, i64 -23
  %2052 = load <8 x i32>, ptr %2051, align 4, !tbaa !5
  %2053 = shufflevector <8 x i32> %2052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2054 = getelementptr inbounds i32, ptr %2044, i64 -31
  %2055 = load <8 x i32>, ptr %2054, align 4, !tbaa !5
  %2056 = shufflevector <8 x i32> %2055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2057 = mul <8 x i32> %2047, %2039
  %2058 = mul <8 x i32> %2050, %2040
  %2059 = mul <8 x i32> %2053, %2041
  %2060 = mul <8 x i32> %2056, %2042
  %2061 = add nuw i64 %2038, 32
  %2062 = icmp eq i64 %2061, %2035
  br i1 %2062, label %2063, label %2037, !llvm.loop !449

2063:                                             ; preds = %2037
  %2064 = mul <8 x i32> %2058, %2057
  %2065 = mul <8 x i32> %2059, %2064
  %2066 = mul <8 x i32> %2060, %2065
  %2067 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2066)
  %2068 = icmp eq i64 %2031, %2035
  br i1 %2068, label %2081, label %2069

2069:                                             ; preds = %2022, %2063
  %2070 = phi i64 [ %2025, %2022 ], [ %2036, %2063 ]
  %2071 = phi i32 [ 1, %2022 ], [ %2067, %2063 ]
  br label %2072

2072:                                             ; preds = %2069, %2072
  %2073 = phi i64 [ %2078, %2072 ], [ %2070, %2069 ]
  %2074 = phi i32 [ %2077, %2072 ], [ %2071, %2069 ]
  %2075 = getelementptr inbounds i32, ptr %11, i64 %2073
  %2076 = load i32, ptr %2075, align 4, !tbaa !5
  %2077 = mul nsw i32 %2076, %2074
  %2078 = add nsw i64 %2073, -1
  %2079 = trunc i64 %2073 to i32
  %2080 = icmp sgt i32 %2079, 0
  br i1 %2080, label %2072, label %2081, !llvm.loop !450

2081:                                             ; preds = %2072, %2063
  %2082 = phi i32 [ %2067, %2063 ], [ %2077, %2072 ]
  %2083 = and i64 %2032, 4294967295
  %2084 = getelementptr inbounds i32, ptr %6, i64 %2083
  %2085 = load i32, ptr %2084, align 4, !tbaa !5
  %2086 = mul nsw i32 %2085, %2082
  %2087 = add nsw i32 %2086, %2026
  %2088 = icmp sgt i64 %2024, 2
  %2089 = add nsw i64 %2025, -1
  %2090 = add i32 %2023, 1
  br i1 %2088, label %2022, label %2091, !llvm.loop !451

2091:                                             ; preds = %2081, %2018
  %2092 = phi i32 [ %2021, %2018 ], [ %2087, %2081 ]
  %2093 = icmp slt i32 %2092, %5
  br i1 %2093, label %2096, label %2094

2094:                                             ; preds = %2091
  %2095 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

2096:                                             ; preds = %2091
  %2097 = sext i32 %2092 to i64
  %2098 = getelementptr inbounds i8, ptr %1846, i64 %2097
  %2099 = load i8, ptr %2098, align 1, !tbaa !11
  %2100 = sitofp i8 %2099 to float
  %2101 = fcmp fast ogt float %2019, %2100
  br i1 %2101, label %2102, label %2103

2102:                                             ; preds = %2096
  store float %2100, ptr %1848, align 4, !tbaa !162
  br label %2103

2103:                                             ; preds = %2096, %2102
  %2104 = phi float [ %2019, %2096 ], [ %2100, %2102 ]
  %2105 = add nuw nsw i32 %2020, 1
  br i1 %1866, label %2106, label %2156

2106:                                             ; preds = %2103
  %2107 = load i32, ptr %4, align 4, !tbaa !5
  %2108 = load i32, ptr %12, align 4, !tbaa !5
  %2109 = add nsw i32 %2108, -1
  %2110 = icmp slt i32 %2107, %2109
  br i1 %2110, label %2133, label %2111

2111:                                             ; preds = %2106
  %2112 = icmp eq i32 %2107, %2109
  br i1 %2112, label %2113, label %2149

2113:                                             ; preds = %2111
  store i32 0, ptr %4, align 4, !tbaa !5
  %2114 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2114, ptr %6, align 4, !tbaa !5
  br i1 %1871, label %2156, label %2115

2115:                                             ; preds = %2113, %2143
  %2116 = phi i64 [ %2147, %2143 ], [ 1, %2113 ]
  %2117 = getelementptr inbounds i32, ptr %4, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = getelementptr inbounds i32, ptr %12, i64 %2116
  %2120 = load i32, ptr %2119, align 4, !tbaa !5
  %2121 = add nsw i32 %2120, -1
  %2122 = icmp slt i32 %2118, %2121
  br i1 %2122, label %2123, label %2141

2123:                                             ; preds = %2115
  br i1 %2110, label %2133, label %2124

2124:                                             ; preds = %2123
  %2125 = shl i64 %2116, 32
  %2126 = add i64 %2125, -4294967296
  %2127 = ashr exact i64 %2126, 32
  %2128 = getelementptr inbounds i32, ptr %7, i64 %2127
  %2129 = load i32, ptr %2128, align 4, !tbaa !5
  %2130 = getelementptr inbounds i32, ptr %6, i64 %2116
  %2131 = load i32, ptr %2130, align 4, !tbaa !5
  %2132 = add nsw i32 %2131, %2129
  store i32 %2132, ptr %2130, align 4, !tbaa !5
  br label %2151

2133:                                             ; preds = %2106, %2123
  %2134 = phi i32 [ %2118, %2123 ], [ %2107, %2106 ]
  %2135 = phi ptr [ %2117, %2123 ], [ %4, %2106 ]
  %2136 = phi i64 [ %2116, %2123 ], [ 0, %2106 ]
  %2137 = add nsw i32 %2134, 1
  store i32 %2137, ptr %2135, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %7, i64 %2136
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = getelementptr inbounds i32, ptr %6, i64 %2136
  br label %2151

2141:                                             ; preds = %2115
  %2142 = icmp eq i32 %2118, %2121
  br i1 %2142, label %2143, label %2149

2143:                                             ; preds = %2141
  store i32 0, ptr %2117, align 4, !tbaa !5
  %2144 = getelementptr inbounds i32, ptr %8, i64 %2116
  %2145 = load i32, ptr %2144, align 4, !tbaa !5
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2116
  store i32 %2145, ptr %2146, align 4, !tbaa !5
  %2147 = add nuw nsw i64 %2116, 1
  %2148 = icmp eq i64 %2147, %1869
  br i1 %2148, label %2156, label %2115, !llvm.loop !452

2149:                                             ; preds = %2111, %2141
  %2150 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2151:                                             ; preds = %2124, %2133
  %2152 = phi ptr [ %2140, %2133 ], [ %2117, %2124 ]
  %2153 = phi i32 [ %2139, %2133 ], [ 1, %2124 ]
  %2154 = load i32, ptr %2152, align 4, !tbaa !5
  %2155 = add nsw i32 %2154, %2153
  store i32 %2155, ptr %2152, align 4, !tbaa !5
  br label %2156

2156:                                             ; preds = %2143, %2151, %2113, %2103
  %2157 = icmp eq i32 %2105, %5
  br i1 %2157, label %3068, label %2018, !llvm.loop !453

2158:                                             ; preds = %1857
  %2159 = getelementptr inbounds i32, ptr %3, i64 %19
  %2160 = load i32, ptr %2159, align 4, !tbaa !5
  %2161 = icmp eq i32 %2160, 0
  %2162 = icmp sgt i32 %5, 0
  br i1 %2161, label %2172, label %2163

2163:                                             ; preds = %2158
  br i1 %2162, label %2164, label %3068

2164:                                             ; preds = %2163
  %2165 = icmp sgt i32 %13, 1
  %2166 = icmp sgt i32 %13, 0
  %2167 = add i32 %13, -2
  %2168 = zext i32 %2167 to i64
  %2169 = zext i32 %13 to i64
  %2170 = add nuw i32 %5, 1
  %2171 = icmp eq i32 %13, 1
  br label %2314

2172:                                             ; preds = %2158
  br i1 %2162, label %2173, label %3068

2173:                                             ; preds = %2172
  %2174 = icmp sgt i32 %13, 1
  %2175 = icmp sgt i32 %13, 0
  %2176 = add i32 %13, -2
  %2177 = zext i32 %2176 to i64
  %2178 = zext i32 %13 to i64
  %2179 = add nuw i32 %5, 1
  %2180 = icmp eq i32 %13, 1
  br label %2181

2181:                                             ; preds = %2173, %2312
  %2182 = phi float [ %1850, %2173 ], [ %2263, %2312 ]
  %2183 = phi i32 [ 0, %2173 ], [ %2264, %2312 ]
  %2184 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2185, label %2254

2185:                                             ; preds = %2181, %2244
  %2186 = phi i32 [ %2253, %2244 ], [ 0, %2181 ]
  %2187 = phi i64 [ %2195, %2244 ], [ %2178, %2181 ]
  %2188 = phi i64 [ %2252, %2244 ], [ %2177, %2181 ]
  %2189 = phi i32 [ %2250, %2244 ], [ %2184, %2181 ]
  %2190 = sub i32 %2176, %2186
  %2191 = tail call i32 @llvm.smin.i32(i32 %2190, i32 0)
  %2192 = sub i32 %2190, %2191
  %2193 = zext i32 %2192 to i64
  %2194 = add nuw nsw i64 %2193, 1
  %2195 = add nsw i64 %2187, -1
  %2196 = icmp ult i32 %2192, 31
  br i1 %2196, label %2232, label %2197

2197:                                             ; preds = %2185
  %2198 = and i64 %2194, 8589934560
  %2199 = sub i64 %2188, %2198
  br label %2200

2200:                                             ; preds = %2200, %2197
  %2201 = phi i64 [ 0, %2197 ], [ %2224, %2200 ]
  %2202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2197 ], [ %2220, %2200 ]
  %2203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2197 ], [ %2221, %2200 ]
  %2204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2197 ], [ %2222, %2200 ]
  %2205 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2197 ], [ %2223, %2200 ]
  %2206 = sub i64 %2188, %2201
  %2207 = getelementptr inbounds i32, ptr %9, i64 %2206
  %2208 = getelementptr inbounds i32, ptr %2207, i64 -7
  %2209 = load <8 x i32>, ptr %2208, align 4, !tbaa !5
  %2210 = shufflevector <8 x i32> %2209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2211 = getelementptr inbounds i32, ptr %2207, i64 -15
  %2212 = load <8 x i32>, ptr %2211, align 4, !tbaa !5
  %2213 = shufflevector <8 x i32> %2212, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2214 = getelementptr inbounds i32, ptr %2207, i64 -23
  %2215 = load <8 x i32>, ptr %2214, align 4, !tbaa !5
  %2216 = shufflevector <8 x i32> %2215, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2217 = getelementptr inbounds i32, ptr %2207, i64 -31
  %2218 = load <8 x i32>, ptr %2217, align 4, !tbaa !5
  %2219 = shufflevector <8 x i32> %2218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2220 = mul <8 x i32> %2210, %2202
  %2221 = mul <8 x i32> %2213, %2203
  %2222 = mul <8 x i32> %2216, %2204
  %2223 = mul <8 x i32> %2219, %2205
  %2224 = add nuw i64 %2201, 32
  %2225 = icmp eq i64 %2224, %2198
  br i1 %2225, label %2226, label %2200, !llvm.loop !454

2226:                                             ; preds = %2200
  %2227 = mul <8 x i32> %2221, %2220
  %2228 = mul <8 x i32> %2222, %2227
  %2229 = mul <8 x i32> %2223, %2228
  %2230 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2229)
  %2231 = icmp eq i64 %2194, %2198
  br i1 %2231, label %2244, label %2232

2232:                                             ; preds = %2185, %2226
  %2233 = phi i64 [ %2188, %2185 ], [ %2199, %2226 ]
  %2234 = phi i32 [ 1, %2185 ], [ %2230, %2226 ]
  br label %2235

2235:                                             ; preds = %2232, %2235
  %2236 = phi i64 [ %2241, %2235 ], [ %2233, %2232 ]
  %2237 = phi i32 [ %2240, %2235 ], [ %2234, %2232 ]
  %2238 = getelementptr inbounds i32, ptr %9, i64 %2236
  %2239 = load i32, ptr %2238, align 4, !tbaa !5
  %2240 = mul nsw i32 %2239, %2237
  %2241 = add nsw i64 %2236, -1
  %2242 = trunc i64 %2236 to i32
  %2243 = icmp sgt i32 %2242, 0
  br i1 %2243, label %2235, label %2244, !llvm.loop !455

2244:                                             ; preds = %2235, %2226
  %2245 = phi i32 [ %2230, %2226 ], [ %2240, %2235 ]
  %2246 = and i64 %2195, 4294967295
  %2247 = getelementptr inbounds i32, ptr %6, i64 %2246
  %2248 = load i32, ptr %2247, align 4, !tbaa !5
  %2249 = mul nsw i32 %2248, %2245
  %2250 = add nsw i32 %2249, %2189
  %2251 = icmp sgt i64 %2187, 2
  %2252 = add nsw i64 %2188, -1
  %2253 = add i32 %2186, 1
  br i1 %2251, label %2185, label %2254, !llvm.loop !456

2254:                                             ; preds = %2244, %2181
  %2255 = phi i32 [ %2184, %2181 ], [ %2250, %2244 ]
  %2256 = sext i32 %2255 to i64
  %2257 = getelementptr inbounds i8, ptr %1846, i64 %2256
  %2258 = load i8, ptr %2257, align 1, !tbaa !11
  %2259 = sitofp i8 %2258 to float
  %2260 = fcmp fast ogt float %2182, %2259
  br i1 %2260, label %2261, label %2262

2261:                                             ; preds = %2254
  store float %2259, ptr %1848, align 4, !tbaa !162
  br label %2262

2262:                                             ; preds = %2261, %2254
  %2263 = phi float [ %2259, %2261 ], [ %2182, %2254 ]
  %2264 = add nuw nsw i32 %2183, 1
  br i1 %2175, label %2265, label %2312

2265:                                             ; preds = %2262
  %2266 = load i32, ptr %4, align 4, !tbaa !5
  %2267 = load i32, ptr %12, align 4, !tbaa !5
  %2268 = add nsw i32 %2267, -1
  %2269 = icmp slt i32 %2266, %2268
  br i1 %2269, label %2289, label %2270

2270:                                             ; preds = %2265
  %2271 = icmp eq i32 %2266, %2268
  br i1 %2271, label %2272, label %2305

2272:                                             ; preds = %2270
  store i32 0, ptr %4, align 4, !tbaa !5
  %2273 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2273, ptr %6, align 4, !tbaa !5
  br i1 %2180, label %2312, label %2274

2274:                                             ; preds = %2272, %2299
  %2275 = phi i64 [ %2303, %2299 ], [ 1, %2272 ]
  %2276 = getelementptr inbounds i32, ptr %4, i64 %2275
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = getelementptr inbounds i32, ptr %12, i64 %2275
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = add nsw i32 %2279, -1
  %2281 = icmp slt i32 %2277, %2280
  br i1 %2281, label %2282, label %2297

2282:                                             ; preds = %2274
  br i1 %2269, label %2289, label %2283

2283:                                             ; preds = %2282
  %2284 = getelementptr inbounds i32, ptr %7, i64 %2275
  %2285 = load i32, ptr %2284, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %6, i64 %2275
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = add nsw i32 %2287, %2285
  store i32 %2288, ptr %2286, align 4, !tbaa !5
  br label %2307

2289:                                             ; preds = %2265, %2282
  %2290 = phi i32 [ %2277, %2282 ], [ %2266, %2265 ]
  %2291 = phi ptr [ %2276, %2282 ], [ %4, %2265 ]
  %2292 = phi i64 [ %2275, %2282 ], [ 0, %2265 ]
  %2293 = add nsw i32 %2290, 1
  store i32 %2293, ptr %2291, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %7, i64 %2292
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = getelementptr inbounds i32, ptr %6, i64 %2292
  br label %2307

2297:                                             ; preds = %2274
  %2298 = icmp eq i32 %2277, %2280
  br i1 %2298, label %2299, label %2305

2299:                                             ; preds = %2297
  store i32 0, ptr %2276, align 4, !tbaa !5
  %2300 = getelementptr inbounds i32, ptr %8, i64 %2275
  %2301 = load i32, ptr %2300, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %6, i64 %2275
  store i32 %2301, ptr %2302, align 4, !tbaa !5
  %2303 = add nuw nsw i64 %2275, 1
  %2304 = icmp eq i64 %2303, %2178
  br i1 %2304, label %2312, label %2274, !llvm.loop !457

2305:                                             ; preds = %2270, %2297
  %2306 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2307:                                             ; preds = %2283, %2289
  %2308 = phi ptr [ %2296, %2289 ], [ %2276, %2283 ]
  %2309 = phi i32 [ %2295, %2289 ], [ 1, %2283 ]
  %2310 = load i32, ptr %2308, align 4, !tbaa !5
  %2311 = add nsw i32 %2310, %2309
  store i32 %2311, ptr %2308, align 4, !tbaa !5
  br label %2312

2312:                                             ; preds = %2299, %2307, %2272, %2262
  %2313 = icmp eq i32 %2264, %5
  br i1 %2313, label %3068, label %2181, !llvm.loop !458

2314:                                             ; preds = %2164, %2452
  %2315 = phi float [ %1850, %2164 ], [ %2400, %2452 ]
  %2316 = phi i32 [ 0, %2164 ], [ %2401, %2452 ]
  %2317 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2165, label %2318, label %2387

2318:                                             ; preds = %2314, %2377
  %2319 = phi i32 [ %2386, %2377 ], [ 0, %2314 ]
  %2320 = phi i64 [ %2328, %2377 ], [ %2169, %2314 ]
  %2321 = phi i64 [ %2385, %2377 ], [ %2168, %2314 ]
  %2322 = phi i32 [ %2383, %2377 ], [ %2317, %2314 ]
  %2323 = sub i32 %2167, %2319
  %2324 = tail call i32 @llvm.smin.i32(i32 %2323, i32 0)
  %2325 = sub i32 %2323, %2324
  %2326 = zext i32 %2325 to i64
  %2327 = add nuw nsw i64 %2326, 1
  %2328 = add nsw i64 %2320, -1
  %2329 = icmp ult i32 %2325, 31
  br i1 %2329, label %2365, label %2330

2330:                                             ; preds = %2318
  %2331 = and i64 %2327, 8589934560
  %2332 = sub i64 %2321, %2331
  br label %2333

2333:                                             ; preds = %2333, %2330
  %2334 = phi i64 [ 0, %2330 ], [ %2357, %2333 ]
  %2335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2330 ], [ %2353, %2333 ]
  %2336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2330 ], [ %2354, %2333 ]
  %2337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2330 ], [ %2355, %2333 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2330 ], [ %2356, %2333 ]
  %2339 = sub i64 %2321, %2334
  %2340 = getelementptr inbounds i32, ptr %11, i64 %2339
  %2341 = getelementptr inbounds i32, ptr %2340, i64 -7
  %2342 = load <8 x i32>, ptr %2341, align 4, !tbaa !5
  %2343 = shufflevector <8 x i32> %2342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2344 = getelementptr inbounds i32, ptr %2340, i64 -15
  %2345 = load <8 x i32>, ptr %2344, align 4, !tbaa !5
  %2346 = shufflevector <8 x i32> %2345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2347 = getelementptr inbounds i32, ptr %2340, i64 -23
  %2348 = load <8 x i32>, ptr %2347, align 4, !tbaa !5
  %2349 = shufflevector <8 x i32> %2348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2350 = getelementptr inbounds i32, ptr %2340, i64 -31
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !5
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = mul <8 x i32> %2343, %2335
  %2354 = mul <8 x i32> %2346, %2336
  %2355 = mul <8 x i32> %2349, %2337
  %2356 = mul <8 x i32> %2352, %2338
  %2357 = add nuw i64 %2334, 32
  %2358 = icmp eq i64 %2357, %2331
  br i1 %2358, label %2359, label %2333, !llvm.loop !459

2359:                                             ; preds = %2333
  %2360 = mul <8 x i32> %2354, %2353
  %2361 = mul <8 x i32> %2355, %2360
  %2362 = mul <8 x i32> %2356, %2361
  %2363 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2362)
  %2364 = icmp eq i64 %2327, %2331
  br i1 %2364, label %2377, label %2365

2365:                                             ; preds = %2318, %2359
  %2366 = phi i64 [ %2321, %2318 ], [ %2332, %2359 ]
  %2367 = phi i32 [ 1, %2318 ], [ %2363, %2359 ]
  br label %2368

2368:                                             ; preds = %2365, %2368
  %2369 = phi i64 [ %2374, %2368 ], [ %2366, %2365 ]
  %2370 = phi i32 [ %2373, %2368 ], [ %2367, %2365 ]
  %2371 = getelementptr inbounds i32, ptr %11, i64 %2369
  %2372 = load i32, ptr %2371, align 4, !tbaa !5
  %2373 = mul nsw i32 %2372, %2370
  %2374 = add nsw i64 %2369, -1
  %2375 = trunc i64 %2369 to i32
  %2376 = icmp sgt i32 %2375, 0
  br i1 %2376, label %2368, label %2377, !llvm.loop !460

2377:                                             ; preds = %2368, %2359
  %2378 = phi i32 [ %2363, %2359 ], [ %2373, %2368 ]
  %2379 = and i64 %2328, 4294967295
  %2380 = getelementptr inbounds i32, ptr %6, i64 %2379
  %2381 = load i32, ptr %2380, align 4, !tbaa !5
  %2382 = mul nsw i32 %2381, %2378
  %2383 = add nsw i32 %2382, %2322
  %2384 = icmp sgt i64 %2320, 2
  %2385 = add nsw i64 %2321, -1
  %2386 = add i32 %2319, 1
  br i1 %2384, label %2318, label %2387, !llvm.loop !461

2387:                                             ; preds = %2377, %2314
  %2388 = phi i32 [ %2317, %2314 ], [ %2383, %2377 ]
  %2389 = icmp slt i32 %2388, %5
  br i1 %2389, label %2392, label %2390

2390:                                             ; preds = %2387
  %2391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

2392:                                             ; preds = %2387
  %2393 = sext i32 %2388 to i64
  %2394 = getelementptr inbounds i8, ptr %1846, i64 %2393
  %2395 = load i8, ptr %2394, align 1, !tbaa !11
  %2396 = sitofp i8 %2395 to float
  %2397 = fcmp fast ogt float %2315, %2396
  br i1 %2397, label %2398, label %2399

2398:                                             ; preds = %2392
  store float %2396, ptr %1848, align 4, !tbaa !162
  br label %2399

2399:                                             ; preds = %2398, %2392
  %2400 = phi float [ %2396, %2398 ], [ %2315, %2392 ]
  %2401 = add nuw nsw i32 %2316, 1
  br i1 %2166, label %2402, label %2452

2402:                                             ; preds = %2399
  %2403 = load i32, ptr %4, align 4, !tbaa !5
  %2404 = load i32, ptr %12, align 4, !tbaa !5
  %2405 = add nsw i32 %2404, -1
  %2406 = icmp slt i32 %2403, %2405
  br i1 %2406, label %2429, label %2407

2407:                                             ; preds = %2402
  %2408 = icmp eq i32 %2403, %2405
  br i1 %2408, label %2409, label %2445

2409:                                             ; preds = %2407
  store i32 0, ptr %4, align 4, !tbaa !5
  %2410 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2410, ptr %6, align 4, !tbaa !5
  br i1 %2171, label %2452, label %2411

2411:                                             ; preds = %2409, %2439
  %2412 = phi i64 [ %2443, %2439 ], [ 1, %2409 ]
  %2413 = getelementptr inbounds i32, ptr %4, i64 %2412
  %2414 = load i32, ptr %2413, align 4, !tbaa !5
  %2415 = getelementptr inbounds i32, ptr %12, i64 %2412
  %2416 = load i32, ptr %2415, align 4, !tbaa !5
  %2417 = add nsw i32 %2416, -1
  %2418 = icmp slt i32 %2414, %2417
  br i1 %2418, label %2419, label %2437

2419:                                             ; preds = %2411
  br i1 %2406, label %2429, label %2420

2420:                                             ; preds = %2419
  %2421 = shl i64 %2412, 32
  %2422 = add i64 %2421, -4294967296
  %2423 = ashr exact i64 %2422, 32
  %2424 = getelementptr inbounds i32, ptr %7, i64 %2423
  %2425 = load i32, ptr %2424, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %6, i64 %2412
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = add nsw i32 %2427, %2425
  store i32 %2428, ptr %2426, align 4, !tbaa !5
  br label %2447

2429:                                             ; preds = %2402, %2419
  %2430 = phi i32 [ %2414, %2419 ], [ %2403, %2402 ]
  %2431 = phi ptr [ %2413, %2419 ], [ %4, %2402 ]
  %2432 = phi i64 [ %2412, %2419 ], [ 0, %2402 ]
  %2433 = add nsw i32 %2430, 1
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %7, i64 %2432
  %2435 = load i32, ptr %2434, align 4, !tbaa !5
  %2436 = getelementptr inbounds i32, ptr %6, i64 %2432
  br label %2447

2437:                                             ; preds = %2411
  %2438 = icmp eq i32 %2414, %2417
  br i1 %2438, label %2439, label %2445

2439:                                             ; preds = %2437
  store i32 0, ptr %2413, align 4, !tbaa !5
  %2440 = getelementptr inbounds i32, ptr %8, i64 %2412
  %2441 = load i32, ptr %2440, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %6, i64 %2412
  store i32 %2441, ptr %2442, align 4, !tbaa !5
  %2443 = add nuw nsw i64 %2412, 1
  %2444 = icmp eq i64 %2443, %2169
  br i1 %2444, label %2452, label %2411, !llvm.loop !462

2445:                                             ; preds = %2407, %2437
  %2446 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2447:                                             ; preds = %2420, %2429
  %2448 = phi ptr [ %2436, %2429 ], [ %2413, %2420 ]
  %2449 = phi i32 [ %2435, %2429 ], [ 1, %2420 ]
  %2450 = load i32, ptr %2448, align 4, !tbaa !5
  %2451 = add nsw i32 %2450, %2449
  store i32 %2451, ptr %2448, align 4, !tbaa !5
  br label %2452

2452:                                             ; preds = %2439, %2447, %2409, %2399
  %2453 = icmp eq i32 %2401, %5
  br i1 %2453, label %3068, label %2314, !llvm.loop !463

2454:                                             ; preds = %1857
  %2455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 558, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3068

2456:                                             ; preds = %18
  %2457 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2458 = load ptr, ptr %2457, align 8, !tbaa !9
  %2459 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2460 = load ptr, ptr %2459, align 8, !tbaa !9
  %2461 = load i8, ptr %2458, align 1, !tbaa !11
  %2462 = sitofp i8 %2461 to double
  store double %2462, ptr %2460, align 8, !tbaa !18
  %2463 = icmp eq i32 %13, 0
  br i1 %2463, label %2464, label %2469

2464:                                             ; preds = %2456
  %2465 = load i8, ptr %2458, align 1, !tbaa !11
  %2466 = sitofp i8 %2465 to double
  %2467 = fcmp fast ogt double %2462, %2466
  br i1 %2467, label %2468, label %3068

2468:                                             ; preds = %2464
  store double %2466, ptr %2460, align 8, !tbaa !18
  br label %3068

2469:                                             ; preds = %2456
  switch i32 %1, label %3066 [
    i32 1, label %2470
    i32 0, label %2770
  ]

2470:                                             ; preds = %2469
  %2471 = getelementptr inbounds i32, ptr %3, i64 %19
  %2472 = load i32, ptr %2471, align 4, !tbaa !5
  %2473 = icmp eq i32 %2472, 0
  %2474 = icmp sgt i32 %5, 0
  br i1 %2473, label %2484, label %2475

2475:                                             ; preds = %2470
  br i1 %2474, label %2476, label %3068

2476:                                             ; preds = %2475
  %2477 = icmp sgt i32 %13, 1
  %2478 = icmp sgt i32 %13, 0
  %2479 = add i32 %13, -2
  %2480 = zext i32 %2479 to i64
  %2481 = zext i32 %13 to i64
  %2482 = add nuw i32 %5, 1
  %2483 = icmp eq i32 %13, 1
  br label %2630

2484:                                             ; preds = %2470
  br i1 %2474, label %2485, label %3068

2485:                                             ; preds = %2484
  %2486 = icmp sgt i32 %13, 1
  %2487 = icmp sgt i32 %13, 0
  %2488 = add i32 %13, -2
  %2489 = zext i32 %2488 to i64
  %2490 = zext i32 %13 to i64
  %2491 = add nuw i32 %5, 1
  %2492 = icmp eq i32 %13, 1
  br label %2493

2493:                                             ; preds = %2485, %2628
  %2494 = phi double [ %2462, %2485 ], [ %2579, %2628 ]
  %2495 = phi i32 [ 0, %2485 ], [ %2580, %2628 ]
  %2496 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2486, label %2497, label %2566

2497:                                             ; preds = %2493, %2556
  %2498 = phi i32 [ %2565, %2556 ], [ 0, %2493 ]
  %2499 = phi i64 [ %2507, %2556 ], [ %2490, %2493 ]
  %2500 = phi i64 [ %2564, %2556 ], [ %2489, %2493 ]
  %2501 = phi i32 [ %2562, %2556 ], [ %2496, %2493 ]
  %2502 = sub i32 %2488, %2498
  %2503 = tail call i32 @llvm.smin.i32(i32 %2502, i32 0)
  %2504 = sub i32 %2502, %2503
  %2505 = zext i32 %2504 to i64
  %2506 = add nuw nsw i64 %2505, 1
  %2507 = add nsw i64 %2499, -1
  %2508 = icmp ult i32 %2504, 31
  br i1 %2508, label %2544, label %2509

2509:                                             ; preds = %2497
  %2510 = and i64 %2506, 8589934560
  %2511 = sub i64 %2500, %2510
  br label %2512

2512:                                             ; preds = %2512, %2509
  %2513 = phi i64 [ 0, %2509 ], [ %2536, %2512 ]
  %2514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2509 ], [ %2532, %2512 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2509 ], [ %2533, %2512 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2509 ], [ %2534, %2512 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2509 ], [ %2535, %2512 ]
  %2518 = sub i64 %2500, %2513
  %2519 = getelementptr inbounds i32, ptr %9, i64 %2518
  %2520 = getelementptr inbounds i32, ptr %2519, i64 -7
  %2521 = load <8 x i32>, ptr %2520, align 4, !tbaa !5
  %2522 = shufflevector <8 x i32> %2521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2523 = getelementptr inbounds i32, ptr %2519, i64 -15
  %2524 = load <8 x i32>, ptr %2523, align 4, !tbaa !5
  %2525 = shufflevector <8 x i32> %2524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2526 = getelementptr inbounds i32, ptr %2519, i64 -23
  %2527 = load <8 x i32>, ptr %2526, align 4, !tbaa !5
  %2528 = shufflevector <8 x i32> %2527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2529 = getelementptr inbounds i32, ptr %2519, i64 -31
  %2530 = load <8 x i32>, ptr %2529, align 4, !tbaa !5
  %2531 = shufflevector <8 x i32> %2530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2532 = mul <8 x i32> %2522, %2514
  %2533 = mul <8 x i32> %2525, %2515
  %2534 = mul <8 x i32> %2528, %2516
  %2535 = mul <8 x i32> %2531, %2517
  %2536 = add nuw i64 %2513, 32
  %2537 = icmp eq i64 %2536, %2510
  br i1 %2537, label %2538, label %2512, !llvm.loop !464

2538:                                             ; preds = %2512
  %2539 = mul <8 x i32> %2533, %2532
  %2540 = mul <8 x i32> %2534, %2539
  %2541 = mul <8 x i32> %2535, %2540
  %2542 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2541)
  %2543 = icmp eq i64 %2506, %2510
  br i1 %2543, label %2556, label %2544

2544:                                             ; preds = %2497, %2538
  %2545 = phi i64 [ %2500, %2497 ], [ %2511, %2538 ]
  %2546 = phi i32 [ 1, %2497 ], [ %2542, %2538 ]
  br label %2547

2547:                                             ; preds = %2544, %2547
  %2548 = phi i64 [ %2553, %2547 ], [ %2545, %2544 ]
  %2549 = phi i32 [ %2552, %2547 ], [ %2546, %2544 ]
  %2550 = getelementptr inbounds i32, ptr %9, i64 %2548
  %2551 = load i32, ptr %2550, align 4, !tbaa !5
  %2552 = mul nsw i32 %2551, %2549
  %2553 = add nsw i64 %2548, -1
  %2554 = trunc i64 %2548 to i32
  %2555 = icmp sgt i32 %2554, 0
  br i1 %2555, label %2547, label %2556, !llvm.loop !465

2556:                                             ; preds = %2547, %2538
  %2557 = phi i32 [ %2542, %2538 ], [ %2552, %2547 ]
  %2558 = and i64 %2507, 4294967295
  %2559 = getelementptr inbounds i32, ptr %6, i64 %2558
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = mul nsw i32 %2560, %2557
  %2562 = add nsw i32 %2561, %2501
  %2563 = icmp sgt i64 %2499, 2
  %2564 = add nsw i64 %2500, -1
  %2565 = add i32 %2498, 1
  br i1 %2563, label %2497, label %2566, !llvm.loop !466

2566:                                             ; preds = %2556, %2493
  %2567 = phi i32 [ %2496, %2493 ], [ %2562, %2556 ]
  %2568 = sext i32 %2567 to i64
  %2569 = getelementptr inbounds double, ptr %2, i64 %2568
  %2570 = load double, ptr %2569, align 8, !tbaa !18
  %2571 = getelementptr inbounds i8, ptr %2458, i64 %2568
  %2572 = load i8, ptr %2571, align 1, !tbaa !11
  %2573 = sitofp i8 %2572 to double
  %2574 = fcmp fast one double %2570, 0.000000e+00
  %2575 = fcmp fast ogt double %2494, %2573
  %2576 = select i1 %2574, i1 %2575, i1 false
  br i1 %2576, label %2577, label %2578

2577:                                             ; preds = %2566
  store double %2573, ptr %2460, align 8, !tbaa !18
  br label %2578

2578:                                             ; preds = %2577, %2566
  %2579 = phi double [ %2573, %2577 ], [ %2494, %2566 ]
  %2580 = add nuw nsw i32 %2495, 1
  br i1 %2487, label %2581, label %2628

2581:                                             ; preds = %2578
  %2582 = load i32, ptr %4, align 4, !tbaa !5
  %2583 = load i32, ptr %12, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2582, %2584
  br i1 %2585, label %2605, label %2586

2586:                                             ; preds = %2581
  %2587 = icmp eq i32 %2582, %2584
  br i1 %2587, label %2588, label %2621

2588:                                             ; preds = %2586
  store i32 0, ptr %4, align 4, !tbaa !5
  %2589 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2589, ptr %6, align 4, !tbaa !5
  br i1 %2492, label %2628, label %2590

2590:                                             ; preds = %2588, %2615
  %2591 = phi i64 [ %2619, %2615 ], [ 1, %2588 ]
  %2592 = getelementptr inbounds i32, ptr %4, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %12, i64 %2591
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = add nsw i32 %2595, -1
  %2597 = icmp slt i32 %2593, %2596
  br i1 %2597, label %2598, label %2613

2598:                                             ; preds = %2590
  br i1 %2585, label %2605, label %2599

2599:                                             ; preds = %2598
  %2600 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = add nsw i32 %2603, %2601
  store i32 %2604, ptr %2602, align 4, !tbaa !5
  br label %2623

2605:                                             ; preds = %2581, %2598
  %2606 = phi i32 [ %2593, %2598 ], [ %2582, %2581 ]
  %2607 = phi ptr [ %2592, %2598 ], [ %4, %2581 ]
  %2608 = phi i64 [ %2591, %2598 ], [ 0, %2581 ]
  %2609 = add nsw i32 %2606, 1
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2608
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2608
  br label %2623

2613:                                             ; preds = %2590
  %2614 = icmp eq i32 %2593, %2596
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2613
  store i32 0, ptr %2592, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %8, i64 %2591
  %2617 = load i32, ptr %2616, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2591
  store i32 %2617, ptr %2618, align 4, !tbaa !5
  %2619 = add nuw nsw i64 %2591, 1
  %2620 = icmp eq i64 %2619, %2490
  br i1 %2620, label %2628, label %2590, !llvm.loop !467

2621:                                             ; preds = %2586, %2613
  %2622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2623:                                             ; preds = %2599, %2605
  %2624 = phi ptr [ %2612, %2605 ], [ %2592, %2599 ]
  %2625 = phi i32 [ %2611, %2605 ], [ 1, %2599 ]
  %2626 = load i32, ptr %2624, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2625
  store i32 %2627, ptr %2624, align 4, !tbaa !5
  br label %2628

2628:                                             ; preds = %2615, %2623, %2588, %2578
  %2629 = icmp eq i32 %2580, %5
  br i1 %2629, label %3068, label %2493, !llvm.loop !468

2630:                                             ; preds = %2476, %2768
  %2631 = phi double [ %2462, %2476 ], [ %2716, %2768 ]
  %2632 = phi i32 [ 0, %2476 ], [ %2717, %2768 ]
  %2633 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2477, label %2634, label %2703

2634:                                             ; preds = %2630, %2693
  %2635 = phi i32 [ %2702, %2693 ], [ 0, %2630 ]
  %2636 = phi i64 [ %2644, %2693 ], [ %2481, %2630 ]
  %2637 = phi i64 [ %2701, %2693 ], [ %2480, %2630 ]
  %2638 = phi i32 [ %2699, %2693 ], [ %2633, %2630 ]
  %2639 = sub i32 %2479, %2635
  %2640 = tail call i32 @llvm.smin.i32(i32 %2639, i32 0)
  %2641 = sub i32 %2639, %2640
  %2642 = zext i32 %2641 to i64
  %2643 = add nuw nsw i64 %2642, 1
  %2644 = add nsw i64 %2636, -1
  %2645 = icmp ult i32 %2641, 31
  br i1 %2645, label %2681, label %2646

2646:                                             ; preds = %2634
  %2647 = and i64 %2643, 8589934560
  %2648 = sub i64 %2637, %2647
  br label %2649

2649:                                             ; preds = %2649, %2646
  %2650 = phi i64 [ 0, %2646 ], [ %2673, %2649 ]
  %2651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2669, %2649 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2670, %2649 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2671, %2649 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2646 ], [ %2672, %2649 ]
  %2655 = sub i64 %2637, %2650
  %2656 = getelementptr inbounds i32, ptr %11, i64 %2655
  %2657 = getelementptr inbounds i32, ptr %2656, i64 -7
  %2658 = load <8 x i32>, ptr %2657, align 4, !tbaa !5
  %2659 = shufflevector <8 x i32> %2658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2660 = getelementptr inbounds i32, ptr %2656, i64 -15
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !5
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2656, i64 -23
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !5
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2656, i64 -31
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = mul <8 x i32> %2659, %2651
  %2670 = mul <8 x i32> %2662, %2652
  %2671 = mul <8 x i32> %2665, %2653
  %2672 = mul <8 x i32> %2668, %2654
  %2673 = add nuw i64 %2650, 32
  %2674 = icmp eq i64 %2673, %2647
  br i1 %2674, label %2675, label %2649, !llvm.loop !469

2675:                                             ; preds = %2649
  %2676 = mul <8 x i32> %2670, %2669
  %2677 = mul <8 x i32> %2671, %2676
  %2678 = mul <8 x i32> %2672, %2677
  %2679 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2678)
  %2680 = icmp eq i64 %2643, %2647
  br i1 %2680, label %2693, label %2681

2681:                                             ; preds = %2634, %2675
  %2682 = phi i64 [ %2637, %2634 ], [ %2648, %2675 ]
  %2683 = phi i32 [ 1, %2634 ], [ %2679, %2675 ]
  br label %2684

2684:                                             ; preds = %2681, %2684
  %2685 = phi i64 [ %2690, %2684 ], [ %2682, %2681 ]
  %2686 = phi i32 [ %2689, %2684 ], [ %2683, %2681 ]
  %2687 = getelementptr inbounds i32, ptr %11, i64 %2685
  %2688 = load i32, ptr %2687, align 4, !tbaa !5
  %2689 = mul nsw i32 %2688, %2686
  %2690 = add nsw i64 %2685, -1
  %2691 = trunc i64 %2685 to i32
  %2692 = icmp sgt i32 %2691, 0
  br i1 %2692, label %2684, label %2693, !llvm.loop !470

2693:                                             ; preds = %2684, %2675
  %2694 = phi i32 [ %2679, %2675 ], [ %2689, %2684 ]
  %2695 = and i64 %2644, 4294967295
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2695
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = mul nsw i32 %2697, %2694
  %2699 = add nsw i32 %2698, %2638
  %2700 = icmp sgt i64 %2636, 2
  %2701 = add nsw i64 %2637, -1
  %2702 = add i32 %2635, 1
  br i1 %2700, label %2634, label %2703, !llvm.loop !471

2703:                                             ; preds = %2693, %2630
  %2704 = phi i32 [ %2633, %2630 ], [ %2699, %2693 ]
  %2705 = icmp slt i32 %2704, %5
  br i1 %2705, label %2708, label %2706

2706:                                             ; preds = %2703
  %2707 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

2708:                                             ; preds = %2703
  %2709 = sext i32 %2704 to i64
  %2710 = getelementptr inbounds i8, ptr %2458, i64 %2709
  %2711 = load i8, ptr %2710, align 1, !tbaa !11
  %2712 = sitofp i8 %2711 to double
  %2713 = fcmp fast ogt double %2631, %2712
  br i1 %2713, label %2714, label %2715

2714:                                             ; preds = %2708
  store double %2712, ptr %2460, align 8, !tbaa !18
  br label %2715

2715:                                             ; preds = %2708, %2714
  %2716 = phi double [ %2631, %2708 ], [ %2712, %2714 ]
  %2717 = add nuw nsw i32 %2632, 1
  br i1 %2478, label %2718, label %2768

2718:                                             ; preds = %2715
  %2719 = load i32, ptr %4, align 4, !tbaa !5
  %2720 = load i32, ptr %12, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, -1
  %2722 = icmp slt i32 %2719, %2721
  br i1 %2722, label %2745, label %2723

2723:                                             ; preds = %2718
  %2724 = icmp eq i32 %2719, %2721
  br i1 %2724, label %2725, label %2761

2725:                                             ; preds = %2723
  store i32 0, ptr %4, align 4, !tbaa !5
  %2726 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2726, ptr %6, align 4, !tbaa !5
  br i1 %2483, label %2768, label %2727

2727:                                             ; preds = %2725, %2755
  %2728 = phi i64 [ %2759, %2755 ], [ 1, %2725 ]
  %2729 = getelementptr inbounds i32, ptr %4, i64 %2728
  %2730 = load i32, ptr %2729, align 4, !tbaa !5
  %2731 = getelementptr inbounds i32, ptr %12, i64 %2728
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = add nsw i32 %2732, -1
  %2734 = icmp slt i32 %2730, %2733
  br i1 %2734, label %2735, label %2753

2735:                                             ; preds = %2727
  br i1 %2722, label %2745, label %2736

2736:                                             ; preds = %2735
  %2737 = shl i64 %2728, 32
  %2738 = add i64 %2737, -4294967296
  %2739 = ashr exact i64 %2738, 32
  %2740 = getelementptr inbounds i32, ptr %7, i64 %2739
  %2741 = load i32, ptr %2740, align 4, !tbaa !5
  %2742 = getelementptr inbounds i32, ptr %6, i64 %2728
  %2743 = load i32, ptr %2742, align 4, !tbaa !5
  %2744 = add nsw i32 %2743, %2741
  store i32 %2744, ptr %2742, align 4, !tbaa !5
  br label %2763

2745:                                             ; preds = %2718, %2735
  %2746 = phi i32 [ %2730, %2735 ], [ %2719, %2718 ]
  %2747 = phi ptr [ %2729, %2735 ], [ %4, %2718 ]
  %2748 = phi i64 [ %2728, %2735 ], [ 0, %2718 ]
  %2749 = add nsw i32 %2746, 1
  store i32 %2749, ptr %2747, align 4, !tbaa !5
  %2750 = getelementptr inbounds i32, ptr %7, i64 %2748
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %6, i64 %2748
  br label %2763

2753:                                             ; preds = %2727
  %2754 = icmp eq i32 %2730, %2733
  br i1 %2754, label %2755, label %2761

2755:                                             ; preds = %2753
  store i32 0, ptr %2729, align 4, !tbaa !5
  %2756 = getelementptr inbounds i32, ptr %8, i64 %2728
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %6, i64 %2728
  store i32 %2757, ptr %2758, align 4, !tbaa !5
  %2759 = add nuw nsw i64 %2728, 1
  %2760 = icmp eq i64 %2759, %2481
  br i1 %2760, label %2768, label %2727, !llvm.loop !472

2761:                                             ; preds = %2723, %2753
  %2762 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2763:                                             ; preds = %2736, %2745
  %2764 = phi ptr [ %2752, %2745 ], [ %2729, %2736 ]
  %2765 = phi i32 [ %2751, %2745 ], [ 1, %2736 ]
  %2766 = load i32, ptr %2764, align 4, !tbaa !5
  %2767 = add nsw i32 %2766, %2765
  store i32 %2767, ptr %2764, align 4, !tbaa !5
  br label %2768

2768:                                             ; preds = %2755, %2763, %2725, %2715
  %2769 = icmp eq i32 %2717, %5
  br i1 %2769, label %3068, label %2630, !llvm.loop !473

2770:                                             ; preds = %2469
  %2771 = getelementptr inbounds i32, ptr %3, i64 %19
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = icmp eq i32 %2772, 0
  %2774 = icmp sgt i32 %5, 0
  br i1 %2773, label %2784, label %2775

2775:                                             ; preds = %2770
  br i1 %2774, label %2776, label %3068

2776:                                             ; preds = %2775
  %2777 = icmp sgt i32 %13, 1
  %2778 = icmp sgt i32 %13, 0
  %2779 = add i32 %13, -2
  %2780 = zext i32 %2779 to i64
  %2781 = zext i32 %13 to i64
  %2782 = add nuw i32 %5, 1
  %2783 = icmp eq i32 %13, 1
  br label %2926

2784:                                             ; preds = %2770
  br i1 %2774, label %2785, label %3068

2785:                                             ; preds = %2784
  %2786 = icmp sgt i32 %13, 1
  %2787 = icmp sgt i32 %13, 0
  %2788 = add i32 %13, -2
  %2789 = zext i32 %2788 to i64
  %2790 = zext i32 %13 to i64
  %2791 = add nuw i32 %5, 1
  %2792 = icmp eq i32 %13, 1
  br label %2793

2793:                                             ; preds = %2785, %2924
  %2794 = phi double [ %2462, %2785 ], [ %2875, %2924 ]
  %2795 = phi i32 [ 0, %2785 ], [ %2876, %2924 ]
  %2796 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2786, label %2797, label %2866

2797:                                             ; preds = %2793, %2856
  %2798 = phi i32 [ %2865, %2856 ], [ 0, %2793 ]
  %2799 = phi i64 [ %2807, %2856 ], [ %2790, %2793 ]
  %2800 = phi i64 [ %2864, %2856 ], [ %2789, %2793 ]
  %2801 = phi i32 [ %2862, %2856 ], [ %2796, %2793 ]
  %2802 = sub i32 %2788, %2798
  %2803 = tail call i32 @llvm.smin.i32(i32 %2802, i32 0)
  %2804 = sub i32 %2802, %2803
  %2805 = zext i32 %2804 to i64
  %2806 = add nuw nsw i64 %2805, 1
  %2807 = add nsw i64 %2799, -1
  %2808 = icmp ult i32 %2804, 31
  br i1 %2808, label %2844, label %2809

2809:                                             ; preds = %2797
  %2810 = and i64 %2806, 8589934560
  %2811 = sub i64 %2800, %2810
  br label %2812

2812:                                             ; preds = %2812, %2809
  %2813 = phi i64 [ 0, %2809 ], [ %2836, %2812 ]
  %2814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2832, %2812 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2833, %2812 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2834, %2812 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2835, %2812 ]
  %2818 = sub i64 %2800, %2813
  %2819 = getelementptr inbounds i32, ptr %9, i64 %2818
  %2820 = getelementptr inbounds i32, ptr %2819, i64 -7
  %2821 = load <8 x i32>, ptr %2820, align 4, !tbaa !5
  %2822 = shufflevector <8 x i32> %2821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2823 = getelementptr inbounds i32, ptr %2819, i64 -15
  %2824 = load <8 x i32>, ptr %2823, align 4, !tbaa !5
  %2825 = shufflevector <8 x i32> %2824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2826 = getelementptr inbounds i32, ptr %2819, i64 -23
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !5
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2819, i64 -31
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !5
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = mul <8 x i32> %2822, %2814
  %2833 = mul <8 x i32> %2825, %2815
  %2834 = mul <8 x i32> %2828, %2816
  %2835 = mul <8 x i32> %2831, %2817
  %2836 = add nuw i64 %2813, 32
  %2837 = icmp eq i64 %2836, %2810
  br i1 %2837, label %2838, label %2812, !llvm.loop !474

2838:                                             ; preds = %2812
  %2839 = mul <8 x i32> %2833, %2832
  %2840 = mul <8 x i32> %2834, %2839
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2841)
  %2843 = icmp eq i64 %2806, %2810
  br i1 %2843, label %2856, label %2844

2844:                                             ; preds = %2797, %2838
  %2845 = phi i64 [ %2800, %2797 ], [ %2811, %2838 ]
  %2846 = phi i32 [ 1, %2797 ], [ %2842, %2838 ]
  br label %2847

2847:                                             ; preds = %2844, %2847
  %2848 = phi i64 [ %2853, %2847 ], [ %2845, %2844 ]
  %2849 = phi i32 [ %2852, %2847 ], [ %2846, %2844 ]
  %2850 = getelementptr inbounds i32, ptr %9, i64 %2848
  %2851 = load i32, ptr %2850, align 4, !tbaa !5
  %2852 = mul nsw i32 %2851, %2849
  %2853 = add nsw i64 %2848, -1
  %2854 = trunc i64 %2848 to i32
  %2855 = icmp sgt i32 %2854, 0
  br i1 %2855, label %2847, label %2856, !llvm.loop !475

2856:                                             ; preds = %2847, %2838
  %2857 = phi i32 [ %2842, %2838 ], [ %2852, %2847 ]
  %2858 = and i64 %2807, 4294967295
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = mul nsw i32 %2860, %2857
  %2862 = add nsw i32 %2861, %2801
  %2863 = icmp sgt i64 %2799, 2
  %2864 = add nsw i64 %2800, -1
  %2865 = add i32 %2798, 1
  br i1 %2863, label %2797, label %2866, !llvm.loop !476

2866:                                             ; preds = %2856, %2793
  %2867 = phi i32 [ %2796, %2793 ], [ %2862, %2856 ]
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds i8, ptr %2458, i64 %2868
  %2870 = load i8, ptr %2869, align 1, !tbaa !11
  %2871 = sitofp i8 %2870 to double
  %2872 = fcmp fast ogt double %2794, %2871
  br i1 %2872, label %2873, label %2874

2873:                                             ; preds = %2866
  store double %2871, ptr %2460, align 8, !tbaa !18
  br label %2874

2874:                                             ; preds = %2873, %2866
  %2875 = phi double [ %2871, %2873 ], [ %2794, %2866 ]
  %2876 = add nuw nsw i32 %2795, 1
  br i1 %2787, label %2877, label %2924

2877:                                             ; preds = %2874
  %2878 = load i32, ptr %4, align 4, !tbaa !5
  %2879 = load i32, ptr %12, align 4, !tbaa !5
  %2880 = add nsw i32 %2879, -1
  %2881 = icmp slt i32 %2878, %2880
  br i1 %2881, label %2901, label %2882

2882:                                             ; preds = %2877
  %2883 = icmp eq i32 %2878, %2880
  br i1 %2883, label %2884, label %2917

2884:                                             ; preds = %2882
  store i32 0, ptr %4, align 4, !tbaa !5
  %2885 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2885, ptr %6, align 4, !tbaa !5
  br i1 %2792, label %2924, label %2886

2886:                                             ; preds = %2884, %2911
  %2887 = phi i64 [ %2915, %2911 ], [ 1, %2884 ]
  %2888 = getelementptr inbounds i32, ptr %4, i64 %2887
  %2889 = load i32, ptr %2888, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %12, i64 %2887
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = add nsw i32 %2891, -1
  %2893 = icmp slt i32 %2889, %2892
  br i1 %2893, label %2894, label %2909

2894:                                             ; preds = %2886
  br i1 %2881, label %2901, label %2895

2895:                                             ; preds = %2894
  %2896 = getelementptr inbounds i32, ptr %7, i64 %2887
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2887
  %2899 = load i32, ptr %2898, align 4, !tbaa !5
  %2900 = add nsw i32 %2899, %2897
  store i32 %2900, ptr %2898, align 4, !tbaa !5
  br label %2919

2901:                                             ; preds = %2877, %2894
  %2902 = phi i32 [ %2889, %2894 ], [ %2878, %2877 ]
  %2903 = phi ptr [ %2888, %2894 ], [ %4, %2877 ]
  %2904 = phi i64 [ %2887, %2894 ], [ 0, %2877 ]
  %2905 = add nsw i32 %2902, 1
  store i32 %2905, ptr %2903, align 4, !tbaa !5
  %2906 = getelementptr inbounds i32, ptr %7, i64 %2904
  %2907 = load i32, ptr %2906, align 4, !tbaa !5
  %2908 = getelementptr inbounds i32, ptr %6, i64 %2904
  br label %2919

2909:                                             ; preds = %2886
  %2910 = icmp eq i32 %2889, %2892
  br i1 %2910, label %2911, label %2917

2911:                                             ; preds = %2909
  store i32 0, ptr %2888, align 4, !tbaa !5
  %2912 = getelementptr inbounds i32, ptr %8, i64 %2887
  %2913 = load i32, ptr %2912, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %6, i64 %2887
  store i32 %2913, ptr %2914, align 4, !tbaa !5
  %2915 = add nuw nsw i64 %2887, 1
  %2916 = icmp eq i64 %2915, %2790
  br i1 %2916, label %2924, label %2886, !llvm.loop !477

2917:                                             ; preds = %2882, %2909
  %2918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

2919:                                             ; preds = %2895, %2901
  %2920 = phi ptr [ %2908, %2901 ], [ %2888, %2895 ]
  %2921 = phi i32 [ %2907, %2901 ], [ 1, %2895 ]
  %2922 = load i32, ptr %2920, align 4, !tbaa !5
  %2923 = add nsw i32 %2922, %2921
  store i32 %2923, ptr %2920, align 4, !tbaa !5
  br label %2924

2924:                                             ; preds = %2911, %2919, %2884, %2874
  %2925 = icmp eq i32 %2876, %5
  br i1 %2925, label %3068, label %2793, !llvm.loop !478

2926:                                             ; preds = %2776, %3064
  %2927 = phi double [ %2462, %2776 ], [ %3012, %3064 ]
  %2928 = phi i32 [ 0, %2776 ], [ %3013, %3064 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2777, label %2930, label %2999

2930:                                             ; preds = %2926, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2926 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2781, %2926 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2780, %2926 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2926 ]
  %2935 = sub i32 %2779, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !479

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !480

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !481

2999:                                             ; preds = %2989, %2926
  %3000 = phi i32 [ %2929, %2926 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3068

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds i8, ptr %2458, i64 %3005
  %3007 = load i8, ptr %3006, align 1, !tbaa !11
  %3008 = sitofp i8 %3007 to double
  %3009 = fcmp fast ogt double %2927, %3008
  br i1 %3009, label %3010, label %3011

3010:                                             ; preds = %3004
  store double %3008, ptr %2460, align 8, !tbaa !18
  br label %3011

3011:                                             ; preds = %3010, %3004
  %3012 = phi double [ %3008, %3010 ], [ %2927, %3004 ]
  %3013 = add nuw nsw i32 %2928, 1
  br i1 %2778, label %3014, label %3064

3014:                                             ; preds = %3011
  %3015 = load i32, ptr %4, align 4, !tbaa !5
  %3016 = load i32, ptr %12, align 4, !tbaa !5
  %3017 = add nsw i32 %3016, -1
  %3018 = icmp slt i32 %3015, %3017
  br i1 %3018, label %3041, label %3019

3019:                                             ; preds = %3014
  %3020 = icmp eq i32 %3015, %3017
  br i1 %3020, label %3021, label %3057

3021:                                             ; preds = %3019
  store i32 0, ptr %4, align 4, !tbaa !5
  %3022 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3022, ptr %6, align 4, !tbaa !5
  br i1 %2783, label %3064, label %3023

3023:                                             ; preds = %3021, %3051
  %3024 = phi i64 [ %3055, %3051 ], [ 1, %3021 ]
  %3025 = getelementptr inbounds i32, ptr %4, i64 %3024
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = getelementptr inbounds i32, ptr %12, i64 %3024
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = add nsw i32 %3028, -1
  %3030 = icmp slt i32 %3026, %3029
  br i1 %3030, label %3031, label %3049

3031:                                             ; preds = %3023
  br i1 %3018, label %3041, label %3032

3032:                                             ; preds = %3031
  %3033 = shl i64 %3024, 32
  %3034 = add i64 %3033, -4294967296
  %3035 = ashr exact i64 %3034, 32
  %3036 = getelementptr inbounds i32, ptr %7, i64 %3035
  %3037 = load i32, ptr %3036, align 4, !tbaa !5
  %3038 = getelementptr inbounds i32, ptr %6, i64 %3024
  %3039 = load i32, ptr %3038, align 4, !tbaa !5
  %3040 = add nsw i32 %3039, %3037
  store i32 %3040, ptr %3038, align 4, !tbaa !5
  br label %3059

3041:                                             ; preds = %3014, %3031
  %3042 = phi i32 [ %3026, %3031 ], [ %3015, %3014 ]
  %3043 = phi ptr [ %3025, %3031 ], [ %4, %3014 ]
  %3044 = phi i64 [ %3024, %3031 ], [ 0, %3014 ]
  %3045 = add nsw i32 %3042, 1
  store i32 %3045, ptr %3043, align 4, !tbaa !5
  %3046 = getelementptr inbounds i32, ptr %7, i64 %3044
  %3047 = load i32, ptr %3046, align 4, !tbaa !5
  %3048 = getelementptr inbounds i32, ptr %6, i64 %3044
  br label %3059

3049:                                             ; preds = %3023
  %3050 = icmp eq i32 %3026, %3029
  br i1 %3050, label %3051, label %3057

3051:                                             ; preds = %3049
  store i32 0, ptr %3025, align 4, !tbaa !5
  %3052 = getelementptr inbounds i32, ptr %8, i64 %3024
  %3053 = load i32, ptr %3052, align 4, !tbaa !5
  %3054 = getelementptr inbounds i32, ptr %6, i64 %3024
  store i32 %3053, ptr %3054, align 4, !tbaa !5
  %3055 = add nuw nsw i64 %3024, 1
  %3056 = icmp eq i64 %3055, %2781
  br i1 %3056, label %3064, label %3023, !llvm.loop !482

3057:                                             ; preds = %3019, %3049
  %3058 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3068

3059:                                             ; preds = %3032, %3041
  %3060 = phi ptr [ %3048, %3041 ], [ %3025, %3032 ]
  %3061 = phi i32 [ %3047, %3041 ], [ 1, %3032 ]
  %3062 = load i32, ptr %3060, align 4, !tbaa !5
  %3063 = add nsw i32 %3062, %3061
  store i32 %3063, ptr %3060, align 4, !tbaa !5
  br label %3064

3064:                                             ; preds = %3051, %3059, %3021, %3011
  %3065 = icmp eq i32 %3013, %5
  br i1 %3065, label %3068, label %2926, !llvm.loop !483

3066:                                             ; preds = %2469
  %3067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3068

3068:                                             ; preds = %3064, %2924, %2768, %2628, %2452, %2312, %2156, %2016, %1840, %1700, %1544, %1404, %1228, %1089, %934, %795, %620, %482, %328, %190, %2775, %2784, %2475, %2484, %2163, %2172, %1863, %1872, %1551, %1560, %1251, %1260, %941, %950, %643, %652, %335, %344, %39, %48, %2468, %2464, %3066, %1856, %1852, %2454, %1244, %1240, %1842, %635, %632, %1230, %32, %29, %622, %18, %2621, %2706, %2761, %2917, %3002, %3057, %2009, %2094, %2149, %2305, %2390, %2445, %1397, %1482, %1537, %1693, %1778, %1833, %788, %872, %927, %1082, %1166, %1221, %183, %267, %321, %475, %559, %613
  %3069 = phi i32 [ -1, %613 ], [ -1, %559 ], [ -1, %475 ], [ -1, %321 ], [ -1, %267 ], [ -1, %183 ], [ -1, %1221 ], [ -1, %1166 ], [ -1, %1082 ], [ -1, %927 ], [ -1, %872 ], [ -1, %788 ], [ -1, %1833 ], [ -1, %1778 ], [ -1, %1693 ], [ -1, %1537 ], [ -1, %1482 ], [ -1, %1397 ], [ -1, %2445 ], [ -1, %2390 ], [ -1, %2305 ], [ -1, %2149 ], [ -1, %2094 ], [ -1, %2009 ], [ -1, %3057 ], [ -1, %3002 ], [ -1, %2917 ], [ -1, %2761 ], [ -1, %2706 ], [ -1, %2621 ], [ %10, %18 ], [ 1, %622 ], [ 1, %29 ], [ 1, %32 ], [ 1, %1230 ], [ 1, %632 ], [ 1, %635 ], [ 1, %1842 ], [ 1, %1240 ], [ 1, %1244 ], [ 1, %2454 ], [ 1, %1852 ], [ 1, %1856 ], [ 1, %3066 ], [ 1, %2464 ], [ 1, %2468 ], [ 1, %48 ], [ 1, %39 ], [ 1, %344 ], [ 1, %335 ], [ 1, %652 ], [ 1, %643 ], [ 1, %950 ], [ 1, %941 ], [ 1, %1260 ], [ 1, %1251 ], [ 1, %1560 ], [ 1, %1551 ], [ 1, %1872 ], [ 1, %1863 ], [ 1, %2172 ], [ 1, %2163 ], [ 1, %2484 ], [ 1, %2475 ], [ 1, %2784 ], [ 1, %2775 ], [ %55, %190 ], [ %46, %328 ], [ %351, %482 ], [ %342, %620 ], [ %659, %795 ], [ %650, %934 ], [ %957, %1089 ], [ %948, %1228 ], [ %1267, %1404 ], [ %1258, %1544 ], [ %1567, %1700 ], [ %1558, %1840 ], [ %1879, %2016 ], [ %1870, %2156 ], [ %2179, %2312 ], [ %2170, %2452 ], [ %2491, %2628 ], [ %2482, %2768 ], [ %2791, %2924 ], [ %2782, %3064 ]
  ret i32 %3069
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3064 [
    i32 101, label %22
    i32 102, label %640
    i32 107, label %1243
    i32 108, label %1850
    i32 109, label %2457
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i16, ptr %24, align 2, !tbaa !78
  %28 = trunc i16 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i16, ptr %24, align 2, !tbaa !78
  %32 = and i16 %27, 255
  %33 = and i16 %31, 255
  %34 = icmp ugt i16 %32, %33
  br i1 %34, label %35, label %3064

35:                                               ; preds = %30
  %36 = trunc i16 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !11
  br label %3064

37:                                               ; preds = %22
  switch i32 %1, label %638 [
    i32 1, label %38
    i32 0, label %340
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %3064

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %199

52:                                               ; preds = %38
  br i1 %42, label %53, label %3064

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %197
  %62 = phi i32 [ 0, %53 ], [ %149, %197 ]
  %63 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %54, label %64, label %133

64:                                               ; preds = %61, %123
  %65 = phi i32 [ %132, %123 ], [ 0, %61 ]
  %66 = phi i64 [ %74, %123 ], [ %58, %61 ]
  %67 = phi i64 [ %131, %123 ], [ %57, %61 ]
  %68 = phi i32 [ %129, %123 ], [ %63, %61 ]
  %69 = sub i32 %56, %65
  %70 = tail call i32 @llvm.smin.i32(i32 %69, i32 0)
  %71 = sub i32 %69, %70
  %72 = zext i32 %71 to i64
  %73 = add nuw nsw i64 %72, 1
  %74 = add nsw i64 %66, -1
  %75 = icmp ult i32 %71, 31
  br i1 %75, label %111, label %76

76:                                               ; preds = %64
  %77 = and i64 %73, 8589934560
  %78 = sub i64 %67, %77
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi i64 [ 0, %76 ], [ %103, %79 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %99, %79 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %100, %79 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %101, %79 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %102, %79 ]
  %85 = sub i64 %67, %80
  %86 = getelementptr inbounds i32, ptr %9, i64 %85
  %87 = getelementptr inbounds i32, ptr %86, i64 -7
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %86, i64 -15
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %86, i64 -23
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !5
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = getelementptr inbounds i32, ptr %86, i64 -31
  %97 = load <8 x i32>, ptr %96, align 4, !tbaa !5
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %99 = mul <8 x i32> %89, %81
  %100 = mul <8 x i32> %92, %82
  %101 = mul <8 x i32> %95, %83
  %102 = mul <8 x i32> %98, %84
  %103 = add nuw i64 %80, 32
  %104 = icmp eq i64 %103, %77
  br i1 %104, label %105, label %79, !llvm.loop !484

105:                                              ; preds = %79
  %106 = mul <8 x i32> %100, %99
  %107 = mul <8 x i32> %101, %106
  %108 = mul <8 x i32> %102, %107
  %109 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %108)
  %110 = icmp eq i64 %73, %77
  br i1 %110, label %123, label %111

111:                                              ; preds = %64, %105
  %112 = phi i64 [ %67, %64 ], [ %78, %105 ]
  %113 = phi i32 [ 1, %64 ], [ %109, %105 ]
  br label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %120, %114 ], [ %112, %111 ]
  %116 = phi i32 [ %119, %114 ], [ %113, %111 ]
  %117 = getelementptr inbounds i32, ptr %9, i64 %115
  %118 = load i32, ptr %117, align 4, !tbaa !5
  %119 = mul nsw i32 %118, %116
  %120 = add nsw i64 %115, -1
  %121 = trunc i64 %115 to i32
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %114, label %123, !llvm.loop !485

123:                                              ; preds = %114, %105
  %124 = phi i32 [ %109, %105 ], [ %119, %114 ]
  %125 = and i64 %74, 4294967295
  %126 = getelementptr inbounds i32, ptr %6, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !5
  %128 = mul nsw i32 %127, %124
  %129 = add nsw i32 %128, %68
  %130 = icmp sgt i64 %66, 2
  %131 = add nsw i64 %67, -1
  %132 = add i32 %65, 1
  br i1 %130, label %64, label %133, !llvm.loop !486

133:                                              ; preds = %123, %61
  %134 = phi i32 [ %63, %61 ], [ %129, %123 ]
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds double, ptr %2, i64 %135
  %137 = load double, ptr %136, align 8, !tbaa !18
  %138 = getelementptr inbounds i16, ptr %24, i64 %135
  %139 = load i16, ptr %138, align 2, !tbaa !78
  %140 = trunc i16 %139 to i8
  %141 = fcmp fast ueq double %137, 0.000000e+00
  br i1 %141, label %148, label %142

142:                                              ; preds = %133
  %143 = load i8, ptr %26, align 1, !tbaa !11
  %144 = and i16 %139, 255
  %145 = zext i8 %143 to i16
  %146 = icmp ult i16 %144, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %142
  store i8 %140, ptr %26, align 1, !tbaa !11
  br label %148

148:                                              ; preds = %142, %147, %133
  %149 = add nuw nsw i32 %62, 1
  br i1 %55, label %150, label %197

150:                                              ; preds = %148
  %151 = load i32, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %12, align 4, !tbaa !5
  %153 = add nsw i32 %152, -1
  %154 = icmp slt i32 %151, %153
  br i1 %154, label %174, label %155

155:                                              ; preds = %150
  %156 = icmp eq i32 %151, %153
  br i1 %156, label %157, label %190

157:                                              ; preds = %155
  store i32 0, ptr %4, align 4, !tbaa !5
  %158 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %158, ptr %6, align 4, !tbaa !5
  br i1 %60, label %197, label %159

159:                                              ; preds = %157, %184
  %160 = phi i64 [ %188, %184 ], [ 1, %157 ]
  %161 = getelementptr inbounds i32, ptr %4, i64 %160
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %12, i64 %160
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, -1
  %166 = icmp slt i32 %162, %165
  br i1 %166, label %167, label %182

167:                                              ; preds = %159
  br i1 %154, label %174, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds i32, ptr %7, i64 %160
  %170 = load i32, ptr %169, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %6, i64 %160
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = add nsw i32 %172, %170
  store i32 %173, ptr %171, align 4, !tbaa !5
  br label %192

174:                                              ; preds = %150, %167
  %175 = phi i32 [ %162, %167 ], [ %151, %150 ]
  %176 = phi ptr [ %161, %167 ], [ %4, %150 ]
  %177 = phi i64 [ %160, %167 ], [ 0, %150 ]
  %178 = add nsw i32 %175, 1
  store i32 %178, ptr %176, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %7, i64 %177
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %177
  br label %192

182:                                              ; preds = %159
  %183 = icmp eq i32 %162, %165
  br i1 %183, label %184, label %190

184:                                              ; preds = %182
  store i32 0, ptr %161, align 4, !tbaa !5
  %185 = getelementptr inbounds i32, ptr %8, i64 %160
  %186 = load i32, ptr %185, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %6, i64 %160
  store i32 %186, ptr %187, align 4, !tbaa !5
  %188 = add nuw nsw i64 %160, 1
  %189 = icmp eq i64 %188, %58
  br i1 %189, label %197, label %159, !llvm.loop !487

190:                                              ; preds = %155, %182
  %191 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

192:                                              ; preds = %168, %174
  %193 = phi ptr [ %181, %174 ], [ %161, %168 ]
  %194 = phi i32 [ %180, %174 ], [ 1, %168 ]
  %195 = load i32, ptr %193, align 4, !tbaa !5
  %196 = add nsw i32 %195, %194
  store i32 %196, ptr %193, align 4, !tbaa !5
  br label %197

197:                                              ; preds = %184, %192, %157, %148
  %198 = icmp eq i32 %149, %5
  br i1 %198, label %3064, label %61, !llvm.loop !488

199:                                              ; preds = %44, %338
  %200 = phi i32 [ 0, %44 ], [ %287, %338 ]
  %201 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %45, label %202, label %271

202:                                              ; preds = %199, %261
  %203 = phi i32 [ %270, %261 ], [ 0, %199 ]
  %204 = phi i64 [ %212, %261 ], [ %49, %199 ]
  %205 = phi i64 [ %269, %261 ], [ %48, %199 ]
  %206 = phi i32 [ %267, %261 ], [ %201, %199 ]
  %207 = sub i32 %47, %203
  %208 = tail call i32 @llvm.smin.i32(i32 %207, i32 0)
  %209 = sub i32 %207, %208
  %210 = zext i32 %209 to i64
  %211 = add nuw nsw i64 %210, 1
  %212 = add nsw i64 %204, -1
  %213 = icmp ult i32 %209, 31
  br i1 %213, label %249, label %214

214:                                              ; preds = %202
  %215 = and i64 %211, 8589934560
  %216 = sub i64 %205, %215
  br label %217

217:                                              ; preds = %217, %214
  %218 = phi i64 [ 0, %214 ], [ %241, %217 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %237, %217 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %238, %217 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %239, %217 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %240, %217 ]
  %223 = sub i64 %205, %218
  %224 = getelementptr inbounds i32, ptr %11, i64 %223
  %225 = getelementptr inbounds i32, ptr %224, i64 -7
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %224, i64 -15
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %224, i64 -23
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = getelementptr inbounds i32, ptr %224, i64 -31
  %235 = load <8 x i32>, ptr %234, align 4, !tbaa !5
  %236 = shufflevector <8 x i32> %235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %237 = mul <8 x i32> %227, %219
  %238 = mul <8 x i32> %230, %220
  %239 = mul <8 x i32> %233, %221
  %240 = mul <8 x i32> %236, %222
  %241 = add nuw i64 %218, 32
  %242 = icmp eq i64 %241, %215
  br i1 %242, label %243, label %217, !llvm.loop !489

243:                                              ; preds = %217
  %244 = mul <8 x i32> %238, %237
  %245 = mul <8 x i32> %239, %244
  %246 = mul <8 x i32> %240, %245
  %247 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %246)
  %248 = icmp eq i64 %211, %215
  br i1 %248, label %261, label %249

249:                                              ; preds = %202, %243
  %250 = phi i64 [ %205, %202 ], [ %216, %243 ]
  %251 = phi i32 [ 1, %202 ], [ %247, %243 ]
  br label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %258, %252 ], [ %250, %249 ]
  %254 = phi i32 [ %257, %252 ], [ %251, %249 ]
  %255 = getelementptr inbounds i32, ptr %11, i64 %253
  %256 = load i32, ptr %255, align 4, !tbaa !5
  %257 = mul nsw i32 %256, %254
  %258 = add nsw i64 %253, -1
  %259 = trunc i64 %253 to i32
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %252, label %261, !llvm.loop !490

261:                                              ; preds = %252, %243
  %262 = phi i32 [ %247, %243 ], [ %257, %252 ]
  %263 = and i64 %212, 4294967295
  %264 = getelementptr inbounds i32, ptr %6, i64 %263
  %265 = load i32, ptr %264, align 4, !tbaa !5
  %266 = mul nsw i32 %265, %262
  %267 = add nsw i32 %266, %206
  %268 = icmp sgt i64 %204, 2
  %269 = add nsw i64 %205, -1
  %270 = add i32 %203, 1
  br i1 %268, label %202, label %271, !llvm.loop !491

271:                                              ; preds = %261, %199
  %272 = phi i32 [ %201, %199 ], [ %267, %261 ]
  %273 = icmp slt i32 %272, %5
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

276:                                              ; preds = %271
  %277 = sext i32 %272 to i64
  %278 = getelementptr inbounds i16, ptr %24, i64 %277
  %279 = load i16, ptr %278, align 2, !tbaa !78
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = and i16 %279, 255
  %282 = zext i8 %280 to i16
  %283 = icmp ult i16 %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %276
  %285 = trunc i16 %279 to i8
  store i8 %285, ptr %26, align 1, !tbaa !11
  br label %286

286:                                              ; preds = %276, %284
  %287 = add nuw nsw i32 %200, 1
  br i1 %46, label %288, label %338

288:                                              ; preds = %286
  %289 = load i32, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %12, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %289, %291
  br i1 %292, label %315, label %293

293:                                              ; preds = %288
  %294 = icmp eq i32 %289, %291
  br i1 %294, label %295, label %331

295:                                              ; preds = %293
  store i32 0, ptr %4, align 4, !tbaa !5
  %296 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %296, ptr %6, align 4, !tbaa !5
  br i1 %51, label %338, label %297

297:                                              ; preds = %295, %325
  %298 = phi i64 [ %329, %325 ], [ 1, %295 ]
  %299 = getelementptr inbounds i32, ptr %4, i64 %298
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = getelementptr inbounds i32, ptr %12, i64 %298
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = add nsw i32 %302, -1
  %304 = icmp slt i32 %300, %303
  br i1 %304, label %305, label %323

305:                                              ; preds = %297
  br i1 %292, label %315, label %306

306:                                              ; preds = %305
  %307 = shl i64 %298, 32
  %308 = add i64 %307, -4294967296
  %309 = ashr exact i64 %308, 32
  %310 = getelementptr inbounds i32, ptr %7, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %298
  %313 = load i32, ptr %312, align 4, !tbaa !5
  %314 = add nsw i32 %313, %311
  store i32 %314, ptr %312, align 4, !tbaa !5
  br label %333

315:                                              ; preds = %288, %305
  %316 = phi i32 [ %300, %305 ], [ %289, %288 ]
  %317 = phi ptr [ %299, %305 ], [ %4, %288 ]
  %318 = phi i64 [ %298, %305 ], [ 0, %288 ]
  %319 = add nsw i32 %316, 1
  store i32 %319, ptr %317, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %7, i64 %318
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %318
  br label %333

323:                                              ; preds = %297
  %324 = icmp eq i32 %300, %303
  br i1 %324, label %325, label %331

325:                                              ; preds = %323
  store i32 0, ptr %299, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %8, i64 %298
  %327 = load i32, ptr %326, align 4, !tbaa !5
  %328 = getelementptr inbounds i32, ptr %6, i64 %298
  store i32 %327, ptr %328, align 4, !tbaa !5
  %329 = add nuw nsw i64 %298, 1
  %330 = icmp eq i64 %329, %49
  br i1 %330, label %338, label %297, !llvm.loop !492

331:                                              ; preds = %293, %323
  %332 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

333:                                              ; preds = %306, %315
  %334 = phi ptr [ %322, %315 ], [ %299, %306 ]
  %335 = phi i32 [ %321, %315 ], [ 1, %306 ]
  %336 = load i32, ptr %334, align 4, !tbaa !5
  %337 = add nsw i32 %336, %335
  store i32 %337, ptr %334, align 4, !tbaa !5
  br label %338

338:                                              ; preds = %325, %333, %295, %286
  %339 = icmp eq i32 %287, %5
  br i1 %339, label %3064, label %199, !llvm.loop !493

340:                                              ; preds = %37
  %341 = getelementptr inbounds i32, ptr %3, i64 %19
  %342 = load i32, ptr %341, align 4, !tbaa !5
  %343 = icmp eq i32 %342, 0
  %344 = icmp sgt i32 %5, 0
  br i1 %343, label %354, label %345

345:                                              ; preds = %340
  br i1 %344, label %346, label %3064

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %497

354:                                              ; preds = %340
  br i1 %344, label %355, label %3064

355:                                              ; preds = %354
  %356 = icmp sgt i32 %13, 1
  %357 = icmp sgt i32 %13, 0
  %358 = add i32 %13, -2
  %359 = zext i32 %358 to i64
  %360 = zext i32 %13 to i64
  %361 = add nuw i32 %5, 1
  %362 = icmp eq i32 %13, 1
  br label %363

363:                                              ; preds = %355, %495
  %364 = phi i32 [ 0, %355 ], [ %447, %495 ]
  %365 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %356, label %366, label %435

366:                                              ; preds = %363, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %363 ]
  %368 = phi i64 [ %376, %425 ], [ %360, %363 ]
  %369 = phi i64 [ %433, %425 ], [ %359, %363 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %363 ]
  %371 = sub i32 %358, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !5
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !5
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !494

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !495

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !5
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !496

435:                                              ; preds = %425, %363
  %436 = phi i32 [ %365, %363 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i16, ptr %24, i64 %437
  %439 = load i16, ptr %438, align 2, !tbaa !78
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = and i16 %439, 255
  %442 = zext i8 %440 to i16
  %443 = icmp ult i16 %441, %442
  br i1 %443, label %444, label %446

444:                                              ; preds = %435
  %445 = trunc i16 %439 to i8
  store i8 %445, ptr %26, align 1, !tbaa !11
  br label %446

446:                                              ; preds = %444, %435
  %447 = add nuw nsw i32 %364, 1
  br i1 %357, label %448, label %495

448:                                              ; preds = %446
  %449 = load i32, ptr %4, align 4, !tbaa !5
  %450 = load i32, ptr %12, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %449, %451
  br i1 %452, label %472, label %453

453:                                              ; preds = %448
  %454 = icmp eq i32 %449, %451
  br i1 %454, label %455, label %488

455:                                              ; preds = %453
  store i32 0, ptr %4, align 4, !tbaa !5
  %456 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %456, ptr %6, align 4, !tbaa !5
  br i1 %362, label %495, label %457

457:                                              ; preds = %455, %482
  %458 = phi i64 [ %486, %482 ], [ 1, %455 ]
  %459 = getelementptr inbounds i32, ptr %4, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %12, i64 %458
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, -1
  %464 = icmp slt i32 %460, %463
  br i1 %464, label %465, label %480

465:                                              ; preds = %457
  br i1 %452, label %472, label %466

466:                                              ; preds = %465
  %467 = getelementptr inbounds i32, ptr %7, i64 %458
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %458
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = add nsw i32 %470, %468
  store i32 %471, ptr %469, align 4, !tbaa !5
  br label %490

472:                                              ; preds = %448, %465
  %473 = phi i32 [ %460, %465 ], [ %449, %448 ]
  %474 = phi ptr [ %459, %465 ], [ %4, %448 ]
  %475 = phi i64 [ %458, %465 ], [ 0, %448 ]
  %476 = add nsw i32 %473, 1
  store i32 %476, ptr %474, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %7, i64 %475
  %478 = load i32, ptr %477, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %6, i64 %475
  br label %490

480:                                              ; preds = %457
  %481 = icmp eq i32 %460, %463
  br i1 %481, label %482, label %488

482:                                              ; preds = %480
  store i32 0, ptr %459, align 4, !tbaa !5
  %483 = getelementptr inbounds i32, ptr %8, i64 %458
  %484 = load i32, ptr %483, align 4, !tbaa !5
  %485 = getelementptr inbounds i32, ptr %6, i64 %458
  store i32 %484, ptr %485, align 4, !tbaa !5
  %486 = add nuw nsw i64 %458, 1
  %487 = icmp eq i64 %486, %360
  br i1 %487, label %495, label %457, !llvm.loop !497

488:                                              ; preds = %453, %480
  %489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

490:                                              ; preds = %466, %472
  %491 = phi ptr [ %479, %472 ], [ %459, %466 ]
  %492 = phi i32 [ %478, %472 ], [ 1, %466 ]
  %493 = load i32, ptr %491, align 4, !tbaa !5
  %494 = add nsw i32 %493, %492
  store i32 %494, ptr %491, align 4, !tbaa !5
  br label %495

495:                                              ; preds = %482, %490, %455, %446
  %496 = icmp eq i32 %447, %5
  br i1 %496, label %3064, label %363, !llvm.loop !498

497:                                              ; preds = %346, %636
  %498 = phi i32 [ 0, %346 ], [ %585, %636 ]
  %499 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %500, label %569

500:                                              ; preds = %497, %559
  %501 = phi i32 [ %568, %559 ], [ 0, %497 ]
  %502 = phi i64 [ %510, %559 ], [ %351, %497 ]
  %503 = phi i64 [ %567, %559 ], [ %350, %497 ]
  %504 = phi i32 [ %565, %559 ], [ %499, %497 ]
  %505 = sub i32 %349, %501
  %506 = tail call i32 @llvm.smin.i32(i32 %505, i32 0)
  %507 = sub i32 %505, %506
  %508 = zext i32 %507 to i64
  %509 = add nuw nsw i64 %508, 1
  %510 = add nsw i64 %502, -1
  %511 = icmp ult i32 %507, 31
  br i1 %511, label %547, label %512

512:                                              ; preds = %500
  %513 = and i64 %509, 8589934560
  %514 = sub i64 %503, %513
  br label %515

515:                                              ; preds = %515, %512
  %516 = phi i64 [ 0, %512 ], [ %539, %515 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %535, %515 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %536, %515 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %537, %515 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %538, %515 ]
  %521 = sub i64 %503, %516
  %522 = getelementptr inbounds i32, ptr %11, i64 %521
  %523 = getelementptr inbounds i32, ptr %522, i64 -7
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !5
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %522, i64 -15
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !5
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = getelementptr inbounds i32, ptr %522, i64 -23
  %530 = load <8 x i32>, ptr %529, align 4, !tbaa !5
  %531 = shufflevector <8 x i32> %530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %532 = getelementptr inbounds i32, ptr %522, i64 -31
  %533 = load <8 x i32>, ptr %532, align 4, !tbaa !5
  %534 = shufflevector <8 x i32> %533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %535 = mul <8 x i32> %525, %517
  %536 = mul <8 x i32> %528, %518
  %537 = mul <8 x i32> %531, %519
  %538 = mul <8 x i32> %534, %520
  %539 = add nuw i64 %516, 32
  %540 = icmp eq i64 %539, %513
  br i1 %540, label %541, label %515, !llvm.loop !499

541:                                              ; preds = %515
  %542 = mul <8 x i32> %536, %535
  %543 = mul <8 x i32> %537, %542
  %544 = mul <8 x i32> %538, %543
  %545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %544)
  %546 = icmp eq i64 %509, %513
  br i1 %546, label %559, label %547

547:                                              ; preds = %500, %541
  %548 = phi i64 [ %503, %500 ], [ %514, %541 ]
  %549 = phi i32 [ 1, %500 ], [ %545, %541 ]
  br label %550

550:                                              ; preds = %547, %550
  %551 = phi i64 [ %556, %550 ], [ %548, %547 ]
  %552 = phi i32 [ %555, %550 ], [ %549, %547 ]
  %553 = getelementptr inbounds i32, ptr %11, i64 %551
  %554 = load i32, ptr %553, align 4, !tbaa !5
  %555 = mul nsw i32 %554, %552
  %556 = add nsw i64 %551, -1
  %557 = trunc i64 %551 to i32
  %558 = icmp sgt i32 %557, 0
  br i1 %558, label %550, label %559, !llvm.loop !500

559:                                              ; preds = %550, %541
  %560 = phi i32 [ %545, %541 ], [ %555, %550 ]
  %561 = and i64 %510, 4294967295
  %562 = getelementptr inbounds i32, ptr %6, i64 %561
  %563 = load i32, ptr %562, align 4, !tbaa !5
  %564 = mul nsw i32 %563, %560
  %565 = add nsw i32 %564, %504
  %566 = icmp sgt i64 %502, 2
  %567 = add nsw i64 %503, -1
  %568 = add i32 %501, 1
  br i1 %566, label %500, label %569, !llvm.loop !501

569:                                              ; preds = %559, %497
  %570 = phi i32 [ %499, %497 ], [ %565, %559 ]
  %571 = icmp slt i32 %570, %5
  br i1 %571, label %574, label %572

572:                                              ; preds = %569
  %573 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

574:                                              ; preds = %569
  %575 = sext i32 %570 to i64
  %576 = getelementptr inbounds i16, ptr %24, i64 %575
  %577 = load i16, ptr %576, align 2, !tbaa !78
  %578 = load i8, ptr %26, align 1, !tbaa !11
  %579 = and i16 %577, 255
  %580 = zext i8 %578 to i16
  %581 = icmp ult i16 %579, %580
  br i1 %581, label %582, label %584

582:                                              ; preds = %574
  %583 = trunc i16 %577 to i8
  store i8 %583, ptr %26, align 1, !tbaa !11
  br label %584

584:                                              ; preds = %582, %574
  %585 = add nuw nsw i32 %498, 1
  br i1 %348, label %586, label %636

586:                                              ; preds = %584
  %587 = load i32, ptr %4, align 4, !tbaa !5
  %588 = load i32, ptr %12, align 4, !tbaa !5
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %587, %589
  br i1 %590, label %613, label %591

591:                                              ; preds = %586
  %592 = icmp eq i32 %587, %589
  br i1 %592, label %593, label %629

593:                                              ; preds = %591
  store i32 0, ptr %4, align 4, !tbaa !5
  %594 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %594, ptr %6, align 4, !tbaa !5
  br i1 %353, label %636, label %595

595:                                              ; preds = %593, %623
  %596 = phi i64 [ %627, %623 ], [ 1, %593 ]
  %597 = getelementptr inbounds i32, ptr %4, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %12, i64 %596
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, -1
  %602 = icmp slt i32 %598, %601
  br i1 %602, label %603, label %621

603:                                              ; preds = %595
  br i1 %590, label %613, label %604

604:                                              ; preds = %603
  %605 = shl i64 %596, 32
  %606 = add i64 %605, -4294967296
  %607 = ashr exact i64 %606, 32
  %608 = getelementptr inbounds i32, ptr %7, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %596
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = add nsw i32 %611, %609
  store i32 %612, ptr %610, align 4, !tbaa !5
  br label %631

613:                                              ; preds = %586, %603
  %614 = phi i32 [ %598, %603 ], [ %587, %586 ]
  %615 = phi ptr [ %597, %603 ], [ %4, %586 ]
  %616 = phi i64 [ %596, %603 ], [ 0, %586 ]
  %617 = add nsw i32 %614, 1
  store i32 %617, ptr %615, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %7, i64 %616
  %619 = load i32, ptr %618, align 4, !tbaa !5
  %620 = getelementptr inbounds i32, ptr %6, i64 %616
  br label %631

621:                                              ; preds = %595
  %622 = icmp eq i32 %598, %601
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  store i32 0, ptr %597, align 4, !tbaa !5
  %624 = getelementptr inbounds i32, ptr %8, i64 %596
  %625 = load i32, ptr %624, align 4, !tbaa !5
  %626 = getelementptr inbounds i32, ptr %6, i64 %596
  store i32 %625, ptr %626, align 4, !tbaa !5
  %627 = add nuw nsw i64 %596, 1
  %628 = icmp eq i64 %627, %351
  br i1 %628, label %636, label %595, !llvm.loop !502

629:                                              ; preds = %591, %621
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

631:                                              ; preds = %604, %613
  %632 = phi ptr [ %620, %613 ], [ %597, %604 ]
  %633 = phi i32 [ %619, %613 ], [ 1, %604 ]
  %634 = load i32, ptr %632, align 4, !tbaa !5
  %635 = add nsw i32 %634, %633
  store i32 %635, ptr %632, align 4, !tbaa !5
  br label %636

636:                                              ; preds = %623, %631, %593, %584
  %637 = icmp eq i32 %585, %5
  br i1 %637, label %3064, label %497, !llvm.loop !503

638:                                              ; preds = %37
  %639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 767, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3064

640:                                              ; preds = %18
  %641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %642 = load ptr, ptr %641, align 8, !tbaa !9
  %643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !9
  %645 = load i16, ptr %642, align 2, !tbaa !78
  %646 = sext i16 %645 to i32
  store i32 %646, ptr %644, align 4, !tbaa !5
  %647 = icmp eq i32 %13, 0
  br i1 %647, label %3064, label %648

648:                                              ; preds = %640
  switch i32 %1, label %1241 [
    i32 1, label %649
    i32 0, label %947
  ]

649:                                              ; preds = %648
  %650 = getelementptr inbounds i32, ptr %3, i64 %19
  %651 = load i32, ptr %650, align 4, !tbaa !5
  %652 = icmp eq i32 %651, 0
  %653 = icmp sgt i32 %5, 0
  br i1 %652, label %663, label %654

654:                                              ; preds = %649
  br i1 %653, label %655, label %3064

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %808

663:                                              ; preds = %649
  br i1 %653, label %664, label %3064

664:                                              ; preds = %663
  %665 = icmp sgt i32 %13, 1
  %666 = icmp sgt i32 %13, 0
  %667 = add i32 %13, -2
  %668 = zext i32 %667 to i64
  %669 = zext i32 %13 to i64
  %670 = add nuw i32 %5, 1
  %671 = icmp eq i32 %13, 1
  br label %672

672:                                              ; preds = %664, %806
  %673 = phi i32 [ 0, %664 ], [ %758, %806 ]
  %674 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %665, label %675, label %744

675:                                              ; preds = %672, %734
  %676 = phi i32 [ %743, %734 ], [ 0, %672 ]
  %677 = phi i64 [ %685, %734 ], [ %669, %672 ]
  %678 = phi i64 [ %742, %734 ], [ %668, %672 ]
  %679 = phi i32 [ %740, %734 ], [ %674, %672 ]
  %680 = sub i32 %667, %676
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 0)
  %682 = sub i32 %680, %681
  %683 = zext i32 %682 to i64
  %684 = add nuw nsw i64 %683, 1
  %685 = add nsw i64 %677, -1
  %686 = icmp ult i32 %682, 31
  br i1 %686, label %722, label %687

687:                                              ; preds = %675
  %688 = and i64 %684, 8589934560
  %689 = sub i64 %678, %688
  br label %690

690:                                              ; preds = %690, %687
  %691 = phi i64 [ 0, %687 ], [ %714, %690 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %710, %690 ]
  %693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %711, %690 ]
  %694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %712, %690 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %687 ], [ %713, %690 ]
  %696 = sub i64 %678, %691
  %697 = getelementptr inbounds i32, ptr %9, i64 %696
  %698 = getelementptr inbounds i32, ptr %697, i64 -7
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %697, i64 -15
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %697, i64 -23
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %697, i64 -31
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = mul <8 x i32> %700, %692
  %711 = mul <8 x i32> %703, %693
  %712 = mul <8 x i32> %706, %694
  %713 = mul <8 x i32> %709, %695
  %714 = add nuw i64 %691, 32
  %715 = icmp eq i64 %714, %688
  br i1 %715, label %716, label %690, !llvm.loop !504

716:                                              ; preds = %690
  %717 = mul <8 x i32> %711, %710
  %718 = mul <8 x i32> %712, %717
  %719 = mul <8 x i32> %713, %718
  %720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %719)
  %721 = icmp eq i64 %684, %688
  br i1 %721, label %734, label %722

722:                                              ; preds = %675, %716
  %723 = phi i64 [ %678, %675 ], [ %689, %716 ]
  %724 = phi i32 [ 1, %675 ], [ %720, %716 ]
  br label %725

725:                                              ; preds = %722, %725
  %726 = phi i64 [ %731, %725 ], [ %723, %722 ]
  %727 = phi i32 [ %730, %725 ], [ %724, %722 ]
  %728 = getelementptr inbounds i32, ptr %9, i64 %726
  %729 = load i32, ptr %728, align 4, !tbaa !5
  %730 = mul nsw i32 %729, %727
  %731 = add nsw i64 %726, -1
  %732 = trunc i64 %726 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %725, label %734, !llvm.loop !505

734:                                              ; preds = %725, %716
  %735 = phi i32 [ %720, %716 ], [ %730, %725 ]
  %736 = and i64 %685, 4294967295
  %737 = getelementptr inbounds i32, ptr %6, i64 %736
  %738 = load i32, ptr %737, align 4, !tbaa !5
  %739 = mul nsw i32 %738, %735
  %740 = add nsw i32 %739, %679
  %741 = icmp sgt i64 %677, 2
  %742 = add nsw i64 %678, -1
  %743 = add i32 %676, 1
  br i1 %741, label %675, label %744, !llvm.loop !506

744:                                              ; preds = %734, %672
  %745 = phi i32 [ %674, %672 ], [ %740, %734 ]
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %2, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !18
  %749 = getelementptr inbounds i16, ptr %642, i64 %746
  %750 = load i16, ptr %749, align 2, !tbaa !78
  %751 = sext i16 %750 to i32
  %752 = fcmp fast ueq double %748, 0.000000e+00
  br i1 %752, label %757, label %753

753:                                              ; preds = %744
  %754 = load i32, ptr %644, align 4, !tbaa !5
  %755 = icmp sgt i32 %754, %751
  br i1 %755, label %756, label %757

756:                                              ; preds = %753
  store i32 %751, ptr %644, align 4, !tbaa !5
  br label %757

757:                                              ; preds = %753, %756, %744
  %758 = add nuw nsw i32 %673, 1
  br i1 %666, label %759, label %806

759:                                              ; preds = %757
  %760 = load i32, ptr %4, align 4, !tbaa !5
  %761 = load i32, ptr %12, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %760, %762
  br i1 %763, label %783, label %764

764:                                              ; preds = %759
  %765 = icmp eq i32 %760, %762
  br i1 %765, label %766, label %799

766:                                              ; preds = %764
  store i32 0, ptr %4, align 4, !tbaa !5
  %767 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %767, ptr %6, align 4, !tbaa !5
  br i1 %671, label %806, label %768

768:                                              ; preds = %766, %793
  %769 = phi i64 [ %797, %793 ], [ 1, %766 ]
  %770 = getelementptr inbounds i32, ptr %4, i64 %769
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = getelementptr inbounds i32, ptr %12, i64 %769
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = add nsw i32 %773, -1
  %775 = icmp slt i32 %771, %774
  br i1 %775, label %776, label %791

776:                                              ; preds = %768
  br i1 %763, label %783, label %777

777:                                              ; preds = %776
  %778 = getelementptr inbounds i32, ptr %7, i64 %769
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %769
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = add nsw i32 %781, %779
  store i32 %782, ptr %780, align 4, !tbaa !5
  br label %801

783:                                              ; preds = %759, %776
  %784 = phi i32 [ %771, %776 ], [ %760, %759 ]
  %785 = phi ptr [ %770, %776 ], [ %4, %759 ]
  %786 = phi i64 [ %769, %776 ], [ 0, %759 ]
  %787 = add nsw i32 %784, 1
  store i32 %787, ptr %785, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %7, i64 %786
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %6, i64 %786
  br label %801

791:                                              ; preds = %768
  %792 = icmp eq i32 %771, %774
  br i1 %792, label %793, label %799

793:                                              ; preds = %791
  store i32 0, ptr %770, align 4, !tbaa !5
  %794 = getelementptr inbounds i32, ptr %8, i64 %769
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %6, i64 %769
  store i32 %795, ptr %796, align 4, !tbaa !5
  %797 = add nuw nsw i64 %769, 1
  %798 = icmp eq i64 %797, %669
  br i1 %798, label %806, label %768, !llvm.loop !507

799:                                              ; preds = %764, %791
  %800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

801:                                              ; preds = %777, %783
  %802 = phi ptr [ %790, %783 ], [ %770, %777 ]
  %803 = phi i32 [ %789, %783 ], [ 1, %777 ]
  %804 = load i32, ptr %802, align 4, !tbaa !5
  %805 = add nsw i32 %804, %803
  store i32 %805, ptr %802, align 4, !tbaa !5
  br label %806

806:                                              ; preds = %793, %801, %766, %757
  %807 = icmp eq i32 %758, %5
  br i1 %807, label %3064, label %672, !llvm.loop !508

808:                                              ; preds = %655, %945
  %809 = phi i32 [ 0, %655 ], [ %894, %945 ]
  %810 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %656, label %811, label %880

811:                                              ; preds = %808, %870
  %812 = phi i32 [ %879, %870 ], [ 0, %808 ]
  %813 = phi i64 [ %821, %870 ], [ %660, %808 ]
  %814 = phi i64 [ %878, %870 ], [ %659, %808 ]
  %815 = phi i32 [ %876, %870 ], [ %810, %808 ]
  %816 = sub i32 %658, %812
  %817 = tail call i32 @llvm.smin.i32(i32 %816, i32 0)
  %818 = sub i32 %816, %817
  %819 = zext i32 %818 to i64
  %820 = add nuw nsw i64 %819, 1
  %821 = add nsw i64 %813, -1
  %822 = icmp ult i32 %818, 31
  br i1 %822, label %858, label %823

823:                                              ; preds = %811
  %824 = and i64 %820, 8589934560
  %825 = sub i64 %814, %824
  br label %826

826:                                              ; preds = %826, %823
  %827 = phi i64 [ 0, %823 ], [ %850, %826 ]
  %828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %823 ], [ %846, %826 ]
  %829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %823 ], [ %847, %826 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %823 ], [ %848, %826 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %823 ], [ %849, %826 ]
  %832 = sub i64 %814, %827
  %833 = getelementptr inbounds i32, ptr %11, i64 %832
  %834 = getelementptr inbounds i32, ptr %833, i64 -7
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %833, i64 -15
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %833, i64 -23
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !5
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %833, i64 -31
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !5
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = mul <8 x i32> %836, %828
  %847 = mul <8 x i32> %839, %829
  %848 = mul <8 x i32> %842, %830
  %849 = mul <8 x i32> %845, %831
  %850 = add nuw i64 %827, 32
  %851 = icmp eq i64 %850, %824
  br i1 %851, label %852, label %826, !llvm.loop !509

852:                                              ; preds = %826
  %853 = mul <8 x i32> %847, %846
  %854 = mul <8 x i32> %848, %853
  %855 = mul <8 x i32> %849, %854
  %856 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %855)
  %857 = icmp eq i64 %820, %824
  br i1 %857, label %870, label %858

858:                                              ; preds = %811, %852
  %859 = phi i64 [ %814, %811 ], [ %825, %852 ]
  %860 = phi i32 [ 1, %811 ], [ %856, %852 ]
  br label %861

861:                                              ; preds = %858, %861
  %862 = phi i64 [ %867, %861 ], [ %859, %858 ]
  %863 = phi i32 [ %866, %861 ], [ %860, %858 ]
  %864 = getelementptr inbounds i32, ptr %11, i64 %862
  %865 = load i32, ptr %864, align 4, !tbaa !5
  %866 = mul nsw i32 %865, %863
  %867 = add nsw i64 %862, -1
  %868 = trunc i64 %862 to i32
  %869 = icmp sgt i32 %868, 0
  br i1 %869, label %861, label %870, !llvm.loop !510

870:                                              ; preds = %861, %852
  %871 = phi i32 [ %856, %852 ], [ %866, %861 ]
  %872 = and i64 %821, 4294967295
  %873 = getelementptr inbounds i32, ptr %6, i64 %872
  %874 = load i32, ptr %873, align 4, !tbaa !5
  %875 = mul nsw i32 %874, %871
  %876 = add nsw i32 %875, %815
  %877 = icmp sgt i64 %813, 2
  %878 = add nsw i64 %814, -1
  %879 = add i32 %812, 1
  br i1 %877, label %811, label %880, !llvm.loop !511

880:                                              ; preds = %870, %808
  %881 = phi i32 [ %810, %808 ], [ %876, %870 ]
  %882 = icmp slt i32 %881, %5
  br i1 %882, label %885, label %883

883:                                              ; preds = %880
  %884 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

885:                                              ; preds = %880
  %886 = sext i32 %881 to i64
  %887 = getelementptr inbounds i16, ptr %642, i64 %886
  %888 = load i16, ptr %887, align 2, !tbaa !78
  %889 = sext i16 %888 to i32
  %890 = load i32, ptr %644, align 4, !tbaa !5
  %891 = icmp sgt i32 %890, %889
  br i1 %891, label %892, label %893

892:                                              ; preds = %885
  store i32 %889, ptr %644, align 4, !tbaa !5
  br label %893

893:                                              ; preds = %885, %892
  %894 = add nuw nsw i32 %809, 1
  br i1 %657, label %895, label %945

895:                                              ; preds = %893
  %896 = load i32, ptr %4, align 4, !tbaa !5
  %897 = load i32, ptr %12, align 4, !tbaa !5
  %898 = add nsw i32 %897, -1
  %899 = icmp slt i32 %896, %898
  br i1 %899, label %922, label %900

900:                                              ; preds = %895
  %901 = icmp eq i32 %896, %898
  br i1 %901, label %902, label %938

902:                                              ; preds = %900
  store i32 0, ptr %4, align 4, !tbaa !5
  %903 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %903, ptr %6, align 4, !tbaa !5
  br i1 %662, label %945, label %904

904:                                              ; preds = %902, %932
  %905 = phi i64 [ %936, %932 ], [ 1, %902 ]
  %906 = getelementptr inbounds i32, ptr %4, i64 %905
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %12, i64 %905
  %909 = load i32, ptr %908, align 4, !tbaa !5
  %910 = add nsw i32 %909, -1
  %911 = icmp slt i32 %907, %910
  br i1 %911, label %912, label %930

912:                                              ; preds = %904
  br i1 %899, label %922, label %913

913:                                              ; preds = %912
  %914 = shl i64 %905, 32
  %915 = add i64 %914, -4294967296
  %916 = ashr exact i64 %915, 32
  %917 = getelementptr inbounds i32, ptr %7, i64 %916
  %918 = load i32, ptr %917, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %6, i64 %905
  %920 = load i32, ptr %919, align 4, !tbaa !5
  %921 = add nsw i32 %920, %918
  store i32 %921, ptr %919, align 4, !tbaa !5
  br label %940

922:                                              ; preds = %895, %912
  %923 = phi i32 [ %907, %912 ], [ %896, %895 ]
  %924 = phi ptr [ %906, %912 ], [ %4, %895 ]
  %925 = phi i64 [ %905, %912 ], [ 0, %895 ]
  %926 = add nsw i32 %923, 1
  store i32 %926, ptr %924, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %7, i64 %925
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %6, i64 %925
  br label %940

930:                                              ; preds = %904
  %931 = icmp eq i32 %907, %910
  br i1 %931, label %932, label %938

932:                                              ; preds = %930
  store i32 0, ptr %906, align 4, !tbaa !5
  %933 = getelementptr inbounds i32, ptr %8, i64 %905
  %934 = load i32, ptr %933, align 4, !tbaa !5
  %935 = getelementptr inbounds i32, ptr %6, i64 %905
  store i32 %934, ptr %935, align 4, !tbaa !5
  %936 = add nuw nsw i64 %905, 1
  %937 = icmp eq i64 %936, %660
  br i1 %937, label %945, label %904, !llvm.loop !512

938:                                              ; preds = %900, %930
  %939 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

940:                                              ; preds = %913, %922
  %941 = phi ptr [ %929, %922 ], [ %906, %913 ]
  %942 = phi i32 [ %928, %922 ], [ 1, %913 ]
  %943 = load i32, ptr %941, align 4, !tbaa !5
  %944 = add nsw i32 %943, %942
  store i32 %944, ptr %941, align 4, !tbaa !5
  br label %945

945:                                              ; preds = %932, %940, %902, %893
  %946 = icmp eq i32 %894, %5
  br i1 %946, label %3064, label %808, !llvm.loop !513

947:                                              ; preds = %648
  %948 = getelementptr inbounds i32, ptr %3, i64 %19
  %949 = load i32, ptr %948, align 4, !tbaa !5
  %950 = icmp eq i32 %949, 0
  %951 = icmp sgt i32 %5, 0
  br i1 %950, label %961, label %952

952:                                              ; preds = %947
  br i1 %951, label %953, label %3064

953:                                              ; preds = %952
  %954 = icmp sgt i32 %13, 1
  %955 = icmp sgt i32 %13, 0
  %956 = add i32 %13, -2
  %957 = zext i32 %956 to i64
  %958 = zext i32 %13 to i64
  %959 = add nuw i32 %5, 1
  %960 = icmp eq i32 %13, 1
  br label %1102

961:                                              ; preds = %947
  br i1 %951, label %962, label %3064

962:                                              ; preds = %961
  %963 = icmp sgt i32 %13, 1
  %964 = icmp sgt i32 %13, 0
  %965 = add i32 %13, -2
  %966 = zext i32 %965 to i64
  %967 = zext i32 %13 to i64
  %968 = add nuw i32 %5, 1
  %969 = icmp eq i32 %13, 1
  br label %970

970:                                              ; preds = %962, %1100
  %971 = phi i32 [ 0, %962 ], [ %1052, %1100 ]
  %972 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %963, label %973, label %1042

973:                                              ; preds = %970, %1032
  %974 = phi i32 [ %1041, %1032 ], [ 0, %970 ]
  %975 = phi i64 [ %983, %1032 ], [ %967, %970 ]
  %976 = phi i64 [ %1040, %1032 ], [ %966, %970 ]
  %977 = phi i32 [ %1038, %1032 ], [ %972, %970 ]
  %978 = sub i32 %965, %974
  %979 = tail call i32 @llvm.smin.i32(i32 %978, i32 0)
  %980 = sub i32 %978, %979
  %981 = zext i32 %980 to i64
  %982 = add nuw nsw i64 %981, 1
  %983 = add nsw i64 %975, -1
  %984 = icmp ult i32 %980, 31
  br i1 %984, label %1020, label %985

985:                                              ; preds = %973
  %986 = and i64 %982, 8589934560
  %987 = sub i64 %976, %986
  br label %988

988:                                              ; preds = %988, %985
  %989 = phi i64 [ 0, %985 ], [ %1012, %988 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %985 ], [ %1008, %988 ]
  %991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %985 ], [ %1009, %988 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %985 ], [ %1010, %988 ]
  %993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %985 ], [ %1011, %988 ]
  %994 = sub i64 %976, %989
  %995 = getelementptr inbounds i32, ptr %9, i64 %994
  %996 = getelementptr inbounds i32, ptr %995, i64 -7
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %995, i64 -15
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %995, i64 -23
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = getelementptr inbounds i32, ptr %995, i64 -31
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !5
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = mul <8 x i32> %998, %990
  %1009 = mul <8 x i32> %1001, %991
  %1010 = mul <8 x i32> %1004, %992
  %1011 = mul <8 x i32> %1007, %993
  %1012 = add nuw i64 %989, 32
  %1013 = icmp eq i64 %1012, %986
  br i1 %1013, label %1014, label %988, !llvm.loop !514

1014:                                             ; preds = %988
  %1015 = mul <8 x i32> %1009, %1008
  %1016 = mul <8 x i32> %1010, %1015
  %1017 = mul <8 x i32> %1011, %1016
  %1018 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1017)
  %1019 = icmp eq i64 %982, %986
  br i1 %1019, label %1032, label %1020

1020:                                             ; preds = %973, %1014
  %1021 = phi i64 [ %976, %973 ], [ %987, %1014 ]
  %1022 = phi i32 [ 1, %973 ], [ %1018, %1014 ]
  br label %1023

1023:                                             ; preds = %1020, %1023
  %1024 = phi i64 [ %1029, %1023 ], [ %1021, %1020 ]
  %1025 = phi i32 [ %1028, %1023 ], [ %1022, %1020 ]
  %1026 = getelementptr inbounds i32, ptr %9, i64 %1024
  %1027 = load i32, ptr %1026, align 4, !tbaa !5
  %1028 = mul nsw i32 %1027, %1025
  %1029 = add nsw i64 %1024, -1
  %1030 = trunc i64 %1024 to i32
  %1031 = icmp sgt i32 %1030, 0
  br i1 %1031, label %1023, label %1032, !llvm.loop !515

1032:                                             ; preds = %1023, %1014
  %1033 = phi i32 [ %1018, %1014 ], [ %1028, %1023 ]
  %1034 = and i64 %983, 4294967295
  %1035 = getelementptr inbounds i32, ptr %6, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = mul nsw i32 %1036, %1033
  %1038 = add nsw i32 %1037, %977
  %1039 = icmp sgt i64 %975, 2
  %1040 = add nsw i64 %976, -1
  %1041 = add i32 %974, 1
  br i1 %1039, label %973, label %1042, !llvm.loop !516

1042:                                             ; preds = %1032, %970
  %1043 = phi i32 [ %972, %970 ], [ %1038, %1032 ]
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds i16, ptr %642, i64 %1044
  %1046 = load i16, ptr %1045, align 2, !tbaa !78
  %1047 = sext i16 %1046 to i32
  %1048 = load i32, ptr %644, align 4, !tbaa !5
  %1049 = icmp sgt i32 %1048, %1047
  br i1 %1049, label %1050, label %1051

1050:                                             ; preds = %1042
  store i32 %1047, ptr %644, align 4, !tbaa !5
  br label %1051

1051:                                             ; preds = %1050, %1042
  %1052 = add nuw nsw i32 %971, 1
  br i1 %964, label %1053, label %1100

1053:                                             ; preds = %1051
  %1054 = load i32, ptr %4, align 4, !tbaa !5
  %1055 = load i32, ptr %12, align 4, !tbaa !5
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1054, %1056
  br i1 %1057, label %1077, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp eq i32 %1054, %1056
  br i1 %1059, label %1060, label %1093

1060:                                             ; preds = %1058
  store i32 0, ptr %4, align 4, !tbaa !5
  %1061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1061, ptr %6, align 4, !tbaa !5
  br i1 %969, label %1100, label %1062

1062:                                             ; preds = %1060, %1087
  %1063 = phi i64 [ %1091, %1087 ], [ 1, %1060 ]
  %1064 = getelementptr inbounds i32, ptr %4, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %12, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1065, %1068
  br i1 %1069, label %1070, label %1085

1070:                                             ; preds = %1062
  br i1 %1057, label %1077, label %1071

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1063
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1063
  %1075 = load i32, ptr %1074, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1073
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  br label %1095

1077:                                             ; preds = %1053, %1070
  %1078 = phi i32 [ %1065, %1070 ], [ %1054, %1053 ]
  %1079 = phi ptr [ %1064, %1070 ], [ %4, %1053 ]
  %1080 = phi i64 [ %1063, %1070 ], [ 0, %1053 ]
  %1081 = add nsw i32 %1078, 1
  store i32 %1081, ptr %1079, align 4, !tbaa !5
  %1082 = getelementptr inbounds i32, ptr %7, i64 %1080
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1080
  br label %1095

1085:                                             ; preds = %1062
  %1086 = icmp eq i32 %1065, %1068
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1085
  store i32 0, ptr %1064, align 4, !tbaa !5
  %1088 = getelementptr inbounds i32, ptr %8, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !5
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1063
  store i32 %1089, ptr %1090, align 4, !tbaa !5
  %1091 = add nuw nsw i64 %1063, 1
  %1092 = icmp eq i64 %1091, %967
  br i1 %1092, label %1100, label %1062, !llvm.loop !517

1093:                                             ; preds = %1058, %1085
  %1094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1095:                                             ; preds = %1071, %1077
  %1096 = phi ptr [ %1084, %1077 ], [ %1064, %1071 ]
  %1097 = phi i32 [ %1083, %1077 ], [ 1, %1071 ]
  %1098 = load i32, ptr %1096, align 4, !tbaa !5
  %1099 = add nsw i32 %1098, %1097
  store i32 %1099, ptr %1096, align 4, !tbaa !5
  br label %1100

1100:                                             ; preds = %1087, %1095, %1060, %1051
  %1101 = icmp eq i32 %1052, %5
  br i1 %1101, label %3064, label %970, !llvm.loop !518

1102:                                             ; preds = %953, %1239
  %1103 = phi i32 [ 0, %953 ], [ %1188, %1239 ]
  %1104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1105, label %1174

1105:                                             ; preds = %1102, %1164
  %1106 = phi i32 [ %1173, %1164 ], [ 0, %1102 ]
  %1107 = phi i64 [ %1115, %1164 ], [ %958, %1102 ]
  %1108 = phi i64 [ %1172, %1164 ], [ %957, %1102 ]
  %1109 = phi i32 [ %1170, %1164 ], [ %1104, %1102 ]
  %1110 = sub i32 %956, %1106
  %1111 = tail call i32 @llvm.smin.i32(i32 %1110, i32 0)
  %1112 = sub i32 %1110, %1111
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1113, 1
  %1115 = add nsw i64 %1107, -1
  %1116 = icmp ult i32 %1112, 31
  br i1 %1116, label %1152, label %1117

1117:                                             ; preds = %1105
  %1118 = and i64 %1114, 8589934560
  %1119 = sub i64 %1108, %1118
  br label %1120

1120:                                             ; preds = %1120, %1117
  %1121 = phi i64 [ 0, %1117 ], [ %1144, %1120 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1140, %1120 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1141, %1120 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1142, %1120 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1143, %1120 ]
  %1126 = sub i64 %1108, %1121
  %1127 = getelementptr inbounds i32, ptr %11, i64 %1126
  %1128 = getelementptr inbounds i32, ptr %1127, i64 -7
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1127, i64 -15
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1127, i64 -23
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1127, i64 -31
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = mul <8 x i32> %1130, %1122
  %1141 = mul <8 x i32> %1133, %1123
  %1142 = mul <8 x i32> %1136, %1124
  %1143 = mul <8 x i32> %1139, %1125
  %1144 = add nuw i64 %1121, 32
  %1145 = icmp eq i64 %1144, %1118
  br i1 %1145, label %1146, label %1120, !llvm.loop !519

1146:                                             ; preds = %1120
  %1147 = mul <8 x i32> %1141, %1140
  %1148 = mul <8 x i32> %1142, %1147
  %1149 = mul <8 x i32> %1143, %1148
  %1150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1149)
  %1151 = icmp eq i64 %1114, %1118
  br i1 %1151, label %1164, label %1152

1152:                                             ; preds = %1105, %1146
  %1153 = phi i64 [ %1108, %1105 ], [ %1119, %1146 ]
  %1154 = phi i32 [ 1, %1105 ], [ %1150, %1146 ]
  br label %1155

1155:                                             ; preds = %1152, %1155
  %1156 = phi i64 [ %1161, %1155 ], [ %1153, %1152 ]
  %1157 = phi i32 [ %1160, %1155 ], [ %1154, %1152 ]
  %1158 = getelementptr inbounds i32, ptr %11, i64 %1156
  %1159 = load i32, ptr %1158, align 4, !tbaa !5
  %1160 = mul nsw i32 %1159, %1157
  %1161 = add nsw i64 %1156, -1
  %1162 = trunc i64 %1156 to i32
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1155, label %1164, !llvm.loop !520

1164:                                             ; preds = %1155, %1146
  %1165 = phi i32 [ %1150, %1146 ], [ %1160, %1155 ]
  %1166 = and i64 %1115, 4294967295
  %1167 = getelementptr inbounds i32, ptr %6, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1165
  %1170 = add nsw i32 %1169, %1109
  %1171 = icmp sgt i64 %1107, 2
  %1172 = add nsw i64 %1108, -1
  %1173 = add i32 %1106, 1
  br i1 %1171, label %1105, label %1174, !llvm.loop !521

1174:                                             ; preds = %1164, %1102
  %1175 = phi i32 [ %1104, %1102 ], [ %1170, %1164 ]
  %1176 = icmp slt i32 %1175, %5
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1174
  %1178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

1179:                                             ; preds = %1174
  %1180 = sext i32 %1175 to i64
  %1181 = getelementptr inbounds i16, ptr %642, i64 %1180
  %1182 = load i16, ptr %1181, align 2, !tbaa !78
  %1183 = sext i16 %1182 to i32
  %1184 = load i32, ptr %644, align 4, !tbaa !5
  %1185 = icmp sgt i32 %1184, %1183
  br i1 %1185, label %1186, label %1187

1186:                                             ; preds = %1179
  store i32 %1183, ptr %644, align 4, !tbaa !5
  br label %1187

1187:                                             ; preds = %1186, %1179
  %1188 = add nuw nsw i32 %1103, 1
  br i1 %955, label %1189, label %1239

1189:                                             ; preds = %1187
  %1190 = load i32, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %12, align 4, !tbaa !5
  %1192 = add nsw i32 %1191, -1
  %1193 = icmp slt i32 %1190, %1192
  br i1 %1193, label %1216, label %1194

1194:                                             ; preds = %1189
  %1195 = icmp eq i32 %1190, %1192
  br i1 %1195, label %1196, label %1232

1196:                                             ; preds = %1194
  store i32 0, ptr %4, align 4, !tbaa !5
  %1197 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1197, ptr %6, align 4, !tbaa !5
  br i1 %960, label %1239, label %1198

1198:                                             ; preds = %1196, %1226
  %1199 = phi i64 [ %1230, %1226 ], [ 1, %1196 ]
  %1200 = getelementptr inbounds i32, ptr %4, i64 %1199
  %1201 = load i32, ptr %1200, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %12, i64 %1199
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = add nsw i32 %1203, -1
  %1205 = icmp slt i32 %1201, %1204
  br i1 %1205, label %1206, label %1224

1206:                                             ; preds = %1198
  br i1 %1193, label %1216, label %1207

1207:                                             ; preds = %1206
  %1208 = shl i64 %1199, 32
  %1209 = add i64 %1208, -4294967296
  %1210 = ashr exact i64 %1209, 32
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1210
  %1212 = load i32, ptr %1211, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1199
  %1214 = load i32, ptr %1213, align 4, !tbaa !5
  %1215 = add nsw i32 %1214, %1212
  store i32 %1215, ptr %1213, align 4, !tbaa !5
  br label %1234

1216:                                             ; preds = %1189, %1206
  %1217 = phi i32 [ %1201, %1206 ], [ %1190, %1189 ]
  %1218 = phi ptr [ %1200, %1206 ], [ %4, %1189 ]
  %1219 = phi i64 [ %1199, %1206 ], [ 0, %1189 ]
  %1220 = add nsw i32 %1217, 1
  store i32 %1220, ptr %1218, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %7, i64 %1219
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1219
  br label %1234

1224:                                             ; preds = %1198
  %1225 = icmp eq i32 %1201, %1204
  br i1 %1225, label %1226, label %1232

1226:                                             ; preds = %1224
  store i32 0, ptr %1200, align 4, !tbaa !5
  %1227 = getelementptr inbounds i32, ptr %8, i64 %1199
  %1228 = load i32, ptr %1227, align 4, !tbaa !5
  %1229 = getelementptr inbounds i32, ptr %6, i64 %1199
  store i32 %1228, ptr %1229, align 4, !tbaa !5
  %1230 = add nuw nsw i64 %1199, 1
  %1231 = icmp eq i64 %1230, %958
  br i1 %1231, label %1239, label %1198, !llvm.loop !522

1232:                                             ; preds = %1194, %1224
  %1233 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1234:                                             ; preds = %1207, %1216
  %1235 = phi ptr [ %1223, %1216 ], [ %1200, %1207 ]
  %1236 = phi i32 [ %1222, %1216 ], [ 1, %1207 ]
  %1237 = load i32, ptr %1235, align 4, !tbaa !5
  %1238 = add nsw i32 %1237, %1236
  store i32 %1238, ptr %1235, align 4, !tbaa !5
  br label %1239

1239:                                             ; preds = %1226, %1234, %1196, %1187
  %1240 = icmp eq i32 %1188, %5
  br i1 %1240, label %3064, label %1102, !llvm.loop !523

1241:                                             ; preds = %648
  %1242 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 770, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3064

1243:                                             ; preds = %18
  %1244 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !9
  %1246 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1247 = load ptr, ptr %1246, align 8, !tbaa !9
  %1248 = load i16, ptr %1245, align 2, !tbaa !78
  %1249 = sitofp i16 %1248 to double
  store double %1249, ptr %1247, align 8, !tbaa !18
  %1250 = icmp eq i32 %13, 0
  br i1 %1250, label %3064, label %1251

1251:                                             ; preds = %1243
  switch i32 %1, label %1848 [
    i32 1, label %1252
    i32 0, label %1552
  ]

1252:                                             ; preds = %1251
  %1253 = getelementptr inbounds i32, ptr %3, i64 %19
  %1254 = load i32, ptr %1253, align 4, !tbaa !5
  %1255 = icmp eq i32 %1254, 0
  %1256 = icmp sgt i32 %5, 0
  br i1 %1255, label %1266, label %1257

1257:                                             ; preds = %1252
  br i1 %1256, label %1258, label %3064

1258:                                             ; preds = %1257
  %1259 = icmp sgt i32 %13, 1
  %1260 = icmp sgt i32 %13, 0
  %1261 = add i32 %13, -2
  %1262 = zext i32 %1261 to i64
  %1263 = zext i32 %13 to i64
  %1264 = add nuw i32 %5, 1
  %1265 = icmp eq i32 %13, 1
  br label %1412

1266:                                             ; preds = %1252
  br i1 %1256, label %1267, label %3064

1267:                                             ; preds = %1266
  %1268 = icmp sgt i32 %13, 1
  %1269 = icmp sgt i32 %13, 0
  %1270 = add i32 %13, -2
  %1271 = zext i32 %1270 to i64
  %1272 = zext i32 %13 to i64
  %1273 = add nuw i32 %5, 1
  %1274 = icmp eq i32 %13, 1
  br label %1275

1275:                                             ; preds = %1267, %1410
  %1276 = phi double [ %1249, %1267 ], [ %1361, %1410 ]
  %1277 = phi i32 [ 0, %1267 ], [ %1362, %1410 ]
  %1278 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1279, label %1348

1279:                                             ; preds = %1275, %1338
  %1280 = phi i32 [ %1347, %1338 ], [ 0, %1275 ]
  %1281 = phi i64 [ %1289, %1338 ], [ %1272, %1275 ]
  %1282 = phi i64 [ %1346, %1338 ], [ %1271, %1275 ]
  %1283 = phi i32 [ %1344, %1338 ], [ %1278, %1275 ]
  %1284 = sub i32 %1270, %1280
  %1285 = tail call i32 @llvm.smin.i32(i32 %1284, i32 0)
  %1286 = sub i32 %1284, %1285
  %1287 = zext i32 %1286 to i64
  %1288 = add nuw nsw i64 %1287, 1
  %1289 = add nsw i64 %1281, -1
  %1290 = icmp ult i32 %1286, 31
  br i1 %1290, label %1326, label %1291

1291:                                             ; preds = %1279
  %1292 = and i64 %1288, 8589934560
  %1293 = sub i64 %1282, %1292
  br label %1294

1294:                                             ; preds = %1294, %1291
  %1295 = phi i64 [ 0, %1291 ], [ %1318, %1294 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1314, %1294 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1315, %1294 ]
  %1298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1316, %1294 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1317, %1294 ]
  %1300 = sub i64 %1282, %1295
  %1301 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1302 = getelementptr inbounds i32, ptr %1301, i64 -7
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1301, i64 -15
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1301, i64 -23
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !5
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1301, i64 -31
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !5
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = mul <8 x i32> %1304, %1296
  %1315 = mul <8 x i32> %1307, %1297
  %1316 = mul <8 x i32> %1310, %1298
  %1317 = mul <8 x i32> %1313, %1299
  %1318 = add nuw i64 %1295, 32
  %1319 = icmp eq i64 %1318, %1292
  br i1 %1319, label %1320, label %1294, !llvm.loop !524

1320:                                             ; preds = %1294
  %1321 = mul <8 x i32> %1315, %1314
  %1322 = mul <8 x i32> %1316, %1321
  %1323 = mul <8 x i32> %1317, %1322
  %1324 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1323)
  %1325 = icmp eq i64 %1288, %1292
  br i1 %1325, label %1338, label %1326

1326:                                             ; preds = %1279, %1320
  %1327 = phi i64 [ %1282, %1279 ], [ %1293, %1320 ]
  %1328 = phi i32 [ 1, %1279 ], [ %1324, %1320 ]
  br label %1329

1329:                                             ; preds = %1326, %1329
  %1330 = phi i64 [ %1335, %1329 ], [ %1327, %1326 ]
  %1331 = phi i32 [ %1334, %1329 ], [ %1328, %1326 ]
  %1332 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1333 = load i32, ptr %1332, align 4, !tbaa !5
  %1334 = mul nsw i32 %1333, %1331
  %1335 = add nsw i64 %1330, -1
  %1336 = trunc i64 %1330 to i32
  %1337 = icmp sgt i32 %1336, 0
  br i1 %1337, label %1329, label %1338, !llvm.loop !525

1338:                                             ; preds = %1329, %1320
  %1339 = phi i32 [ %1324, %1320 ], [ %1334, %1329 ]
  %1340 = and i64 %1289, 4294967295
  %1341 = getelementptr inbounds i32, ptr %6, i64 %1340
  %1342 = load i32, ptr %1341, align 4, !tbaa !5
  %1343 = mul nsw i32 %1342, %1339
  %1344 = add nsw i32 %1343, %1283
  %1345 = icmp sgt i64 %1281, 2
  %1346 = add nsw i64 %1282, -1
  %1347 = add i32 %1280, 1
  br i1 %1345, label %1279, label %1348, !llvm.loop !526

1348:                                             ; preds = %1338, %1275
  %1349 = phi i32 [ %1278, %1275 ], [ %1344, %1338 ]
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds double, ptr %2, i64 %1350
  %1352 = load double, ptr %1351, align 8, !tbaa !18
  %1353 = getelementptr inbounds i16, ptr %1245, i64 %1350
  %1354 = load i16, ptr %1353, align 2, !tbaa !78
  %1355 = sitofp i16 %1354 to double
  %1356 = fcmp fast one double %1352, 0.000000e+00
  %1357 = fcmp fast ogt double %1276, %1355
  %1358 = select i1 %1356, i1 %1357, i1 false
  br i1 %1358, label %1359, label %1360

1359:                                             ; preds = %1348
  store double %1355, ptr %1247, align 8, !tbaa !18
  br label %1360

1360:                                             ; preds = %1359, %1348
  %1361 = phi double [ %1355, %1359 ], [ %1276, %1348 ]
  %1362 = add nuw nsw i32 %1277, 1
  br i1 %1269, label %1363, label %1410

1363:                                             ; preds = %1360
  %1364 = load i32, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %12, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !5
  %1371 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1371, ptr %6, align 4, !tbaa !5
  br i1 %1274, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !5
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1272
  br i1 %1402, label %1410, label %1372, !llvm.loop !527

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !5
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !5
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1360
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %3064, label %1275, !llvm.loop !528

1412:                                             ; preds = %1258, %1550
  %1413 = phi double [ %1249, %1258 ], [ %1498, %1550 ]
  %1414 = phi i32 [ 0, %1258 ], [ %1499, %1550 ]
  %1415 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1259, label %1416, label %1485

1416:                                             ; preds = %1412, %1475
  %1417 = phi i32 [ %1484, %1475 ], [ 0, %1412 ]
  %1418 = phi i64 [ %1426, %1475 ], [ %1263, %1412 ]
  %1419 = phi i64 [ %1483, %1475 ], [ %1262, %1412 ]
  %1420 = phi i32 [ %1481, %1475 ], [ %1415, %1412 ]
  %1421 = sub i32 %1261, %1417
  %1422 = tail call i32 @llvm.smin.i32(i32 %1421, i32 0)
  %1423 = sub i32 %1421, %1422
  %1424 = zext i32 %1423 to i64
  %1425 = add nuw nsw i64 %1424, 1
  %1426 = add nsw i64 %1418, -1
  %1427 = icmp ult i32 %1423, 31
  br i1 %1427, label %1463, label %1428

1428:                                             ; preds = %1416
  %1429 = and i64 %1425, 8589934560
  %1430 = sub i64 %1419, %1429
  br label %1431

1431:                                             ; preds = %1431, %1428
  %1432 = phi i64 [ 0, %1428 ], [ %1455, %1431 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1451, %1431 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1452, %1431 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1453, %1431 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1428 ], [ %1454, %1431 ]
  %1437 = sub i64 %1419, %1432
  %1438 = getelementptr inbounds i32, ptr %11, i64 %1437
  %1439 = getelementptr inbounds i32, ptr %1438, i64 -7
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1438, i64 -15
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1438, i64 -23
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1438, i64 -31
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !5
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = mul <8 x i32> %1441, %1433
  %1452 = mul <8 x i32> %1444, %1434
  %1453 = mul <8 x i32> %1447, %1435
  %1454 = mul <8 x i32> %1450, %1436
  %1455 = add nuw i64 %1432, 32
  %1456 = icmp eq i64 %1455, %1429
  br i1 %1456, label %1457, label %1431, !llvm.loop !529

1457:                                             ; preds = %1431
  %1458 = mul <8 x i32> %1452, %1451
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = mul <8 x i32> %1454, %1459
  %1461 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1460)
  %1462 = icmp eq i64 %1425, %1429
  br i1 %1462, label %1475, label %1463

1463:                                             ; preds = %1416, %1457
  %1464 = phi i64 [ %1419, %1416 ], [ %1430, %1457 ]
  %1465 = phi i32 [ 1, %1416 ], [ %1461, %1457 ]
  br label %1466

1466:                                             ; preds = %1463, %1466
  %1467 = phi i64 [ %1472, %1466 ], [ %1464, %1463 ]
  %1468 = phi i32 [ %1471, %1466 ], [ %1465, %1463 ]
  %1469 = getelementptr inbounds i32, ptr %11, i64 %1467
  %1470 = load i32, ptr %1469, align 4, !tbaa !5
  %1471 = mul nsw i32 %1470, %1468
  %1472 = add nsw i64 %1467, -1
  %1473 = trunc i64 %1467 to i32
  %1474 = icmp sgt i32 %1473, 0
  br i1 %1474, label %1466, label %1475, !llvm.loop !530

1475:                                             ; preds = %1466, %1457
  %1476 = phi i32 [ %1461, %1457 ], [ %1471, %1466 ]
  %1477 = and i64 %1426, 4294967295
  %1478 = getelementptr inbounds i32, ptr %6, i64 %1477
  %1479 = load i32, ptr %1478, align 4, !tbaa !5
  %1480 = mul nsw i32 %1479, %1476
  %1481 = add nsw i32 %1480, %1420
  %1482 = icmp sgt i64 %1418, 2
  %1483 = add nsw i64 %1419, -1
  %1484 = add i32 %1417, 1
  br i1 %1482, label %1416, label %1485, !llvm.loop !531

1485:                                             ; preds = %1475, %1412
  %1486 = phi i32 [ %1415, %1412 ], [ %1481, %1475 ]
  %1487 = icmp slt i32 %1486, %5
  br i1 %1487, label %1490, label %1488

1488:                                             ; preds = %1485
  %1489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

1490:                                             ; preds = %1485
  %1491 = sext i32 %1486 to i64
  %1492 = getelementptr inbounds i16, ptr %1245, i64 %1491
  %1493 = load i16, ptr %1492, align 2, !tbaa !78
  %1494 = sitofp i16 %1493 to double
  %1495 = fcmp fast ogt double %1413, %1494
  br i1 %1495, label %1496, label %1497

1496:                                             ; preds = %1490
  store double %1494, ptr %1247, align 8, !tbaa !18
  br label %1497

1497:                                             ; preds = %1490, %1496
  %1498 = phi double [ %1413, %1490 ], [ %1494, %1496 ]
  %1499 = add nuw nsw i32 %1414, 1
  br i1 %1260, label %1500, label %1550

1500:                                             ; preds = %1497
  %1501 = load i32, ptr %4, align 4, !tbaa !5
  %1502 = load i32, ptr %12, align 4, !tbaa !5
  %1503 = add nsw i32 %1502, -1
  %1504 = icmp slt i32 %1501, %1503
  br i1 %1504, label %1527, label %1505

1505:                                             ; preds = %1500
  %1506 = icmp eq i32 %1501, %1503
  br i1 %1506, label %1507, label %1543

1507:                                             ; preds = %1505
  store i32 0, ptr %4, align 4, !tbaa !5
  %1508 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1508, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1550, label %1509

1509:                                             ; preds = %1507, %1537
  %1510 = phi i64 [ %1541, %1537 ], [ 1, %1507 ]
  %1511 = getelementptr inbounds i32, ptr %4, i64 %1510
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = getelementptr inbounds i32, ptr %12, i64 %1510
  %1514 = load i32, ptr %1513, align 4, !tbaa !5
  %1515 = add nsw i32 %1514, -1
  %1516 = icmp slt i32 %1512, %1515
  br i1 %1516, label %1517, label %1535

1517:                                             ; preds = %1509
  br i1 %1504, label %1527, label %1518

1518:                                             ; preds = %1517
  %1519 = shl i64 %1510, 32
  %1520 = add i64 %1519, -4294967296
  %1521 = ashr exact i64 %1520, 32
  %1522 = getelementptr inbounds i32, ptr %7, i64 %1521
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = getelementptr inbounds i32, ptr %6, i64 %1510
  %1525 = load i32, ptr %1524, align 4, !tbaa !5
  %1526 = add nsw i32 %1525, %1523
  store i32 %1526, ptr %1524, align 4, !tbaa !5
  br label %1545

1527:                                             ; preds = %1500, %1517
  %1528 = phi i32 [ %1512, %1517 ], [ %1501, %1500 ]
  %1529 = phi ptr [ %1511, %1517 ], [ %4, %1500 ]
  %1530 = phi i64 [ %1510, %1517 ], [ 0, %1500 ]
  %1531 = add nsw i32 %1528, 1
  store i32 %1531, ptr %1529, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %7, i64 %1530
  %1533 = load i32, ptr %1532, align 4, !tbaa !5
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1530
  br label %1545

1535:                                             ; preds = %1509
  %1536 = icmp eq i32 %1512, %1515
  br i1 %1536, label %1537, label %1543

1537:                                             ; preds = %1535
  store i32 0, ptr %1511, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %8, i64 %1510
  %1539 = load i32, ptr %1538, align 4, !tbaa !5
  %1540 = getelementptr inbounds i32, ptr %6, i64 %1510
  store i32 %1539, ptr %1540, align 4, !tbaa !5
  %1541 = add nuw nsw i64 %1510, 1
  %1542 = icmp eq i64 %1541, %1263
  br i1 %1542, label %1550, label %1509, !llvm.loop !532

1543:                                             ; preds = %1505, %1535
  %1544 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1545:                                             ; preds = %1518, %1527
  %1546 = phi ptr [ %1534, %1527 ], [ %1511, %1518 ]
  %1547 = phi i32 [ %1533, %1527 ], [ 1, %1518 ]
  %1548 = load i32, ptr %1546, align 4, !tbaa !5
  %1549 = add nsw i32 %1548, %1547
  store i32 %1549, ptr %1546, align 4, !tbaa !5
  br label %1550

1550:                                             ; preds = %1537, %1545, %1507, %1497
  %1551 = icmp eq i32 %1499, %5
  br i1 %1551, label %3064, label %1412, !llvm.loop !533

1552:                                             ; preds = %1251
  %1553 = getelementptr inbounds i32, ptr %3, i64 %19
  %1554 = load i32, ptr %1553, align 4, !tbaa !5
  %1555 = icmp eq i32 %1554, 0
  %1556 = icmp sgt i32 %5, 0
  br i1 %1555, label %1566, label %1557

1557:                                             ; preds = %1552
  br i1 %1556, label %1558, label %3064

1558:                                             ; preds = %1557
  %1559 = icmp sgt i32 %13, 1
  %1560 = icmp sgt i32 %13, 0
  %1561 = add i32 %13, -2
  %1562 = zext i32 %1561 to i64
  %1563 = zext i32 %13 to i64
  %1564 = add nuw i32 %5, 1
  %1565 = icmp eq i32 %13, 1
  br label %1708

1566:                                             ; preds = %1552
  br i1 %1556, label %1567, label %3064

1567:                                             ; preds = %1566
  %1568 = icmp sgt i32 %13, 1
  %1569 = icmp sgt i32 %13, 0
  %1570 = add i32 %13, -2
  %1571 = zext i32 %1570 to i64
  %1572 = zext i32 %13 to i64
  %1573 = add nuw i32 %5, 1
  %1574 = icmp eq i32 %13, 1
  br label %1575

1575:                                             ; preds = %1567, %1706
  %1576 = phi double [ %1249, %1567 ], [ %1657, %1706 ]
  %1577 = phi i32 [ 0, %1567 ], [ %1658, %1706 ]
  %1578 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1568, label %1579, label %1648

1579:                                             ; preds = %1575, %1638
  %1580 = phi i32 [ %1647, %1638 ], [ 0, %1575 ]
  %1581 = phi i64 [ %1589, %1638 ], [ %1572, %1575 ]
  %1582 = phi i64 [ %1646, %1638 ], [ %1571, %1575 ]
  %1583 = phi i32 [ %1644, %1638 ], [ %1578, %1575 ]
  %1584 = sub i32 %1570, %1580
  %1585 = tail call i32 @llvm.smin.i32(i32 %1584, i32 0)
  %1586 = sub i32 %1584, %1585
  %1587 = zext i32 %1586 to i64
  %1588 = add nuw nsw i64 %1587, 1
  %1589 = add nsw i64 %1581, -1
  %1590 = icmp ult i32 %1586, 31
  br i1 %1590, label %1626, label %1591

1591:                                             ; preds = %1579
  %1592 = and i64 %1588, 8589934560
  %1593 = sub i64 %1582, %1592
  br label %1594

1594:                                             ; preds = %1594, %1591
  %1595 = phi i64 [ 0, %1591 ], [ %1618, %1594 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1591 ], [ %1614, %1594 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1591 ], [ %1615, %1594 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1591 ], [ %1616, %1594 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1591 ], [ %1617, %1594 ]
  %1600 = sub i64 %1582, %1595
  %1601 = getelementptr inbounds i32, ptr %9, i64 %1600
  %1602 = getelementptr inbounds i32, ptr %1601, i64 -7
  %1603 = load <8 x i32>, ptr %1602, align 4, !tbaa !5
  %1604 = shufflevector <8 x i32> %1603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1605 = getelementptr inbounds i32, ptr %1601, i64 -15
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !5
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = getelementptr inbounds i32, ptr %1601, i64 -23
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !5
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1601, i64 -31
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !5
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = mul <8 x i32> %1604, %1596
  %1615 = mul <8 x i32> %1607, %1597
  %1616 = mul <8 x i32> %1610, %1598
  %1617 = mul <8 x i32> %1613, %1599
  %1618 = add nuw i64 %1595, 32
  %1619 = icmp eq i64 %1618, %1592
  br i1 %1619, label %1620, label %1594, !llvm.loop !534

1620:                                             ; preds = %1594
  %1621 = mul <8 x i32> %1615, %1614
  %1622 = mul <8 x i32> %1616, %1621
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1623)
  %1625 = icmp eq i64 %1588, %1592
  br i1 %1625, label %1638, label %1626

1626:                                             ; preds = %1579, %1620
  %1627 = phi i64 [ %1582, %1579 ], [ %1593, %1620 ]
  %1628 = phi i32 [ 1, %1579 ], [ %1624, %1620 ]
  br label %1629

1629:                                             ; preds = %1626, %1629
  %1630 = phi i64 [ %1635, %1629 ], [ %1627, %1626 ]
  %1631 = phi i32 [ %1634, %1629 ], [ %1628, %1626 ]
  %1632 = getelementptr inbounds i32, ptr %9, i64 %1630
  %1633 = load i32, ptr %1632, align 4, !tbaa !5
  %1634 = mul nsw i32 %1633, %1631
  %1635 = add nsw i64 %1630, -1
  %1636 = trunc i64 %1630 to i32
  %1637 = icmp sgt i32 %1636, 0
  br i1 %1637, label %1629, label %1638, !llvm.loop !535

1638:                                             ; preds = %1629, %1620
  %1639 = phi i32 [ %1624, %1620 ], [ %1634, %1629 ]
  %1640 = and i64 %1589, 4294967295
  %1641 = getelementptr inbounds i32, ptr %6, i64 %1640
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = mul nsw i32 %1642, %1639
  %1644 = add nsw i32 %1643, %1583
  %1645 = icmp sgt i64 %1581, 2
  %1646 = add nsw i64 %1582, -1
  %1647 = add i32 %1580, 1
  br i1 %1645, label %1579, label %1648, !llvm.loop !536

1648:                                             ; preds = %1638, %1575
  %1649 = phi i32 [ %1578, %1575 ], [ %1644, %1638 ]
  %1650 = sext i32 %1649 to i64
  %1651 = getelementptr inbounds i16, ptr %1245, i64 %1650
  %1652 = load i16, ptr %1651, align 2, !tbaa !78
  %1653 = sitofp i16 %1652 to double
  %1654 = fcmp fast ogt double %1576, %1653
  br i1 %1654, label %1655, label %1656

1655:                                             ; preds = %1648
  store double %1653, ptr %1247, align 8, !tbaa !18
  br label %1656

1656:                                             ; preds = %1655, %1648
  %1657 = phi double [ %1653, %1655 ], [ %1576, %1648 ]
  %1658 = add nuw nsw i32 %1577, 1
  br i1 %1569, label %1659, label %1706

1659:                                             ; preds = %1656
  %1660 = load i32, ptr %4, align 4, !tbaa !5
  %1661 = load i32, ptr %12, align 4, !tbaa !5
  %1662 = add nsw i32 %1661, -1
  %1663 = icmp slt i32 %1660, %1662
  br i1 %1663, label %1683, label %1664

1664:                                             ; preds = %1659
  %1665 = icmp eq i32 %1660, %1662
  br i1 %1665, label %1666, label %1699

1666:                                             ; preds = %1664
  store i32 0, ptr %4, align 4, !tbaa !5
  %1667 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1667, ptr %6, align 4, !tbaa !5
  br i1 %1574, label %1706, label %1668

1668:                                             ; preds = %1666, %1693
  %1669 = phi i64 [ %1697, %1693 ], [ 1, %1666 ]
  %1670 = getelementptr inbounds i32, ptr %4, i64 %1669
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %12, i64 %1669
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, -1
  %1675 = icmp slt i32 %1671, %1674
  br i1 %1675, label %1676, label %1691

1676:                                             ; preds = %1668
  br i1 %1663, label %1683, label %1677

1677:                                             ; preds = %1676
  %1678 = getelementptr inbounds i32, ptr %7, i64 %1669
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %6, i64 %1669
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = add nsw i32 %1681, %1679
  store i32 %1682, ptr %1680, align 4, !tbaa !5
  br label %1701

1683:                                             ; preds = %1659, %1676
  %1684 = phi i32 [ %1671, %1676 ], [ %1660, %1659 ]
  %1685 = phi ptr [ %1670, %1676 ], [ %4, %1659 ]
  %1686 = phi i64 [ %1669, %1676 ], [ 0, %1659 ]
  %1687 = add nsw i32 %1684, 1
  store i32 %1687, ptr %1685, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %7, i64 %1686
  %1689 = load i32, ptr %1688, align 4, !tbaa !5
  %1690 = getelementptr inbounds i32, ptr %6, i64 %1686
  br label %1701

1691:                                             ; preds = %1668
  %1692 = icmp eq i32 %1671, %1674
  br i1 %1692, label %1693, label %1699

1693:                                             ; preds = %1691
  store i32 0, ptr %1670, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %8, i64 %1669
  %1695 = load i32, ptr %1694, align 4, !tbaa !5
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1669
  store i32 %1695, ptr %1696, align 4, !tbaa !5
  %1697 = add nuw nsw i64 %1669, 1
  %1698 = icmp eq i64 %1697, %1572
  br i1 %1698, label %1706, label %1668, !llvm.loop !537

1699:                                             ; preds = %1664, %1691
  %1700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1701:                                             ; preds = %1677, %1683
  %1702 = phi ptr [ %1690, %1683 ], [ %1670, %1677 ]
  %1703 = phi i32 [ %1689, %1683 ], [ 1, %1677 ]
  %1704 = load i32, ptr %1702, align 4, !tbaa !5
  %1705 = add nsw i32 %1704, %1703
  store i32 %1705, ptr %1702, align 4, !tbaa !5
  br label %1706

1706:                                             ; preds = %1693, %1701, %1666, %1656
  %1707 = icmp eq i32 %1658, %5
  br i1 %1707, label %3064, label %1575, !llvm.loop !538

1708:                                             ; preds = %1558, %1846
  %1709 = phi double [ %1249, %1558 ], [ %1794, %1846 ]
  %1710 = phi i32 [ 0, %1558 ], [ %1795, %1846 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1559, label %1712, label %1781

1712:                                             ; preds = %1708, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1708 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1563, %1708 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1562, %1708 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1708 ]
  %1717 = sub i32 %1561, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !539

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !540

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !541

1781:                                             ; preds = %1771, %1708
  %1782 = phi i32 [ %1711, %1708 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds i16, ptr %1245, i64 %1787
  %1789 = load i16, ptr %1788, align 2, !tbaa !78
  %1790 = sitofp i16 %1789 to double
  %1791 = fcmp fast ogt double %1709, %1790
  br i1 %1791, label %1792, label %1793

1792:                                             ; preds = %1786
  store double %1790, ptr %1247, align 8, !tbaa !18
  br label %1793

1793:                                             ; preds = %1792, %1786
  %1794 = phi double [ %1790, %1792 ], [ %1709, %1786 ]
  %1795 = add nuw nsw i32 %1710, 1
  br i1 %1560, label %1796, label %1846

1796:                                             ; preds = %1793
  %1797 = load i32, ptr %4, align 4, !tbaa !5
  %1798 = load i32, ptr %12, align 4, !tbaa !5
  %1799 = add nsw i32 %1798, -1
  %1800 = icmp slt i32 %1797, %1799
  br i1 %1800, label %1823, label %1801

1801:                                             ; preds = %1796
  %1802 = icmp eq i32 %1797, %1799
  br i1 %1802, label %1803, label %1839

1803:                                             ; preds = %1801
  store i32 0, ptr %4, align 4, !tbaa !5
  %1804 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1804, ptr %6, align 4, !tbaa !5
  br i1 %1565, label %1846, label %1805

1805:                                             ; preds = %1803, %1833
  %1806 = phi i64 [ %1837, %1833 ], [ 1, %1803 ]
  %1807 = getelementptr inbounds i32, ptr %4, i64 %1806
  %1808 = load i32, ptr %1807, align 4, !tbaa !5
  %1809 = getelementptr inbounds i32, ptr %12, i64 %1806
  %1810 = load i32, ptr %1809, align 4, !tbaa !5
  %1811 = add nsw i32 %1810, -1
  %1812 = icmp slt i32 %1808, %1811
  br i1 %1812, label %1813, label %1831

1813:                                             ; preds = %1805
  br i1 %1800, label %1823, label %1814

1814:                                             ; preds = %1813
  %1815 = shl i64 %1806, 32
  %1816 = add i64 %1815, -4294967296
  %1817 = ashr exact i64 %1816, 32
  %1818 = getelementptr inbounds i32, ptr %7, i64 %1817
  %1819 = load i32, ptr %1818, align 4, !tbaa !5
  %1820 = getelementptr inbounds i32, ptr %6, i64 %1806
  %1821 = load i32, ptr %1820, align 4, !tbaa !5
  %1822 = add nsw i32 %1821, %1819
  store i32 %1822, ptr %1820, align 4, !tbaa !5
  br label %1841

1823:                                             ; preds = %1796, %1813
  %1824 = phi i32 [ %1808, %1813 ], [ %1797, %1796 ]
  %1825 = phi ptr [ %1807, %1813 ], [ %4, %1796 ]
  %1826 = phi i64 [ %1806, %1813 ], [ 0, %1796 ]
  %1827 = add nsw i32 %1824, 1
  store i32 %1827, ptr %1825, align 4, !tbaa !5
  %1828 = getelementptr inbounds i32, ptr %7, i64 %1826
  %1829 = load i32, ptr %1828, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %6, i64 %1826
  br label %1841

1831:                                             ; preds = %1805
  %1832 = icmp eq i32 %1808, %1811
  br i1 %1832, label %1833, label %1839

1833:                                             ; preds = %1831
  store i32 0, ptr %1807, align 4, !tbaa !5
  %1834 = getelementptr inbounds i32, ptr %8, i64 %1806
  %1835 = load i32, ptr %1834, align 4, !tbaa !5
  %1836 = getelementptr inbounds i32, ptr %6, i64 %1806
  store i32 %1835, ptr %1836, align 4, !tbaa !5
  %1837 = add nuw nsw i64 %1806, 1
  %1838 = icmp eq i64 %1837, %1563
  br i1 %1838, label %1846, label %1805, !llvm.loop !542

1839:                                             ; preds = %1801, %1831
  %1840 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

1841:                                             ; preds = %1814, %1823
  %1842 = phi ptr [ %1830, %1823 ], [ %1807, %1814 ]
  %1843 = phi i32 [ %1829, %1823 ], [ 1, %1814 ]
  %1844 = load i32, ptr %1842, align 4, !tbaa !5
  %1845 = add nsw i32 %1844, %1843
  store i32 %1845, ptr %1842, align 4, !tbaa !5
  br label %1846

1846:                                             ; preds = %1833, %1841, %1803, %1793
  %1847 = icmp eq i32 %1795, %5
  br i1 %1847, label %3064, label %1708, !llvm.loop !543

1848:                                             ; preds = %1251
  %1849 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 793, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3064

1850:                                             ; preds = %18
  %1851 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1852 = load ptr, ptr %1851, align 8, !tbaa !9
  %1853 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1854 = load ptr, ptr %1853, align 8, !tbaa !9
  %1855 = load i16, ptr %1852, align 2, !tbaa !78
  %1856 = sitofp i16 %1855 to float
  store float %1856, ptr %1854, align 4, !tbaa !162
  %1857 = icmp eq i32 %13, 0
  br i1 %1857, label %3064, label %1858

1858:                                             ; preds = %1850
  switch i32 %1, label %2455 [
    i32 1, label %1859
    i32 0, label %2159
  ]

1859:                                             ; preds = %1858
  %1860 = getelementptr inbounds i32, ptr %3, i64 %19
  %1861 = load i32, ptr %1860, align 4, !tbaa !5
  %1862 = icmp eq i32 %1861, 0
  %1863 = icmp sgt i32 %5, 0
  br i1 %1862, label %1873, label %1864

1864:                                             ; preds = %1859
  br i1 %1863, label %1865, label %3064

1865:                                             ; preds = %1864
  %1866 = icmp sgt i32 %13, 1
  %1867 = icmp sgt i32 %13, 0
  %1868 = add i32 %13, -2
  %1869 = zext i32 %1868 to i64
  %1870 = zext i32 %13 to i64
  %1871 = add nuw i32 %5, 1
  %1872 = icmp eq i32 %13, 1
  br label %2019

1873:                                             ; preds = %1859
  br i1 %1863, label %1874, label %3064

1874:                                             ; preds = %1873
  %1875 = icmp sgt i32 %13, 1
  %1876 = icmp sgt i32 %13, 0
  %1877 = add i32 %13, -2
  %1878 = zext i32 %1877 to i64
  %1879 = zext i32 %13 to i64
  %1880 = add nuw i32 %5, 1
  %1881 = icmp eq i32 %13, 1
  br label %1882

1882:                                             ; preds = %1874, %2017
  %1883 = phi float [ %1856, %1874 ], [ %1968, %2017 ]
  %1884 = phi i32 [ 0, %1874 ], [ %1969, %2017 ]
  %1885 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1875, label %1886, label %1955

1886:                                             ; preds = %1882, %1945
  %1887 = phi i32 [ %1954, %1945 ], [ 0, %1882 ]
  %1888 = phi i64 [ %1896, %1945 ], [ %1879, %1882 ]
  %1889 = phi i64 [ %1953, %1945 ], [ %1878, %1882 ]
  %1890 = phi i32 [ %1951, %1945 ], [ %1885, %1882 ]
  %1891 = sub i32 %1877, %1887
  %1892 = tail call i32 @llvm.smin.i32(i32 %1891, i32 0)
  %1893 = sub i32 %1891, %1892
  %1894 = zext i32 %1893 to i64
  %1895 = add nuw nsw i64 %1894, 1
  %1896 = add nsw i64 %1888, -1
  %1897 = icmp ult i32 %1893, 31
  br i1 %1897, label %1933, label %1898

1898:                                             ; preds = %1886
  %1899 = and i64 %1895, 8589934560
  %1900 = sub i64 %1889, %1899
  br label %1901

1901:                                             ; preds = %1901, %1898
  %1902 = phi i64 [ 0, %1898 ], [ %1925, %1901 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1898 ], [ %1921, %1901 ]
  %1904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1898 ], [ %1922, %1901 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1898 ], [ %1923, %1901 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1898 ], [ %1924, %1901 ]
  %1907 = sub i64 %1889, %1902
  %1908 = getelementptr inbounds i32, ptr %9, i64 %1907
  %1909 = getelementptr inbounds i32, ptr %1908, i64 -7
  %1910 = load <8 x i32>, ptr %1909, align 4, !tbaa !5
  %1911 = shufflevector <8 x i32> %1910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1912 = getelementptr inbounds i32, ptr %1908, i64 -15
  %1913 = load <8 x i32>, ptr %1912, align 4, !tbaa !5
  %1914 = shufflevector <8 x i32> %1913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1915 = getelementptr inbounds i32, ptr %1908, i64 -23
  %1916 = load <8 x i32>, ptr %1915, align 4, !tbaa !5
  %1917 = shufflevector <8 x i32> %1916, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1918 = getelementptr inbounds i32, ptr %1908, i64 -31
  %1919 = load <8 x i32>, ptr %1918, align 4, !tbaa !5
  %1920 = shufflevector <8 x i32> %1919, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1921 = mul <8 x i32> %1911, %1903
  %1922 = mul <8 x i32> %1914, %1904
  %1923 = mul <8 x i32> %1917, %1905
  %1924 = mul <8 x i32> %1920, %1906
  %1925 = add nuw i64 %1902, 32
  %1926 = icmp eq i64 %1925, %1899
  br i1 %1926, label %1927, label %1901, !llvm.loop !544

1927:                                             ; preds = %1901
  %1928 = mul <8 x i32> %1922, %1921
  %1929 = mul <8 x i32> %1923, %1928
  %1930 = mul <8 x i32> %1924, %1929
  %1931 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1930)
  %1932 = icmp eq i64 %1895, %1899
  br i1 %1932, label %1945, label %1933

1933:                                             ; preds = %1886, %1927
  %1934 = phi i64 [ %1889, %1886 ], [ %1900, %1927 ]
  %1935 = phi i32 [ 1, %1886 ], [ %1931, %1927 ]
  br label %1936

1936:                                             ; preds = %1933, %1936
  %1937 = phi i64 [ %1942, %1936 ], [ %1934, %1933 ]
  %1938 = phi i32 [ %1941, %1936 ], [ %1935, %1933 ]
  %1939 = getelementptr inbounds i32, ptr %9, i64 %1937
  %1940 = load i32, ptr %1939, align 4, !tbaa !5
  %1941 = mul nsw i32 %1940, %1938
  %1942 = add nsw i64 %1937, -1
  %1943 = trunc i64 %1937 to i32
  %1944 = icmp sgt i32 %1943, 0
  br i1 %1944, label %1936, label %1945, !llvm.loop !545

1945:                                             ; preds = %1936, %1927
  %1946 = phi i32 [ %1931, %1927 ], [ %1941, %1936 ]
  %1947 = and i64 %1896, 4294967295
  %1948 = getelementptr inbounds i32, ptr %6, i64 %1947
  %1949 = load i32, ptr %1948, align 4, !tbaa !5
  %1950 = mul nsw i32 %1949, %1946
  %1951 = add nsw i32 %1950, %1890
  %1952 = icmp sgt i64 %1888, 2
  %1953 = add nsw i64 %1889, -1
  %1954 = add i32 %1887, 1
  br i1 %1952, label %1886, label %1955, !llvm.loop !546

1955:                                             ; preds = %1945, %1882
  %1956 = phi i32 [ %1885, %1882 ], [ %1951, %1945 ]
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds double, ptr %2, i64 %1957
  %1959 = load double, ptr %1958, align 8, !tbaa !18
  %1960 = getelementptr inbounds i16, ptr %1852, i64 %1957
  %1961 = load i16, ptr %1960, align 2, !tbaa !78
  %1962 = sitofp i16 %1961 to float
  %1963 = fcmp fast one double %1959, 0.000000e+00
  %1964 = fcmp fast ogt float %1883, %1962
  %1965 = select i1 %1963, i1 %1964, i1 false
  br i1 %1965, label %1966, label %1967

1966:                                             ; preds = %1955
  store float %1962, ptr %1854, align 4, !tbaa !162
  br label %1967

1967:                                             ; preds = %1966, %1955
  %1968 = phi float [ %1962, %1966 ], [ %1883, %1955 ]
  %1969 = add nuw nsw i32 %1884, 1
  br i1 %1876, label %1970, label %2017

1970:                                             ; preds = %1967
  %1971 = load i32, ptr %4, align 4, !tbaa !5
  %1972 = load i32, ptr %12, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, -1
  %1974 = icmp slt i32 %1971, %1973
  br i1 %1974, label %1994, label %1975

1975:                                             ; preds = %1970
  %1976 = icmp eq i32 %1971, %1973
  br i1 %1976, label %1977, label %2010

1977:                                             ; preds = %1975
  store i32 0, ptr %4, align 4, !tbaa !5
  %1978 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1978, ptr %6, align 4, !tbaa !5
  br i1 %1881, label %2017, label %1979

1979:                                             ; preds = %1977, %2004
  %1980 = phi i64 [ %2008, %2004 ], [ 1, %1977 ]
  %1981 = getelementptr inbounds i32, ptr %4, i64 %1980
  %1982 = load i32, ptr %1981, align 4, !tbaa !5
  %1983 = getelementptr inbounds i32, ptr %12, i64 %1980
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = add nsw i32 %1984, -1
  %1986 = icmp slt i32 %1982, %1985
  br i1 %1986, label %1987, label %2002

1987:                                             ; preds = %1979
  br i1 %1974, label %1994, label %1988

1988:                                             ; preds = %1987
  %1989 = getelementptr inbounds i32, ptr %7, i64 %1980
  %1990 = load i32, ptr %1989, align 4, !tbaa !5
  %1991 = getelementptr inbounds i32, ptr %6, i64 %1980
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1990
  store i32 %1993, ptr %1991, align 4, !tbaa !5
  br label %2012

1994:                                             ; preds = %1970, %1987
  %1995 = phi i32 [ %1982, %1987 ], [ %1971, %1970 ]
  %1996 = phi ptr [ %1981, %1987 ], [ %4, %1970 ]
  %1997 = phi i64 [ %1980, %1987 ], [ 0, %1970 ]
  %1998 = add nsw i32 %1995, 1
  store i32 %1998, ptr %1996, align 4, !tbaa !5
  %1999 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %6, i64 %1997
  br label %2012

2002:                                             ; preds = %1979
  %2003 = icmp eq i32 %1982, %1985
  br i1 %2003, label %2004, label %2010

2004:                                             ; preds = %2002
  store i32 0, ptr %1981, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %8, i64 %1980
  %2006 = load i32, ptr %2005, align 4, !tbaa !5
  %2007 = getelementptr inbounds i32, ptr %6, i64 %1980
  store i32 %2006, ptr %2007, align 4, !tbaa !5
  %2008 = add nuw nsw i64 %1980, 1
  %2009 = icmp eq i64 %2008, %1879
  br i1 %2009, label %2017, label %1979, !llvm.loop !547

2010:                                             ; preds = %1975, %2002
  %2011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2012:                                             ; preds = %1988, %1994
  %2013 = phi ptr [ %2001, %1994 ], [ %1981, %1988 ]
  %2014 = phi i32 [ %2000, %1994 ], [ 1, %1988 ]
  %2015 = load i32, ptr %2013, align 4, !tbaa !5
  %2016 = add nsw i32 %2015, %2014
  store i32 %2016, ptr %2013, align 4, !tbaa !5
  br label %2017

2017:                                             ; preds = %2004, %2012, %1977, %1967
  %2018 = icmp eq i32 %1969, %5
  br i1 %2018, label %3064, label %1882, !llvm.loop !548

2019:                                             ; preds = %1865, %2157
  %2020 = phi float [ %1856, %1865 ], [ %2105, %2157 ]
  %2021 = phi i32 [ 0, %1865 ], [ %2106, %2157 ]
  %2022 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1866, label %2023, label %2092

2023:                                             ; preds = %2019, %2082
  %2024 = phi i32 [ %2091, %2082 ], [ 0, %2019 ]
  %2025 = phi i64 [ %2033, %2082 ], [ %1870, %2019 ]
  %2026 = phi i64 [ %2090, %2082 ], [ %1869, %2019 ]
  %2027 = phi i32 [ %2088, %2082 ], [ %2022, %2019 ]
  %2028 = sub i32 %1868, %2024
  %2029 = tail call i32 @llvm.smin.i32(i32 %2028, i32 0)
  %2030 = sub i32 %2028, %2029
  %2031 = zext i32 %2030 to i64
  %2032 = add nuw nsw i64 %2031, 1
  %2033 = add nsw i64 %2025, -1
  %2034 = icmp ult i32 %2030, 31
  br i1 %2034, label %2070, label %2035

2035:                                             ; preds = %2023
  %2036 = and i64 %2032, 8589934560
  %2037 = sub i64 %2026, %2036
  br label %2038

2038:                                             ; preds = %2038, %2035
  %2039 = phi i64 [ 0, %2035 ], [ %2062, %2038 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2058, %2038 ]
  %2041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2059, %2038 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2060, %2038 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2061, %2038 ]
  %2044 = sub i64 %2026, %2039
  %2045 = getelementptr inbounds i32, ptr %11, i64 %2044
  %2046 = getelementptr inbounds i32, ptr %2045, i64 -7
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = getelementptr inbounds i32, ptr %2045, i64 -15
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2045, i64 -23
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2045, i64 -31
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = mul <8 x i32> %2048, %2040
  %2059 = mul <8 x i32> %2051, %2041
  %2060 = mul <8 x i32> %2054, %2042
  %2061 = mul <8 x i32> %2057, %2043
  %2062 = add nuw i64 %2039, 32
  %2063 = icmp eq i64 %2062, %2036
  br i1 %2063, label %2064, label %2038, !llvm.loop !549

2064:                                             ; preds = %2038
  %2065 = mul <8 x i32> %2059, %2058
  %2066 = mul <8 x i32> %2060, %2065
  %2067 = mul <8 x i32> %2061, %2066
  %2068 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2067)
  %2069 = icmp eq i64 %2032, %2036
  br i1 %2069, label %2082, label %2070

2070:                                             ; preds = %2023, %2064
  %2071 = phi i64 [ %2026, %2023 ], [ %2037, %2064 ]
  %2072 = phi i32 [ 1, %2023 ], [ %2068, %2064 ]
  br label %2073

2073:                                             ; preds = %2070, %2073
  %2074 = phi i64 [ %2079, %2073 ], [ %2071, %2070 ]
  %2075 = phi i32 [ %2078, %2073 ], [ %2072, %2070 ]
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2074
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2075
  %2079 = add nsw i64 %2074, -1
  %2080 = trunc i64 %2074 to i32
  %2081 = icmp sgt i32 %2080, 0
  br i1 %2081, label %2073, label %2082, !llvm.loop !550

2082:                                             ; preds = %2073, %2064
  %2083 = phi i32 [ %2068, %2064 ], [ %2078, %2073 ]
  %2084 = and i64 %2033, 4294967295
  %2085 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = mul nsw i32 %2086, %2083
  %2088 = add nsw i32 %2087, %2027
  %2089 = icmp sgt i64 %2025, 2
  %2090 = add nsw i64 %2026, -1
  %2091 = add i32 %2024, 1
  br i1 %2089, label %2023, label %2092, !llvm.loop !551

2092:                                             ; preds = %2082, %2019
  %2093 = phi i32 [ %2022, %2019 ], [ %2088, %2082 ]
  %2094 = icmp slt i32 %2093, %5
  br i1 %2094, label %2097, label %2095

2095:                                             ; preds = %2092
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

2097:                                             ; preds = %2092
  %2098 = sext i32 %2093 to i64
  %2099 = getelementptr inbounds i16, ptr %1852, i64 %2098
  %2100 = load i16, ptr %2099, align 2, !tbaa !78
  %2101 = sitofp i16 %2100 to float
  %2102 = fcmp fast ogt float %2020, %2101
  br i1 %2102, label %2103, label %2104

2103:                                             ; preds = %2097
  store float %2101, ptr %1854, align 4, !tbaa !162
  br label %2104

2104:                                             ; preds = %2097, %2103
  %2105 = phi float [ %2020, %2097 ], [ %2101, %2103 ]
  %2106 = add nuw nsw i32 %2021, 1
  br i1 %1867, label %2107, label %2157

2107:                                             ; preds = %2104
  %2108 = load i32, ptr %4, align 4, !tbaa !5
  %2109 = load i32, ptr %12, align 4, !tbaa !5
  %2110 = add nsw i32 %2109, -1
  %2111 = icmp slt i32 %2108, %2110
  br i1 %2111, label %2134, label %2112

2112:                                             ; preds = %2107
  %2113 = icmp eq i32 %2108, %2110
  br i1 %2113, label %2114, label %2150

2114:                                             ; preds = %2112
  store i32 0, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2115, ptr %6, align 4, !tbaa !5
  br i1 %1872, label %2157, label %2116

2116:                                             ; preds = %2114, %2144
  %2117 = phi i64 [ %2148, %2144 ], [ 1, %2114 ]
  %2118 = getelementptr inbounds i32, ptr %4, i64 %2117
  %2119 = load i32, ptr %2118, align 4, !tbaa !5
  %2120 = getelementptr inbounds i32, ptr %12, i64 %2117
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = add nsw i32 %2121, -1
  %2123 = icmp slt i32 %2119, %2122
  br i1 %2123, label %2124, label %2142

2124:                                             ; preds = %2116
  br i1 %2111, label %2134, label %2125

2125:                                             ; preds = %2124
  %2126 = shl i64 %2117, 32
  %2127 = add i64 %2126, -4294967296
  %2128 = ashr exact i64 %2127, 32
  %2129 = getelementptr inbounds i32, ptr %7, i64 %2128
  %2130 = load i32, ptr %2129, align 4, !tbaa !5
  %2131 = getelementptr inbounds i32, ptr %6, i64 %2117
  %2132 = load i32, ptr %2131, align 4, !tbaa !5
  %2133 = add nsw i32 %2132, %2130
  store i32 %2133, ptr %2131, align 4, !tbaa !5
  br label %2152

2134:                                             ; preds = %2107, %2124
  %2135 = phi i32 [ %2119, %2124 ], [ %2108, %2107 ]
  %2136 = phi ptr [ %2118, %2124 ], [ %4, %2107 ]
  %2137 = phi i64 [ %2117, %2124 ], [ 0, %2107 ]
  %2138 = add nsw i32 %2135, 1
  store i32 %2138, ptr %2136, align 4, !tbaa !5
  %2139 = getelementptr inbounds i32, ptr %7, i64 %2137
  %2140 = load i32, ptr %2139, align 4, !tbaa !5
  %2141 = getelementptr inbounds i32, ptr %6, i64 %2137
  br label %2152

2142:                                             ; preds = %2116
  %2143 = icmp eq i32 %2119, %2122
  br i1 %2143, label %2144, label %2150

2144:                                             ; preds = %2142
  store i32 0, ptr %2118, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %8, i64 %2117
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2117
  store i32 %2146, ptr %2147, align 4, !tbaa !5
  %2148 = add nuw nsw i64 %2117, 1
  %2149 = icmp eq i64 %2148, %1870
  br i1 %2149, label %2157, label %2116, !llvm.loop !552

2150:                                             ; preds = %2112, %2142
  %2151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2152:                                             ; preds = %2125, %2134
  %2153 = phi ptr [ %2141, %2134 ], [ %2118, %2125 ]
  %2154 = phi i32 [ %2140, %2134 ], [ 1, %2125 ]
  %2155 = load i32, ptr %2153, align 4, !tbaa !5
  %2156 = add nsw i32 %2155, %2154
  store i32 %2156, ptr %2153, align 4, !tbaa !5
  br label %2157

2157:                                             ; preds = %2144, %2152, %2114, %2104
  %2158 = icmp eq i32 %2106, %5
  br i1 %2158, label %3064, label %2019, !llvm.loop !553

2159:                                             ; preds = %1858
  %2160 = getelementptr inbounds i32, ptr %3, i64 %19
  %2161 = load i32, ptr %2160, align 4, !tbaa !5
  %2162 = icmp eq i32 %2161, 0
  %2163 = icmp sgt i32 %5, 0
  br i1 %2162, label %2173, label %2164

2164:                                             ; preds = %2159
  br i1 %2163, label %2165, label %3064

2165:                                             ; preds = %2164
  %2166 = icmp sgt i32 %13, 1
  %2167 = icmp sgt i32 %13, 0
  %2168 = add i32 %13, -2
  %2169 = zext i32 %2168 to i64
  %2170 = zext i32 %13 to i64
  %2171 = add nuw i32 %5, 1
  %2172 = icmp eq i32 %13, 1
  br label %2315

2173:                                             ; preds = %2159
  br i1 %2163, label %2174, label %3064

2174:                                             ; preds = %2173
  %2175 = icmp sgt i32 %13, 1
  %2176 = icmp sgt i32 %13, 0
  %2177 = add i32 %13, -2
  %2178 = zext i32 %2177 to i64
  %2179 = zext i32 %13 to i64
  %2180 = add nuw i32 %5, 1
  %2181 = icmp eq i32 %13, 1
  br label %2182

2182:                                             ; preds = %2174, %2313
  %2183 = phi float [ %1856, %2174 ], [ %2264, %2313 ]
  %2184 = phi i32 [ 0, %2174 ], [ %2265, %2313 ]
  %2185 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2175, label %2186, label %2255

2186:                                             ; preds = %2182, %2245
  %2187 = phi i32 [ %2254, %2245 ], [ 0, %2182 ]
  %2188 = phi i64 [ %2196, %2245 ], [ %2179, %2182 ]
  %2189 = phi i64 [ %2253, %2245 ], [ %2178, %2182 ]
  %2190 = phi i32 [ %2251, %2245 ], [ %2185, %2182 ]
  %2191 = sub i32 %2177, %2187
  %2192 = tail call i32 @llvm.smin.i32(i32 %2191, i32 0)
  %2193 = sub i32 %2191, %2192
  %2194 = zext i32 %2193 to i64
  %2195 = add nuw nsw i64 %2194, 1
  %2196 = add nsw i64 %2188, -1
  %2197 = icmp ult i32 %2193, 31
  br i1 %2197, label %2233, label %2198

2198:                                             ; preds = %2186
  %2199 = and i64 %2195, 8589934560
  %2200 = sub i64 %2189, %2199
  br label %2201

2201:                                             ; preds = %2201, %2198
  %2202 = phi i64 [ 0, %2198 ], [ %2225, %2201 ]
  %2203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2221, %2201 ]
  %2204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2222, %2201 ]
  %2205 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2223, %2201 ]
  %2206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2198 ], [ %2224, %2201 ]
  %2207 = sub i64 %2189, %2202
  %2208 = getelementptr inbounds i32, ptr %9, i64 %2207
  %2209 = getelementptr inbounds i32, ptr %2208, i64 -7
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = getelementptr inbounds i32, ptr %2208, i64 -15
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = getelementptr inbounds i32, ptr %2208, i64 -23
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2208, i64 -31
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = mul <8 x i32> %2211, %2203
  %2222 = mul <8 x i32> %2214, %2204
  %2223 = mul <8 x i32> %2217, %2205
  %2224 = mul <8 x i32> %2220, %2206
  %2225 = add nuw i64 %2202, 32
  %2226 = icmp eq i64 %2225, %2199
  br i1 %2226, label %2227, label %2201, !llvm.loop !554

2227:                                             ; preds = %2201
  %2228 = mul <8 x i32> %2222, %2221
  %2229 = mul <8 x i32> %2223, %2228
  %2230 = mul <8 x i32> %2224, %2229
  %2231 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2230)
  %2232 = icmp eq i64 %2195, %2199
  br i1 %2232, label %2245, label %2233

2233:                                             ; preds = %2186, %2227
  %2234 = phi i64 [ %2189, %2186 ], [ %2200, %2227 ]
  %2235 = phi i32 [ 1, %2186 ], [ %2231, %2227 ]
  br label %2236

2236:                                             ; preds = %2233, %2236
  %2237 = phi i64 [ %2242, %2236 ], [ %2234, %2233 ]
  %2238 = phi i32 [ %2241, %2236 ], [ %2235, %2233 ]
  %2239 = getelementptr inbounds i32, ptr %9, i64 %2237
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = mul nsw i32 %2240, %2238
  %2242 = add nsw i64 %2237, -1
  %2243 = trunc i64 %2237 to i32
  %2244 = icmp sgt i32 %2243, 0
  br i1 %2244, label %2236, label %2245, !llvm.loop !555

2245:                                             ; preds = %2236, %2227
  %2246 = phi i32 [ %2231, %2227 ], [ %2241, %2236 ]
  %2247 = and i64 %2196, 4294967295
  %2248 = getelementptr inbounds i32, ptr %6, i64 %2247
  %2249 = load i32, ptr %2248, align 4, !tbaa !5
  %2250 = mul nsw i32 %2249, %2246
  %2251 = add nsw i32 %2250, %2190
  %2252 = icmp sgt i64 %2188, 2
  %2253 = add nsw i64 %2189, -1
  %2254 = add i32 %2187, 1
  br i1 %2252, label %2186, label %2255, !llvm.loop !556

2255:                                             ; preds = %2245, %2182
  %2256 = phi i32 [ %2185, %2182 ], [ %2251, %2245 ]
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds i16, ptr %1852, i64 %2257
  %2259 = load i16, ptr %2258, align 2, !tbaa !78
  %2260 = sitofp i16 %2259 to float
  %2261 = fcmp fast ogt float %2183, %2260
  br i1 %2261, label %2262, label %2263

2262:                                             ; preds = %2255
  store float %2260, ptr %1854, align 4, !tbaa !162
  br label %2263

2263:                                             ; preds = %2262, %2255
  %2264 = phi float [ %2260, %2262 ], [ %2183, %2255 ]
  %2265 = add nuw nsw i32 %2184, 1
  br i1 %2176, label %2266, label %2313

2266:                                             ; preds = %2263
  %2267 = load i32, ptr %4, align 4, !tbaa !5
  %2268 = load i32, ptr %12, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, -1
  %2270 = icmp slt i32 %2267, %2269
  br i1 %2270, label %2290, label %2271

2271:                                             ; preds = %2266
  %2272 = icmp eq i32 %2267, %2269
  br i1 %2272, label %2273, label %2306

2273:                                             ; preds = %2271
  store i32 0, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2274, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2313, label %2275

2275:                                             ; preds = %2273, %2300
  %2276 = phi i64 [ %2304, %2300 ], [ 1, %2273 ]
  %2277 = getelementptr inbounds i32, ptr %4, i64 %2276
  %2278 = load i32, ptr %2277, align 4, !tbaa !5
  %2279 = getelementptr inbounds i32, ptr %12, i64 %2276
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = add nsw i32 %2280, -1
  %2282 = icmp slt i32 %2278, %2281
  br i1 %2282, label %2283, label %2298

2283:                                             ; preds = %2275
  br i1 %2270, label %2290, label %2284

2284:                                             ; preds = %2283
  %2285 = getelementptr inbounds i32, ptr %7, i64 %2276
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = getelementptr inbounds i32, ptr %6, i64 %2276
  %2288 = load i32, ptr %2287, align 4, !tbaa !5
  %2289 = add nsw i32 %2288, %2286
  store i32 %2289, ptr %2287, align 4, !tbaa !5
  br label %2308

2290:                                             ; preds = %2266, %2283
  %2291 = phi i32 [ %2278, %2283 ], [ %2267, %2266 ]
  %2292 = phi ptr [ %2277, %2283 ], [ %4, %2266 ]
  %2293 = phi i64 [ %2276, %2283 ], [ 0, %2266 ]
  %2294 = add nsw i32 %2291, 1
  store i32 %2294, ptr %2292, align 4, !tbaa !5
  %2295 = getelementptr inbounds i32, ptr %7, i64 %2293
  %2296 = load i32, ptr %2295, align 4, !tbaa !5
  %2297 = getelementptr inbounds i32, ptr %6, i64 %2293
  br label %2308

2298:                                             ; preds = %2275
  %2299 = icmp eq i32 %2278, %2281
  br i1 %2299, label %2300, label %2306

2300:                                             ; preds = %2298
  store i32 0, ptr %2277, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %8, i64 %2276
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2276
  store i32 %2302, ptr %2303, align 4, !tbaa !5
  %2304 = add nuw nsw i64 %2276, 1
  %2305 = icmp eq i64 %2304, %2179
  br i1 %2305, label %2313, label %2275, !llvm.loop !557

2306:                                             ; preds = %2271, %2298
  %2307 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2308:                                             ; preds = %2284, %2290
  %2309 = phi ptr [ %2297, %2290 ], [ %2277, %2284 ]
  %2310 = phi i32 [ %2296, %2290 ], [ 1, %2284 ]
  %2311 = load i32, ptr %2309, align 4, !tbaa !5
  %2312 = add nsw i32 %2311, %2310
  store i32 %2312, ptr %2309, align 4, !tbaa !5
  br label %2313

2313:                                             ; preds = %2300, %2308, %2273, %2263
  %2314 = icmp eq i32 %2265, %5
  br i1 %2314, label %3064, label %2182, !llvm.loop !558

2315:                                             ; preds = %2165, %2453
  %2316 = phi float [ %1856, %2165 ], [ %2401, %2453 ]
  %2317 = phi i32 [ 0, %2165 ], [ %2402, %2453 ]
  %2318 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2166, label %2319, label %2388

2319:                                             ; preds = %2315, %2378
  %2320 = phi i32 [ %2387, %2378 ], [ 0, %2315 ]
  %2321 = phi i64 [ %2329, %2378 ], [ %2170, %2315 ]
  %2322 = phi i64 [ %2386, %2378 ], [ %2169, %2315 ]
  %2323 = phi i32 [ %2384, %2378 ], [ %2318, %2315 ]
  %2324 = sub i32 %2168, %2320
  %2325 = tail call i32 @llvm.smin.i32(i32 %2324, i32 0)
  %2326 = sub i32 %2324, %2325
  %2327 = zext i32 %2326 to i64
  %2328 = add nuw nsw i64 %2327, 1
  %2329 = add nsw i64 %2321, -1
  %2330 = icmp ult i32 %2326, 31
  br i1 %2330, label %2366, label %2331

2331:                                             ; preds = %2319
  %2332 = and i64 %2328, 8589934560
  %2333 = sub i64 %2322, %2332
  br label %2334

2334:                                             ; preds = %2334, %2331
  %2335 = phi i64 [ 0, %2331 ], [ %2358, %2334 ]
  %2336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2331 ], [ %2354, %2334 ]
  %2337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2331 ], [ %2355, %2334 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2331 ], [ %2356, %2334 ]
  %2339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2331 ], [ %2357, %2334 ]
  %2340 = sub i64 %2322, %2335
  %2341 = getelementptr inbounds i32, ptr %11, i64 %2340
  %2342 = getelementptr inbounds i32, ptr %2341, i64 -7
  %2343 = load <8 x i32>, ptr %2342, align 4, !tbaa !5
  %2344 = shufflevector <8 x i32> %2343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2345 = getelementptr inbounds i32, ptr %2341, i64 -15
  %2346 = load <8 x i32>, ptr %2345, align 4, !tbaa !5
  %2347 = shufflevector <8 x i32> %2346, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2348 = getelementptr inbounds i32, ptr %2341, i64 -23
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2341, i64 -31
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = mul <8 x i32> %2344, %2336
  %2355 = mul <8 x i32> %2347, %2337
  %2356 = mul <8 x i32> %2350, %2338
  %2357 = mul <8 x i32> %2353, %2339
  %2358 = add nuw i64 %2335, 32
  %2359 = icmp eq i64 %2358, %2332
  br i1 %2359, label %2360, label %2334, !llvm.loop !559

2360:                                             ; preds = %2334
  %2361 = mul <8 x i32> %2355, %2354
  %2362 = mul <8 x i32> %2356, %2361
  %2363 = mul <8 x i32> %2357, %2362
  %2364 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2363)
  %2365 = icmp eq i64 %2328, %2332
  br i1 %2365, label %2378, label %2366

2366:                                             ; preds = %2319, %2360
  %2367 = phi i64 [ %2322, %2319 ], [ %2333, %2360 ]
  %2368 = phi i32 [ 1, %2319 ], [ %2364, %2360 ]
  br label %2369

2369:                                             ; preds = %2366, %2369
  %2370 = phi i64 [ %2375, %2369 ], [ %2367, %2366 ]
  %2371 = phi i32 [ %2374, %2369 ], [ %2368, %2366 ]
  %2372 = getelementptr inbounds i32, ptr %11, i64 %2370
  %2373 = load i32, ptr %2372, align 4, !tbaa !5
  %2374 = mul nsw i32 %2373, %2371
  %2375 = add nsw i64 %2370, -1
  %2376 = trunc i64 %2370 to i32
  %2377 = icmp sgt i32 %2376, 0
  br i1 %2377, label %2369, label %2378, !llvm.loop !560

2378:                                             ; preds = %2369, %2360
  %2379 = phi i32 [ %2364, %2360 ], [ %2374, %2369 ]
  %2380 = and i64 %2329, 4294967295
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2380
  %2382 = load i32, ptr %2381, align 4, !tbaa !5
  %2383 = mul nsw i32 %2382, %2379
  %2384 = add nsw i32 %2383, %2323
  %2385 = icmp sgt i64 %2321, 2
  %2386 = add nsw i64 %2322, -1
  %2387 = add i32 %2320, 1
  br i1 %2385, label %2319, label %2388, !llvm.loop !561

2388:                                             ; preds = %2378, %2315
  %2389 = phi i32 [ %2318, %2315 ], [ %2384, %2378 ]
  %2390 = icmp slt i32 %2389, %5
  br i1 %2390, label %2393, label %2391

2391:                                             ; preds = %2388
  %2392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

2393:                                             ; preds = %2388
  %2394 = sext i32 %2389 to i64
  %2395 = getelementptr inbounds i16, ptr %1852, i64 %2394
  %2396 = load i16, ptr %2395, align 2, !tbaa !78
  %2397 = sitofp i16 %2396 to float
  %2398 = fcmp fast ogt float %2316, %2397
  br i1 %2398, label %2399, label %2400

2399:                                             ; preds = %2393
  store float %2397, ptr %1854, align 4, !tbaa !162
  br label %2400

2400:                                             ; preds = %2399, %2393
  %2401 = phi float [ %2397, %2399 ], [ %2316, %2393 ]
  %2402 = add nuw nsw i32 %2317, 1
  br i1 %2167, label %2403, label %2453

2403:                                             ; preds = %2400
  %2404 = load i32, ptr %4, align 4, !tbaa !5
  %2405 = load i32, ptr %12, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, -1
  %2407 = icmp slt i32 %2404, %2406
  br i1 %2407, label %2430, label %2408

2408:                                             ; preds = %2403
  %2409 = icmp eq i32 %2404, %2406
  br i1 %2409, label %2410, label %2446

2410:                                             ; preds = %2408
  store i32 0, ptr %4, align 4, !tbaa !5
  %2411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2411, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2453, label %2412

2412:                                             ; preds = %2410, %2440
  %2413 = phi i64 [ %2444, %2440 ], [ 1, %2410 ]
  %2414 = getelementptr inbounds i32, ptr %4, i64 %2413
  %2415 = load i32, ptr %2414, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %12, i64 %2413
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = add nsw i32 %2417, -1
  %2419 = icmp slt i32 %2415, %2418
  br i1 %2419, label %2420, label %2438

2420:                                             ; preds = %2412
  br i1 %2407, label %2430, label %2421

2421:                                             ; preds = %2420
  %2422 = shl i64 %2413, 32
  %2423 = add i64 %2422, -4294967296
  %2424 = ashr exact i64 %2423, 32
  %2425 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = getelementptr inbounds i32, ptr %6, i64 %2413
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2426
  store i32 %2429, ptr %2427, align 4, !tbaa !5
  br label %2448

2430:                                             ; preds = %2403, %2420
  %2431 = phi i32 [ %2415, %2420 ], [ %2404, %2403 ]
  %2432 = phi ptr [ %2414, %2420 ], [ %4, %2403 ]
  %2433 = phi i64 [ %2413, %2420 ], [ 0, %2403 ]
  %2434 = add nsw i32 %2431, 1
  store i32 %2434, ptr %2432, align 4, !tbaa !5
  %2435 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %6, i64 %2433
  br label %2448

2438:                                             ; preds = %2412
  %2439 = icmp eq i32 %2415, %2418
  br i1 %2439, label %2440, label %2446

2440:                                             ; preds = %2438
  store i32 0, ptr %2414, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %8, i64 %2413
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2413
  store i32 %2442, ptr %2443, align 4, !tbaa !5
  %2444 = add nuw nsw i64 %2413, 1
  %2445 = icmp eq i64 %2444, %2170
  br i1 %2445, label %2453, label %2412, !llvm.loop !562

2446:                                             ; preds = %2408, %2438
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2448:                                             ; preds = %2421, %2430
  %2449 = phi ptr [ %2437, %2430 ], [ %2414, %2421 ]
  %2450 = phi i32 [ %2436, %2430 ], [ 1, %2421 ]
  %2451 = load i32, ptr %2449, align 4, !tbaa !5
  %2452 = add nsw i32 %2451, %2450
  store i32 %2452, ptr %2449, align 4, !tbaa !5
  br label %2453

2453:                                             ; preds = %2440, %2448, %2410, %2400
  %2454 = icmp eq i32 %2402, %5
  br i1 %2454, label %3064, label %2315, !llvm.loop !563

2455:                                             ; preds = %1858
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 797, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3064

2457:                                             ; preds = %18
  %2458 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2459 = load ptr, ptr %2458, align 8, !tbaa !9
  %2460 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2461 = load ptr, ptr %2460, align 8, !tbaa !9
  %2462 = load i16, ptr %2459, align 2, !tbaa !78
  %2463 = sitofp i16 %2462 to double
  store double %2463, ptr %2461, align 8, !tbaa !18
  %2464 = icmp eq i32 %13, 0
  br i1 %2464, label %3064, label %2465

2465:                                             ; preds = %2457
  switch i32 %1, label %3062 [
    i32 1, label %2466
    i32 0, label %2766
  ]

2466:                                             ; preds = %2465
  %2467 = getelementptr inbounds i32, ptr %3, i64 %19
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = icmp eq i32 %2468, 0
  %2470 = icmp sgt i32 %5, 0
  br i1 %2469, label %2480, label %2471

2471:                                             ; preds = %2466
  br i1 %2470, label %2472, label %3064

2472:                                             ; preds = %2471
  %2473 = icmp sgt i32 %13, 1
  %2474 = icmp sgt i32 %13, 0
  %2475 = add i32 %13, -2
  %2476 = zext i32 %2475 to i64
  %2477 = zext i32 %13 to i64
  %2478 = add nuw i32 %5, 1
  %2479 = icmp eq i32 %13, 1
  br label %2626

2480:                                             ; preds = %2466
  br i1 %2470, label %2481, label %3064

2481:                                             ; preds = %2480
  %2482 = icmp sgt i32 %13, 1
  %2483 = icmp sgt i32 %13, 0
  %2484 = add i32 %13, -2
  %2485 = zext i32 %2484 to i64
  %2486 = zext i32 %13 to i64
  %2487 = add nuw i32 %5, 1
  %2488 = icmp eq i32 %13, 1
  br label %2489

2489:                                             ; preds = %2481, %2624
  %2490 = phi double [ %2463, %2481 ], [ %2575, %2624 ]
  %2491 = phi i32 [ 0, %2481 ], [ %2576, %2624 ]
  %2492 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2482, label %2493, label %2562

2493:                                             ; preds = %2489, %2552
  %2494 = phi i32 [ %2561, %2552 ], [ 0, %2489 ]
  %2495 = phi i64 [ %2503, %2552 ], [ %2486, %2489 ]
  %2496 = phi i64 [ %2560, %2552 ], [ %2485, %2489 ]
  %2497 = phi i32 [ %2558, %2552 ], [ %2492, %2489 ]
  %2498 = sub i32 %2484, %2494
  %2499 = tail call i32 @llvm.smin.i32(i32 %2498, i32 0)
  %2500 = sub i32 %2498, %2499
  %2501 = zext i32 %2500 to i64
  %2502 = add nuw nsw i64 %2501, 1
  %2503 = add nsw i64 %2495, -1
  %2504 = icmp ult i32 %2500, 31
  br i1 %2504, label %2540, label %2505

2505:                                             ; preds = %2493
  %2506 = and i64 %2502, 8589934560
  %2507 = sub i64 %2496, %2506
  br label %2508

2508:                                             ; preds = %2508, %2505
  %2509 = phi i64 [ 0, %2505 ], [ %2532, %2508 ]
  %2510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2505 ], [ %2528, %2508 ]
  %2511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2505 ], [ %2529, %2508 ]
  %2512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2505 ], [ %2530, %2508 ]
  %2513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2505 ], [ %2531, %2508 ]
  %2514 = sub i64 %2496, %2509
  %2515 = getelementptr inbounds i32, ptr %9, i64 %2514
  %2516 = getelementptr inbounds i32, ptr %2515, i64 -7
  %2517 = load <8 x i32>, ptr %2516, align 4, !tbaa !5
  %2518 = shufflevector <8 x i32> %2517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2519 = getelementptr inbounds i32, ptr %2515, i64 -15
  %2520 = load <8 x i32>, ptr %2519, align 4, !tbaa !5
  %2521 = shufflevector <8 x i32> %2520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2522 = getelementptr inbounds i32, ptr %2515, i64 -23
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2515, i64 -31
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = mul <8 x i32> %2518, %2510
  %2529 = mul <8 x i32> %2521, %2511
  %2530 = mul <8 x i32> %2524, %2512
  %2531 = mul <8 x i32> %2527, %2513
  %2532 = add nuw i64 %2509, 32
  %2533 = icmp eq i64 %2532, %2506
  br i1 %2533, label %2534, label %2508, !llvm.loop !564

2534:                                             ; preds = %2508
  %2535 = mul <8 x i32> %2529, %2528
  %2536 = mul <8 x i32> %2530, %2535
  %2537 = mul <8 x i32> %2531, %2536
  %2538 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2537)
  %2539 = icmp eq i64 %2502, %2506
  br i1 %2539, label %2552, label %2540

2540:                                             ; preds = %2493, %2534
  %2541 = phi i64 [ %2496, %2493 ], [ %2507, %2534 ]
  %2542 = phi i32 [ 1, %2493 ], [ %2538, %2534 ]
  br label %2543

2543:                                             ; preds = %2540, %2543
  %2544 = phi i64 [ %2549, %2543 ], [ %2541, %2540 ]
  %2545 = phi i32 [ %2548, %2543 ], [ %2542, %2540 ]
  %2546 = getelementptr inbounds i32, ptr %9, i64 %2544
  %2547 = load i32, ptr %2546, align 4, !tbaa !5
  %2548 = mul nsw i32 %2547, %2545
  %2549 = add nsw i64 %2544, -1
  %2550 = trunc i64 %2544 to i32
  %2551 = icmp sgt i32 %2550, 0
  br i1 %2551, label %2543, label %2552, !llvm.loop !565

2552:                                             ; preds = %2543, %2534
  %2553 = phi i32 [ %2538, %2534 ], [ %2548, %2543 ]
  %2554 = and i64 %2503, 4294967295
  %2555 = getelementptr inbounds i32, ptr %6, i64 %2554
  %2556 = load i32, ptr %2555, align 4, !tbaa !5
  %2557 = mul nsw i32 %2556, %2553
  %2558 = add nsw i32 %2557, %2497
  %2559 = icmp sgt i64 %2495, 2
  %2560 = add nsw i64 %2496, -1
  %2561 = add i32 %2494, 1
  br i1 %2559, label %2493, label %2562, !llvm.loop !566

2562:                                             ; preds = %2552, %2489
  %2563 = phi i32 [ %2492, %2489 ], [ %2558, %2552 ]
  %2564 = sext i32 %2563 to i64
  %2565 = getelementptr inbounds double, ptr %2, i64 %2564
  %2566 = load double, ptr %2565, align 8, !tbaa !18
  %2567 = getelementptr inbounds i16, ptr %2459, i64 %2564
  %2568 = load i16, ptr %2567, align 2, !tbaa !78
  %2569 = sitofp i16 %2568 to double
  %2570 = fcmp fast one double %2566, 0.000000e+00
  %2571 = fcmp fast ogt double %2490, %2569
  %2572 = select i1 %2570, i1 %2571, i1 false
  br i1 %2572, label %2573, label %2574

2573:                                             ; preds = %2562
  store double %2569, ptr %2461, align 8, !tbaa !18
  br label %2574

2574:                                             ; preds = %2573, %2562
  %2575 = phi double [ %2569, %2573 ], [ %2490, %2562 ]
  %2576 = add nuw nsw i32 %2491, 1
  br i1 %2483, label %2577, label %2624

2577:                                             ; preds = %2574
  %2578 = load i32, ptr %4, align 4, !tbaa !5
  %2579 = load i32, ptr %12, align 4, !tbaa !5
  %2580 = add nsw i32 %2579, -1
  %2581 = icmp slt i32 %2578, %2580
  br i1 %2581, label %2601, label %2582

2582:                                             ; preds = %2577
  %2583 = icmp eq i32 %2578, %2580
  br i1 %2583, label %2584, label %2617

2584:                                             ; preds = %2582
  store i32 0, ptr %4, align 4, !tbaa !5
  %2585 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2585, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2624, label %2586

2586:                                             ; preds = %2584, %2611
  %2587 = phi i64 [ %2615, %2611 ], [ 1, %2584 ]
  %2588 = getelementptr inbounds i32, ptr %4, i64 %2587
  %2589 = load i32, ptr %2588, align 4, !tbaa !5
  %2590 = getelementptr inbounds i32, ptr %12, i64 %2587
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = add nsw i32 %2591, -1
  %2593 = icmp slt i32 %2589, %2592
  br i1 %2593, label %2594, label %2609

2594:                                             ; preds = %2586
  br i1 %2581, label %2601, label %2595

2595:                                             ; preds = %2594
  %2596 = getelementptr inbounds i32, ptr %7, i64 %2587
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2587
  %2599 = load i32, ptr %2598, align 4, !tbaa !5
  %2600 = add nsw i32 %2599, %2597
  store i32 %2600, ptr %2598, align 4, !tbaa !5
  br label %2619

2601:                                             ; preds = %2577, %2594
  %2602 = phi i32 [ %2589, %2594 ], [ %2578, %2577 ]
  %2603 = phi ptr [ %2588, %2594 ], [ %4, %2577 ]
  %2604 = phi i64 [ %2587, %2594 ], [ 0, %2577 ]
  %2605 = add nsw i32 %2602, 1
  store i32 %2605, ptr %2603, align 4, !tbaa !5
  %2606 = getelementptr inbounds i32, ptr %7, i64 %2604
  %2607 = load i32, ptr %2606, align 4, !tbaa !5
  %2608 = getelementptr inbounds i32, ptr %6, i64 %2604
  br label %2619

2609:                                             ; preds = %2586
  %2610 = icmp eq i32 %2589, %2592
  br i1 %2610, label %2611, label %2617

2611:                                             ; preds = %2609
  store i32 0, ptr %2588, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %8, i64 %2587
  %2613 = load i32, ptr %2612, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %6, i64 %2587
  store i32 %2613, ptr %2614, align 4, !tbaa !5
  %2615 = add nuw nsw i64 %2587, 1
  %2616 = icmp eq i64 %2615, %2486
  br i1 %2616, label %2624, label %2586, !llvm.loop !567

2617:                                             ; preds = %2582, %2609
  %2618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2619:                                             ; preds = %2595, %2601
  %2620 = phi ptr [ %2608, %2601 ], [ %2588, %2595 ]
  %2621 = phi i32 [ %2607, %2601 ], [ 1, %2595 ]
  %2622 = load i32, ptr %2620, align 4, !tbaa !5
  %2623 = add nsw i32 %2622, %2621
  store i32 %2623, ptr %2620, align 4, !tbaa !5
  br label %2624

2624:                                             ; preds = %2611, %2619, %2584, %2574
  %2625 = icmp eq i32 %2576, %5
  br i1 %2625, label %3064, label %2489, !llvm.loop !568

2626:                                             ; preds = %2472, %2764
  %2627 = phi double [ %2463, %2472 ], [ %2712, %2764 ]
  %2628 = phi i32 [ 0, %2472 ], [ %2713, %2764 ]
  %2629 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2473, label %2630, label %2699

2630:                                             ; preds = %2626, %2689
  %2631 = phi i32 [ %2698, %2689 ], [ 0, %2626 ]
  %2632 = phi i64 [ %2640, %2689 ], [ %2477, %2626 ]
  %2633 = phi i64 [ %2697, %2689 ], [ %2476, %2626 ]
  %2634 = phi i32 [ %2695, %2689 ], [ %2629, %2626 ]
  %2635 = sub i32 %2475, %2631
  %2636 = tail call i32 @llvm.smin.i32(i32 %2635, i32 0)
  %2637 = sub i32 %2635, %2636
  %2638 = zext i32 %2637 to i64
  %2639 = add nuw nsw i64 %2638, 1
  %2640 = add nsw i64 %2632, -1
  %2641 = icmp ult i32 %2637, 31
  br i1 %2641, label %2677, label %2642

2642:                                             ; preds = %2630
  %2643 = and i64 %2639, 8589934560
  %2644 = sub i64 %2633, %2643
  br label %2645

2645:                                             ; preds = %2645, %2642
  %2646 = phi i64 [ 0, %2642 ], [ %2669, %2645 ]
  %2647 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2642 ], [ %2665, %2645 ]
  %2648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2642 ], [ %2666, %2645 ]
  %2649 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2642 ], [ %2667, %2645 ]
  %2650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2642 ], [ %2668, %2645 ]
  %2651 = sub i64 %2633, %2646
  %2652 = getelementptr inbounds i32, ptr %11, i64 %2651
  %2653 = getelementptr inbounds i32, ptr %2652, i64 -7
  %2654 = load <8 x i32>, ptr %2653, align 4, !tbaa !5
  %2655 = shufflevector <8 x i32> %2654, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2656 = getelementptr inbounds i32, ptr %2652, i64 -15
  %2657 = load <8 x i32>, ptr %2656, align 4, !tbaa !5
  %2658 = shufflevector <8 x i32> %2657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2659 = getelementptr inbounds i32, ptr %2652, i64 -23
  %2660 = load <8 x i32>, ptr %2659, align 4, !tbaa !5
  %2661 = shufflevector <8 x i32> %2660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2662 = getelementptr inbounds i32, ptr %2652, i64 -31
  %2663 = load <8 x i32>, ptr %2662, align 4, !tbaa !5
  %2664 = shufflevector <8 x i32> %2663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2665 = mul <8 x i32> %2655, %2647
  %2666 = mul <8 x i32> %2658, %2648
  %2667 = mul <8 x i32> %2661, %2649
  %2668 = mul <8 x i32> %2664, %2650
  %2669 = add nuw i64 %2646, 32
  %2670 = icmp eq i64 %2669, %2643
  br i1 %2670, label %2671, label %2645, !llvm.loop !569

2671:                                             ; preds = %2645
  %2672 = mul <8 x i32> %2666, %2665
  %2673 = mul <8 x i32> %2667, %2672
  %2674 = mul <8 x i32> %2668, %2673
  %2675 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2674)
  %2676 = icmp eq i64 %2639, %2643
  br i1 %2676, label %2689, label %2677

2677:                                             ; preds = %2630, %2671
  %2678 = phi i64 [ %2633, %2630 ], [ %2644, %2671 ]
  %2679 = phi i32 [ 1, %2630 ], [ %2675, %2671 ]
  br label %2680

2680:                                             ; preds = %2677, %2680
  %2681 = phi i64 [ %2686, %2680 ], [ %2678, %2677 ]
  %2682 = phi i32 [ %2685, %2680 ], [ %2679, %2677 ]
  %2683 = getelementptr inbounds i32, ptr %11, i64 %2681
  %2684 = load i32, ptr %2683, align 4, !tbaa !5
  %2685 = mul nsw i32 %2684, %2682
  %2686 = add nsw i64 %2681, -1
  %2687 = trunc i64 %2681 to i32
  %2688 = icmp sgt i32 %2687, 0
  br i1 %2688, label %2680, label %2689, !llvm.loop !570

2689:                                             ; preds = %2680, %2671
  %2690 = phi i32 [ %2675, %2671 ], [ %2685, %2680 ]
  %2691 = and i64 %2640, 4294967295
  %2692 = getelementptr inbounds i32, ptr %6, i64 %2691
  %2693 = load i32, ptr %2692, align 4, !tbaa !5
  %2694 = mul nsw i32 %2693, %2690
  %2695 = add nsw i32 %2694, %2634
  %2696 = icmp sgt i64 %2632, 2
  %2697 = add nsw i64 %2633, -1
  %2698 = add i32 %2631, 1
  br i1 %2696, label %2630, label %2699, !llvm.loop !571

2699:                                             ; preds = %2689, %2626
  %2700 = phi i32 [ %2629, %2626 ], [ %2695, %2689 ]
  %2701 = icmp slt i32 %2700, %5
  br i1 %2701, label %2704, label %2702

2702:                                             ; preds = %2699
  %2703 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

2704:                                             ; preds = %2699
  %2705 = sext i32 %2700 to i64
  %2706 = getelementptr inbounds i16, ptr %2459, i64 %2705
  %2707 = load i16, ptr %2706, align 2, !tbaa !78
  %2708 = sitofp i16 %2707 to double
  %2709 = fcmp fast ogt double %2627, %2708
  br i1 %2709, label %2710, label %2711

2710:                                             ; preds = %2704
  store double %2708, ptr %2461, align 8, !tbaa !18
  br label %2711

2711:                                             ; preds = %2704, %2710
  %2712 = phi double [ %2627, %2704 ], [ %2708, %2710 ]
  %2713 = add nuw nsw i32 %2628, 1
  br i1 %2474, label %2714, label %2764

2714:                                             ; preds = %2711
  %2715 = load i32, ptr %4, align 4, !tbaa !5
  %2716 = load i32, ptr %12, align 4, !tbaa !5
  %2717 = add nsw i32 %2716, -1
  %2718 = icmp slt i32 %2715, %2717
  br i1 %2718, label %2741, label %2719

2719:                                             ; preds = %2714
  %2720 = icmp eq i32 %2715, %2717
  br i1 %2720, label %2721, label %2757

2721:                                             ; preds = %2719
  store i32 0, ptr %4, align 4, !tbaa !5
  %2722 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2722, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2764, label %2723

2723:                                             ; preds = %2721, %2751
  %2724 = phi i64 [ %2755, %2751 ], [ 1, %2721 ]
  %2725 = getelementptr inbounds i32, ptr %4, i64 %2724
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = getelementptr inbounds i32, ptr %12, i64 %2724
  %2728 = load i32, ptr %2727, align 4, !tbaa !5
  %2729 = add nsw i32 %2728, -1
  %2730 = icmp slt i32 %2726, %2729
  br i1 %2730, label %2731, label %2749

2731:                                             ; preds = %2723
  br i1 %2718, label %2741, label %2732

2732:                                             ; preds = %2731
  %2733 = shl i64 %2724, 32
  %2734 = add i64 %2733, -4294967296
  %2735 = ashr exact i64 %2734, 32
  %2736 = getelementptr inbounds i32, ptr %7, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = getelementptr inbounds i32, ptr %6, i64 %2724
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = add nsw i32 %2739, %2737
  store i32 %2740, ptr %2738, align 4, !tbaa !5
  br label %2759

2741:                                             ; preds = %2714, %2731
  %2742 = phi i32 [ %2726, %2731 ], [ %2715, %2714 ]
  %2743 = phi ptr [ %2725, %2731 ], [ %4, %2714 ]
  %2744 = phi i64 [ %2724, %2731 ], [ 0, %2714 ]
  %2745 = add nsw i32 %2742, 1
  store i32 %2745, ptr %2743, align 4, !tbaa !5
  %2746 = getelementptr inbounds i32, ptr %7, i64 %2744
  %2747 = load i32, ptr %2746, align 4, !tbaa !5
  %2748 = getelementptr inbounds i32, ptr %6, i64 %2744
  br label %2759

2749:                                             ; preds = %2723
  %2750 = icmp eq i32 %2726, %2729
  br i1 %2750, label %2751, label %2757

2751:                                             ; preds = %2749
  store i32 0, ptr %2725, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %8, i64 %2724
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = getelementptr inbounds i32, ptr %6, i64 %2724
  store i32 %2753, ptr %2754, align 4, !tbaa !5
  %2755 = add nuw nsw i64 %2724, 1
  %2756 = icmp eq i64 %2755, %2477
  br i1 %2756, label %2764, label %2723, !llvm.loop !572

2757:                                             ; preds = %2719, %2749
  %2758 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2759:                                             ; preds = %2732, %2741
  %2760 = phi ptr [ %2748, %2741 ], [ %2725, %2732 ]
  %2761 = phi i32 [ %2747, %2741 ], [ 1, %2732 ]
  %2762 = load i32, ptr %2760, align 4, !tbaa !5
  %2763 = add nsw i32 %2762, %2761
  store i32 %2763, ptr %2760, align 4, !tbaa !5
  br label %2764

2764:                                             ; preds = %2751, %2759, %2721, %2711
  %2765 = icmp eq i32 %2713, %5
  br i1 %2765, label %3064, label %2626, !llvm.loop !573

2766:                                             ; preds = %2465
  %2767 = getelementptr inbounds i32, ptr %3, i64 %19
  %2768 = load i32, ptr %2767, align 4, !tbaa !5
  %2769 = icmp eq i32 %2768, 0
  %2770 = icmp sgt i32 %5, 0
  br i1 %2769, label %2780, label %2771

2771:                                             ; preds = %2766
  br i1 %2770, label %2772, label %3064

2772:                                             ; preds = %2771
  %2773 = icmp sgt i32 %13, 1
  %2774 = icmp sgt i32 %13, 0
  %2775 = add i32 %13, -2
  %2776 = zext i32 %2775 to i64
  %2777 = zext i32 %13 to i64
  %2778 = add nuw i32 %5, 1
  %2779 = icmp eq i32 %13, 1
  br label %2922

2780:                                             ; preds = %2766
  br i1 %2770, label %2781, label %3064

2781:                                             ; preds = %2780
  %2782 = icmp sgt i32 %13, 1
  %2783 = icmp sgt i32 %13, 0
  %2784 = add i32 %13, -2
  %2785 = zext i32 %2784 to i64
  %2786 = zext i32 %13 to i64
  %2787 = add nuw i32 %5, 1
  %2788 = icmp eq i32 %13, 1
  br label %2789

2789:                                             ; preds = %2781, %2920
  %2790 = phi double [ %2463, %2781 ], [ %2871, %2920 ]
  %2791 = phi i32 [ 0, %2781 ], [ %2872, %2920 ]
  %2792 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2782, label %2793, label %2862

2793:                                             ; preds = %2789, %2852
  %2794 = phi i32 [ %2861, %2852 ], [ 0, %2789 ]
  %2795 = phi i64 [ %2803, %2852 ], [ %2786, %2789 ]
  %2796 = phi i64 [ %2860, %2852 ], [ %2785, %2789 ]
  %2797 = phi i32 [ %2858, %2852 ], [ %2792, %2789 ]
  %2798 = sub i32 %2784, %2794
  %2799 = tail call i32 @llvm.smin.i32(i32 %2798, i32 0)
  %2800 = sub i32 %2798, %2799
  %2801 = zext i32 %2800 to i64
  %2802 = add nuw nsw i64 %2801, 1
  %2803 = add nsw i64 %2795, -1
  %2804 = icmp ult i32 %2800, 31
  br i1 %2804, label %2840, label %2805

2805:                                             ; preds = %2793
  %2806 = and i64 %2802, 8589934560
  %2807 = sub i64 %2796, %2806
  br label %2808

2808:                                             ; preds = %2808, %2805
  %2809 = phi i64 [ 0, %2805 ], [ %2832, %2808 ]
  %2810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2805 ], [ %2828, %2808 ]
  %2811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2805 ], [ %2829, %2808 ]
  %2812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2805 ], [ %2830, %2808 ]
  %2813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2805 ], [ %2831, %2808 ]
  %2814 = sub i64 %2796, %2809
  %2815 = getelementptr inbounds i32, ptr %9, i64 %2814
  %2816 = getelementptr inbounds i32, ptr %2815, i64 -7
  %2817 = load <8 x i32>, ptr %2816, align 4, !tbaa !5
  %2818 = shufflevector <8 x i32> %2817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2819 = getelementptr inbounds i32, ptr %2815, i64 -15
  %2820 = load <8 x i32>, ptr %2819, align 4, !tbaa !5
  %2821 = shufflevector <8 x i32> %2820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2822 = getelementptr inbounds i32, ptr %2815, i64 -23
  %2823 = load <8 x i32>, ptr %2822, align 4, !tbaa !5
  %2824 = shufflevector <8 x i32> %2823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2825 = getelementptr inbounds i32, ptr %2815, i64 -31
  %2826 = load <8 x i32>, ptr %2825, align 4, !tbaa !5
  %2827 = shufflevector <8 x i32> %2826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2828 = mul <8 x i32> %2818, %2810
  %2829 = mul <8 x i32> %2821, %2811
  %2830 = mul <8 x i32> %2824, %2812
  %2831 = mul <8 x i32> %2827, %2813
  %2832 = add nuw i64 %2809, 32
  %2833 = icmp eq i64 %2832, %2806
  br i1 %2833, label %2834, label %2808, !llvm.loop !574

2834:                                             ; preds = %2808
  %2835 = mul <8 x i32> %2829, %2828
  %2836 = mul <8 x i32> %2830, %2835
  %2837 = mul <8 x i32> %2831, %2836
  %2838 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2837)
  %2839 = icmp eq i64 %2802, %2806
  br i1 %2839, label %2852, label %2840

2840:                                             ; preds = %2793, %2834
  %2841 = phi i64 [ %2796, %2793 ], [ %2807, %2834 ]
  %2842 = phi i32 [ 1, %2793 ], [ %2838, %2834 ]
  br label %2843

2843:                                             ; preds = %2840, %2843
  %2844 = phi i64 [ %2849, %2843 ], [ %2841, %2840 ]
  %2845 = phi i32 [ %2848, %2843 ], [ %2842, %2840 ]
  %2846 = getelementptr inbounds i32, ptr %9, i64 %2844
  %2847 = load i32, ptr %2846, align 4, !tbaa !5
  %2848 = mul nsw i32 %2847, %2845
  %2849 = add nsw i64 %2844, -1
  %2850 = trunc i64 %2844 to i32
  %2851 = icmp sgt i32 %2850, 0
  br i1 %2851, label %2843, label %2852, !llvm.loop !575

2852:                                             ; preds = %2843, %2834
  %2853 = phi i32 [ %2838, %2834 ], [ %2848, %2843 ]
  %2854 = and i64 %2803, 4294967295
  %2855 = getelementptr inbounds i32, ptr %6, i64 %2854
  %2856 = load i32, ptr %2855, align 4, !tbaa !5
  %2857 = mul nsw i32 %2856, %2853
  %2858 = add nsw i32 %2857, %2797
  %2859 = icmp sgt i64 %2795, 2
  %2860 = add nsw i64 %2796, -1
  %2861 = add i32 %2794, 1
  br i1 %2859, label %2793, label %2862, !llvm.loop !576

2862:                                             ; preds = %2852, %2789
  %2863 = phi i32 [ %2792, %2789 ], [ %2858, %2852 ]
  %2864 = sext i32 %2863 to i64
  %2865 = getelementptr inbounds i16, ptr %2459, i64 %2864
  %2866 = load i16, ptr %2865, align 2, !tbaa !78
  %2867 = sitofp i16 %2866 to double
  %2868 = fcmp fast ogt double %2790, %2867
  br i1 %2868, label %2869, label %2870

2869:                                             ; preds = %2862
  store double %2867, ptr %2461, align 8, !tbaa !18
  br label %2870

2870:                                             ; preds = %2869, %2862
  %2871 = phi double [ %2867, %2869 ], [ %2790, %2862 ]
  %2872 = add nuw nsw i32 %2791, 1
  br i1 %2783, label %2873, label %2920

2873:                                             ; preds = %2870
  %2874 = load i32, ptr %4, align 4, !tbaa !5
  %2875 = load i32, ptr %12, align 4, !tbaa !5
  %2876 = add nsw i32 %2875, -1
  %2877 = icmp slt i32 %2874, %2876
  br i1 %2877, label %2897, label %2878

2878:                                             ; preds = %2873
  %2879 = icmp eq i32 %2874, %2876
  br i1 %2879, label %2880, label %2913

2880:                                             ; preds = %2878
  store i32 0, ptr %4, align 4, !tbaa !5
  %2881 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2881, ptr %6, align 4, !tbaa !5
  br i1 %2788, label %2920, label %2882

2882:                                             ; preds = %2880, %2907
  %2883 = phi i64 [ %2911, %2907 ], [ 1, %2880 ]
  %2884 = getelementptr inbounds i32, ptr %4, i64 %2883
  %2885 = load i32, ptr %2884, align 4, !tbaa !5
  %2886 = getelementptr inbounds i32, ptr %12, i64 %2883
  %2887 = load i32, ptr %2886, align 4, !tbaa !5
  %2888 = add nsw i32 %2887, -1
  %2889 = icmp slt i32 %2885, %2888
  br i1 %2889, label %2890, label %2905

2890:                                             ; preds = %2882
  br i1 %2877, label %2897, label %2891

2891:                                             ; preds = %2890
  %2892 = getelementptr inbounds i32, ptr %7, i64 %2883
  %2893 = load i32, ptr %2892, align 4, !tbaa !5
  %2894 = getelementptr inbounds i32, ptr %6, i64 %2883
  %2895 = load i32, ptr %2894, align 4, !tbaa !5
  %2896 = add nsw i32 %2895, %2893
  store i32 %2896, ptr %2894, align 4, !tbaa !5
  br label %2915

2897:                                             ; preds = %2873, %2890
  %2898 = phi i32 [ %2885, %2890 ], [ %2874, %2873 ]
  %2899 = phi ptr [ %2884, %2890 ], [ %4, %2873 ]
  %2900 = phi i64 [ %2883, %2890 ], [ 0, %2873 ]
  %2901 = add nsw i32 %2898, 1
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  %2902 = getelementptr inbounds i32, ptr %7, i64 %2900
  %2903 = load i32, ptr %2902, align 4, !tbaa !5
  %2904 = getelementptr inbounds i32, ptr %6, i64 %2900
  br label %2915

2905:                                             ; preds = %2882
  %2906 = icmp eq i32 %2885, %2888
  br i1 %2906, label %2907, label %2913

2907:                                             ; preds = %2905
  store i32 0, ptr %2884, align 4, !tbaa !5
  %2908 = getelementptr inbounds i32, ptr %8, i64 %2883
  %2909 = load i32, ptr %2908, align 4, !tbaa !5
  %2910 = getelementptr inbounds i32, ptr %6, i64 %2883
  store i32 %2909, ptr %2910, align 4, !tbaa !5
  %2911 = add nuw nsw i64 %2883, 1
  %2912 = icmp eq i64 %2911, %2786
  br i1 %2912, label %2920, label %2882, !llvm.loop !577

2913:                                             ; preds = %2878, %2905
  %2914 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

2915:                                             ; preds = %2891, %2897
  %2916 = phi ptr [ %2904, %2897 ], [ %2884, %2891 ]
  %2917 = phi i32 [ %2903, %2897 ], [ 1, %2891 ]
  %2918 = load i32, ptr %2916, align 4, !tbaa !5
  %2919 = add nsw i32 %2918, %2917
  store i32 %2919, ptr %2916, align 4, !tbaa !5
  br label %2920

2920:                                             ; preds = %2907, %2915, %2880, %2870
  %2921 = icmp eq i32 %2872, %5
  br i1 %2921, label %3064, label %2789, !llvm.loop !578

2922:                                             ; preds = %2772, %3060
  %2923 = phi double [ %2463, %2772 ], [ %3008, %3060 ]
  %2924 = phi i32 [ 0, %2772 ], [ %3009, %3060 ]
  %2925 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2773, label %2926, label %2995

2926:                                             ; preds = %2922, %2985
  %2927 = phi i32 [ %2994, %2985 ], [ 0, %2922 ]
  %2928 = phi i64 [ %2936, %2985 ], [ %2777, %2922 ]
  %2929 = phi i64 [ %2993, %2985 ], [ %2776, %2922 ]
  %2930 = phi i32 [ %2991, %2985 ], [ %2925, %2922 ]
  %2931 = sub i32 %2775, %2927
  %2932 = tail call i32 @llvm.smin.i32(i32 %2931, i32 0)
  %2933 = sub i32 %2931, %2932
  %2934 = zext i32 %2933 to i64
  %2935 = add nuw nsw i64 %2934, 1
  %2936 = add nsw i64 %2928, -1
  %2937 = icmp ult i32 %2933, 31
  br i1 %2937, label %2973, label %2938

2938:                                             ; preds = %2926
  %2939 = and i64 %2935, 8589934560
  %2940 = sub i64 %2929, %2939
  br label %2941

2941:                                             ; preds = %2941, %2938
  %2942 = phi i64 [ 0, %2938 ], [ %2965, %2941 ]
  %2943 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2938 ], [ %2961, %2941 ]
  %2944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2938 ], [ %2962, %2941 ]
  %2945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2938 ], [ %2963, %2941 ]
  %2946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2938 ], [ %2964, %2941 ]
  %2947 = sub i64 %2929, %2942
  %2948 = getelementptr inbounds i32, ptr %11, i64 %2947
  %2949 = getelementptr inbounds i32, ptr %2948, i64 -7
  %2950 = load <8 x i32>, ptr %2949, align 4, !tbaa !5
  %2951 = shufflevector <8 x i32> %2950, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2952 = getelementptr inbounds i32, ptr %2948, i64 -15
  %2953 = load <8 x i32>, ptr %2952, align 4, !tbaa !5
  %2954 = shufflevector <8 x i32> %2953, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2955 = getelementptr inbounds i32, ptr %2948, i64 -23
  %2956 = load <8 x i32>, ptr %2955, align 4, !tbaa !5
  %2957 = shufflevector <8 x i32> %2956, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2958 = getelementptr inbounds i32, ptr %2948, i64 -31
  %2959 = load <8 x i32>, ptr %2958, align 4, !tbaa !5
  %2960 = shufflevector <8 x i32> %2959, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2961 = mul <8 x i32> %2951, %2943
  %2962 = mul <8 x i32> %2954, %2944
  %2963 = mul <8 x i32> %2957, %2945
  %2964 = mul <8 x i32> %2960, %2946
  %2965 = add nuw i64 %2942, 32
  %2966 = icmp eq i64 %2965, %2939
  br i1 %2966, label %2967, label %2941, !llvm.loop !579

2967:                                             ; preds = %2941
  %2968 = mul <8 x i32> %2962, %2961
  %2969 = mul <8 x i32> %2963, %2968
  %2970 = mul <8 x i32> %2964, %2969
  %2971 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2970)
  %2972 = icmp eq i64 %2935, %2939
  br i1 %2972, label %2985, label %2973

2973:                                             ; preds = %2926, %2967
  %2974 = phi i64 [ %2929, %2926 ], [ %2940, %2967 ]
  %2975 = phi i32 [ 1, %2926 ], [ %2971, %2967 ]
  br label %2976

2976:                                             ; preds = %2973, %2976
  %2977 = phi i64 [ %2982, %2976 ], [ %2974, %2973 ]
  %2978 = phi i32 [ %2981, %2976 ], [ %2975, %2973 ]
  %2979 = getelementptr inbounds i32, ptr %11, i64 %2977
  %2980 = load i32, ptr %2979, align 4, !tbaa !5
  %2981 = mul nsw i32 %2980, %2978
  %2982 = add nsw i64 %2977, -1
  %2983 = trunc i64 %2977 to i32
  %2984 = icmp sgt i32 %2983, 0
  br i1 %2984, label %2976, label %2985, !llvm.loop !580

2985:                                             ; preds = %2976, %2967
  %2986 = phi i32 [ %2971, %2967 ], [ %2981, %2976 ]
  %2987 = and i64 %2936, 4294967295
  %2988 = getelementptr inbounds i32, ptr %6, i64 %2987
  %2989 = load i32, ptr %2988, align 4, !tbaa !5
  %2990 = mul nsw i32 %2989, %2986
  %2991 = add nsw i32 %2990, %2930
  %2992 = icmp sgt i64 %2928, 2
  %2993 = add nsw i64 %2929, -1
  %2994 = add i32 %2927, 1
  br i1 %2992, label %2926, label %2995, !llvm.loop !581

2995:                                             ; preds = %2985, %2922
  %2996 = phi i32 [ %2925, %2922 ], [ %2991, %2985 ]
  %2997 = icmp slt i32 %2996, %5
  br i1 %2997, label %3000, label %2998

2998:                                             ; preds = %2995
  %2999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3064

3000:                                             ; preds = %2995
  %3001 = sext i32 %2996 to i64
  %3002 = getelementptr inbounds i16, ptr %2459, i64 %3001
  %3003 = load i16, ptr %3002, align 2, !tbaa !78
  %3004 = sitofp i16 %3003 to double
  %3005 = fcmp fast ogt double %2923, %3004
  br i1 %3005, label %3006, label %3007

3006:                                             ; preds = %3000
  store double %3004, ptr %2461, align 8, !tbaa !18
  br label %3007

3007:                                             ; preds = %3006, %3000
  %3008 = phi double [ %3004, %3006 ], [ %2923, %3000 ]
  %3009 = add nuw nsw i32 %2924, 1
  br i1 %2774, label %3010, label %3060

3010:                                             ; preds = %3007
  %3011 = load i32, ptr %4, align 4, !tbaa !5
  %3012 = load i32, ptr %12, align 4, !tbaa !5
  %3013 = add nsw i32 %3012, -1
  %3014 = icmp slt i32 %3011, %3013
  br i1 %3014, label %3037, label %3015

3015:                                             ; preds = %3010
  %3016 = icmp eq i32 %3011, %3013
  br i1 %3016, label %3017, label %3053

3017:                                             ; preds = %3015
  store i32 0, ptr %4, align 4, !tbaa !5
  %3018 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3018, ptr %6, align 4, !tbaa !5
  br i1 %2779, label %3060, label %3019

3019:                                             ; preds = %3017, %3047
  %3020 = phi i64 [ %3051, %3047 ], [ 1, %3017 ]
  %3021 = getelementptr inbounds i32, ptr %4, i64 %3020
  %3022 = load i32, ptr %3021, align 4, !tbaa !5
  %3023 = getelementptr inbounds i32, ptr %12, i64 %3020
  %3024 = load i32, ptr %3023, align 4, !tbaa !5
  %3025 = add nsw i32 %3024, -1
  %3026 = icmp slt i32 %3022, %3025
  br i1 %3026, label %3027, label %3045

3027:                                             ; preds = %3019
  br i1 %3014, label %3037, label %3028

3028:                                             ; preds = %3027
  %3029 = shl i64 %3020, 32
  %3030 = add i64 %3029, -4294967296
  %3031 = ashr exact i64 %3030, 32
  %3032 = getelementptr inbounds i32, ptr %7, i64 %3031
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = getelementptr inbounds i32, ptr %6, i64 %3020
  %3035 = load i32, ptr %3034, align 4, !tbaa !5
  %3036 = add nsw i32 %3035, %3033
  store i32 %3036, ptr %3034, align 4, !tbaa !5
  br label %3055

3037:                                             ; preds = %3010, %3027
  %3038 = phi i32 [ %3022, %3027 ], [ %3011, %3010 ]
  %3039 = phi ptr [ %3021, %3027 ], [ %4, %3010 ]
  %3040 = phi i64 [ %3020, %3027 ], [ 0, %3010 ]
  %3041 = add nsw i32 %3038, 1
  store i32 %3041, ptr %3039, align 4, !tbaa !5
  %3042 = getelementptr inbounds i32, ptr %7, i64 %3040
  %3043 = load i32, ptr %3042, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %6, i64 %3040
  br label %3055

3045:                                             ; preds = %3019
  %3046 = icmp eq i32 %3022, %3025
  br i1 %3046, label %3047, label %3053

3047:                                             ; preds = %3045
  store i32 0, ptr %3021, align 4, !tbaa !5
  %3048 = getelementptr inbounds i32, ptr %8, i64 %3020
  %3049 = load i32, ptr %3048, align 4, !tbaa !5
  %3050 = getelementptr inbounds i32, ptr %6, i64 %3020
  store i32 %3049, ptr %3050, align 4, !tbaa !5
  %3051 = add nuw nsw i64 %3020, 1
  %3052 = icmp eq i64 %3051, %2777
  br i1 %3052, label %3060, label %3019, !llvm.loop !582

3053:                                             ; preds = %3015, %3045
  %3054 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3064

3055:                                             ; preds = %3028, %3037
  %3056 = phi ptr [ %3044, %3037 ], [ %3021, %3028 ]
  %3057 = phi i32 [ %3043, %3037 ], [ 1, %3028 ]
  %3058 = load i32, ptr %3056, align 4, !tbaa !5
  %3059 = add nsw i32 %3058, %3057
  store i32 %3059, ptr %3056, align 4, !tbaa !5
  br label %3060

3060:                                             ; preds = %3047, %3055, %3017, %3007
  %3061 = icmp eq i32 %3009, %5
  br i1 %3061, label %3064, label %2922, !llvm.loop !583

3062:                                             ; preds = %2465
  %3063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 802, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3064

3064:                                             ; preds = %3060, %2920, %2764, %2624, %2453, %2313, %2157, %2017, %1846, %1706, %1550, %1410, %1239, %1100, %945, %806, %636, %495, %338, %197, %2771, %2780, %2471, %2480, %2164, %2173, %1864, %1873, %1557, %1566, %1257, %1266, %952, %961, %654, %663, %345, %354, %43, %52, %2457, %3062, %1850, %2455, %1243, %1848, %640, %1241, %35, %30, %638, %18, %2617, %2702, %2757, %2913, %2998, %3053, %2010, %2095, %2150, %2306, %2391, %2446, %1403, %1488, %1543, %1699, %1784, %1839, %799, %883, %938, %1093, %1177, %1232, %190, %274, %331, %488, %572, %629
  %3065 = phi i32 [ -1, %629 ], [ -1, %572 ], [ -1, %488 ], [ -1, %331 ], [ -1, %274 ], [ -1, %190 ], [ -1, %1232 ], [ -1, %1177 ], [ -1, %1093 ], [ -1, %938 ], [ -1, %883 ], [ -1, %799 ], [ -1, %1839 ], [ -1, %1784 ], [ -1, %1699 ], [ -1, %1543 ], [ -1, %1488 ], [ -1, %1403 ], [ -1, %2446 ], [ -1, %2391 ], [ -1, %2306 ], [ -1, %2150 ], [ -1, %2095 ], [ -1, %2010 ], [ -1, %3053 ], [ -1, %2998 ], [ -1, %2913 ], [ -1, %2757 ], [ -1, %2702 ], [ -1, %2617 ], [ %10, %18 ], [ 1, %638 ], [ 1, %30 ], [ 1, %35 ], [ 1, %640 ], [ 1, %1241 ], [ 1, %1243 ], [ 1, %1848 ], [ 1, %1850 ], [ 1, %2455 ], [ 1, %2457 ], [ 1, %3062 ], [ 1, %52 ], [ 1, %43 ], [ 1, %354 ], [ 1, %345 ], [ 1, %663 ], [ 1, %654 ], [ 1, %961 ], [ 1, %952 ], [ 1, %1266 ], [ 1, %1257 ], [ 1, %1566 ], [ 1, %1557 ], [ 1, %1873 ], [ 1, %1864 ], [ 1, %2173 ], [ 1, %2164 ], [ 1, %2480 ], [ 1, %2471 ], [ 1, %2780 ], [ 1, %2771 ], [ %59, %197 ], [ %50, %338 ], [ %361, %495 ], [ %352, %636 ], [ %670, %806 ], [ %661, %945 ], [ %968, %1100 ], [ %959, %1239 ], [ %1273, %1410 ], [ %1264, %1550 ], [ %1573, %1706 ], [ %1564, %1846 ], [ %1880, %2017 ], [ %1871, %2157 ], [ %2180, %2313 ], [ %2171, %2453 ], [ %2487, %2624 ], [ %2478, %2764 ], [ %2787, %2920 ], [ %2778, %3060 ]
  ret i32 %3065
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5513 [
    i32 101, label %22
    i32 102, label %640
    i32 103, label %1242
    i32 104, label %1864
    i32 105, label %2483
    i32 106, label %3085
    i32 107, label %3692
    i32 108, label %4299
    i32 109, label %4906
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i32, ptr %24, align 4, !tbaa !5
  %28 = trunc i32 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i32, ptr %24, align 4, !tbaa !5
  %32 = and i32 %27, 255
  %33 = and i32 %31, 255
  %34 = icmp ugt i32 %32, %33
  br i1 %34, label %35, label %5513

35:                                               ; preds = %30
  %36 = trunc i32 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !11
  br label %5513

37:                                               ; preds = %22
  switch i32 %1, label %638 [
    i32 1, label %38
    i32 0, label %340
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %5513

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %199

52:                                               ; preds = %38
  br i1 %42, label %53, label %5513

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %197
  %62 = phi i32 [ 0, %53 ], [ %149, %197 ]
  %63 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %54, label %64, label %133

64:                                               ; preds = %61, %123
  %65 = phi i32 [ %132, %123 ], [ 0, %61 ]
  %66 = phi i64 [ %74, %123 ], [ %58, %61 ]
  %67 = phi i64 [ %131, %123 ], [ %57, %61 ]
  %68 = phi i32 [ %129, %123 ], [ %63, %61 ]
  %69 = sub i32 %56, %65
  %70 = tail call i32 @llvm.smin.i32(i32 %69, i32 0)
  %71 = sub i32 %69, %70
  %72 = zext i32 %71 to i64
  %73 = add nuw nsw i64 %72, 1
  %74 = add nsw i64 %66, -1
  %75 = icmp ult i32 %71, 31
  br i1 %75, label %111, label %76

76:                                               ; preds = %64
  %77 = and i64 %73, 8589934560
  %78 = sub i64 %67, %77
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi i64 [ 0, %76 ], [ %103, %79 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %99, %79 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %100, %79 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %101, %79 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %76 ], [ %102, %79 ]
  %85 = sub i64 %67, %80
  %86 = getelementptr inbounds i32, ptr %9, i64 %85
  %87 = getelementptr inbounds i32, ptr %86, i64 -7
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %86, i64 -15
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %86, i64 -23
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !5
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = getelementptr inbounds i32, ptr %86, i64 -31
  %97 = load <8 x i32>, ptr %96, align 4, !tbaa !5
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %99 = mul <8 x i32> %89, %81
  %100 = mul <8 x i32> %92, %82
  %101 = mul <8 x i32> %95, %83
  %102 = mul <8 x i32> %98, %84
  %103 = add nuw i64 %80, 32
  %104 = icmp eq i64 %103, %77
  br i1 %104, label %105, label %79, !llvm.loop !584

105:                                              ; preds = %79
  %106 = mul <8 x i32> %100, %99
  %107 = mul <8 x i32> %101, %106
  %108 = mul <8 x i32> %102, %107
  %109 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %108)
  %110 = icmp eq i64 %73, %77
  br i1 %110, label %123, label %111

111:                                              ; preds = %64, %105
  %112 = phi i64 [ %67, %64 ], [ %78, %105 ]
  %113 = phi i32 [ 1, %64 ], [ %109, %105 ]
  br label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %120, %114 ], [ %112, %111 ]
  %116 = phi i32 [ %119, %114 ], [ %113, %111 ]
  %117 = getelementptr inbounds i32, ptr %9, i64 %115
  %118 = load i32, ptr %117, align 4, !tbaa !5
  %119 = mul nsw i32 %118, %116
  %120 = add nsw i64 %115, -1
  %121 = trunc i64 %115 to i32
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %114, label %123, !llvm.loop !585

123:                                              ; preds = %114, %105
  %124 = phi i32 [ %109, %105 ], [ %119, %114 ]
  %125 = and i64 %74, 4294967295
  %126 = getelementptr inbounds i32, ptr %6, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !5
  %128 = mul nsw i32 %127, %124
  %129 = add nsw i32 %128, %68
  %130 = icmp sgt i64 %66, 2
  %131 = add nsw i64 %67, -1
  %132 = add i32 %65, 1
  br i1 %130, label %64, label %133, !llvm.loop !586

133:                                              ; preds = %123, %61
  %134 = phi i32 [ %63, %61 ], [ %129, %123 ]
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds double, ptr %2, i64 %135
  %137 = load double, ptr %136, align 8, !tbaa !18
  %138 = getelementptr inbounds i32, ptr %24, i64 %135
  %139 = load i32, ptr %138, align 4, !tbaa !5
  %140 = trunc i32 %139 to i8
  %141 = fcmp fast ueq double %137, 0.000000e+00
  br i1 %141, label %148, label %142

142:                                              ; preds = %133
  %143 = load i8, ptr %26, align 1, !tbaa !11
  %144 = zext i8 %143 to i32
  %145 = and i32 %139, 255
  %146 = icmp ult i32 %145, %144
  br i1 %146, label %147, label %148

147:                                              ; preds = %142
  store i8 %140, ptr %26, align 1, !tbaa !11
  br label %148

148:                                              ; preds = %142, %147, %133
  %149 = add nuw nsw i32 %62, 1
  br i1 %55, label %150, label %197

150:                                              ; preds = %148
  %151 = load i32, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %12, align 4, !tbaa !5
  %153 = add nsw i32 %152, -1
  %154 = icmp slt i32 %151, %153
  br i1 %154, label %174, label %155

155:                                              ; preds = %150
  %156 = icmp eq i32 %151, %153
  br i1 %156, label %157, label %190

157:                                              ; preds = %155
  store i32 0, ptr %4, align 4, !tbaa !5
  %158 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %158, ptr %6, align 4, !tbaa !5
  br i1 %60, label %197, label %159

159:                                              ; preds = %157, %184
  %160 = phi i64 [ %188, %184 ], [ 1, %157 ]
  %161 = getelementptr inbounds i32, ptr %4, i64 %160
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %12, i64 %160
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, -1
  %166 = icmp slt i32 %162, %165
  br i1 %166, label %167, label %182

167:                                              ; preds = %159
  br i1 %154, label %174, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds i32, ptr %7, i64 %160
  %170 = load i32, ptr %169, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %6, i64 %160
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = add nsw i32 %172, %170
  store i32 %173, ptr %171, align 4, !tbaa !5
  br label %192

174:                                              ; preds = %150, %167
  %175 = phi i32 [ %162, %167 ], [ %151, %150 ]
  %176 = phi ptr [ %161, %167 ], [ %4, %150 ]
  %177 = phi i64 [ %160, %167 ], [ 0, %150 ]
  %178 = add nsw i32 %175, 1
  store i32 %178, ptr %176, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %7, i64 %177
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %177
  br label %192

182:                                              ; preds = %159
  %183 = icmp eq i32 %162, %165
  br i1 %183, label %184, label %190

184:                                              ; preds = %182
  store i32 0, ptr %161, align 4, !tbaa !5
  %185 = getelementptr inbounds i32, ptr %8, i64 %160
  %186 = load i32, ptr %185, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %6, i64 %160
  store i32 %186, ptr %187, align 4, !tbaa !5
  %188 = add nuw nsw i64 %160, 1
  %189 = icmp eq i64 %188, %58
  br i1 %189, label %197, label %159, !llvm.loop !587

190:                                              ; preds = %155, %182
  %191 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

192:                                              ; preds = %168, %174
  %193 = phi ptr [ %181, %174 ], [ %161, %168 ]
  %194 = phi i32 [ %180, %174 ], [ 1, %168 ]
  %195 = load i32, ptr %193, align 4, !tbaa !5
  %196 = add nsw i32 %195, %194
  store i32 %196, ptr %193, align 4, !tbaa !5
  br label %197

197:                                              ; preds = %184, %192, %157, %148
  %198 = icmp eq i32 %149, %5
  br i1 %198, label %5513, label %61, !llvm.loop !588

199:                                              ; preds = %44, %338
  %200 = phi i32 [ 0, %44 ], [ %287, %338 ]
  %201 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %45, label %202, label %271

202:                                              ; preds = %199, %261
  %203 = phi i32 [ %270, %261 ], [ 0, %199 ]
  %204 = phi i64 [ %212, %261 ], [ %49, %199 ]
  %205 = phi i64 [ %269, %261 ], [ %48, %199 ]
  %206 = phi i32 [ %267, %261 ], [ %201, %199 ]
  %207 = sub i32 %47, %203
  %208 = tail call i32 @llvm.smin.i32(i32 %207, i32 0)
  %209 = sub i32 %207, %208
  %210 = zext i32 %209 to i64
  %211 = add nuw nsw i64 %210, 1
  %212 = add nsw i64 %204, -1
  %213 = icmp ult i32 %209, 31
  br i1 %213, label %249, label %214

214:                                              ; preds = %202
  %215 = and i64 %211, 8589934560
  %216 = sub i64 %205, %215
  br label %217

217:                                              ; preds = %217, %214
  %218 = phi i64 [ 0, %214 ], [ %241, %217 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %237, %217 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %238, %217 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %239, %217 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %214 ], [ %240, %217 ]
  %223 = sub i64 %205, %218
  %224 = getelementptr inbounds i32, ptr %11, i64 %223
  %225 = getelementptr inbounds i32, ptr %224, i64 -7
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %224, i64 -15
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %224, i64 -23
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = getelementptr inbounds i32, ptr %224, i64 -31
  %235 = load <8 x i32>, ptr %234, align 4, !tbaa !5
  %236 = shufflevector <8 x i32> %235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %237 = mul <8 x i32> %227, %219
  %238 = mul <8 x i32> %230, %220
  %239 = mul <8 x i32> %233, %221
  %240 = mul <8 x i32> %236, %222
  %241 = add nuw i64 %218, 32
  %242 = icmp eq i64 %241, %215
  br i1 %242, label %243, label %217, !llvm.loop !589

243:                                              ; preds = %217
  %244 = mul <8 x i32> %238, %237
  %245 = mul <8 x i32> %239, %244
  %246 = mul <8 x i32> %240, %245
  %247 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %246)
  %248 = icmp eq i64 %211, %215
  br i1 %248, label %261, label %249

249:                                              ; preds = %202, %243
  %250 = phi i64 [ %205, %202 ], [ %216, %243 ]
  %251 = phi i32 [ 1, %202 ], [ %247, %243 ]
  br label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %258, %252 ], [ %250, %249 ]
  %254 = phi i32 [ %257, %252 ], [ %251, %249 ]
  %255 = getelementptr inbounds i32, ptr %11, i64 %253
  %256 = load i32, ptr %255, align 4, !tbaa !5
  %257 = mul nsw i32 %256, %254
  %258 = add nsw i64 %253, -1
  %259 = trunc i64 %253 to i32
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %252, label %261, !llvm.loop !590

261:                                              ; preds = %252, %243
  %262 = phi i32 [ %247, %243 ], [ %257, %252 ]
  %263 = and i64 %212, 4294967295
  %264 = getelementptr inbounds i32, ptr %6, i64 %263
  %265 = load i32, ptr %264, align 4, !tbaa !5
  %266 = mul nsw i32 %265, %262
  %267 = add nsw i32 %266, %206
  %268 = icmp sgt i64 %204, 2
  %269 = add nsw i64 %205, -1
  %270 = add i32 %203, 1
  br i1 %268, label %202, label %271, !llvm.loop !591

271:                                              ; preds = %261, %199
  %272 = phi i32 [ %201, %199 ], [ %267, %261 ]
  %273 = icmp slt i32 %272, %5
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

276:                                              ; preds = %271
  %277 = sext i32 %272 to i64
  %278 = getelementptr inbounds i32, ptr %24, i64 %277
  %279 = load i32, ptr %278, align 4, !tbaa !5
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = zext i8 %280 to i32
  %282 = and i32 %279, 255
  %283 = icmp ult i32 %282, %281
  br i1 %283, label %284, label %286

284:                                              ; preds = %276
  %285 = trunc i32 %279 to i8
  store i8 %285, ptr %26, align 1, !tbaa !11
  br label %286

286:                                              ; preds = %276, %284
  %287 = add nuw nsw i32 %200, 1
  br i1 %46, label %288, label %338

288:                                              ; preds = %286
  %289 = load i32, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %12, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %289, %291
  br i1 %292, label %315, label %293

293:                                              ; preds = %288
  %294 = icmp eq i32 %289, %291
  br i1 %294, label %295, label %331

295:                                              ; preds = %293
  store i32 0, ptr %4, align 4, !tbaa !5
  %296 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %296, ptr %6, align 4, !tbaa !5
  br i1 %51, label %338, label %297

297:                                              ; preds = %295, %325
  %298 = phi i64 [ %329, %325 ], [ 1, %295 ]
  %299 = getelementptr inbounds i32, ptr %4, i64 %298
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = getelementptr inbounds i32, ptr %12, i64 %298
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = add nsw i32 %302, -1
  %304 = icmp slt i32 %300, %303
  br i1 %304, label %305, label %323

305:                                              ; preds = %297
  br i1 %292, label %315, label %306

306:                                              ; preds = %305
  %307 = shl i64 %298, 32
  %308 = add i64 %307, -4294967296
  %309 = ashr exact i64 %308, 32
  %310 = getelementptr inbounds i32, ptr %7, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %298
  %313 = load i32, ptr %312, align 4, !tbaa !5
  %314 = add nsw i32 %313, %311
  store i32 %314, ptr %312, align 4, !tbaa !5
  br label %333

315:                                              ; preds = %288, %305
  %316 = phi i32 [ %300, %305 ], [ %289, %288 ]
  %317 = phi ptr [ %299, %305 ], [ %4, %288 ]
  %318 = phi i64 [ %298, %305 ], [ 0, %288 ]
  %319 = add nsw i32 %316, 1
  store i32 %319, ptr %317, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %7, i64 %318
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %318
  br label %333

323:                                              ; preds = %297
  %324 = icmp eq i32 %300, %303
  br i1 %324, label %325, label %331

325:                                              ; preds = %323
  store i32 0, ptr %299, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %8, i64 %298
  %327 = load i32, ptr %326, align 4, !tbaa !5
  %328 = getelementptr inbounds i32, ptr %6, i64 %298
  store i32 %327, ptr %328, align 4, !tbaa !5
  %329 = add nuw nsw i64 %298, 1
  %330 = icmp eq i64 %329, %49
  br i1 %330, label %338, label %297, !llvm.loop !592

331:                                              ; preds = %293, %323
  %332 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

333:                                              ; preds = %306, %315
  %334 = phi ptr [ %322, %315 ], [ %299, %306 ]
  %335 = phi i32 [ %321, %315 ], [ 1, %306 ]
  %336 = load i32, ptr %334, align 4, !tbaa !5
  %337 = add nsw i32 %336, %335
  store i32 %337, ptr %334, align 4, !tbaa !5
  br label %338

338:                                              ; preds = %325, %333, %295, %286
  %339 = icmp eq i32 %287, %5
  br i1 %339, label %5513, label %199, !llvm.loop !593

340:                                              ; preds = %37
  %341 = getelementptr inbounds i32, ptr %3, i64 %19
  %342 = load i32, ptr %341, align 4, !tbaa !5
  %343 = icmp eq i32 %342, 0
  %344 = icmp sgt i32 %5, 0
  br i1 %343, label %354, label %345

345:                                              ; preds = %340
  br i1 %344, label %346, label %5513

346:                                              ; preds = %345
  %347 = icmp sgt i32 %13, 1
  %348 = icmp sgt i32 %13, 0
  %349 = add i32 %13, -2
  %350 = zext i32 %349 to i64
  %351 = zext i32 %13 to i64
  %352 = add nuw i32 %5, 1
  %353 = icmp eq i32 %13, 1
  br label %497

354:                                              ; preds = %340
  br i1 %344, label %355, label %5513

355:                                              ; preds = %354
  %356 = icmp sgt i32 %13, 1
  %357 = icmp sgt i32 %13, 0
  %358 = add i32 %13, -2
  %359 = zext i32 %358 to i64
  %360 = zext i32 %13 to i64
  %361 = add nuw i32 %5, 1
  %362 = icmp eq i32 %13, 1
  br label %363

363:                                              ; preds = %355, %495
  %364 = phi i32 [ 0, %355 ], [ %447, %495 ]
  %365 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %356, label %366, label %435

366:                                              ; preds = %363, %425
  %367 = phi i32 [ %434, %425 ], [ 0, %363 ]
  %368 = phi i64 [ %376, %425 ], [ %360, %363 ]
  %369 = phi i64 [ %433, %425 ], [ %359, %363 ]
  %370 = phi i32 [ %431, %425 ], [ %365, %363 ]
  %371 = sub i32 %358, %367
  %372 = tail call i32 @llvm.smin.i32(i32 %371, i32 0)
  %373 = sub i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = add nuw nsw i64 %374, 1
  %376 = add nsw i64 %368, -1
  %377 = icmp ult i32 %373, 31
  br i1 %377, label %413, label %378

378:                                              ; preds = %366
  %379 = and i64 %375, 8589934560
  %380 = sub i64 %369, %379
  br label %381

381:                                              ; preds = %381, %378
  %382 = phi i64 [ 0, %378 ], [ %405, %381 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %401, %381 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %402, %381 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %403, %381 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %378 ], [ %404, %381 ]
  %387 = sub i64 %369, %382
  %388 = getelementptr inbounds i32, ptr %9, i64 %387
  %389 = getelementptr inbounds i32, ptr %388, i64 -7
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %388, i64 -15
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %388, i64 -23
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !5
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %388, i64 -31
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !5
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = mul <8 x i32> %391, %383
  %402 = mul <8 x i32> %394, %384
  %403 = mul <8 x i32> %397, %385
  %404 = mul <8 x i32> %400, %386
  %405 = add nuw i64 %382, 32
  %406 = icmp eq i64 %405, %379
  br i1 %406, label %407, label %381, !llvm.loop !594

407:                                              ; preds = %381
  %408 = mul <8 x i32> %402, %401
  %409 = mul <8 x i32> %403, %408
  %410 = mul <8 x i32> %404, %409
  %411 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %410)
  %412 = icmp eq i64 %375, %379
  br i1 %412, label %425, label %413

413:                                              ; preds = %366, %407
  %414 = phi i64 [ %369, %366 ], [ %380, %407 ]
  %415 = phi i32 [ 1, %366 ], [ %411, %407 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, ptr %9, i64 %417
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %418
  %422 = add nsw i64 %417, -1
  %423 = trunc i64 %417 to i32
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %416, label %425, !llvm.loop !595

425:                                              ; preds = %416, %407
  %426 = phi i32 [ %411, %407 ], [ %421, %416 ]
  %427 = and i64 %376, 4294967295
  %428 = getelementptr inbounds i32, ptr %6, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !5
  %430 = mul nsw i32 %429, %426
  %431 = add nsw i32 %430, %370
  %432 = icmp sgt i64 %368, 2
  %433 = add nsw i64 %369, -1
  %434 = add i32 %367, 1
  br i1 %432, label %366, label %435, !llvm.loop !596

435:                                              ; preds = %425, %363
  %436 = phi i32 [ %365, %363 ], [ %431, %425 ]
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i32, ptr %24, i64 %437
  %439 = load i32, ptr %438, align 4, !tbaa !5
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = zext i8 %440 to i32
  %442 = and i32 %439, 255
  %443 = icmp ult i32 %442, %441
  br i1 %443, label %444, label %446

444:                                              ; preds = %435
  %445 = trunc i32 %439 to i8
  store i8 %445, ptr %26, align 1, !tbaa !11
  br label %446

446:                                              ; preds = %444, %435
  %447 = add nuw nsw i32 %364, 1
  br i1 %357, label %448, label %495

448:                                              ; preds = %446
  %449 = load i32, ptr %4, align 4, !tbaa !5
  %450 = load i32, ptr %12, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %449, %451
  br i1 %452, label %472, label %453

453:                                              ; preds = %448
  %454 = icmp eq i32 %449, %451
  br i1 %454, label %455, label %488

455:                                              ; preds = %453
  store i32 0, ptr %4, align 4, !tbaa !5
  %456 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %456, ptr %6, align 4, !tbaa !5
  br i1 %362, label %495, label %457

457:                                              ; preds = %455, %482
  %458 = phi i64 [ %486, %482 ], [ 1, %455 ]
  %459 = getelementptr inbounds i32, ptr %4, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %12, i64 %458
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, -1
  %464 = icmp slt i32 %460, %463
  br i1 %464, label %465, label %480

465:                                              ; preds = %457
  br i1 %452, label %472, label %466

466:                                              ; preds = %465
  %467 = getelementptr inbounds i32, ptr %7, i64 %458
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %458
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = add nsw i32 %470, %468
  store i32 %471, ptr %469, align 4, !tbaa !5
  br label %490

472:                                              ; preds = %448, %465
  %473 = phi i32 [ %460, %465 ], [ %449, %448 ]
  %474 = phi ptr [ %459, %465 ], [ %4, %448 ]
  %475 = phi i64 [ %458, %465 ], [ 0, %448 ]
  %476 = add nsw i32 %473, 1
  store i32 %476, ptr %474, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %7, i64 %475
  %478 = load i32, ptr %477, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %6, i64 %475
  br label %490

480:                                              ; preds = %457
  %481 = icmp eq i32 %460, %463
  br i1 %481, label %482, label %488

482:                                              ; preds = %480
  store i32 0, ptr %459, align 4, !tbaa !5
  %483 = getelementptr inbounds i32, ptr %8, i64 %458
  %484 = load i32, ptr %483, align 4, !tbaa !5
  %485 = getelementptr inbounds i32, ptr %6, i64 %458
  store i32 %484, ptr %485, align 4, !tbaa !5
  %486 = add nuw nsw i64 %458, 1
  %487 = icmp eq i64 %486, %360
  br i1 %487, label %495, label %457, !llvm.loop !597

488:                                              ; preds = %453, %480
  %489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

490:                                              ; preds = %466, %472
  %491 = phi ptr [ %479, %472 ], [ %459, %466 ]
  %492 = phi i32 [ %478, %472 ], [ 1, %466 ]
  %493 = load i32, ptr %491, align 4, !tbaa !5
  %494 = add nsw i32 %493, %492
  store i32 %494, ptr %491, align 4, !tbaa !5
  br label %495

495:                                              ; preds = %482, %490, %455, %446
  %496 = icmp eq i32 %447, %5
  br i1 %496, label %5513, label %363, !llvm.loop !598

497:                                              ; preds = %346, %636
  %498 = phi i32 [ 0, %346 ], [ %585, %636 ]
  %499 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %347, label %500, label %569

500:                                              ; preds = %497, %559
  %501 = phi i32 [ %568, %559 ], [ 0, %497 ]
  %502 = phi i64 [ %510, %559 ], [ %351, %497 ]
  %503 = phi i64 [ %567, %559 ], [ %350, %497 ]
  %504 = phi i32 [ %565, %559 ], [ %499, %497 ]
  %505 = sub i32 %349, %501
  %506 = tail call i32 @llvm.smin.i32(i32 %505, i32 0)
  %507 = sub i32 %505, %506
  %508 = zext i32 %507 to i64
  %509 = add nuw nsw i64 %508, 1
  %510 = add nsw i64 %502, -1
  %511 = icmp ult i32 %507, 31
  br i1 %511, label %547, label %512

512:                                              ; preds = %500
  %513 = and i64 %509, 8589934560
  %514 = sub i64 %503, %513
  br label %515

515:                                              ; preds = %515, %512
  %516 = phi i64 [ 0, %512 ], [ %539, %515 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %535, %515 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %536, %515 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %537, %515 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %512 ], [ %538, %515 ]
  %521 = sub i64 %503, %516
  %522 = getelementptr inbounds i32, ptr %11, i64 %521
  %523 = getelementptr inbounds i32, ptr %522, i64 -7
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !5
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %522, i64 -15
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !5
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = getelementptr inbounds i32, ptr %522, i64 -23
  %530 = load <8 x i32>, ptr %529, align 4, !tbaa !5
  %531 = shufflevector <8 x i32> %530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %532 = getelementptr inbounds i32, ptr %522, i64 -31
  %533 = load <8 x i32>, ptr %532, align 4, !tbaa !5
  %534 = shufflevector <8 x i32> %533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %535 = mul <8 x i32> %525, %517
  %536 = mul <8 x i32> %528, %518
  %537 = mul <8 x i32> %531, %519
  %538 = mul <8 x i32> %534, %520
  %539 = add nuw i64 %516, 32
  %540 = icmp eq i64 %539, %513
  br i1 %540, label %541, label %515, !llvm.loop !599

541:                                              ; preds = %515
  %542 = mul <8 x i32> %536, %535
  %543 = mul <8 x i32> %537, %542
  %544 = mul <8 x i32> %538, %543
  %545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %544)
  %546 = icmp eq i64 %509, %513
  br i1 %546, label %559, label %547

547:                                              ; preds = %500, %541
  %548 = phi i64 [ %503, %500 ], [ %514, %541 ]
  %549 = phi i32 [ 1, %500 ], [ %545, %541 ]
  br label %550

550:                                              ; preds = %547, %550
  %551 = phi i64 [ %556, %550 ], [ %548, %547 ]
  %552 = phi i32 [ %555, %550 ], [ %549, %547 ]
  %553 = getelementptr inbounds i32, ptr %11, i64 %551
  %554 = load i32, ptr %553, align 4, !tbaa !5
  %555 = mul nsw i32 %554, %552
  %556 = add nsw i64 %551, -1
  %557 = trunc i64 %551 to i32
  %558 = icmp sgt i32 %557, 0
  br i1 %558, label %550, label %559, !llvm.loop !600

559:                                              ; preds = %550, %541
  %560 = phi i32 [ %545, %541 ], [ %555, %550 ]
  %561 = and i64 %510, 4294967295
  %562 = getelementptr inbounds i32, ptr %6, i64 %561
  %563 = load i32, ptr %562, align 4, !tbaa !5
  %564 = mul nsw i32 %563, %560
  %565 = add nsw i32 %564, %504
  %566 = icmp sgt i64 %502, 2
  %567 = add nsw i64 %503, -1
  %568 = add i32 %501, 1
  br i1 %566, label %500, label %569, !llvm.loop !601

569:                                              ; preds = %559, %497
  %570 = phi i32 [ %499, %497 ], [ %565, %559 ]
  %571 = icmp slt i32 %570, %5
  br i1 %571, label %574, label %572

572:                                              ; preds = %569
  %573 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

574:                                              ; preds = %569
  %575 = sext i32 %570 to i64
  %576 = getelementptr inbounds i32, ptr %24, i64 %575
  %577 = load i32, ptr %576, align 4, !tbaa !5
  %578 = load i8, ptr %26, align 1, !tbaa !11
  %579 = zext i8 %578 to i32
  %580 = and i32 %577, 255
  %581 = icmp ult i32 %580, %579
  br i1 %581, label %582, label %584

582:                                              ; preds = %574
  %583 = trunc i32 %577 to i8
  store i8 %583, ptr %26, align 1, !tbaa !11
  br label %584

584:                                              ; preds = %582, %574
  %585 = add nuw nsw i32 %498, 1
  br i1 %348, label %586, label %636

586:                                              ; preds = %584
  %587 = load i32, ptr %4, align 4, !tbaa !5
  %588 = load i32, ptr %12, align 4, !tbaa !5
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %587, %589
  br i1 %590, label %613, label %591

591:                                              ; preds = %586
  %592 = icmp eq i32 %587, %589
  br i1 %592, label %593, label %629

593:                                              ; preds = %591
  store i32 0, ptr %4, align 4, !tbaa !5
  %594 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %594, ptr %6, align 4, !tbaa !5
  br i1 %353, label %636, label %595

595:                                              ; preds = %593, %623
  %596 = phi i64 [ %627, %623 ], [ 1, %593 ]
  %597 = getelementptr inbounds i32, ptr %4, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %12, i64 %596
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, -1
  %602 = icmp slt i32 %598, %601
  br i1 %602, label %603, label %621

603:                                              ; preds = %595
  br i1 %590, label %613, label %604

604:                                              ; preds = %603
  %605 = shl i64 %596, 32
  %606 = add i64 %605, -4294967296
  %607 = ashr exact i64 %606, 32
  %608 = getelementptr inbounds i32, ptr %7, i64 %607
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %596
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = add nsw i32 %611, %609
  store i32 %612, ptr %610, align 4, !tbaa !5
  br label %631

613:                                              ; preds = %586, %603
  %614 = phi i32 [ %598, %603 ], [ %587, %586 ]
  %615 = phi ptr [ %597, %603 ], [ %4, %586 ]
  %616 = phi i64 [ %596, %603 ], [ 0, %586 ]
  %617 = add nsw i32 %614, 1
  store i32 %617, ptr %615, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %7, i64 %616
  %619 = load i32, ptr %618, align 4, !tbaa !5
  %620 = getelementptr inbounds i32, ptr %6, i64 %616
  br label %631

621:                                              ; preds = %595
  %622 = icmp eq i32 %598, %601
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  store i32 0, ptr %597, align 4, !tbaa !5
  %624 = getelementptr inbounds i32, ptr %8, i64 %596
  %625 = load i32, ptr %624, align 4, !tbaa !5
  %626 = getelementptr inbounds i32, ptr %6, i64 %596
  store i32 %625, ptr %626, align 4, !tbaa !5
  %627 = add nuw nsw i64 %596, 1
  %628 = icmp eq i64 %627, %351
  br i1 %628, label %636, label %595, !llvm.loop !602

629:                                              ; preds = %591, %621
  %630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

631:                                              ; preds = %604, %613
  %632 = phi ptr [ %620, %613 ], [ %597, %604 ]
  %633 = phi i32 [ %619, %613 ], [ 1, %604 ]
  %634 = load i32, ptr %632, align 4, !tbaa !5
  %635 = add nsw i32 %634, %633
  store i32 %635, ptr %632, align 4, !tbaa !5
  br label %636

636:                                              ; preds = %623, %631, %593, %584
  %637 = icmp eq i32 %585, %5
  br i1 %637, label %5513, label %497, !llvm.loop !603

638:                                              ; preds = %37
  %639 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1006, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

640:                                              ; preds = %18
  %641 = getelementptr inbounds ptr, ptr %14, i64 %19
  %642 = load ptr, ptr %641, align 8, !tbaa !9
  %643 = getelementptr inbounds ptr, ptr %16, i64 %19
  %644 = load ptr, ptr %643, align 8, !tbaa !9
  %645 = load i32, ptr %642, align 4, !tbaa !5
  store i32 %645, ptr %644, align 4, !tbaa !5
  %646 = icmp eq i32 %13, 0
  br i1 %646, label %647, label %651

647:                                              ; preds = %640
  %648 = load i32, ptr %642, align 4, !tbaa !5
  %649 = icmp sgt i32 %645, %648
  br i1 %649, label %650, label %5513

650:                                              ; preds = %647
  store i32 %648, ptr %644, align 4, !tbaa !5
  br label %5513

651:                                              ; preds = %640
  switch i32 %1, label %1240 [
    i32 1, label %652
    i32 0, label %948
  ]

652:                                              ; preds = %651
  %653 = getelementptr inbounds i32, ptr %3, i64 %19
  %654 = load i32, ptr %653, align 4, !tbaa !5
  %655 = icmp eq i32 %654, 0
  %656 = icmp sgt i32 %5, 0
  br i1 %655, label %666, label %657

657:                                              ; preds = %652
  br i1 %656, label %658, label %5513

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %810

666:                                              ; preds = %652
  br i1 %656, label %667, label %5513

667:                                              ; preds = %666
  %668 = icmp sgt i32 %13, 1
  %669 = icmp sgt i32 %13, 0
  %670 = add i32 %13, -2
  %671 = zext i32 %670 to i64
  %672 = zext i32 %13 to i64
  %673 = add nuw i32 %5, 1
  %674 = icmp eq i32 %13, 1
  br label %675

675:                                              ; preds = %667, %808
  %676 = phi i32 [ 0, %667 ], [ %760, %808 ]
  %677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %668, label %678, label %747

678:                                              ; preds = %675, %737
  %679 = phi i32 [ %746, %737 ], [ 0, %675 ]
  %680 = phi i64 [ %688, %737 ], [ %672, %675 ]
  %681 = phi i64 [ %745, %737 ], [ %671, %675 ]
  %682 = phi i32 [ %743, %737 ], [ %677, %675 ]
  %683 = sub i32 %670, %679
  %684 = tail call i32 @llvm.smin.i32(i32 %683, i32 0)
  %685 = sub i32 %683, %684
  %686 = zext i32 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = add nsw i64 %680, -1
  %689 = icmp ult i32 %685, 31
  br i1 %689, label %725, label %690

690:                                              ; preds = %678
  %691 = and i64 %687, 8589934560
  %692 = sub i64 %681, %691
  br label %693

693:                                              ; preds = %693, %690
  %694 = phi i64 [ 0, %690 ], [ %717, %693 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %713, %693 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %714, %693 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %715, %693 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %716, %693 ]
  %699 = sub i64 %681, %694
  %700 = getelementptr inbounds i32, ptr %9, i64 %699
  %701 = getelementptr inbounds i32, ptr %700, i64 -7
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %700, i64 -15
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %700, i64 -23
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %700, i64 -31
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !5
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = mul <8 x i32> %703, %695
  %714 = mul <8 x i32> %706, %696
  %715 = mul <8 x i32> %709, %697
  %716 = mul <8 x i32> %712, %698
  %717 = add nuw i64 %694, 32
  %718 = icmp eq i64 %717, %691
  br i1 %718, label %719, label %693, !llvm.loop !604

719:                                              ; preds = %693
  %720 = mul <8 x i32> %714, %713
  %721 = mul <8 x i32> %715, %720
  %722 = mul <8 x i32> %716, %721
  %723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %722)
  %724 = icmp eq i64 %687, %691
  br i1 %724, label %737, label %725

725:                                              ; preds = %678, %719
  %726 = phi i64 [ %681, %678 ], [ %692, %719 ]
  %727 = phi i32 [ 1, %678 ], [ %723, %719 ]
  br label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %734, %728 ], [ %726, %725 ]
  %730 = phi i32 [ %733, %728 ], [ %727, %725 ]
  %731 = getelementptr inbounds i32, ptr %9, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %730
  %734 = add nsw i64 %729, -1
  %735 = trunc i64 %729 to i32
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %728, label %737, !llvm.loop !605

737:                                              ; preds = %728, %719
  %738 = phi i32 [ %723, %719 ], [ %733, %728 ]
  %739 = and i64 %688, 4294967295
  %740 = getelementptr inbounds i32, ptr %6, i64 %739
  %741 = load i32, ptr %740, align 4, !tbaa !5
  %742 = mul nsw i32 %741, %738
  %743 = add nsw i32 %742, %682
  %744 = icmp sgt i64 %680, 2
  %745 = add nsw i64 %681, -1
  %746 = add i32 %679, 1
  br i1 %744, label %678, label %747, !llvm.loop !606

747:                                              ; preds = %737, %675
  %748 = phi i32 [ %677, %675 ], [ %743, %737 ]
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %2, i64 %749
  %751 = load double, ptr %750, align 8, !tbaa !18
  %752 = getelementptr inbounds i32, ptr %642, i64 %749
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = fcmp fast ueq double %751, 0.000000e+00
  br i1 %754, label %759, label %755

755:                                              ; preds = %747
  %756 = load i32, ptr %644, align 4, !tbaa !5
  %757 = icmp sgt i32 %756, %753
  br i1 %757, label %758, label %759

758:                                              ; preds = %755
  store i32 %753, ptr %644, align 4, !tbaa !5
  br label %759

759:                                              ; preds = %755, %758, %747
  %760 = add nuw nsw i32 %676, 1
  br i1 %669, label %761, label %808

761:                                              ; preds = %759
  %762 = load i32, ptr %4, align 4, !tbaa !5
  %763 = load i32, ptr %12, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %762, %764
  br i1 %765, label %785, label %766

766:                                              ; preds = %761
  %767 = icmp eq i32 %762, %764
  br i1 %767, label %768, label %801

768:                                              ; preds = %766
  store i32 0, ptr %4, align 4, !tbaa !5
  %769 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %769, ptr %6, align 4, !tbaa !5
  br i1 %674, label %808, label %770

770:                                              ; preds = %768, %795
  %771 = phi i64 [ %799, %795 ], [ 1, %768 ]
  %772 = getelementptr inbounds i32, ptr %4, i64 %771
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %12, i64 %771
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, -1
  %777 = icmp slt i32 %773, %776
  br i1 %777, label %778, label %793

778:                                              ; preds = %770
  br i1 %765, label %785, label %779

779:                                              ; preds = %778
  %780 = getelementptr inbounds i32, ptr %7, i64 %771
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %6, i64 %771
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = add nsw i32 %783, %781
  store i32 %784, ptr %782, align 4, !tbaa !5
  br label %803

785:                                              ; preds = %761, %778
  %786 = phi i32 [ %773, %778 ], [ %762, %761 ]
  %787 = phi ptr [ %772, %778 ], [ %4, %761 ]
  %788 = phi i64 [ %771, %778 ], [ 0, %761 ]
  %789 = add nsw i32 %786, 1
  store i32 %789, ptr %787, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %7, i64 %788
  %791 = load i32, ptr %790, align 4, !tbaa !5
  %792 = getelementptr inbounds i32, ptr %6, i64 %788
  br label %803

793:                                              ; preds = %770
  %794 = icmp eq i32 %773, %776
  br i1 %794, label %795, label %801

795:                                              ; preds = %793
  store i32 0, ptr %772, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %8, i64 %771
  %797 = load i32, ptr %796, align 4, !tbaa !5
  %798 = getelementptr inbounds i32, ptr %6, i64 %771
  store i32 %797, ptr %798, align 4, !tbaa !5
  %799 = add nuw nsw i64 %771, 1
  %800 = icmp eq i64 %799, %672
  br i1 %800, label %808, label %770, !llvm.loop !607

801:                                              ; preds = %766, %793
  %802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

803:                                              ; preds = %779, %785
  %804 = phi ptr [ %792, %785 ], [ %772, %779 ]
  %805 = phi i32 [ %791, %785 ], [ 1, %779 ]
  %806 = load i32, ptr %804, align 4, !tbaa !5
  %807 = add nsw i32 %806, %805
  store i32 %807, ptr %804, align 4, !tbaa !5
  br label %808

808:                                              ; preds = %795, %803, %768, %759
  %809 = icmp eq i32 %760, %5
  br i1 %809, label %5513, label %675, !llvm.loop !608

810:                                              ; preds = %658, %946
  %811 = phi i32 [ 0, %658 ], [ %895, %946 ]
  %812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %659, label %813, label %882

813:                                              ; preds = %810, %872
  %814 = phi i32 [ %881, %872 ], [ 0, %810 ]
  %815 = phi i64 [ %823, %872 ], [ %663, %810 ]
  %816 = phi i64 [ %880, %872 ], [ %662, %810 ]
  %817 = phi i32 [ %878, %872 ], [ %812, %810 ]
  %818 = sub i32 %661, %814
  %819 = tail call i32 @llvm.smin.i32(i32 %818, i32 0)
  %820 = sub i32 %818, %819
  %821 = zext i32 %820 to i64
  %822 = add nuw nsw i64 %821, 1
  %823 = add nsw i64 %815, -1
  %824 = icmp ult i32 %820, 31
  br i1 %824, label %860, label %825

825:                                              ; preds = %813
  %826 = and i64 %822, 8589934560
  %827 = sub i64 %816, %826
  br label %828

828:                                              ; preds = %828, %825
  %829 = phi i64 [ 0, %825 ], [ %852, %828 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %848, %828 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %849, %828 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %850, %828 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %825 ], [ %851, %828 ]
  %834 = sub i64 %816, %829
  %835 = getelementptr inbounds i32, ptr %11, i64 %834
  %836 = getelementptr inbounds i32, ptr %835, i64 -7
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !5
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %835, i64 -15
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !5
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %835, i64 -23
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %835, i64 -31
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !5
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = mul <8 x i32> %838, %830
  %849 = mul <8 x i32> %841, %831
  %850 = mul <8 x i32> %844, %832
  %851 = mul <8 x i32> %847, %833
  %852 = add nuw i64 %829, 32
  %853 = icmp eq i64 %852, %826
  br i1 %853, label %854, label %828, !llvm.loop !609

854:                                              ; preds = %828
  %855 = mul <8 x i32> %849, %848
  %856 = mul <8 x i32> %850, %855
  %857 = mul <8 x i32> %851, %856
  %858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %857)
  %859 = icmp eq i64 %822, %826
  br i1 %859, label %872, label %860

860:                                              ; preds = %813, %854
  %861 = phi i64 [ %816, %813 ], [ %827, %854 ]
  %862 = phi i32 [ 1, %813 ], [ %858, %854 ]
  br label %863

863:                                              ; preds = %860, %863
  %864 = phi i64 [ %869, %863 ], [ %861, %860 ]
  %865 = phi i32 [ %868, %863 ], [ %862, %860 ]
  %866 = getelementptr inbounds i32, ptr %11, i64 %864
  %867 = load i32, ptr %866, align 4, !tbaa !5
  %868 = mul nsw i32 %867, %865
  %869 = add nsw i64 %864, -1
  %870 = trunc i64 %864 to i32
  %871 = icmp sgt i32 %870, 0
  br i1 %871, label %863, label %872, !llvm.loop !610

872:                                              ; preds = %863, %854
  %873 = phi i32 [ %858, %854 ], [ %868, %863 ]
  %874 = and i64 %823, 4294967295
  %875 = getelementptr inbounds i32, ptr %6, i64 %874
  %876 = load i32, ptr %875, align 4, !tbaa !5
  %877 = mul nsw i32 %876, %873
  %878 = add nsw i32 %877, %817
  %879 = icmp sgt i64 %815, 2
  %880 = add nsw i64 %816, -1
  %881 = add i32 %814, 1
  br i1 %879, label %813, label %882, !llvm.loop !611

882:                                              ; preds = %872, %810
  %883 = phi i32 [ %812, %810 ], [ %878, %872 ]
  %884 = icmp slt i32 %883, %5
  br i1 %884, label %887, label %885

885:                                              ; preds = %882
  %886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

887:                                              ; preds = %882
  %888 = sext i32 %883 to i64
  %889 = getelementptr inbounds i32, ptr %642, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !5
  %891 = load i32, ptr %644, align 4, !tbaa !5
  %892 = icmp sgt i32 %891, %890
  br i1 %892, label %893, label %894

893:                                              ; preds = %887
  store i32 %890, ptr %644, align 4, !tbaa !5
  br label %894

894:                                              ; preds = %887, %893
  %895 = add nuw nsw i32 %811, 1
  br i1 %660, label %896, label %946

896:                                              ; preds = %894
  %897 = load i32, ptr %4, align 4, !tbaa !5
  %898 = load i32, ptr %12, align 4, !tbaa !5
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %897, %899
  br i1 %900, label %923, label %901

901:                                              ; preds = %896
  %902 = icmp eq i32 %897, %899
  br i1 %902, label %903, label %939

903:                                              ; preds = %901
  store i32 0, ptr %4, align 4, !tbaa !5
  %904 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %904, ptr %6, align 4, !tbaa !5
  br i1 %665, label %946, label %905

905:                                              ; preds = %903, %933
  %906 = phi i64 [ %937, %933 ], [ 1, %903 ]
  %907 = getelementptr inbounds i32, ptr %4, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %12, i64 %906
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, -1
  %912 = icmp slt i32 %908, %911
  br i1 %912, label %913, label %931

913:                                              ; preds = %905
  br i1 %900, label %923, label %914

914:                                              ; preds = %913
  %915 = shl i64 %906, 32
  %916 = add i64 %915, -4294967296
  %917 = ashr exact i64 %916, 32
  %918 = getelementptr inbounds i32, ptr %7, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %906
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = add nsw i32 %921, %919
  store i32 %922, ptr %920, align 4, !tbaa !5
  br label %941

923:                                              ; preds = %896, %913
  %924 = phi i32 [ %908, %913 ], [ %897, %896 ]
  %925 = phi ptr [ %907, %913 ], [ %4, %896 ]
  %926 = phi i64 [ %906, %913 ], [ 0, %896 ]
  %927 = add nsw i32 %924, 1
  store i32 %927, ptr %925, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %7, i64 %926
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %6, i64 %926
  br label %941

931:                                              ; preds = %905
  %932 = icmp eq i32 %908, %911
  br i1 %932, label %933, label %939

933:                                              ; preds = %931
  store i32 0, ptr %907, align 4, !tbaa !5
  %934 = getelementptr inbounds i32, ptr %8, i64 %906
  %935 = load i32, ptr %934, align 4, !tbaa !5
  %936 = getelementptr inbounds i32, ptr %6, i64 %906
  store i32 %935, ptr %936, align 4, !tbaa !5
  %937 = add nuw nsw i64 %906, 1
  %938 = icmp eq i64 %937, %663
  br i1 %938, label %946, label %905, !llvm.loop !612

939:                                              ; preds = %901, %931
  %940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

941:                                              ; preds = %914, %923
  %942 = phi ptr [ %930, %923 ], [ %907, %914 ]
  %943 = phi i32 [ %929, %923 ], [ 1, %914 ]
  %944 = load i32, ptr %942, align 4, !tbaa !5
  %945 = add nsw i32 %944, %943
  store i32 %945, ptr %942, align 4, !tbaa !5
  br label %946

946:                                              ; preds = %933, %941, %903, %894
  %947 = icmp eq i32 %895, %5
  br i1 %947, label %5513, label %810, !llvm.loop !613

948:                                              ; preds = %651
  %949 = getelementptr inbounds i32, ptr %3, i64 %19
  %950 = load i32, ptr %949, align 4, !tbaa !5
  %951 = icmp eq i32 %950, 0
  %952 = icmp sgt i32 %5, 0
  br i1 %951, label %962, label %953

953:                                              ; preds = %948
  br i1 %952, label %954, label %5513

954:                                              ; preds = %953
  %955 = icmp sgt i32 %13, 1
  %956 = icmp sgt i32 %13, 0
  %957 = add i32 %13, -2
  %958 = zext i32 %957 to i64
  %959 = zext i32 %13 to i64
  %960 = add nuw i32 %5, 1
  %961 = icmp eq i32 %13, 1
  br label %1102

962:                                              ; preds = %948
  br i1 %952, label %963, label %5513

963:                                              ; preds = %962
  %964 = icmp sgt i32 %13, 1
  %965 = icmp sgt i32 %13, 0
  %966 = add i32 %13, -2
  %967 = zext i32 %966 to i64
  %968 = zext i32 %13 to i64
  %969 = add nuw i32 %5, 1
  %970 = icmp eq i32 %13, 1
  br label %971

971:                                              ; preds = %963, %1100
  %972 = phi i32 [ 0, %963 ], [ %1052, %1100 ]
  %973 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %964, label %974, label %1043

974:                                              ; preds = %971, %1033
  %975 = phi i32 [ %1042, %1033 ], [ 0, %971 ]
  %976 = phi i64 [ %984, %1033 ], [ %968, %971 ]
  %977 = phi i64 [ %1041, %1033 ], [ %967, %971 ]
  %978 = phi i32 [ %1039, %1033 ], [ %973, %971 ]
  %979 = sub i32 %966, %975
  %980 = tail call i32 @llvm.smin.i32(i32 %979, i32 0)
  %981 = sub i32 %979, %980
  %982 = zext i32 %981 to i64
  %983 = add nuw nsw i64 %982, 1
  %984 = add nsw i64 %976, -1
  %985 = icmp ult i32 %981, 31
  br i1 %985, label %1021, label %986

986:                                              ; preds = %974
  %987 = and i64 %983, 8589934560
  %988 = sub i64 %977, %987
  br label %989

989:                                              ; preds = %989, %986
  %990 = phi i64 [ 0, %986 ], [ %1013, %989 ]
  %991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1009, %989 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1010, %989 ]
  %993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1011, %989 ]
  %994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %986 ], [ %1012, %989 ]
  %995 = sub i64 %977, %990
  %996 = getelementptr inbounds i32, ptr %9, i64 %995
  %997 = getelementptr inbounds i32, ptr %996, i64 -7
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %996, i64 -15
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = getelementptr inbounds i32, ptr %996, i64 -23
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !5
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %996, i64 -31
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !5
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = mul <8 x i32> %999, %991
  %1010 = mul <8 x i32> %1002, %992
  %1011 = mul <8 x i32> %1005, %993
  %1012 = mul <8 x i32> %1008, %994
  %1013 = add nuw i64 %990, 32
  %1014 = icmp eq i64 %1013, %987
  br i1 %1014, label %1015, label %989, !llvm.loop !614

1015:                                             ; preds = %989
  %1016 = mul <8 x i32> %1010, %1009
  %1017 = mul <8 x i32> %1011, %1016
  %1018 = mul <8 x i32> %1012, %1017
  %1019 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1018)
  %1020 = icmp eq i64 %983, %987
  br i1 %1020, label %1033, label %1021

1021:                                             ; preds = %974, %1015
  %1022 = phi i64 [ %977, %974 ], [ %988, %1015 ]
  %1023 = phi i32 [ 1, %974 ], [ %1019, %1015 ]
  br label %1024

1024:                                             ; preds = %1021, %1024
  %1025 = phi i64 [ %1030, %1024 ], [ %1022, %1021 ]
  %1026 = phi i32 [ %1029, %1024 ], [ %1023, %1021 ]
  %1027 = getelementptr inbounds i32, ptr %9, i64 %1025
  %1028 = load i32, ptr %1027, align 4, !tbaa !5
  %1029 = mul nsw i32 %1028, %1026
  %1030 = add nsw i64 %1025, -1
  %1031 = trunc i64 %1025 to i32
  %1032 = icmp sgt i32 %1031, 0
  br i1 %1032, label %1024, label %1033, !llvm.loop !615

1033:                                             ; preds = %1024, %1015
  %1034 = phi i32 [ %1019, %1015 ], [ %1029, %1024 ]
  %1035 = and i64 %984, 4294967295
  %1036 = getelementptr inbounds i32, ptr %6, i64 %1035
  %1037 = load i32, ptr %1036, align 4, !tbaa !5
  %1038 = mul nsw i32 %1037, %1034
  %1039 = add nsw i32 %1038, %978
  %1040 = icmp sgt i64 %976, 2
  %1041 = add nsw i64 %977, -1
  %1042 = add i32 %975, 1
  br i1 %1040, label %974, label %1043, !llvm.loop !616

1043:                                             ; preds = %1033, %971
  %1044 = phi i32 [ %973, %971 ], [ %1039, %1033 ]
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds i32, ptr %642, i64 %1045
  %1047 = load i32, ptr %1046, align 4, !tbaa !5
  %1048 = load i32, ptr %644, align 4, !tbaa !5
  %1049 = icmp sgt i32 %1048, %1047
  br i1 %1049, label %1050, label %1051

1050:                                             ; preds = %1043
  store i32 %1047, ptr %644, align 4, !tbaa !5
  br label %1051

1051:                                             ; preds = %1050, %1043
  %1052 = add nuw nsw i32 %972, 1
  br i1 %965, label %1053, label %1100

1053:                                             ; preds = %1051
  %1054 = load i32, ptr %4, align 4, !tbaa !5
  %1055 = load i32, ptr %12, align 4, !tbaa !5
  %1056 = add nsw i32 %1055, -1
  %1057 = icmp slt i32 %1054, %1056
  br i1 %1057, label %1077, label %1058

1058:                                             ; preds = %1053
  %1059 = icmp eq i32 %1054, %1056
  br i1 %1059, label %1060, label %1093

1060:                                             ; preds = %1058
  store i32 0, ptr %4, align 4, !tbaa !5
  %1061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1061, ptr %6, align 4, !tbaa !5
  br i1 %970, label %1100, label %1062

1062:                                             ; preds = %1060, %1087
  %1063 = phi i64 [ %1091, %1087 ], [ 1, %1060 ]
  %1064 = getelementptr inbounds i32, ptr %4, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %12, i64 %1063
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1065, %1068
  br i1 %1069, label %1070, label %1085

1070:                                             ; preds = %1062
  br i1 %1057, label %1077, label %1071

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1063
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1063
  %1075 = load i32, ptr %1074, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1073
  store i32 %1076, ptr %1074, align 4, !tbaa !5
  br label %1095

1077:                                             ; preds = %1053, %1070
  %1078 = phi i32 [ %1065, %1070 ], [ %1054, %1053 ]
  %1079 = phi ptr [ %1064, %1070 ], [ %4, %1053 ]
  %1080 = phi i64 [ %1063, %1070 ], [ 0, %1053 ]
  %1081 = add nsw i32 %1078, 1
  store i32 %1081, ptr %1079, align 4, !tbaa !5
  %1082 = getelementptr inbounds i32, ptr %7, i64 %1080
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1080
  br label %1095

1085:                                             ; preds = %1062
  %1086 = icmp eq i32 %1065, %1068
  br i1 %1086, label %1087, label %1093

1087:                                             ; preds = %1085
  store i32 0, ptr %1064, align 4, !tbaa !5
  %1088 = getelementptr inbounds i32, ptr %8, i64 %1063
  %1089 = load i32, ptr %1088, align 4, !tbaa !5
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1063
  store i32 %1089, ptr %1090, align 4, !tbaa !5
  %1091 = add nuw nsw i64 %1063, 1
  %1092 = icmp eq i64 %1091, %968
  br i1 %1092, label %1100, label %1062, !llvm.loop !617

1093:                                             ; preds = %1058, %1085
  %1094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1095:                                             ; preds = %1071, %1077
  %1096 = phi ptr [ %1084, %1077 ], [ %1064, %1071 ]
  %1097 = phi i32 [ %1083, %1077 ], [ 1, %1071 ]
  %1098 = load i32, ptr %1096, align 4, !tbaa !5
  %1099 = add nsw i32 %1098, %1097
  store i32 %1099, ptr %1096, align 4, !tbaa !5
  br label %1100

1100:                                             ; preds = %1087, %1095, %1060, %1051
  %1101 = icmp eq i32 %1052, %5
  br i1 %1101, label %5513, label %971, !llvm.loop !618

1102:                                             ; preds = %954, %1238
  %1103 = phi i32 [ 0, %954 ], [ %1187, %1238 ]
  %1104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1105, label %1174

1105:                                             ; preds = %1102, %1164
  %1106 = phi i32 [ %1173, %1164 ], [ 0, %1102 ]
  %1107 = phi i64 [ %1115, %1164 ], [ %959, %1102 ]
  %1108 = phi i64 [ %1172, %1164 ], [ %958, %1102 ]
  %1109 = phi i32 [ %1170, %1164 ], [ %1104, %1102 ]
  %1110 = sub i32 %957, %1106
  %1111 = tail call i32 @llvm.smin.i32(i32 %1110, i32 0)
  %1112 = sub i32 %1110, %1111
  %1113 = zext i32 %1112 to i64
  %1114 = add nuw nsw i64 %1113, 1
  %1115 = add nsw i64 %1107, -1
  %1116 = icmp ult i32 %1112, 31
  br i1 %1116, label %1152, label %1117

1117:                                             ; preds = %1105
  %1118 = and i64 %1114, 8589934560
  %1119 = sub i64 %1108, %1118
  br label %1120

1120:                                             ; preds = %1120, %1117
  %1121 = phi i64 [ 0, %1117 ], [ %1144, %1120 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1140, %1120 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1141, %1120 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1142, %1120 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1117 ], [ %1143, %1120 ]
  %1126 = sub i64 %1108, %1121
  %1127 = getelementptr inbounds i32, ptr %11, i64 %1126
  %1128 = getelementptr inbounds i32, ptr %1127, i64 -7
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1127, i64 -15
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1127, i64 -23
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1127, i64 -31
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = mul <8 x i32> %1130, %1122
  %1141 = mul <8 x i32> %1133, %1123
  %1142 = mul <8 x i32> %1136, %1124
  %1143 = mul <8 x i32> %1139, %1125
  %1144 = add nuw i64 %1121, 32
  %1145 = icmp eq i64 %1144, %1118
  br i1 %1145, label %1146, label %1120, !llvm.loop !619

1146:                                             ; preds = %1120
  %1147 = mul <8 x i32> %1141, %1140
  %1148 = mul <8 x i32> %1142, %1147
  %1149 = mul <8 x i32> %1143, %1148
  %1150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1149)
  %1151 = icmp eq i64 %1114, %1118
  br i1 %1151, label %1164, label %1152

1152:                                             ; preds = %1105, %1146
  %1153 = phi i64 [ %1108, %1105 ], [ %1119, %1146 ]
  %1154 = phi i32 [ 1, %1105 ], [ %1150, %1146 ]
  br label %1155

1155:                                             ; preds = %1152, %1155
  %1156 = phi i64 [ %1161, %1155 ], [ %1153, %1152 ]
  %1157 = phi i32 [ %1160, %1155 ], [ %1154, %1152 ]
  %1158 = getelementptr inbounds i32, ptr %11, i64 %1156
  %1159 = load i32, ptr %1158, align 4, !tbaa !5
  %1160 = mul nsw i32 %1159, %1157
  %1161 = add nsw i64 %1156, -1
  %1162 = trunc i64 %1156 to i32
  %1163 = icmp sgt i32 %1162, 0
  br i1 %1163, label %1155, label %1164, !llvm.loop !620

1164:                                             ; preds = %1155, %1146
  %1165 = phi i32 [ %1150, %1146 ], [ %1160, %1155 ]
  %1166 = and i64 %1115, 4294967295
  %1167 = getelementptr inbounds i32, ptr %6, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1165
  %1170 = add nsw i32 %1169, %1109
  %1171 = icmp sgt i64 %1107, 2
  %1172 = add nsw i64 %1108, -1
  %1173 = add i32 %1106, 1
  br i1 %1171, label %1105, label %1174, !llvm.loop !621

1174:                                             ; preds = %1164, %1102
  %1175 = phi i32 [ %1104, %1102 ], [ %1170, %1164 ]
  %1176 = icmp slt i32 %1175, %5
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1174
  %1178 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1179:                                             ; preds = %1174
  %1180 = sext i32 %1175 to i64
  %1181 = getelementptr inbounds i32, ptr %642, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !5
  %1183 = load i32, ptr %644, align 4, !tbaa !5
  %1184 = icmp sgt i32 %1183, %1182
  br i1 %1184, label %1185, label %1186

1185:                                             ; preds = %1179
  store i32 %1182, ptr %644, align 4, !tbaa !5
  br label %1186

1186:                                             ; preds = %1185, %1179
  %1187 = add nuw nsw i32 %1103, 1
  br i1 %956, label %1188, label %1238

1188:                                             ; preds = %1186
  %1189 = load i32, ptr %4, align 4, !tbaa !5
  %1190 = load i32, ptr %12, align 4, !tbaa !5
  %1191 = add nsw i32 %1190, -1
  %1192 = icmp slt i32 %1189, %1191
  br i1 %1192, label %1215, label %1193

1193:                                             ; preds = %1188
  %1194 = icmp eq i32 %1189, %1191
  br i1 %1194, label %1195, label %1231

1195:                                             ; preds = %1193
  store i32 0, ptr %4, align 4, !tbaa !5
  %1196 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1196, ptr %6, align 4, !tbaa !5
  br i1 %961, label %1238, label %1197

1197:                                             ; preds = %1195, %1225
  %1198 = phi i64 [ %1229, %1225 ], [ 1, %1195 ]
  %1199 = getelementptr inbounds i32, ptr %4, i64 %1198
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %12, i64 %1198
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = add nsw i32 %1202, -1
  %1204 = icmp slt i32 %1200, %1203
  br i1 %1204, label %1205, label %1223

1205:                                             ; preds = %1197
  br i1 %1192, label %1215, label %1206

1206:                                             ; preds = %1205
  %1207 = shl i64 %1198, 32
  %1208 = add i64 %1207, -4294967296
  %1209 = ashr exact i64 %1208, 32
  %1210 = getelementptr inbounds i32, ptr %7, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %6, i64 %1198
  %1213 = load i32, ptr %1212, align 4, !tbaa !5
  %1214 = add nsw i32 %1213, %1211
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  br label %1233

1215:                                             ; preds = %1188, %1205
  %1216 = phi i32 [ %1200, %1205 ], [ %1189, %1188 ]
  %1217 = phi ptr [ %1199, %1205 ], [ %4, %1188 ]
  %1218 = phi i64 [ %1198, %1205 ], [ 0, %1188 ]
  %1219 = add nsw i32 %1216, 1
  store i32 %1219, ptr %1217, align 4, !tbaa !5
  %1220 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1221 = load i32, ptr %1220, align 4, !tbaa !5
  %1222 = getelementptr inbounds i32, ptr %6, i64 %1218
  br label %1233

1223:                                             ; preds = %1197
  %1224 = icmp eq i32 %1200, %1203
  br i1 %1224, label %1225, label %1231

1225:                                             ; preds = %1223
  store i32 0, ptr %1199, align 4, !tbaa !5
  %1226 = getelementptr inbounds i32, ptr %8, i64 %1198
  %1227 = load i32, ptr %1226, align 4, !tbaa !5
  %1228 = getelementptr inbounds i32, ptr %6, i64 %1198
  store i32 %1227, ptr %1228, align 4, !tbaa !5
  %1229 = add nuw nsw i64 %1198, 1
  %1230 = icmp eq i64 %1229, %959
  br i1 %1230, label %1238, label %1197, !llvm.loop !622

1231:                                             ; preds = %1193, %1223
  %1232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1233:                                             ; preds = %1206, %1215
  %1234 = phi ptr [ %1222, %1215 ], [ %1199, %1206 ]
  %1235 = phi i32 [ %1221, %1215 ], [ 1, %1206 ]
  %1236 = load i32, ptr %1234, align 4, !tbaa !5
  %1237 = add nsw i32 %1236, %1235
  store i32 %1237, ptr %1234, align 4, !tbaa !5
  br label %1238

1238:                                             ; preds = %1225, %1233, %1195, %1186
  %1239 = icmp eq i32 %1187, %5
  br i1 %1239, label %5513, label %1102, !llvm.loop !623

1240:                                             ; preds = %651
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1242:                                             ; preds = %18
  %1243 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1244 = load ptr, ptr %1243, align 8, !tbaa !9
  %1245 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1246 = load ptr, ptr %1245, align 8, !tbaa !9
  %1247 = load i32, ptr %1244, align 4, !tbaa !5
  %1248 = trunc i32 %1247 to i8
  store i8 %1248, ptr %1246, align 1, !tbaa !11
  %1249 = icmp eq i32 %13, 0
  br i1 %1249, label %1250, label %1257

1250:                                             ; preds = %1242
  %1251 = load i32, ptr %1244, align 4, !tbaa !5
  %1252 = shl i32 %1247, 24
  %1253 = shl i32 %1251, 24
  %1254 = icmp sgt i32 %1252, %1253
  br i1 %1254, label %1255, label %5513

1255:                                             ; preds = %1250
  %1256 = trunc i32 %1251 to i8
  store i8 %1256, ptr %1246, align 1, !tbaa !11
  br label %5513

1257:                                             ; preds = %1242
  switch i32 %1, label %1862 [
    i32 1, label %1258
    i32 0, label %1562
  ]

1258:                                             ; preds = %1257
  %1259 = getelementptr inbounds i32, ptr %3, i64 %19
  %1260 = load i32, ptr %1259, align 4, !tbaa !5
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp sgt i32 %5, 0
  br i1 %1261, label %1272, label %1263

1263:                                             ; preds = %1258
  br i1 %1262, label %1264, label %5513

1264:                                             ; preds = %1263
  %1265 = icmp sgt i32 %13, 1
  %1266 = icmp sgt i32 %13, 0
  %1267 = add i32 %13, -2
  %1268 = zext i32 %1267 to i64
  %1269 = zext i32 %13 to i64
  %1270 = add nuw i32 %5, 1
  %1271 = icmp eq i32 %13, 1
  br label %1420

1272:                                             ; preds = %1258
  br i1 %1262, label %1273, label %5513

1273:                                             ; preds = %1272
  %1274 = icmp sgt i32 %13, 1
  %1275 = icmp sgt i32 %13, 0
  %1276 = add i32 %13, -2
  %1277 = zext i32 %1276 to i64
  %1278 = zext i32 %13 to i64
  %1279 = add nuw i32 %5, 1
  %1280 = icmp eq i32 %13, 1
  br label %1281

1281:                                             ; preds = %1273, %1418
  %1282 = phi i32 [ 0, %1273 ], [ %1370, %1418 ]
  %1283 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1274, label %1284, label %1353

1284:                                             ; preds = %1281, %1343
  %1285 = phi i32 [ %1352, %1343 ], [ 0, %1281 ]
  %1286 = phi i64 [ %1294, %1343 ], [ %1278, %1281 ]
  %1287 = phi i64 [ %1351, %1343 ], [ %1277, %1281 ]
  %1288 = phi i32 [ %1349, %1343 ], [ %1283, %1281 ]
  %1289 = sub i32 %1276, %1285
  %1290 = tail call i32 @llvm.smin.i32(i32 %1289, i32 0)
  %1291 = sub i32 %1289, %1290
  %1292 = zext i32 %1291 to i64
  %1293 = add nuw nsw i64 %1292, 1
  %1294 = add nsw i64 %1286, -1
  %1295 = icmp ult i32 %1291, 31
  br i1 %1295, label %1331, label %1296

1296:                                             ; preds = %1284
  %1297 = and i64 %1293, 8589934560
  %1298 = sub i64 %1287, %1297
  br label %1299

1299:                                             ; preds = %1299, %1296
  %1300 = phi i64 [ 0, %1296 ], [ %1323, %1299 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1319, %1299 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1320, %1299 ]
  %1303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1321, %1299 ]
  %1304 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1296 ], [ %1322, %1299 ]
  %1305 = sub i64 %1287, %1300
  %1306 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1307 = getelementptr inbounds i32, ptr %1306, i64 -7
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = getelementptr inbounds i32, ptr %1306, i64 -15
  %1311 = load <8 x i32>, ptr %1310, align 4, !tbaa !5
  %1312 = shufflevector <8 x i32> %1311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1313 = getelementptr inbounds i32, ptr %1306, i64 -23
  %1314 = load <8 x i32>, ptr %1313, align 4, !tbaa !5
  %1315 = shufflevector <8 x i32> %1314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1316 = getelementptr inbounds i32, ptr %1306, i64 -31
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !5
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = mul <8 x i32> %1309, %1301
  %1320 = mul <8 x i32> %1312, %1302
  %1321 = mul <8 x i32> %1315, %1303
  %1322 = mul <8 x i32> %1318, %1304
  %1323 = add nuw i64 %1300, 32
  %1324 = icmp eq i64 %1323, %1297
  br i1 %1324, label %1325, label %1299, !llvm.loop !624

1325:                                             ; preds = %1299
  %1326 = mul <8 x i32> %1320, %1319
  %1327 = mul <8 x i32> %1321, %1326
  %1328 = mul <8 x i32> %1322, %1327
  %1329 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1328)
  %1330 = icmp eq i64 %1293, %1297
  br i1 %1330, label %1343, label %1331

1331:                                             ; preds = %1284, %1325
  %1332 = phi i64 [ %1287, %1284 ], [ %1298, %1325 ]
  %1333 = phi i32 [ 1, %1284 ], [ %1329, %1325 ]
  br label %1334

1334:                                             ; preds = %1331, %1334
  %1335 = phi i64 [ %1340, %1334 ], [ %1332, %1331 ]
  %1336 = phi i32 [ %1339, %1334 ], [ %1333, %1331 ]
  %1337 = getelementptr inbounds i32, ptr %9, i64 %1335
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1336
  %1340 = add nsw i64 %1335, -1
  %1341 = trunc i64 %1335 to i32
  %1342 = icmp sgt i32 %1341, 0
  br i1 %1342, label %1334, label %1343, !llvm.loop !625

1343:                                             ; preds = %1334, %1325
  %1344 = phi i32 [ %1329, %1325 ], [ %1339, %1334 ]
  %1345 = and i64 %1294, 4294967295
  %1346 = getelementptr inbounds i32, ptr %6, i64 %1345
  %1347 = load i32, ptr %1346, align 4, !tbaa !5
  %1348 = mul nsw i32 %1347, %1344
  %1349 = add nsw i32 %1348, %1288
  %1350 = icmp sgt i64 %1286, 2
  %1351 = add nsw i64 %1287, -1
  %1352 = add i32 %1285, 1
  br i1 %1350, label %1284, label %1353, !llvm.loop !626

1353:                                             ; preds = %1343, %1281
  %1354 = phi i32 [ %1283, %1281 ], [ %1349, %1343 ]
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds double, ptr %2, i64 %1355
  %1357 = load double, ptr %1356, align 8, !tbaa !18
  %1358 = getelementptr inbounds i32, ptr %1244, i64 %1355
  %1359 = load i32, ptr %1358, align 4, !tbaa !5
  %1360 = trunc i32 %1359 to i8
  %1361 = fcmp fast ueq double %1357, 0.000000e+00
  br i1 %1361, label %1369, label %1362

1362:                                             ; preds = %1353
  %1363 = load i8, ptr %1246, align 1, !tbaa !11
  %1364 = sext i8 %1363 to i32
  %1365 = shl i32 %1359, 24
  %1366 = ashr exact i32 %1365, 24
  %1367 = icmp slt i32 %1366, %1364
  br i1 %1367, label %1368, label %1369

1368:                                             ; preds = %1362
  store i8 %1360, ptr %1246, align 1, !tbaa !11
  br label %1369

1369:                                             ; preds = %1362, %1368, %1353
  %1370 = add nuw nsw i32 %1282, 1
  br i1 %1275, label %1371, label %1418

1371:                                             ; preds = %1369
  %1372 = load i32, ptr %4, align 4, !tbaa !5
  %1373 = load i32, ptr %12, align 4, !tbaa !5
  %1374 = add nsw i32 %1373, -1
  %1375 = icmp slt i32 %1372, %1374
  br i1 %1375, label %1395, label %1376

1376:                                             ; preds = %1371
  %1377 = icmp eq i32 %1372, %1374
  br i1 %1377, label %1378, label %1411

1378:                                             ; preds = %1376
  store i32 0, ptr %4, align 4, !tbaa !5
  %1379 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1379, ptr %6, align 4, !tbaa !5
  br i1 %1280, label %1418, label %1380

1380:                                             ; preds = %1378, %1405
  %1381 = phi i64 [ %1409, %1405 ], [ 1, %1378 ]
  %1382 = getelementptr inbounds i32, ptr %4, i64 %1381
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %12, i64 %1381
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, -1
  %1387 = icmp slt i32 %1383, %1386
  br i1 %1387, label %1388, label %1403

1388:                                             ; preds = %1380
  br i1 %1375, label %1395, label %1389

1389:                                             ; preds = %1388
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1381
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1381
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, %1391
  store i32 %1394, ptr %1392, align 4, !tbaa !5
  br label %1413

1395:                                             ; preds = %1371, %1388
  %1396 = phi i32 [ %1383, %1388 ], [ %1372, %1371 ]
  %1397 = phi ptr [ %1382, %1388 ], [ %4, %1371 ]
  %1398 = phi i64 [ %1381, %1388 ], [ 0, %1371 ]
  %1399 = add nsw i32 %1396, 1
  store i32 %1399, ptr %1397, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %7, i64 %1398
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %6, i64 %1398
  br label %1413

1403:                                             ; preds = %1380
  %1404 = icmp eq i32 %1383, %1386
  br i1 %1404, label %1405, label %1411

1405:                                             ; preds = %1403
  store i32 0, ptr %1382, align 4, !tbaa !5
  %1406 = getelementptr inbounds i32, ptr %8, i64 %1381
  %1407 = load i32, ptr %1406, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %6, i64 %1381
  store i32 %1407, ptr %1408, align 4, !tbaa !5
  %1409 = add nuw nsw i64 %1381, 1
  %1410 = icmp eq i64 %1409, %1278
  br i1 %1410, label %1418, label %1380, !llvm.loop !627

1411:                                             ; preds = %1376, %1403
  %1412 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1413:                                             ; preds = %1389, %1395
  %1414 = phi ptr [ %1402, %1395 ], [ %1382, %1389 ]
  %1415 = phi i32 [ %1401, %1395 ], [ 1, %1389 ]
  %1416 = load i32, ptr %1414, align 4, !tbaa !5
  %1417 = add nsw i32 %1416, %1415
  store i32 %1417, ptr %1414, align 4, !tbaa !5
  br label %1418

1418:                                             ; preds = %1405, %1413, %1378, %1369
  %1419 = icmp eq i32 %1370, %5
  br i1 %1419, label %5513, label %1281, !llvm.loop !628

1420:                                             ; preds = %1264, %1560
  %1421 = phi i32 [ 0, %1264 ], [ %1509, %1560 ]
  %1422 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1265, label %1423, label %1492

1423:                                             ; preds = %1420, %1482
  %1424 = phi i32 [ %1491, %1482 ], [ 0, %1420 ]
  %1425 = phi i64 [ %1433, %1482 ], [ %1269, %1420 ]
  %1426 = phi i64 [ %1490, %1482 ], [ %1268, %1420 ]
  %1427 = phi i32 [ %1488, %1482 ], [ %1422, %1420 ]
  %1428 = sub i32 %1267, %1424
  %1429 = tail call i32 @llvm.smin.i32(i32 %1428, i32 0)
  %1430 = sub i32 %1428, %1429
  %1431 = zext i32 %1430 to i64
  %1432 = add nuw nsw i64 %1431, 1
  %1433 = add nsw i64 %1425, -1
  %1434 = icmp ult i32 %1430, 31
  br i1 %1434, label %1470, label %1435

1435:                                             ; preds = %1423
  %1436 = and i64 %1432, 8589934560
  %1437 = sub i64 %1426, %1436
  br label %1438

1438:                                             ; preds = %1438, %1435
  %1439 = phi i64 [ 0, %1435 ], [ %1462, %1438 ]
  %1440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1458, %1438 ]
  %1441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1459, %1438 ]
  %1442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1460, %1438 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1435 ], [ %1461, %1438 ]
  %1444 = sub i64 %1426, %1439
  %1445 = getelementptr inbounds i32, ptr %11, i64 %1444
  %1446 = getelementptr inbounds i32, ptr %1445, i64 -7
  %1447 = load <8 x i32>, ptr %1446, align 4, !tbaa !5
  %1448 = shufflevector <8 x i32> %1447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1449 = getelementptr inbounds i32, ptr %1445, i64 -15
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !5
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1445, i64 -23
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !5
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1445, i64 -31
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !5
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = mul <8 x i32> %1448, %1440
  %1459 = mul <8 x i32> %1451, %1441
  %1460 = mul <8 x i32> %1454, %1442
  %1461 = mul <8 x i32> %1457, %1443
  %1462 = add nuw i64 %1439, 32
  %1463 = icmp eq i64 %1462, %1436
  br i1 %1463, label %1464, label %1438, !llvm.loop !629

1464:                                             ; preds = %1438
  %1465 = mul <8 x i32> %1459, %1458
  %1466 = mul <8 x i32> %1460, %1465
  %1467 = mul <8 x i32> %1461, %1466
  %1468 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1467)
  %1469 = icmp eq i64 %1432, %1436
  br i1 %1469, label %1482, label %1470

1470:                                             ; preds = %1423, %1464
  %1471 = phi i64 [ %1426, %1423 ], [ %1437, %1464 ]
  %1472 = phi i32 [ 1, %1423 ], [ %1468, %1464 ]
  br label %1473

1473:                                             ; preds = %1470, %1473
  %1474 = phi i64 [ %1479, %1473 ], [ %1471, %1470 ]
  %1475 = phi i32 [ %1478, %1473 ], [ %1472, %1470 ]
  %1476 = getelementptr inbounds i32, ptr %11, i64 %1474
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = mul nsw i32 %1477, %1475
  %1479 = add nsw i64 %1474, -1
  %1480 = trunc i64 %1474 to i32
  %1481 = icmp sgt i32 %1480, 0
  br i1 %1481, label %1473, label %1482, !llvm.loop !630

1482:                                             ; preds = %1473, %1464
  %1483 = phi i32 [ %1468, %1464 ], [ %1478, %1473 ]
  %1484 = and i64 %1433, 4294967295
  %1485 = getelementptr inbounds i32, ptr %6, i64 %1484
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = mul nsw i32 %1486, %1483
  %1488 = add nsw i32 %1487, %1427
  %1489 = icmp sgt i64 %1425, 2
  %1490 = add nsw i64 %1426, -1
  %1491 = add i32 %1424, 1
  br i1 %1489, label %1423, label %1492, !llvm.loop !631

1492:                                             ; preds = %1482, %1420
  %1493 = phi i32 [ %1422, %1420 ], [ %1488, %1482 ]
  %1494 = icmp slt i32 %1493, %5
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1492
  %1496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1497:                                             ; preds = %1492
  %1498 = sext i32 %1493 to i64
  %1499 = getelementptr inbounds i32, ptr %1244, i64 %1498
  %1500 = load i32, ptr %1499, align 4, !tbaa !5
  %1501 = load i8, ptr %1246, align 1, !tbaa !11
  %1502 = sext i8 %1501 to i32
  %1503 = shl i32 %1500, 24
  %1504 = ashr exact i32 %1503, 24
  %1505 = icmp slt i32 %1504, %1502
  br i1 %1505, label %1506, label %1508

1506:                                             ; preds = %1497
  %1507 = trunc i32 %1500 to i8
  store i8 %1507, ptr %1246, align 1, !tbaa !11
  br label %1508

1508:                                             ; preds = %1497, %1506
  %1509 = add nuw nsw i32 %1421, 1
  br i1 %1266, label %1510, label %1560

1510:                                             ; preds = %1508
  %1511 = load i32, ptr %4, align 4, !tbaa !5
  %1512 = load i32, ptr %12, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1511, %1513
  br i1 %1514, label %1537, label %1515

1515:                                             ; preds = %1510
  %1516 = icmp eq i32 %1511, %1513
  br i1 %1516, label %1517, label %1553

1517:                                             ; preds = %1515
  store i32 0, ptr %4, align 4, !tbaa !5
  %1518 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1518, ptr %6, align 4, !tbaa !5
  br i1 %1271, label %1560, label %1519

1519:                                             ; preds = %1517, %1547
  %1520 = phi i64 [ %1551, %1547 ], [ 1, %1517 ]
  %1521 = getelementptr inbounds i32, ptr %4, i64 %1520
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = getelementptr inbounds i32, ptr %12, i64 %1520
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = add nsw i32 %1524, -1
  %1526 = icmp slt i32 %1522, %1525
  br i1 %1526, label %1527, label %1545

1527:                                             ; preds = %1519
  br i1 %1514, label %1537, label %1528

1528:                                             ; preds = %1527
  %1529 = shl i64 %1520, 32
  %1530 = add i64 %1529, -4294967296
  %1531 = ashr exact i64 %1530, 32
  %1532 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !5
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1520
  %1535 = load i32, ptr %1534, align 4, !tbaa !5
  %1536 = add nsw i32 %1535, %1533
  store i32 %1536, ptr %1534, align 4, !tbaa !5
  br label %1555

1537:                                             ; preds = %1510, %1527
  %1538 = phi i32 [ %1522, %1527 ], [ %1511, %1510 ]
  %1539 = phi ptr [ %1521, %1527 ], [ %4, %1510 ]
  %1540 = phi i64 [ %1520, %1527 ], [ 0, %1510 ]
  %1541 = add nsw i32 %1538, 1
  store i32 %1541, ptr %1539, align 4, !tbaa !5
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1540
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1540
  br label %1555

1545:                                             ; preds = %1519
  %1546 = icmp eq i32 %1522, %1525
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1545
  store i32 0, ptr %1521, align 4, !tbaa !5
  %1548 = getelementptr inbounds i32, ptr %8, i64 %1520
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = getelementptr inbounds i32, ptr %6, i64 %1520
  store i32 %1549, ptr %1550, align 4, !tbaa !5
  %1551 = add nuw nsw i64 %1520, 1
  %1552 = icmp eq i64 %1551, %1269
  br i1 %1552, label %1560, label %1519, !llvm.loop !632

1553:                                             ; preds = %1515, %1545
  %1554 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1555:                                             ; preds = %1528, %1537
  %1556 = phi ptr [ %1544, %1537 ], [ %1521, %1528 ]
  %1557 = phi i32 [ %1543, %1537 ], [ 1, %1528 ]
  %1558 = load i32, ptr %1556, align 4, !tbaa !5
  %1559 = add nsw i32 %1558, %1557
  store i32 %1559, ptr %1556, align 4, !tbaa !5
  br label %1560

1560:                                             ; preds = %1547, %1555, %1517, %1508
  %1561 = icmp eq i32 %1509, %5
  br i1 %1561, label %5513, label %1420, !llvm.loop !633

1562:                                             ; preds = %1257
  %1563 = getelementptr inbounds i32, ptr %3, i64 %19
  %1564 = load i32, ptr %1563, align 4, !tbaa !5
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp sgt i32 %5, 0
  br i1 %1565, label %1576, label %1567

1567:                                             ; preds = %1562
  br i1 %1566, label %1568, label %5513

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1720

1576:                                             ; preds = %1562
  br i1 %1566, label %1577, label %5513

1577:                                             ; preds = %1576
  %1578 = icmp sgt i32 %13, 1
  %1579 = icmp sgt i32 %13, 0
  %1580 = add i32 %13, -2
  %1581 = zext i32 %1580 to i64
  %1582 = zext i32 %13 to i64
  %1583 = add nuw i32 %5, 1
  %1584 = icmp eq i32 %13, 1
  br label %1585

1585:                                             ; preds = %1577, %1718
  %1586 = phi i32 [ 0, %1577 ], [ %1670, %1718 ]
  %1587 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1578, label %1588, label %1657

1588:                                             ; preds = %1585, %1647
  %1589 = phi i32 [ %1656, %1647 ], [ 0, %1585 ]
  %1590 = phi i64 [ %1598, %1647 ], [ %1582, %1585 ]
  %1591 = phi i64 [ %1655, %1647 ], [ %1581, %1585 ]
  %1592 = phi i32 [ %1653, %1647 ], [ %1587, %1585 ]
  %1593 = sub i32 %1580, %1589
  %1594 = tail call i32 @llvm.smin.i32(i32 %1593, i32 0)
  %1595 = sub i32 %1593, %1594
  %1596 = zext i32 %1595 to i64
  %1597 = add nuw nsw i64 %1596, 1
  %1598 = add nsw i64 %1590, -1
  %1599 = icmp ult i32 %1595, 31
  br i1 %1599, label %1635, label %1600

1600:                                             ; preds = %1588
  %1601 = and i64 %1597, 8589934560
  %1602 = sub i64 %1591, %1601
  br label %1603

1603:                                             ; preds = %1603, %1600
  %1604 = phi i64 [ 0, %1600 ], [ %1627, %1603 ]
  %1605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1623, %1603 ]
  %1606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1624, %1603 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1625, %1603 ]
  %1608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1600 ], [ %1626, %1603 ]
  %1609 = sub i64 %1591, %1604
  %1610 = getelementptr inbounds i32, ptr %9, i64 %1609
  %1611 = getelementptr inbounds i32, ptr %1610, i64 -7
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !5
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1610, i64 -15
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !5
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = getelementptr inbounds i32, ptr %1610, i64 -23
  %1618 = load <8 x i32>, ptr %1617, align 4, !tbaa !5
  %1619 = shufflevector <8 x i32> %1618, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1620 = getelementptr inbounds i32, ptr %1610, i64 -31
  %1621 = load <8 x i32>, ptr %1620, align 4, !tbaa !5
  %1622 = shufflevector <8 x i32> %1621, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1623 = mul <8 x i32> %1613, %1605
  %1624 = mul <8 x i32> %1616, %1606
  %1625 = mul <8 x i32> %1619, %1607
  %1626 = mul <8 x i32> %1622, %1608
  %1627 = add nuw i64 %1604, 32
  %1628 = icmp eq i64 %1627, %1601
  br i1 %1628, label %1629, label %1603, !llvm.loop !634

1629:                                             ; preds = %1603
  %1630 = mul <8 x i32> %1624, %1623
  %1631 = mul <8 x i32> %1625, %1630
  %1632 = mul <8 x i32> %1626, %1631
  %1633 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1632)
  %1634 = icmp eq i64 %1597, %1601
  br i1 %1634, label %1647, label %1635

1635:                                             ; preds = %1588, %1629
  %1636 = phi i64 [ %1591, %1588 ], [ %1602, %1629 ]
  %1637 = phi i32 [ 1, %1588 ], [ %1633, %1629 ]
  br label %1638

1638:                                             ; preds = %1635, %1638
  %1639 = phi i64 [ %1644, %1638 ], [ %1636, %1635 ]
  %1640 = phi i32 [ %1643, %1638 ], [ %1637, %1635 ]
  %1641 = getelementptr inbounds i32, ptr %9, i64 %1639
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = mul nsw i32 %1642, %1640
  %1644 = add nsw i64 %1639, -1
  %1645 = trunc i64 %1639 to i32
  %1646 = icmp sgt i32 %1645, 0
  br i1 %1646, label %1638, label %1647, !llvm.loop !635

1647:                                             ; preds = %1638, %1629
  %1648 = phi i32 [ %1633, %1629 ], [ %1643, %1638 ]
  %1649 = and i64 %1598, 4294967295
  %1650 = getelementptr inbounds i32, ptr %6, i64 %1649
  %1651 = load i32, ptr %1650, align 4, !tbaa !5
  %1652 = mul nsw i32 %1651, %1648
  %1653 = add nsw i32 %1652, %1592
  %1654 = icmp sgt i64 %1590, 2
  %1655 = add nsw i64 %1591, -1
  %1656 = add i32 %1589, 1
  br i1 %1654, label %1588, label %1657, !llvm.loop !636

1657:                                             ; preds = %1647, %1585
  %1658 = phi i32 [ %1587, %1585 ], [ %1653, %1647 ]
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds i32, ptr %1244, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !5
  %1662 = load i8, ptr %1246, align 1, !tbaa !11
  %1663 = sext i8 %1662 to i32
  %1664 = shl i32 %1661, 24
  %1665 = ashr exact i32 %1664, 24
  %1666 = icmp slt i32 %1665, %1663
  br i1 %1666, label %1667, label %1669

1667:                                             ; preds = %1657
  %1668 = trunc i32 %1661 to i8
  store i8 %1668, ptr %1246, align 1, !tbaa !11
  br label %1669

1669:                                             ; preds = %1667, %1657
  %1670 = add nuw nsw i32 %1586, 1
  br i1 %1579, label %1671, label %1718

1671:                                             ; preds = %1669
  %1672 = load i32, ptr %4, align 4, !tbaa !5
  %1673 = load i32, ptr %12, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, -1
  %1675 = icmp slt i32 %1672, %1674
  br i1 %1675, label %1695, label %1676

1676:                                             ; preds = %1671
  %1677 = icmp eq i32 %1672, %1674
  br i1 %1677, label %1678, label %1711

1678:                                             ; preds = %1676
  store i32 0, ptr %4, align 4, !tbaa !5
  %1679 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1679, ptr %6, align 4, !tbaa !5
  br i1 %1584, label %1718, label %1680

1680:                                             ; preds = %1678, %1705
  %1681 = phi i64 [ %1709, %1705 ], [ 1, %1678 ]
  %1682 = getelementptr inbounds i32, ptr %4, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = getelementptr inbounds i32, ptr %12, i64 %1681
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1683, %1686
  br i1 %1687, label %1688, label %1703

1688:                                             ; preds = %1680
  br i1 %1675, label %1695, label %1689

1689:                                             ; preds = %1688
  %1690 = getelementptr inbounds i32, ptr %7, i64 %1681
  %1691 = load i32, ptr %1690, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = add nsw i32 %1693, %1691
  store i32 %1694, ptr %1692, align 4, !tbaa !5
  br label %1713

1695:                                             ; preds = %1671, %1688
  %1696 = phi i32 [ %1683, %1688 ], [ %1672, %1671 ]
  %1697 = phi ptr [ %1682, %1688 ], [ %4, %1671 ]
  %1698 = phi i64 [ %1681, %1688 ], [ 0, %1671 ]
  %1699 = add nsw i32 %1696, 1
  store i32 %1699, ptr %1697, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %7, i64 %1698
  %1701 = load i32, ptr %1700, align 4, !tbaa !5
  %1702 = getelementptr inbounds i32, ptr %6, i64 %1698
  br label %1713

1703:                                             ; preds = %1680
  %1704 = icmp eq i32 %1683, %1686
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1703
  store i32 0, ptr %1682, align 4, !tbaa !5
  %1706 = getelementptr inbounds i32, ptr %8, i64 %1681
  %1707 = load i32, ptr %1706, align 4, !tbaa !5
  %1708 = getelementptr inbounds i32, ptr %6, i64 %1681
  store i32 %1707, ptr %1708, align 4, !tbaa !5
  %1709 = add nuw nsw i64 %1681, 1
  %1710 = icmp eq i64 %1709, %1582
  br i1 %1710, label %1718, label %1680, !llvm.loop !637

1711:                                             ; preds = %1676, %1703
  %1712 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1713:                                             ; preds = %1689, %1695
  %1714 = phi ptr [ %1702, %1695 ], [ %1682, %1689 ]
  %1715 = phi i32 [ %1701, %1695 ], [ 1, %1689 ]
  %1716 = load i32, ptr %1714, align 4, !tbaa !5
  %1717 = add nsw i32 %1716, %1715
  store i32 %1717, ptr %1714, align 4, !tbaa !5
  br label %1718

1718:                                             ; preds = %1705, %1713, %1678, %1669
  %1719 = icmp eq i32 %1670, %5
  br i1 %1719, label %5513, label %1585, !llvm.loop !638

1720:                                             ; preds = %1568, %1860
  %1721 = phi i32 [ 0, %1568 ], [ %1809, %1860 ]
  %1722 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1723, label %1792

1723:                                             ; preds = %1720, %1782
  %1724 = phi i32 [ %1791, %1782 ], [ 0, %1720 ]
  %1725 = phi i64 [ %1733, %1782 ], [ %1573, %1720 ]
  %1726 = phi i64 [ %1790, %1782 ], [ %1572, %1720 ]
  %1727 = phi i32 [ %1788, %1782 ], [ %1722, %1720 ]
  %1728 = sub i32 %1571, %1724
  %1729 = tail call i32 @llvm.smin.i32(i32 %1728, i32 0)
  %1730 = sub i32 %1728, %1729
  %1731 = zext i32 %1730 to i64
  %1732 = add nuw nsw i64 %1731, 1
  %1733 = add nsw i64 %1725, -1
  %1734 = icmp ult i32 %1730, 31
  br i1 %1734, label %1770, label %1735

1735:                                             ; preds = %1723
  %1736 = and i64 %1732, 8589934560
  %1737 = sub i64 %1726, %1736
  br label %1738

1738:                                             ; preds = %1738, %1735
  %1739 = phi i64 [ 0, %1735 ], [ %1762, %1738 ]
  %1740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1758, %1738 ]
  %1741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1759, %1738 ]
  %1742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1760, %1738 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1735 ], [ %1761, %1738 ]
  %1744 = sub i64 %1726, %1739
  %1745 = getelementptr inbounds i32, ptr %11, i64 %1744
  %1746 = getelementptr inbounds i32, ptr %1745, i64 -7
  %1747 = load <8 x i32>, ptr %1746, align 4, !tbaa !5
  %1748 = shufflevector <8 x i32> %1747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1749 = getelementptr inbounds i32, ptr %1745, i64 -15
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !5
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = getelementptr inbounds i32, ptr %1745, i64 -23
  %1753 = load <8 x i32>, ptr %1752, align 4, !tbaa !5
  %1754 = shufflevector <8 x i32> %1753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1755 = getelementptr inbounds i32, ptr %1745, i64 -31
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !5
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = mul <8 x i32> %1748, %1740
  %1759 = mul <8 x i32> %1751, %1741
  %1760 = mul <8 x i32> %1754, %1742
  %1761 = mul <8 x i32> %1757, %1743
  %1762 = add nuw i64 %1739, 32
  %1763 = icmp eq i64 %1762, %1736
  br i1 %1763, label %1764, label %1738, !llvm.loop !639

1764:                                             ; preds = %1738
  %1765 = mul <8 x i32> %1759, %1758
  %1766 = mul <8 x i32> %1760, %1765
  %1767 = mul <8 x i32> %1761, %1766
  %1768 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1767)
  %1769 = icmp eq i64 %1732, %1736
  br i1 %1769, label %1782, label %1770

1770:                                             ; preds = %1723, %1764
  %1771 = phi i64 [ %1726, %1723 ], [ %1737, %1764 ]
  %1772 = phi i32 [ 1, %1723 ], [ %1768, %1764 ]
  br label %1773

1773:                                             ; preds = %1770, %1773
  %1774 = phi i64 [ %1779, %1773 ], [ %1771, %1770 ]
  %1775 = phi i32 [ %1778, %1773 ], [ %1772, %1770 ]
  %1776 = getelementptr inbounds i32, ptr %11, i64 %1774
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = mul nsw i32 %1777, %1775
  %1779 = add nsw i64 %1774, -1
  %1780 = trunc i64 %1774 to i32
  %1781 = icmp sgt i32 %1780, 0
  br i1 %1781, label %1773, label %1782, !llvm.loop !640

1782:                                             ; preds = %1773, %1764
  %1783 = phi i32 [ %1768, %1764 ], [ %1778, %1773 ]
  %1784 = and i64 %1733, 4294967295
  %1785 = getelementptr inbounds i32, ptr %6, i64 %1784
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = mul nsw i32 %1786, %1783
  %1788 = add nsw i32 %1787, %1727
  %1789 = icmp sgt i64 %1725, 2
  %1790 = add nsw i64 %1726, -1
  %1791 = add i32 %1724, 1
  br i1 %1789, label %1723, label %1792, !llvm.loop !641

1792:                                             ; preds = %1782, %1720
  %1793 = phi i32 [ %1722, %1720 ], [ %1788, %1782 ]
  %1794 = icmp slt i32 %1793, %5
  br i1 %1794, label %1797, label %1795

1795:                                             ; preds = %1792
  %1796 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

1797:                                             ; preds = %1792
  %1798 = sext i32 %1793 to i64
  %1799 = getelementptr inbounds i32, ptr %1244, i64 %1798
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = load i8, ptr %1246, align 1, !tbaa !11
  %1802 = sext i8 %1801 to i32
  %1803 = shl i32 %1800, 24
  %1804 = ashr exact i32 %1803, 24
  %1805 = icmp slt i32 %1804, %1802
  br i1 %1805, label %1806, label %1808

1806:                                             ; preds = %1797
  %1807 = trunc i32 %1800 to i8
  store i8 %1807, ptr %1246, align 1, !tbaa !11
  br label %1808

1808:                                             ; preds = %1806, %1797
  %1809 = add nuw nsw i32 %1721, 1
  br i1 %1570, label %1810, label %1860

1810:                                             ; preds = %1808
  %1811 = load i32, ptr %4, align 4, !tbaa !5
  %1812 = load i32, ptr %12, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1811, %1813
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1810
  %1816 = icmp eq i32 %1811, %1813
  br i1 %1816, label %1817, label %1853

1817:                                             ; preds = %1815
  store i32 0, ptr %4, align 4, !tbaa !5
  %1818 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1818, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1860, label %1819

1819:                                             ; preds = %1817, %1847
  %1820 = phi i64 [ %1851, %1847 ], [ 1, %1817 ]
  %1821 = getelementptr inbounds i32, ptr %4, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !5
  %1823 = getelementptr inbounds i32, ptr %12, i64 %1820
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1822, %1825
  br i1 %1826, label %1827, label %1845

1827:                                             ; preds = %1819
  br i1 %1814, label %1837, label %1828

1828:                                             ; preds = %1827
  %1829 = shl i64 %1820, 32
  %1830 = add i64 %1829, -4294967296
  %1831 = ashr exact i64 %1830, 32
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1833 = load i32, ptr %1832, align 4, !tbaa !5
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1820
  %1835 = load i32, ptr %1834, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1833
  store i32 %1836, ptr %1834, align 4, !tbaa !5
  br label %1855

1837:                                             ; preds = %1810, %1827
  %1838 = phi i32 [ %1822, %1827 ], [ %1811, %1810 ]
  %1839 = phi ptr [ %1821, %1827 ], [ %4, %1810 ]
  %1840 = phi i64 [ %1820, %1827 ], [ 0, %1810 ]
  %1841 = add nsw i32 %1838, 1
  store i32 %1841, ptr %1839, align 4, !tbaa !5
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1840
  br label %1855

1845:                                             ; preds = %1819
  %1846 = icmp eq i32 %1822, %1825
  br i1 %1846, label %1847, label %1853

1847:                                             ; preds = %1845
  store i32 0, ptr %1821, align 4, !tbaa !5
  %1848 = getelementptr inbounds i32, ptr %8, i64 %1820
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = getelementptr inbounds i32, ptr %6, i64 %1820
  store i32 %1849, ptr %1850, align 4, !tbaa !5
  %1851 = add nuw nsw i64 %1820, 1
  %1852 = icmp eq i64 %1851, %1573
  br i1 %1852, label %1860, label %1819, !llvm.loop !642

1853:                                             ; preds = %1815, %1845
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

1855:                                             ; preds = %1828, %1837
  %1856 = phi ptr [ %1844, %1837 ], [ %1821, %1828 ]
  %1857 = phi i32 [ %1843, %1837 ], [ 1, %1828 ]
  %1858 = load i32, ptr %1856, align 4, !tbaa !5
  %1859 = add nsw i32 %1858, %1857
  store i32 %1859, ptr %1856, align 4, !tbaa !5
  br label %1860

1860:                                             ; preds = %1847, %1855, %1817, %1808
  %1861 = icmp eq i32 %1809, %5
  br i1 %1861, label %5513, label %1720, !llvm.loop !643

1862:                                             ; preds = %1257
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1013, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1864:                                             ; preds = %18
  %1865 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !9
  %1867 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1868 = load ptr, ptr %1867, align 8, !tbaa !9
  %1869 = load i32, ptr %1866, align 4, !tbaa !5
  %1870 = trunc i32 %1869 to i16
  store i16 %1870, ptr %1868, align 2, !tbaa !78
  %1871 = icmp eq i32 %13, 0
  br i1 %1871, label %5513, label %1872

1872:                                             ; preds = %1864
  switch i32 %1, label %2481 [
    i32 1, label %1873
    i32 0, label %2179
  ]

1873:                                             ; preds = %1872
  %1874 = getelementptr inbounds i32, ptr %3, i64 %19
  %1875 = load i32, ptr %1874, align 4, !tbaa !5
  %1876 = icmp eq i32 %1875, 0
  %1877 = icmp sgt i32 %5, 0
  br i1 %1876, label %1887, label %1878

1878:                                             ; preds = %1873
  br i1 %1877, label %1879, label %5513

1879:                                             ; preds = %1878
  %1880 = icmp sgt i32 %13, 1
  %1881 = icmp sgt i32 %13, 0
  %1882 = add i32 %13, -2
  %1883 = zext i32 %1882 to i64
  %1884 = zext i32 %13 to i64
  %1885 = add nuw i32 %5, 1
  %1886 = icmp eq i32 %13, 1
  br label %2036

1887:                                             ; preds = %1873
  br i1 %1877, label %1888, label %5513

1888:                                             ; preds = %1887
  %1889 = icmp sgt i32 %13, 1
  %1890 = icmp sgt i32 %13, 0
  %1891 = add i32 %13, -2
  %1892 = zext i32 %1891 to i64
  %1893 = zext i32 %13 to i64
  %1894 = add nuw i32 %5, 1
  %1895 = icmp eq i32 %13, 1
  br label %1896

1896:                                             ; preds = %1888, %2034
  %1897 = phi i16 [ %1870, %1888 ], [ %1985, %2034 ]
  %1898 = phi i32 [ 0, %1888 ], [ %1986, %2034 ]
  %1899 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1889, label %1900, label %1969

1900:                                             ; preds = %1896, %1959
  %1901 = phi i32 [ %1968, %1959 ], [ 0, %1896 ]
  %1902 = phi i64 [ %1910, %1959 ], [ %1893, %1896 ]
  %1903 = phi i64 [ %1967, %1959 ], [ %1892, %1896 ]
  %1904 = phi i32 [ %1965, %1959 ], [ %1899, %1896 ]
  %1905 = sub i32 %1891, %1901
  %1906 = tail call i32 @llvm.smin.i32(i32 %1905, i32 0)
  %1907 = sub i32 %1905, %1906
  %1908 = zext i32 %1907 to i64
  %1909 = add nuw nsw i64 %1908, 1
  %1910 = add nsw i64 %1902, -1
  %1911 = icmp ult i32 %1907, 31
  br i1 %1911, label %1947, label %1912

1912:                                             ; preds = %1900
  %1913 = and i64 %1909, 8589934560
  %1914 = sub i64 %1903, %1913
  br label %1915

1915:                                             ; preds = %1915, %1912
  %1916 = phi i64 [ 0, %1912 ], [ %1939, %1915 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1935, %1915 ]
  %1918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1936, %1915 ]
  %1919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1937, %1915 ]
  %1920 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1912 ], [ %1938, %1915 ]
  %1921 = sub i64 %1903, %1916
  %1922 = getelementptr inbounds i32, ptr %9, i64 %1921
  %1923 = getelementptr inbounds i32, ptr %1922, i64 -7
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = getelementptr inbounds i32, ptr %1922, i64 -15
  %1927 = load <8 x i32>, ptr %1926, align 4, !tbaa !5
  %1928 = shufflevector <8 x i32> %1927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1929 = getelementptr inbounds i32, ptr %1922, i64 -23
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !5
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = getelementptr inbounds i32, ptr %1922, i64 -31
  %1933 = load <8 x i32>, ptr %1932, align 4, !tbaa !5
  %1934 = shufflevector <8 x i32> %1933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1935 = mul <8 x i32> %1925, %1917
  %1936 = mul <8 x i32> %1928, %1918
  %1937 = mul <8 x i32> %1931, %1919
  %1938 = mul <8 x i32> %1934, %1920
  %1939 = add nuw i64 %1916, 32
  %1940 = icmp eq i64 %1939, %1913
  br i1 %1940, label %1941, label %1915, !llvm.loop !644

1941:                                             ; preds = %1915
  %1942 = mul <8 x i32> %1936, %1935
  %1943 = mul <8 x i32> %1937, %1942
  %1944 = mul <8 x i32> %1938, %1943
  %1945 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1944)
  %1946 = icmp eq i64 %1909, %1913
  br i1 %1946, label %1959, label %1947

1947:                                             ; preds = %1900, %1941
  %1948 = phi i64 [ %1903, %1900 ], [ %1914, %1941 ]
  %1949 = phi i32 [ 1, %1900 ], [ %1945, %1941 ]
  br label %1950

1950:                                             ; preds = %1947, %1950
  %1951 = phi i64 [ %1956, %1950 ], [ %1948, %1947 ]
  %1952 = phi i32 [ %1955, %1950 ], [ %1949, %1947 ]
  %1953 = getelementptr inbounds i32, ptr %9, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !5
  %1955 = mul nsw i32 %1954, %1952
  %1956 = add nsw i64 %1951, -1
  %1957 = trunc i64 %1951 to i32
  %1958 = icmp sgt i32 %1957, 0
  br i1 %1958, label %1950, label %1959, !llvm.loop !645

1959:                                             ; preds = %1950, %1941
  %1960 = phi i32 [ %1945, %1941 ], [ %1955, %1950 ]
  %1961 = and i64 %1910, 4294967295
  %1962 = getelementptr inbounds i32, ptr %6, i64 %1961
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = mul nsw i32 %1963, %1960
  %1965 = add nsw i32 %1964, %1904
  %1966 = icmp sgt i64 %1902, 2
  %1967 = add nsw i64 %1903, -1
  %1968 = add i32 %1901, 1
  br i1 %1966, label %1900, label %1969, !llvm.loop !646

1969:                                             ; preds = %1959, %1896
  %1970 = phi i32 [ %1899, %1896 ], [ %1965, %1959 ]
  %1971 = sext i32 %1970 to i64
  %1972 = getelementptr inbounds double, ptr %2, i64 %1971
  %1973 = load double, ptr %1972, align 8, !tbaa !18
  %1974 = getelementptr inbounds i32, ptr %1866, i64 %1971
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = trunc i32 %1975 to i16
  %1977 = fcmp fast ueq double %1973, 0.000000e+00
  br i1 %1977, label %1984, label %1978

1978:                                             ; preds = %1969
  %1979 = sext i16 %1897 to i32
  %1980 = shl i32 %1975, 16
  %1981 = ashr exact i32 %1980, 16
  %1982 = icmp slt i32 %1981, %1979
  br i1 %1982, label %1983, label %1984

1983:                                             ; preds = %1978
  store i16 %1976, ptr %1868, align 2, !tbaa !78
  br label %1984

1984:                                             ; preds = %1978, %1983, %1969
  %1985 = phi i16 [ %1897, %1978 ], [ %1976, %1983 ], [ %1897, %1969 ]
  %1986 = add nuw nsw i32 %1898, 1
  br i1 %1890, label %1987, label %2034

1987:                                             ; preds = %1984
  %1988 = load i32, ptr %4, align 4, !tbaa !5
  %1989 = load i32, ptr %12, align 4, !tbaa !5
  %1990 = add nsw i32 %1989, -1
  %1991 = icmp slt i32 %1988, %1990
  br i1 %1991, label %2011, label %1992

1992:                                             ; preds = %1987
  %1993 = icmp eq i32 %1988, %1990
  br i1 %1993, label %1994, label %2027

1994:                                             ; preds = %1992
  store i32 0, ptr %4, align 4, !tbaa !5
  %1995 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1995, ptr %6, align 4, !tbaa !5
  br i1 %1895, label %2034, label %1996

1996:                                             ; preds = %1994, %2021
  %1997 = phi i64 [ %2025, %2021 ], [ 1, %1994 ]
  %1998 = getelementptr inbounds i32, ptr %4, i64 %1997
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = getelementptr inbounds i32, ptr %12, i64 %1997
  %2001 = load i32, ptr %2000, align 4, !tbaa !5
  %2002 = add nsw i32 %2001, -1
  %2003 = icmp slt i32 %1999, %2002
  br i1 %2003, label %2004, label %2019

2004:                                             ; preds = %1996
  br i1 %1991, label %2011, label %2005

2005:                                             ; preds = %2004
  %2006 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2007 = load i32, ptr %2006, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %6, i64 %1997
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = add nsw i32 %2009, %2007
  store i32 %2010, ptr %2008, align 4, !tbaa !5
  br label %2029

2011:                                             ; preds = %1987, %2004
  %2012 = phi i32 [ %1999, %2004 ], [ %1988, %1987 ]
  %2013 = phi ptr [ %1998, %2004 ], [ %4, %1987 ]
  %2014 = phi i64 [ %1997, %2004 ], [ 0, %1987 ]
  %2015 = add nsw i32 %2012, 1
  store i32 %2015, ptr %2013, align 4, !tbaa !5
  %2016 = getelementptr inbounds i32, ptr %7, i64 %2014
  %2017 = load i32, ptr %2016, align 4, !tbaa !5
  %2018 = getelementptr inbounds i32, ptr %6, i64 %2014
  br label %2029

2019:                                             ; preds = %1996
  %2020 = icmp eq i32 %1999, %2002
  br i1 %2020, label %2021, label %2027

2021:                                             ; preds = %2019
  store i32 0, ptr %1998, align 4, !tbaa !5
  %2022 = getelementptr inbounds i32, ptr %8, i64 %1997
  %2023 = load i32, ptr %2022, align 4, !tbaa !5
  %2024 = getelementptr inbounds i32, ptr %6, i64 %1997
  store i32 %2023, ptr %2024, align 4, !tbaa !5
  %2025 = add nuw nsw i64 %1997, 1
  %2026 = icmp eq i64 %2025, %1893
  br i1 %2026, label %2034, label %1996, !llvm.loop !647

2027:                                             ; preds = %1992, %2019
  %2028 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2029:                                             ; preds = %2005, %2011
  %2030 = phi ptr [ %2018, %2011 ], [ %1998, %2005 ]
  %2031 = phi i32 [ %2017, %2011 ], [ 1, %2005 ]
  %2032 = load i32, ptr %2030, align 4, !tbaa !5
  %2033 = add nsw i32 %2032, %2031
  store i32 %2033, ptr %2030, align 4, !tbaa !5
  br label %2034

2034:                                             ; preds = %2021, %2029, %1994, %1984
  %2035 = icmp eq i32 %1986, %5
  br i1 %2035, label %5513, label %1896, !llvm.loop !648

2036:                                             ; preds = %1879, %2177
  %2037 = phi i16 [ %1870, %1879 ], [ %2125, %2177 ]
  %2038 = phi i32 [ 0, %1879 ], [ %2126, %2177 ]
  %2039 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1880, label %2040, label %2109

2040:                                             ; preds = %2036, %2099
  %2041 = phi i32 [ %2108, %2099 ], [ 0, %2036 ]
  %2042 = phi i64 [ %2050, %2099 ], [ %1884, %2036 ]
  %2043 = phi i64 [ %2107, %2099 ], [ %1883, %2036 ]
  %2044 = phi i32 [ %2105, %2099 ], [ %2039, %2036 ]
  %2045 = sub i32 %1882, %2041
  %2046 = tail call i32 @llvm.smin.i32(i32 %2045, i32 0)
  %2047 = sub i32 %2045, %2046
  %2048 = zext i32 %2047 to i64
  %2049 = add nuw nsw i64 %2048, 1
  %2050 = add nsw i64 %2042, -1
  %2051 = icmp ult i32 %2047, 31
  br i1 %2051, label %2087, label %2052

2052:                                             ; preds = %2040
  %2053 = and i64 %2049, 8589934560
  %2054 = sub i64 %2043, %2053
  br label %2055

2055:                                             ; preds = %2055, %2052
  %2056 = phi i64 [ 0, %2052 ], [ %2079, %2055 ]
  %2057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2075, %2055 ]
  %2058 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2076, %2055 ]
  %2059 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2077, %2055 ]
  %2060 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2052 ], [ %2078, %2055 ]
  %2061 = sub i64 %2043, %2056
  %2062 = getelementptr inbounds i32, ptr %11, i64 %2061
  %2063 = getelementptr inbounds i32, ptr %2062, i64 -7
  %2064 = load <8 x i32>, ptr %2063, align 4, !tbaa !5
  %2065 = shufflevector <8 x i32> %2064, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2066 = getelementptr inbounds i32, ptr %2062, i64 -15
  %2067 = load <8 x i32>, ptr %2066, align 4, !tbaa !5
  %2068 = shufflevector <8 x i32> %2067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2069 = getelementptr inbounds i32, ptr %2062, i64 -23
  %2070 = load <8 x i32>, ptr %2069, align 4, !tbaa !5
  %2071 = shufflevector <8 x i32> %2070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2072 = getelementptr inbounds i32, ptr %2062, i64 -31
  %2073 = load <8 x i32>, ptr %2072, align 4, !tbaa !5
  %2074 = shufflevector <8 x i32> %2073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2075 = mul <8 x i32> %2065, %2057
  %2076 = mul <8 x i32> %2068, %2058
  %2077 = mul <8 x i32> %2071, %2059
  %2078 = mul <8 x i32> %2074, %2060
  %2079 = add nuw i64 %2056, 32
  %2080 = icmp eq i64 %2079, %2053
  br i1 %2080, label %2081, label %2055, !llvm.loop !649

2081:                                             ; preds = %2055
  %2082 = mul <8 x i32> %2076, %2075
  %2083 = mul <8 x i32> %2077, %2082
  %2084 = mul <8 x i32> %2078, %2083
  %2085 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2084)
  %2086 = icmp eq i64 %2049, %2053
  br i1 %2086, label %2099, label %2087

2087:                                             ; preds = %2040, %2081
  %2088 = phi i64 [ %2043, %2040 ], [ %2054, %2081 ]
  %2089 = phi i32 [ 1, %2040 ], [ %2085, %2081 ]
  br label %2090

2090:                                             ; preds = %2087, %2090
  %2091 = phi i64 [ %2096, %2090 ], [ %2088, %2087 ]
  %2092 = phi i32 [ %2095, %2090 ], [ %2089, %2087 ]
  %2093 = getelementptr inbounds i32, ptr %11, i64 %2091
  %2094 = load i32, ptr %2093, align 4, !tbaa !5
  %2095 = mul nsw i32 %2094, %2092
  %2096 = add nsw i64 %2091, -1
  %2097 = trunc i64 %2091 to i32
  %2098 = icmp sgt i32 %2097, 0
  br i1 %2098, label %2090, label %2099, !llvm.loop !650

2099:                                             ; preds = %2090, %2081
  %2100 = phi i32 [ %2085, %2081 ], [ %2095, %2090 ]
  %2101 = and i64 %2050, 4294967295
  %2102 = getelementptr inbounds i32, ptr %6, i64 %2101
  %2103 = load i32, ptr %2102, align 4, !tbaa !5
  %2104 = mul nsw i32 %2103, %2100
  %2105 = add nsw i32 %2104, %2044
  %2106 = icmp sgt i64 %2042, 2
  %2107 = add nsw i64 %2043, -1
  %2108 = add i32 %2041, 1
  br i1 %2106, label %2040, label %2109, !llvm.loop !651

2109:                                             ; preds = %2099, %2036
  %2110 = phi i32 [ %2039, %2036 ], [ %2105, %2099 ]
  %2111 = icmp slt i32 %2110, %5
  br i1 %2111, label %2114, label %2112

2112:                                             ; preds = %2109
  %2113 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2114:                                             ; preds = %2109
  %2115 = sext i32 %2110 to i64
  %2116 = getelementptr inbounds i32, ptr %1866, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !5
  %2118 = sext i16 %2037 to i32
  %2119 = shl i32 %2117, 16
  %2120 = ashr exact i32 %2119, 16
  %2121 = icmp slt i32 %2120, %2118
  br i1 %2121, label %2122, label %2124

2122:                                             ; preds = %2114
  %2123 = trunc i32 %2117 to i16
  store i16 %2123, ptr %1868, align 2, !tbaa !78
  br label %2124

2124:                                             ; preds = %2114, %2122
  %2125 = phi i16 [ %2037, %2114 ], [ %2123, %2122 ]
  %2126 = add nuw nsw i32 %2038, 1
  br i1 %1881, label %2127, label %2177

2127:                                             ; preds = %2124
  %2128 = load i32, ptr %4, align 4, !tbaa !5
  %2129 = load i32, ptr %12, align 4, !tbaa !5
  %2130 = add nsw i32 %2129, -1
  %2131 = icmp slt i32 %2128, %2130
  br i1 %2131, label %2154, label %2132

2132:                                             ; preds = %2127
  %2133 = icmp eq i32 %2128, %2130
  br i1 %2133, label %2134, label %2170

2134:                                             ; preds = %2132
  store i32 0, ptr %4, align 4, !tbaa !5
  %2135 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2135, ptr %6, align 4, !tbaa !5
  br i1 %1886, label %2177, label %2136

2136:                                             ; preds = %2134, %2164
  %2137 = phi i64 [ %2168, %2164 ], [ 1, %2134 ]
  %2138 = getelementptr inbounds i32, ptr %4, i64 %2137
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = getelementptr inbounds i32, ptr %12, i64 %2137
  %2141 = load i32, ptr %2140, align 4, !tbaa !5
  %2142 = add nsw i32 %2141, -1
  %2143 = icmp slt i32 %2139, %2142
  br i1 %2143, label %2144, label %2162

2144:                                             ; preds = %2136
  br i1 %2131, label %2154, label %2145

2145:                                             ; preds = %2144
  %2146 = shl i64 %2137, 32
  %2147 = add i64 %2146, -4294967296
  %2148 = ashr exact i64 %2147, 32
  %2149 = getelementptr inbounds i32, ptr %7, i64 %2148
  %2150 = load i32, ptr %2149, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %6, i64 %2137
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = add nsw i32 %2152, %2150
  store i32 %2153, ptr %2151, align 4, !tbaa !5
  br label %2172

2154:                                             ; preds = %2127, %2144
  %2155 = phi i32 [ %2139, %2144 ], [ %2128, %2127 ]
  %2156 = phi ptr [ %2138, %2144 ], [ %4, %2127 ]
  %2157 = phi i64 [ %2137, %2144 ], [ 0, %2127 ]
  %2158 = add nsw i32 %2155, 1
  store i32 %2158, ptr %2156, align 4, !tbaa !5
  %2159 = getelementptr inbounds i32, ptr %7, i64 %2157
  %2160 = load i32, ptr %2159, align 4, !tbaa !5
  %2161 = getelementptr inbounds i32, ptr %6, i64 %2157
  br label %2172

2162:                                             ; preds = %2136
  %2163 = icmp eq i32 %2139, %2142
  br i1 %2163, label %2164, label %2170

2164:                                             ; preds = %2162
  store i32 0, ptr %2138, align 4, !tbaa !5
  %2165 = getelementptr inbounds i32, ptr %8, i64 %2137
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %6, i64 %2137
  store i32 %2166, ptr %2167, align 4, !tbaa !5
  %2168 = add nuw nsw i64 %2137, 1
  %2169 = icmp eq i64 %2168, %1884
  br i1 %2169, label %2177, label %2136, !llvm.loop !652

2170:                                             ; preds = %2132, %2162
  %2171 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2172:                                             ; preds = %2145, %2154
  %2173 = phi ptr [ %2161, %2154 ], [ %2138, %2145 ]
  %2174 = phi i32 [ %2160, %2154 ], [ 1, %2145 ]
  %2175 = load i32, ptr %2173, align 4, !tbaa !5
  %2176 = add nsw i32 %2175, %2174
  store i32 %2176, ptr %2173, align 4, !tbaa !5
  br label %2177

2177:                                             ; preds = %2164, %2172, %2134, %2124
  %2178 = icmp eq i32 %2126, %5
  br i1 %2178, label %5513, label %2036, !llvm.loop !653

2179:                                             ; preds = %1872
  %2180 = getelementptr inbounds i32, ptr %3, i64 %19
  %2181 = load i32, ptr %2180, align 4, !tbaa !5
  %2182 = icmp eq i32 %2181, 0
  %2183 = icmp sgt i32 %5, 0
  br i1 %2182, label %2193, label %2184

2184:                                             ; preds = %2179
  br i1 %2183, label %2185, label %5513

2185:                                             ; preds = %2184
  %2186 = icmp sgt i32 %13, 1
  %2187 = icmp sgt i32 %13, 0
  %2188 = add i32 %13, -2
  %2189 = zext i32 %2188 to i64
  %2190 = zext i32 %13 to i64
  %2191 = add nuw i32 %5, 1
  %2192 = icmp eq i32 %13, 1
  br label %2338

2193:                                             ; preds = %2179
  br i1 %2183, label %2194, label %5513

2194:                                             ; preds = %2193
  %2195 = icmp sgt i32 %13, 1
  %2196 = icmp sgt i32 %13, 0
  %2197 = add i32 %13, -2
  %2198 = zext i32 %2197 to i64
  %2199 = zext i32 %13 to i64
  %2200 = add nuw i32 %5, 1
  %2201 = icmp eq i32 %13, 1
  br label %2202

2202:                                             ; preds = %2194, %2336
  %2203 = phi i16 [ %1870, %2194 ], [ %2287, %2336 ]
  %2204 = phi i32 [ 0, %2194 ], [ %2288, %2336 ]
  %2205 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2195, label %2206, label %2275

2206:                                             ; preds = %2202, %2265
  %2207 = phi i32 [ %2274, %2265 ], [ 0, %2202 ]
  %2208 = phi i64 [ %2216, %2265 ], [ %2199, %2202 ]
  %2209 = phi i64 [ %2273, %2265 ], [ %2198, %2202 ]
  %2210 = phi i32 [ %2271, %2265 ], [ %2205, %2202 ]
  %2211 = sub i32 %2197, %2207
  %2212 = tail call i32 @llvm.smin.i32(i32 %2211, i32 0)
  %2213 = sub i32 %2211, %2212
  %2214 = zext i32 %2213 to i64
  %2215 = add nuw nsw i64 %2214, 1
  %2216 = add nsw i64 %2208, -1
  %2217 = icmp ult i32 %2213, 31
  br i1 %2217, label %2253, label %2218

2218:                                             ; preds = %2206
  %2219 = and i64 %2215, 8589934560
  %2220 = sub i64 %2209, %2219
  br label %2221

2221:                                             ; preds = %2221, %2218
  %2222 = phi i64 [ 0, %2218 ], [ %2245, %2221 ]
  %2223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2241, %2221 ]
  %2224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2242, %2221 ]
  %2225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2243, %2221 ]
  %2226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2218 ], [ %2244, %2221 ]
  %2227 = sub i64 %2209, %2222
  %2228 = getelementptr inbounds i32, ptr %9, i64 %2227
  %2229 = getelementptr inbounds i32, ptr %2228, i64 -7
  %2230 = load <8 x i32>, ptr %2229, align 4, !tbaa !5
  %2231 = shufflevector <8 x i32> %2230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2232 = getelementptr inbounds i32, ptr %2228, i64 -15
  %2233 = load <8 x i32>, ptr %2232, align 4, !tbaa !5
  %2234 = shufflevector <8 x i32> %2233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2235 = getelementptr inbounds i32, ptr %2228, i64 -23
  %2236 = load <8 x i32>, ptr %2235, align 4, !tbaa !5
  %2237 = shufflevector <8 x i32> %2236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2238 = getelementptr inbounds i32, ptr %2228, i64 -31
  %2239 = load <8 x i32>, ptr %2238, align 4, !tbaa !5
  %2240 = shufflevector <8 x i32> %2239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2241 = mul <8 x i32> %2231, %2223
  %2242 = mul <8 x i32> %2234, %2224
  %2243 = mul <8 x i32> %2237, %2225
  %2244 = mul <8 x i32> %2240, %2226
  %2245 = add nuw i64 %2222, 32
  %2246 = icmp eq i64 %2245, %2219
  br i1 %2246, label %2247, label %2221, !llvm.loop !654

2247:                                             ; preds = %2221
  %2248 = mul <8 x i32> %2242, %2241
  %2249 = mul <8 x i32> %2243, %2248
  %2250 = mul <8 x i32> %2244, %2249
  %2251 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2250)
  %2252 = icmp eq i64 %2215, %2219
  br i1 %2252, label %2265, label %2253

2253:                                             ; preds = %2206, %2247
  %2254 = phi i64 [ %2209, %2206 ], [ %2220, %2247 ]
  %2255 = phi i32 [ 1, %2206 ], [ %2251, %2247 ]
  br label %2256

2256:                                             ; preds = %2253, %2256
  %2257 = phi i64 [ %2262, %2256 ], [ %2254, %2253 ]
  %2258 = phi i32 [ %2261, %2256 ], [ %2255, %2253 ]
  %2259 = getelementptr inbounds i32, ptr %9, i64 %2257
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = mul nsw i32 %2260, %2258
  %2262 = add nsw i64 %2257, -1
  %2263 = trunc i64 %2257 to i32
  %2264 = icmp sgt i32 %2263, 0
  br i1 %2264, label %2256, label %2265, !llvm.loop !655

2265:                                             ; preds = %2256, %2247
  %2266 = phi i32 [ %2251, %2247 ], [ %2261, %2256 ]
  %2267 = and i64 %2216, 4294967295
  %2268 = getelementptr inbounds i32, ptr %6, i64 %2267
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = mul nsw i32 %2269, %2266
  %2271 = add nsw i32 %2270, %2210
  %2272 = icmp sgt i64 %2208, 2
  %2273 = add nsw i64 %2209, -1
  %2274 = add i32 %2207, 1
  br i1 %2272, label %2206, label %2275, !llvm.loop !656

2275:                                             ; preds = %2265, %2202
  %2276 = phi i32 [ %2205, %2202 ], [ %2271, %2265 ]
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds i32, ptr %1866, i64 %2277
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = sext i16 %2203 to i32
  %2281 = shl i32 %2279, 16
  %2282 = ashr exact i32 %2281, 16
  %2283 = icmp slt i32 %2282, %2280
  br i1 %2283, label %2284, label %2286

2284:                                             ; preds = %2275
  %2285 = trunc i32 %2279 to i16
  store i16 %2285, ptr %1868, align 2, !tbaa !78
  br label %2286

2286:                                             ; preds = %2284, %2275
  %2287 = phi i16 [ %2285, %2284 ], [ %2203, %2275 ]
  %2288 = add nuw nsw i32 %2204, 1
  br i1 %2196, label %2289, label %2336

2289:                                             ; preds = %2286
  %2290 = load i32, ptr %4, align 4, !tbaa !5
  %2291 = load i32, ptr %12, align 4, !tbaa !5
  %2292 = add nsw i32 %2291, -1
  %2293 = icmp slt i32 %2290, %2292
  br i1 %2293, label %2313, label %2294

2294:                                             ; preds = %2289
  %2295 = icmp eq i32 %2290, %2292
  br i1 %2295, label %2296, label %2329

2296:                                             ; preds = %2294
  store i32 0, ptr %4, align 4, !tbaa !5
  %2297 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2297, ptr %6, align 4, !tbaa !5
  br i1 %2201, label %2336, label %2298

2298:                                             ; preds = %2296, %2323
  %2299 = phi i64 [ %2327, %2323 ], [ 1, %2296 ]
  %2300 = getelementptr inbounds i32, ptr %4, i64 %2299
  %2301 = load i32, ptr %2300, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %12, i64 %2299
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = add nsw i32 %2303, -1
  %2305 = icmp slt i32 %2301, %2304
  br i1 %2305, label %2306, label %2321

2306:                                             ; preds = %2298
  br i1 %2293, label %2313, label %2307

2307:                                             ; preds = %2306
  %2308 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2309 = load i32, ptr %2308, align 4, !tbaa !5
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2299
  %2311 = load i32, ptr %2310, align 4, !tbaa !5
  %2312 = add nsw i32 %2311, %2309
  store i32 %2312, ptr %2310, align 4, !tbaa !5
  br label %2331

2313:                                             ; preds = %2289, %2306
  %2314 = phi i32 [ %2301, %2306 ], [ %2290, %2289 ]
  %2315 = phi ptr [ %2300, %2306 ], [ %4, %2289 ]
  %2316 = phi i64 [ %2299, %2306 ], [ 0, %2289 ]
  %2317 = add nsw i32 %2314, 1
  store i32 %2317, ptr %2315, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %7, i64 %2316
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = getelementptr inbounds i32, ptr %6, i64 %2316
  br label %2331

2321:                                             ; preds = %2298
  %2322 = icmp eq i32 %2301, %2304
  br i1 %2322, label %2323, label %2329

2323:                                             ; preds = %2321
  store i32 0, ptr %2300, align 4, !tbaa !5
  %2324 = getelementptr inbounds i32, ptr %8, i64 %2299
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2299
  store i32 %2325, ptr %2326, align 4, !tbaa !5
  %2327 = add nuw nsw i64 %2299, 1
  %2328 = icmp eq i64 %2327, %2199
  br i1 %2328, label %2336, label %2298, !llvm.loop !657

2329:                                             ; preds = %2294, %2321
  %2330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2331:                                             ; preds = %2307, %2313
  %2332 = phi ptr [ %2320, %2313 ], [ %2300, %2307 ]
  %2333 = phi i32 [ %2319, %2313 ], [ 1, %2307 ]
  %2334 = load i32, ptr %2332, align 4, !tbaa !5
  %2335 = add nsw i32 %2334, %2333
  store i32 %2335, ptr %2332, align 4, !tbaa !5
  br label %2336

2336:                                             ; preds = %2323, %2331, %2296, %2286
  %2337 = icmp eq i32 %2288, %5
  br i1 %2337, label %5513, label %2202, !llvm.loop !658

2338:                                             ; preds = %2185, %2479
  %2339 = phi i16 [ %1870, %2185 ], [ %2427, %2479 ]
  %2340 = phi i32 [ 0, %2185 ], [ %2428, %2479 ]
  %2341 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2186, label %2342, label %2411

2342:                                             ; preds = %2338, %2401
  %2343 = phi i32 [ %2410, %2401 ], [ 0, %2338 ]
  %2344 = phi i64 [ %2352, %2401 ], [ %2190, %2338 ]
  %2345 = phi i64 [ %2409, %2401 ], [ %2189, %2338 ]
  %2346 = phi i32 [ %2407, %2401 ], [ %2341, %2338 ]
  %2347 = sub i32 %2188, %2343
  %2348 = tail call i32 @llvm.smin.i32(i32 %2347, i32 0)
  %2349 = sub i32 %2347, %2348
  %2350 = zext i32 %2349 to i64
  %2351 = add nuw nsw i64 %2350, 1
  %2352 = add nsw i64 %2344, -1
  %2353 = icmp ult i32 %2349, 31
  br i1 %2353, label %2389, label %2354

2354:                                             ; preds = %2342
  %2355 = and i64 %2351, 8589934560
  %2356 = sub i64 %2345, %2355
  br label %2357

2357:                                             ; preds = %2357, %2354
  %2358 = phi i64 [ 0, %2354 ], [ %2381, %2357 ]
  %2359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2377, %2357 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2378, %2357 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2379, %2357 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2380, %2357 ]
  %2363 = sub i64 %2345, %2358
  %2364 = getelementptr inbounds i32, ptr %11, i64 %2363
  %2365 = getelementptr inbounds i32, ptr %2364, i64 -7
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !5
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2364, i64 -15
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !5
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = getelementptr inbounds i32, ptr %2364, i64 -23
  %2372 = load <8 x i32>, ptr %2371, align 4, !tbaa !5
  %2373 = shufflevector <8 x i32> %2372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2374 = getelementptr inbounds i32, ptr %2364, i64 -31
  %2375 = load <8 x i32>, ptr %2374, align 4, !tbaa !5
  %2376 = shufflevector <8 x i32> %2375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2377 = mul <8 x i32> %2367, %2359
  %2378 = mul <8 x i32> %2370, %2360
  %2379 = mul <8 x i32> %2373, %2361
  %2380 = mul <8 x i32> %2376, %2362
  %2381 = add nuw i64 %2358, 32
  %2382 = icmp eq i64 %2381, %2355
  br i1 %2382, label %2383, label %2357, !llvm.loop !659

2383:                                             ; preds = %2357
  %2384 = mul <8 x i32> %2378, %2377
  %2385 = mul <8 x i32> %2379, %2384
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2386)
  %2388 = icmp eq i64 %2351, %2355
  br i1 %2388, label %2401, label %2389

2389:                                             ; preds = %2342, %2383
  %2390 = phi i64 [ %2345, %2342 ], [ %2356, %2383 ]
  %2391 = phi i32 [ 1, %2342 ], [ %2387, %2383 ]
  br label %2392

2392:                                             ; preds = %2389, %2392
  %2393 = phi i64 [ %2398, %2392 ], [ %2390, %2389 ]
  %2394 = phi i32 [ %2397, %2392 ], [ %2391, %2389 ]
  %2395 = getelementptr inbounds i32, ptr %11, i64 %2393
  %2396 = load i32, ptr %2395, align 4, !tbaa !5
  %2397 = mul nsw i32 %2396, %2394
  %2398 = add nsw i64 %2393, -1
  %2399 = trunc i64 %2393 to i32
  %2400 = icmp sgt i32 %2399, 0
  br i1 %2400, label %2392, label %2401, !llvm.loop !660

2401:                                             ; preds = %2392, %2383
  %2402 = phi i32 [ %2387, %2383 ], [ %2397, %2392 ]
  %2403 = and i64 %2352, 4294967295
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2403
  %2405 = load i32, ptr %2404, align 4, !tbaa !5
  %2406 = mul nsw i32 %2405, %2402
  %2407 = add nsw i32 %2406, %2346
  %2408 = icmp sgt i64 %2344, 2
  %2409 = add nsw i64 %2345, -1
  %2410 = add i32 %2343, 1
  br i1 %2408, label %2342, label %2411, !llvm.loop !661

2411:                                             ; preds = %2401, %2338
  %2412 = phi i32 [ %2341, %2338 ], [ %2407, %2401 ]
  %2413 = icmp slt i32 %2412, %5
  br i1 %2413, label %2416, label %2414

2414:                                             ; preds = %2411
  %2415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2416:                                             ; preds = %2411
  %2417 = sext i32 %2412 to i64
  %2418 = getelementptr inbounds i32, ptr %1866, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = sext i16 %2339 to i32
  %2421 = shl i32 %2419, 16
  %2422 = ashr exact i32 %2421, 16
  %2423 = icmp slt i32 %2422, %2420
  br i1 %2423, label %2424, label %2426

2424:                                             ; preds = %2416
  %2425 = trunc i32 %2419 to i16
  store i16 %2425, ptr %1868, align 2, !tbaa !78
  br label %2426

2426:                                             ; preds = %2424, %2416
  %2427 = phi i16 [ %2425, %2424 ], [ %2339, %2416 ]
  %2428 = add nuw nsw i32 %2340, 1
  br i1 %2187, label %2429, label %2479

2429:                                             ; preds = %2426
  %2430 = load i32, ptr %4, align 4, !tbaa !5
  %2431 = load i32, ptr %12, align 4, !tbaa !5
  %2432 = add nsw i32 %2431, -1
  %2433 = icmp slt i32 %2430, %2432
  br i1 %2433, label %2456, label %2434

2434:                                             ; preds = %2429
  %2435 = icmp eq i32 %2430, %2432
  br i1 %2435, label %2436, label %2472

2436:                                             ; preds = %2434
  store i32 0, ptr %4, align 4, !tbaa !5
  %2437 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2437, ptr %6, align 4, !tbaa !5
  br i1 %2192, label %2479, label %2438

2438:                                             ; preds = %2436, %2466
  %2439 = phi i64 [ %2470, %2466 ], [ 1, %2436 ]
  %2440 = getelementptr inbounds i32, ptr %4, i64 %2439
  %2441 = load i32, ptr %2440, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %12, i64 %2439
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = add nsw i32 %2443, -1
  %2445 = icmp slt i32 %2441, %2444
  br i1 %2445, label %2446, label %2464

2446:                                             ; preds = %2438
  br i1 %2433, label %2456, label %2447

2447:                                             ; preds = %2446
  %2448 = shl i64 %2439, 32
  %2449 = add i64 %2448, -4294967296
  %2450 = ashr exact i64 %2449, 32
  %2451 = getelementptr inbounds i32, ptr %7, i64 %2450
  %2452 = load i32, ptr %2451, align 4, !tbaa !5
  %2453 = getelementptr inbounds i32, ptr %6, i64 %2439
  %2454 = load i32, ptr %2453, align 4, !tbaa !5
  %2455 = add nsw i32 %2454, %2452
  store i32 %2455, ptr %2453, align 4, !tbaa !5
  br label %2474

2456:                                             ; preds = %2429, %2446
  %2457 = phi i32 [ %2441, %2446 ], [ %2430, %2429 ]
  %2458 = phi ptr [ %2440, %2446 ], [ %4, %2429 ]
  %2459 = phi i64 [ %2439, %2446 ], [ 0, %2429 ]
  %2460 = add nsw i32 %2457, 1
  store i32 %2460, ptr %2458, align 4, !tbaa !5
  %2461 = getelementptr inbounds i32, ptr %7, i64 %2459
  %2462 = load i32, ptr %2461, align 4, !tbaa !5
  %2463 = getelementptr inbounds i32, ptr %6, i64 %2459
  br label %2474

2464:                                             ; preds = %2438
  %2465 = icmp eq i32 %2441, %2444
  br i1 %2465, label %2466, label %2472

2466:                                             ; preds = %2464
  store i32 0, ptr %2440, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %8, i64 %2439
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = getelementptr inbounds i32, ptr %6, i64 %2439
  store i32 %2468, ptr %2469, align 4, !tbaa !5
  %2470 = add nuw nsw i64 %2439, 1
  %2471 = icmp eq i64 %2470, %2190
  br i1 %2471, label %2479, label %2438, !llvm.loop !662

2472:                                             ; preds = %2434, %2464
  %2473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2474:                                             ; preds = %2447, %2456
  %2475 = phi ptr [ %2463, %2456 ], [ %2440, %2447 ]
  %2476 = phi i32 [ %2462, %2456 ], [ 1, %2447 ]
  %2477 = load i32, ptr %2475, align 4, !tbaa !5
  %2478 = add nsw i32 %2477, %2476
  store i32 %2478, ptr %2475, align 4, !tbaa !5
  br label %2479

2479:                                             ; preds = %2466, %2474, %2436, %2426
  %2480 = icmp eq i32 %2428, %5
  br i1 %2480, label %5513, label %2338, !llvm.loop !663

2481:                                             ; preds = %1872
  %2482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

2483:                                             ; preds = %18
  %2484 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2485 = load ptr, ptr %2484, align 8, !tbaa !9
  %2486 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2487 = load ptr, ptr %2486, align 8, !tbaa !9
  %2488 = load i32, ptr %2485, align 4, !tbaa !5
  store i32 %2488, ptr %2487, align 4, !tbaa !5
  %2489 = icmp eq i32 %13, 0
  br i1 %2489, label %2490, label %2494

2490:                                             ; preds = %2483
  %2491 = load i32, ptr %2485, align 4, !tbaa !5
  %2492 = icmp sgt i32 %2488, %2491
  br i1 %2492, label %2493, label %5513

2493:                                             ; preds = %2490
  store i32 %2491, ptr %2487, align 4, !tbaa !5
  br label %5513

2494:                                             ; preds = %2483
  switch i32 %1, label %3083 [
    i32 1, label %2495
    i32 0, label %2791
  ]

2495:                                             ; preds = %2494
  %2496 = getelementptr inbounds i32, ptr %3, i64 %19
  %2497 = load i32, ptr %2496, align 4, !tbaa !5
  %2498 = icmp eq i32 %2497, 0
  %2499 = icmp sgt i32 %5, 0
  br i1 %2498, label %2509, label %2500

2500:                                             ; preds = %2495
  br i1 %2499, label %2501, label %5513

2501:                                             ; preds = %2500
  %2502 = icmp sgt i32 %13, 1
  %2503 = icmp sgt i32 %13, 0
  %2504 = add i32 %13, -2
  %2505 = zext i32 %2504 to i64
  %2506 = zext i32 %13 to i64
  %2507 = add nuw i32 %5, 1
  %2508 = icmp eq i32 %13, 1
  br label %2653

2509:                                             ; preds = %2495
  br i1 %2499, label %2510, label %5513

2510:                                             ; preds = %2509
  %2511 = icmp sgt i32 %13, 1
  %2512 = icmp sgt i32 %13, 0
  %2513 = add i32 %13, -2
  %2514 = zext i32 %2513 to i64
  %2515 = zext i32 %13 to i64
  %2516 = add nuw i32 %5, 1
  %2517 = icmp eq i32 %13, 1
  br label %2518

2518:                                             ; preds = %2510, %2651
  %2519 = phi i32 [ 0, %2510 ], [ %2603, %2651 ]
  %2520 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2511, label %2521, label %2590

2521:                                             ; preds = %2518, %2580
  %2522 = phi i32 [ %2589, %2580 ], [ 0, %2518 ]
  %2523 = phi i64 [ %2531, %2580 ], [ %2515, %2518 ]
  %2524 = phi i64 [ %2588, %2580 ], [ %2514, %2518 ]
  %2525 = phi i32 [ %2586, %2580 ], [ %2520, %2518 ]
  %2526 = sub i32 %2513, %2522
  %2527 = tail call i32 @llvm.smin.i32(i32 %2526, i32 0)
  %2528 = sub i32 %2526, %2527
  %2529 = zext i32 %2528 to i64
  %2530 = add nuw nsw i64 %2529, 1
  %2531 = add nsw i64 %2523, -1
  %2532 = icmp ult i32 %2528, 31
  br i1 %2532, label %2568, label %2533

2533:                                             ; preds = %2521
  %2534 = and i64 %2530, 8589934560
  %2535 = sub i64 %2524, %2534
  br label %2536

2536:                                             ; preds = %2536, %2533
  %2537 = phi i64 [ 0, %2533 ], [ %2560, %2536 ]
  %2538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2556, %2536 ]
  %2539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2557, %2536 ]
  %2540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2558, %2536 ]
  %2541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2533 ], [ %2559, %2536 ]
  %2542 = sub i64 %2524, %2537
  %2543 = getelementptr inbounds i32, ptr %9, i64 %2542
  %2544 = getelementptr inbounds i32, ptr %2543, i64 -7
  %2545 = load <8 x i32>, ptr %2544, align 4, !tbaa !5
  %2546 = shufflevector <8 x i32> %2545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2547 = getelementptr inbounds i32, ptr %2543, i64 -15
  %2548 = load <8 x i32>, ptr %2547, align 4, !tbaa !5
  %2549 = shufflevector <8 x i32> %2548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2550 = getelementptr inbounds i32, ptr %2543, i64 -23
  %2551 = load <8 x i32>, ptr %2550, align 4, !tbaa !5
  %2552 = shufflevector <8 x i32> %2551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2553 = getelementptr inbounds i32, ptr %2543, i64 -31
  %2554 = load <8 x i32>, ptr %2553, align 4, !tbaa !5
  %2555 = shufflevector <8 x i32> %2554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2556 = mul <8 x i32> %2546, %2538
  %2557 = mul <8 x i32> %2549, %2539
  %2558 = mul <8 x i32> %2552, %2540
  %2559 = mul <8 x i32> %2555, %2541
  %2560 = add nuw i64 %2537, 32
  %2561 = icmp eq i64 %2560, %2534
  br i1 %2561, label %2562, label %2536, !llvm.loop !664

2562:                                             ; preds = %2536
  %2563 = mul <8 x i32> %2557, %2556
  %2564 = mul <8 x i32> %2558, %2563
  %2565 = mul <8 x i32> %2559, %2564
  %2566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2565)
  %2567 = icmp eq i64 %2530, %2534
  br i1 %2567, label %2580, label %2568

2568:                                             ; preds = %2521, %2562
  %2569 = phi i64 [ %2524, %2521 ], [ %2535, %2562 ]
  %2570 = phi i32 [ 1, %2521 ], [ %2566, %2562 ]
  br label %2571

2571:                                             ; preds = %2568, %2571
  %2572 = phi i64 [ %2577, %2571 ], [ %2569, %2568 ]
  %2573 = phi i32 [ %2576, %2571 ], [ %2570, %2568 ]
  %2574 = getelementptr inbounds i32, ptr %9, i64 %2572
  %2575 = load i32, ptr %2574, align 4, !tbaa !5
  %2576 = mul nsw i32 %2575, %2573
  %2577 = add nsw i64 %2572, -1
  %2578 = trunc i64 %2572 to i32
  %2579 = icmp sgt i32 %2578, 0
  br i1 %2579, label %2571, label %2580, !llvm.loop !665

2580:                                             ; preds = %2571, %2562
  %2581 = phi i32 [ %2566, %2562 ], [ %2576, %2571 ]
  %2582 = and i64 %2531, 4294967295
  %2583 = getelementptr inbounds i32, ptr %6, i64 %2582
  %2584 = load i32, ptr %2583, align 4, !tbaa !5
  %2585 = mul nsw i32 %2584, %2581
  %2586 = add nsw i32 %2585, %2525
  %2587 = icmp sgt i64 %2523, 2
  %2588 = add nsw i64 %2524, -1
  %2589 = add i32 %2522, 1
  br i1 %2587, label %2521, label %2590, !llvm.loop !666

2590:                                             ; preds = %2580, %2518
  %2591 = phi i32 [ %2520, %2518 ], [ %2586, %2580 ]
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds double, ptr %2, i64 %2592
  %2594 = load double, ptr %2593, align 8, !tbaa !18
  %2595 = getelementptr inbounds i32, ptr %2485, i64 %2592
  %2596 = load i32, ptr %2595, align 4, !tbaa !5
  %2597 = fcmp fast ueq double %2594, 0.000000e+00
  br i1 %2597, label %2602, label %2598

2598:                                             ; preds = %2590
  %2599 = load i32, ptr %2487, align 4, !tbaa !5
  %2600 = icmp sgt i32 %2599, %2596
  br i1 %2600, label %2601, label %2602

2601:                                             ; preds = %2598
  store i32 %2596, ptr %2487, align 4, !tbaa !5
  br label %2602

2602:                                             ; preds = %2598, %2601, %2590
  %2603 = add nuw nsw i32 %2519, 1
  br i1 %2512, label %2604, label %2651

2604:                                             ; preds = %2602
  %2605 = load i32, ptr %4, align 4, !tbaa !5
  %2606 = load i32, ptr %12, align 4, !tbaa !5
  %2607 = add nsw i32 %2606, -1
  %2608 = icmp slt i32 %2605, %2607
  br i1 %2608, label %2628, label %2609

2609:                                             ; preds = %2604
  %2610 = icmp eq i32 %2605, %2607
  br i1 %2610, label %2611, label %2644

2611:                                             ; preds = %2609
  store i32 0, ptr %4, align 4, !tbaa !5
  %2612 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2612, ptr %6, align 4, !tbaa !5
  br i1 %2517, label %2651, label %2613

2613:                                             ; preds = %2611, %2638
  %2614 = phi i64 [ %2642, %2638 ], [ 1, %2611 ]
  %2615 = getelementptr inbounds i32, ptr %4, i64 %2614
  %2616 = load i32, ptr %2615, align 4, !tbaa !5
  %2617 = getelementptr inbounds i32, ptr %12, i64 %2614
  %2618 = load i32, ptr %2617, align 4, !tbaa !5
  %2619 = add nsw i32 %2618, -1
  %2620 = icmp slt i32 %2616, %2619
  br i1 %2620, label %2621, label %2636

2621:                                             ; preds = %2613
  br i1 %2608, label %2628, label %2622

2622:                                             ; preds = %2621
  %2623 = getelementptr inbounds i32, ptr %7, i64 %2614
  %2624 = load i32, ptr %2623, align 4, !tbaa !5
  %2625 = getelementptr inbounds i32, ptr %6, i64 %2614
  %2626 = load i32, ptr %2625, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2624
  store i32 %2627, ptr %2625, align 4, !tbaa !5
  br label %2646

2628:                                             ; preds = %2604, %2621
  %2629 = phi i32 [ %2616, %2621 ], [ %2605, %2604 ]
  %2630 = phi ptr [ %2615, %2621 ], [ %4, %2604 ]
  %2631 = phi i64 [ %2614, %2621 ], [ 0, %2604 ]
  %2632 = add nsw i32 %2629, 1
  store i32 %2632, ptr %2630, align 4, !tbaa !5
  %2633 = getelementptr inbounds i32, ptr %7, i64 %2631
  %2634 = load i32, ptr %2633, align 4, !tbaa !5
  %2635 = getelementptr inbounds i32, ptr %6, i64 %2631
  br label %2646

2636:                                             ; preds = %2613
  %2637 = icmp eq i32 %2616, %2619
  br i1 %2637, label %2638, label %2644

2638:                                             ; preds = %2636
  store i32 0, ptr %2615, align 4, !tbaa !5
  %2639 = getelementptr inbounds i32, ptr %8, i64 %2614
  %2640 = load i32, ptr %2639, align 4, !tbaa !5
  %2641 = getelementptr inbounds i32, ptr %6, i64 %2614
  store i32 %2640, ptr %2641, align 4, !tbaa !5
  %2642 = add nuw nsw i64 %2614, 1
  %2643 = icmp eq i64 %2642, %2515
  br i1 %2643, label %2651, label %2613, !llvm.loop !667

2644:                                             ; preds = %2609, %2636
  %2645 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2646:                                             ; preds = %2622, %2628
  %2647 = phi ptr [ %2635, %2628 ], [ %2615, %2622 ]
  %2648 = phi i32 [ %2634, %2628 ], [ 1, %2622 ]
  %2649 = load i32, ptr %2647, align 4, !tbaa !5
  %2650 = add nsw i32 %2649, %2648
  store i32 %2650, ptr %2647, align 4, !tbaa !5
  br label %2651

2651:                                             ; preds = %2638, %2646, %2611, %2602
  %2652 = icmp eq i32 %2603, %5
  br i1 %2652, label %5513, label %2518, !llvm.loop !668

2653:                                             ; preds = %2501, %2789
  %2654 = phi i32 [ 0, %2501 ], [ %2738, %2789 ]
  %2655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2502, label %2656, label %2725

2656:                                             ; preds = %2653, %2715
  %2657 = phi i32 [ %2724, %2715 ], [ 0, %2653 ]
  %2658 = phi i64 [ %2666, %2715 ], [ %2506, %2653 ]
  %2659 = phi i64 [ %2723, %2715 ], [ %2505, %2653 ]
  %2660 = phi i32 [ %2721, %2715 ], [ %2655, %2653 ]
  %2661 = sub i32 %2504, %2657
  %2662 = tail call i32 @llvm.smin.i32(i32 %2661, i32 0)
  %2663 = sub i32 %2661, %2662
  %2664 = zext i32 %2663 to i64
  %2665 = add nuw nsw i64 %2664, 1
  %2666 = add nsw i64 %2658, -1
  %2667 = icmp ult i32 %2663, 31
  br i1 %2667, label %2703, label %2668

2668:                                             ; preds = %2656
  %2669 = and i64 %2665, 8589934560
  %2670 = sub i64 %2659, %2669
  br label %2671

2671:                                             ; preds = %2671, %2668
  %2672 = phi i64 [ 0, %2668 ], [ %2695, %2671 ]
  %2673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2691, %2671 ]
  %2674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2692, %2671 ]
  %2675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2693, %2671 ]
  %2676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2668 ], [ %2694, %2671 ]
  %2677 = sub i64 %2659, %2672
  %2678 = getelementptr inbounds i32, ptr %11, i64 %2677
  %2679 = getelementptr inbounds i32, ptr %2678, i64 -7
  %2680 = load <8 x i32>, ptr %2679, align 4, !tbaa !5
  %2681 = shufflevector <8 x i32> %2680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2682 = getelementptr inbounds i32, ptr %2678, i64 -15
  %2683 = load <8 x i32>, ptr %2682, align 4, !tbaa !5
  %2684 = shufflevector <8 x i32> %2683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2685 = getelementptr inbounds i32, ptr %2678, i64 -23
  %2686 = load <8 x i32>, ptr %2685, align 4, !tbaa !5
  %2687 = shufflevector <8 x i32> %2686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2688 = getelementptr inbounds i32, ptr %2678, i64 -31
  %2689 = load <8 x i32>, ptr %2688, align 4, !tbaa !5
  %2690 = shufflevector <8 x i32> %2689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2691 = mul <8 x i32> %2681, %2673
  %2692 = mul <8 x i32> %2684, %2674
  %2693 = mul <8 x i32> %2687, %2675
  %2694 = mul <8 x i32> %2690, %2676
  %2695 = add nuw i64 %2672, 32
  %2696 = icmp eq i64 %2695, %2669
  br i1 %2696, label %2697, label %2671, !llvm.loop !669

2697:                                             ; preds = %2671
  %2698 = mul <8 x i32> %2692, %2691
  %2699 = mul <8 x i32> %2693, %2698
  %2700 = mul <8 x i32> %2694, %2699
  %2701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2700)
  %2702 = icmp eq i64 %2665, %2669
  br i1 %2702, label %2715, label %2703

2703:                                             ; preds = %2656, %2697
  %2704 = phi i64 [ %2659, %2656 ], [ %2670, %2697 ]
  %2705 = phi i32 [ 1, %2656 ], [ %2701, %2697 ]
  br label %2706

2706:                                             ; preds = %2703, %2706
  %2707 = phi i64 [ %2712, %2706 ], [ %2704, %2703 ]
  %2708 = phi i32 [ %2711, %2706 ], [ %2705, %2703 ]
  %2709 = getelementptr inbounds i32, ptr %11, i64 %2707
  %2710 = load i32, ptr %2709, align 4, !tbaa !5
  %2711 = mul nsw i32 %2710, %2708
  %2712 = add nsw i64 %2707, -1
  %2713 = trunc i64 %2707 to i32
  %2714 = icmp sgt i32 %2713, 0
  br i1 %2714, label %2706, label %2715, !llvm.loop !670

2715:                                             ; preds = %2706, %2697
  %2716 = phi i32 [ %2701, %2697 ], [ %2711, %2706 ]
  %2717 = and i64 %2666, 4294967295
  %2718 = getelementptr inbounds i32, ptr %6, i64 %2717
  %2719 = load i32, ptr %2718, align 4, !tbaa !5
  %2720 = mul nsw i32 %2719, %2716
  %2721 = add nsw i32 %2720, %2660
  %2722 = icmp sgt i64 %2658, 2
  %2723 = add nsw i64 %2659, -1
  %2724 = add i32 %2657, 1
  br i1 %2722, label %2656, label %2725, !llvm.loop !671

2725:                                             ; preds = %2715, %2653
  %2726 = phi i32 [ %2655, %2653 ], [ %2721, %2715 ]
  %2727 = icmp slt i32 %2726, %5
  br i1 %2727, label %2730, label %2728

2728:                                             ; preds = %2725
  %2729 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

2730:                                             ; preds = %2725
  %2731 = sext i32 %2726 to i64
  %2732 = getelementptr inbounds i32, ptr %2485, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = load i32, ptr %2487, align 4, !tbaa !5
  %2735 = icmp sgt i32 %2734, %2733
  br i1 %2735, label %2736, label %2737

2736:                                             ; preds = %2730
  store i32 %2733, ptr %2487, align 4, !tbaa !5
  br label %2737

2737:                                             ; preds = %2730, %2736
  %2738 = add nuw nsw i32 %2654, 1
  br i1 %2503, label %2739, label %2789

2739:                                             ; preds = %2737
  %2740 = load i32, ptr %4, align 4, !tbaa !5
  %2741 = load i32, ptr %12, align 4, !tbaa !5
  %2742 = add nsw i32 %2741, -1
  %2743 = icmp slt i32 %2740, %2742
  br i1 %2743, label %2766, label %2744

2744:                                             ; preds = %2739
  %2745 = icmp eq i32 %2740, %2742
  br i1 %2745, label %2746, label %2782

2746:                                             ; preds = %2744
  store i32 0, ptr %4, align 4, !tbaa !5
  %2747 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2747, ptr %6, align 4, !tbaa !5
  br i1 %2508, label %2789, label %2748

2748:                                             ; preds = %2746, %2776
  %2749 = phi i64 [ %2780, %2776 ], [ 1, %2746 ]
  %2750 = getelementptr inbounds i32, ptr %4, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %12, i64 %2749
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = add nsw i32 %2753, -1
  %2755 = icmp slt i32 %2751, %2754
  br i1 %2755, label %2756, label %2774

2756:                                             ; preds = %2748
  br i1 %2743, label %2766, label %2757

2757:                                             ; preds = %2756
  %2758 = shl i64 %2749, 32
  %2759 = add i64 %2758, -4294967296
  %2760 = ashr exact i64 %2759, 32
  %2761 = getelementptr inbounds i32, ptr %7, i64 %2760
  %2762 = load i32, ptr %2761, align 4, !tbaa !5
  %2763 = getelementptr inbounds i32, ptr %6, i64 %2749
  %2764 = load i32, ptr %2763, align 4, !tbaa !5
  %2765 = add nsw i32 %2764, %2762
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  br label %2784

2766:                                             ; preds = %2739, %2756
  %2767 = phi i32 [ %2751, %2756 ], [ %2740, %2739 ]
  %2768 = phi ptr [ %2750, %2756 ], [ %4, %2739 ]
  %2769 = phi i64 [ %2749, %2756 ], [ 0, %2739 ]
  %2770 = add nsw i32 %2767, 1
  store i32 %2770, ptr %2768, align 4, !tbaa !5
  %2771 = getelementptr inbounds i32, ptr %7, i64 %2769
  %2772 = load i32, ptr %2771, align 4, !tbaa !5
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2769
  br label %2784

2774:                                             ; preds = %2748
  %2775 = icmp eq i32 %2751, %2754
  br i1 %2775, label %2776, label %2782

2776:                                             ; preds = %2774
  store i32 0, ptr %2750, align 4, !tbaa !5
  %2777 = getelementptr inbounds i32, ptr %8, i64 %2749
  %2778 = load i32, ptr %2777, align 4, !tbaa !5
  %2779 = getelementptr inbounds i32, ptr %6, i64 %2749
  store i32 %2778, ptr %2779, align 4, !tbaa !5
  %2780 = add nuw nsw i64 %2749, 1
  %2781 = icmp eq i64 %2780, %2506
  br i1 %2781, label %2789, label %2748, !llvm.loop !672

2782:                                             ; preds = %2744, %2774
  %2783 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2784:                                             ; preds = %2757, %2766
  %2785 = phi ptr [ %2773, %2766 ], [ %2750, %2757 ]
  %2786 = phi i32 [ %2772, %2766 ], [ 1, %2757 ]
  %2787 = load i32, ptr %2785, align 4, !tbaa !5
  %2788 = add nsw i32 %2787, %2786
  store i32 %2788, ptr %2785, align 4, !tbaa !5
  br label %2789

2789:                                             ; preds = %2776, %2784, %2746, %2737
  %2790 = icmp eq i32 %2738, %5
  br i1 %2790, label %5513, label %2653, !llvm.loop !673

2791:                                             ; preds = %2494
  %2792 = getelementptr inbounds i32, ptr %3, i64 %19
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = icmp eq i32 %2793, 0
  %2795 = icmp sgt i32 %5, 0
  br i1 %2794, label %2805, label %2796

2796:                                             ; preds = %2791
  br i1 %2795, label %2797, label %5513

2797:                                             ; preds = %2796
  %2798 = icmp sgt i32 %13, 1
  %2799 = icmp sgt i32 %13, 0
  %2800 = add i32 %13, -2
  %2801 = zext i32 %2800 to i64
  %2802 = zext i32 %13 to i64
  %2803 = add nuw i32 %5, 1
  %2804 = icmp eq i32 %13, 1
  br label %2945

2805:                                             ; preds = %2791
  br i1 %2795, label %2806, label %5513

2806:                                             ; preds = %2805
  %2807 = icmp sgt i32 %13, 1
  %2808 = icmp sgt i32 %13, 0
  %2809 = add i32 %13, -2
  %2810 = zext i32 %2809 to i64
  %2811 = zext i32 %13 to i64
  %2812 = add nuw i32 %5, 1
  %2813 = icmp eq i32 %13, 1
  br label %2814

2814:                                             ; preds = %2806, %2943
  %2815 = phi i32 [ 0, %2806 ], [ %2895, %2943 ]
  %2816 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2807, label %2817, label %2886

2817:                                             ; preds = %2814, %2876
  %2818 = phi i32 [ %2885, %2876 ], [ 0, %2814 ]
  %2819 = phi i64 [ %2827, %2876 ], [ %2811, %2814 ]
  %2820 = phi i64 [ %2884, %2876 ], [ %2810, %2814 ]
  %2821 = phi i32 [ %2882, %2876 ], [ %2816, %2814 ]
  %2822 = sub i32 %2809, %2818
  %2823 = tail call i32 @llvm.smin.i32(i32 %2822, i32 0)
  %2824 = sub i32 %2822, %2823
  %2825 = zext i32 %2824 to i64
  %2826 = add nuw nsw i64 %2825, 1
  %2827 = add nsw i64 %2819, -1
  %2828 = icmp ult i32 %2824, 31
  br i1 %2828, label %2864, label %2829

2829:                                             ; preds = %2817
  %2830 = and i64 %2826, 8589934560
  %2831 = sub i64 %2820, %2830
  br label %2832

2832:                                             ; preds = %2832, %2829
  %2833 = phi i64 [ 0, %2829 ], [ %2856, %2832 ]
  %2834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2852, %2832 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2853, %2832 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2854, %2832 ]
  %2837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2829 ], [ %2855, %2832 ]
  %2838 = sub i64 %2820, %2833
  %2839 = getelementptr inbounds i32, ptr %9, i64 %2838
  %2840 = getelementptr inbounds i32, ptr %2839, i64 -7
  %2841 = load <8 x i32>, ptr %2840, align 4, !tbaa !5
  %2842 = shufflevector <8 x i32> %2841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2843 = getelementptr inbounds i32, ptr %2839, i64 -15
  %2844 = load <8 x i32>, ptr %2843, align 4, !tbaa !5
  %2845 = shufflevector <8 x i32> %2844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2846 = getelementptr inbounds i32, ptr %2839, i64 -23
  %2847 = load <8 x i32>, ptr %2846, align 4, !tbaa !5
  %2848 = shufflevector <8 x i32> %2847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2849 = getelementptr inbounds i32, ptr %2839, i64 -31
  %2850 = load <8 x i32>, ptr %2849, align 4, !tbaa !5
  %2851 = shufflevector <8 x i32> %2850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2852 = mul <8 x i32> %2842, %2834
  %2853 = mul <8 x i32> %2845, %2835
  %2854 = mul <8 x i32> %2848, %2836
  %2855 = mul <8 x i32> %2851, %2837
  %2856 = add nuw i64 %2833, 32
  %2857 = icmp eq i64 %2856, %2830
  br i1 %2857, label %2858, label %2832, !llvm.loop !674

2858:                                             ; preds = %2832
  %2859 = mul <8 x i32> %2853, %2852
  %2860 = mul <8 x i32> %2854, %2859
  %2861 = mul <8 x i32> %2855, %2860
  %2862 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2861)
  %2863 = icmp eq i64 %2826, %2830
  br i1 %2863, label %2876, label %2864

2864:                                             ; preds = %2817, %2858
  %2865 = phi i64 [ %2820, %2817 ], [ %2831, %2858 ]
  %2866 = phi i32 [ 1, %2817 ], [ %2862, %2858 ]
  br label %2867

2867:                                             ; preds = %2864, %2867
  %2868 = phi i64 [ %2873, %2867 ], [ %2865, %2864 ]
  %2869 = phi i32 [ %2872, %2867 ], [ %2866, %2864 ]
  %2870 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2871 = load i32, ptr %2870, align 4, !tbaa !5
  %2872 = mul nsw i32 %2871, %2869
  %2873 = add nsw i64 %2868, -1
  %2874 = trunc i64 %2868 to i32
  %2875 = icmp sgt i32 %2874, 0
  br i1 %2875, label %2867, label %2876, !llvm.loop !675

2876:                                             ; preds = %2867, %2858
  %2877 = phi i32 [ %2862, %2858 ], [ %2872, %2867 ]
  %2878 = and i64 %2827, 4294967295
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2878
  %2880 = load i32, ptr %2879, align 4, !tbaa !5
  %2881 = mul nsw i32 %2880, %2877
  %2882 = add nsw i32 %2881, %2821
  %2883 = icmp sgt i64 %2819, 2
  %2884 = add nsw i64 %2820, -1
  %2885 = add i32 %2818, 1
  br i1 %2883, label %2817, label %2886, !llvm.loop !676

2886:                                             ; preds = %2876, %2814
  %2887 = phi i32 [ %2816, %2814 ], [ %2882, %2876 ]
  %2888 = sext i32 %2887 to i64
  %2889 = getelementptr inbounds i32, ptr %2485, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = load i32, ptr %2487, align 4, !tbaa !5
  %2892 = icmp sgt i32 %2891, %2890
  br i1 %2892, label %2893, label %2894

2893:                                             ; preds = %2886
  store i32 %2890, ptr %2487, align 4, !tbaa !5
  br label %2894

2894:                                             ; preds = %2893, %2886
  %2895 = add nuw nsw i32 %2815, 1
  br i1 %2808, label %2896, label %2943

2896:                                             ; preds = %2894
  %2897 = load i32, ptr %4, align 4, !tbaa !5
  %2898 = load i32, ptr %12, align 4, !tbaa !5
  %2899 = add nsw i32 %2898, -1
  %2900 = icmp slt i32 %2897, %2899
  br i1 %2900, label %2920, label %2901

2901:                                             ; preds = %2896
  %2902 = icmp eq i32 %2897, %2899
  br i1 %2902, label %2903, label %2936

2903:                                             ; preds = %2901
  store i32 0, ptr %4, align 4, !tbaa !5
  %2904 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2904, ptr %6, align 4, !tbaa !5
  br i1 %2813, label %2943, label %2905

2905:                                             ; preds = %2903, %2930
  %2906 = phi i64 [ %2934, %2930 ], [ 1, %2903 ]
  %2907 = getelementptr inbounds i32, ptr %4, i64 %2906
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %12, i64 %2906
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = add nsw i32 %2910, -1
  %2912 = icmp slt i32 %2908, %2911
  br i1 %2912, label %2913, label %2928

2913:                                             ; preds = %2905
  br i1 %2900, label %2920, label %2914

2914:                                             ; preds = %2913
  %2915 = getelementptr inbounds i32, ptr %7, i64 %2906
  %2916 = load i32, ptr %2915, align 4, !tbaa !5
  %2917 = getelementptr inbounds i32, ptr %6, i64 %2906
  %2918 = load i32, ptr %2917, align 4, !tbaa !5
  %2919 = add nsw i32 %2918, %2916
  store i32 %2919, ptr %2917, align 4, !tbaa !5
  br label %2938

2920:                                             ; preds = %2896, %2913
  %2921 = phi i32 [ %2908, %2913 ], [ %2897, %2896 ]
  %2922 = phi ptr [ %2907, %2913 ], [ %4, %2896 ]
  %2923 = phi i64 [ %2906, %2913 ], [ 0, %2896 ]
  %2924 = add nsw i32 %2921, 1
  store i32 %2924, ptr %2922, align 4, !tbaa !5
  %2925 = getelementptr inbounds i32, ptr %7, i64 %2923
  %2926 = load i32, ptr %2925, align 4, !tbaa !5
  %2927 = getelementptr inbounds i32, ptr %6, i64 %2923
  br label %2938

2928:                                             ; preds = %2905
  %2929 = icmp eq i32 %2908, %2911
  br i1 %2929, label %2930, label %2936

2930:                                             ; preds = %2928
  store i32 0, ptr %2907, align 4, !tbaa !5
  %2931 = getelementptr inbounds i32, ptr %8, i64 %2906
  %2932 = load i32, ptr %2931, align 4, !tbaa !5
  %2933 = getelementptr inbounds i32, ptr %6, i64 %2906
  store i32 %2932, ptr %2933, align 4, !tbaa !5
  %2934 = add nuw nsw i64 %2906, 1
  %2935 = icmp eq i64 %2934, %2811
  br i1 %2935, label %2943, label %2905, !llvm.loop !677

2936:                                             ; preds = %2901, %2928
  %2937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

2938:                                             ; preds = %2914, %2920
  %2939 = phi ptr [ %2927, %2920 ], [ %2907, %2914 ]
  %2940 = phi i32 [ %2926, %2920 ], [ 1, %2914 ]
  %2941 = load i32, ptr %2939, align 4, !tbaa !5
  %2942 = add nsw i32 %2941, %2940
  store i32 %2942, ptr %2939, align 4, !tbaa !5
  br label %2943

2943:                                             ; preds = %2930, %2938, %2903, %2894
  %2944 = icmp eq i32 %2895, %5
  br i1 %2944, label %5513, label %2814, !llvm.loop !678

2945:                                             ; preds = %2797, %3081
  %2946 = phi i32 [ 0, %2797 ], [ %3030, %3081 ]
  %2947 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2798, label %2948, label %3017

2948:                                             ; preds = %2945, %3007
  %2949 = phi i32 [ %3016, %3007 ], [ 0, %2945 ]
  %2950 = phi i64 [ %2958, %3007 ], [ %2802, %2945 ]
  %2951 = phi i64 [ %3015, %3007 ], [ %2801, %2945 ]
  %2952 = phi i32 [ %3013, %3007 ], [ %2947, %2945 ]
  %2953 = sub i32 %2800, %2949
  %2954 = tail call i32 @llvm.smin.i32(i32 %2953, i32 0)
  %2955 = sub i32 %2953, %2954
  %2956 = zext i32 %2955 to i64
  %2957 = add nuw nsw i64 %2956, 1
  %2958 = add nsw i64 %2950, -1
  %2959 = icmp ult i32 %2955, 31
  br i1 %2959, label %2995, label %2960

2960:                                             ; preds = %2948
  %2961 = and i64 %2957, 8589934560
  %2962 = sub i64 %2951, %2961
  br label %2963

2963:                                             ; preds = %2963, %2960
  %2964 = phi i64 [ 0, %2960 ], [ %2987, %2963 ]
  %2965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2983, %2963 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2984, %2963 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2985, %2963 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2960 ], [ %2986, %2963 ]
  %2969 = sub i64 %2951, %2964
  %2970 = getelementptr inbounds i32, ptr %11, i64 %2969
  %2971 = getelementptr inbounds i32, ptr %2970, i64 -7
  %2972 = load <8 x i32>, ptr %2971, align 4, !tbaa !5
  %2973 = shufflevector <8 x i32> %2972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2974 = getelementptr inbounds i32, ptr %2970, i64 -15
  %2975 = load <8 x i32>, ptr %2974, align 4, !tbaa !5
  %2976 = shufflevector <8 x i32> %2975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2977 = getelementptr inbounds i32, ptr %2970, i64 -23
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !5
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = getelementptr inbounds i32, ptr %2970, i64 -31
  %2981 = load <8 x i32>, ptr %2980, align 4, !tbaa !5
  %2982 = shufflevector <8 x i32> %2981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2983 = mul <8 x i32> %2973, %2965
  %2984 = mul <8 x i32> %2976, %2966
  %2985 = mul <8 x i32> %2979, %2967
  %2986 = mul <8 x i32> %2982, %2968
  %2987 = add nuw i64 %2964, 32
  %2988 = icmp eq i64 %2987, %2961
  br i1 %2988, label %2989, label %2963, !llvm.loop !679

2989:                                             ; preds = %2963
  %2990 = mul <8 x i32> %2984, %2983
  %2991 = mul <8 x i32> %2985, %2990
  %2992 = mul <8 x i32> %2986, %2991
  %2993 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2992)
  %2994 = icmp eq i64 %2957, %2961
  br i1 %2994, label %3007, label %2995

2995:                                             ; preds = %2948, %2989
  %2996 = phi i64 [ %2951, %2948 ], [ %2962, %2989 ]
  %2997 = phi i32 [ 1, %2948 ], [ %2993, %2989 ]
  br label %2998

2998:                                             ; preds = %2995, %2998
  %2999 = phi i64 [ %3004, %2998 ], [ %2996, %2995 ]
  %3000 = phi i32 [ %3003, %2998 ], [ %2997, %2995 ]
  %3001 = getelementptr inbounds i32, ptr %11, i64 %2999
  %3002 = load i32, ptr %3001, align 4, !tbaa !5
  %3003 = mul nsw i32 %3002, %3000
  %3004 = add nsw i64 %2999, -1
  %3005 = trunc i64 %2999 to i32
  %3006 = icmp sgt i32 %3005, 0
  br i1 %3006, label %2998, label %3007, !llvm.loop !680

3007:                                             ; preds = %2998, %2989
  %3008 = phi i32 [ %2993, %2989 ], [ %3003, %2998 ]
  %3009 = and i64 %2958, 4294967295
  %3010 = getelementptr inbounds i32, ptr %6, i64 %3009
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = mul nsw i32 %3011, %3008
  %3013 = add nsw i32 %3012, %2952
  %3014 = icmp sgt i64 %2950, 2
  %3015 = add nsw i64 %2951, -1
  %3016 = add i32 %2949, 1
  br i1 %3014, label %2948, label %3017, !llvm.loop !681

3017:                                             ; preds = %3007, %2945
  %3018 = phi i32 [ %2947, %2945 ], [ %3013, %3007 ]
  %3019 = icmp slt i32 %3018, %5
  br i1 %3019, label %3022, label %3020

3020:                                             ; preds = %3017
  %3021 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3022:                                             ; preds = %3017
  %3023 = sext i32 %3018 to i64
  %3024 = getelementptr inbounds i32, ptr %2485, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = load i32, ptr %2487, align 4, !tbaa !5
  %3027 = icmp sgt i32 %3026, %3025
  br i1 %3027, label %3028, label %3029

3028:                                             ; preds = %3022
  store i32 %3025, ptr %2487, align 4, !tbaa !5
  br label %3029

3029:                                             ; preds = %3028, %3022
  %3030 = add nuw nsw i32 %2946, 1
  br i1 %2799, label %3031, label %3081

3031:                                             ; preds = %3029
  %3032 = load i32, ptr %4, align 4, !tbaa !5
  %3033 = load i32, ptr %12, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3032, %3034
  br i1 %3035, label %3058, label %3036

3036:                                             ; preds = %3031
  %3037 = icmp eq i32 %3032, %3034
  br i1 %3037, label %3038, label %3074

3038:                                             ; preds = %3036
  store i32 0, ptr %4, align 4, !tbaa !5
  %3039 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3039, ptr %6, align 4, !tbaa !5
  br i1 %2804, label %3081, label %3040

3040:                                             ; preds = %3038, %3068
  %3041 = phi i64 [ %3072, %3068 ], [ 1, %3038 ]
  %3042 = getelementptr inbounds i32, ptr %4, i64 %3041
  %3043 = load i32, ptr %3042, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %12, i64 %3041
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, -1
  %3047 = icmp slt i32 %3043, %3046
  br i1 %3047, label %3048, label %3066

3048:                                             ; preds = %3040
  br i1 %3035, label %3058, label %3049

3049:                                             ; preds = %3048
  %3050 = shl i64 %3041, 32
  %3051 = add i64 %3050, -4294967296
  %3052 = ashr exact i64 %3051, 32
  %3053 = getelementptr inbounds i32, ptr %7, i64 %3052
  %3054 = load i32, ptr %3053, align 4, !tbaa !5
  %3055 = getelementptr inbounds i32, ptr %6, i64 %3041
  %3056 = load i32, ptr %3055, align 4, !tbaa !5
  %3057 = add nsw i32 %3056, %3054
  store i32 %3057, ptr %3055, align 4, !tbaa !5
  br label %3076

3058:                                             ; preds = %3031, %3048
  %3059 = phi i32 [ %3043, %3048 ], [ %3032, %3031 ]
  %3060 = phi ptr [ %3042, %3048 ], [ %4, %3031 ]
  %3061 = phi i64 [ %3041, %3048 ], [ 0, %3031 ]
  %3062 = add nsw i32 %3059, 1
  store i32 %3062, ptr %3060, align 4, !tbaa !5
  %3063 = getelementptr inbounds i32, ptr %7, i64 %3061
  %3064 = load i32, ptr %3063, align 4, !tbaa !5
  %3065 = getelementptr inbounds i32, ptr %6, i64 %3061
  br label %3076

3066:                                             ; preds = %3040
  %3067 = icmp eq i32 %3043, %3046
  br i1 %3067, label %3068, label %3074

3068:                                             ; preds = %3066
  store i32 0, ptr %3042, align 4, !tbaa !5
  %3069 = getelementptr inbounds i32, ptr %8, i64 %3041
  %3070 = load i32, ptr %3069, align 4, !tbaa !5
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3041
  store i32 %3070, ptr %3071, align 4, !tbaa !5
  %3072 = add nuw nsw i64 %3041, 1
  %3073 = icmp eq i64 %3072, %2802
  br i1 %3073, label %3081, label %3040, !llvm.loop !682

3074:                                             ; preds = %3036, %3066
  %3075 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3076:                                             ; preds = %3049, %3058
  %3077 = phi ptr [ %3065, %3058 ], [ %3042, %3049 ]
  %3078 = phi i32 [ %3064, %3058 ], [ 1, %3049 ]
  %3079 = load i32, ptr %3077, align 4, !tbaa !5
  %3080 = add nsw i32 %3079, %3078
  store i32 %3080, ptr %3077, align 4, !tbaa !5
  br label %3081

3081:                                             ; preds = %3068, %3076, %3038, %3029
  %3082 = icmp eq i32 %3030, %5
  br i1 %3082, label %5513, label %2945, !llvm.loop !683

3083:                                             ; preds = %2494
  %3084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3085:                                             ; preds = %18
  %3086 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3087 = load ptr, ptr %3086, align 8, !tbaa !9
  %3088 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3089 = load ptr, ptr %3088, align 8, !tbaa !9
  %3090 = load i32, ptr %3087, align 4, !tbaa !5
  %3091 = sext i32 %3090 to i64
  store i64 %3091, ptr %3089, align 8, !tbaa !120
  %3092 = icmp eq i32 %13, 0
  br i1 %3092, label %5513, label %3093

3093:                                             ; preds = %3085
  switch i32 %1, label %3690 [
    i32 1, label %3094
    i32 0, label %3394
  ]

3094:                                             ; preds = %3093
  %3095 = getelementptr inbounds i32, ptr %3, i64 %19
  %3096 = load i32, ptr %3095, align 4, !tbaa !5
  %3097 = icmp eq i32 %3096, 0
  %3098 = icmp sgt i32 %5, 0
  br i1 %3097, label %3108, label %3099

3099:                                             ; preds = %3094
  br i1 %3098, label %3100, label %5513

3100:                                             ; preds = %3099
  %3101 = icmp sgt i32 %13, 1
  %3102 = icmp sgt i32 %13, 0
  %3103 = add i32 %13, -2
  %3104 = zext i32 %3103 to i64
  %3105 = zext i32 %13 to i64
  %3106 = add nuw i32 %5, 1
  %3107 = icmp eq i32 %13, 1
  br label %3254

3108:                                             ; preds = %3094
  br i1 %3098, label %3109, label %5513

3109:                                             ; preds = %3108
  %3110 = icmp sgt i32 %13, 1
  %3111 = icmp sgt i32 %13, 0
  %3112 = add i32 %13, -2
  %3113 = zext i32 %3112 to i64
  %3114 = zext i32 %13 to i64
  %3115 = add nuw i32 %5, 1
  %3116 = icmp eq i32 %13, 1
  br label %3117

3117:                                             ; preds = %3109, %3252
  %3118 = phi i64 [ %3091, %3109 ], [ %3203, %3252 ]
  %3119 = phi i32 [ 0, %3109 ], [ %3204, %3252 ]
  %3120 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3110, label %3121, label %3190

3121:                                             ; preds = %3117, %3180
  %3122 = phi i32 [ %3189, %3180 ], [ 0, %3117 ]
  %3123 = phi i64 [ %3131, %3180 ], [ %3114, %3117 ]
  %3124 = phi i64 [ %3188, %3180 ], [ %3113, %3117 ]
  %3125 = phi i32 [ %3186, %3180 ], [ %3120, %3117 ]
  %3126 = sub i32 %3112, %3122
  %3127 = tail call i32 @llvm.smin.i32(i32 %3126, i32 0)
  %3128 = sub i32 %3126, %3127
  %3129 = zext i32 %3128 to i64
  %3130 = add nuw nsw i64 %3129, 1
  %3131 = add nsw i64 %3123, -1
  %3132 = icmp ult i32 %3128, 31
  br i1 %3132, label %3168, label %3133

3133:                                             ; preds = %3121
  %3134 = and i64 %3130, 8589934560
  %3135 = sub i64 %3124, %3134
  br label %3136

3136:                                             ; preds = %3136, %3133
  %3137 = phi i64 [ 0, %3133 ], [ %3160, %3136 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3156, %3136 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3157, %3136 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3158, %3136 ]
  %3141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3133 ], [ %3159, %3136 ]
  %3142 = sub i64 %3124, %3137
  %3143 = getelementptr inbounds i32, ptr %9, i64 %3142
  %3144 = getelementptr inbounds i32, ptr %3143, i64 -7
  %3145 = load <8 x i32>, ptr %3144, align 4, !tbaa !5
  %3146 = shufflevector <8 x i32> %3145, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3147 = getelementptr inbounds i32, ptr %3143, i64 -15
  %3148 = load <8 x i32>, ptr %3147, align 4, !tbaa !5
  %3149 = shufflevector <8 x i32> %3148, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3150 = getelementptr inbounds i32, ptr %3143, i64 -23
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !5
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = getelementptr inbounds i32, ptr %3143, i64 -31
  %3154 = load <8 x i32>, ptr %3153, align 4, !tbaa !5
  %3155 = shufflevector <8 x i32> %3154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3156 = mul <8 x i32> %3146, %3138
  %3157 = mul <8 x i32> %3149, %3139
  %3158 = mul <8 x i32> %3152, %3140
  %3159 = mul <8 x i32> %3155, %3141
  %3160 = add nuw i64 %3137, 32
  %3161 = icmp eq i64 %3160, %3134
  br i1 %3161, label %3162, label %3136, !llvm.loop !684

3162:                                             ; preds = %3136
  %3163 = mul <8 x i32> %3157, %3156
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = mul <8 x i32> %3159, %3164
  %3166 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3165)
  %3167 = icmp eq i64 %3130, %3134
  br i1 %3167, label %3180, label %3168

3168:                                             ; preds = %3121, %3162
  %3169 = phi i64 [ %3124, %3121 ], [ %3135, %3162 ]
  %3170 = phi i32 [ 1, %3121 ], [ %3166, %3162 ]
  br label %3171

3171:                                             ; preds = %3168, %3171
  %3172 = phi i64 [ %3177, %3171 ], [ %3169, %3168 ]
  %3173 = phi i32 [ %3176, %3171 ], [ %3170, %3168 ]
  %3174 = getelementptr inbounds i32, ptr %9, i64 %3172
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = mul nsw i32 %3175, %3173
  %3177 = add nsw i64 %3172, -1
  %3178 = trunc i64 %3172 to i32
  %3179 = icmp sgt i32 %3178, 0
  br i1 %3179, label %3171, label %3180, !llvm.loop !685

3180:                                             ; preds = %3171, %3162
  %3181 = phi i32 [ %3166, %3162 ], [ %3176, %3171 ]
  %3182 = and i64 %3131, 4294967295
  %3183 = getelementptr inbounds i32, ptr %6, i64 %3182
  %3184 = load i32, ptr %3183, align 4, !tbaa !5
  %3185 = mul nsw i32 %3184, %3181
  %3186 = add nsw i32 %3185, %3125
  %3187 = icmp sgt i64 %3123, 2
  %3188 = add nsw i64 %3124, -1
  %3189 = add i32 %3122, 1
  br i1 %3187, label %3121, label %3190, !llvm.loop !686

3190:                                             ; preds = %3180, %3117
  %3191 = phi i32 [ %3120, %3117 ], [ %3186, %3180 ]
  %3192 = sext i32 %3191 to i64
  %3193 = getelementptr inbounds double, ptr %2, i64 %3192
  %3194 = load double, ptr %3193, align 8, !tbaa !18
  %3195 = getelementptr inbounds i32, ptr %3087, i64 %3192
  %3196 = load i32, ptr %3195, align 4, !tbaa !5
  %3197 = sext i32 %3196 to i64
  %3198 = fcmp fast one double %3194, 0.000000e+00
  %3199 = icmp sgt i64 %3118, %3197
  %3200 = select i1 %3198, i1 %3199, i1 false
  br i1 %3200, label %3201, label %3202

3201:                                             ; preds = %3190
  store i64 %3197, ptr %3089, align 8, !tbaa !120
  br label %3202

3202:                                             ; preds = %3201, %3190
  %3203 = phi i64 [ %3197, %3201 ], [ %3118, %3190 ]
  %3204 = add nuw nsw i32 %3119, 1
  br i1 %3111, label %3205, label %3252

3205:                                             ; preds = %3202
  %3206 = load i32, ptr %4, align 4, !tbaa !5
  %3207 = load i32, ptr %12, align 4, !tbaa !5
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3206, %3208
  br i1 %3209, label %3229, label %3210

3210:                                             ; preds = %3205
  %3211 = icmp eq i32 %3206, %3208
  br i1 %3211, label %3212, label %3245

3212:                                             ; preds = %3210
  store i32 0, ptr %4, align 4, !tbaa !5
  %3213 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3213, ptr %6, align 4, !tbaa !5
  br i1 %3116, label %3252, label %3214

3214:                                             ; preds = %3212, %3239
  %3215 = phi i64 [ %3243, %3239 ], [ 1, %3212 ]
  %3216 = getelementptr inbounds i32, ptr %4, i64 %3215
  %3217 = load i32, ptr %3216, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %12, i64 %3215
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = add nsw i32 %3219, -1
  %3221 = icmp slt i32 %3217, %3220
  br i1 %3221, label %3222, label %3237

3222:                                             ; preds = %3214
  br i1 %3209, label %3229, label %3223

3223:                                             ; preds = %3222
  %3224 = getelementptr inbounds i32, ptr %7, i64 %3215
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3215
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = add nsw i32 %3227, %3225
  store i32 %3228, ptr %3226, align 4, !tbaa !5
  br label %3247

3229:                                             ; preds = %3205, %3222
  %3230 = phi i32 [ %3217, %3222 ], [ %3206, %3205 ]
  %3231 = phi ptr [ %3216, %3222 ], [ %4, %3205 ]
  %3232 = phi i64 [ %3215, %3222 ], [ 0, %3205 ]
  %3233 = add nsw i32 %3230, 1
  store i32 %3233, ptr %3231, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %7, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3232
  br label %3247

3237:                                             ; preds = %3214
  %3238 = icmp eq i32 %3217, %3220
  br i1 %3238, label %3239, label %3245

3239:                                             ; preds = %3237
  store i32 0, ptr %3216, align 4, !tbaa !5
  %3240 = getelementptr inbounds i32, ptr %8, i64 %3215
  %3241 = load i32, ptr %3240, align 4, !tbaa !5
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3215
  store i32 %3241, ptr %3242, align 4, !tbaa !5
  %3243 = add nuw nsw i64 %3215, 1
  %3244 = icmp eq i64 %3243, %3114
  br i1 %3244, label %3252, label %3214, !llvm.loop !687

3245:                                             ; preds = %3210, %3237
  %3246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3247:                                             ; preds = %3223, %3229
  %3248 = phi ptr [ %3236, %3229 ], [ %3216, %3223 ]
  %3249 = phi i32 [ %3235, %3229 ], [ 1, %3223 ]
  %3250 = load i32, ptr %3248, align 4, !tbaa !5
  %3251 = add nsw i32 %3250, %3249
  store i32 %3251, ptr %3248, align 4, !tbaa !5
  br label %3252

3252:                                             ; preds = %3239, %3247, %3212, %3202
  %3253 = icmp eq i32 %3204, %5
  br i1 %3253, label %5513, label %3117, !llvm.loop !688

3254:                                             ; preds = %3100, %3392
  %3255 = phi i64 [ %3091, %3100 ], [ %3340, %3392 ]
  %3256 = phi i32 [ 0, %3100 ], [ %3341, %3392 ]
  %3257 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3101, label %3258, label %3327

3258:                                             ; preds = %3254, %3317
  %3259 = phi i32 [ %3326, %3317 ], [ 0, %3254 ]
  %3260 = phi i64 [ %3268, %3317 ], [ %3105, %3254 ]
  %3261 = phi i64 [ %3325, %3317 ], [ %3104, %3254 ]
  %3262 = phi i32 [ %3323, %3317 ], [ %3257, %3254 ]
  %3263 = sub i32 %3103, %3259
  %3264 = tail call i32 @llvm.smin.i32(i32 %3263, i32 0)
  %3265 = sub i32 %3263, %3264
  %3266 = zext i32 %3265 to i64
  %3267 = add nuw nsw i64 %3266, 1
  %3268 = add nsw i64 %3260, -1
  %3269 = icmp ult i32 %3265, 31
  br i1 %3269, label %3305, label %3270

3270:                                             ; preds = %3258
  %3271 = and i64 %3267, 8589934560
  %3272 = sub i64 %3261, %3271
  br label %3273

3273:                                             ; preds = %3273, %3270
  %3274 = phi i64 [ 0, %3270 ], [ %3297, %3273 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3293, %3273 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3294, %3273 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3295, %3273 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3296, %3273 ]
  %3279 = sub i64 %3261, %3274
  %3280 = getelementptr inbounds i32, ptr %11, i64 %3279
  %3281 = getelementptr inbounds i32, ptr %3280, i64 -7
  %3282 = load <8 x i32>, ptr %3281, align 4, !tbaa !5
  %3283 = shufflevector <8 x i32> %3282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3284 = getelementptr inbounds i32, ptr %3280, i64 -15
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3280, i64 -23
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !5
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3280, i64 -31
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !5
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = mul <8 x i32> %3283, %3275
  %3294 = mul <8 x i32> %3286, %3276
  %3295 = mul <8 x i32> %3289, %3277
  %3296 = mul <8 x i32> %3292, %3278
  %3297 = add nuw i64 %3274, 32
  %3298 = icmp eq i64 %3297, %3271
  br i1 %3298, label %3299, label %3273, !llvm.loop !689

3299:                                             ; preds = %3273
  %3300 = mul <8 x i32> %3294, %3293
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = mul <8 x i32> %3296, %3301
  %3303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3302)
  %3304 = icmp eq i64 %3267, %3271
  br i1 %3304, label %3317, label %3305

3305:                                             ; preds = %3258, %3299
  %3306 = phi i64 [ %3261, %3258 ], [ %3272, %3299 ]
  %3307 = phi i32 [ 1, %3258 ], [ %3303, %3299 ]
  br label %3308

3308:                                             ; preds = %3305, %3308
  %3309 = phi i64 [ %3314, %3308 ], [ %3306, %3305 ]
  %3310 = phi i32 [ %3313, %3308 ], [ %3307, %3305 ]
  %3311 = getelementptr inbounds i32, ptr %11, i64 %3309
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = mul nsw i32 %3312, %3310
  %3314 = add nsw i64 %3309, -1
  %3315 = trunc i64 %3309 to i32
  %3316 = icmp sgt i32 %3315, 0
  br i1 %3316, label %3308, label %3317, !llvm.loop !690

3317:                                             ; preds = %3308, %3299
  %3318 = phi i32 [ %3303, %3299 ], [ %3313, %3308 ]
  %3319 = and i64 %3268, 4294967295
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3319
  %3321 = load i32, ptr %3320, align 4, !tbaa !5
  %3322 = mul nsw i32 %3321, %3318
  %3323 = add nsw i32 %3322, %3262
  %3324 = icmp sgt i64 %3260, 2
  %3325 = add nsw i64 %3261, -1
  %3326 = add i32 %3259, 1
  br i1 %3324, label %3258, label %3327, !llvm.loop !691

3327:                                             ; preds = %3317, %3254
  %3328 = phi i32 [ %3257, %3254 ], [ %3323, %3317 ]
  %3329 = icmp slt i32 %3328, %5
  br i1 %3329, label %3332, label %3330

3330:                                             ; preds = %3327
  %3331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3332:                                             ; preds = %3327
  %3333 = sext i32 %3328 to i64
  %3334 = getelementptr inbounds i32, ptr %3087, i64 %3333
  %3335 = load i32, ptr %3334, align 4, !tbaa !5
  %3336 = sext i32 %3335 to i64
  %3337 = icmp sgt i64 %3255, %3336
  br i1 %3337, label %3338, label %3339

3338:                                             ; preds = %3332
  store i64 %3336, ptr %3089, align 8, !tbaa !120
  br label %3339

3339:                                             ; preds = %3332, %3338
  %3340 = phi i64 [ %3255, %3332 ], [ %3336, %3338 ]
  %3341 = add nuw nsw i32 %3256, 1
  br i1 %3102, label %3342, label %3392

3342:                                             ; preds = %3339
  %3343 = load i32, ptr %4, align 4, !tbaa !5
  %3344 = load i32, ptr %12, align 4, !tbaa !5
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3343, %3345
  br i1 %3346, label %3369, label %3347

3347:                                             ; preds = %3342
  %3348 = icmp eq i32 %3343, %3345
  br i1 %3348, label %3349, label %3385

3349:                                             ; preds = %3347
  store i32 0, ptr %4, align 4, !tbaa !5
  %3350 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3350, ptr %6, align 4, !tbaa !5
  br i1 %3107, label %3392, label %3351

3351:                                             ; preds = %3349, %3379
  %3352 = phi i64 [ %3383, %3379 ], [ 1, %3349 ]
  %3353 = getelementptr inbounds i32, ptr %4, i64 %3352
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = getelementptr inbounds i32, ptr %12, i64 %3352
  %3356 = load i32, ptr %3355, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3354, %3357
  br i1 %3358, label %3359, label %3377

3359:                                             ; preds = %3351
  br i1 %3346, label %3369, label %3360

3360:                                             ; preds = %3359
  %3361 = shl i64 %3352, 32
  %3362 = add i64 %3361, -4294967296
  %3363 = ashr exact i64 %3362, 32
  %3364 = getelementptr inbounds i32, ptr %7, i64 %3363
  %3365 = load i32, ptr %3364, align 4, !tbaa !5
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3352
  %3367 = load i32, ptr %3366, align 4, !tbaa !5
  %3368 = add nsw i32 %3367, %3365
  store i32 %3368, ptr %3366, align 4, !tbaa !5
  br label %3387

3369:                                             ; preds = %3342, %3359
  %3370 = phi i32 [ %3354, %3359 ], [ %3343, %3342 ]
  %3371 = phi ptr [ %3353, %3359 ], [ %4, %3342 ]
  %3372 = phi i64 [ %3352, %3359 ], [ 0, %3342 ]
  %3373 = add nsw i32 %3370, 1
  store i32 %3373, ptr %3371, align 4, !tbaa !5
  %3374 = getelementptr inbounds i32, ptr %7, i64 %3372
  %3375 = load i32, ptr %3374, align 4, !tbaa !5
  %3376 = getelementptr inbounds i32, ptr %6, i64 %3372
  br label %3387

3377:                                             ; preds = %3351
  %3378 = icmp eq i32 %3354, %3357
  br i1 %3378, label %3379, label %3385

3379:                                             ; preds = %3377
  store i32 0, ptr %3353, align 4, !tbaa !5
  %3380 = getelementptr inbounds i32, ptr %8, i64 %3352
  %3381 = load i32, ptr %3380, align 4, !tbaa !5
  %3382 = getelementptr inbounds i32, ptr %6, i64 %3352
  store i32 %3381, ptr %3382, align 4, !tbaa !5
  %3383 = add nuw nsw i64 %3352, 1
  %3384 = icmp eq i64 %3383, %3105
  br i1 %3384, label %3392, label %3351, !llvm.loop !692

3385:                                             ; preds = %3347, %3377
  %3386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3387:                                             ; preds = %3360, %3369
  %3388 = phi ptr [ %3376, %3369 ], [ %3353, %3360 ]
  %3389 = phi i32 [ %3375, %3369 ], [ 1, %3360 ]
  %3390 = load i32, ptr %3388, align 4, !tbaa !5
  %3391 = add nsw i32 %3390, %3389
  store i32 %3391, ptr %3388, align 4, !tbaa !5
  br label %3392

3392:                                             ; preds = %3379, %3387, %3349, %3339
  %3393 = icmp eq i32 %3341, %5
  br i1 %3393, label %5513, label %3254, !llvm.loop !693

3394:                                             ; preds = %3093
  %3395 = getelementptr inbounds i32, ptr %3, i64 %19
  %3396 = load i32, ptr %3395, align 4, !tbaa !5
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp sgt i32 %5, 0
  br i1 %3397, label %3408, label %3399

3399:                                             ; preds = %3394
  br i1 %3398, label %3400, label %5513

3400:                                             ; preds = %3399
  %3401 = icmp sgt i32 %13, 1
  %3402 = icmp sgt i32 %13, 0
  %3403 = add i32 %13, -2
  %3404 = zext i32 %3403 to i64
  %3405 = zext i32 %13 to i64
  %3406 = add nuw i32 %5, 1
  %3407 = icmp eq i32 %13, 1
  br label %3550

3408:                                             ; preds = %3394
  br i1 %3398, label %3409, label %5513

3409:                                             ; preds = %3408
  %3410 = icmp sgt i32 %13, 1
  %3411 = icmp sgt i32 %13, 0
  %3412 = add i32 %13, -2
  %3413 = zext i32 %3412 to i64
  %3414 = zext i32 %13 to i64
  %3415 = add nuw i32 %5, 1
  %3416 = icmp eq i32 %13, 1
  br label %3417

3417:                                             ; preds = %3409, %3548
  %3418 = phi i64 [ %3091, %3409 ], [ %3499, %3548 ]
  %3419 = phi i32 [ 0, %3409 ], [ %3500, %3548 ]
  %3420 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3410, label %3421, label %3490

3421:                                             ; preds = %3417, %3480
  %3422 = phi i32 [ %3489, %3480 ], [ 0, %3417 ]
  %3423 = phi i64 [ %3431, %3480 ], [ %3414, %3417 ]
  %3424 = phi i64 [ %3488, %3480 ], [ %3413, %3417 ]
  %3425 = phi i32 [ %3486, %3480 ], [ %3420, %3417 ]
  %3426 = sub i32 %3412, %3422
  %3427 = tail call i32 @llvm.smin.i32(i32 %3426, i32 0)
  %3428 = sub i32 %3426, %3427
  %3429 = zext i32 %3428 to i64
  %3430 = add nuw nsw i64 %3429, 1
  %3431 = add nsw i64 %3423, -1
  %3432 = icmp ult i32 %3428, 31
  br i1 %3432, label %3468, label %3433

3433:                                             ; preds = %3421
  %3434 = and i64 %3430, 8589934560
  %3435 = sub i64 %3424, %3434
  br label %3436

3436:                                             ; preds = %3436, %3433
  %3437 = phi i64 [ 0, %3433 ], [ %3460, %3436 ]
  %3438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3456, %3436 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3457, %3436 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3458, %3436 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3459, %3436 ]
  %3442 = sub i64 %3424, %3437
  %3443 = getelementptr inbounds i32, ptr %9, i64 %3442
  %3444 = getelementptr inbounds i32, ptr %3443, i64 -7
  %3445 = load <8 x i32>, ptr %3444, align 4, !tbaa !5
  %3446 = shufflevector <8 x i32> %3445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3447 = getelementptr inbounds i32, ptr %3443, i64 -15
  %3448 = load <8 x i32>, ptr %3447, align 4, !tbaa !5
  %3449 = shufflevector <8 x i32> %3448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3450 = getelementptr inbounds i32, ptr %3443, i64 -23
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !5
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3443, i64 -31
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !5
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = mul <8 x i32> %3446, %3438
  %3457 = mul <8 x i32> %3449, %3439
  %3458 = mul <8 x i32> %3452, %3440
  %3459 = mul <8 x i32> %3455, %3441
  %3460 = add nuw i64 %3437, 32
  %3461 = icmp eq i64 %3460, %3434
  br i1 %3461, label %3462, label %3436, !llvm.loop !694

3462:                                             ; preds = %3436
  %3463 = mul <8 x i32> %3457, %3456
  %3464 = mul <8 x i32> %3458, %3463
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3465)
  %3467 = icmp eq i64 %3430, %3434
  br i1 %3467, label %3480, label %3468

3468:                                             ; preds = %3421, %3462
  %3469 = phi i64 [ %3424, %3421 ], [ %3435, %3462 ]
  %3470 = phi i32 [ 1, %3421 ], [ %3466, %3462 ]
  br label %3471

3471:                                             ; preds = %3468, %3471
  %3472 = phi i64 [ %3477, %3471 ], [ %3469, %3468 ]
  %3473 = phi i32 [ %3476, %3471 ], [ %3470, %3468 ]
  %3474 = getelementptr inbounds i32, ptr %9, i64 %3472
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = mul nsw i32 %3475, %3473
  %3477 = add nsw i64 %3472, -1
  %3478 = trunc i64 %3472 to i32
  %3479 = icmp sgt i32 %3478, 0
  br i1 %3479, label %3471, label %3480, !llvm.loop !695

3480:                                             ; preds = %3471, %3462
  %3481 = phi i32 [ %3466, %3462 ], [ %3476, %3471 ]
  %3482 = and i64 %3431, 4294967295
  %3483 = getelementptr inbounds i32, ptr %6, i64 %3482
  %3484 = load i32, ptr %3483, align 4, !tbaa !5
  %3485 = mul nsw i32 %3484, %3481
  %3486 = add nsw i32 %3485, %3425
  %3487 = icmp sgt i64 %3423, 2
  %3488 = add nsw i64 %3424, -1
  %3489 = add i32 %3422, 1
  br i1 %3487, label %3421, label %3490, !llvm.loop !696

3490:                                             ; preds = %3480, %3417
  %3491 = phi i32 [ %3420, %3417 ], [ %3486, %3480 ]
  %3492 = sext i32 %3491 to i64
  %3493 = getelementptr inbounds i32, ptr %3087, i64 %3492
  %3494 = load i32, ptr %3493, align 4, !tbaa !5
  %3495 = sext i32 %3494 to i64
  %3496 = icmp sgt i64 %3418, %3495
  br i1 %3496, label %3497, label %3498

3497:                                             ; preds = %3490
  store i64 %3495, ptr %3089, align 8, !tbaa !120
  br label %3498

3498:                                             ; preds = %3497, %3490
  %3499 = phi i64 [ %3495, %3497 ], [ %3418, %3490 ]
  %3500 = add nuw nsw i32 %3419, 1
  br i1 %3411, label %3501, label %3548

3501:                                             ; preds = %3498
  %3502 = load i32, ptr %4, align 4, !tbaa !5
  %3503 = load i32, ptr %12, align 4, !tbaa !5
  %3504 = add nsw i32 %3503, -1
  %3505 = icmp slt i32 %3502, %3504
  br i1 %3505, label %3525, label %3506

3506:                                             ; preds = %3501
  %3507 = icmp eq i32 %3502, %3504
  br i1 %3507, label %3508, label %3541

3508:                                             ; preds = %3506
  store i32 0, ptr %4, align 4, !tbaa !5
  %3509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3509, ptr %6, align 4, !tbaa !5
  br i1 %3416, label %3548, label %3510

3510:                                             ; preds = %3508, %3535
  %3511 = phi i64 [ %3539, %3535 ], [ 1, %3508 ]
  %3512 = getelementptr inbounds i32, ptr %4, i64 %3511
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %12, i64 %3511
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = add nsw i32 %3515, -1
  %3517 = icmp slt i32 %3513, %3516
  br i1 %3517, label %3518, label %3533

3518:                                             ; preds = %3510
  br i1 %3505, label %3525, label %3519

3519:                                             ; preds = %3518
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3511
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3511
  %3523 = load i32, ptr %3522, align 4, !tbaa !5
  %3524 = add nsw i32 %3523, %3521
  store i32 %3524, ptr %3522, align 4, !tbaa !5
  br label %3543

3525:                                             ; preds = %3501, %3518
  %3526 = phi i32 [ %3513, %3518 ], [ %3502, %3501 ]
  %3527 = phi ptr [ %3512, %3518 ], [ %4, %3501 ]
  %3528 = phi i64 [ %3511, %3518 ], [ 0, %3501 ]
  %3529 = add nsw i32 %3526, 1
  store i32 %3529, ptr %3527, align 4, !tbaa !5
  %3530 = getelementptr inbounds i32, ptr %7, i64 %3528
  %3531 = load i32, ptr %3530, align 4, !tbaa !5
  %3532 = getelementptr inbounds i32, ptr %6, i64 %3528
  br label %3543

3533:                                             ; preds = %3510
  %3534 = icmp eq i32 %3513, %3516
  br i1 %3534, label %3535, label %3541

3535:                                             ; preds = %3533
  store i32 0, ptr %3512, align 4, !tbaa !5
  %3536 = getelementptr inbounds i32, ptr %8, i64 %3511
  %3537 = load i32, ptr %3536, align 4, !tbaa !5
  %3538 = getelementptr inbounds i32, ptr %6, i64 %3511
  store i32 %3537, ptr %3538, align 4, !tbaa !5
  %3539 = add nuw nsw i64 %3511, 1
  %3540 = icmp eq i64 %3539, %3414
  br i1 %3540, label %3548, label %3510, !llvm.loop !697

3541:                                             ; preds = %3506, %3533
  %3542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3543:                                             ; preds = %3519, %3525
  %3544 = phi ptr [ %3532, %3525 ], [ %3512, %3519 ]
  %3545 = phi i32 [ %3531, %3525 ], [ 1, %3519 ]
  %3546 = load i32, ptr %3544, align 4, !tbaa !5
  %3547 = add nsw i32 %3546, %3545
  store i32 %3547, ptr %3544, align 4, !tbaa !5
  br label %3548

3548:                                             ; preds = %3535, %3543, %3508, %3498
  %3549 = icmp eq i32 %3500, %5
  br i1 %3549, label %5513, label %3417, !llvm.loop !698

3550:                                             ; preds = %3400, %3688
  %3551 = phi i64 [ %3091, %3400 ], [ %3636, %3688 ]
  %3552 = phi i32 [ 0, %3400 ], [ %3637, %3688 ]
  %3553 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3401, label %3554, label %3623

3554:                                             ; preds = %3550, %3613
  %3555 = phi i32 [ %3622, %3613 ], [ 0, %3550 ]
  %3556 = phi i64 [ %3564, %3613 ], [ %3405, %3550 ]
  %3557 = phi i64 [ %3621, %3613 ], [ %3404, %3550 ]
  %3558 = phi i32 [ %3619, %3613 ], [ %3553, %3550 ]
  %3559 = sub i32 %3403, %3555
  %3560 = tail call i32 @llvm.smin.i32(i32 %3559, i32 0)
  %3561 = sub i32 %3559, %3560
  %3562 = zext i32 %3561 to i64
  %3563 = add nuw nsw i64 %3562, 1
  %3564 = add nsw i64 %3556, -1
  %3565 = icmp ult i32 %3561, 31
  br i1 %3565, label %3601, label %3566

3566:                                             ; preds = %3554
  %3567 = and i64 %3563, 8589934560
  %3568 = sub i64 %3557, %3567
  br label %3569

3569:                                             ; preds = %3569, %3566
  %3570 = phi i64 [ 0, %3566 ], [ %3593, %3569 ]
  %3571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3589, %3569 ]
  %3572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3590, %3569 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3591, %3569 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3566 ], [ %3592, %3569 ]
  %3575 = sub i64 %3557, %3570
  %3576 = getelementptr inbounds i32, ptr %11, i64 %3575
  %3577 = getelementptr inbounds i32, ptr %3576, i64 -7
  %3578 = load <8 x i32>, ptr %3577, align 4, !tbaa !5
  %3579 = shufflevector <8 x i32> %3578, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3580 = getelementptr inbounds i32, ptr %3576, i64 -15
  %3581 = load <8 x i32>, ptr %3580, align 4, !tbaa !5
  %3582 = shufflevector <8 x i32> %3581, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3583 = getelementptr inbounds i32, ptr %3576, i64 -23
  %3584 = load <8 x i32>, ptr %3583, align 4, !tbaa !5
  %3585 = shufflevector <8 x i32> %3584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3586 = getelementptr inbounds i32, ptr %3576, i64 -31
  %3587 = load <8 x i32>, ptr %3586, align 4, !tbaa !5
  %3588 = shufflevector <8 x i32> %3587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3589 = mul <8 x i32> %3579, %3571
  %3590 = mul <8 x i32> %3582, %3572
  %3591 = mul <8 x i32> %3585, %3573
  %3592 = mul <8 x i32> %3588, %3574
  %3593 = add nuw i64 %3570, 32
  %3594 = icmp eq i64 %3593, %3567
  br i1 %3594, label %3595, label %3569, !llvm.loop !699

3595:                                             ; preds = %3569
  %3596 = mul <8 x i32> %3590, %3589
  %3597 = mul <8 x i32> %3591, %3596
  %3598 = mul <8 x i32> %3592, %3597
  %3599 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3598)
  %3600 = icmp eq i64 %3563, %3567
  br i1 %3600, label %3613, label %3601

3601:                                             ; preds = %3554, %3595
  %3602 = phi i64 [ %3557, %3554 ], [ %3568, %3595 ]
  %3603 = phi i32 [ 1, %3554 ], [ %3599, %3595 ]
  br label %3604

3604:                                             ; preds = %3601, %3604
  %3605 = phi i64 [ %3610, %3604 ], [ %3602, %3601 ]
  %3606 = phi i32 [ %3609, %3604 ], [ %3603, %3601 ]
  %3607 = getelementptr inbounds i32, ptr %11, i64 %3605
  %3608 = load i32, ptr %3607, align 4, !tbaa !5
  %3609 = mul nsw i32 %3608, %3606
  %3610 = add nsw i64 %3605, -1
  %3611 = trunc i64 %3605 to i32
  %3612 = icmp sgt i32 %3611, 0
  br i1 %3612, label %3604, label %3613, !llvm.loop !700

3613:                                             ; preds = %3604, %3595
  %3614 = phi i32 [ %3599, %3595 ], [ %3609, %3604 ]
  %3615 = and i64 %3564, 4294967295
  %3616 = getelementptr inbounds i32, ptr %6, i64 %3615
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = mul nsw i32 %3617, %3614
  %3619 = add nsw i32 %3618, %3558
  %3620 = icmp sgt i64 %3556, 2
  %3621 = add nsw i64 %3557, -1
  %3622 = add i32 %3555, 1
  br i1 %3620, label %3554, label %3623, !llvm.loop !701

3623:                                             ; preds = %3613, %3550
  %3624 = phi i32 [ %3553, %3550 ], [ %3619, %3613 ]
  %3625 = icmp slt i32 %3624, %5
  br i1 %3625, label %3628, label %3626

3626:                                             ; preds = %3623
  %3627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3628:                                             ; preds = %3623
  %3629 = sext i32 %3624 to i64
  %3630 = getelementptr inbounds i32, ptr %3087, i64 %3629
  %3631 = load i32, ptr %3630, align 4, !tbaa !5
  %3632 = sext i32 %3631 to i64
  %3633 = icmp sgt i64 %3551, %3632
  br i1 %3633, label %3634, label %3635

3634:                                             ; preds = %3628
  store i64 %3632, ptr %3089, align 8, !tbaa !120
  br label %3635

3635:                                             ; preds = %3634, %3628
  %3636 = phi i64 [ %3632, %3634 ], [ %3551, %3628 ]
  %3637 = add nuw nsw i32 %3552, 1
  br i1 %3402, label %3638, label %3688

3638:                                             ; preds = %3635
  %3639 = load i32, ptr %4, align 4, !tbaa !5
  %3640 = load i32, ptr %12, align 4, !tbaa !5
  %3641 = add nsw i32 %3640, -1
  %3642 = icmp slt i32 %3639, %3641
  br i1 %3642, label %3665, label %3643

3643:                                             ; preds = %3638
  %3644 = icmp eq i32 %3639, %3641
  br i1 %3644, label %3645, label %3681

3645:                                             ; preds = %3643
  store i32 0, ptr %4, align 4, !tbaa !5
  %3646 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3646, ptr %6, align 4, !tbaa !5
  br i1 %3407, label %3688, label %3647

3647:                                             ; preds = %3645, %3675
  %3648 = phi i64 [ %3679, %3675 ], [ 1, %3645 ]
  %3649 = getelementptr inbounds i32, ptr %4, i64 %3648
  %3650 = load i32, ptr %3649, align 4, !tbaa !5
  %3651 = getelementptr inbounds i32, ptr %12, i64 %3648
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, -1
  %3654 = icmp slt i32 %3650, %3653
  br i1 %3654, label %3655, label %3673

3655:                                             ; preds = %3647
  br i1 %3642, label %3665, label %3656

3656:                                             ; preds = %3655
  %3657 = shl i64 %3648, 32
  %3658 = add i64 %3657, -4294967296
  %3659 = ashr exact i64 %3658, 32
  %3660 = getelementptr inbounds i32, ptr %7, i64 %3659
  %3661 = load i32, ptr %3660, align 4, !tbaa !5
  %3662 = getelementptr inbounds i32, ptr %6, i64 %3648
  %3663 = load i32, ptr %3662, align 4, !tbaa !5
  %3664 = add nsw i32 %3663, %3661
  store i32 %3664, ptr %3662, align 4, !tbaa !5
  br label %3683

3665:                                             ; preds = %3638, %3655
  %3666 = phi i32 [ %3650, %3655 ], [ %3639, %3638 ]
  %3667 = phi ptr [ %3649, %3655 ], [ %4, %3638 ]
  %3668 = phi i64 [ %3648, %3655 ], [ 0, %3638 ]
  %3669 = add nsw i32 %3666, 1
  store i32 %3669, ptr %3667, align 4, !tbaa !5
  %3670 = getelementptr inbounds i32, ptr %7, i64 %3668
  %3671 = load i32, ptr %3670, align 4, !tbaa !5
  %3672 = getelementptr inbounds i32, ptr %6, i64 %3668
  br label %3683

3673:                                             ; preds = %3647
  %3674 = icmp eq i32 %3650, %3653
  br i1 %3674, label %3675, label %3681

3675:                                             ; preds = %3673
  store i32 0, ptr %3649, align 4, !tbaa !5
  %3676 = getelementptr inbounds i32, ptr %8, i64 %3648
  %3677 = load i32, ptr %3676, align 4, !tbaa !5
  %3678 = getelementptr inbounds i32, ptr %6, i64 %3648
  store i32 %3677, ptr %3678, align 4, !tbaa !5
  %3679 = add nuw nsw i64 %3648, 1
  %3680 = icmp eq i64 %3679, %3405
  br i1 %3680, label %3688, label %3647, !llvm.loop !702

3681:                                             ; preds = %3643, %3673
  %3682 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3683:                                             ; preds = %3656, %3665
  %3684 = phi ptr [ %3672, %3665 ], [ %3649, %3656 ]
  %3685 = phi i32 [ %3671, %3665 ], [ 1, %3656 ]
  %3686 = load i32, ptr %3684, align 4, !tbaa !5
  %3687 = add nsw i32 %3686, %3685
  store i32 %3687, ptr %3684, align 4, !tbaa !5
  br label %3688

3688:                                             ; preds = %3675, %3683, %3645, %3635
  %3689 = icmp eq i32 %3637, %5
  br i1 %3689, label %5513, label %3550, !llvm.loop !703

3690:                                             ; preds = %3093
  %3691 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1028, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3692:                                             ; preds = %18
  %3693 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3694 = load ptr, ptr %3693, align 8, !tbaa !9
  %3695 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3696 = load ptr, ptr %3695, align 8, !tbaa !9
  %3697 = load i32, ptr %3694, align 4, !tbaa !5
  %3698 = sitofp i32 %3697 to double
  store double %3698, ptr %3696, align 8, !tbaa !18
  %3699 = icmp eq i32 %13, 0
  br i1 %3699, label %5513, label %3700

3700:                                             ; preds = %3692
  switch i32 %1, label %4297 [
    i32 1, label %3701
    i32 0, label %4001
  ]

3701:                                             ; preds = %3700
  %3702 = getelementptr inbounds i32, ptr %3, i64 %19
  %3703 = load i32, ptr %3702, align 4, !tbaa !5
  %3704 = icmp eq i32 %3703, 0
  %3705 = icmp sgt i32 %5, 0
  br i1 %3704, label %3715, label %3706

3706:                                             ; preds = %3701
  br i1 %3705, label %3707, label %5513

3707:                                             ; preds = %3706
  %3708 = icmp sgt i32 %13, 1
  %3709 = icmp sgt i32 %13, 0
  %3710 = add i32 %13, -2
  %3711 = zext i32 %3710 to i64
  %3712 = zext i32 %13 to i64
  %3713 = add nuw i32 %5, 1
  %3714 = icmp eq i32 %13, 1
  br label %3861

3715:                                             ; preds = %3701
  br i1 %3705, label %3716, label %5513

3716:                                             ; preds = %3715
  %3717 = icmp sgt i32 %13, 1
  %3718 = icmp sgt i32 %13, 0
  %3719 = add i32 %13, -2
  %3720 = zext i32 %3719 to i64
  %3721 = zext i32 %13 to i64
  %3722 = add nuw i32 %5, 1
  %3723 = icmp eq i32 %13, 1
  br label %3724

3724:                                             ; preds = %3716, %3859
  %3725 = phi double [ %3698, %3716 ], [ %3810, %3859 ]
  %3726 = phi i32 [ 0, %3716 ], [ %3811, %3859 ]
  %3727 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3717, label %3728, label %3797

3728:                                             ; preds = %3724, %3787
  %3729 = phi i32 [ %3796, %3787 ], [ 0, %3724 ]
  %3730 = phi i64 [ %3738, %3787 ], [ %3721, %3724 ]
  %3731 = phi i64 [ %3795, %3787 ], [ %3720, %3724 ]
  %3732 = phi i32 [ %3793, %3787 ], [ %3727, %3724 ]
  %3733 = sub i32 %3719, %3729
  %3734 = tail call i32 @llvm.smin.i32(i32 %3733, i32 0)
  %3735 = sub i32 %3733, %3734
  %3736 = zext i32 %3735 to i64
  %3737 = add nuw nsw i64 %3736, 1
  %3738 = add nsw i64 %3730, -1
  %3739 = icmp ult i32 %3735, 31
  br i1 %3739, label %3775, label %3740

3740:                                             ; preds = %3728
  %3741 = and i64 %3737, 8589934560
  %3742 = sub i64 %3731, %3741
  br label %3743

3743:                                             ; preds = %3743, %3740
  %3744 = phi i64 [ 0, %3740 ], [ %3767, %3743 ]
  %3745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3763, %3743 ]
  %3746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3764, %3743 ]
  %3747 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3765, %3743 ]
  %3748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3740 ], [ %3766, %3743 ]
  %3749 = sub i64 %3731, %3744
  %3750 = getelementptr inbounds i32, ptr %9, i64 %3749
  %3751 = getelementptr inbounds i32, ptr %3750, i64 -7
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !5
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = getelementptr inbounds i32, ptr %3750, i64 -15
  %3755 = load <8 x i32>, ptr %3754, align 4, !tbaa !5
  %3756 = shufflevector <8 x i32> %3755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3757 = getelementptr inbounds i32, ptr %3750, i64 -23
  %3758 = load <8 x i32>, ptr %3757, align 4, !tbaa !5
  %3759 = shufflevector <8 x i32> %3758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3760 = getelementptr inbounds i32, ptr %3750, i64 -31
  %3761 = load <8 x i32>, ptr %3760, align 4, !tbaa !5
  %3762 = shufflevector <8 x i32> %3761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3763 = mul <8 x i32> %3753, %3745
  %3764 = mul <8 x i32> %3756, %3746
  %3765 = mul <8 x i32> %3759, %3747
  %3766 = mul <8 x i32> %3762, %3748
  %3767 = add nuw i64 %3744, 32
  %3768 = icmp eq i64 %3767, %3741
  br i1 %3768, label %3769, label %3743, !llvm.loop !704

3769:                                             ; preds = %3743
  %3770 = mul <8 x i32> %3764, %3763
  %3771 = mul <8 x i32> %3765, %3770
  %3772 = mul <8 x i32> %3766, %3771
  %3773 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3772)
  %3774 = icmp eq i64 %3737, %3741
  br i1 %3774, label %3787, label %3775

3775:                                             ; preds = %3728, %3769
  %3776 = phi i64 [ %3731, %3728 ], [ %3742, %3769 ]
  %3777 = phi i32 [ 1, %3728 ], [ %3773, %3769 ]
  br label %3778

3778:                                             ; preds = %3775, %3778
  %3779 = phi i64 [ %3784, %3778 ], [ %3776, %3775 ]
  %3780 = phi i32 [ %3783, %3778 ], [ %3777, %3775 ]
  %3781 = getelementptr inbounds i32, ptr %9, i64 %3779
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = mul nsw i32 %3782, %3780
  %3784 = add nsw i64 %3779, -1
  %3785 = trunc i64 %3779 to i32
  %3786 = icmp sgt i32 %3785, 0
  br i1 %3786, label %3778, label %3787, !llvm.loop !705

3787:                                             ; preds = %3778, %3769
  %3788 = phi i32 [ %3773, %3769 ], [ %3783, %3778 ]
  %3789 = and i64 %3738, 4294967295
  %3790 = getelementptr inbounds i32, ptr %6, i64 %3789
  %3791 = load i32, ptr %3790, align 4, !tbaa !5
  %3792 = mul nsw i32 %3791, %3788
  %3793 = add nsw i32 %3792, %3732
  %3794 = icmp sgt i64 %3730, 2
  %3795 = add nsw i64 %3731, -1
  %3796 = add i32 %3729, 1
  br i1 %3794, label %3728, label %3797, !llvm.loop !706

3797:                                             ; preds = %3787, %3724
  %3798 = phi i32 [ %3727, %3724 ], [ %3793, %3787 ]
  %3799 = sext i32 %3798 to i64
  %3800 = getelementptr inbounds double, ptr %2, i64 %3799
  %3801 = load double, ptr %3800, align 8, !tbaa !18
  %3802 = getelementptr inbounds i32, ptr %3694, i64 %3799
  %3803 = load i32, ptr %3802, align 4, !tbaa !5
  %3804 = sitofp i32 %3803 to double
  %3805 = fcmp fast one double %3801, 0.000000e+00
  %3806 = fcmp fast ogt double %3725, %3804
  %3807 = select i1 %3805, i1 %3806, i1 false
  br i1 %3807, label %3808, label %3809

3808:                                             ; preds = %3797
  store double %3804, ptr %3696, align 8, !tbaa !18
  br label %3809

3809:                                             ; preds = %3808, %3797
  %3810 = phi double [ %3804, %3808 ], [ %3725, %3797 ]
  %3811 = add nuw nsw i32 %3726, 1
  br i1 %3718, label %3812, label %3859

3812:                                             ; preds = %3809
  %3813 = load i32, ptr %4, align 4, !tbaa !5
  %3814 = load i32, ptr %12, align 4, !tbaa !5
  %3815 = add nsw i32 %3814, -1
  %3816 = icmp slt i32 %3813, %3815
  br i1 %3816, label %3836, label %3817

3817:                                             ; preds = %3812
  %3818 = icmp eq i32 %3813, %3815
  br i1 %3818, label %3819, label %3852

3819:                                             ; preds = %3817
  store i32 0, ptr %4, align 4, !tbaa !5
  %3820 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3820, ptr %6, align 4, !tbaa !5
  br i1 %3723, label %3859, label %3821

3821:                                             ; preds = %3819, %3846
  %3822 = phi i64 [ %3850, %3846 ], [ 1, %3819 ]
  %3823 = getelementptr inbounds i32, ptr %4, i64 %3822
  %3824 = load i32, ptr %3823, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %12, i64 %3822
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = add nsw i32 %3826, -1
  %3828 = icmp slt i32 %3824, %3827
  br i1 %3828, label %3829, label %3844

3829:                                             ; preds = %3821
  br i1 %3816, label %3836, label %3830

3830:                                             ; preds = %3829
  %3831 = getelementptr inbounds i32, ptr %7, i64 %3822
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3822
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = add nsw i32 %3834, %3832
  store i32 %3835, ptr %3833, align 4, !tbaa !5
  br label %3854

3836:                                             ; preds = %3812, %3829
  %3837 = phi i32 [ %3824, %3829 ], [ %3813, %3812 ]
  %3838 = phi ptr [ %3823, %3829 ], [ %4, %3812 ]
  %3839 = phi i64 [ %3822, %3829 ], [ 0, %3812 ]
  %3840 = add nsw i32 %3837, 1
  store i32 %3840, ptr %3838, align 4, !tbaa !5
  %3841 = getelementptr inbounds i32, ptr %7, i64 %3839
  %3842 = load i32, ptr %3841, align 4, !tbaa !5
  %3843 = getelementptr inbounds i32, ptr %6, i64 %3839
  br label %3854

3844:                                             ; preds = %3821
  %3845 = icmp eq i32 %3824, %3827
  br i1 %3845, label %3846, label %3852

3846:                                             ; preds = %3844
  store i32 0, ptr %3823, align 4, !tbaa !5
  %3847 = getelementptr inbounds i32, ptr %8, i64 %3822
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3822
  store i32 %3848, ptr %3849, align 4, !tbaa !5
  %3850 = add nuw nsw i64 %3822, 1
  %3851 = icmp eq i64 %3850, %3721
  br i1 %3851, label %3859, label %3821, !llvm.loop !707

3852:                                             ; preds = %3817, %3844
  %3853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3854:                                             ; preds = %3830, %3836
  %3855 = phi ptr [ %3843, %3836 ], [ %3823, %3830 ]
  %3856 = phi i32 [ %3842, %3836 ], [ 1, %3830 ]
  %3857 = load i32, ptr %3855, align 4, !tbaa !5
  %3858 = add nsw i32 %3857, %3856
  store i32 %3858, ptr %3855, align 4, !tbaa !5
  br label %3859

3859:                                             ; preds = %3846, %3854, %3819, %3809
  %3860 = icmp eq i32 %3811, %5
  br i1 %3860, label %5513, label %3724, !llvm.loop !708

3861:                                             ; preds = %3707, %3999
  %3862 = phi double [ %3698, %3707 ], [ %3947, %3999 ]
  %3863 = phi i32 [ 0, %3707 ], [ %3948, %3999 ]
  %3864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3708, label %3865, label %3934

3865:                                             ; preds = %3861, %3924
  %3866 = phi i32 [ %3933, %3924 ], [ 0, %3861 ]
  %3867 = phi i64 [ %3875, %3924 ], [ %3712, %3861 ]
  %3868 = phi i64 [ %3932, %3924 ], [ %3711, %3861 ]
  %3869 = phi i32 [ %3930, %3924 ], [ %3864, %3861 ]
  %3870 = sub i32 %3710, %3866
  %3871 = tail call i32 @llvm.smin.i32(i32 %3870, i32 0)
  %3872 = sub i32 %3870, %3871
  %3873 = zext i32 %3872 to i64
  %3874 = add nuw nsw i64 %3873, 1
  %3875 = add nsw i64 %3867, -1
  %3876 = icmp ult i32 %3872, 31
  br i1 %3876, label %3912, label %3877

3877:                                             ; preds = %3865
  %3878 = and i64 %3874, 8589934560
  %3879 = sub i64 %3868, %3878
  br label %3880

3880:                                             ; preds = %3880, %3877
  %3881 = phi i64 [ 0, %3877 ], [ %3904, %3880 ]
  %3882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3900, %3880 ]
  %3883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3901, %3880 ]
  %3884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3902, %3880 ]
  %3885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3877 ], [ %3903, %3880 ]
  %3886 = sub i64 %3868, %3881
  %3887 = getelementptr inbounds i32, ptr %11, i64 %3886
  %3888 = getelementptr inbounds i32, ptr %3887, i64 -7
  %3889 = load <8 x i32>, ptr %3888, align 4, !tbaa !5
  %3890 = shufflevector <8 x i32> %3889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3891 = getelementptr inbounds i32, ptr %3887, i64 -15
  %3892 = load <8 x i32>, ptr %3891, align 4, !tbaa !5
  %3893 = shufflevector <8 x i32> %3892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3894 = getelementptr inbounds i32, ptr %3887, i64 -23
  %3895 = load <8 x i32>, ptr %3894, align 4, !tbaa !5
  %3896 = shufflevector <8 x i32> %3895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3897 = getelementptr inbounds i32, ptr %3887, i64 -31
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !5
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = mul <8 x i32> %3890, %3882
  %3901 = mul <8 x i32> %3893, %3883
  %3902 = mul <8 x i32> %3896, %3884
  %3903 = mul <8 x i32> %3899, %3885
  %3904 = add nuw i64 %3881, 32
  %3905 = icmp eq i64 %3904, %3878
  br i1 %3905, label %3906, label %3880, !llvm.loop !709

3906:                                             ; preds = %3880
  %3907 = mul <8 x i32> %3901, %3900
  %3908 = mul <8 x i32> %3902, %3907
  %3909 = mul <8 x i32> %3903, %3908
  %3910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3909)
  %3911 = icmp eq i64 %3874, %3878
  br i1 %3911, label %3924, label %3912

3912:                                             ; preds = %3865, %3906
  %3913 = phi i64 [ %3868, %3865 ], [ %3879, %3906 ]
  %3914 = phi i32 [ 1, %3865 ], [ %3910, %3906 ]
  br label %3915

3915:                                             ; preds = %3912, %3915
  %3916 = phi i64 [ %3921, %3915 ], [ %3913, %3912 ]
  %3917 = phi i32 [ %3920, %3915 ], [ %3914, %3912 ]
  %3918 = getelementptr inbounds i32, ptr %11, i64 %3916
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = mul nsw i32 %3919, %3917
  %3921 = add nsw i64 %3916, -1
  %3922 = trunc i64 %3916 to i32
  %3923 = icmp sgt i32 %3922, 0
  br i1 %3923, label %3915, label %3924, !llvm.loop !710

3924:                                             ; preds = %3915, %3906
  %3925 = phi i32 [ %3910, %3906 ], [ %3920, %3915 ]
  %3926 = and i64 %3875, 4294967295
  %3927 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = mul nsw i32 %3928, %3925
  %3930 = add nsw i32 %3929, %3869
  %3931 = icmp sgt i64 %3867, 2
  %3932 = add nsw i64 %3868, -1
  %3933 = add i32 %3866, 1
  br i1 %3931, label %3865, label %3934, !llvm.loop !711

3934:                                             ; preds = %3924, %3861
  %3935 = phi i32 [ %3864, %3861 ], [ %3930, %3924 ]
  %3936 = icmp slt i32 %3935, %5
  br i1 %3936, label %3939, label %3937

3937:                                             ; preds = %3934
  %3938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

3939:                                             ; preds = %3934
  %3940 = sext i32 %3935 to i64
  %3941 = getelementptr inbounds i32, ptr %3694, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = sitofp i32 %3942 to double
  %3944 = fcmp fast ogt double %3862, %3943
  br i1 %3944, label %3945, label %3946

3945:                                             ; preds = %3939
  store double %3943, ptr %3696, align 8, !tbaa !18
  br label %3946

3946:                                             ; preds = %3939, %3945
  %3947 = phi double [ %3862, %3939 ], [ %3943, %3945 ]
  %3948 = add nuw nsw i32 %3863, 1
  br i1 %3709, label %3949, label %3999

3949:                                             ; preds = %3946
  %3950 = load i32, ptr %4, align 4, !tbaa !5
  %3951 = load i32, ptr %12, align 4, !tbaa !5
  %3952 = add nsw i32 %3951, -1
  %3953 = icmp slt i32 %3950, %3952
  br i1 %3953, label %3976, label %3954

3954:                                             ; preds = %3949
  %3955 = icmp eq i32 %3950, %3952
  br i1 %3955, label %3956, label %3992

3956:                                             ; preds = %3954
  store i32 0, ptr %4, align 4, !tbaa !5
  %3957 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3957, ptr %6, align 4, !tbaa !5
  br i1 %3714, label %3999, label %3958

3958:                                             ; preds = %3956, %3986
  %3959 = phi i64 [ %3990, %3986 ], [ 1, %3956 ]
  %3960 = getelementptr inbounds i32, ptr %4, i64 %3959
  %3961 = load i32, ptr %3960, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %12, i64 %3959
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, -1
  %3965 = icmp slt i32 %3961, %3964
  br i1 %3965, label %3966, label %3984

3966:                                             ; preds = %3958
  br i1 %3953, label %3976, label %3967

3967:                                             ; preds = %3966
  %3968 = shl i64 %3959, 32
  %3969 = add i64 %3968, -4294967296
  %3970 = ashr exact i64 %3969, 32
  %3971 = getelementptr inbounds i32, ptr %7, i64 %3970
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = getelementptr inbounds i32, ptr %6, i64 %3959
  %3974 = load i32, ptr %3973, align 4, !tbaa !5
  %3975 = add nsw i32 %3974, %3972
  store i32 %3975, ptr %3973, align 4, !tbaa !5
  br label %3994

3976:                                             ; preds = %3949, %3966
  %3977 = phi i32 [ %3961, %3966 ], [ %3950, %3949 ]
  %3978 = phi ptr [ %3960, %3966 ], [ %4, %3949 ]
  %3979 = phi i64 [ %3959, %3966 ], [ 0, %3949 ]
  %3980 = add nsw i32 %3977, 1
  store i32 %3980, ptr %3978, align 4, !tbaa !5
  %3981 = getelementptr inbounds i32, ptr %7, i64 %3979
  %3982 = load i32, ptr %3981, align 4, !tbaa !5
  %3983 = getelementptr inbounds i32, ptr %6, i64 %3979
  br label %3994

3984:                                             ; preds = %3958
  %3985 = icmp eq i32 %3961, %3964
  br i1 %3985, label %3986, label %3992

3986:                                             ; preds = %3984
  store i32 0, ptr %3960, align 4, !tbaa !5
  %3987 = getelementptr inbounds i32, ptr %8, i64 %3959
  %3988 = load i32, ptr %3987, align 4, !tbaa !5
  %3989 = getelementptr inbounds i32, ptr %6, i64 %3959
  store i32 %3988, ptr %3989, align 4, !tbaa !5
  %3990 = add nuw nsw i64 %3959, 1
  %3991 = icmp eq i64 %3990, %3712
  br i1 %3991, label %3999, label %3958, !llvm.loop !712

3992:                                             ; preds = %3954, %3984
  %3993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

3994:                                             ; preds = %3967, %3976
  %3995 = phi ptr [ %3983, %3976 ], [ %3960, %3967 ]
  %3996 = phi i32 [ %3982, %3976 ], [ 1, %3967 ]
  %3997 = load i32, ptr %3995, align 4, !tbaa !5
  %3998 = add nsw i32 %3997, %3996
  store i32 %3998, ptr %3995, align 4, !tbaa !5
  br label %3999

3999:                                             ; preds = %3986, %3994, %3956, %3946
  %4000 = icmp eq i32 %3948, %5
  br i1 %4000, label %5513, label %3861, !llvm.loop !713

4001:                                             ; preds = %3700
  %4002 = getelementptr inbounds i32, ptr %3, i64 %19
  %4003 = load i32, ptr %4002, align 4, !tbaa !5
  %4004 = icmp eq i32 %4003, 0
  %4005 = icmp sgt i32 %5, 0
  br i1 %4004, label %4015, label %4006

4006:                                             ; preds = %4001
  br i1 %4005, label %4007, label %5513

4007:                                             ; preds = %4006
  %4008 = icmp sgt i32 %13, 1
  %4009 = icmp sgt i32 %13, 0
  %4010 = add i32 %13, -2
  %4011 = zext i32 %4010 to i64
  %4012 = zext i32 %13 to i64
  %4013 = add nuw i32 %5, 1
  %4014 = icmp eq i32 %13, 1
  br label %4157

4015:                                             ; preds = %4001
  br i1 %4005, label %4016, label %5513

4016:                                             ; preds = %4015
  %4017 = icmp sgt i32 %13, 1
  %4018 = icmp sgt i32 %13, 0
  %4019 = add i32 %13, -2
  %4020 = zext i32 %4019 to i64
  %4021 = zext i32 %13 to i64
  %4022 = add nuw i32 %5, 1
  %4023 = icmp eq i32 %13, 1
  br label %4024

4024:                                             ; preds = %4016, %4155
  %4025 = phi double [ %3698, %4016 ], [ %4106, %4155 ]
  %4026 = phi i32 [ 0, %4016 ], [ %4107, %4155 ]
  %4027 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4017, label %4028, label %4097

4028:                                             ; preds = %4024, %4087
  %4029 = phi i32 [ %4096, %4087 ], [ 0, %4024 ]
  %4030 = phi i64 [ %4038, %4087 ], [ %4021, %4024 ]
  %4031 = phi i64 [ %4095, %4087 ], [ %4020, %4024 ]
  %4032 = phi i32 [ %4093, %4087 ], [ %4027, %4024 ]
  %4033 = sub i32 %4019, %4029
  %4034 = tail call i32 @llvm.smin.i32(i32 %4033, i32 0)
  %4035 = sub i32 %4033, %4034
  %4036 = zext i32 %4035 to i64
  %4037 = add nuw nsw i64 %4036, 1
  %4038 = add nsw i64 %4030, -1
  %4039 = icmp ult i32 %4035, 31
  br i1 %4039, label %4075, label %4040

4040:                                             ; preds = %4028
  %4041 = and i64 %4037, 8589934560
  %4042 = sub i64 %4031, %4041
  br label %4043

4043:                                             ; preds = %4043, %4040
  %4044 = phi i64 [ 0, %4040 ], [ %4067, %4043 ]
  %4045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4063, %4043 ]
  %4046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4064, %4043 ]
  %4047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4065, %4043 ]
  %4048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4040 ], [ %4066, %4043 ]
  %4049 = sub i64 %4031, %4044
  %4050 = getelementptr inbounds i32, ptr %9, i64 %4049
  %4051 = getelementptr inbounds i32, ptr %4050, i64 -7
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !5
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = getelementptr inbounds i32, ptr %4050, i64 -15
  %4055 = load <8 x i32>, ptr %4054, align 4, !tbaa !5
  %4056 = shufflevector <8 x i32> %4055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4057 = getelementptr inbounds i32, ptr %4050, i64 -23
  %4058 = load <8 x i32>, ptr %4057, align 4, !tbaa !5
  %4059 = shufflevector <8 x i32> %4058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4060 = getelementptr inbounds i32, ptr %4050, i64 -31
  %4061 = load <8 x i32>, ptr %4060, align 4, !tbaa !5
  %4062 = shufflevector <8 x i32> %4061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4063 = mul <8 x i32> %4053, %4045
  %4064 = mul <8 x i32> %4056, %4046
  %4065 = mul <8 x i32> %4059, %4047
  %4066 = mul <8 x i32> %4062, %4048
  %4067 = add nuw i64 %4044, 32
  %4068 = icmp eq i64 %4067, %4041
  br i1 %4068, label %4069, label %4043, !llvm.loop !714

4069:                                             ; preds = %4043
  %4070 = mul <8 x i32> %4064, %4063
  %4071 = mul <8 x i32> %4065, %4070
  %4072 = mul <8 x i32> %4066, %4071
  %4073 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4072)
  %4074 = icmp eq i64 %4037, %4041
  br i1 %4074, label %4087, label %4075

4075:                                             ; preds = %4028, %4069
  %4076 = phi i64 [ %4031, %4028 ], [ %4042, %4069 ]
  %4077 = phi i32 [ 1, %4028 ], [ %4073, %4069 ]
  br label %4078

4078:                                             ; preds = %4075, %4078
  %4079 = phi i64 [ %4084, %4078 ], [ %4076, %4075 ]
  %4080 = phi i32 [ %4083, %4078 ], [ %4077, %4075 ]
  %4081 = getelementptr inbounds i32, ptr %9, i64 %4079
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = mul nsw i32 %4082, %4080
  %4084 = add nsw i64 %4079, -1
  %4085 = trunc i64 %4079 to i32
  %4086 = icmp sgt i32 %4085, 0
  br i1 %4086, label %4078, label %4087, !llvm.loop !715

4087:                                             ; preds = %4078, %4069
  %4088 = phi i32 [ %4073, %4069 ], [ %4083, %4078 ]
  %4089 = and i64 %4038, 4294967295
  %4090 = getelementptr inbounds i32, ptr %6, i64 %4089
  %4091 = load i32, ptr %4090, align 4, !tbaa !5
  %4092 = mul nsw i32 %4091, %4088
  %4093 = add nsw i32 %4092, %4032
  %4094 = icmp sgt i64 %4030, 2
  %4095 = add nsw i64 %4031, -1
  %4096 = add i32 %4029, 1
  br i1 %4094, label %4028, label %4097, !llvm.loop !716

4097:                                             ; preds = %4087, %4024
  %4098 = phi i32 [ %4027, %4024 ], [ %4093, %4087 ]
  %4099 = sext i32 %4098 to i64
  %4100 = getelementptr inbounds i32, ptr %3694, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = sitofp i32 %4101 to double
  %4103 = fcmp fast ogt double %4025, %4102
  br i1 %4103, label %4104, label %4105

4104:                                             ; preds = %4097
  store double %4102, ptr %3696, align 8, !tbaa !18
  br label %4105

4105:                                             ; preds = %4104, %4097
  %4106 = phi double [ %4102, %4104 ], [ %4025, %4097 ]
  %4107 = add nuw nsw i32 %4026, 1
  br i1 %4018, label %4108, label %4155

4108:                                             ; preds = %4105
  %4109 = load i32, ptr %4, align 4, !tbaa !5
  %4110 = load i32, ptr %12, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, -1
  %4112 = icmp slt i32 %4109, %4111
  br i1 %4112, label %4132, label %4113

4113:                                             ; preds = %4108
  %4114 = icmp eq i32 %4109, %4111
  br i1 %4114, label %4115, label %4148

4115:                                             ; preds = %4113
  store i32 0, ptr %4, align 4, !tbaa !5
  %4116 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4116, ptr %6, align 4, !tbaa !5
  br i1 %4023, label %4155, label %4117

4117:                                             ; preds = %4115, %4142
  %4118 = phi i64 [ %4146, %4142 ], [ 1, %4115 ]
  %4119 = getelementptr inbounds i32, ptr %4, i64 %4118
  %4120 = load i32, ptr %4119, align 4, !tbaa !5
  %4121 = getelementptr inbounds i32, ptr %12, i64 %4118
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = add nsw i32 %4122, -1
  %4124 = icmp slt i32 %4120, %4123
  br i1 %4124, label %4125, label %4140

4125:                                             ; preds = %4117
  br i1 %4112, label %4132, label %4126

4126:                                             ; preds = %4125
  %4127 = getelementptr inbounds i32, ptr %7, i64 %4118
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = getelementptr inbounds i32, ptr %6, i64 %4118
  %4130 = load i32, ptr %4129, align 4, !tbaa !5
  %4131 = add nsw i32 %4130, %4128
  store i32 %4131, ptr %4129, align 4, !tbaa !5
  br label %4150

4132:                                             ; preds = %4108, %4125
  %4133 = phi i32 [ %4120, %4125 ], [ %4109, %4108 ]
  %4134 = phi ptr [ %4119, %4125 ], [ %4, %4108 ]
  %4135 = phi i64 [ %4118, %4125 ], [ 0, %4108 ]
  %4136 = add nsw i32 %4133, 1
  store i32 %4136, ptr %4134, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %7, i64 %4135
  %4138 = load i32, ptr %4137, align 4, !tbaa !5
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4135
  br label %4150

4140:                                             ; preds = %4117
  %4141 = icmp eq i32 %4120, %4123
  br i1 %4141, label %4142, label %4148

4142:                                             ; preds = %4140
  store i32 0, ptr %4119, align 4, !tbaa !5
  %4143 = getelementptr inbounds i32, ptr %8, i64 %4118
  %4144 = load i32, ptr %4143, align 4, !tbaa !5
  %4145 = getelementptr inbounds i32, ptr %6, i64 %4118
  store i32 %4144, ptr %4145, align 4, !tbaa !5
  %4146 = add nuw nsw i64 %4118, 1
  %4147 = icmp eq i64 %4146, %4021
  br i1 %4147, label %4155, label %4117, !llvm.loop !717

4148:                                             ; preds = %4113, %4140
  %4149 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4150:                                             ; preds = %4126, %4132
  %4151 = phi ptr [ %4139, %4132 ], [ %4119, %4126 ]
  %4152 = phi i32 [ %4138, %4132 ], [ 1, %4126 ]
  %4153 = load i32, ptr %4151, align 4, !tbaa !5
  %4154 = add nsw i32 %4153, %4152
  store i32 %4154, ptr %4151, align 4, !tbaa !5
  br label %4155

4155:                                             ; preds = %4142, %4150, %4115, %4105
  %4156 = icmp eq i32 %4107, %5
  br i1 %4156, label %5513, label %4024, !llvm.loop !718

4157:                                             ; preds = %4007, %4295
  %4158 = phi double [ %3698, %4007 ], [ %4243, %4295 ]
  %4159 = phi i32 [ 0, %4007 ], [ %4244, %4295 ]
  %4160 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4008, label %4161, label %4230

4161:                                             ; preds = %4157, %4220
  %4162 = phi i32 [ %4229, %4220 ], [ 0, %4157 ]
  %4163 = phi i64 [ %4171, %4220 ], [ %4012, %4157 ]
  %4164 = phi i64 [ %4228, %4220 ], [ %4011, %4157 ]
  %4165 = phi i32 [ %4226, %4220 ], [ %4160, %4157 ]
  %4166 = sub i32 %4010, %4162
  %4167 = tail call i32 @llvm.smin.i32(i32 %4166, i32 0)
  %4168 = sub i32 %4166, %4167
  %4169 = zext i32 %4168 to i64
  %4170 = add nuw nsw i64 %4169, 1
  %4171 = add nsw i64 %4163, -1
  %4172 = icmp ult i32 %4168, 31
  br i1 %4172, label %4208, label %4173

4173:                                             ; preds = %4161
  %4174 = and i64 %4170, 8589934560
  %4175 = sub i64 %4164, %4174
  br label %4176

4176:                                             ; preds = %4176, %4173
  %4177 = phi i64 [ 0, %4173 ], [ %4200, %4176 ]
  %4178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4196, %4176 ]
  %4179 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4197, %4176 ]
  %4180 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4198, %4176 ]
  %4181 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4173 ], [ %4199, %4176 ]
  %4182 = sub i64 %4164, %4177
  %4183 = getelementptr inbounds i32, ptr %11, i64 %4182
  %4184 = getelementptr inbounds i32, ptr %4183, i64 -7
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !5
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4183, i64 -15
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !5
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = getelementptr inbounds i32, ptr %4183, i64 -23
  %4191 = load <8 x i32>, ptr %4190, align 4, !tbaa !5
  %4192 = shufflevector <8 x i32> %4191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4193 = getelementptr inbounds i32, ptr %4183, i64 -31
  %4194 = load <8 x i32>, ptr %4193, align 4, !tbaa !5
  %4195 = shufflevector <8 x i32> %4194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4196 = mul <8 x i32> %4186, %4178
  %4197 = mul <8 x i32> %4189, %4179
  %4198 = mul <8 x i32> %4192, %4180
  %4199 = mul <8 x i32> %4195, %4181
  %4200 = add nuw i64 %4177, 32
  %4201 = icmp eq i64 %4200, %4174
  br i1 %4201, label %4202, label %4176, !llvm.loop !719

4202:                                             ; preds = %4176
  %4203 = mul <8 x i32> %4197, %4196
  %4204 = mul <8 x i32> %4198, %4203
  %4205 = mul <8 x i32> %4199, %4204
  %4206 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4205)
  %4207 = icmp eq i64 %4170, %4174
  br i1 %4207, label %4220, label %4208

4208:                                             ; preds = %4161, %4202
  %4209 = phi i64 [ %4164, %4161 ], [ %4175, %4202 ]
  %4210 = phi i32 [ 1, %4161 ], [ %4206, %4202 ]
  br label %4211

4211:                                             ; preds = %4208, %4211
  %4212 = phi i64 [ %4217, %4211 ], [ %4209, %4208 ]
  %4213 = phi i32 [ %4216, %4211 ], [ %4210, %4208 ]
  %4214 = getelementptr inbounds i32, ptr %11, i64 %4212
  %4215 = load i32, ptr %4214, align 4, !tbaa !5
  %4216 = mul nsw i32 %4215, %4213
  %4217 = add nsw i64 %4212, -1
  %4218 = trunc i64 %4212 to i32
  %4219 = icmp sgt i32 %4218, 0
  br i1 %4219, label %4211, label %4220, !llvm.loop !720

4220:                                             ; preds = %4211, %4202
  %4221 = phi i32 [ %4206, %4202 ], [ %4216, %4211 ]
  %4222 = and i64 %4171, 4294967295
  %4223 = getelementptr inbounds i32, ptr %6, i64 %4222
  %4224 = load i32, ptr %4223, align 4, !tbaa !5
  %4225 = mul nsw i32 %4224, %4221
  %4226 = add nsw i32 %4225, %4165
  %4227 = icmp sgt i64 %4163, 2
  %4228 = add nsw i64 %4164, -1
  %4229 = add i32 %4162, 1
  br i1 %4227, label %4161, label %4230, !llvm.loop !721

4230:                                             ; preds = %4220, %4157
  %4231 = phi i32 [ %4160, %4157 ], [ %4226, %4220 ]
  %4232 = icmp slt i32 %4231, %5
  br i1 %4232, label %4235, label %4233

4233:                                             ; preds = %4230
  %4234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4235:                                             ; preds = %4230
  %4236 = sext i32 %4231 to i64
  %4237 = getelementptr inbounds i32, ptr %3694, i64 %4236
  %4238 = load i32, ptr %4237, align 4, !tbaa !5
  %4239 = sitofp i32 %4238 to double
  %4240 = fcmp fast ogt double %4158, %4239
  br i1 %4240, label %4241, label %4242

4241:                                             ; preds = %4235
  store double %4239, ptr %3696, align 8, !tbaa !18
  br label %4242

4242:                                             ; preds = %4241, %4235
  %4243 = phi double [ %4239, %4241 ], [ %4158, %4235 ]
  %4244 = add nuw nsw i32 %4159, 1
  br i1 %4009, label %4245, label %4295

4245:                                             ; preds = %4242
  %4246 = load i32, ptr %4, align 4, !tbaa !5
  %4247 = load i32, ptr %12, align 4, !tbaa !5
  %4248 = add nsw i32 %4247, -1
  %4249 = icmp slt i32 %4246, %4248
  br i1 %4249, label %4272, label %4250

4250:                                             ; preds = %4245
  %4251 = icmp eq i32 %4246, %4248
  br i1 %4251, label %4252, label %4288

4252:                                             ; preds = %4250
  store i32 0, ptr %4, align 4, !tbaa !5
  %4253 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4253, ptr %6, align 4, !tbaa !5
  br i1 %4014, label %4295, label %4254

4254:                                             ; preds = %4252, %4282
  %4255 = phi i64 [ %4286, %4282 ], [ 1, %4252 ]
  %4256 = getelementptr inbounds i32, ptr %4, i64 %4255
  %4257 = load i32, ptr %4256, align 4, !tbaa !5
  %4258 = getelementptr inbounds i32, ptr %12, i64 %4255
  %4259 = load i32, ptr %4258, align 4, !tbaa !5
  %4260 = add nsw i32 %4259, -1
  %4261 = icmp slt i32 %4257, %4260
  br i1 %4261, label %4262, label %4280

4262:                                             ; preds = %4254
  br i1 %4249, label %4272, label %4263

4263:                                             ; preds = %4262
  %4264 = shl i64 %4255, 32
  %4265 = add i64 %4264, -4294967296
  %4266 = ashr exact i64 %4265, 32
  %4267 = getelementptr inbounds i32, ptr %7, i64 %4266
  %4268 = load i32, ptr %4267, align 4, !tbaa !5
  %4269 = getelementptr inbounds i32, ptr %6, i64 %4255
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = add nsw i32 %4270, %4268
  store i32 %4271, ptr %4269, align 4, !tbaa !5
  br label %4290

4272:                                             ; preds = %4245, %4262
  %4273 = phi i32 [ %4257, %4262 ], [ %4246, %4245 ]
  %4274 = phi ptr [ %4256, %4262 ], [ %4, %4245 ]
  %4275 = phi i64 [ %4255, %4262 ], [ 0, %4245 ]
  %4276 = add nsw i32 %4273, 1
  store i32 %4276, ptr %4274, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %7, i64 %4275
  %4278 = load i32, ptr %4277, align 4, !tbaa !5
  %4279 = getelementptr inbounds i32, ptr %6, i64 %4275
  br label %4290

4280:                                             ; preds = %4254
  %4281 = icmp eq i32 %4257, %4260
  br i1 %4281, label %4282, label %4288

4282:                                             ; preds = %4280
  store i32 0, ptr %4256, align 4, !tbaa !5
  %4283 = getelementptr inbounds i32, ptr %8, i64 %4255
  %4284 = load i32, ptr %4283, align 4, !tbaa !5
  %4285 = getelementptr inbounds i32, ptr %6, i64 %4255
  store i32 %4284, ptr %4285, align 4, !tbaa !5
  %4286 = add nuw nsw i64 %4255, 1
  %4287 = icmp eq i64 %4286, %4012
  br i1 %4287, label %4295, label %4254, !llvm.loop !722

4288:                                             ; preds = %4250, %4280
  %4289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4290:                                             ; preds = %4263, %4272
  %4291 = phi ptr [ %4279, %4272 ], [ %4256, %4263 ]
  %4292 = phi i32 [ %4278, %4272 ], [ 1, %4263 ]
  %4293 = load i32, ptr %4291, align 4, !tbaa !5
  %4294 = add nsw i32 %4293, %4292
  store i32 %4294, ptr %4291, align 4, !tbaa !5
  br label %4295

4295:                                             ; preds = %4282, %4290, %4252, %4242
  %4296 = icmp eq i32 %4244, %5
  br i1 %4296, label %5513, label %4157, !llvm.loop !723

4297:                                             ; preds = %3700
  %4298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4299:                                             ; preds = %18
  %4300 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4301 = load ptr, ptr %4300, align 8, !tbaa !9
  %4302 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4303 = load ptr, ptr %4302, align 8, !tbaa !9
  %4304 = load i32, ptr %4301, align 4, !tbaa !5
  %4305 = sitofp i32 %4304 to float
  store float %4305, ptr %4303, align 4, !tbaa !162
  %4306 = icmp eq i32 %13, 0
  br i1 %4306, label %5513, label %4307

4307:                                             ; preds = %4299
  switch i32 %1, label %4904 [
    i32 1, label %4308
    i32 0, label %4608
  ]

4308:                                             ; preds = %4307
  %4309 = getelementptr inbounds i32, ptr %3, i64 %19
  %4310 = load i32, ptr %4309, align 4, !tbaa !5
  %4311 = icmp eq i32 %4310, 0
  %4312 = icmp sgt i32 %5, 0
  br i1 %4311, label %4322, label %4313

4313:                                             ; preds = %4308
  br i1 %4312, label %4314, label %5513

4314:                                             ; preds = %4313
  %4315 = icmp sgt i32 %13, 1
  %4316 = icmp sgt i32 %13, 0
  %4317 = add i32 %13, -2
  %4318 = zext i32 %4317 to i64
  %4319 = zext i32 %13 to i64
  %4320 = add nuw i32 %5, 1
  %4321 = icmp eq i32 %13, 1
  br label %4468

4322:                                             ; preds = %4308
  br i1 %4312, label %4323, label %5513

4323:                                             ; preds = %4322
  %4324 = icmp sgt i32 %13, 1
  %4325 = icmp sgt i32 %13, 0
  %4326 = add i32 %13, -2
  %4327 = zext i32 %4326 to i64
  %4328 = zext i32 %13 to i64
  %4329 = add nuw i32 %5, 1
  %4330 = icmp eq i32 %13, 1
  br label %4331

4331:                                             ; preds = %4323, %4466
  %4332 = phi float [ %4305, %4323 ], [ %4417, %4466 ]
  %4333 = phi i32 [ 0, %4323 ], [ %4418, %4466 ]
  %4334 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4324, label %4335, label %4404

4335:                                             ; preds = %4331, %4394
  %4336 = phi i32 [ %4403, %4394 ], [ 0, %4331 ]
  %4337 = phi i64 [ %4345, %4394 ], [ %4328, %4331 ]
  %4338 = phi i64 [ %4402, %4394 ], [ %4327, %4331 ]
  %4339 = phi i32 [ %4400, %4394 ], [ %4334, %4331 ]
  %4340 = sub i32 %4326, %4336
  %4341 = tail call i32 @llvm.smin.i32(i32 %4340, i32 0)
  %4342 = sub i32 %4340, %4341
  %4343 = zext i32 %4342 to i64
  %4344 = add nuw nsw i64 %4343, 1
  %4345 = add nsw i64 %4337, -1
  %4346 = icmp ult i32 %4342, 31
  br i1 %4346, label %4382, label %4347

4347:                                             ; preds = %4335
  %4348 = and i64 %4344, 8589934560
  %4349 = sub i64 %4338, %4348
  br label %4350

4350:                                             ; preds = %4350, %4347
  %4351 = phi i64 [ 0, %4347 ], [ %4374, %4350 ]
  %4352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4370, %4350 ]
  %4353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4371, %4350 ]
  %4354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4372, %4350 ]
  %4355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4347 ], [ %4373, %4350 ]
  %4356 = sub i64 %4338, %4351
  %4357 = getelementptr inbounds i32, ptr %9, i64 %4356
  %4358 = getelementptr inbounds i32, ptr %4357, i64 -7
  %4359 = load <8 x i32>, ptr %4358, align 4, !tbaa !5
  %4360 = shufflevector <8 x i32> %4359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4361 = getelementptr inbounds i32, ptr %4357, i64 -15
  %4362 = load <8 x i32>, ptr %4361, align 4, !tbaa !5
  %4363 = shufflevector <8 x i32> %4362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4364 = getelementptr inbounds i32, ptr %4357, i64 -23
  %4365 = load <8 x i32>, ptr %4364, align 4, !tbaa !5
  %4366 = shufflevector <8 x i32> %4365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4367 = getelementptr inbounds i32, ptr %4357, i64 -31
  %4368 = load <8 x i32>, ptr %4367, align 4, !tbaa !5
  %4369 = shufflevector <8 x i32> %4368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4370 = mul <8 x i32> %4360, %4352
  %4371 = mul <8 x i32> %4363, %4353
  %4372 = mul <8 x i32> %4366, %4354
  %4373 = mul <8 x i32> %4369, %4355
  %4374 = add nuw i64 %4351, 32
  %4375 = icmp eq i64 %4374, %4348
  br i1 %4375, label %4376, label %4350, !llvm.loop !724

4376:                                             ; preds = %4350
  %4377 = mul <8 x i32> %4371, %4370
  %4378 = mul <8 x i32> %4372, %4377
  %4379 = mul <8 x i32> %4373, %4378
  %4380 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4379)
  %4381 = icmp eq i64 %4344, %4348
  br i1 %4381, label %4394, label %4382

4382:                                             ; preds = %4335, %4376
  %4383 = phi i64 [ %4338, %4335 ], [ %4349, %4376 ]
  %4384 = phi i32 [ 1, %4335 ], [ %4380, %4376 ]
  br label %4385

4385:                                             ; preds = %4382, %4385
  %4386 = phi i64 [ %4391, %4385 ], [ %4383, %4382 ]
  %4387 = phi i32 [ %4390, %4385 ], [ %4384, %4382 ]
  %4388 = getelementptr inbounds i32, ptr %9, i64 %4386
  %4389 = load i32, ptr %4388, align 4, !tbaa !5
  %4390 = mul nsw i32 %4389, %4387
  %4391 = add nsw i64 %4386, -1
  %4392 = trunc i64 %4386 to i32
  %4393 = icmp sgt i32 %4392, 0
  br i1 %4393, label %4385, label %4394, !llvm.loop !725

4394:                                             ; preds = %4385, %4376
  %4395 = phi i32 [ %4380, %4376 ], [ %4390, %4385 ]
  %4396 = and i64 %4345, 4294967295
  %4397 = getelementptr inbounds i32, ptr %6, i64 %4396
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = mul nsw i32 %4398, %4395
  %4400 = add nsw i32 %4399, %4339
  %4401 = icmp sgt i64 %4337, 2
  %4402 = add nsw i64 %4338, -1
  %4403 = add i32 %4336, 1
  br i1 %4401, label %4335, label %4404, !llvm.loop !726

4404:                                             ; preds = %4394, %4331
  %4405 = phi i32 [ %4334, %4331 ], [ %4400, %4394 ]
  %4406 = sext i32 %4405 to i64
  %4407 = getelementptr inbounds double, ptr %2, i64 %4406
  %4408 = load double, ptr %4407, align 8, !tbaa !18
  %4409 = getelementptr inbounds i32, ptr %4301, i64 %4406
  %4410 = load i32, ptr %4409, align 4, !tbaa !5
  %4411 = sitofp i32 %4410 to float
  %4412 = fcmp fast one double %4408, 0.000000e+00
  %4413 = fcmp fast ogt float %4332, %4411
  %4414 = select i1 %4412, i1 %4413, i1 false
  br i1 %4414, label %4415, label %4416

4415:                                             ; preds = %4404
  store float %4411, ptr %4303, align 4, !tbaa !162
  br label %4416

4416:                                             ; preds = %4415, %4404
  %4417 = phi float [ %4411, %4415 ], [ %4332, %4404 ]
  %4418 = add nuw nsw i32 %4333, 1
  br i1 %4325, label %4419, label %4466

4419:                                             ; preds = %4416
  %4420 = load i32, ptr %4, align 4, !tbaa !5
  %4421 = load i32, ptr %12, align 4, !tbaa !5
  %4422 = add nsw i32 %4421, -1
  %4423 = icmp slt i32 %4420, %4422
  br i1 %4423, label %4443, label %4424

4424:                                             ; preds = %4419
  %4425 = icmp eq i32 %4420, %4422
  br i1 %4425, label %4426, label %4459

4426:                                             ; preds = %4424
  store i32 0, ptr %4, align 4, !tbaa !5
  %4427 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4427, ptr %6, align 4, !tbaa !5
  br i1 %4330, label %4466, label %4428

4428:                                             ; preds = %4426, %4453
  %4429 = phi i64 [ %4457, %4453 ], [ 1, %4426 ]
  %4430 = getelementptr inbounds i32, ptr %4, i64 %4429
  %4431 = load i32, ptr %4430, align 4, !tbaa !5
  %4432 = getelementptr inbounds i32, ptr %12, i64 %4429
  %4433 = load i32, ptr %4432, align 4, !tbaa !5
  %4434 = add nsw i32 %4433, -1
  %4435 = icmp slt i32 %4431, %4434
  br i1 %4435, label %4436, label %4451

4436:                                             ; preds = %4428
  br i1 %4423, label %4443, label %4437

4437:                                             ; preds = %4436
  %4438 = getelementptr inbounds i32, ptr %7, i64 %4429
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %6, i64 %4429
  %4441 = load i32, ptr %4440, align 4, !tbaa !5
  %4442 = add nsw i32 %4441, %4439
  store i32 %4442, ptr %4440, align 4, !tbaa !5
  br label %4461

4443:                                             ; preds = %4419, %4436
  %4444 = phi i32 [ %4431, %4436 ], [ %4420, %4419 ]
  %4445 = phi ptr [ %4430, %4436 ], [ %4, %4419 ]
  %4446 = phi i64 [ %4429, %4436 ], [ 0, %4419 ]
  %4447 = add nsw i32 %4444, 1
  store i32 %4447, ptr %4445, align 4, !tbaa !5
  %4448 = getelementptr inbounds i32, ptr %7, i64 %4446
  %4449 = load i32, ptr %4448, align 4, !tbaa !5
  %4450 = getelementptr inbounds i32, ptr %6, i64 %4446
  br label %4461

4451:                                             ; preds = %4428
  %4452 = icmp eq i32 %4431, %4434
  br i1 %4452, label %4453, label %4459

4453:                                             ; preds = %4451
  store i32 0, ptr %4430, align 4, !tbaa !5
  %4454 = getelementptr inbounds i32, ptr %8, i64 %4429
  %4455 = load i32, ptr %4454, align 4, !tbaa !5
  %4456 = getelementptr inbounds i32, ptr %6, i64 %4429
  store i32 %4455, ptr %4456, align 4, !tbaa !5
  %4457 = add nuw nsw i64 %4429, 1
  %4458 = icmp eq i64 %4457, %4328
  br i1 %4458, label %4466, label %4428, !llvm.loop !727

4459:                                             ; preds = %4424, %4451
  %4460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4461:                                             ; preds = %4437, %4443
  %4462 = phi ptr [ %4450, %4443 ], [ %4430, %4437 ]
  %4463 = phi i32 [ %4449, %4443 ], [ 1, %4437 ]
  %4464 = load i32, ptr %4462, align 4, !tbaa !5
  %4465 = add nsw i32 %4464, %4463
  store i32 %4465, ptr %4462, align 4, !tbaa !5
  br label %4466

4466:                                             ; preds = %4453, %4461, %4426, %4416
  %4467 = icmp eq i32 %4418, %5
  br i1 %4467, label %5513, label %4331, !llvm.loop !728

4468:                                             ; preds = %4314, %4606
  %4469 = phi float [ %4305, %4314 ], [ %4554, %4606 ]
  %4470 = phi i32 [ 0, %4314 ], [ %4555, %4606 ]
  %4471 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4315, label %4472, label %4541

4472:                                             ; preds = %4468, %4531
  %4473 = phi i32 [ %4540, %4531 ], [ 0, %4468 ]
  %4474 = phi i64 [ %4482, %4531 ], [ %4319, %4468 ]
  %4475 = phi i64 [ %4539, %4531 ], [ %4318, %4468 ]
  %4476 = phi i32 [ %4537, %4531 ], [ %4471, %4468 ]
  %4477 = sub i32 %4317, %4473
  %4478 = tail call i32 @llvm.smin.i32(i32 %4477, i32 0)
  %4479 = sub i32 %4477, %4478
  %4480 = zext i32 %4479 to i64
  %4481 = add nuw nsw i64 %4480, 1
  %4482 = add nsw i64 %4474, -1
  %4483 = icmp ult i32 %4479, 31
  br i1 %4483, label %4519, label %4484

4484:                                             ; preds = %4472
  %4485 = and i64 %4481, 8589934560
  %4486 = sub i64 %4475, %4485
  br label %4487

4487:                                             ; preds = %4487, %4484
  %4488 = phi i64 [ 0, %4484 ], [ %4511, %4487 ]
  %4489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4507, %4487 ]
  %4490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4508, %4487 ]
  %4491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4509, %4487 ]
  %4492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4484 ], [ %4510, %4487 ]
  %4493 = sub i64 %4475, %4488
  %4494 = getelementptr inbounds i32, ptr %11, i64 %4493
  %4495 = getelementptr inbounds i32, ptr %4494, i64 -7
  %4496 = load <8 x i32>, ptr %4495, align 4, !tbaa !5
  %4497 = shufflevector <8 x i32> %4496, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4498 = getelementptr inbounds i32, ptr %4494, i64 -15
  %4499 = load <8 x i32>, ptr %4498, align 4, !tbaa !5
  %4500 = shufflevector <8 x i32> %4499, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4501 = getelementptr inbounds i32, ptr %4494, i64 -23
  %4502 = load <8 x i32>, ptr %4501, align 4, !tbaa !5
  %4503 = shufflevector <8 x i32> %4502, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4504 = getelementptr inbounds i32, ptr %4494, i64 -31
  %4505 = load <8 x i32>, ptr %4504, align 4, !tbaa !5
  %4506 = shufflevector <8 x i32> %4505, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4507 = mul <8 x i32> %4497, %4489
  %4508 = mul <8 x i32> %4500, %4490
  %4509 = mul <8 x i32> %4503, %4491
  %4510 = mul <8 x i32> %4506, %4492
  %4511 = add nuw i64 %4488, 32
  %4512 = icmp eq i64 %4511, %4485
  br i1 %4512, label %4513, label %4487, !llvm.loop !729

4513:                                             ; preds = %4487
  %4514 = mul <8 x i32> %4508, %4507
  %4515 = mul <8 x i32> %4509, %4514
  %4516 = mul <8 x i32> %4510, %4515
  %4517 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4516)
  %4518 = icmp eq i64 %4481, %4485
  br i1 %4518, label %4531, label %4519

4519:                                             ; preds = %4472, %4513
  %4520 = phi i64 [ %4475, %4472 ], [ %4486, %4513 ]
  %4521 = phi i32 [ 1, %4472 ], [ %4517, %4513 ]
  br label %4522

4522:                                             ; preds = %4519, %4522
  %4523 = phi i64 [ %4528, %4522 ], [ %4520, %4519 ]
  %4524 = phi i32 [ %4527, %4522 ], [ %4521, %4519 ]
  %4525 = getelementptr inbounds i32, ptr %11, i64 %4523
  %4526 = load i32, ptr %4525, align 4, !tbaa !5
  %4527 = mul nsw i32 %4526, %4524
  %4528 = add nsw i64 %4523, -1
  %4529 = trunc i64 %4523 to i32
  %4530 = icmp sgt i32 %4529, 0
  br i1 %4530, label %4522, label %4531, !llvm.loop !730

4531:                                             ; preds = %4522, %4513
  %4532 = phi i32 [ %4517, %4513 ], [ %4527, %4522 ]
  %4533 = and i64 %4482, 4294967295
  %4534 = getelementptr inbounds i32, ptr %6, i64 %4533
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = mul nsw i32 %4535, %4532
  %4537 = add nsw i32 %4536, %4476
  %4538 = icmp sgt i64 %4474, 2
  %4539 = add nsw i64 %4475, -1
  %4540 = add i32 %4473, 1
  br i1 %4538, label %4472, label %4541, !llvm.loop !731

4541:                                             ; preds = %4531, %4468
  %4542 = phi i32 [ %4471, %4468 ], [ %4537, %4531 ]
  %4543 = icmp slt i32 %4542, %5
  br i1 %4543, label %4546, label %4544

4544:                                             ; preds = %4541
  %4545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4546:                                             ; preds = %4541
  %4547 = sext i32 %4542 to i64
  %4548 = getelementptr inbounds i32, ptr %4301, i64 %4547
  %4549 = load i32, ptr %4548, align 4, !tbaa !5
  %4550 = sitofp i32 %4549 to float
  %4551 = fcmp fast ogt float %4469, %4550
  br i1 %4551, label %4552, label %4553

4552:                                             ; preds = %4546
  store float %4550, ptr %4303, align 4, !tbaa !162
  br label %4553

4553:                                             ; preds = %4546, %4552
  %4554 = phi float [ %4469, %4546 ], [ %4550, %4552 ]
  %4555 = add nuw nsw i32 %4470, 1
  br i1 %4316, label %4556, label %4606

4556:                                             ; preds = %4553
  %4557 = load i32, ptr %4, align 4, !tbaa !5
  %4558 = load i32, ptr %12, align 4, !tbaa !5
  %4559 = add nsw i32 %4558, -1
  %4560 = icmp slt i32 %4557, %4559
  br i1 %4560, label %4583, label %4561

4561:                                             ; preds = %4556
  %4562 = icmp eq i32 %4557, %4559
  br i1 %4562, label %4563, label %4599

4563:                                             ; preds = %4561
  store i32 0, ptr %4, align 4, !tbaa !5
  %4564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4564, ptr %6, align 4, !tbaa !5
  br i1 %4321, label %4606, label %4565

4565:                                             ; preds = %4563, %4593
  %4566 = phi i64 [ %4597, %4593 ], [ 1, %4563 ]
  %4567 = getelementptr inbounds i32, ptr %4, i64 %4566
  %4568 = load i32, ptr %4567, align 4, !tbaa !5
  %4569 = getelementptr inbounds i32, ptr %12, i64 %4566
  %4570 = load i32, ptr %4569, align 4, !tbaa !5
  %4571 = add nsw i32 %4570, -1
  %4572 = icmp slt i32 %4568, %4571
  br i1 %4572, label %4573, label %4591

4573:                                             ; preds = %4565
  br i1 %4560, label %4583, label %4574

4574:                                             ; preds = %4573
  %4575 = shl i64 %4566, 32
  %4576 = add i64 %4575, -4294967296
  %4577 = ashr exact i64 %4576, 32
  %4578 = getelementptr inbounds i32, ptr %7, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %6, i64 %4566
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = add nsw i32 %4581, %4579
  store i32 %4582, ptr %4580, align 4, !tbaa !5
  br label %4601

4583:                                             ; preds = %4556, %4573
  %4584 = phi i32 [ %4568, %4573 ], [ %4557, %4556 ]
  %4585 = phi ptr [ %4567, %4573 ], [ %4, %4556 ]
  %4586 = phi i64 [ %4566, %4573 ], [ 0, %4556 ]
  %4587 = add nsw i32 %4584, 1
  store i32 %4587, ptr %4585, align 4, !tbaa !5
  %4588 = getelementptr inbounds i32, ptr %7, i64 %4586
  %4589 = load i32, ptr %4588, align 4, !tbaa !5
  %4590 = getelementptr inbounds i32, ptr %6, i64 %4586
  br label %4601

4591:                                             ; preds = %4565
  %4592 = icmp eq i32 %4568, %4571
  br i1 %4592, label %4593, label %4599

4593:                                             ; preds = %4591
  store i32 0, ptr %4567, align 4, !tbaa !5
  %4594 = getelementptr inbounds i32, ptr %8, i64 %4566
  %4595 = load i32, ptr %4594, align 4, !tbaa !5
  %4596 = getelementptr inbounds i32, ptr %6, i64 %4566
  store i32 %4595, ptr %4596, align 4, !tbaa !5
  %4597 = add nuw nsw i64 %4566, 1
  %4598 = icmp eq i64 %4597, %4319
  br i1 %4598, label %4606, label %4565, !llvm.loop !732

4599:                                             ; preds = %4561, %4591
  %4600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4601:                                             ; preds = %4574, %4583
  %4602 = phi ptr [ %4590, %4583 ], [ %4567, %4574 ]
  %4603 = phi i32 [ %4589, %4583 ], [ 1, %4574 ]
  %4604 = load i32, ptr %4602, align 4, !tbaa !5
  %4605 = add nsw i32 %4604, %4603
  store i32 %4605, ptr %4602, align 4, !tbaa !5
  br label %4606

4606:                                             ; preds = %4593, %4601, %4563, %4553
  %4607 = icmp eq i32 %4555, %5
  br i1 %4607, label %5513, label %4468, !llvm.loop !733

4608:                                             ; preds = %4307
  %4609 = getelementptr inbounds i32, ptr %3, i64 %19
  %4610 = load i32, ptr %4609, align 4, !tbaa !5
  %4611 = icmp eq i32 %4610, 0
  %4612 = icmp sgt i32 %5, 0
  br i1 %4611, label %4622, label %4613

4613:                                             ; preds = %4608
  br i1 %4612, label %4614, label %5513

4614:                                             ; preds = %4613
  %4615 = icmp sgt i32 %13, 1
  %4616 = icmp sgt i32 %13, 0
  %4617 = add i32 %13, -2
  %4618 = zext i32 %4617 to i64
  %4619 = zext i32 %13 to i64
  %4620 = add nuw i32 %5, 1
  %4621 = icmp eq i32 %13, 1
  br label %4764

4622:                                             ; preds = %4608
  br i1 %4612, label %4623, label %5513

4623:                                             ; preds = %4622
  %4624 = icmp sgt i32 %13, 1
  %4625 = icmp sgt i32 %13, 0
  %4626 = add i32 %13, -2
  %4627 = zext i32 %4626 to i64
  %4628 = zext i32 %13 to i64
  %4629 = add nuw i32 %5, 1
  %4630 = icmp eq i32 %13, 1
  br label %4631

4631:                                             ; preds = %4623, %4762
  %4632 = phi float [ %4305, %4623 ], [ %4713, %4762 ]
  %4633 = phi i32 [ 0, %4623 ], [ %4714, %4762 ]
  %4634 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4624, label %4635, label %4704

4635:                                             ; preds = %4631, %4694
  %4636 = phi i32 [ %4703, %4694 ], [ 0, %4631 ]
  %4637 = phi i64 [ %4645, %4694 ], [ %4628, %4631 ]
  %4638 = phi i64 [ %4702, %4694 ], [ %4627, %4631 ]
  %4639 = phi i32 [ %4700, %4694 ], [ %4634, %4631 ]
  %4640 = sub i32 %4626, %4636
  %4641 = tail call i32 @llvm.smin.i32(i32 %4640, i32 0)
  %4642 = sub i32 %4640, %4641
  %4643 = zext i32 %4642 to i64
  %4644 = add nuw nsw i64 %4643, 1
  %4645 = add nsw i64 %4637, -1
  %4646 = icmp ult i32 %4642, 31
  br i1 %4646, label %4682, label %4647

4647:                                             ; preds = %4635
  %4648 = and i64 %4644, 8589934560
  %4649 = sub i64 %4638, %4648
  br label %4650

4650:                                             ; preds = %4650, %4647
  %4651 = phi i64 [ 0, %4647 ], [ %4674, %4650 ]
  %4652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4670, %4650 ]
  %4653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4671, %4650 ]
  %4654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4672, %4650 ]
  %4655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4647 ], [ %4673, %4650 ]
  %4656 = sub i64 %4638, %4651
  %4657 = getelementptr inbounds i32, ptr %9, i64 %4656
  %4658 = getelementptr inbounds i32, ptr %4657, i64 -7
  %4659 = load <8 x i32>, ptr %4658, align 4, !tbaa !5
  %4660 = shufflevector <8 x i32> %4659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4661 = getelementptr inbounds i32, ptr %4657, i64 -15
  %4662 = load <8 x i32>, ptr %4661, align 4, !tbaa !5
  %4663 = shufflevector <8 x i32> %4662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4664 = getelementptr inbounds i32, ptr %4657, i64 -23
  %4665 = load <8 x i32>, ptr %4664, align 4, !tbaa !5
  %4666 = shufflevector <8 x i32> %4665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4667 = getelementptr inbounds i32, ptr %4657, i64 -31
  %4668 = load <8 x i32>, ptr %4667, align 4, !tbaa !5
  %4669 = shufflevector <8 x i32> %4668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4670 = mul <8 x i32> %4660, %4652
  %4671 = mul <8 x i32> %4663, %4653
  %4672 = mul <8 x i32> %4666, %4654
  %4673 = mul <8 x i32> %4669, %4655
  %4674 = add nuw i64 %4651, 32
  %4675 = icmp eq i64 %4674, %4648
  br i1 %4675, label %4676, label %4650, !llvm.loop !734

4676:                                             ; preds = %4650
  %4677 = mul <8 x i32> %4671, %4670
  %4678 = mul <8 x i32> %4672, %4677
  %4679 = mul <8 x i32> %4673, %4678
  %4680 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4679)
  %4681 = icmp eq i64 %4644, %4648
  br i1 %4681, label %4694, label %4682

4682:                                             ; preds = %4635, %4676
  %4683 = phi i64 [ %4638, %4635 ], [ %4649, %4676 ]
  %4684 = phi i32 [ 1, %4635 ], [ %4680, %4676 ]
  br label %4685

4685:                                             ; preds = %4682, %4685
  %4686 = phi i64 [ %4691, %4685 ], [ %4683, %4682 ]
  %4687 = phi i32 [ %4690, %4685 ], [ %4684, %4682 ]
  %4688 = getelementptr inbounds i32, ptr %9, i64 %4686
  %4689 = load i32, ptr %4688, align 4, !tbaa !5
  %4690 = mul nsw i32 %4689, %4687
  %4691 = add nsw i64 %4686, -1
  %4692 = trunc i64 %4686 to i32
  %4693 = icmp sgt i32 %4692, 0
  br i1 %4693, label %4685, label %4694, !llvm.loop !735

4694:                                             ; preds = %4685, %4676
  %4695 = phi i32 [ %4680, %4676 ], [ %4690, %4685 ]
  %4696 = and i64 %4645, 4294967295
  %4697 = getelementptr inbounds i32, ptr %6, i64 %4696
  %4698 = load i32, ptr %4697, align 4, !tbaa !5
  %4699 = mul nsw i32 %4698, %4695
  %4700 = add nsw i32 %4699, %4639
  %4701 = icmp sgt i64 %4637, 2
  %4702 = add nsw i64 %4638, -1
  %4703 = add i32 %4636, 1
  br i1 %4701, label %4635, label %4704, !llvm.loop !736

4704:                                             ; preds = %4694, %4631
  %4705 = phi i32 [ %4634, %4631 ], [ %4700, %4694 ]
  %4706 = sext i32 %4705 to i64
  %4707 = getelementptr inbounds i32, ptr %4301, i64 %4706
  %4708 = load i32, ptr %4707, align 4, !tbaa !5
  %4709 = sitofp i32 %4708 to float
  %4710 = fcmp fast ogt float %4632, %4709
  br i1 %4710, label %4711, label %4712

4711:                                             ; preds = %4704
  store float %4709, ptr %4303, align 4, !tbaa !162
  br label %4712

4712:                                             ; preds = %4711, %4704
  %4713 = phi float [ %4709, %4711 ], [ %4632, %4704 ]
  %4714 = add nuw nsw i32 %4633, 1
  br i1 %4625, label %4715, label %4762

4715:                                             ; preds = %4712
  %4716 = load i32, ptr %4, align 4, !tbaa !5
  %4717 = load i32, ptr %12, align 4, !tbaa !5
  %4718 = add nsw i32 %4717, -1
  %4719 = icmp slt i32 %4716, %4718
  br i1 %4719, label %4739, label %4720

4720:                                             ; preds = %4715
  %4721 = icmp eq i32 %4716, %4718
  br i1 %4721, label %4722, label %4755

4722:                                             ; preds = %4720
  store i32 0, ptr %4, align 4, !tbaa !5
  %4723 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4723, ptr %6, align 4, !tbaa !5
  br i1 %4630, label %4762, label %4724

4724:                                             ; preds = %4722, %4749
  %4725 = phi i64 [ %4753, %4749 ], [ 1, %4722 ]
  %4726 = getelementptr inbounds i32, ptr %4, i64 %4725
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %12, i64 %4725
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = add nsw i32 %4729, -1
  %4731 = icmp slt i32 %4727, %4730
  br i1 %4731, label %4732, label %4747

4732:                                             ; preds = %4724
  br i1 %4719, label %4739, label %4733

4733:                                             ; preds = %4732
  %4734 = getelementptr inbounds i32, ptr %7, i64 %4725
  %4735 = load i32, ptr %4734, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %6, i64 %4725
  %4737 = load i32, ptr %4736, align 4, !tbaa !5
  %4738 = add nsw i32 %4737, %4735
  store i32 %4738, ptr %4736, align 4, !tbaa !5
  br label %4757

4739:                                             ; preds = %4715, %4732
  %4740 = phi i32 [ %4727, %4732 ], [ %4716, %4715 ]
  %4741 = phi ptr [ %4726, %4732 ], [ %4, %4715 ]
  %4742 = phi i64 [ %4725, %4732 ], [ 0, %4715 ]
  %4743 = add nsw i32 %4740, 1
  store i32 %4743, ptr %4741, align 4, !tbaa !5
  %4744 = getelementptr inbounds i32, ptr %7, i64 %4742
  %4745 = load i32, ptr %4744, align 4, !tbaa !5
  %4746 = getelementptr inbounds i32, ptr %6, i64 %4742
  br label %4757

4747:                                             ; preds = %4724
  %4748 = icmp eq i32 %4727, %4730
  br i1 %4748, label %4749, label %4755

4749:                                             ; preds = %4747
  store i32 0, ptr %4726, align 4, !tbaa !5
  %4750 = getelementptr inbounds i32, ptr %8, i64 %4725
  %4751 = load i32, ptr %4750, align 4, !tbaa !5
  %4752 = getelementptr inbounds i32, ptr %6, i64 %4725
  store i32 %4751, ptr %4752, align 4, !tbaa !5
  %4753 = add nuw nsw i64 %4725, 1
  %4754 = icmp eq i64 %4753, %4628
  br i1 %4754, label %4762, label %4724, !llvm.loop !737

4755:                                             ; preds = %4720, %4747
  %4756 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4757:                                             ; preds = %4733, %4739
  %4758 = phi ptr [ %4746, %4739 ], [ %4726, %4733 ]
  %4759 = phi i32 [ %4745, %4739 ], [ 1, %4733 ]
  %4760 = load i32, ptr %4758, align 4, !tbaa !5
  %4761 = add nsw i32 %4760, %4759
  store i32 %4761, ptr %4758, align 4, !tbaa !5
  br label %4762

4762:                                             ; preds = %4749, %4757, %4722, %4712
  %4763 = icmp eq i32 %4714, %5
  br i1 %4763, label %5513, label %4631, !llvm.loop !738

4764:                                             ; preds = %4614, %4902
  %4765 = phi float [ %4305, %4614 ], [ %4850, %4902 ]
  %4766 = phi i32 [ 0, %4614 ], [ %4851, %4902 ]
  %4767 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4615, label %4768, label %4837

4768:                                             ; preds = %4764, %4827
  %4769 = phi i32 [ %4836, %4827 ], [ 0, %4764 ]
  %4770 = phi i64 [ %4778, %4827 ], [ %4619, %4764 ]
  %4771 = phi i64 [ %4835, %4827 ], [ %4618, %4764 ]
  %4772 = phi i32 [ %4833, %4827 ], [ %4767, %4764 ]
  %4773 = sub i32 %4617, %4769
  %4774 = tail call i32 @llvm.smin.i32(i32 %4773, i32 0)
  %4775 = sub i32 %4773, %4774
  %4776 = zext i32 %4775 to i64
  %4777 = add nuw nsw i64 %4776, 1
  %4778 = add nsw i64 %4770, -1
  %4779 = icmp ult i32 %4775, 31
  br i1 %4779, label %4815, label %4780

4780:                                             ; preds = %4768
  %4781 = and i64 %4777, 8589934560
  %4782 = sub i64 %4771, %4781
  br label %4783

4783:                                             ; preds = %4783, %4780
  %4784 = phi i64 [ 0, %4780 ], [ %4807, %4783 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4803, %4783 ]
  %4786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4804, %4783 ]
  %4787 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4805, %4783 ]
  %4788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4780 ], [ %4806, %4783 ]
  %4789 = sub i64 %4771, %4784
  %4790 = getelementptr inbounds i32, ptr %11, i64 %4789
  %4791 = getelementptr inbounds i32, ptr %4790, i64 -7
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !5
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4790, i64 -15
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !5
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = getelementptr inbounds i32, ptr %4790, i64 -23
  %4798 = load <8 x i32>, ptr %4797, align 4, !tbaa !5
  %4799 = shufflevector <8 x i32> %4798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4800 = getelementptr inbounds i32, ptr %4790, i64 -31
  %4801 = load <8 x i32>, ptr %4800, align 4, !tbaa !5
  %4802 = shufflevector <8 x i32> %4801, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4803 = mul <8 x i32> %4793, %4785
  %4804 = mul <8 x i32> %4796, %4786
  %4805 = mul <8 x i32> %4799, %4787
  %4806 = mul <8 x i32> %4802, %4788
  %4807 = add nuw i64 %4784, 32
  %4808 = icmp eq i64 %4807, %4781
  br i1 %4808, label %4809, label %4783, !llvm.loop !739

4809:                                             ; preds = %4783
  %4810 = mul <8 x i32> %4804, %4803
  %4811 = mul <8 x i32> %4805, %4810
  %4812 = mul <8 x i32> %4806, %4811
  %4813 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4812)
  %4814 = icmp eq i64 %4777, %4781
  br i1 %4814, label %4827, label %4815

4815:                                             ; preds = %4768, %4809
  %4816 = phi i64 [ %4771, %4768 ], [ %4782, %4809 ]
  %4817 = phi i32 [ 1, %4768 ], [ %4813, %4809 ]
  br label %4818

4818:                                             ; preds = %4815, %4818
  %4819 = phi i64 [ %4824, %4818 ], [ %4816, %4815 ]
  %4820 = phi i32 [ %4823, %4818 ], [ %4817, %4815 ]
  %4821 = getelementptr inbounds i32, ptr %11, i64 %4819
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = mul nsw i32 %4822, %4820
  %4824 = add nsw i64 %4819, -1
  %4825 = trunc i64 %4819 to i32
  %4826 = icmp sgt i32 %4825, 0
  br i1 %4826, label %4818, label %4827, !llvm.loop !740

4827:                                             ; preds = %4818, %4809
  %4828 = phi i32 [ %4813, %4809 ], [ %4823, %4818 ]
  %4829 = and i64 %4778, 4294967295
  %4830 = getelementptr inbounds i32, ptr %6, i64 %4829
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = mul nsw i32 %4831, %4828
  %4833 = add nsw i32 %4832, %4772
  %4834 = icmp sgt i64 %4770, 2
  %4835 = add nsw i64 %4771, -1
  %4836 = add i32 %4769, 1
  br i1 %4834, label %4768, label %4837, !llvm.loop !741

4837:                                             ; preds = %4827, %4764
  %4838 = phi i32 [ %4767, %4764 ], [ %4833, %4827 ]
  %4839 = icmp slt i32 %4838, %5
  br i1 %4839, label %4842, label %4840

4840:                                             ; preds = %4837
  %4841 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

4842:                                             ; preds = %4837
  %4843 = sext i32 %4838 to i64
  %4844 = getelementptr inbounds i32, ptr %4301, i64 %4843
  %4845 = load i32, ptr %4844, align 4, !tbaa !5
  %4846 = sitofp i32 %4845 to float
  %4847 = fcmp fast ogt float %4765, %4846
  br i1 %4847, label %4848, label %4849

4848:                                             ; preds = %4842
  store float %4846, ptr %4303, align 4, !tbaa !162
  br label %4849

4849:                                             ; preds = %4848, %4842
  %4850 = phi float [ %4846, %4848 ], [ %4765, %4842 ]
  %4851 = add nuw nsw i32 %4766, 1
  br i1 %4616, label %4852, label %4902

4852:                                             ; preds = %4849
  %4853 = load i32, ptr %4, align 4, !tbaa !5
  %4854 = load i32, ptr %12, align 4, !tbaa !5
  %4855 = add nsw i32 %4854, -1
  %4856 = icmp slt i32 %4853, %4855
  br i1 %4856, label %4879, label %4857

4857:                                             ; preds = %4852
  %4858 = icmp eq i32 %4853, %4855
  br i1 %4858, label %4859, label %4895

4859:                                             ; preds = %4857
  store i32 0, ptr %4, align 4, !tbaa !5
  %4860 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4860, ptr %6, align 4, !tbaa !5
  br i1 %4621, label %4902, label %4861

4861:                                             ; preds = %4859, %4889
  %4862 = phi i64 [ %4893, %4889 ], [ 1, %4859 ]
  %4863 = getelementptr inbounds i32, ptr %4, i64 %4862
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = getelementptr inbounds i32, ptr %12, i64 %4862
  %4866 = load i32, ptr %4865, align 4, !tbaa !5
  %4867 = add nsw i32 %4866, -1
  %4868 = icmp slt i32 %4864, %4867
  br i1 %4868, label %4869, label %4887

4869:                                             ; preds = %4861
  br i1 %4856, label %4879, label %4870

4870:                                             ; preds = %4869
  %4871 = shl i64 %4862, 32
  %4872 = add i64 %4871, -4294967296
  %4873 = ashr exact i64 %4872, 32
  %4874 = getelementptr inbounds i32, ptr %7, i64 %4873
  %4875 = load i32, ptr %4874, align 4, !tbaa !5
  %4876 = getelementptr inbounds i32, ptr %6, i64 %4862
  %4877 = load i32, ptr %4876, align 4, !tbaa !5
  %4878 = add nsw i32 %4877, %4875
  store i32 %4878, ptr %4876, align 4, !tbaa !5
  br label %4897

4879:                                             ; preds = %4852, %4869
  %4880 = phi i32 [ %4864, %4869 ], [ %4853, %4852 ]
  %4881 = phi ptr [ %4863, %4869 ], [ %4, %4852 ]
  %4882 = phi i64 [ %4862, %4869 ], [ 0, %4852 ]
  %4883 = add nsw i32 %4880, 1
  store i32 %4883, ptr %4881, align 4, !tbaa !5
  %4884 = getelementptr inbounds i32, ptr %7, i64 %4882
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = getelementptr inbounds i32, ptr %6, i64 %4882
  br label %4897

4887:                                             ; preds = %4861
  %4888 = icmp eq i32 %4864, %4867
  br i1 %4888, label %4889, label %4895

4889:                                             ; preds = %4887
  store i32 0, ptr %4863, align 4, !tbaa !5
  %4890 = getelementptr inbounds i32, ptr %8, i64 %4862
  %4891 = load i32, ptr %4890, align 4, !tbaa !5
  %4892 = getelementptr inbounds i32, ptr %6, i64 %4862
  store i32 %4891, ptr %4892, align 4, !tbaa !5
  %4893 = add nuw nsw i64 %4862, 1
  %4894 = icmp eq i64 %4893, %4619
  br i1 %4894, label %4902, label %4861, !llvm.loop !742

4895:                                             ; preds = %4857, %4887
  %4896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

4897:                                             ; preds = %4870, %4879
  %4898 = phi ptr [ %4886, %4879 ], [ %4863, %4870 ]
  %4899 = phi i32 [ %4885, %4879 ], [ 1, %4870 ]
  %4900 = load i32, ptr %4898, align 4, !tbaa !5
  %4901 = add nsw i32 %4900, %4899
  store i32 %4901, ptr %4898, align 4, !tbaa !5
  br label %4902

4902:                                             ; preds = %4889, %4897, %4859, %4849
  %4903 = icmp eq i32 %4851, %5
  br i1 %4903, label %5513, label %4764, !llvm.loop !743

4904:                                             ; preds = %4307
  %4905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1036, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4906:                                             ; preds = %18
  %4907 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4908 = load ptr, ptr %4907, align 8, !tbaa !9
  %4909 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4910 = load ptr, ptr %4909, align 8, !tbaa !9
  %4911 = load i32, ptr %4908, align 4, !tbaa !5
  %4912 = sitofp i32 %4911 to double
  store double %4912, ptr %4910, align 8, !tbaa !18
  %4913 = icmp eq i32 %13, 0
  br i1 %4913, label %5513, label %4914

4914:                                             ; preds = %4906
  switch i32 %1, label %5511 [
    i32 1, label %4915
    i32 0, label %5215
  ]

4915:                                             ; preds = %4914
  %4916 = getelementptr inbounds i32, ptr %3, i64 %19
  %4917 = load i32, ptr %4916, align 4, !tbaa !5
  %4918 = icmp eq i32 %4917, 0
  %4919 = icmp sgt i32 %5, 0
  br i1 %4918, label %4929, label %4920

4920:                                             ; preds = %4915
  br i1 %4919, label %4921, label %5513

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %5075

4929:                                             ; preds = %4915
  br i1 %4919, label %4930, label %5513

4930:                                             ; preds = %4929
  %4931 = icmp sgt i32 %13, 1
  %4932 = icmp sgt i32 %13, 0
  %4933 = add i32 %13, -2
  %4934 = zext i32 %4933 to i64
  %4935 = zext i32 %13 to i64
  %4936 = add nuw i32 %5, 1
  %4937 = icmp eq i32 %13, 1
  br label %4938

4938:                                             ; preds = %4930, %5073
  %4939 = phi double [ %4912, %4930 ], [ %5024, %5073 ]
  %4940 = phi i32 [ 0, %4930 ], [ %5025, %5073 ]
  %4941 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4931, label %4942, label %5011

4942:                                             ; preds = %4938, %5001
  %4943 = phi i32 [ %5010, %5001 ], [ 0, %4938 ]
  %4944 = phi i64 [ %4952, %5001 ], [ %4935, %4938 ]
  %4945 = phi i64 [ %5009, %5001 ], [ %4934, %4938 ]
  %4946 = phi i32 [ %5007, %5001 ], [ %4941, %4938 ]
  %4947 = sub i32 %4933, %4943
  %4948 = tail call i32 @llvm.smin.i32(i32 %4947, i32 0)
  %4949 = sub i32 %4947, %4948
  %4950 = zext i32 %4949 to i64
  %4951 = add nuw nsw i64 %4950, 1
  %4952 = add nsw i64 %4944, -1
  %4953 = icmp ult i32 %4949, 31
  br i1 %4953, label %4989, label %4954

4954:                                             ; preds = %4942
  %4955 = and i64 %4951, 8589934560
  %4956 = sub i64 %4945, %4955
  br label %4957

4957:                                             ; preds = %4957, %4954
  %4958 = phi i64 [ 0, %4954 ], [ %4981, %4957 ]
  %4959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4977, %4957 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4978, %4957 ]
  %4961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4979, %4957 ]
  %4962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4954 ], [ %4980, %4957 ]
  %4963 = sub i64 %4945, %4958
  %4964 = getelementptr inbounds i32, ptr %9, i64 %4963
  %4965 = getelementptr inbounds i32, ptr %4964, i64 -7
  %4966 = load <8 x i32>, ptr %4965, align 4, !tbaa !5
  %4967 = shufflevector <8 x i32> %4966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4968 = getelementptr inbounds i32, ptr %4964, i64 -15
  %4969 = load <8 x i32>, ptr %4968, align 4, !tbaa !5
  %4970 = shufflevector <8 x i32> %4969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4971 = getelementptr inbounds i32, ptr %4964, i64 -23
  %4972 = load <8 x i32>, ptr %4971, align 4, !tbaa !5
  %4973 = shufflevector <8 x i32> %4972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4974 = getelementptr inbounds i32, ptr %4964, i64 -31
  %4975 = load <8 x i32>, ptr %4974, align 4, !tbaa !5
  %4976 = shufflevector <8 x i32> %4975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4977 = mul <8 x i32> %4967, %4959
  %4978 = mul <8 x i32> %4970, %4960
  %4979 = mul <8 x i32> %4973, %4961
  %4980 = mul <8 x i32> %4976, %4962
  %4981 = add nuw i64 %4958, 32
  %4982 = icmp eq i64 %4981, %4955
  br i1 %4982, label %4983, label %4957, !llvm.loop !744

4983:                                             ; preds = %4957
  %4984 = mul <8 x i32> %4978, %4977
  %4985 = mul <8 x i32> %4979, %4984
  %4986 = mul <8 x i32> %4980, %4985
  %4987 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4986)
  %4988 = icmp eq i64 %4951, %4955
  br i1 %4988, label %5001, label %4989

4989:                                             ; preds = %4942, %4983
  %4990 = phi i64 [ %4945, %4942 ], [ %4956, %4983 ]
  %4991 = phi i32 [ 1, %4942 ], [ %4987, %4983 ]
  br label %4992

4992:                                             ; preds = %4989, %4992
  %4993 = phi i64 [ %4998, %4992 ], [ %4990, %4989 ]
  %4994 = phi i32 [ %4997, %4992 ], [ %4991, %4989 ]
  %4995 = getelementptr inbounds i32, ptr %9, i64 %4993
  %4996 = load i32, ptr %4995, align 4, !tbaa !5
  %4997 = mul nsw i32 %4996, %4994
  %4998 = add nsw i64 %4993, -1
  %4999 = trunc i64 %4993 to i32
  %5000 = icmp sgt i32 %4999, 0
  br i1 %5000, label %4992, label %5001, !llvm.loop !745

5001:                                             ; preds = %4992, %4983
  %5002 = phi i32 [ %4987, %4983 ], [ %4997, %4992 ]
  %5003 = and i64 %4952, 4294967295
  %5004 = getelementptr inbounds i32, ptr %6, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !5
  %5006 = mul nsw i32 %5005, %5002
  %5007 = add nsw i32 %5006, %4946
  %5008 = icmp sgt i64 %4944, 2
  %5009 = add nsw i64 %4945, -1
  %5010 = add i32 %4943, 1
  br i1 %5008, label %4942, label %5011, !llvm.loop !746

5011:                                             ; preds = %5001, %4938
  %5012 = phi i32 [ %4941, %4938 ], [ %5007, %5001 ]
  %5013 = sext i32 %5012 to i64
  %5014 = getelementptr inbounds double, ptr %2, i64 %5013
  %5015 = load double, ptr %5014, align 8, !tbaa !18
  %5016 = getelementptr inbounds i32, ptr %4908, i64 %5013
  %5017 = load i32, ptr %5016, align 4, !tbaa !5
  %5018 = sitofp i32 %5017 to double
  %5019 = fcmp fast one double %5015, 0.000000e+00
  %5020 = fcmp fast ogt double %4939, %5018
  %5021 = select i1 %5019, i1 %5020, i1 false
  br i1 %5021, label %5022, label %5023

5022:                                             ; preds = %5011
  store double %5018, ptr %4910, align 8, !tbaa !18
  br label %5023

5023:                                             ; preds = %5022, %5011
  %5024 = phi double [ %5018, %5022 ], [ %4939, %5011 ]
  %5025 = add nuw nsw i32 %4940, 1
  br i1 %4932, label %5026, label %5073

5026:                                             ; preds = %5023
  %5027 = load i32, ptr %4, align 4, !tbaa !5
  %5028 = load i32, ptr %12, align 4, !tbaa !5
  %5029 = add nsw i32 %5028, -1
  %5030 = icmp slt i32 %5027, %5029
  br i1 %5030, label %5050, label %5031

5031:                                             ; preds = %5026
  %5032 = icmp eq i32 %5027, %5029
  br i1 %5032, label %5033, label %5066

5033:                                             ; preds = %5031
  store i32 0, ptr %4, align 4, !tbaa !5
  %5034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5034, ptr %6, align 4, !tbaa !5
  br i1 %4937, label %5073, label %5035

5035:                                             ; preds = %5033, %5060
  %5036 = phi i64 [ %5064, %5060 ], [ 1, %5033 ]
  %5037 = getelementptr inbounds i32, ptr %4, i64 %5036
  %5038 = load i32, ptr %5037, align 4, !tbaa !5
  %5039 = getelementptr inbounds i32, ptr %12, i64 %5036
  %5040 = load i32, ptr %5039, align 4, !tbaa !5
  %5041 = add nsw i32 %5040, -1
  %5042 = icmp slt i32 %5038, %5041
  br i1 %5042, label %5043, label %5058

5043:                                             ; preds = %5035
  br i1 %5030, label %5050, label %5044

5044:                                             ; preds = %5043
  %5045 = getelementptr inbounds i32, ptr %7, i64 %5036
  %5046 = load i32, ptr %5045, align 4, !tbaa !5
  %5047 = getelementptr inbounds i32, ptr %6, i64 %5036
  %5048 = load i32, ptr %5047, align 4, !tbaa !5
  %5049 = add nsw i32 %5048, %5046
  store i32 %5049, ptr %5047, align 4, !tbaa !5
  br label %5068

5050:                                             ; preds = %5026, %5043
  %5051 = phi i32 [ %5038, %5043 ], [ %5027, %5026 ]
  %5052 = phi ptr [ %5037, %5043 ], [ %4, %5026 ]
  %5053 = phi i64 [ %5036, %5043 ], [ 0, %5026 ]
  %5054 = add nsw i32 %5051, 1
  store i32 %5054, ptr %5052, align 4, !tbaa !5
  %5055 = getelementptr inbounds i32, ptr %7, i64 %5053
  %5056 = load i32, ptr %5055, align 4, !tbaa !5
  %5057 = getelementptr inbounds i32, ptr %6, i64 %5053
  br label %5068

5058:                                             ; preds = %5035
  %5059 = icmp eq i32 %5038, %5041
  br i1 %5059, label %5060, label %5066

5060:                                             ; preds = %5058
  store i32 0, ptr %5037, align 4, !tbaa !5
  %5061 = getelementptr inbounds i32, ptr %8, i64 %5036
  %5062 = load i32, ptr %5061, align 4, !tbaa !5
  %5063 = getelementptr inbounds i32, ptr %6, i64 %5036
  store i32 %5062, ptr %5063, align 4, !tbaa !5
  %5064 = add nuw nsw i64 %5036, 1
  %5065 = icmp eq i64 %5064, %4935
  br i1 %5065, label %5073, label %5035, !llvm.loop !747

5066:                                             ; preds = %5031, %5058
  %5067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5068:                                             ; preds = %5044, %5050
  %5069 = phi ptr [ %5057, %5050 ], [ %5037, %5044 ]
  %5070 = phi i32 [ %5056, %5050 ], [ 1, %5044 ]
  %5071 = load i32, ptr %5069, align 4, !tbaa !5
  %5072 = add nsw i32 %5071, %5070
  store i32 %5072, ptr %5069, align 4, !tbaa !5
  br label %5073

5073:                                             ; preds = %5060, %5068, %5033, %5023
  %5074 = icmp eq i32 %5025, %5
  br i1 %5074, label %5513, label %4938, !llvm.loop !748

5075:                                             ; preds = %4921, %5213
  %5076 = phi double [ %4912, %4921 ], [ %5161, %5213 ]
  %5077 = phi i32 [ 0, %4921 ], [ %5162, %5213 ]
  %5078 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4922, label %5079, label %5148

5079:                                             ; preds = %5075, %5138
  %5080 = phi i32 [ %5147, %5138 ], [ 0, %5075 ]
  %5081 = phi i64 [ %5089, %5138 ], [ %4926, %5075 ]
  %5082 = phi i64 [ %5146, %5138 ], [ %4925, %5075 ]
  %5083 = phi i32 [ %5144, %5138 ], [ %5078, %5075 ]
  %5084 = sub i32 %4924, %5080
  %5085 = tail call i32 @llvm.smin.i32(i32 %5084, i32 0)
  %5086 = sub i32 %5084, %5085
  %5087 = zext i32 %5086 to i64
  %5088 = add nuw nsw i64 %5087, 1
  %5089 = add nsw i64 %5081, -1
  %5090 = icmp ult i32 %5086, 31
  br i1 %5090, label %5126, label %5091

5091:                                             ; preds = %5079
  %5092 = and i64 %5088, 8589934560
  %5093 = sub i64 %5082, %5092
  br label %5094

5094:                                             ; preds = %5094, %5091
  %5095 = phi i64 [ 0, %5091 ], [ %5118, %5094 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5114, %5094 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5115, %5094 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5116, %5094 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5091 ], [ %5117, %5094 ]
  %5100 = sub i64 %5082, %5095
  %5101 = getelementptr inbounds i32, ptr %11, i64 %5100
  %5102 = getelementptr inbounds i32, ptr %5101, i64 -7
  %5103 = load <8 x i32>, ptr %5102, align 4, !tbaa !5
  %5104 = shufflevector <8 x i32> %5103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5105 = getelementptr inbounds i32, ptr %5101, i64 -15
  %5106 = load <8 x i32>, ptr %5105, align 4, !tbaa !5
  %5107 = shufflevector <8 x i32> %5106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5108 = getelementptr inbounds i32, ptr %5101, i64 -23
  %5109 = load <8 x i32>, ptr %5108, align 4, !tbaa !5
  %5110 = shufflevector <8 x i32> %5109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5111 = getelementptr inbounds i32, ptr %5101, i64 -31
  %5112 = load <8 x i32>, ptr %5111, align 4, !tbaa !5
  %5113 = shufflevector <8 x i32> %5112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5114 = mul <8 x i32> %5104, %5096
  %5115 = mul <8 x i32> %5107, %5097
  %5116 = mul <8 x i32> %5110, %5098
  %5117 = mul <8 x i32> %5113, %5099
  %5118 = add nuw i64 %5095, 32
  %5119 = icmp eq i64 %5118, %5092
  br i1 %5119, label %5120, label %5094, !llvm.loop !749

5120:                                             ; preds = %5094
  %5121 = mul <8 x i32> %5115, %5114
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5123)
  %5125 = icmp eq i64 %5088, %5092
  br i1 %5125, label %5138, label %5126

5126:                                             ; preds = %5079, %5120
  %5127 = phi i64 [ %5082, %5079 ], [ %5093, %5120 ]
  %5128 = phi i32 [ 1, %5079 ], [ %5124, %5120 ]
  br label %5129

5129:                                             ; preds = %5126, %5129
  %5130 = phi i64 [ %5135, %5129 ], [ %5127, %5126 ]
  %5131 = phi i32 [ %5134, %5129 ], [ %5128, %5126 ]
  %5132 = getelementptr inbounds i32, ptr %11, i64 %5130
  %5133 = load i32, ptr %5132, align 4, !tbaa !5
  %5134 = mul nsw i32 %5133, %5131
  %5135 = add nsw i64 %5130, -1
  %5136 = trunc i64 %5130 to i32
  %5137 = icmp sgt i32 %5136, 0
  br i1 %5137, label %5129, label %5138, !llvm.loop !750

5138:                                             ; preds = %5129, %5120
  %5139 = phi i32 [ %5124, %5120 ], [ %5134, %5129 ]
  %5140 = and i64 %5089, 4294967295
  %5141 = getelementptr inbounds i32, ptr %6, i64 %5140
  %5142 = load i32, ptr %5141, align 4, !tbaa !5
  %5143 = mul nsw i32 %5142, %5139
  %5144 = add nsw i32 %5143, %5083
  %5145 = icmp sgt i64 %5081, 2
  %5146 = add nsw i64 %5082, -1
  %5147 = add i32 %5080, 1
  br i1 %5145, label %5079, label %5148, !llvm.loop !751

5148:                                             ; preds = %5138, %5075
  %5149 = phi i32 [ %5078, %5075 ], [ %5144, %5138 ]
  %5150 = icmp slt i32 %5149, %5
  br i1 %5150, label %5153, label %5151

5151:                                             ; preds = %5148
  %5152 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

5153:                                             ; preds = %5148
  %5154 = sext i32 %5149 to i64
  %5155 = getelementptr inbounds i32, ptr %4908, i64 %5154
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = sitofp i32 %5156 to double
  %5158 = fcmp fast ogt double %5076, %5157
  br i1 %5158, label %5159, label %5160

5159:                                             ; preds = %5153
  store double %5157, ptr %4910, align 8, !tbaa !18
  br label %5160

5160:                                             ; preds = %5153, %5159
  %5161 = phi double [ %5076, %5153 ], [ %5157, %5159 ]
  %5162 = add nuw nsw i32 %5077, 1
  br i1 %4923, label %5163, label %5213

5163:                                             ; preds = %5160
  %5164 = load i32, ptr %4, align 4, !tbaa !5
  %5165 = load i32, ptr %12, align 4, !tbaa !5
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5190, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5206

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !5
  %5171 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5171, ptr %6, align 4, !tbaa !5
  br i1 %4928, label %5213, label %5172

5172:                                             ; preds = %5170, %5200
  %5173 = phi i64 [ %5204, %5200 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5198

5180:                                             ; preds = %5172
  br i1 %5167, label %5190, label %5181

5181:                                             ; preds = %5180
  %5182 = shl i64 %5173, 32
  %5183 = add i64 %5182, -4294967296
  %5184 = ashr exact i64 %5183, 32
  %5185 = getelementptr inbounds i32, ptr %7, i64 %5184
  %5186 = load i32, ptr %5185, align 4, !tbaa !5
  %5187 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5188 = load i32, ptr %5187, align 4, !tbaa !5
  %5189 = add nsw i32 %5188, %5186
  store i32 %5189, ptr %5187, align 4, !tbaa !5
  br label %5208

5190:                                             ; preds = %5163, %5180
  %5191 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5192 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5193 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5194 = add nsw i32 %5191, 1
  store i32 %5194, ptr %5192, align 4, !tbaa !5
  %5195 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5193
  br label %5208

5198:                                             ; preds = %5172
  %5199 = icmp eq i32 %5175, %5178
  br i1 %5199, label %5200, label %5206

5200:                                             ; preds = %5198
  store i32 0, ptr %5174, align 4, !tbaa !5
  %5201 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5202 = load i32, ptr %5201, align 4, !tbaa !5
  %5203 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5202, ptr %5203, align 4, !tbaa !5
  %5204 = add nuw nsw i64 %5173, 1
  %5205 = icmp eq i64 %5204, %4926
  br i1 %5205, label %5213, label %5172, !llvm.loop !752

5206:                                             ; preds = %5168, %5198
  %5207 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5208:                                             ; preds = %5181, %5190
  %5209 = phi ptr [ %5197, %5190 ], [ %5174, %5181 ]
  %5210 = phi i32 [ %5196, %5190 ], [ 1, %5181 ]
  %5211 = load i32, ptr %5209, align 4, !tbaa !5
  %5212 = add nsw i32 %5211, %5210
  store i32 %5212, ptr %5209, align 4, !tbaa !5
  br label %5213

5213:                                             ; preds = %5200, %5208, %5170, %5160
  %5214 = icmp eq i32 %5162, %5
  br i1 %5214, label %5513, label %5075, !llvm.loop !753

5215:                                             ; preds = %4914
  %5216 = getelementptr inbounds i32, ptr %3, i64 %19
  %5217 = load i32, ptr %5216, align 4, !tbaa !5
  %5218 = icmp eq i32 %5217, 0
  %5219 = icmp sgt i32 %5, 0
  br i1 %5218, label %5229, label %5220

5220:                                             ; preds = %5215
  br i1 %5219, label %5221, label %5513

5221:                                             ; preds = %5220
  %5222 = icmp sgt i32 %13, 1
  %5223 = icmp sgt i32 %13, 0
  %5224 = add i32 %13, -2
  %5225 = zext i32 %5224 to i64
  %5226 = zext i32 %13 to i64
  %5227 = add nuw i32 %5, 1
  %5228 = icmp eq i32 %13, 1
  br label %5371

5229:                                             ; preds = %5215
  br i1 %5219, label %5230, label %5513

5230:                                             ; preds = %5229
  %5231 = icmp sgt i32 %13, 1
  %5232 = icmp sgt i32 %13, 0
  %5233 = add i32 %13, -2
  %5234 = zext i32 %5233 to i64
  %5235 = zext i32 %13 to i64
  %5236 = add nuw i32 %5, 1
  %5237 = icmp eq i32 %13, 1
  br label %5238

5238:                                             ; preds = %5230, %5369
  %5239 = phi double [ %4912, %5230 ], [ %5320, %5369 ]
  %5240 = phi i32 [ 0, %5230 ], [ %5321, %5369 ]
  %5241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5231, label %5242, label %5311

5242:                                             ; preds = %5238, %5301
  %5243 = phi i32 [ %5310, %5301 ], [ 0, %5238 ]
  %5244 = phi i64 [ %5252, %5301 ], [ %5235, %5238 ]
  %5245 = phi i64 [ %5309, %5301 ], [ %5234, %5238 ]
  %5246 = phi i32 [ %5307, %5301 ], [ %5241, %5238 ]
  %5247 = sub i32 %5233, %5243
  %5248 = tail call i32 @llvm.smin.i32(i32 %5247, i32 0)
  %5249 = sub i32 %5247, %5248
  %5250 = zext i32 %5249 to i64
  %5251 = add nuw nsw i64 %5250, 1
  %5252 = add nsw i64 %5244, -1
  %5253 = icmp ult i32 %5249, 31
  br i1 %5253, label %5289, label %5254

5254:                                             ; preds = %5242
  %5255 = and i64 %5251, 8589934560
  %5256 = sub i64 %5245, %5255
  br label %5257

5257:                                             ; preds = %5257, %5254
  %5258 = phi i64 [ 0, %5254 ], [ %5281, %5257 ]
  %5259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5277, %5257 ]
  %5260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5278, %5257 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5279, %5257 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5280, %5257 ]
  %5263 = sub i64 %5245, %5258
  %5264 = getelementptr inbounds i32, ptr %9, i64 %5263
  %5265 = getelementptr inbounds i32, ptr %5264, i64 -7
  %5266 = load <8 x i32>, ptr %5265, align 4, !tbaa !5
  %5267 = shufflevector <8 x i32> %5266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5268 = getelementptr inbounds i32, ptr %5264, i64 -15
  %5269 = load <8 x i32>, ptr %5268, align 4, !tbaa !5
  %5270 = shufflevector <8 x i32> %5269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5271 = getelementptr inbounds i32, ptr %5264, i64 -23
  %5272 = load <8 x i32>, ptr %5271, align 4, !tbaa !5
  %5273 = shufflevector <8 x i32> %5272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5274 = getelementptr inbounds i32, ptr %5264, i64 -31
  %5275 = load <8 x i32>, ptr %5274, align 4, !tbaa !5
  %5276 = shufflevector <8 x i32> %5275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5277 = mul <8 x i32> %5267, %5259
  %5278 = mul <8 x i32> %5270, %5260
  %5279 = mul <8 x i32> %5273, %5261
  %5280 = mul <8 x i32> %5276, %5262
  %5281 = add nuw i64 %5258, 32
  %5282 = icmp eq i64 %5281, %5255
  br i1 %5282, label %5283, label %5257, !llvm.loop !754

5283:                                             ; preds = %5257
  %5284 = mul <8 x i32> %5278, %5277
  %5285 = mul <8 x i32> %5279, %5284
  %5286 = mul <8 x i32> %5280, %5285
  %5287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5286)
  %5288 = icmp eq i64 %5251, %5255
  br i1 %5288, label %5301, label %5289

5289:                                             ; preds = %5242, %5283
  %5290 = phi i64 [ %5245, %5242 ], [ %5256, %5283 ]
  %5291 = phi i32 [ 1, %5242 ], [ %5287, %5283 ]
  br label %5292

5292:                                             ; preds = %5289, %5292
  %5293 = phi i64 [ %5298, %5292 ], [ %5290, %5289 ]
  %5294 = phi i32 [ %5297, %5292 ], [ %5291, %5289 ]
  %5295 = getelementptr inbounds i32, ptr %9, i64 %5293
  %5296 = load i32, ptr %5295, align 4, !tbaa !5
  %5297 = mul nsw i32 %5296, %5294
  %5298 = add nsw i64 %5293, -1
  %5299 = trunc i64 %5293 to i32
  %5300 = icmp sgt i32 %5299, 0
  br i1 %5300, label %5292, label %5301, !llvm.loop !755

5301:                                             ; preds = %5292, %5283
  %5302 = phi i32 [ %5287, %5283 ], [ %5297, %5292 ]
  %5303 = and i64 %5252, 4294967295
  %5304 = getelementptr inbounds i32, ptr %6, i64 %5303
  %5305 = load i32, ptr %5304, align 4, !tbaa !5
  %5306 = mul nsw i32 %5305, %5302
  %5307 = add nsw i32 %5306, %5246
  %5308 = icmp sgt i64 %5244, 2
  %5309 = add nsw i64 %5245, -1
  %5310 = add i32 %5243, 1
  br i1 %5308, label %5242, label %5311, !llvm.loop !756

5311:                                             ; preds = %5301, %5238
  %5312 = phi i32 [ %5241, %5238 ], [ %5307, %5301 ]
  %5313 = sext i32 %5312 to i64
  %5314 = getelementptr inbounds i32, ptr %4908, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = sitofp i32 %5315 to double
  %5317 = fcmp fast ogt double %5239, %5316
  br i1 %5317, label %5318, label %5319

5318:                                             ; preds = %5311
  store double %5316, ptr %4910, align 8, !tbaa !18
  br label %5319

5319:                                             ; preds = %5318, %5311
  %5320 = phi double [ %5316, %5318 ], [ %5239, %5311 ]
  %5321 = add nuw nsw i32 %5240, 1
  br i1 %5232, label %5322, label %5369

5322:                                             ; preds = %5319
  %5323 = load i32, ptr %4, align 4, !tbaa !5
  %5324 = load i32, ptr %12, align 4, !tbaa !5
  %5325 = add nsw i32 %5324, -1
  %5326 = icmp slt i32 %5323, %5325
  br i1 %5326, label %5346, label %5327

5327:                                             ; preds = %5322
  %5328 = icmp eq i32 %5323, %5325
  br i1 %5328, label %5329, label %5362

5329:                                             ; preds = %5327
  store i32 0, ptr %4, align 4, !tbaa !5
  %5330 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5330, ptr %6, align 4, !tbaa !5
  br i1 %5237, label %5369, label %5331

5331:                                             ; preds = %5329, %5356
  %5332 = phi i64 [ %5360, %5356 ], [ 1, %5329 ]
  %5333 = getelementptr inbounds i32, ptr %4, i64 %5332
  %5334 = load i32, ptr %5333, align 4, !tbaa !5
  %5335 = getelementptr inbounds i32, ptr %12, i64 %5332
  %5336 = load i32, ptr %5335, align 4, !tbaa !5
  %5337 = add nsw i32 %5336, -1
  %5338 = icmp slt i32 %5334, %5337
  br i1 %5338, label %5339, label %5354

5339:                                             ; preds = %5331
  br i1 %5326, label %5346, label %5340

5340:                                             ; preds = %5339
  %5341 = getelementptr inbounds i32, ptr %7, i64 %5332
  %5342 = load i32, ptr %5341, align 4, !tbaa !5
  %5343 = getelementptr inbounds i32, ptr %6, i64 %5332
  %5344 = load i32, ptr %5343, align 4, !tbaa !5
  %5345 = add nsw i32 %5344, %5342
  store i32 %5345, ptr %5343, align 4, !tbaa !5
  br label %5364

5346:                                             ; preds = %5322, %5339
  %5347 = phi i32 [ %5334, %5339 ], [ %5323, %5322 ]
  %5348 = phi ptr [ %5333, %5339 ], [ %4, %5322 ]
  %5349 = phi i64 [ %5332, %5339 ], [ 0, %5322 ]
  %5350 = add nsw i32 %5347, 1
  store i32 %5350, ptr %5348, align 4, !tbaa !5
  %5351 = getelementptr inbounds i32, ptr %7, i64 %5349
  %5352 = load i32, ptr %5351, align 4, !tbaa !5
  %5353 = getelementptr inbounds i32, ptr %6, i64 %5349
  br label %5364

5354:                                             ; preds = %5331
  %5355 = icmp eq i32 %5334, %5337
  br i1 %5355, label %5356, label %5362

5356:                                             ; preds = %5354
  store i32 0, ptr %5333, align 4, !tbaa !5
  %5357 = getelementptr inbounds i32, ptr %8, i64 %5332
  %5358 = load i32, ptr %5357, align 4, !tbaa !5
  %5359 = getelementptr inbounds i32, ptr %6, i64 %5332
  store i32 %5358, ptr %5359, align 4, !tbaa !5
  %5360 = add nuw nsw i64 %5332, 1
  %5361 = icmp eq i64 %5360, %5235
  br i1 %5361, label %5369, label %5331, !llvm.loop !757

5362:                                             ; preds = %5327, %5354
  %5363 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5364:                                             ; preds = %5340, %5346
  %5365 = phi ptr [ %5353, %5346 ], [ %5333, %5340 ]
  %5366 = phi i32 [ %5352, %5346 ], [ 1, %5340 ]
  %5367 = load i32, ptr %5365, align 4, !tbaa !5
  %5368 = add nsw i32 %5367, %5366
  store i32 %5368, ptr %5365, align 4, !tbaa !5
  br label %5369

5369:                                             ; preds = %5356, %5364, %5329, %5319
  %5370 = icmp eq i32 %5321, %5
  br i1 %5370, label %5513, label %5238, !llvm.loop !758

5371:                                             ; preds = %5221, %5509
  %5372 = phi double [ %4912, %5221 ], [ %5457, %5509 ]
  %5373 = phi i32 [ 0, %5221 ], [ %5458, %5509 ]
  %5374 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5222, label %5375, label %5444

5375:                                             ; preds = %5371, %5434
  %5376 = phi i32 [ %5443, %5434 ], [ 0, %5371 ]
  %5377 = phi i64 [ %5385, %5434 ], [ %5226, %5371 ]
  %5378 = phi i64 [ %5442, %5434 ], [ %5225, %5371 ]
  %5379 = phi i32 [ %5440, %5434 ], [ %5374, %5371 ]
  %5380 = sub i32 %5224, %5376
  %5381 = tail call i32 @llvm.smin.i32(i32 %5380, i32 0)
  %5382 = sub i32 %5380, %5381
  %5383 = zext i32 %5382 to i64
  %5384 = add nuw nsw i64 %5383, 1
  %5385 = add nsw i64 %5377, -1
  %5386 = icmp ult i32 %5382, 31
  br i1 %5386, label %5422, label %5387

5387:                                             ; preds = %5375
  %5388 = and i64 %5384, 8589934560
  %5389 = sub i64 %5378, %5388
  br label %5390

5390:                                             ; preds = %5390, %5387
  %5391 = phi i64 [ 0, %5387 ], [ %5414, %5390 ]
  %5392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5410, %5390 ]
  %5393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5411, %5390 ]
  %5394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5412, %5390 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5387 ], [ %5413, %5390 ]
  %5396 = sub i64 %5378, %5391
  %5397 = getelementptr inbounds i32, ptr %11, i64 %5396
  %5398 = getelementptr inbounds i32, ptr %5397, i64 -7
  %5399 = load <8 x i32>, ptr %5398, align 4, !tbaa !5
  %5400 = shufflevector <8 x i32> %5399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5401 = getelementptr inbounds i32, ptr %5397, i64 -15
  %5402 = load <8 x i32>, ptr %5401, align 4, !tbaa !5
  %5403 = shufflevector <8 x i32> %5402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5404 = getelementptr inbounds i32, ptr %5397, i64 -23
  %5405 = load <8 x i32>, ptr %5404, align 4, !tbaa !5
  %5406 = shufflevector <8 x i32> %5405, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5407 = getelementptr inbounds i32, ptr %5397, i64 -31
  %5408 = load <8 x i32>, ptr %5407, align 4, !tbaa !5
  %5409 = shufflevector <8 x i32> %5408, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5410 = mul <8 x i32> %5400, %5392
  %5411 = mul <8 x i32> %5403, %5393
  %5412 = mul <8 x i32> %5406, %5394
  %5413 = mul <8 x i32> %5409, %5395
  %5414 = add nuw i64 %5391, 32
  %5415 = icmp eq i64 %5414, %5388
  br i1 %5415, label %5416, label %5390, !llvm.loop !759

5416:                                             ; preds = %5390
  %5417 = mul <8 x i32> %5411, %5410
  %5418 = mul <8 x i32> %5412, %5417
  %5419 = mul <8 x i32> %5413, %5418
  %5420 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5419)
  %5421 = icmp eq i64 %5384, %5388
  br i1 %5421, label %5434, label %5422

5422:                                             ; preds = %5375, %5416
  %5423 = phi i64 [ %5378, %5375 ], [ %5389, %5416 ]
  %5424 = phi i32 [ 1, %5375 ], [ %5420, %5416 ]
  br label %5425

5425:                                             ; preds = %5422, %5425
  %5426 = phi i64 [ %5431, %5425 ], [ %5423, %5422 ]
  %5427 = phi i32 [ %5430, %5425 ], [ %5424, %5422 ]
  %5428 = getelementptr inbounds i32, ptr %11, i64 %5426
  %5429 = load i32, ptr %5428, align 4, !tbaa !5
  %5430 = mul nsw i32 %5429, %5427
  %5431 = add nsw i64 %5426, -1
  %5432 = trunc i64 %5426 to i32
  %5433 = icmp sgt i32 %5432, 0
  br i1 %5433, label %5425, label %5434, !llvm.loop !760

5434:                                             ; preds = %5425, %5416
  %5435 = phi i32 [ %5420, %5416 ], [ %5430, %5425 ]
  %5436 = and i64 %5385, 4294967295
  %5437 = getelementptr inbounds i32, ptr %6, i64 %5436
  %5438 = load i32, ptr %5437, align 4, !tbaa !5
  %5439 = mul nsw i32 %5438, %5435
  %5440 = add nsw i32 %5439, %5379
  %5441 = icmp sgt i64 %5377, 2
  %5442 = add nsw i64 %5378, -1
  %5443 = add i32 %5376, 1
  br i1 %5441, label %5375, label %5444, !llvm.loop !761

5444:                                             ; preds = %5434, %5371
  %5445 = phi i32 [ %5374, %5371 ], [ %5440, %5434 ]
  %5446 = icmp slt i32 %5445, %5
  br i1 %5446, label %5449, label %5447

5447:                                             ; preds = %5444
  %5448 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5513

5449:                                             ; preds = %5444
  %5450 = sext i32 %5445 to i64
  %5451 = getelementptr inbounds i32, ptr %4908, i64 %5450
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = sitofp i32 %5452 to double
  %5454 = fcmp fast ogt double %5372, %5453
  br i1 %5454, label %5455, label %5456

5455:                                             ; preds = %5449
  store double %5453, ptr %4910, align 8, !tbaa !18
  br label %5456

5456:                                             ; preds = %5455, %5449
  %5457 = phi double [ %5453, %5455 ], [ %5372, %5449 ]
  %5458 = add nuw nsw i32 %5373, 1
  br i1 %5223, label %5459, label %5509

5459:                                             ; preds = %5456
  %5460 = load i32, ptr %4, align 4, !tbaa !5
  %5461 = load i32, ptr %12, align 4, !tbaa !5
  %5462 = add nsw i32 %5461, -1
  %5463 = icmp slt i32 %5460, %5462
  br i1 %5463, label %5486, label %5464

5464:                                             ; preds = %5459
  %5465 = icmp eq i32 %5460, %5462
  br i1 %5465, label %5466, label %5502

5466:                                             ; preds = %5464
  store i32 0, ptr %4, align 4, !tbaa !5
  %5467 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5467, ptr %6, align 4, !tbaa !5
  br i1 %5228, label %5509, label %5468

5468:                                             ; preds = %5466, %5496
  %5469 = phi i64 [ %5500, %5496 ], [ 1, %5466 ]
  %5470 = getelementptr inbounds i32, ptr %4, i64 %5469
  %5471 = load i32, ptr %5470, align 4, !tbaa !5
  %5472 = getelementptr inbounds i32, ptr %12, i64 %5469
  %5473 = load i32, ptr %5472, align 4, !tbaa !5
  %5474 = add nsw i32 %5473, -1
  %5475 = icmp slt i32 %5471, %5474
  br i1 %5475, label %5476, label %5494

5476:                                             ; preds = %5468
  br i1 %5463, label %5486, label %5477

5477:                                             ; preds = %5476
  %5478 = shl i64 %5469, 32
  %5479 = add i64 %5478, -4294967296
  %5480 = ashr exact i64 %5479, 32
  %5481 = getelementptr inbounds i32, ptr %7, i64 %5480
  %5482 = load i32, ptr %5481, align 4, !tbaa !5
  %5483 = getelementptr inbounds i32, ptr %6, i64 %5469
  %5484 = load i32, ptr %5483, align 4, !tbaa !5
  %5485 = add nsw i32 %5484, %5482
  store i32 %5485, ptr %5483, align 4, !tbaa !5
  br label %5504

5486:                                             ; preds = %5459, %5476
  %5487 = phi i32 [ %5471, %5476 ], [ %5460, %5459 ]
  %5488 = phi ptr [ %5470, %5476 ], [ %4, %5459 ]
  %5489 = phi i64 [ %5469, %5476 ], [ 0, %5459 ]
  %5490 = add nsw i32 %5487, 1
  store i32 %5490, ptr %5488, align 4, !tbaa !5
  %5491 = getelementptr inbounds i32, ptr %7, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !5
  %5493 = getelementptr inbounds i32, ptr %6, i64 %5489
  br label %5504

5494:                                             ; preds = %5468
  %5495 = icmp eq i32 %5471, %5474
  br i1 %5495, label %5496, label %5502

5496:                                             ; preds = %5494
  store i32 0, ptr %5470, align 4, !tbaa !5
  %5497 = getelementptr inbounds i32, ptr %8, i64 %5469
  %5498 = load i32, ptr %5497, align 4, !tbaa !5
  %5499 = getelementptr inbounds i32, ptr %6, i64 %5469
  store i32 %5498, ptr %5499, align 4, !tbaa !5
  %5500 = add nuw nsw i64 %5469, 1
  %5501 = icmp eq i64 %5500, %5226
  br i1 %5501, label %5509, label %5468, !llvm.loop !762

5502:                                             ; preds = %5464, %5494
  %5503 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5513

5504:                                             ; preds = %5477, %5486
  %5505 = phi ptr [ %5493, %5486 ], [ %5470, %5477 ]
  %5506 = phi i32 [ %5492, %5486 ], [ 1, %5477 ]
  %5507 = load i32, ptr %5505, align 4, !tbaa !5
  %5508 = add nsw i32 %5507, %5506
  store i32 %5508, ptr %5505, align 4, !tbaa !5
  br label %5509

5509:                                             ; preds = %5496, %5504, %5466, %5456
  %5510 = icmp eq i32 %5458, %5
  br i1 %5510, label %5513, label %5371, !llvm.loop !763

5511:                                             ; preds = %4914
  %5512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

5513:                                             ; preds = %5509, %5369, %5213, %5073, %4902, %4762, %4606, %4466, %4295, %4155, %3999, %3859, %3688, %3548, %3392, %3252, %3081, %2943, %2789, %2651, %2479, %2336, %2177, %2034, %1860, %1718, %1560, %1418, %1238, %1100, %946, %808, %636, %495, %338, %197, %5220, %5229, %4920, %4929, %4613, %4622, %4313, %4322, %4006, %4015, %3706, %3715, %3399, %3408, %3099, %3108, %2796, %2805, %2500, %2509, %2184, %2193, %1878, %1887, %1567, %1576, %1263, %1272, %953, %962, %657, %666, %345, %354, %43, %52, %1864, %4906, %5511, %4299, %4904, %3692, %4297, %3085, %3690, %2493, %2490, %3083, %2481, %1255, %1250, %1862, %650, %647, %1240, %35, %30, %638, %18, %5066, %5151, %5206, %5362, %5447, %5502, %4459, %4544, %4599, %4755, %4840, %4895, %3852, %3937, %3992, %4148, %4233, %4288, %3245, %3330, %3385, %3541, %3626, %3681, %2644, %2728, %2782, %2936, %3020, %3074, %2027, %2112, %2170, %2329, %2414, %2472, %1411, %1495, %1553, %1711, %1795, %1853, %801, %885, %939, %1093, %1177, %1231, %190, %274, %331, %488, %572, %629
  %5514 = phi i32 [ -1, %629 ], [ -1, %572 ], [ -1, %488 ], [ -1, %331 ], [ -1, %274 ], [ -1, %190 ], [ -1, %1231 ], [ -1, %1177 ], [ -1, %1093 ], [ -1, %939 ], [ -1, %885 ], [ -1, %801 ], [ -1, %1853 ], [ -1, %1795 ], [ -1, %1711 ], [ -1, %1553 ], [ -1, %1495 ], [ -1, %1411 ], [ -1, %2472 ], [ -1, %2414 ], [ -1, %2329 ], [ -1, %2170 ], [ -1, %2112 ], [ -1, %2027 ], [ -1, %3074 ], [ -1, %3020 ], [ -1, %2936 ], [ -1, %2782 ], [ -1, %2728 ], [ -1, %2644 ], [ -1, %3681 ], [ -1, %3626 ], [ -1, %3541 ], [ -1, %3385 ], [ -1, %3330 ], [ -1, %3245 ], [ -1, %4288 ], [ -1, %4233 ], [ -1, %4148 ], [ -1, %3992 ], [ -1, %3937 ], [ -1, %3852 ], [ -1, %4895 ], [ -1, %4840 ], [ -1, %4755 ], [ -1, %4599 ], [ -1, %4544 ], [ -1, %4459 ], [ -1, %5502 ], [ -1, %5447 ], [ -1, %5362 ], [ -1, %5206 ], [ -1, %5151 ], [ -1, %5066 ], [ %10, %18 ], [ 1, %638 ], [ 1, %30 ], [ 1, %35 ], [ 1, %1240 ], [ 1, %647 ], [ 1, %650 ], [ 1, %1862 ], [ 1, %1250 ], [ 1, %1255 ], [ 1, %2481 ], [ 1, %3083 ], [ 1, %2490 ], [ 1, %2493 ], [ 1, %3085 ], [ 1, %3690 ], [ 1, %3692 ], [ 1, %4297 ], [ 1, %4299 ], [ 1, %4904 ], [ 1, %4906 ], [ 1, %5511 ], [ 1, %1864 ], [ 1, %52 ], [ 1, %43 ], [ 1, %354 ], [ 1, %345 ], [ 1, %666 ], [ 1, %657 ], [ 1, %962 ], [ 1, %953 ], [ 1, %1272 ], [ 1, %1263 ], [ 1, %1576 ], [ 1, %1567 ], [ 1, %1887 ], [ 1, %1878 ], [ 1, %2193 ], [ 1, %2184 ], [ 1, %2509 ], [ 1, %2500 ], [ 1, %2805 ], [ 1, %2796 ], [ 1, %3108 ], [ 1, %3099 ], [ 1, %3408 ], [ 1, %3399 ], [ 1, %3715 ], [ 1, %3706 ], [ 1, %4015 ], [ 1, %4006 ], [ 1, %4322 ], [ 1, %4313 ], [ 1, %4622 ], [ 1, %4613 ], [ 1, %4929 ], [ 1, %4920 ], [ 1, %5229 ], [ 1, %5220 ], [ %59, %197 ], [ %50, %338 ], [ %361, %495 ], [ %352, %636 ], [ %673, %808 ], [ %664, %946 ], [ %969, %1100 ], [ %960, %1238 ], [ %1279, %1418 ], [ %1270, %1560 ], [ %1583, %1718 ], [ %1574, %1860 ], [ %1894, %2034 ], [ %1885, %2177 ], [ %2200, %2336 ], [ %2191, %2479 ], [ %2516, %2651 ], [ %2507, %2789 ], [ %2812, %2943 ], [ %2803, %3081 ], [ %3115, %3252 ], [ %3106, %3392 ], [ %3415, %3548 ], [ %3406, %3688 ], [ %3722, %3859 ], [ %3713, %3999 ], [ %4022, %4155 ], [ %4013, %4295 ], [ %4329, %4466 ], [ %4320, %4606 ], [ %4629, %4762 ], [ %4620, %4902 ], [ %4936, %5073 ], [ %4927, %5213 ], [ %5236, %5369 ], [ %5227, %5509 ]
  ret i32 %5514
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5494 [
    i32 101, label %22
    i32 102, label %646
    i32 103, label %1249
    i32 104, label %1857
    i32 105, label %2464
    i32 106, label %3067
    i32 107, label %3673
    i32 108, label %4280
    i32 109, label %4887
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load i64, ptr %24, align 8, !tbaa !120
  %28 = trunc i64 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %22
  %31 = load i64, ptr %24, align 8, !tbaa !120
  %32 = trunc i64 %27 to i32
  %33 = and i32 %32, 255
  %34 = trunc i64 %31 to i32
  %35 = and i32 %34, 255
  %36 = icmp ugt i32 %33, %35
  br i1 %36, label %37, label %5494

37:                                               ; preds = %30
  %38 = trunc i64 %31 to i8
  store i8 %38, ptr %26, align 1, !tbaa !11
  br label %5494

39:                                               ; preds = %22
  switch i32 %1, label %644 [
    i32 1, label %40
    i32 0, label %344
  ]

40:                                               ; preds = %39
  %41 = getelementptr inbounds i32, ptr %3, i64 %19
  %42 = load i32, ptr %41, align 4, !tbaa !5
  %43 = icmp eq i32 %42, 0
  %44 = icmp sgt i32 %5, 0
  br i1 %43, label %54, label %45

45:                                               ; preds = %40
  br i1 %44, label %46, label %5494

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %202

54:                                               ; preds = %40
  br i1 %44, label %55, label %5494

55:                                               ; preds = %54
  %56 = icmp sgt i32 %13, 1
  %57 = icmp sgt i32 %13, 0
  %58 = add i32 %13, -2
  %59 = zext i32 %58 to i64
  %60 = zext i32 %13 to i64
  %61 = add nuw i32 %5, 1
  %62 = icmp eq i32 %13, 1
  br label %63

63:                                               ; preds = %55, %200
  %64 = phi i32 [ 0, %55 ], [ %152, %200 ]
  %65 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %56, label %66, label %135

66:                                               ; preds = %63, %125
  %67 = phi i32 [ %134, %125 ], [ 0, %63 ]
  %68 = phi i64 [ %76, %125 ], [ %60, %63 ]
  %69 = phi i64 [ %133, %125 ], [ %59, %63 ]
  %70 = phi i32 [ %131, %125 ], [ %65, %63 ]
  %71 = sub i32 %58, %67
  %72 = tail call i32 @llvm.smin.i32(i32 %71, i32 0)
  %73 = sub i32 %71, %72
  %74 = zext i32 %73 to i64
  %75 = add nuw nsw i64 %74, 1
  %76 = add nsw i64 %68, -1
  %77 = icmp ult i32 %73, 31
  br i1 %77, label %113, label %78

78:                                               ; preds = %66
  %79 = and i64 %75, 8589934560
  %80 = sub i64 %69, %79
  br label %81

81:                                               ; preds = %81, %78
  %82 = phi i64 [ 0, %78 ], [ %105, %81 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %78 ], [ %101, %81 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %78 ], [ %102, %81 ]
  %85 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %78 ], [ %103, %81 ]
  %86 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %78 ], [ %104, %81 ]
  %87 = sub i64 %69, %82
  %88 = getelementptr inbounds i32, ptr %9, i64 %87
  %89 = getelementptr inbounds i32, ptr %88, i64 -7
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %88, i64 -15
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = getelementptr inbounds i32, ptr %88, i64 -23
  %96 = load <8 x i32>, ptr %95, align 4, !tbaa !5
  %97 = shufflevector <8 x i32> %96, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %98 = getelementptr inbounds i32, ptr %88, i64 -31
  %99 = load <8 x i32>, ptr %98, align 4, !tbaa !5
  %100 = shufflevector <8 x i32> %99, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %101 = mul <8 x i32> %91, %83
  %102 = mul <8 x i32> %94, %84
  %103 = mul <8 x i32> %97, %85
  %104 = mul <8 x i32> %100, %86
  %105 = add nuw i64 %82, 32
  %106 = icmp eq i64 %105, %79
  br i1 %106, label %107, label %81, !llvm.loop !764

107:                                              ; preds = %81
  %108 = mul <8 x i32> %102, %101
  %109 = mul <8 x i32> %103, %108
  %110 = mul <8 x i32> %104, %109
  %111 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %110)
  %112 = icmp eq i64 %75, %79
  br i1 %112, label %125, label %113

113:                                              ; preds = %66, %107
  %114 = phi i64 [ %69, %66 ], [ %80, %107 ]
  %115 = phi i32 [ 1, %66 ], [ %111, %107 ]
  br label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %122, %116 ], [ %114, %113 ]
  %118 = phi i32 [ %121, %116 ], [ %115, %113 ]
  %119 = getelementptr inbounds i32, ptr %9, i64 %117
  %120 = load i32, ptr %119, align 4, !tbaa !5
  %121 = mul nsw i32 %120, %118
  %122 = add nsw i64 %117, -1
  %123 = trunc i64 %117 to i32
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %116, label %125, !llvm.loop !765

125:                                              ; preds = %116, %107
  %126 = phi i32 [ %111, %107 ], [ %121, %116 ]
  %127 = and i64 %76, 4294967295
  %128 = getelementptr inbounds i32, ptr %6, i64 %127
  %129 = load i32, ptr %128, align 4, !tbaa !5
  %130 = mul nsw i32 %129, %126
  %131 = add nsw i32 %130, %70
  %132 = icmp sgt i64 %68, 2
  %133 = add nsw i64 %69, -1
  %134 = add i32 %67, 1
  br i1 %132, label %66, label %135, !llvm.loop !766

135:                                              ; preds = %125, %63
  %136 = phi i32 [ %65, %63 ], [ %131, %125 ]
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %2, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !18
  %140 = getelementptr inbounds i64, ptr %24, i64 %137
  %141 = load i64, ptr %140, align 8, !tbaa !120
  %142 = trunc i64 %141 to i8
  %143 = fcmp fast ueq double %139, 0.000000e+00
  br i1 %143, label %151, label %144

144:                                              ; preds = %135
  %145 = load i8, ptr %26, align 1, !tbaa !11
  %146 = zext i8 %145 to i32
  %147 = trunc i64 %141 to i32
  %148 = and i32 %147, 255
  %149 = icmp ult i32 %148, %146
  br i1 %149, label %150, label %151

150:                                              ; preds = %144
  store i8 %142, ptr %26, align 1, !tbaa !11
  br label %151

151:                                              ; preds = %144, %150, %135
  %152 = add nuw nsw i32 %64, 1
  br i1 %57, label %153, label %200

153:                                              ; preds = %151
  %154 = load i32, ptr %4, align 4, !tbaa !5
  %155 = load i32, ptr %12, align 4, !tbaa !5
  %156 = add nsw i32 %155, -1
  %157 = icmp slt i32 %154, %156
  br i1 %157, label %177, label %158

158:                                              ; preds = %153
  %159 = icmp eq i32 %154, %156
  br i1 %159, label %160, label %193

160:                                              ; preds = %158
  store i32 0, ptr %4, align 4, !tbaa !5
  %161 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %161, ptr %6, align 4, !tbaa !5
  br i1 %62, label %200, label %162

162:                                              ; preds = %160, %187
  %163 = phi i64 [ %191, %187 ], [ 1, %160 ]
  %164 = getelementptr inbounds i32, ptr %4, i64 %163
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %12, i64 %163
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, -1
  %169 = icmp slt i32 %165, %168
  br i1 %169, label %170, label %185

170:                                              ; preds = %162
  br i1 %157, label %177, label %171

171:                                              ; preds = %170
  %172 = getelementptr inbounds i32, ptr %7, i64 %163
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %163
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = add nsw i32 %175, %173
  store i32 %176, ptr %174, align 4, !tbaa !5
  br label %195

177:                                              ; preds = %153, %170
  %178 = phi i32 [ %165, %170 ], [ %154, %153 ]
  %179 = phi ptr [ %164, %170 ], [ %4, %153 ]
  %180 = phi i64 [ %163, %170 ], [ 0, %153 ]
  %181 = add nsw i32 %178, 1
  store i32 %181, ptr %179, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %7, i64 %180
  %183 = load i32, ptr %182, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %6, i64 %180
  br label %195

185:                                              ; preds = %162
  %186 = icmp eq i32 %165, %168
  br i1 %186, label %187, label %193

187:                                              ; preds = %185
  store i32 0, ptr %164, align 4, !tbaa !5
  %188 = getelementptr inbounds i32, ptr %8, i64 %163
  %189 = load i32, ptr %188, align 4, !tbaa !5
  %190 = getelementptr inbounds i32, ptr %6, i64 %163
  store i32 %189, ptr %190, align 4, !tbaa !5
  %191 = add nuw nsw i64 %163, 1
  %192 = icmp eq i64 %191, %60
  br i1 %192, label %200, label %162, !llvm.loop !767

193:                                              ; preds = %158, %185
  %194 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

195:                                              ; preds = %171, %177
  %196 = phi ptr [ %184, %177 ], [ %164, %171 ]
  %197 = phi i32 [ %183, %177 ], [ 1, %171 ]
  %198 = load i32, ptr %196, align 4, !tbaa !5
  %199 = add nsw i32 %198, %197
  store i32 %199, ptr %196, align 4, !tbaa !5
  br label %200

200:                                              ; preds = %187, %195, %160, %151
  %201 = icmp eq i32 %152, %5
  br i1 %201, label %5494, label %63, !llvm.loop !768

202:                                              ; preds = %46, %342
  %203 = phi i32 [ 0, %46 ], [ %291, %342 ]
  %204 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %205, label %274

205:                                              ; preds = %202, %264
  %206 = phi i32 [ %273, %264 ], [ 0, %202 ]
  %207 = phi i64 [ %215, %264 ], [ %51, %202 ]
  %208 = phi i64 [ %272, %264 ], [ %50, %202 ]
  %209 = phi i32 [ %270, %264 ], [ %204, %202 ]
  %210 = sub i32 %49, %206
  %211 = tail call i32 @llvm.smin.i32(i32 %210, i32 0)
  %212 = sub i32 %210, %211
  %213 = zext i32 %212 to i64
  %214 = add nuw nsw i64 %213, 1
  %215 = add nsw i64 %207, -1
  %216 = icmp ult i32 %212, 31
  br i1 %216, label %252, label %217

217:                                              ; preds = %205
  %218 = and i64 %214, 8589934560
  %219 = sub i64 %208, %218
  br label %220

220:                                              ; preds = %220, %217
  %221 = phi i64 [ 0, %217 ], [ %244, %220 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %240, %220 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %241, %220 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %242, %220 ]
  %225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %243, %220 ]
  %226 = sub i64 %208, %221
  %227 = getelementptr inbounds i32, ptr %11, i64 %226
  %228 = getelementptr inbounds i32, ptr %227, i64 -7
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %227, i64 -15
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = getelementptr inbounds i32, ptr %227, i64 -23
  %235 = load <8 x i32>, ptr %234, align 4, !tbaa !5
  %236 = shufflevector <8 x i32> %235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %237 = getelementptr inbounds i32, ptr %227, i64 -31
  %238 = load <8 x i32>, ptr %237, align 4, !tbaa !5
  %239 = shufflevector <8 x i32> %238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %240 = mul <8 x i32> %230, %222
  %241 = mul <8 x i32> %233, %223
  %242 = mul <8 x i32> %236, %224
  %243 = mul <8 x i32> %239, %225
  %244 = add nuw i64 %221, 32
  %245 = icmp eq i64 %244, %218
  br i1 %245, label %246, label %220, !llvm.loop !769

246:                                              ; preds = %220
  %247 = mul <8 x i32> %241, %240
  %248 = mul <8 x i32> %242, %247
  %249 = mul <8 x i32> %243, %248
  %250 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %249)
  %251 = icmp eq i64 %214, %218
  br i1 %251, label %264, label %252

252:                                              ; preds = %205, %246
  %253 = phi i64 [ %208, %205 ], [ %219, %246 ]
  %254 = phi i32 [ 1, %205 ], [ %250, %246 ]
  br label %255

255:                                              ; preds = %252, %255
  %256 = phi i64 [ %261, %255 ], [ %253, %252 ]
  %257 = phi i32 [ %260, %255 ], [ %254, %252 ]
  %258 = getelementptr inbounds i32, ptr %11, i64 %256
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %257
  %261 = add nsw i64 %256, -1
  %262 = trunc i64 %256 to i32
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %255, label %264, !llvm.loop !770

264:                                              ; preds = %255, %246
  %265 = phi i32 [ %250, %246 ], [ %260, %255 ]
  %266 = and i64 %215, 4294967295
  %267 = getelementptr inbounds i32, ptr %6, i64 %266
  %268 = load i32, ptr %267, align 4, !tbaa !5
  %269 = mul nsw i32 %268, %265
  %270 = add nsw i32 %269, %209
  %271 = icmp sgt i64 %207, 2
  %272 = add nsw i64 %208, -1
  %273 = add i32 %206, 1
  br i1 %271, label %205, label %274, !llvm.loop !771

274:                                              ; preds = %264, %202
  %275 = phi i32 [ %204, %202 ], [ %270, %264 ]
  %276 = icmp slt i32 %275, %5
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

279:                                              ; preds = %274
  %280 = sext i32 %275 to i64
  %281 = getelementptr inbounds i64, ptr %24, i64 %280
  %282 = load i64, ptr %281, align 8, !tbaa !120
  %283 = load i8, ptr %26, align 1, !tbaa !11
  %284 = zext i8 %283 to i32
  %285 = trunc i64 %282 to i32
  %286 = and i32 %285, 255
  %287 = icmp ult i32 %286, %284
  br i1 %287, label %288, label %290

288:                                              ; preds = %279
  %289 = trunc i64 %282 to i8
  store i8 %289, ptr %26, align 1, !tbaa !11
  br label %290

290:                                              ; preds = %279, %288
  %291 = add nuw nsw i32 %203, 1
  br i1 %48, label %292, label %342

292:                                              ; preds = %290
  %293 = load i32, ptr %4, align 4, !tbaa !5
  %294 = load i32, ptr %12, align 4, !tbaa !5
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %293, %295
  br i1 %296, label %319, label %297

297:                                              ; preds = %292
  %298 = icmp eq i32 %293, %295
  br i1 %298, label %299, label %335

299:                                              ; preds = %297
  store i32 0, ptr %4, align 4, !tbaa !5
  %300 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %300, ptr %6, align 4, !tbaa !5
  br i1 %53, label %342, label %301

301:                                              ; preds = %299, %329
  %302 = phi i64 [ %333, %329 ], [ 1, %299 ]
  %303 = getelementptr inbounds i32, ptr %4, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %12, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = add nsw i32 %306, -1
  %308 = icmp slt i32 %304, %307
  br i1 %308, label %309, label %327

309:                                              ; preds = %301
  br i1 %296, label %319, label %310

310:                                              ; preds = %309
  %311 = shl i64 %302, 32
  %312 = add i64 %311, -4294967296
  %313 = ashr exact i64 %312, 32
  %314 = getelementptr inbounds i32, ptr %7, i64 %313
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %302
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = add nsw i32 %317, %315
  store i32 %318, ptr %316, align 4, !tbaa !5
  br label %337

319:                                              ; preds = %292, %309
  %320 = phi i32 [ %304, %309 ], [ %293, %292 ]
  %321 = phi ptr [ %303, %309 ], [ %4, %292 ]
  %322 = phi i64 [ %302, %309 ], [ 0, %292 ]
  %323 = add nsw i32 %320, 1
  store i32 %323, ptr %321, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %7, i64 %322
  %325 = load i32, ptr %324, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %6, i64 %322
  br label %337

327:                                              ; preds = %301
  %328 = icmp eq i32 %304, %307
  br i1 %328, label %329, label %335

329:                                              ; preds = %327
  store i32 0, ptr %303, align 4, !tbaa !5
  %330 = getelementptr inbounds i32, ptr %8, i64 %302
  %331 = load i32, ptr %330, align 4, !tbaa !5
  %332 = getelementptr inbounds i32, ptr %6, i64 %302
  store i32 %331, ptr %332, align 4, !tbaa !5
  %333 = add nuw nsw i64 %302, 1
  %334 = icmp eq i64 %333, %51
  br i1 %334, label %342, label %301, !llvm.loop !772

335:                                              ; preds = %297, %327
  %336 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

337:                                              ; preds = %310, %319
  %338 = phi ptr [ %326, %319 ], [ %303, %310 ]
  %339 = phi i32 [ %325, %319 ], [ 1, %310 ]
  %340 = load i32, ptr %338, align 4, !tbaa !5
  %341 = add nsw i32 %340, %339
  store i32 %341, ptr %338, align 4, !tbaa !5
  br label %342

342:                                              ; preds = %329, %337, %299, %290
  %343 = icmp eq i32 %291, %5
  br i1 %343, label %5494, label %202, !llvm.loop !773

344:                                              ; preds = %39
  %345 = getelementptr inbounds i32, ptr %3, i64 %19
  %346 = load i32, ptr %345, align 4, !tbaa !5
  %347 = icmp eq i32 %346, 0
  %348 = icmp sgt i32 %5, 0
  br i1 %347, label %358, label %349

349:                                              ; preds = %344
  br i1 %348, label %350, label %5494

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %502

358:                                              ; preds = %344
  br i1 %348, label %359, label %5494

359:                                              ; preds = %358
  %360 = icmp sgt i32 %13, 1
  %361 = icmp sgt i32 %13, 0
  %362 = add i32 %13, -2
  %363 = zext i32 %362 to i64
  %364 = zext i32 %13 to i64
  %365 = add nuw i32 %5, 1
  %366 = icmp eq i32 %13, 1
  br label %367

367:                                              ; preds = %359, %500
  %368 = phi i32 [ 0, %359 ], [ %452, %500 ]
  %369 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %360, label %370, label %439

370:                                              ; preds = %367, %429
  %371 = phi i32 [ %438, %429 ], [ 0, %367 ]
  %372 = phi i64 [ %380, %429 ], [ %364, %367 ]
  %373 = phi i64 [ %437, %429 ], [ %363, %367 ]
  %374 = phi i32 [ %435, %429 ], [ %369, %367 ]
  %375 = sub i32 %362, %371
  %376 = tail call i32 @llvm.smin.i32(i32 %375, i32 0)
  %377 = sub i32 %375, %376
  %378 = zext i32 %377 to i64
  %379 = add nuw nsw i64 %378, 1
  %380 = add nsw i64 %372, -1
  %381 = icmp ult i32 %377, 31
  br i1 %381, label %417, label %382

382:                                              ; preds = %370
  %383 = and i64 %379, 8589934560
  %384 = sub i64 %373, %383
  br label %385

385:                                              ; preds = %385, %382
  %386 = phi i64 [ 0, %382 ], [ %409, %385 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %405, %385 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %406, %385 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %407, %385 ]
  %390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %408, %385 ]
  %391 = sub i64 %373, %386
  %392 = getelementptr inbounds i32, ptr %9, i64 %391
  %393 = getelementptr inbounds i32, ptr %392, i64 -7
  %394 = load <8 x i32>, ptr %393, align 4, !tbaa !5
  %395 = shufflevector <8 x i32> %394, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %396 = getelementptr inbounds i32, ptr %392, i64 -15
  %397 = load <8 x i32>, ptr %396, align 4, !tbaa !5
  %398 = shufflevector <8 x i32> %397, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %399 = getelementptr inbounds i32, ptr %392, i64 -23
  %400 = load <8 x i32>, ptr %399, align 4, !tbaa !5
  %401 = shufflevector <8 x i32> %400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %402 = getelementptr inbounds i32, ptr %392, i64 -31
  %403 = load <8 x i32>, ptr %402, align 4, !tbaa !5
  %404 = shufflevector <8 x i32> %403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %405 = mul <8 x i32> %395, %387
  %406 = mul <8 x i32> %398, %388
  %407 = mul <8 x i32> %401, %389
  %408 = mul <8 x i32> %404, %390
  %409 = add nuw i64 %386, 32
  %410 = icmp eq i64 %409, %383
  br i1 %410, label %411, label %385, !llvm.loop !774

411:                                              ; preds = %385
  %412 = mul <8 x i32> %406, %405
  %413 = mul <8 x i32> %407, %412
  %414 = mul <8 x i32> %408, %413
  %415 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %414)
  %416 = icmp eq i64 %379, %383
  br i1 %416, label %429, label %417

417:                                              ; preds = %370, %411
  %418 = phi i64 [ %373, %370 ], [ %384, %411 ]
  %419 = phi i32 [ 1, %370 ], [ %415, %411 ]
  br label %420

420:                                              ; preds = %417, %420
  %421 = phi i64 [ %426, %420 ], [ %418, %417 ]
  %422 = phi i32 [ %425, %420 ], [ %419, %417 ]
  %423 = getelementptr inbounds i32, ptr %9, i64 %421
  %424 = load i32, ptr %423, align 4, !tbaa !5
  %425 = mul nsw i32 %424, %422
  %426 = add nsw i64 %421, -1
  %427 = trunc i64 %421 to i32
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %420, label %429, !llvm.loop !775

429:                                              ; preds = %420, %411
  %430 = phi i32 [ %415, %411 ], [ %425, %420 ]
  %431 = and i64 %380, 4294967295
  %432 = getelementptr inbounds i32, ptr %6, i64 %431
  %433 = load i32, ptr %432, align 4, !tbaa !5
  %434 = mul nsw i32 %433, %430
  %435 = add nsw i32 %434, %374
  %436 = icmp sgt i64 %372, 2
  %437 = add nsw i64 %373, -1
  %438 = add i32 %371, 1
  br i1 %436, label %370, label %439, !llvm.loop !776

439:                                              ; preds = %429, %367
  %440 = phi i32 [ %369, %367 ], [ %435, %429 ]
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i64, ptr %24, i64 %441
  %443 = load i64, ptr %442, align 8, !tbaa !120
  %444 = load i8, ptr %26, align 1, !tbaa !11
  %445 = zext i8 %444 to i32
  %446 = trunc i64 %443 to i32
  %447 = and i32 %446, 255
  %448 = icmp ult i32 %447, %445
  br i1 %448, label %449, label %451

449:                                              ; preds = %439
  %450 = trunc i64 %443 to i8
  store i8 %450, ptr %26, align 1, !tbaa !11
  br label %451

451:                                              ; preds = %449, %439
  %452 = add nuw nsw i32 %368, 1
  br i1 %361, label %453, label %500

453:                                              ; preds = %451
  %454 = load i32, ptr %4, align 4, !tbaa !5
  %455 = load i32, ptr %12, align 4, !tbaa !5
  %456 = add nsw i32 %455, -1
  %457 = icmp slt i32 %454, %456
  br i1 %457, label %477, label %458

458:                                              ; preds = %453
  %459 = icmp eq i32 %454, %456
  br i1 %459, label %460, label %493

460:                                              ; preds = %458
  store i32 0, ptr %4, align 4, !tbaa !5
  %461 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %461, ptr %6, align 4, !tbaa !5
  br i1 %366, label %500, label %462

462:                                              ; preds = %460, %487
  %463 = phi i64 [ %491, %487 ], [ 1, %460 ]
  %464 = getelementptr inbounds i32, ptr %4, i64 %463
  %465 = load i32, ptr %464, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %12, i64 %463
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = add nsw i32 %467, -1
  %469 = icmp slt i32 %465, %468
  br i1 %469, label %470, label %485

470:                                              ; preds = %462
  br i1 %457, label %477, label %471

471:                                              ; preds = %470
  %472 = getelementptr inbounds i32, ptr %7, i64 %463
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %463
  %475 = load i32, ptr %474, align 4, !tbaa !5
  %476 = add nsw i32 %475, %473
  store i32 %476, ptr %474, align 4, !tbaa !5
  br label %495

477:                                              ; preds = %453, %470
  %478 = phi i32 [ %465, %470 ], [ %454, %453 ]
  %479 = phi ptr [ %464, %470 ], [ %4, %453 ]
  %480 = phi i64 [ %463, %470 ], [ 0, %453 ]
  %481 = add nsw i32 %478, 1
  store i32 %481, ptr %479, align 4, !tbaa !5
  %482 = getelementptr inbounds i32, ptr %7, i64 %480
  %483 = load i32, ptr %482, align 4, !tbaa !5
  %484 = getelementptr inbounds i32, ptr %6, i64 %480
  br label %495

485:                                              ; preds = %462
  %486 = icmp eq i32 %465, %468
  br i1 %486, label %487, label %493

487:                                              ; preds = %485
  store i32 0, ptr %464, align 4, !tbaa !5
  %488 = getelementptr inbounds i32, ptr %8, i64 %463
  %489 = load i32, ptr %488, align 4, !tbaa !5
  %490 = getelementptr inbounds i32, ptr %6, i64 %463
  store i32 %489, ptr %490, align 4, !tbaa !5
  %491 = add nuw nsw i64 %463, 1
  %492 = icmp eq i64 %491, %364
  br i1 %492, label %500, label %462, !llvm.loop !777

493:                                              ; preds = %458, %485
  %494 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

495:                                              ; preds = %471, %477
  %496 = phi ptr [ %484, %477 ], [ %464, %471 ]
  %497 = phi i32 [ %483, %477 ], [ 1, %471 ]
  %498 = load i32, ptr %496, align 4, !tbaa !5
  %499 = add nsw i32 %498, %497
  store i32 %499, ptr %496, align 4, !tbaa !5
  br label %500

500:                                              ; preds = %487, %495, %460, %451
  %501 = icmp eq i32 %452, %5
  br i1 %501, label %5494, label %367, !llvm.loop !778

502:                                              ; preds = %350, %642
  %503 = phi i32 [ 0, %350 ], [ %591, %642 ]
  %504 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %351, label %505, label %574

505:                                              ; preds = %502, %564
  %506 = phi i32 [ %573, %564 ], [ 0, %502 ]
  %507 = phi i64 [ %515, %564 ], [ %355, %502 ]
  %508 = phi i64 [ %572, %564 ], [ %354, %502 ]
  %509 = phi i32 [ %570, %564 ], [ %504, %502 ]
  %510 = sub i32 %353, %506
  %511 = tail call i32 @llvm.smin.i32(i32 %510, i32 0)
  %512 = sub i32 %510, %511
  %513 = zext i32 %512 to i64
  %514 = add nuw nsw i64 %513, 1
  %515 = add nsw i64 %507, -1
  %516 = icmp ult i32 %512, 31
  br i1 %516, label %552, label %517

517:                                              ; preds = %505
  %518 = and i64 %514, 8589934560
  %519 = sub i64 %508, %518
  br label %520

520:                                              ; preds = %520, %517
  %521 = phi i64 [ 0, %517 ], [ %544, %520 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %517 ], [ %540, %520 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %517 ], [ %541, %520 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %517 ], [ %542, %520 ]
  %525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %517 ], [ %543, %520 ]
  %526 = sub i64 %508, %521
  %527 = getelementptr inbounds i32, ptr %11, i64 %526
  %528 = getelementptr inbounds i32, ptr %527, i64 -7
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !5
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %527, i64 -15
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !5
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = getelementptr inbounds i32, ptr %527, i64 -23
  %535 = load <8 x i32>, ptr %534, align 4, !tbaa !5
  %536 = shufflevector <8 x i32> %535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %537 = getelementptr inbounds i32, ptr %527, i64 -31
  %538 = load <8 x i32>, ptr %537, align 4, !tbaa !5
  %539 = shufflevector <8 x i32> %538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %540 = mul <8 x i32> %530, %522
  %541 = mul <8 x i32> %533, %523
  %542 = mul <8 x i32> %536, %524
  %543 = mul <8 x i32> %539, %525
  %544 = add nuw i64 %521, 32
  %545 = icmp eq i64 %544, %518
  br i1 %545, label %546, label %520, !llvm.loop !779

546:                                              ; preds = %520
  %547 = mul <8 x i32> %541, %540
  %548 = mul <8 x i32> %542, %547
  %549 = mul <8 x i32> %543, %548
  %550 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %549)
  %551 = icmp eq i64 %514, %518
  br i1 %551, label %564, label %552

552:                                              ; preds = %505, %546
  %553 = phi i64 [ %508, %505 ], [ %519, %546 ]
  %554 = phi i32 [ 1, %505 ], [ %550, %546 ]
  br label %555

555:                                              ; preds = %552, %555
  %556 = phi i64 [ %561, %555 ], [ %553, %552 ]
  %557 = phi i32 [ %560, %555 ], [ %554, %552 ]
  %558 = getelementptr inbounds i32, ptr %11, i64 %556
  %559 = load i32, ptr %558, align 4, !tbaa !5
  %560 = mul nsw i32 %559, %557
  %561 = add nsw i64 %556, -1
  %562 = trunc i64 %556 to i32
  %563 = icmp sgt i32 %562, 0
  br i1 %563, label %555, label %564, !llvm.loop !780

564:                                              ; preds = %555, %546
  %565 = phi i32 [ %550, %546 ], [ %560, %555 ]
  %566 = and i64 %515, 4294967295
  %567 = getelementptr inbounds i32, ptr %6, i64 %566
  %568 = load i32, ptr %567, align 4, !tbaa !5
  %569 = mul nsw i32 %568, %565
  %570 = add nsw i32 %569, %509
  %571 = icmp sgt i64 %507, 2
  %572 = add nsw i64 %508, -1
  %573 = add i32 %506, 1
  br i1 %571, label %505, label %574, !llvm.loop !781

574:                                              ; preds = %564, %502
  %575 = phi i32 [ %504, %502 ], [ %570, %564 ]
  %576 = icmp slt i32 %575, %5
  br i1 %576, label %579, label %577

577:                                              ; preds = %574
  %578 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

579:                                              ; preds = %574
  %580 = sext i32 %575 to i64
  %581 = getelementptr inbounds i64, ptr %24, i64 %580
  %582 = load i64, ptr %581, align 8, !tbaa !120
  %583 = load i8, ptr %26, align 1, !tbaa !11
  %584 = zext i8 %583 to i32
  %585 = trunc i64 %582 to i32
  %586 = and i32 %585, 255
  %587 = icmp ult i32 %586, %584
  br i1 %587, label %588, label %590

588:                                              ; preds = %579
  %589 = trunc i64 %582 to i8
  store i8 %589, ptr %26, align 1, !tbaa !11
  br label %590

590:                                              ; preds = %588, %579
  %591 = add nuw nsw i32 %503, 1
  br i1 %352, label %592, label %642

592:                                              ; preds = %590
  %593 = load i32, ptr %4, align 4, !tbaa !5
  %594 = load i32, ptr %12, align 4, !tbaa !5
  %595 = add nsw i32 %594, -1
  %596 = icmp slt i32 %593, %595
  br i1 %596, label %619, label %597

597:                                              ; preds = %592
  %598 = icmp eq i32 %593, %595
  br i1 %598, label %599, label %635

599:                                              ; preds = %597
  store i32 0, ptr %4, align 4, !tbaa !5
  %600 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %600, ptr %6, align 4, !tbaa !5
  br i1 %357, label %642, label %601

601:                                              ; preds = %599, %629
  %602 = phi i64 [ %633, %629 ], [ 1, %599 ]
  %603 = getelementptr inbounds i32, ptr %4, i64 %602
  %604 = load i32, ptr %603, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %12, i64 %602
  %606 = load i32, ptr %605, align 4, !tbaa !5
  %607 = add nsw i32 %606, -1
  %608 = icmp slt i32 %604, %607
  br i1 %608, label %609, label %627

609:                                              ; preds = %601
  br i1 %596, label %619, label %610

610:                                              ; preds = %609
  %611 = shl i64 %602, 32
  %612 = add i64 %611, -4294967296
  %613 = ashr exact i64 %612, 32
  %614 = getelementptr inbounds i32, ptr %7, i64 %613
  %615 = load i32, ptr %614, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %6, i64 %602
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = add nsw i32 %617, %615
  store i32 %618, ptr %616, align 4, !tbaa !5
  br label %637

619:                                              ; preds = %592, %609
  %620 = phi i32 [ %604, %609 ], [ %593, %592 ]
  %621 = phi ptr [ %603, %609 ], [ %4, %592 ]
  %622 = phi i64 [ %602, %609 ], [ 0, %592 ]
  %623 = add nsw i32 %620, 1
  store i32 %623, ptr %621, align 4, !tbaa !5
  %624 = getelementptr inbounds i32, ptr %7, i64 %622
  %625 = load i32, ptr %624, align 4, !tbaa !5
  %626 = getelementptr inbounds i32, ptr %6, i64 %622
  br label %637

627:                                              ; preds = %601
  %628 = icmp eq i32 %604, %607
  br i1 %628, label %629, label %635

629:                                              ; preds = %627
  store i32 0, ptr %603, align 4, !tbaa !5
  %630 = getelementptr inbounds i32, ptr %8, i64 %602
  %631 = load i32, ptr %630, align 4, !tbaa !5
  %632 = getelementptr inbounds i32, ptr %6, i64 %602
  store i32 %631, ptr %632, align 4, !tbaa !5
  %633 = add nuw nsw i64 %602, 1
  %634 = icmp eq i64 %633, %355
  br i1 %634, label %642, label %601, !llvm.loop !782

635:                                              ; preds = %597, %627
  %636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

637:                                              ; preds = %610, %619
  %638 = phi ptr [ %626, %619 ], [ %603, %610 ]
  %639 = phi i32 [ %625, %619 ], [ 1, %610 ]
  %640 = load i32, ptr %638, align 4, !tbaa !5
  %641 = add nsw i32 %640, %639
  store i32 %641, ptr %638, align 4, !tbaa !5
  br label %642

642:                                              ; preds = %629, %637, %599, %590
  %643 = icmp eq i32 %591, %5
  br i1 %643, label %5494, label %502, !llvm.loop !783

644:                                              ; preds = %39
  %645 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1245, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

646:                                              ; preds = %18
  %647 = getelementptr inbounds ptr, ptr %14, i64 %19
  %648 = load ptr, ptr %647, align 8, !tbaa !9
  %649 = getelementptr inbounds ptr, ptr %16, i64 %19
  %650 = load ptr, ptr %649, align 8, !tbaa !9
  %651 = load i64, ptr %648, align 8, !tbaa !120
  %652 = trunc i64 %651 to i32
  store i32 %652, ptr %650, align 4, !tbaa !5
  %653 = icmp eq i32 %13, 0
  br i1 %653, label %5494, label %654

654:                                              ; preds = %646
  switch i32 %1, label %1247 [
    i32 1, label %655
    i32 0, label %953
  ]

655:                                              ; preds = %654
  %656 = getelementptr inbounds i32, ptr %3, i64 %19
  %657 = load i32, ptr %656, align 4, !tbaa !5
  %658 = icmp eq i32 %657, 0
  %659 = icmp sgt i32 %5, 0
  br i1 %658, label %669, label %660

660:                                              ; preds = %655
  br i1 %659, label %661, label %5494

661:                                              ; preds = %660
  %662 = icmp sgt i32 %13, 1
  %663 = icmp sgt i32 %13, 0
  %664 = add i32 %13, -2
  %665 = zext i32 %664 to i64
  %666 = zext i32 %13 to i64
  %667 = add nuw i32 %5, 1
  %668 = icmp eq i32 %13, 1
  br label %814

669:                                              ; preds = %655
  br i1 %659, label %670, label %5494

670:                                              ; preds = %669
  %671 = icmp sgt i32 %13, 1
  %672 = icmp sgt i32 %13, 0
  %673 = add i32 %13, -2
  %674 = zext i32 %673 to i64
  %675 = zext i32 %13 to i64
  %676 = add nuw i32 %5, 1
  %677 = icmp eq i32 %13, 1
  br label %678

678:                                              ; preds = %670, %812
  %679 = phi i32 [ 0, %670 ], [ %764, %812 ]
  %680 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %671, label %681, label %750

681:                                              ; preds = %678, %740
  %682 = phi i32 [ %749, %740 ], [ 0, %678 ]
  %683 = phi i64 [ %691, %740 ], [ %675, %678 ]
  %684 = phi i64 [ %748, %740 ], [ %674, %678 ]
  %685 = phi i32 [ %746, %740 ], [ %680, %678 ]
  %686 = sub i32 %673, %682
  %687 = tail call i32 @llvm.smin.i32(i32 %686, i32 0)
  %688 = sub i32 %686, %687
  %689 = zext i32 %688 to i64
  %690 = add nuw nsw i64 %689, 1
  %691 = add nsw i64 %683, -1
  %692 = icmp ult i32 %688, 31
  br i1 %692, label %728, label %693

693:                                              ; preds = %681
  %694 = and i64 %690, 8589934560
  %695 = sub i64 %684, %694
  br label %696

696:                                              ; preds = %696, %693
  %697 = phi i64 [ 0, %693 ], [ %720, %696 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %716, %696 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %717, %696 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %718, %696 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %693 ], [ %719, %696 ]
  %702 = sub i64 %684, %697
  %703 = getelementptr inbounds i32, ptr %9, i64 %702
  %704 = getelementptr inbounds i32, ptr %703, i64 -7
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %703, i64 -15
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %703, i64 -23
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !5
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = getelementptr inbounds i32, ptr %703, i64 -31
  %714 = load <8 x i32>, ptr %713, align 4, !tbaa !5
  %715 = shufflevector <8 x i32> %714, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %716 = mul <8 x i32> %706, %698
  %717 = mul <8 x i32> %709, %699
  %718 = mul <8 x i32> %712, %700
  %719 = mul <8 x i32> %715, %701
  %720 = add nuw i64 %697, 32
  %721 = icmp eq i64 %720, %694
  br i1 %721, label %722, label %696, !llvm.loop !784

722:                                              ; preds = %696
  %723 = mul <8 x i32> %717, %716
  %724 = mul <8 x i32> %718, %723
  %725 = mul <8 x i32> %719, %724
  %726 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %725)
  %727 = icmp eq i64 %690, %694
  br i1 %727, label %740, label %728

728:                                              ; preds = %681, %722
  %729 = phi i64 [ %684, %681 ], [ %695, %722 ]
  %730 = phi i32 [ 1, %681 ], [ %726, %722 ]
  br label %731

731:                                              ; preds = %728, %731
  %732 = phi i64 [ %737, %731 ], [ %729, %728 ]
  %733 = phi i32 [ %736, %731 ], [ %730, %728 ]
  %734 = getelementptr inbounds i32, ptr %9, i64 %732
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = mul nsw i32 %735, %733
  %737 = add nsw i64 %732, -1
  %738 = trunc i64 %732 to i32
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %731, label %740, !llvm.loop !785

740:                                              ; preds = %731, %722
  %741 = phi i32 [ %726, %722 ], [ %736, %731 ]
  %742 = and i64 %691, 4294967295
  %743 = getelementptr inbounds i32, ptr %6, i64 %742
  %744 = load i32, ptr %743, align 4, !tbaa !5
  %745 = mul nsw i32 %744, %741
  %746 = add nsw i32 %745, %685
  %747 = icmp sgt i64 %683, 2
  %748 = add nsw i64 %684, -1
  %749 = add i32 %682, 1
  br i1 %747, label %681, label %750, !llvm.loop !786

750:                                              ; preds = %740, %678
  %751 = phi i32 [ %680, %678 ], [ %746, %740 ]
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds double, ptr %2, i64 %752
  %754 = load double, ptr %753, align 8, !tbaa !18
  %755 = getelementptr inbounds i64, ptr %648, i64 %752
  %756 = load i64, ptr %755, align 8, !tbaa !120
  %757 = trunc i64 %756 to i32
  %758 = fcmp fast ueq double %754, 0.000000e+00
  br i1 %758, label %763, label %759

759:                                              ; preds = %750
  %760 = load i32, ptr %650, align 4, !tbaa !5
  %761 = icmp sgt i32 %760, %757
  br i1 %761, label %762, label %763

762:                                              ; preds = %759
  store i32 %757, ptr %650, align 4, !tbaa !5
  br label %763

763:                                              ; preds = %759, %762, %750
  %764 = add nuw nsw i32 %679, 1
  br i1 %672, label %765, label %812

765:                                              ; preds = %763
  %766 = load i32, ptr %4, align 4, !tbaa !5
  %767 = load i32, ptr %12, align 4, !tbaa !5
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %766, %768
  br i1 %769, label %789, label %770

770:                                              ; preds = %765
  %771 = icmp eq i32 %766, %768
  br i1 %771, label %772, label %805

772:                                              ; preds = %770
  store i32 0, ptr %4, align 4, !tbaa !5
  %773 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %773, ptr %6, align 4, !tbaa !5
  br i1 %677, label %812, label %774

774:                                              ; preds = %772, %799
  %775 = phi i64 [ %803, %799 ], [ 1, %772 ]
  %776 = getelementptr inbounds i32, ptr %4, i64 %775
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %12, i64 %775
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = add nsw i32 %779, -1
  %781 = icmp slt i32 %777, %780
  br i1 %781, label %782, label %797

782:                                              ; preds = %774
  br i1 %769, label %789, label %783

783:                                              ; preds = %782
  %784 = getelementptr inbounds i32, ptr %7, i64 %775
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %775
  %787 = load i32, ptr %786, align 4, !tbaa !5
  %788 = add nsw i32 %787, %785
  store i32 %788, ptr %786, align 4, !tbaa !5
  br label %807

789:                                              ; preds = %765, %782
  %790 = phi i32 [ %777, %782 ], [ %766, %765 ]
  %791 = phi ptr [ %776, %782 ], [ %4, %765 ]
  %792 = phi i64 [ %775, %782 ], [ 0, %765 ]
  %793 = add nsw i32 %790, 1
  store i32 %793, ptr %791, align 4, !tbaa !5
  %794 = getelementptr inbounds i32, ptr %7, i64 %792
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %6, i64 %792
  br label %807

797:                                              ; preds = %774
  %798 = icmp eq i32 %777, %780
  br i1 %798, label %799, label %805

799:                                              ; preds = %797
  store i32 0, ptr %776, align 4, !tbaa !5
  %800 = getelementptr inbounds i32, ptr %8, i64 %775
  %801 = load i32, ptr %800, align 4, !tbaa !5
  %802 = getelementptr inbounds i32, ptr %6, i64 %775
  store i32 %801, ptr %802, align 4, !tbaa !5
  %803 = add nuw nsw i64 %775, 1
  %804 = icmp eq i64 %803, %675
  br i1 %804, label %812, label %774, !llvm.loop !787

805:                                              ; preds = %770, %797
  %806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

807:                                              ; preds = %783, %789
  %808 = phi ptr [ %796, %789 ], [ %776, %783 ]
  %809 = phi i32 [ %795, %789 ], [ 1, %783 ]
  %810 = load i32, ptr %808, align 4, !tbaa !5
  %811 = add nsw i32 %810, %809
  store i32 %811, ptr %808, align 4, !tbaa !5
  br label %812

812:                                              ; preds = %799, %807, %772, %763
  %813 = icmp eq i32 %764, %5
  br i1 %813, label %5494, label %678, !llvm.loop !788

814:                                              ; preds = %661, %951
  %815 = phi i32 [ 0, %661 ], [ %900, %951 ]
  %816 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %662, label %817, label %886

817:                                              ; preds = %814, %876
  %818 = phi i32 [ %885, %876 ], [ 0, %814 ]
  %819 = phi i64 [ %827, %876 ], [ %666, %814 ]
  %820 = phi i64 [ %884, %876 ], [ %665, %814 ]
  %821 = phi i32 [ %882, %876 ], [ %816, %814 ]
  %822 = sub i32 %664, %818
  %823 = tail call i32 @llvm.smin.i32(i32 %822, i32 0)
  %824 = sub i32 %822, %823
  %825 = zext i32 %824 to i64
  %826 = add nuw nsw i64 %825, 1
  %827 = add nsw i64 %819, -1
  %828 = icmp ult i32 %824, 31
  br i1 %828, label %864, label %829

829:                                              ; preds = %817
  %830 = and i64 %826, 8589934560
  %831 = sub i64 %820, %830
  br label %832

832:                                              ; preds = %832, %829
  %833 = phi i64 [ 0, %829 ], [ %856, %832 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %852, %832 ]
  %835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %853, %832 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %854, %832 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %855, %832 ]
  %838 = sub i64 %820, %833
  %839 = getelementptr inbounds i32, ptr %11, i64 %838
  %840 = getelementptr inbounds i32, ptr %839, i64 -7
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !5
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %839, i64 -15
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !5
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %839, i64 -23
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !5
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = getelementptr inbounds i32, ptr %839, i64 -31
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !5
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = mul <8 x i32> %842, %834
  %853 = mul <8 x i32> %845, %835
  %854 = mul <8 x i32> %848, %836
  %855 = mul <8 x i32> %851, %837
  %856 = add nuw i64 %833, 32
  %857 = icmp eq i64 %856, %830
  br i1 %857, label %858, label %832, !llvm.loop !789

858:                                              ; preds = %832
  %859 = mul <8 x i32> %853, %852
  %860 = mul <8 x i32> %854, %859
  %861 = mul <8 x i32> %855, %860
  %862 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %861)
  %863 = icmp eq i64 %826, %830
  br i1 %863, label %876, label %864

864:                                              ; preds = %817, %858
  %865 = phi i64 [ %820, %817 ], [ %831, %858 ]
  %866 = phi i32 [ 1, %817 ], [ %862, %858 ]
  br label %867

867:                                              ; preds = %864, %867
  %868 = phi i64 [ %873, %867 ], [ %865, %864 ]
  %869 = phi i32 [ %872, %867 ], [ %866, %864 ]
  %870 = getelementptr inbounds i32, ptr %11, i64 %868
  %871 = load i32, ptr %870, align 4, !tbaa !5
  %872 = mul nsw i32 %871, %869
  %873 = add nsw i64 %868, -1
  %874 = trunc i64 %868 to i32
  %875 = icmp sgt i32 %874, 0
  br i1 %875, label %867, label %876, !llvm.loop !790

876:                                              ; preds = %867, %858
  %877 = phi i32 [ %862, %858 ], [ %872, %867 ]
  %878 = and i64 %827, 4294967295
  %879 = getelementptr inbounds i32, ptr %6, i64 %878
  %880 = load i32, ptr %879, align 4, !tbaa !5
  %881 = mul nsw i32 %880, %877
  %882 = add nsw i32 %881, %821
  %883 = icmp sgt i64 %819, 2
  %884 = add nsw i64 %820, -1
  %885 = add i32 %818, 1
  br i1 %883, label %817, label %886, !llvm.loop !791

886:                                              ; preds = %876, %814
  %887 = phi i32 [ %816, %814 ], [ %882, %876 ]
  %888 = icmp slt i32 %887, %5
  br i1 %888, label %891, label %889

889:                                              ; preds = %886
  %890 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

891:                                              ; preds = %886
  %892 = sext i32 %887 to i64
  %893 = getelementptr inbounds i64, ptr %648, i64 %892
  %894 = load i64, ptr %893, align 8, !tbaa !120
  %895 = trunc i64 %894 to i32
  %896 = load i32, ptr %650, align 4, !tbaa !5
  %897 = icmp sgt i32 %896, %895
  br i1 %897, label %898, label %899

898:                                              ; preds = %891
  store i32 %895, ptr %650, align 4, !tbaa !5
  br label %899

899:                                              ; preds = %891, %898
  %900 = add nuw nsw i32 %815, 1
  br i1 %663, label %901, label %951

901:                                              ; preds = %899
  %902 = load i32, ptr %4, align 4, !tbaa !5
  %903 = load i32, ptr %12, align 4, !tbaa !5
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %902, %904
  br i1 %905, label %928, label %906

906:                                              ; preds = %901
  %907 = icmp eq i32 %902, %904
  br i1 %907, label %908, label %944

908:                                              ; preds = %906
  store i32 0, ptr %4, align 4, !tbaa !5
  %909 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %909, ptr %6, align 4, !tbaa !5
  br i1 %668, label %951, label %910

910:                                              ; preds = %908, %938
  %911 = phi i64 [ %942, %938 ], [ 1, %908 ]
  %912 = getelementptr inbounds i32, ptr %4, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %12, i64 %911
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = add nsw i32 %915, -1
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %936

918:                                              ; preds = %910
  br i1 %905, label %928, label %919

919:                                              ; preds = %918
  %920 = shl i64 %911, 32
  %921 = add i64 %920, -4294967296
  %922 = ashr exact i64 %921, 32
  %923 = getelementptr inbounds i32, ptr %7, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %911
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = add nsw i32 %926, %924
  store i32 %927, ptr %925, align 4, !tbaa !5
  br label %946

928:                                              ; preds = %901, %918
  %929 = phi i32 [ %913, %918 ], [ %902, %901 ]
  %930 = phi ptr [ %912, %918 ], [ %4, %901 ]
  %931 = phi i64 [ %911, %918 ], [ 0, %901 ]
  %932 = add nsw i32 %929, 1
  store i32 %932, ptr %930, align 4, !tbaa !5
  %933 = getelementptr inbounds i32, ptr %7, i64 %931
  %934 = load i32, ptr %933, align 4, !tbaa !5
  %935 = getelementptr inbounds i32, ptr %6, i64 %931
  br label %946

936:                                              ; preds = %910
  %937 = icmp eq i32 %913, %916
  br i1 %937, label %938, label %944

938:                                              ; preds = %936
  store i32 0, ptr %912, align 4, !tbaa !5
  %939 = getelementptr inbounds i32, ptr %8, i64 %911
  %940 = load i32, ptr %939, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %6, i64 %911
  store i32 %940, ptr %941, align 4, !tbaa !5
  %942 = add nuw nsw i64 %911, 1
  %943 = icmp eq i64 %942, %666
  br i1 %943, label %951, label %910, !llvm.loop !792

944:                                              ; preds = %906, %936
  %945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

946:                                              ; preds = %919, %928
  %947 = phi ptr [ %935, %928 ], [ %912, %919 ]
  %948 = phi i32 [ %934, %928 ], [ 1, %919 ]
  %949 = load i32, ptr %947, align 4, !tbaa !5
  %950 = add nsw i32 %949, %948
  store i32 %950, ptr %947, align 4, !tbaa !5
  br label %951

951:                                              ; preds = %938, %946, %908, %899
  %952 = icmp eq i32 %900, %5
  br i1 %952, label %5494, label %814, !llvm.loop !793

953:                                              ; preds = %654
  %954 = getelementptr inbounds i32, ptr %3, i64 %19
  %955 = load i32, ptr %954, align 4, !tbaa !5
  %956 = icmp eq i32 %955, 0
  %957 = icmp sgt i32 %5, 0
  br i1 %956, label %967, label %958

958:                                              ; preds = %953
  br i1 %957, label %959, label %5494

959:                                              ; preds = %958
  %960 = icmp sgt i32 %13, 1
  %961 = icmp sgt i32 %13, 0
  %962 = add i32 %13, -2
  %963 = zext i32 %962 to i64
  %964 = zext i32 %13 to i64
  %965 = add nuw i32 %5, 1
  %966 = icmp eq i32 %13, 1
  br label %1108

967:                                              ; preds = %953
  br i1 %957, label %968, label %5494

968:                                              ; preds = %967
  %969 = icmp sgt i32 %13, 1
  %970 = icmp sgt i32 %13, 0
  %971 = add i32 %13, -2
  %972 = zext i32 %971 to i64
  %973 = zext i32 %13 to i64
  %974 = add nuw i32 %5, 1
  %975 = icmp eq i32 %13, 1
  br label %976

976:                                              ; preds = %968, %1106
  %977 = phi i32 [ 0, %968 ], [ %1058, %1106 ]
  %978 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %969, label %979, label %1048

979:                                              ; preds = %976, %1038
  %980 = phi i32 [ %1047, %1038 ], [ 0, %976 ]
  %981 = phi i64 [ %989, %1038 ], [ %973, %976 ]
  %982 = phi i64 [ %1046, %1038 ], [ %972, %976 ]
  %983 = phi i32 [ %1044, %1038 ], [ %978, %976 ]
  %984 = sub i32 %971, %980
  %985 = tail call i32 @llvm.smin.i32(i32 %984, i32 0)
  %986 = sub i32 %984, %985
  %987 = zext i32 %986 to i64
  %988 = add nuw nsw i64 %987, 1
  %989 = add nsw i64 %981, -1
  %990 = icmp ult i32 %986, 31
  br i1 %990, label %1026, label %991

991:                                              ; preds = %979
  %992 = and i64 %988, 8589934560
  %993 = sub i64 %982, %992
  br label %994

994:                                              ; preds = %994, %991
  %995 = phi i64 [ 0, %991 ], [ %1018, %994 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1014, %994 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1015, %994 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1016, %994 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %991 ], [ %1017, %994 ]
  %1000 = sub i64 %982, %995
  %1001 = getelementptr inbounds i32, ptr %9, i64 %1000
  %1002 = getelementptr inbounds i32, ptr %1001, i64 -7
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = getelementptr inbounds i32, ptr %1001, i64 -15
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !5
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %1001, i64 -23
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !5
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = getelementptr inbounds i32, ptr %1001, i64 -31
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !5
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = mul <8 x i32> %1004, %996
  %1015 = mul <8 x i32> %1007, %997
  %1016 = mul <8 x i32> %1010, %998
  %1017 = mul <8 x i32> %1013, %999
  %1018 = add nuw i64 %995, 32
  %1019 = icmp eq i64 %1018, %992
  br i1 %1019, label %1020, label %994, !llvm.loop !794

1020:                                             ; preds = %994
  %1021 = mul <8 x i32> %1015, %1014
  %1022 = mul <8 x i32> %1016, %1021
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1023)
  %1025 = icmp eq i64 %988, %992
  br i1 %1025, label %1038, label %1026

1026:                                             ; preds = %979, %1020
  %1027 = phi i64 [ %982, %979 ], [ %993, %1020 ]
  %1028 = phi i32 [ 1, %979 ], [ %1024, %1020 ]
  br label %1029

1029:                                             ; preds = %1026, %1029
  %1030 = phi i64 [ %1035, %1029 ], [ %1027, %1026 ]
  %1031 = phi i32 [ %1034, %1029 ], [ %1028, %1026 ]
  %1032 = getelementptr inbounds i32, ptr %9, i64 %1030
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1031
  %1035 = add nsw i64 %1030, -1
  %1036 = trunc i64 %1030 to i32
  %1037 = icmp sgt i32 %1036, 0
  br i1 %1037, label %1029, label %1038, !llvm.loop !795

1038:                                             ; preds = %1029, %1020
  %1039 = phi i32 [ %1024, %1020 ], [ %1034, %1029 ]
  %1040 = and i64 %989, 4294967295
  %1041 = getelementptr inbounds i32, ptr %6, i64 %1040
  %1042 = load i32, ptr %1041, align 4, !tbaa !5
  %1043 = mul nsw i32 %1042, %1039
  %1044 = add nsw i32 %1043, %983
  %1045 = icmp sgt i64 %981, 2
  %1046 = add nsw i64 %982, -1
  %1047 = add i32 %980, 1
  br i1 %1045, label %979, label %1048, !llvm.loop !796

1048:                                             ; preds = %1038, %976
  %1049 = phi i32 [ %978, %976 ], [ %1044, %1038 ]
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds i64, ptr %648, i64 %1050
  %1052 = load i64, ptr %1051, align 8, !tbaa !120
  %1053 = trunc i64 %1052 to i32
  %1054 = load i32, ptr %650, align 4, !tbaa !5
  %1055 = icmp sgt i32 %1054, %1053
  br i1 %1055, label %1056, label %1057

1056:                                             ; preds = %1048
  store i32 %1053, ptr %650, align 4, !tbaa !5
  br label %1057

1057:                                             ; preds = %1056, %1048
  %1058 = add nuw nsw i32 %977, 1
  br i1 %970, label %1059, label %1106

1059:                                             ; preds = %1057
  %1060 = load i32, ptr %4, align 4, !tbaa !5
  %1061 = load i32, ptr %12, align 4, !tbaa !5
  %1062 = add nsw i32 %1061, -1
  %1063 = icmp slt i32 %1060, %1062
  br i1 %1063, label %1083, label %1064

1064:                                             ; preds = %1059
  %1065 = icmp eq i32 %1060, %1062
  br i1 %1065, label %1066, label %1099

1066:                                             ; preds = %1064
  store i32 0, ptr %4, align 4, !tbaa !5
  %1067 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1067, ptr %6, align 4, !tbaa !5
  br i1 %975, label %1106, label %1068

1068:                                             ; preds = %1066, %1093
  %1069 = phi i64 [ %1097, %1093 ], [ 1, %1066 ]
  %1070 = getelementptr inbounds i32, ptr %4, i64 %1069
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %12, i64 %1069
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = add nsw i32 %1073, -1
  %1075 = icmp slt i32 %1071, %1074
  br i1 %1075, label %1076, label %1091

1076:                                             ; preds = %1068
  br i1 %1063, label %1083, label %1077

1077:                                             ; preds = %1076
  %1078 = getelementptr inbounds i32, ptr %7, i64 %1069
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1069
  %1081 = load i32, ptr %1080, align 4, !tbaa !5
  %1082 = add nsw i32 %1081, %1079
  store i32 %1082, ptr %1080, align 4, !tbaa !5
  br label %1101

1083:                                             ; preds = %1059, %1076
  %1084 = phi i32 [ %1071, %1076 ], [ %1060, %1059 ]
  %1085 = phi ptr [ %1070, %1076 ], [ %4, %1059 ]
  %1086 = phi i64 [ %1069, %1076 ], [ 0, %1059 ]
  %1087 = add nsw i32 %1084, 1
  store i32 %1087, ptr %1085, align 4, !tbaa !5
  %1088 = getelementptr inbounds i32, ptr %7, i64 %1086
  %1089 = load i32, ptr %1088, align 4, !tbaa !5
  %1090 = getelementptr inbounds i32, ptr %6, i64 %1086
  br label %1101

1091:                                             ; preds = %1068
  %1092 = icmp eq i32 %1071, %1074
  br i1 %1092, label %1093, label %1099

1093:                                             ; preds = %1091
  store i32 0, ptr %1070, align 4, !tbaa !5
  %1094 = getelementptr inbounds i32, ptr %8, i64 %1069
  %1095 = load i32, ptr %1094, align 4, !tbaa !5
  %1096 = getelementptr inbounds i32, ptr %6, i64 %1069
  store i32 %1095, ptr %1096, align 4, !tbaa !5
  %1097 = add nuw nsw i64 %1069, 1
  %1098 = icmp eq i64 %1097, %973
  br i1 %1098, label %1106, label %1068, !llvm.loop !797

1099:                                             ; preds = %1064, %1091
  %1100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1101:                                             ; preds = %1077, %1083
  %1102 = phi ptr [ %1090, %1083 ], [ %1070, %1077 ]
  %1103 = phi i32 [ %1089, %1083 ], [ 1, %1077 ]
  %1104 = load i32, ptr %1102, align 4, !tbaa !5
  %1105 = add nsw i32 %1104, %1103
  store i32 %1105, ptr %1102, align 4, !tbaa !5
  br label %1106

1106:                                             ; preds = %1093, %1101, %1066, %1057
  %1107 = icmp eq i32 %1058, %5
  br i1 %1107, label %5494, label %976, !llvm.loop !798

1108:                                             ; preds = %959, %1245
  %1109 = phi i32 [ 0, %959 ], [ %1194, %1245 ]
  %1110 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %960, label %1111, label %1180

1111:                                             ; preds = %1108, %1170
  %1112 = phi i32 [ %1179, %1170 ], [ 0, %1108 ]
  %1113 = phi i64 [ %1121, %1170 ], [ %964, %1108 ]
  %1114 = phi i64 [ %1178, %1170 ], [ %963, %1108 ]
  %1115 = phi i32 [ %1176, %1170 ], [ %1110, %1108 ]
  %1116 = sub i32 %962, %1112
  %1117 = tail call i32 @llvm.smin.i32(i32 %1116, i32 0)
  %1118 = sub i32 %1116, %1117
  %1119 = zext i32 %1118 to i64
  %1120 = add nuw nsw i64 %1119, 1
  %1121 = add nsw i64 %1113, -1
  %1122 = icmp ult i32 %1118, 31
  br i1 %1122, label %1158, label %1123

1123:                                             ; preds = %1111
  %1124 = and i64 %1120, 8589934560
  %1125 = sub i64 %1114, %1124
  br label %1126

1126:                                             ; preds = %1126, %1123
  %1127 = phi i64 [ 0, %1123 ], [ %1150, %1126 ]
  %1128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1123 ], [ %1146, %1126 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1123 ], [ %1147, %1126 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1123 ], [ %1148, %1126 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1123 ], [ %1149, %1126 ]
  %1132 = sub i64 %1114, %1127
  %1133 = getelementptr inbounds i32, ptr %11, i64 %1132
  %1134 = getelementptr inbounds i32, ptr %1133, i64 -7
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = getelementptr inbounds i32, ptr %1133, i64 -15
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = getelementptr inbounds i32, ptr %1133, i64 -23
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1133, i64 -31
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = mul <8 x i32> %1136, %1128
  %1147 = mul <8 x i32> %1139, %1129
  %1148 = mul <8 x i32> %1142, %1130
  %1149 = mul <8 x i32> %1145, %1131
  %1150 = add nuw i64 %1127, 32
  %1151 = icmp eq i64 %1150, %1124
  br i1 %1151, label %1152, label %1126, !llvm.loop !799

1152:                                             ; preds = %1126
  %1153 = mul <8 x i32> %1147, %1146
  %1154 = mul <8 x i32> %1148, %1153
  %1155 = mul <8 x i32> %1149, %1154
  %1156 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1155)
  %1157 = icmp eq i64 %1120, %1124
  br i1 %1157, label %1170, label %1158

1158:                                             ; preds = %1111, %1152
  %1159 = phi i64 [ %1114, %1111 ], [ %1125, %1152 ]
  %1160 = phi i32 [ 1, %1111 ], [ %1156, %1152 ]
  br label %1161

1161:                                             ; preds = %1158, %1161
  %1162 = phi i64 [ %1167, %1161 ], [ %1159, %1158 ]
  %1163 = phi i32 [ %1166, %1161 ], [ %1160, %1158 ]
  %1164 = getelementptr inbounds i32, ptr %11, i64 %1162
  %1165 = load i32, ptr %1164, align 4, !tbaa !5
  %1166 = mul nsw i32 %1165, %1163
  %1167 = add nsw i64 %1162, -1
  %1168 = trunc i64 %1162 to i32
  %1169 = icmp sgt i32 %1168, 0
  br i1 %1169, label %1161, label %1170, !llvm.loop !800

1170:                                             ; preds = %1161, %1152
  %1171 = phi i32 [ %1156, %1152 ], [ %1166, %1161 ]
  %1172 = and i64 %1121, 4294967295
  %1173 = getelementptr inbounds i32, ptr %6, i64 %1172
  %1174 = load i32, ptr %1173, align 4, !tbaa !5
  %1175 = mul nsw i32 %1174, %1171
  %1176 = add nsw i32 %1175, %1115
  %1177 = icmp sgt i64 %1113, 2
  %1178 = add nsw i64 %1114, -1
  %1179 = add i32 %1112, 1
  br i1 %1177, label %1111, label %1180, !llvm.loop !801

1180:                                             ; preds = %1170, %1108
  %1181 = phi i32 [ %1110, %1108 ], [ %1176, %1170 ]
  %1182 = icmp slt i32 %1181, %5
  br i1 %1182, label %1185, label %1183

1183:                                             ; preds = %1180
  %1184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

1185:                                             ; preds = %1180
  %1186 = sext i32 %1181 to i64
  %1187 = getelementptr inbounds i64, ptr %648, i64 %1186
  %1188 = load i64, ptr %1187, align 8, !tbaa !120
  %1189 = trunc i64 %1188 to i32
  %1190 = load i32, ptr %650, align 4, !tbaa !5
  %1191 = icmp sgt i32 %1190, %1189
  br i1 %1191, label %1192, label %1193

1192:                                             ; preds = %1185
  store i32 %1189, ptr %650, align 4, !tbaa !5
  br label %1193

1193:                                             ; preds = %1192, %1185
  %1194 = add nuw nsw i32 %1109, 1
  br i1 %961, label %1195, label %1245

1195:                                             ; preds = %1193
  %1196 = load i32, ptr %4, align 4, !tbaa !5
  %1197 = load i32, ptr %12, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1196, %1198
  br i1 %1199, label %1222, label %1200

1200:                                             ; preds = %1195
  %1201 = icmp eq i32 %1196, %1198
  br i1 %1201, label %1202, label %1238

1202:                                             ; preds = %1200
  store i32 0, ptr %4, align 4, !tbaa !5
  %1203 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1203, ptr %6, align 4, !tbaa !5
  br i1 %966, label %1245, label %1204

1204:                                             ; preds = %1202, %1232
  %1205 = phi i64 [ %1236, %1232 ], [ 1, %1202 ]
  %1206 = getelementptr inbounds i32, ptr %4, i64 %1205
  %1207 = load i32, ptr %1206, align 4, !tbaa !5
  %1208 = getelementptr inbounds i32, ptr %12, i64 %1205
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = add nsw i32 %1209, -1
  %1211 = icmp slt i32 %1207, %1210
  br i1 %1211, label %1212, label %1230

1212:                                             ; preds = %1204
  br i1 %1199, label %1222, label %1213

1213:                                             ; preds = %1212
  %1214 = shl i64 %1205, 32
  %1215 = add i64 %1214, -4294967296
  %1216 = ashr exact i64 %1215, 32
  %1217 = getelementptr inbounds i32, ptr %7, i64 %1216
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1205
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = add nsw i32 %1220, %1218
  store i32 %1221, ptr %1219, align 4, !tbaa !5
  br label %1240

1222:                                             ; preds = %1195, %1212
  %1223 = phi i32 [ %1207, %1212 ], [ %1196, %1195 ]
  %1224 = phi ptr [ %1206, %1212 ], [ %4, %1195 ]
  %1225 = phi i64 [ %1205, %1212 ], [ 0, %1195 ]
  %1226 = add nsw i32 %1223, 1
  store i32 %1226, ptr %1224, align 4, !tbaa !5
  %1227 = getelementptr inbounds i32, ptr %7, i64 %1225
  %1228 = load i32, ptr %1227, align 4, !tbaa !5
  %1229 = getelementptr inbounds i32, ptr %6, i64 %1225
  br label %1240

1230:                                             ; preds = %1204
  %1231 = icmp eq i32 %1207, %1210
  br i1 %1231, label %1232, label %1238

1232:                                             ; preds = %1230
  store i32 0, ptr %1206, align 4, !tbaa !5
  %1233 = getelementptr inbounds i32, ptr %8, i64 %1205
  %1234 = load i32, ptr %1233, align 4, !tbaa !5
  %1235 = getelementptr inbounds i32, ptr %6, i64 %1205
  store i32 %1234, ptr %1235, align 4, !tbaa !5
  %1236 = add nuw nsw i64 %1205, 1
  %1237 = icmp eq i64 %1236, %964
  br i1 %1237, label %1245, label %1204, !llvm.loop !802

1238:                                             ; preds = %1200, %1230
  %1239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1240:                                             ; preds = %1213, %1222
  %1241 = phi ptr [ %1229, %1222 ], [ %1206, %1213 ]
  %1242 = phi i32 [ %1228, %1222 ], [ 1, %1213 ]
  %1243 = load i32, ptr %1241, align 4, !tbaa !5
  %1244 = add nsw i32 %1243, %1242
  store i32 %1244, ptr %1241, align 4, !tbaa !5
  br label %1245

1245:                                             ; preds = %1232, %1240, %1202, %1193
  %1246 = icmp eq i32 %1194, %5
  br i1 %1246, label %5494, label %1108, !llvm.loop !803

1247:                                             ; preds = %654
  %1248 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1248, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

1249:                                             ; preds = %18
  %1250 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1251 = load ptr, ptr %1250, align 8, !tbaa !9
  %1252 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !9
  %1254 = load i64, ptr %1251, align 8, !tbaa !120
  %1255 = trunc i64 %1254 to i8
  store i8 %1255, ptr %1253, align 1, !tbaa !11
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1262

1257:                                             ; preds = %1249
  %1258 = load i64, ptr %1251, align 8, !tbaa !120
  %1259 = trunc i64 %1258 to i8
  %1260 = icmp sgt i8 %1255, %1259
  br i1 %1260, label %1261, label %5494

1261:                                             ; preds = %1257
  store i8 %1259, ptr %1253, align 1, !tbaa !11
  br label %5494

1262:                                             ; preds = %1249
  switch i32 %1, label %1855 [
    i32 1, label %1263
    i32 0, label %1561
  ]

1263:                                             ; preds = %1262
  %1264 = getelementptr inbounds i32, ptr %3, i64 %19
  %1265 = load i32, ptr %1264, align 4, !tbaa !5
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp sgt i32 %5, 0
  br i1 %1266, label %1277, label %1268

1268:                                             ; preds = %1263
  br i1 %1267, label %1269, label %5494

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1422

1277:                                             ; preds = %1263
  br i1 %1267, label %1278, label %5494

1278:                                             ; preds = %1277
  %1279 = icmp sgt i32 %13, 1
  %1280 = icmp sgt i32 %13, 0
  %1281 = add i32 %13, -2
  %1282 = zext i32 %1281 to i64
  %1283 = zext i32 %13 to i64
  %1284 = add nuw i32 %5, 1
  %1285 = icmp eq i32 %13, 1
  br label %1286

1286:                                             ; preds = %1278, %1420
  %1287 = phi i32 [ 0, %1278 ], [ %1372, %1420 ]
  %1288 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1279, label %1289, label %1358

1289:                                             ; preds = %1286, %1348
  %1290 = phi i32 [ %1357, %1348 ], [ 0, %1286 ]
  %1291 = phi i64 [ %1299, %1348 ], [ %1283, %1286 ]
  %1292 = phi i64 [ %1356, %1348 ], [ %1282, %1286 ]
  %1293 = phi i32 [ %1354, %1348 ], [ %1288, %1286 ]
  %1294 = sub i32 %1281, %1290
  %1295 = tail call i32 @llvm.smin.i32(i32 %1294, i32 0)
  %1296 = sub i32 %1294, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = add nuw nsw i64 %1297, 1
  %1299 = add nsw i64 %1291, -1
  %1300 = icmp ult i32 %1296, 31
  br i1 %1300, label %1336, label %1301

1301:                                             ; preds = %1289
  %1302 = and i64 %1298, 8589934560
  %1303 = sub i64 %1292, %1302
  br label %1304

1304:                                             ; preds = %1304, %1301
  %1305 = phi i64 [ 0, %1301 ], [ %1328, %1304 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1324, %1304 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1325, %1304 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1326, %1304 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1327, %1304 ]
  %1310 = sub i64 %1292, %1305
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1312 = getelementptr inbounds i32, ptr %1311, i64 -7
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !5
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1311, i64 -15
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !5
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1311, i64 -23
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !5
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = getelementptr inbounds i32, ptr %1311, i64 -31
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = mul <8 x i32> %1314, %1306
  %1325 = mul <8 x i32> %1317, %1307
  %1326 = mul <8 x i32> %1320, %1308
  %1327 = mul <8 x i32> %1323, %1309
  %1328 = add nuw i64 %1305, 32
  %1329 = icmp eq i64 %1328, %1302
  br i1 %1329, label %1330, label %1304, !llvm.loop !804

1330:                                             ; preds = %1304
  %1331 = mul <8 x i32> %1325, %1324
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1333)
  %1335 = icmp eq i64 %1298, %1302
  br i1 %1335, label %1348, label %1336

1336:                                             ; preds = %1289, %1330
  %1337 = phi i64 [ %1292, %1289 ], [ %1303, %1330 ]
  %1338 = phi i32 [ 1, %1289 ], [ %1334, %1330 ]
  br label %1339

1339:                                             ; preds = %1336, %1339
  %1340 = phi i64 [ %1345, %1339 ], [ %1337, %1336 ]
  %1341 = phi i32 [ %1344, %1339 ], [ %1338, %1336 ]
  %1342 = getelementptr inbounds i32, ptr %9, i64 %1340
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = mul nsw i32 %1343, %1341
  %1345 = add nsw i64 %1340, -1
  %1346 = trunc i64 %1340 to i32
  %1347 = icmp sgt i32 %1346, 0
  br i1 %1347, label %1339, label %1348, !llvm.loop !805

1348:                                             ; preds = %1339, %1330
  %1349 = phi i32 [ %1334, %1330 ], [ %1344, %1339 ]
  %1350 = and i64 %1299, 4294967295
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1349
  %1354 = add nsw i32 %1353, %1293
  %1355 = icmp sgt i64 %1291, 2
  %1356 = add nsw i64 %1292, -1
  %1357 = add i32 %1290, 1
  br i1 %1355, label %1289, label %1358, !llvm.loop !806

1358:                                             ; preds = %1348, %1286
  %1359 = phi i32 [ %1288, %1286 ], [ %1354, %1348 ]
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds double, ptr %2, i64 %1360
  %1362 = load double, ptr %1361, align 8, !tbaa !18
  %1363 = getelementptr inbounds i64, ptr %1251, i64 %1360
  %1364 = load i64, ptr %1363, align 8, !tbaa !120
  %1365 = trunc i64 %1364 to i8
  %1366 = fcmp fast ueq double %1362, 0.000000e+00
  br i1 %1366, label %1371, label %1367

1367:                                             ; preds = %1358
  %1368 = load i8, ptr %1253, align 1, !tbaa !11
  %1369 = icmp sgt i8 %1368, %1365
  br i1 %1369, label %1370, label %1371

1370:                                             ; preds = %1367
  store i8 %1365, ptr %1253, align 1, !tbaa !11
  br label %1371

1371:                                             ; preds = %1367, %1370, %1358
  %1372 = add nuw nsw i32 %1287, 1
  br i1 %1280, label %1373, label %1420

1373:                                             ; preds = %1371
  %1374 = load i32, ptr %4, align 4, !tbaa !5
  %1375 = load i32, ptr %12, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1374, %1376
  br i1 %1377, label %1397, label %1378

1378:                                             ; preds = %1373
  %1379 = icmp eq i32 %1374, %1376
  br i1 %1379, label %1380, label %1413

1380:                                             ; preds = %1378
  store i32 0, ptr %4, align 4, !tbaa !5
  %1381 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1381, ptr %6, align 4, !tbaa !5
  br i1 %1285, label %1420, label %1382

1382:                                             ; preds = %1380, %1407
  %1383 = phi i64 [ %1411, %1407 ], [ 1, %1380 ]
  %1384 = getelementptr inbounds i32, ptr %4, i64 %1383
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %12, i64 %1383
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = add nsw i32 %1387, -1
  %1389 = icmp slt i32 %1385, %1388
  br i1 %1389, label %1390, label %1405

1390:                                             ; preds = %1382
  br i1 %1377, label %1397, label %1391

1391:                                             ; preds = %1390
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1383
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1383
  %1395 = load i32, ptr %1394, align 4, !tbaa !5
  %1396 = add nsw i32 %1395, %1393
  store i32 %1396, ptr %1394, align 4, !tbaa !5
  br label %1415

1397:                                             ; preds = %1373, %1390
  %1398 = phi i32 [ %1385, %1390 ], [ %1374, %1373 ]
  %1399 = phi ptr [ %1384, %1390 ], [ %4, %1373 ]
  %1400 = phi i64 [ %1383, %1390 ], [ 0, %1373 ]
  %1401 = add nsw i32 %1398, 1
  store i32 %1401, ptr %1399, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %7, i64 %1400
  %1403 = load i32, ptr %1402, align 4, !tbaa !5
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1400
  br label %1415

1405:                                             ; preds = %1382
  %1406 = icmp eq i32 %1385, %1388
  br i1 %1406, label %1407, label %1413

1407:                                             ; preds = %1405
  store i32 0, ptr %1384, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %8, i64 %1383
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1383
  store i32 %1409, ptr %1410, align 4, !tbaa !5
  %1411 = add nuw nsw i64 %1383, 1
  %1412 = icmp eq i64 %1411, %1283
  br i1 %1412, label %1420, label %1382, !llvm.loop !807

1413:                                             ; preds = %1378, %1405
  %1414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1415:                                             ; preds = %1391, %1397
  %1416 = phi ptr [ %1404, %1397 ], [ %1384, %1391 ]
  %1417 = phi i32 [ %1403, %1397 ], [ 1, %1391 ]
  %1418 = load i32, ptr %1416, align 4, !tbaa !5
  %1419 = add nsw i32 %1418, %1417
  store i32 %1419, ptr %1416, align 4, !tbaa !5
  br label %1420

1420:                                             ; preds = %1407, %1415, %1380, %1371
  %1421 = icmp eq i32 %1372, %5
  br i1 %1421, label %5494, label %1286, !llvm.loop !808

1422:                                             ; preds = %1269, %1559
  %1423 = phi i32 [ 0, %1269 ], [ %1508, %1559 ]
  %1424 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1425, label %1494

1425:                                             ; preds = %1422, %1484
  %1426 = phi i32 [ %1493, %1484 ], [ 0, %1422 ]
  %1427 = phi i64 [ %1435, %1484 ], [ %1274, %1422 ]
  %1428 = phi i64 [ %1492, %1484 ], [ %1273, %1422 ]
  %1429 = phi i32 [ %1490, %1484 ], [ %1424, %1422 ]
  %1430 = sub i32 %1272, %1426
  %1431 = tail call i32 @llvm.smin.i32(i32 %1430, i32 0)
  %1432 = sub i32 %1430, %1431
  %1433 = zext i32 %1432 to i64
  %1434 = add nuw nsw i64 %1433, 1
  %1435 = add nsw i64 %1427, -1
  %1436 = icmp ult i32 %1432, 31
  br i1 %1436, label %1472, label %1437

1437:                                             ; preds = %1425
  %1438 = and i64 %1434, 8589934560
  %1439 = sub i64 %1428, %1438
  br label %1440

1440:                                             ; preds = %1440, %1437
  %1441 = phi i64 [ 0, %1437 ], [ %1464, %1440 ]
  %1442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1437 ], [ %1460, %1440 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1437 ], [ %1461, %1440 ]
  %1444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1437 ], [ %1462, %1440 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1437 ], [ %1463, %1440 ]
  %1446 = sub i64 %1428, %1441
  %1447 = getelementptr inbounds i32, ptr %11, i64 %1446
  %1448 = getelementptr inbounds i32, ptr %1447, i64 -7
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !5
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1447, i64 -15
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !5
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = getelementptr inbounds i32, ptr %1447, i64 -23
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = getelementptr inbounds i32, ptr %1447, i64 -31
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !5
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = mul <8 x i32> %1450, %1442
  %1461 = mul <8 x i32> %1453, %1443
  %1462 = mul <8 x i32> %1456, %1444
  %1463 = mul <8 x i32> %1459, %1445
  %1464 = add nuw i64 %1441, 32
  %1465 = icmp eq i64 %1464, %1438
  br i1 %1465, label %1466, label %1440, !llvm.loop !809

1466:                                             ; preds = %1440
  %1467 = mul <8 x i32> %1461, %1460
  %1468 = mul <8 x i32> %1462, %1467
  %1469 = mul <8 x i32> %1463, %1468
  %1470 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1469)
  %1471 = icmp eq i64 %1434, %1438
  br i1 %1471, label %1484, label %1472

1472:                                             ; preds = %1425, %1466
  %1473 = phi i64 [ %1428, %1425 ], [ %1439, %1466 ]
  %1474 = phi i32 [ 1, %1425 ], [ %1470, %1466 ]
  br label %1475

1475:                                             ; preds = %1472, %1475
  %1476 = phi i64 [ %1481, %1475 ], [ %1473, %1472 ]
  %1477 = phi i32 [ %1480, %1475 ], [ %1474, %1472 ]
  %1478 = getelementptr inbounds i32, ptr %11, i64 %1476
  %1479 = load i32, ptr %1478, align 4, !tbaa !5
  %1480 = mul nsw i32 %1479, %1477
  %1481 = add nsw i64 %1476, -1
  %1482 = trunc i64 %1476 to i32
  %1483 = icmp sgt i32 %1482, 0
  br i1 %1483, label %1475, label %1484, !llvm.loop !810

1484:                                             ; preds = %1475, %1466
  %1485 = phi i32 [ %1470, %1466 ], [ %1480, %1475 ]
  %1486 = and i64 %1435, 4294967295
  %1487 = getelementptr inbounds i32, ptr %6, i64 %1486
  %1488 = load i32, ptr %1487, align 4, !tbaa !5
  %1489 = mul nsw i32 %1488, %1485
  %1490 = add nsw i32 %1489, %1429
  %1491 = icmp sgt i64 %1427, 2
  %1492 = add nsw i64 %1428, -1
  %1493 = add i32 %1426, 1
  br i1 %1491, label %1425, label %1494, !llvm.loop !811

1494:                                             ; preds = %1484, %1422
  %1495 = phi i32 [ %1424, %1422 ], [ %1490, %1484 ]
  %1496 = icmp slt i32 %1495, %5
  br i1 %1496, label %1499, label %1497

1497:                                             ; preds = %1494
  %1498 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

1499:                                             ; preds = %1494
  %1500 = sext i32 %1495 to i64
  %1501 = getelementptr inbounds i64, ptr %1251, i64 %1500
  %1502 = load i64, ptr %1501, align 8, !tbaa !120
  %1503 = trunc i64 %1502 to i8
  %1504 = load i8, ptr %1253, align 1, !tbaa !11
  %1505 = icmp sgt i8 %1504, %1503
  br i1 %1505, label %1506, label %1507

1506:                                             ; preds = %1499
  store i8 %1503, ptr %1253, align 1, !tbaa !11
  br label %1507

1507:                                             ; preds = %1499, %1506
  %1508 = add nuw nsw i32 %1423, 1
  br i1 %1271, label %1509, label %1559

1509:                                             ; preds = %1507
  %1510 = load i32, ptr %4, align 4, !tbaa !5
  %1511 = load i32, ptr %12, align 4, !tbaa !5
  %1512 = add nsw i32 %1511, -1
  %1513 = icmp slt i32 %1510, %1512
  br i1 %1513, label %1536, label %1514

1514:                                             ; preds = %1509
  %1515 = icmp eq i32 %1510, %1512
  br i1 %1515, label %1516, label %1552

1516:                                             ; preds = %1514
  store i32 0, ptr %4, align 4, !tbaa !5
  %1517 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1517, ptr %6, align 4, !tbaa !5
  br i1 %1276, label %1559, label %1518

1518:                                             ; preds = %1516, %1546
  %1519 = phi i64 [ %1550, %1546 ], [ 1, %1516 ]
  %1520 = getelementptr inbounds i32, ptr %4, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %12, i64 %1519
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, -1
  %1525 = icmp slt i32 %1521, %1524
  br i1 %1525, label %1526, label %1544

1526:                                             ; preds = %1518
  br i1 %1513, label %1536, label %1527

1527:                                             ; preds = %1526
  %1528 = shl i64 %1519, 32
  %1529 = add i64 %1528, -4294967296
  %1530 = ashr exact i64 %1529, 32
  %1531 = getelementptr inbounds i32, ptr %7, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %6, i64 %1519
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = add nsw i32 %1534, %1532
  store i32 %1535, ptr %1533, align 4, !tbaa !5
  br label %1554

1536:                                             ; preds = %1509, %1526
  %1537 = phi i32 [ %1521, %1526 ], [ %1510, %1509 ]
  %1538 = phi ptr [ %1520, %1526 ], [ %4, %1509 ]
  %1539 = phi i64 [ %1519, %1526 ], [ 0, %1509 ]
  %1540 = add nsw i32 %1537, 1
  store i32 %1540, ptr %1538, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %7, i64 %1539
  %1542 = load i32, ptr %1541, align 4, !tbaa !5
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1539
  br label %1554

1544:                                             ; preds = %1518
  %1545 = icmp eq i32 %1521, %1524
  br i1 %1545, label %1546, label %1552

1546:                                             ; preds = %1544
  store i32 0, ptr %1520, align 4, !tbaa !5
  %1547 = getelementptr inbounds i32, ptr %8, i64 %1519
  %1548 = load i32, ptr %1547, align 4, !tbaa !5
  %1549 = getelementptr inbounds i32, ptr %6, i64 %1519
  store i32 %1548, ptr %1549, align 4, !tbaa !5
  %1550 = add nuw nsw i64 %1519, 1
  %1551 = icmp eq i64 %1550, %1274
  br i1 %1551, label %1559, label %1518, !llvm.loop !812

1552:                                             ; preds = %1514, %1544
  %1553 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1554:                                             ; preds = %1527, %1536
  %1555 = phi ptr [ %1543, %1536 ], [ %1520, %1527 ]
  %1556 = phi i32 [ %1542, %1536 ], [ 1, %1527 ]
  %1557 = load i32, ptr %1555, align 4, !tbaa !5
  %1558 = add nsw i32 %1557, %1556
  store i32 %1558, ptr %1555, align 4, !tbaa !5
  br label %1559

1559:                                             ; preds = %1546, %1554, %1516, %1507
  %1560 = icmp eq i32 %1508, %5
  br i1 %1560, label %5494, label %1422, !llvm.loop !813

1561:                                             ; preds = %1262
  %1562 = getelementptr inbounds i32, ptr %3, i64 %19
  %1563 = load i32, ptr %1562, align 4, !tbaa !5
  %1564 = icmp eq i32 %1563, 0
  %1565 = icmp sgt i32 %5, 0
  br i1 %1564, label %1575, label %1566

1566:                                             ; preds = %1561
  br i1 %1565, label %1567, label %5494

1567:                                             ; preds = %1566
  %1568 = icmp sgt i32 %13, 1
  %1569 = icmp sgt i32 %13, 0
  %1570 = add i32 %13, -2
  %1571 = zext i32 %1570 to i64
  %1572 = zext i32 %13 to i64
  %1573 = add nuw i32 %5, 1
  %1574 = icmp eq i32 %13, 1
  br label %1716

1575:                                             ; preds = %1561
  br i1 %1565, label %1576, label %5494

1576:                                             ; preds = %1575
  %1577 = icmp sgt i32 %13, 1
  %1578 = icmp sgt i32 %13, 0
  %1579 = add i32 %13, -2
  %1580 = zext i32 %1579 to i64
  %1581 = zext i32 %13 to i64
  %1582 = add nuw i32 %5, 1
  %1583 = icmp eq i32 %13, 1
  br label %1584

1584:                                             ; preds = %1576, %1714
  %1585 = phi i32 [ 0, %1576 ], [ %1666, %1714 ]
  %1586 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1577, label %1587, label %1656

1587:                                             ; preds = %1584, %1646
  %1588 = phi i32 [ %1655, %1646 ], [ 0, %1584 ]
  %1589 = phi i64 [ %1597, %1646 ], [ %1581, %1584 ]
  %1590 = phi i64 [ %1654, %1646 ], [ %1580, %1584 ]
  %1591 = phi i32 [ %1652, %1646 ], [ %1586, %1584 ]
  %1592 = sub i32 %1579, %1588
  %1593 = tail call i32 @llvm.smin.i32(i32 %1592, i32 0)
  %1594 = sub i32 %1592, %1593
  %1595 = zext i32 %1594 to i64
  %1596 = add nuw nsw i64 %1595, 1
  %1597 = add nsw i64 %1589, -1
  %1598 = icmp ult i32 %1594, 31
  br i1 %1598, label %1634, label %1599

1599:                                             ; preds = %1587
  %1600 = and i64 %1596, 8589934560
  %1601 = sub i64 %1590, %1600
  br label %1602

1602:                                             ; preds = %1602, %1599
  %1603 = phi i64 [ 0, %1599 ], [ %1626, %1602 ]
  %1604 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1599 ], [ %1622, %1602 ]
  %1605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1599 ], [ %1623, %1602 ]
  %1606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1599 ], [ %1624, %1602 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1599 ], [ %1625, %1602 ]
  %1608 = sub i64 %1590, %1603
  %1609 = getelementptr inbounds i32, ptr %9, i64 %1608
  %1610 = getelementptr inbounds i32, ptr %1609, i64 -7
  %1611 = load <8 x i32>, ptr %1610, align 4, !tbaa !5
  %1612 = shufflevector <8 x i32> %1611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1613 = getelementptr inbounds i32, ptr %1609, i64 -15
  %1614 = load <8 x i32>, ptr %1613, align 4, !tbaa !5
  %1615 = shufflevector <8 x i32> %1614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1616 = getelementptr inbounds i32, ptr %1609, i64 -23
  %1617 = load <8 x i32>, ptr %1616, align 4, !tbaa !5
  %1618 = shufflevector <8 x i32> %1617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1619 = getelementptr inbounds i32, ptr %1609, i64 -31
  %1620 = load <8 x i32>, ptr %1619, align 4, !tbaa !5
  %1621 = shufflevector <8 x i32> %1620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1622 = mul <8 x i32> %1612, %1604
  %1623 = mul <8 x i32> %1615, %1605
  %1624 = mul <8 x i32> %1618, %1606
  %1625 = mul <8 x i32> %1621, %1607
  %1626 = add nuw i64 %1603, 32
  %1627 = icmp eq i64 %1626, %1600
  br i1 %1627, label %1628, label %1602, !llvm.loop !814

1628:                                             ; preds = %1602
  %1629 = mul <8 x i32> %1623, %1622
  %1630 = mul <8 x i32> %1624, %1629
  %1631 = mul <8 x i32> %1625, %1630
  %1632 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1631)
  %1633 = icmp eq i64 %1596, %1600
  br i1 %1633, label %1646, label %1634

1634:                                             ; preds = %1587, %1628
  %1635 = phi i64 [ %1590, %1587 ], [ %1601, %1628 ]
  %1636 = phi i32 [ 1, %1587 ], [ %1632, %1628 ]
  br label %1637

1637:                                             ; preds = %1634, %1637
  %1638 = phi i64 [ %1643, %1637 ], [ %1635, %1634 ]
  %1639 = phi i32 [ %1642, %1637 ], [ %1636, %1634 ]
  %1640 = getelementptr inbounds i32, ptr %9, i64 %1638
  %1641 = load i32, ptr %1640, align 4, !tbaa !5
  %1642 = mul nsw i32 %1641, %1639
  %1643 = add nsw i64 %1638, -1
  %1644 = trunc i64 %1638 to i32
  %1645 = icmp sgt i32 %1644, 0
  br i1 %1645, label %1637, label %1646, !llvm.loop !815

1646:                                             ; preds = %1637, %1628
  %1647 = phi i32 [ %1632, %1628 ], [ %1642, %1637 ]
  %1648 = and i64 %1597, 4294967295
  %1649 = getelementptr inbounds i32, ptr %6, i64 %1648
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = mul nsw i32 %1650, %1647
  %1652 = add nsw i32 %1651, %1591
  %1653 = icmp sgt i64 %1589, 2
  %1654 = add nsw i64 %1590, -1
  %1655 = add i32 %1588, 1
  br i1 %1653, label %1587, label %1656, !llvm.loop !816

1656:                                             ; preds = %1646, %1584
  %1657 = phi i32 [ %1586, %1584 ], [ %1652, %1646 ]
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds i64, ptr %1251, i64 %1658
  %1660 = load i64, ptr %1659, align 8, !tbaa !120
  %1661 = trunc i64 %1660 to i8
  %1662 = load i8, ptr %1253, align 1, !tbaa !11
  %1663 = icmp sgt i8 %1662, %1661
  br i1 %1663, label %1664, label %1665

1664:                                             ; preds = %1656
  store i8 %1661, ptr %1253, align 1, !tbaa !11
  br label %1665

1665:                                             ; preds = %1664, %1656
  %1666 = add nuw nsw i32 %1585, 1
  br i1 %1578, label %1667, label %1714

1667:                                             ; preds = %1665
  %1668 = load i32, ptr %4, align 4, !tbaa !5
  %1669 = load i32, ptr %12, align 4, !tbaa !5
  %1670 = add nsw i32 %1669, -1
  %1671 = icmp slt i32 %1668, %1670
  br i1 %1671, label %1691, label %1672

1672:                                             ; preds = %1667
  %1673 = icmp eq i32 %1668, %1670
  br i1 %1673, label %1674, label %1707

1674:                                             ; preds = %1672
  store i32 0, ptr %4, align 4, !tbaa !5
  %1675 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1675, ptr %6, align 4, !tbaa !5
  br i1 %1583, label %1714, label %1676

1676:                                             ; preds = %1674, %1701
  %1677 = phi i64 [ %1705, %1701 ], [ 1, %1674 ]
  %1678 = getelementptr inbounds i32, ptr %4, i64 %1677
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %12, i64 %1677
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = add nsw i32 %1681, -1
  %1683 = icmp slt i32 %1679, %1682
  br i1 %1683, label %1684, label %1699

1684:                                             ; preds = %1676
  br i1 %1671, label %1691, label %1685

1685:                                             ; preds = %1684
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1677
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1677
  %1689 = load i32, ptr %1688, align 4, !tbaa !5
  %1690 = add nsw i32 %1689, %1687
  store i32 %1690, ptr %1688, align 4, !tbaa !5
  br label %1709

1691:                                             ; preds = %1667, %1684
  %1692 = phi i32 [ %1679, %1684 ], [ %1668, %1667 ]
  %1693 = phi ptr [ %1678, %1684 ], [ %4, %1667 ]
  %1694 = phi i64 [ %1677, %1684 ], [ 0, %1667 ]
  %1695 = add nsw i32 %1692, 1
  store i32 %1695, ptr %1693, align 4, !tbaa !5
  %1696 = getelementptr inbounds i32, ptr %7, i64 %1694
  %1697 = load i32, ptr %1696, align 4, !tbaa !5
  %1698 = getelementptr inbounds i32, ptr %6, i64 %1694
  br label %1709

1699:                                             ; preds = %1676
  %1700 = icmp eq i32 %1679, %1682
  br i1 %1700, label %1701, label %1707

1701:                                             ; preds = %1699
  store i32 0, ptr %1678, align 4, !tbaa !5
  %1702 = getelementptr inbounds i32, ptr %8, i64 %1677
  %1703 = load i32, ptr %1702, align 4, !tbaa !5
  %1704 = getelementptr inbounds i32, ptr %6, i64 %1677
  store i32 %1703, ptr %1704, align 4, !tbaa !5
  %1705 = add nuw nsw i64 %1677, 1
  %1706 = icmp eq i64 %1705, %1581
  br i1 %1706, label %1714, label %1676, !llvm.loop !817

1707:                                             ; preds = %1672, %1699
  %1708 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1709:                                             ; preds = %1685, %1691
  %1710 = phi ptr [ %1698, %1691 ], [ %1678, %1685 ]
  %1711 = phi i32 [ %1697, %1691 ], [ 1, %1685 ]
  %1712 = load i32, ptr %1710, align 4, !tbaa !5
  %1713 = add nsw i32 %1712, %1711
  store i32 %1713, ptr %1710, align 4, !tbaa !5
  br label %1714

1714:                                             ; preds = %1701, %1709, %1674, %1665
  %1715 = icmp eq i32 %1666, %5
  br i1 %1715, label %5494, label %1584, !llvm.loop !818

1716:                                             ; preds = %1567, %1853
  %1717 = phi i32 [ 0, %1567 ], [ %1802, %1853 ]
  %1718 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1568, label %1719, label %1788

1719:                                             ; preds = %1716, %1778
  %1720 = phi i32 [ %1787, %1778 ], [ 0, %1716 ]
  %1721 = phi i64 [ %1729, %1778 ], [ %1572, %1716 ]
  %1722 = phi i64 [ %1786, %1778 ], [ %1571, %1716 ]
  %1723 = phi i32 [ %1784, %1778 ], [ %1718, %1716 ]
  %1724 = sub i32 %1570, %1720
  %1725 = tail call i32 @llvm.smin.i32(i32 %1724, i32 0)
  %1726 = sub i32 %1724, %1725
  %1727 = zext i32 %1726 to i64
  %1728 = add nuw nsw i64 %1727, 1
  %1729 = add nsw i64 %1721, -1
  %1730 = icmp ult i32 %1726, 31
  br i1 %1730, label %1766, label %1731

1731:                                             ; preds = %1719
  %1732 = and i64 %1728, 8589934560
  %1733 = sub i64 %1722, %1732
  br label %1734

1734:                                             ; preds = %1734, %1731
  %1735 = phi i64 [ 0, %1731 ], [ %1758, %1734 ]
  %1736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1731 ], [ %1754, %1734 ]
  %1737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1731 ], [ %1755, %1734 ]
  %1738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1731 ], [ %1756, %1734 ]
  %1739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1731 ], [ %1757, %1734 ]
  %1740 = sub i64 %1722, %1735
  %1741 = getelementptr inbounds i32, ptr %11, i64 %1740
  %1742 = getelementptr inbounds i32, ptr %1741, i64 -7
  %1743 = load <8 x i32>, ptr %1742, align 4, !tbaa !5
  %1744 = shufflevector <8 x i32> %1743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1745 = getelementptr inbounds i32, ptr %1741, i64 -15
  %1746 = load <8 x i32>, ptr %1745, align 4, !tbaa !5
  %1747 = shufflevector <8 x i32> %1746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1748 = getelementptr inbounds i32, ptr %1741, i64 -23
  %1749 = load <8 x i32>, ptr %1748, align 4, !tbaa !5
  %1750 = shufflevector <8 x i32> %1749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1751 = getelementptr inbounds i32, ptr %1741, i64 -31
  %1752 = load <8 x i32>, ptr %1751, align 4, !tbaa !5
  %1753 = shufflevector <8 x i32> %1752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1754 = mul <8 x i32> %1744, %1736
  %1755 = mul <8 x i32> %1747, %1737
  %1756 = mul <8 x i32> %1750, %1738
  %1757 = mul <8 x i32> %1753, %1739
  %1758 = add nuw i64 %1735, 32
  %1759 = icmp eq i64 %1758, %1732
  br i1 %1759, label %1760, label %1734, !llvm.loop !819

1760:                                             ; preds = %1734
  %1761 = mul <8 x i32> %1755, %1754
  %1762 = mul <8 x i32> %1756, %1761
  %1763 = mul <8 x i32> %1757, %1762
  %1764 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1763)
  %1765 = icmp eq i64 %1728, %1732
  br i1 %1765, label %1778, label %1766

1766:                                             ; preds = %1719, %1760
  %1767 = phi i64 [ %1722, %1719 ], [ %1733, %1760 ]
  %1768 = phi i32 [ 1, %1719 ], [ %1764, %1760 ]
  br label %1769

1769:                                             ; preds = %1766, %1769
  %1770 = phi i64 [ %1775, %1769 ], [ %1767, %1766 ]
  %1771 = phi i32 [ %1774, %1769 ], [ %1768, %1766 ]
  %1772 = getelementptr inbounds i32, ptr %11, i64 %1770
  %1773 = load i32, ptr %1772, align 4, !tbaa !5
  %1774 = mul nsw i32 %1773, %1771
  %1775 = add nsw i64 %1770, -1
  %1776 = trunc i64 %1770 to i32
  %1777 = icmp sgt i32 %1776, 0
  br i1 %1777, label %1769, label %1778, !llvm.loop !820

1778:                                             ; preds = %1769, %1760
  %1779 = phi i32 [ %1764, %1760 ], [ %1774, %1769 ]
  %1780 = and i64 %1729, 4294967295
  %1781 = getelementptr inbounds i32, ptr %6, i64 %1780
  %1782 = load i32, ptr %1781, align 4, !tbaa !5
  %1783 = mul nsw i32 %1782, %1779
  %1784 = add nsw i32 %1783, %1723
  %1785 = icmp sgt i64 %1721, 2
  %1786 = add nsw i64 %1722, -1
  %1787 = add i32 %1720, 1
  br i1 %1785, label %1719, label %1788, !llvm.loop !821

1788:                                             ; preds = %1778, %1716
  %1789 = phi i32 [ %1718, %1716 ], [ %1784, %1778 ]
  %1790 = icmp slt i32 %1789, %5
  br i1 %1790, label %1793, label %1791

1791:                                             ; preds = %1788
  %1792 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

1793:                                             ; preds = %1788
  %1794 = sext i32 %1789 to i64
  %1795 = getelementptr inbounds i64, ptr %1251, i64 %1794
  %1796 = load i64, ptr %1795, align 8, !tbaa !120
  %1797 = trunc i64 %1796 to i8
  %1798 = load i8, ptr %1253, align 1, !tbaa !11
  %1799 = icmp sgt i8 %1798, %1797
  br i1 %1799, label %1800, label %1801

1800:                                             ; preds = %1793
  store i8 %1797, ptr %1253, align 1, !tbaa !11
  br label %1801

1801:                                             ; preds = %1800, %1793
  %1802 = add nuw nsw i32 %1717, 1
  br i1 %1569, label %1803, label %1853

1803:                                             ; preds = %1801
  %1804 = load i32, ptr %4, align 4, !tbaa !5
  %1805 = load i32, ptr %12, align 4, !tbaa !5
  %1806 = add nsw i32 %1805, -1
  %1807 = icmp slt i32 %1804, %1806
  br i1 %1807, label %1830, label %1808

1808:                                             ; preds = %1803
  %1809 = icmp eq i32 %1804, %1806
  br i1 %1809, label %1810, label %1846

1810:                                             ; preds = %1808
  store i32 0, ptr %4, align 4, !tbaa !5
  %1811 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1811, ptr %6, align 4, !tbaa !5
  br i1 %1574, label %1853, label %1812

1812:                                             ; preds = %1810, %1840
  %1813 = phi i64 [ %1844, %1840 ], [ 1, %1810 ]
  %1814 = getelementptr inbounds i32, ptr %4, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = getelementptr inbounds i32, ptr %12, i64 %1813
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = add nsw i32 %1817, -1
  %1819 = icmp slt i32 %1815, %1818
  br i1 %1819, label %1820, label %1838

1820:                                             ; preds = %1812
  br i1 %1807, label %1830, label %1821

1821:                                             ; preds = %1820
  %1822 = shl i64 %1813, 32
  %1823 = add i64 %1822, -4294967296
  %1824 = ashr exact i64 %1823, 32
  %1825 = getelementptr inbounds i32, ptr %7, i64 %1824
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1813
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = add nsw i32 %1828, %1826
  store i32 %1829, ptr %1827, align 4, !tbaa !5
  br label %1848

1830:                                             ; preds = %1803, %1820
  %1831 = phi i32 [ %1815, %1820 ], [ %1804, %1803 ]
  %1832 = phi ptr [ %1814, %1820 ], [ %4, %1803 ]
  %1833 = phi i64 [ %1813, %1820 ], [ 0, %1803 ]
  %1834 = add nsw i32 %1831, 1
  store i32 %1834, ptr %1832, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %7, i64 %1833
  %1836 = load i32, ptr %1835, align 4, !tbaa !5
  %1837 = getelementptr inbounds i32, ptr %6, i64 %1833
  br label %1848

1838:                                             ; preds = %1812
  %1839 = icmp eq i32 %1815, %1818
  br i1 %1839, label %1840, label %1846

1840:                                             ; preds = %1838
  store i32 0, ptr %1814, align 4, !tbaa !5
  %1841 = getelementptr inbounds i32, ptr %8, i64 %1813
  %1842 = load i32, ptr %1841, align 4, !tbaa !5
  %1843 = getelementptr inbounds i32, ptr %6, i64 %1813
  store i32 %1842, ptr %1843, align 4, !tbaa !5
  %1844 = add nuw nsw i64 %1813, 1
  %1845 = icmp eq i64 %1844, %1572
  br i1 %1845, label %1853, label %1812, !llvm.loop !822

1846:                                             ; preds = %1808, %1838
  %1847 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

1848:                                             ; preds = %1821, %1830
  %1849 = phi ptr [ %1837, %1830 ], [ %1814, %1821 ]
  %1850 = phi i32 [ %1836, %1830 ], [ 1, %1821 ]
  %1851 = load i32, ptr %1849, align 4, !tbaa !5
  %1852 = add nsw i32 %1851, %1850
  store i32 %1852, ptr %1849, align 4, !tbaa !5
  br label %1853

1853:                                             ; preds = %1840, %1848, %1810, %1801
  %1854 = icmp eq i32 %1802, %5
  br i1 %1854, label %5494, label %1716, !llvm.loop !823

1855:                                             ; preds = %1262
  %1856 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1252, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

1857:                                             ; preds = %18
  %1858 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1859 = load ptr, ptr %1858, align 8, !tbaa !9
  %1860 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1861 = load ptr, ptr %1860, align 8, !tbaa !9
  %1862 = load i64, ptr %1859, align 8, !tbaa !120
  %1863 = trunc i64 %1862 to i16
  store i16 %1863, ptr %1861, align 2, !tbaa !78
  %1864 = icmp eq i32 %13, 0
  br i1 %1864, label %5494, label %1865

1865:                                             ; preds = %1857
  switch i32 %1, label %2462 [
    i32 1, label %1866
    i32 0, label %2166
  ]

1866:                                             ; preds = %1865
  %1867 = getelementptr inbounds i32, ptr %3, i64 %19
  %1868 = load i32, ptr %1867, align 4, !tbaa !5
  %1869 = icmp eq i32 %1868, 0
  %1870 = icmp sgt i32 %5, 0
  br i1 %1869, label %1880, label %1871

1871:                                             ; preds = %1866
  br i1 %1870, label %1872, label %5494

1872:                                             ; preds = %1871
  %1873 = icmp sgt i32 %13, 1
  %1874 = icmp sgt i32 %13, 0
  %1875 = add i32 %13, -2
  %1876 = zext i32 %1875 to i64
  %1877 = zext i32 %13 to i64
  %1878 = add nuw i32 %5, 1
  %1879 = icmp eq i32 %13, 1
  br label %2026

1880:                                             ; preds = %1866
  br i1 %1870, label %1881, label %5494

1881:                                             ; preds = %1880
  %1882 = icmp sgt i32 %13, 1
  %1883 = icmp sgt i32 %13, 0
  %1884 = add i32 %13, -2
  %1885 = zext i32 %1884 to i64
  %1886 = zext i32 %13 to i64
  %1887 = add nuw i32 %5, 1
  %1888 = icmp eq i32 %13, 1
  br label %1889

1889:                                             ; preds = %1881, %2024
  %1890 = phi i16 [ %1863, %1881 ], [ %1975, %2024 ]
  %1891 = phi i32 [ 0, %1881 ], [ %1976, %2024 ]
  %1892 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %1893, label %1962

1893:                                             ; preds = %1889, %1952
  %1894 = phi i32 [ %1961, %1952 ], [ 0, %1889 ]
  %1895 = phi i64 [ %1903, %1952 ], [ %1886, %1889 ]
  %1896 = phi i64 [ %1960, %1952 ], [ %1885, %1889 ]
  %1897 = phi i32 [ %1958, %1952 ], [ %1892, %1889 ]
  %1898 = sub i32 %1884, %1894
  %1899 = tail call i32 @llvm.smin.i32(i32 %1898, i32 0)
  %1900 = sub i32 %1898, %1899
  %1901 = zext i32 %1900 to i64
  %1902 = add nuw nsw i64 %1901, 1
  %1903 = add nsw i64 %1895, -1
  %1904 = icmp ult i32 %1900, 31
  br i1 %1904, label %1940, label %1905

1905:                                             ; preds = %1893
  %1906 = and i64 %1902, 8589934560
  %1907 = sub i64 %1896, %1906
  br label %1908

1908:                                             ; preds = %1908, %1905
  %1909 = phi i64 [ 0, %1905 ], [ %1932, %1908 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1928, %1908 ]
  %1911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1929, %1908 ]
  %1912 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1930, %1908 ]
  %1913 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1905 ], [ %1931, %1908 ]
  %1914 = sub i64 %1896, %1909
  %1915 = getelementptr inbounds i32, ptr %9, i64 %1914
  %1916 = getelementptr inbounds i32, ptr %1915, i64 -7
  %1917 = load <8 x i32>, ptr %1916, align 4, !tbaa !5
  %1918 = shufflevector <8 x i32> %1917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1919 = getelementptr inbounds i32, ptr %1915, i64 -15
  %1920 = load <8 x i32>, ptr %1919, align 4, !tbaa !5
  %1921 = shufflevector <8 x i32> %1920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1922 = getelementptr inbounds i32, ptr %1915, i64 -23
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !5
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = getelementptr inbounds i32, ptr %1915, i64 -31
  %1926 = load <8 x i32>, ptr %1925, align 4, !tbaa !5
  %1927 = shufflevector <8 x i32> %1926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1928 = mul <8 x i32> %1918, %1910
  %1929 = mul <8 x i32> %1921, %1911
  %1930 = mul <8 x i32> %1924, %1912
  %1931 = mul <8 x i32> %1927, %1913
  %1932 = add nuw i64 %1909, 32
  %1933 = icmp eq i64 %1932, %1906
  br i1 %1933, label %1934, label %1908, !llvm.loop !824

1934:                                             ; preds = %1908
  %1935 = mul <8 x i32> %1929, %1928
  %1936 = mul <8 x i32> %1930, %1935
  %1937 = mul <8 x i32> %1931, %1936
  %1938 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1937)
  %1939 = icmp eq i64 %1902, %1906
  br i1 %1939, label %1952, label %1940

1940:                                             ; preds = %1893, %1934
  %1941 = phi i64 [ %1896, %1893 ], [ %1907, %1934 ]
  %1942 = phi i32 [ 1, %1893 ], [ %1938, %1934 ]
  br label %1943

1943:                                             ; preds = %1940, %1943
  %1944 = phi i64 [ %1949, %1943 ], [ %1941, %1940 ]
  %1945 = phi i32 [ %1948, %1943 ], [ %1942, %1940 ]
  %1946 = getelementptr inbounds i32, ptr %9, i64 %1944
  %1947 = load i32, ptr %1946, align 4, !tbaa !5
  %1948 = mul nsw i32 %1947, %1945
  %1949 = add nsw i64 %1944, -1
  %1950 = trunc i64 %1944 to i32
  %1951 = icmp sgt i32 %1950, 0
  br i1 %1951, label %1943, label %1952, !llvm.loop !825

1952:                                             ; preds = %1943, %1934
  %1953 = phi i32 [ %1938, %1934 ], [ %1948, %1943 ]
  %1954 = and i64 %1903, 4294967295
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1954
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = mul nsw i32 %1956, %1953
  %1958 = add nsw i32 %1957, %1897
  %1959 = icmp sgt i64 %1895, 2
  %1960 = add nsw i64 %1896, -1
  %1961 = add i32 %1894, 1
  br i1 %1959, label %1893, label %1962, !llvm.loop !826

1962:                                             ; preds = %1952, %1889
  %1963 = phi i32 [ %1892, %1889 ], [ %1958, %1952 ]
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds double, ptr %2, i64 %1964
  %1966 = load double, ptr %1965, align 8, !tbaa !18
  %1967 = getelementptr inbounds i64, ptr %1859, i64 %1964
  %1968 = load i64, ptr %1967, align 8, !tbaa !120
  %1969 = trunc i64 %1968 to i16
  %1970 = fcmp fast one double %1966, 0.000000e+00
  %1971 = icmp sgt i16 %1890, %1969
  %1972 = select i1 %1970, i1 %1971, i1 false
  br i1 %1972, label %1973, label %1974

1973:                                             ; preds = %1962
  store i16 %1969, ptr %1861, align 2, !tbaa !78
  br label %1974

1974:                                             ; preds = %1973, %1962
  %1975 = phi i16 [ %1969, %1973 ], [ %1890, %1962 ]
  %1976 = add nuw nsw i32 %1891, 1
  br i1 %1883, label %1977, label %2024

1977:                                             ; preds = %1974
  %1978 = load i32, ptr %4, align 4, !tbaa !5
  %1979 = load i32, ptr %12, align 4, !tbaa !5
  %1980 = add nsw i32 %1979, -1
  %1981 = icmp slt i32 %1978, %1980
  br i1 %1981, label %2001, label %1982

1982:                                             ; preds = %1977
  %1983 = icmp eq i32 %1978, %1980
  br i1 %1983, label %1984, label %2017

1984:                                             ; preds = %1982
  store i32 0, ptr %4, align 4, !tbaa !5
  %1985 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1985, ptr %6, align 4, !tbaa !5
  br i1 %1888, label %2024, label %1986

1986:                                             ; preds = %1984, %2011
  %1987 = phi i64 [ %2015, %2011 ], [ 1, %1984 ]
  %1988 = getelementptr inbounds i32, ptr %4, i64 %1987
  %1989 = load i32, ptr %1988, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %12, i64 %1987
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = add nsw i32 %1991, -1
  %1993 = icmp slt i32 %1989, %1992
  br i1 %1993, label %1994, label %2009

1994:                                             ; preds = %1986
  br i1 %1981, label %2001, label %1995

1995:                                             ; preds = %1994
  %1996 = getelementptr inbounds i32, ptr %7, i64 %1987
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1987
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = add nsw i32 %1999, %1997
  store i32 %2000, ptr %1998, align 4, !tbaa !5
  br label %2019

2001:                                             ; preds = %1977, %1994
  %2002 = phi i32 [ %1989, %1994 ], [ %1978, %1977 ]
  %2003 = phi ptr [ %1988, %1994 ], [ %4, %1977 ]
  %2004 = phi i64 [ %1987, %1994 ], [ 0, %1977 ]
  %2005 = add nsw i32 %2002, 1
  store i32 %2005, ptr %2003, align 4, !tbaa !5
  %2006 = getelementptr inbounds i32, ptr %7, i64 %2004
  %2007 = load i32, ptr %2006, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %6, i64 %2004
  br label %2019

2009:                                             ; preds = %1986
  %2010 = icmp eq i32 %1989, %1992
  br i1 %2010, label %2011, label %2017

2011:                                             ; preds = %2009
  store i32 0, ptr %1988, align 4, !tbaa !5
  %2012 = getelementptr inbounds i32, ptr %8, i64 %1987
  %2013 = load i32, ptr %2012, align 4, !tbaa !5
  %2014 = getelementptr inbounds i32, ptr %6, i64 %1987
  store i32 %2013, ptr %2014, align 4, !tbaa !5
  %2015 = add nuw nsw i64 %1987, 1
  %2016 = icmp eq i64 %2015, %1886
  br i1 %2016, label %2024, label %1986, !llvm.loop !827

2017:                                             ; preds = %1982, %2009
  %2018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2019:                                             ; preds = %1995, %2001
  %2020 = phi ptr [ %2008, %2001 ], [ %1988, %1995 ]
  %2021 = phi i32 [ %2007, %2001 ], [ 1, %1995 ]
  %2022 = load i32, ptr %2020, align 4, !tbaa !5
  %2023 = add nsw i32 %2022, %2021
  store i32 %2023, ptr %2020, align 4, !tbaa !5
  br label %2024

2024:                                             ; preds = %2011, %2019, %1984, %1974
  %2025 = icmp eq i32 %1976, %5
  br i1 %2025, label %5494, label %1889, !llvm.loop !828

2026:                                             ; preds = %1872, %2164
  %2027 = phi i16 [ %1863, %1872 ], [ %2112, %2164 ]
  %2028 = phi i32 [ 0, %1872 ], [ %2113, %2164 ]
  %2029 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2030, label %2099

2030:                                             ; preds = %2026, %2089
  %2031 = phi i32 [ %2098, %2089 ], [ 0, %2026 ]
  %2032 = phi i64 [ %2040, %2089 ], [ %1877, %2026 ]
  %2033 = phi i64 [ %2097, %2089 ], [ %1876, %2026 ]
  %2034 = phi i32 [ %2095, %2089 ], [ %2029, %2026 ]
  %2035 = sub i32 %1875, %2031
  %2036 = tail call i32 @llvm.smin.i32(i32 %2035, i32 0)
  %2037 = sub i32 %2035, %2036
  %2038 = zext i32 %2037 to i64
  %2039 = add nuw nsw i64 %2038, 1
  %2040 = add nsw i64 %2032, -1
  %2041 = icmp ult i32 %2037, 31
  br i1 %2041, label %2077, label %2042

2042:                                             ; preds = %2030
  %2043 = and i64 %2039, 8589934560
  %2044 = sub i64 %2033, %2043
  br label %2045

2045:                                             ; preds = %2045, %2042
  %2046 = phi i64 [ 0, %2042 ], [ %2069, %2045 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2065, %2045 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2066, %2045 ]
  %2049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2067, %2045 ]
  %2050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2042 ], [ %2068, %2045 ]
  %2051 = sub i64 %2033, %2046
  %2052 = getelementptr inbounds i32, ptr %11, i64 %2051
  %2053 = getelementptr inbounds i32, ptr %2052, i64 -7
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !5
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2052, i64 -15
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !5
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2052, i64 -23
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2052, i64 -31
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !5
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = mul <8 x i32> %2055, %2047
  %2066 = mul <8 x i32> %2058, %2048
  %2067 = mul <8 x i32> %2061, %2049
  %2068 = mul <8 x i32> %2064, %2050
  %2069 = add nuw i64 %2046, 32
  %2070 = icmp eq i64 %2069, %2043
  br i1 %2070, label %2071, label %2045, !llvm.loop !829

2071:                                             ; preds = %2045
  %2072 = mul <8 x i32> %2066, %2065
  %2073 = mul <8 x i32> %2067, %2072
  %2074 = mul <8 x i32> %2068, %2073
  %2075 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2074)
  %2076 = icmp eq i64 %2039, %2043
  br i1 %2076, label %2089, label %2077

2077:                                             ; preds = %2030, %2071
  %2078 = phi i64 [ %2033, %2030 ], [ %2044, %2071 ]
  %2079 = phi i32 [ 1, %2030 ], [ %2075, %2071 ]
  br label %2080

2080:                                             ; preds = %2077, %2080
  %2081 = phi i64 [ %2086, %2080 ], [ %2078, %2077 ]
  %2082 = phi i32 [ %2085, %2080 ], [ %2079, %2077 ]
  %2083 = getelementptr inbounds i32, ptr %11, i64 %2081
  %2084 = load i32, ptr %2083, align 4, !tbaa !5
  %2085 = mul nsw i32 %2084, %2082
  %2086 = add nsw i64 %2081, -1
  %2087 = trunc i64 %2081 to i32
  %2088 = icmp sgt i32 %2087, 0
  br i1 %2088, label %2080, label %2089, !llvm.loop !830

2089:                                             ; preds = %2080, %2071
  %2090 = phi i32 [ %2075, %2071 ], [ %2085, %2080 ]
  %2091 = and i64 %2040, 4294967295
  %2092 = getelementptr inbounds i32, ptr %6, i64 %2091
  %2093 = load i32, ptr %2092, align 4, !tbaa !5
  %2094 = mul nsw i32 %2093, %2090
  %2095 = add nsw i32 %2094, %2034
  %2096 = icmp sgt i64 %2032, 2
  %2097 = add nsw i64 %2033, -1
  %2098 = add i32 %2031, 1
  br i1 %2096, label %2030, label %2099, !llvm.loop !831

2099:                                             ; preds = %2089, %2026
  %2100 = phi i32 [ %2029, %2026 ], [ %2095, %2089 ]
  %2101 = icmp slt i32 %2100, %5
  br i1 %2101, label %2104, label %2102

2102:                                             ; preds = %2099
  %2103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

2104:                                             ; preds = %2099
  %2105 = sext i32 %2100 to i64
  %2106 = getelementptr inbounds i64, ptr %1859, i64 %2105
  %2107 = load i64, ptr %2106, align 8, !tbaa !120
  %2108 = trunc i64 %2107 to i16
  %2109 = icmp sgt i16 %2027, %2108
  br i1 %2109, label %2110, label %2111

2110:                                             ; preds = %2104
  store i16 %2108, ptr %1861, align 2, !tbaa !78
  br label %2111

2111:                                             ; preds = %2104, %2110
  %2112 = phi i16 [ %2027, %2104 ], [ %2108, %2110 ]
  %2113 = add nuw nsw i32 %2028, 1
  br i1 %1874, label %2114, label %2164

2114:                                             ; preds = %2111
  %2115 = load i32, ptr %4, align 4, !tbaa !5
  %2116 = load i32, ptr %12, align 4, !tbaa !5
  %2117 = add nsw i32 %2116, -1
  %2118 = icmp slt i32 %2115, %2117
  br i1 %2118, label %2141, label %2119

2119:                                             ; preds = %2114
  %2120 = icmp eq i32 %2115, %2117
  br i1 %2120, label %2121, label %2157

2121:                                             ; preds = %2119
  store i32 0, ptr %4, align 4, !tbaa !5
  %2122 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2122, ptr %6, align 4, !tbaa !5
  br i1 %1879, label %2164, label %2123

2123:                                             ; preds = %2121, %2151
  %2124 = phi i64 [ %2155, %2151 ], [ 1, %2121 ]
  %2125 = getelementptr inbounds i32, ptr %4, i64 %2124
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = getelementptr inbounds i32, ptr %12, i64 %2124
  %2128 = load i32, ptr %2127, align 4, !tbaa !5
  %2129 = add nsw i32 %2128, -1
  %2130 = icmp slt i32 %2126, %2129
  br i1 %2130, label %2131, label %2149

2131:                                             ; preds = %2123
  br i1 %2118, label %2141, label %2132

2132:                                             ; preds = %2131
  %2133 = shl i64 %2124, 32
  %2134 = add i64 %2133, -4294967296
  %2135 = ashr exact i64 %2134, 32
  %2136 = getelementptr inbounds i32, ptr %7, i64 %2135
  %2137 = load i32, ptr %2136, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %6, i64 %2124
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = add nsw i32 %2139, %2137
  store i32 %2140, ptr %2138, align 4, !tbaa !5
  br label %2159

2141:                                             ; preds = %2114, %2131
  %2142 = phi i32 [ %2126, %2131 ], [ %2115, %2114 ]
  %2143 = phi ptr [ %2125, %2131 ], [ %4, %2114 ]
  %2144 = phi i64 [ %2124, %2131 ], [ 0, %2114 ]
  %2145 = add nsw i32 %2142, 1
  store i32 %2145, ptr %2143, align 4, !tbaa !5
  %2146 = getelementptr inbounds i32, ptr %7, i64 %2144
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = getelementptr inbounds i32, ptr %6, i64 %2144
  br label %2159

2149:                                             ; preds = %2123
  %2150 = icmp eq i32 %2126, %2129
  br i1 %2150, label %2151, label %2157

2151:                                             ; preds = %2149
  store i32 0, ptr %2125, align 4, !tbaa !5
  %2152 = getelementptr inbounds i32, ptr %8, i64 %2124
  %2153 = load i32, ptr %2152, align 4, !tbaa !5
  %2154 = getelementptr inbounds i32, ptr %6, i64 %2124
  store i32 %2153, ptr %2154, align 4, !tbaa !5
  %2155 = add nuw nsw i64 %2124, 1
  %2156 = icmp eq i64 %2155, %1877
  br i1 %2156, label %2164, label %2123, !llvm.loop !832

2157:                                             ; preds = %2119, %2149
  %2158 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2159:                                             ; preds = %2132, %2141
  %2160 = phi ptr [ %2148, %2141 ], [ %2125, %2132 ]
  %2161 = phi i32 [ %2147, %2141 ], [ 1, %2132 ]
  %2162 = load i32, ptr %2160, align 4, !tbaa !5
  %2163 = add nsw i32 %2162, %2161
  store i32 %2163, ptr %2160, align 4, !tbaa !5
  br label %2164

2164:                                             ; preds = %2151, %2159, %2121, %2111
  %2165 = icmp eq i32 %2113, %5
  br i1 %2165, label %5494, label %2026, !llvm.loop !833

2166:                                             ; preds = %1865
  %2167 = getelementptr inbounds i32, ptr %3, i64 %19
  %2168 = load i32, ptr %2167, align 4, !tbaa !5
  %2169 = icmp eq i32 %2168, 0
  %2170 = icmp sgt i32 %5, 0
  br i1 %2169, label %2180, label %2171

2171:                                             ; preds = %2166
  br i1 %2170, label %2172, label %5494

2172:                                             ; preds = %2171
  %2173 = icmp sgt i32 %13, 1
  %2174 = icmp sgt i32 %13, 0
  %2175 = add i32 %13, -2
  %2176 = zext i32 %2175 to i64
  %2177 = zext i32 %13 to i64
  %2178 = add nuw i32 %5, 1
  %2179 = icmp eq i32 %13, 1
  br label %2322

2180:                                             ; preds = %2166
  br i1 %2170, label %2181, label %5494

2181:                                             ; preds = %2180
  %2182 = icmp sgt i32 %13, 1
  %2183 = icmp sgt i32 %13, 0
  %2184 = add i32 %13, -2
  %2185 = zext i32 %2184 to i64
  %2186 = zext i32 %13 to i64
  %2187 = add nuw i32 %5, 1
  %2188 = icmp eq i32 %13, 1
  br label %2189

2189:                                             ; preds = %2181, %2320
  %2190 = phi i16 [ %1863, %2181 ], [ %2271, %2320 ]
  %2191 = phi i32 [ 0, %2181 ], [ %2272, %2320 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2182, label %2193, label %2262

2193:                                             ; preds = %2189, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2189 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2186, %2189 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2185, %2189 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2189 ]
  %2198 = sub i32 %2184, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !834

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !835

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !836

2262:                                             ; preds = %2252, %2189
  %2263 = phi i32 [ %2192, %2189 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds i64, ptr %1859, i64 %2264
  %2266 = load i64, ptr %2265, align 8, !tbaa !120
  %2267 = trunc i64 %2266 to i16
  %2268 = icmp sgt i16 %2190, %2267
  br i1 %2268, label %2269, label %2270

2269:                                             ; preds = %2262
  store i16 %2267, ptr %1861, align 2, !tbaa !78
  br label %2270

2270:                                             ; preds = %2269, %2262
  %2271 = phi i16 [ %2267, %2269 ], [ %2190, %2262 ]
  %2272 = add nuw nsw i32 %2191, 1
  br i1 %2183, label %2273, label %2320

2273:                                             ; preds = %2270
  %2274 = load i32, ptr %4, align 4, !tbaa !5
  %2275 = load i32, ptr %12, align 4, !tbaa !5
  %2276 = add nsw i32 %2275, -1
  %2277 = icmp slt i32 %2274, %2276
  br i1 %2277, label %2297, label %2278

2278:                                             ; preds = %2273
  %2279 = icmp eq i32 %2274, %2276
  br i1 %2279, label %2280, label %2313

2280:                                             ; preds = %2278
  store i32 0, ptr %4, align 4, !tbaa !5
  %2281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2281, ptr %6, align 4, !tbaa !5
  br i1 %2188, label %2320, label %2282

2282:                                             ; preds = %2280, %2307
  %2283 = phi i64 [ %2311, %2307 ], [ 1, %2280 ]
  %2284 = getelementptr inbounds i32, ptr %4, i64 %2283
  %2285 = load i32, ptr %2284, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %12, i64 %2283
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = add nsw i32 %2287, -1
  %2289 = icmp slt i32 %2285, %2288
  br i1 %2289, label %2290, label %2305

2290:                                             ; preds = %2282
  br i1 %2277, label %2297, label %2291

2291:                                             ; preds = %2290
  %2292 = getelementptr inbounds i32, ptr %7, i64 %2283
  %2293 = load i32, ptr %2292, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2283
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = add nsw i32 %2295, %2293
  store i32 %2296, ptr %2294, align 4, !tbaa !5
  br label %2315

2297:                                             ; preds = %2273, %2290
  %2298 = phi i32 [ %2285, %2290 ], [ %2274, %2273 ]
  %2299 = phi ptr [ %2284, %2290 ], [ %4, %2273 ]
  %2300 = phi i64 [ %2283, %2290 ], [ 0, %2273 ]
  %2301 = add nsw i32 %2298, 1
  store i32 %2301, ptr %2299, align 4, !tbaa !5
  %2302 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2300
  br label %2315

2305:                                             ; preds = %2282
  %2306 = icmp eq i32 %2285, %2288
  br i1 %2306, label %2307, label %2313

2307:                                             ; preds = %2305
  store i32 0, ptr %2284, align 4, !tbaa !5
  %2308 = getelementptr inbounds i32, ptr %8, i64 %2283
  %2309 = load i32, ptr %2308, align 4, !tbaa !5
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2283
  store i32 %2309, ptr %2310, align 4, !tbaa !5
  %2311 = add nuw nsw i64 %2283, 1
  %2312 = icmp eq i64 %2311, %2186
  br i1 %2312, label %2320, label %2282, !llvm.loop !837

2313:                                             ; preds = %2278, %2305
  %2314 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2315:                                             ; preds = %2291, %2297
  %2316 = phi ptr [ %2304, %2297 ], [ %2284, %2291 ]
  %2317 = phi i32 [ %2303, %2297 ], [ 1, %2291 ]
  %2318 = load i32, ptr %2316, align 4, !tbaa !5
  %2319 = add nsw i32 %2318, %2317
  store i32 %2319, ptr %2316, align 4, !tbaa !5
  br label %2320

2320:                                             ; preds = %2307, %2315, %2280, %2270
  %2321 = icmp eq i32 %2272, %5
  br i1 %2321, label %5494, label %2189, !llvm.loop !838

2322:                                             ; preds = %2172, %2460
  %2323 = phi i16 [ %1863, %2172 ], [ %2408, %2460 ]
  %2324 = phi i32 [ 0, %2172 ], [ %2409, %2460 ]
  %2325 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2173, label %2326, label %2395

2326:                                             ; preds = %2322, %2385
  %2327 = phi i32 [ %2394, %2385 ], [ 0, %2322 ]
  %2328 = phi i64 [ %2336, %2385 ], [ %2177, %2322 ]
  %2329 = phi i64 [ %2393, %2385 ], [ %2176, %2322 ]
  %2330 = phi i32 [ %2391, %2385 ], [ %2325, %2322 ]
  %2331 = sub i32 %2175, %2327
  %2332 = tail call i32 @llvm.smin.i32(i32 %2331, i32 0)
  %2333 = sub i32 %2331, %2332
  %2334 = zext i32 %2333 to i64
  %2335 = add nuw nsw i64 %2334, 1
  %2336 = add nsw i64 %2328, -1
  %2337 = icmp ult i32 %2333, 31
  br i1 %2337, label %2373, label %2338

2338:                                             ; preds = %2326
  %2339 = and i64 %2335, 8589934560
  %2340 = sub i64 %2329, %2339
  br label %2341

2341:                                             ; preds = %2341, %2338
  %2342 = phi i64 [ 0, %2338 ], [ %2365, %2341 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2361, %2341 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2362, %2341 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2363, %2341 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2364, %2341 ]
  %2347 = sub i64 %2329, %2342
  %2348 = getelementptr inbounds i32, ptr %11, i64 %2347
  %2349 = getelementptr inbounds i32, ptr %2348, i64 -7
  %2350 = load <8 x i32>, ptr %2349, align 4, !tbaa !5
  %2351 = shufflevector <8 x i32> %2350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2352 = getelementptr inbounds i32, ptr %2348, i64 -15
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !5
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = getelementptr inbounds i32, ptr %2348, i64 -23
  %2356 = load <8 x i32>, ptr %2355, align 4, !tbaa !5
  %2357 = shufflevector <8 x i32> %2356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2358 = getelementptr inbounds i32, ptr %2348, i64 -31
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !5
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = mul <8 x i32> %2351, %2343
  %2362 = mul <8 x i32> %2354, %2344
  %2363 = mul <8 x i32> %2357, %2345
  %2364 = mul <8 x i32> %2360, %2346
  %2365 = add nuw i64 %2342, 32
  %2366 = icmp eq i64 %2365, %2339
  br i1 %2366, label %2367, label %2341, !llvm.loop !839

2367:                                             ; preds = %2341
  %2368 = mul <8 x i32> %2362, %2361
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2370)
  %2372 = icmp eq i64 %2335, %2339
  br i1 %2372, label %2385, label %2373

2373:                                             ; preds = %2326, %2367
  %2374 = phi i64 [ %2329, %2326 ], [ %2340, %2367 ]
  %2375 = phi i32 [ 1, %2326 ], [ %2371, %2367 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, ptr %11, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !5
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nsw i64 %2377, -1
  %2383 = trunc i64 %2377 to i32
  %2384 = icmp sgt i32 %2383, 0
  br i1 %2384, label %2376, label %2385, !llvm.loop !840

2385:                                             ; preds = %2376, %2367
  %2386 = phi i32 [ %2371, %2367 ], [ %2381, %2376 ]
  %2387 = and i64 %2336, 4294967295
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2387
  %2389 = load i32, ptr %2388, align 4, !tbaa !5
  %2390 = mul nsw i32 %2389, %2386
  %2391 = add nsw i32 %2390, %2330
  %2392 = icmp sgt i64 %2328, 2
  %2393 = add nsw i64 %2329, -1
  %2394 = add i32 %2327, 1
  br i1 %2392, label %2326, label %2395, !llvm.loop !841

2395:                                             ; preds = %2385, %2322
  %2396 = phi i32 [ %2325, %2322 ], [ %2391, %2385 ]
  %2397 = icmp slt i32 %2396, %5
  br i1 %2397, label %2400, label %2398

2398:                                             ; preds = %2395
  %2399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

2400:                                             ; preds = %2395
  %2401 = sext i32 %2396 to i64
  %2402 = getelementptr inbounds i64, ptr %1859, i64 %2401
  %2403 = load i64, ptr %2402, align 8, !tbaa !120
  %2404 = trunc i64 %2403 to i16
  %2405 = icmp sgt i16 %2323, %2404
  br i1 %2405, label %2406, label %2407

2406:                                             ; preds = %2400
  store i16 %2404, ptr %1861, align 2, !tbaa !78
  br label %2407

2407:                                             ; preds = %2406, %2400
  %2408 = phi i16 [ %2404, %2406 ], [ %2323, %2400 ]
  %2409 = add nuw nsw i32 %2324, 1
  br i1 %2174, label %2410, label %2460

2410:                                             ; preds = %2407
  %2411 = load i32, ptr %4, align 4, !tbaa !5
  %2412 = load i32, ptr %12, align 4, !tbaa !5
  %2413 = add nsw i32 %2412, -1
  %2414 = icmp slt i32 %2411, %2413
  br i1 %2414, label %2437, label %2415

2415:                                             ; preds = %2410
  %2416 = icmp eq i32 %2411, %2413
  br i1 %2416, label %2417, label %2453

2417:                                             ; preds = %2415
  store i32 0, ptr %4, align 4, !tbaa !5
  %2418 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2418, ptr %6, align 4, !tbaa !5
  br i1 %2179, label %2460, label %2419

2419:                                             ; preds = %2417, %2447
  %2420 = phi i64 [ %2451, %2447 ], [ 1, %2417 ]
  %2421 = getelementptr inbounds i32, ptr %4, i64 %2420
  %2422 = load i32, ptr %2421, align 4, !tbaa !5
  %2423 = getelementptr inbounds i32, ptr %12, i64 %2420
  %2424 = load i32, ptr %2423, align 4, !tbaa !5
  %2425 = add nsw i32 %2424, -1
  %2426 = icmp slt i32 %2422, %2425
  br i1 %2426, label %2427, label %2445

2427:                                             ; preds = %2419
  br i1 %2414, label %2437, label %2428

2428:                                             ; preds = %2427
  %2429 = shl i64 %2420, 32
  %2430 = add i64 %2429, -4294967296
  %2431 = ashr exact i64 %2430, 32
  %2432 = getelementptr inbounds i32, ptr %7, i64 %2431
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2420
  %2435 = load i32, ptr %2434, align 4, !tbaa !5
  %2436 = add nsw i32 %2435, %2433
  store i32 %2436, ptr %2434, align 4, !tbaa !5
  br label %2455

2437:                                             ; preds = %2410, %2427
  %2438 = phi i32 [ %2422, %2427 ], [ %2411, %2410 ]
  %2439 = phi ptr [ %2421, %2427 ], [ %4, %2410 ]
  %2440 = phi i64 [ %2420, %2427 ], [ 0, %2410 ]
  %2441 = add nsw i32 %2438, 1
  store i32 %2441, ptr %2439, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %7, i64 %2440
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = getelementptr inbounds i32, ptr %6, i64 %2440
  br label %2455

2445:                                             ; preds = %2419
  %2446 = icmp eq i32 %2422, %2425
  br i1 %2446, label %2447, label %2453

2447:                                             ; preds = %2445
  store i32 0, ptr %2421, align 4, !tbaa !5
  %2448 = getelementptr inbounds i32, ptr %8, i64 %2420
  %2449 = load i32, ptr %2448, align 4, !tbaa !5
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2420
  store i32 %2449, ptr %2450, align 4, !tbaa !5
  %2451 = add nuw nsw i64 %2420, 1
  %2452 = icmp eq i64 %2451, %2177
  br i1 %2452, label %2460, label %2419, !llvm.loop !842

2453:                                             ; preds = %2415, %2445
  %2454 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2455:                                             ; preds = %2428, %2437
  %2456 = phi ptr [ %2444, %2437 ], [ %2421, %2428 ]
  %2457 = phi i32 [ %2443, %2437 ], [ 1, %2428 ]
  %2458 = load i32, ptr %2456, align 4, !tbaa !5
  %2459 = add nsw i32 %2458, %2457
  store i32 %2459, ptr %2456, align 4, !tbaa !5
  br label %2460

2460:                                             ; preds = %2447, %2455, %2417, %2407
  %2461 = icmp eq i32 %2409, %5
  br i1 %2461, label %5494, label %2322, !llvm.loop !843

2462:                                             ; preds = %1865
  %2463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1257, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

2464:                                             ; preds = %18
  %2465 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2466 = load ptr, ptr %2465, align 8, !tbaa !9
  %2467 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !9
  %2469 = load i64, ptr %2466, align 8, !tbaa !120
  %2470 = trunc i64 %2469 to i32
  store i32 %2470, ptr %2468, align 4, !tbaa !5
  %2471 = icmp eq i32 %13, 0
  br i1 %2471, label %5494, label %2472

2472:                                             ; preds = %2464
  switch i32 %1, label %3065 [
    i32 1, label %2473
    i32 0, label %2771
  ]

2473:                                             ; preds = %2472
  %2474 = getelementptr inbounds i32, ptr %3, i64 %19
  %2475 = load i32, ptr %2474, align 4, !tbaa !5
  %2476 = icmp eq i32 %2475, 0
  %2477 = icmp sgt i32 %5, 0
  br i1 %2476, label %2487, label %2478

2478:                                             ; preds = %2473
  br i1 %2477, label %2479, label %5494

2479:                                             ; preds = %2478
  %2480 = icmp sgt i32 %13, 1
  %2481 = icmp sgt i32 %13, 0
  %2482 = add i32 %13, -2
  %2483 = zext i32 %2482 to i64
  %2484 = zext i32 %13 to i64
  %2485 = add nuw i32 %5, 1
  %2486 = icmp eq i32 %13, 1
  br label %2632

2487:                                             ; preds = %2473
  br i1 %2477, label %2488, label %5494

2488:                                             ; preds = %2487
  %2489 = icmp sgt i32 %13, 1
  %2490 = icmp sgt i32 %13, 0
  %2491 = add i32 %13, -2
  %2492 = zext i32 %2491 to i64
  %2493 = zext i32 %13 to i64
  %2494 = add nuw i32 %5, 1
  %2495 = icmp eq i32 %13, 1
  br label %2496

2496:                                             ; preds = %2488, %2630
  %2497 = phi i32 [ 0, %2488 ], [ %2582, %2630 ]
  %2498 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2489, label %2499, label %2568

2499:                                             ; preds = %2496, %2558
  %2500 = phi i32 [ %2567, %2558 ], [ 0, %2496 ]
  %2501 = phi i64 [ %2509, %2558 ], [ %2493, %2496 ]
  %2502 = phi i64 [ %2566, %2558 ], [ %2492, %2496 ]
  %2503 = phi i32 [ %2564, %2558 ], [ %2498, %2496 ]
  %2504 = sub i32 %2491, %2500
  %2505 = tail call i32 @llvm.smin.i32(i32 %2504, i32 0)
  %2506 = sub i32 %2504, %2505
  %2507 = zext i32 %2506 to i64
  %2508 = add nuw nsw i64 %2507, 1
  %2509 = add nsw i64 %2501, -1
  %2510 = icmp ult i32 %2506, 31
  br i1 %2510, label %2546, label %2511

2511:                                             ; preds = %2499
  %2512 = and i64 %2508, 8589934560
  %2513 = sub i64 %2502, %2512
  br label %2514

2514:                                             ; preds = %2514, %2511
  %2515 = phi i64 [ 0, %2511 ], [ %2538, %2514 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2534, %2514 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2535, %2514 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2536, %2514 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2511 ], [ %2537, %2514 ]
  %2520 = sub i64 %2502, %2515
  %2521 = getelementptr inbounds i32, ptr %9, i64 %2520
  %2522 = getelementptr inbounds i32, ptr %2521, i64 -7
  %2523 = load <8 x i32>, ptr %2522, align 4, !tbaa !5
  %2524 = shufflevector <8 x i32> %2523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2525 = getelementptr inbounds i32, ptr %2521, i64 -15
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2521, i64 -23
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2521, i64 -31
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = mul <8 x i32> %2524, %2516
  %2535 = mul <8 x i32> %2527, %2517
  %2536 = mul <8 x i32> %2530, %2518
  %2537 = mul <8 x i32> %2533, %2519
  %2538 = add nuw i64 %2515, 32
  %2539 = icmp eq i64 %2538, %2512
  br i1 %2539, label %2540, label %2514, !llvm.loop !844

2540:                                             ; preds = %2514
  %2541 = mul <8 x i32> %2535, %2534
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2543)
  %2545 = icmp eq i64 %2508, %2512
  br i1 %2545, label %2558, label %2546

2546:                                             ; preds = %2499, %2540
  %2547 = phi i64 [ %2502, %2499 ], [ %2513, %2540 ]
  %2548 = phi i32 [ 1, %2499 ], [ %2544, %2540 ]
  br label %2549

2549:                                             ; preds = %2546, %2549
  %2550 = phi i64 [ %2555, %2549 ], [ %2547, %2546 ]
  %2551 = phi i32 [ %2554, %2549 ], [ %2548, %2546 ]
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = mul nsw i32 %2553, %2551
  %2555 = add nsw i64 %2550, -1
  %2556 = trunc i64 %2550 to i32
  %2557 = icmp sgt i32 %2556, 0
  br i1 %2557, label %2549, label %2558, !llvm.loop !845

2558:                                             ; preds = %2549, %2540
  %2559 = phi i32 [ %2544, %2540 ], [ %2554, %2549 ]
  %2560 = and i64 %2509, 4294967295
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2560
  %2562 = load i32, ptr %2561, align 4, !tbaa !5
  %2563 = mul nsw i32 %2562, %2559
  %2564 = add nsw i32 %2563, %2503
  %2565 = icmp sgt i64 %2501, 2
  %2566 = add nsw i64 %2502, -1
  %2567 = add i32 %2500, 1
  br i1 %2565, label %2499, label %2568, !llvm.loop !846

2568:                                             ; preds = %2558, %2496
  %2569 = phi i32 [ %2498, %2496 ], [ %2564, %2558 ]
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds double, ptr %2, i64 %2570
  %2572 = load double, ptr %2571, align 8, !tbaa !18
  %2573 = getelementptr inbounds i64, ptr %2466, i64 %2570
  %2574 = load i64, ptr %2573, align 8, !tbaa !120
  %2575 = trunc i64 %2574 to i32
  %2576 = fcmp fast ueq double %2572, 0.000000e+00
  br i1 %2576, label %2581, label %2577

2577:                                             ; preds = %2568
  %2578 = load i32, ptr %2468, align 4, !tbaa !5
  %2579 = icmp sgt i32 %2578, %2575
  br i1 %2579, label %2580, label %2581

2580:                                             ; preds = %2577
  store i32 %2575, ptr %2468, align 4, !tbaa !5
  br label %2581

2581:                                             ; preds = %2577, %2580, %2568
  %2582 = add nuw nsw i32 %2497, 1
  br i1 %2490, label %2583, label %2630

2583:                                             ; preds = %2581
  %2584 = load i32, ptr %4, align 4, !tbaa !5
  %2585 = load i32, ptr %12, align 4, !tbaa !5
  %2586 = add nsw i32 %2585, -1
  %2587 = icmp slt i32 %2584, %2586
  br i1 %2587, label %2607, label %2588

2588:                                             ; preds = %2583
  %2589 = icmp eq i32 %2584, %2586
  br i1 %2589, label %2590, label %2623

2590:                                             ; preds = %2588
  store i32 0, ptr %4, align 4, !tbaa !5
  %2591 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2591, ptr %6, align 4, !tbaa !5
  br i1 %2495, label %2630, label %2592

2592:                                             ; preds = %2590, %2617
  %2593 = phi i64 [ %2621, %2617 ], [ 1, %2590 ]
  %2594 = getelementptr inbounds i32, ptr %4, i64 %2593
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %12, i64 %2593
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = add nsw i32 %2597, -1
  %2599 = icmp slt i32 %2595, %2598
  br i1 %2599, label %2600, label %2615

2600:                                             ; preds = %2592
  br i1 %2587, label %2607, label %2601

2601:                                             ; preds = %2600
  %2602 = getelementptr inbounds i32, ptr %7, i64 %2593
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2593
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = add nsw i32 %2605, %2603
  store i32 %2606, ptr %2604, align 4, !tbaa !5
  br label %2625

2607:                                             ; preds = %2583, %2600
  %2608 = phi i32 [ %2595, %2600 ], [ %2584, %2583 ]
  %2609 = phi ptr [ %2594, %2600 ], [ %4, %2583 ]
  %2610 = phi i64 [ %2593, %2600 ], [ 0, %2583 ]
  %2611 = add nsw i32 %2608, 1
  store i32 %2611, ptr %2609, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %7, i64 %2610
  %2613 = load i32, ptr %2612, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %6, i64 %2610
  br label %2625

2615:                                             ; preds = %2592
  %2616 = icmp eq i32 %2595, %2598
  br i1 %2616, label %2617, label %2623

2617:                                             ; preds = %2615
  store i32 0, ptr %2594, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %8, i64 %2593
  %2619 = load i32, ptr %2618, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %6, i64 %2593
  store i32 %2619, ptr %2620, align 4, !tbaa !5
  %2621 = add nuw nsw i64 %2593, 1
  %2622 = icmp eq i64 %2621, %2493
  br i1 %2622, label %2630, label %2592, !llvm.loop !847

2623:                                             ; preds = %2588, %2615
  %2624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2625:                                             ; preds = %2601, %2607
  %2626 = phi ptr [ %2614, %2607 ], [ %2594, %2601 ]
  %2627 = phi i32 [ %2613, %2607 ], [ 1, %2601 ]
  %2628 = load i32, ptr %2626, align 4, !tbaa !5
  %2629 = add nsw i32 %2628, %2627
  store i32 %2629, ptr %2626, align 4, !tbaa !5
  br label %2630

2630:                                             ; preds = %2617, %2625, %2590, %2581
  %2631 = icmp eq i32 %2582, %5
  br i1 %2631, label %5494, label %2496, !llvm.loop !848

2632:                                             ; preds = %2479, %2769
  %2633 = phi i32 [ 0, %2479 ], [ %2718, %2769 ]
  %2634 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2480, label %2635, label %2704

2635:                                             ; preds = %2632, %2694
  %2636 = phi i32 [ %2703, %2694 ], [ 0, %2632 ]
  %2637 = phi i64 [ %2645, %2694 ], [ %2484, %2632 ]
  %2638 = phi i64 [ %2702, %2694 ], [ %2483, %2632 ]
  %2639 = phi i32 [ %2700, %2694 ], [ %2634, %2632 ]
  %2640 = sub i32 %2482, %2636
  %2641 = tail call i32 @llvm.smin.i32(i32 %2640, i32 0)
  %2642 = sub i32 %2640, %2641
  %2643 = zext i32 %2642 to i64
  %2644 = add nuw nsw i64 %2643, 1
  %2645 = add nsw i64 %2637, -1
  %2646 = icmp ult i32 %2642, 31
  br i1 %2646, label %2682, label %2647

2647:                                             ; preds = %2635
  %2648 = and i64 %2644, 8589934560
  %2649 = sub i64 %2638, %2648
  br label %2650

2650:                                             ; preds = %2650, %2647
  %2651 = phi i64 [ 0, %2647 ], [ %2674, %2650 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2670, %2650 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2671, %2650 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2672, %2650 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2673, %2650 ]
  %2656 = sub i64 %2638, %2651
  %2657 = getelementptr inbounds i32, ptr %11, i64 %2656
  %2658 = getelementptr inbounds i32, ptr %2657, i64 -7
  %2659 = load <8 x i32>, ptr %2658, align 4, !tbaa !5
  %2660 = shufflevector <8 x i32> %2659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2661 = getelementptr inbounds i32, ptr %2657, i64 -15
  %2662 = load <8 x i32>, ptr %2661, align 4, !tbaa !5
  %2663 = shufflevector <8 x i32> %2662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2664 = getelementptr inbounds i32, ptr %2657, i64 -23
  %2665 = load <8 x i32>, ptr %2664, align 4, !tbaa !5
  %2666 = shufflevector <8 x i32> %2665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2667 = getelementptr inbounds i32, ptr %2657, i64 -31
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !5
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = mul <8 x i32> %2660, %2652
  %2671 = mul <8 x i32> %2663, %2653
  %2672 = mul <8 x i32> %2666, %2654
  %2673 = mul <8 x i32> %2669, %2655
  %2674 = add nuw i64 %2651, 32
  %2675 = icmp eq i64 %2674, %2648
  br i1 %2675, label %2676, label %2650, !llvm.loop !849

2676:                                             ; preds = %2650
  %2677 = mul <8 x i32> %2671, %2670
  %2678 = mul <8 x i32> %2672, %2677
  %2679 = mul <8 x i32> %2673, %2678
  %2680 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2679)
  %2681 = icmp eq i64 %2644, %2648
  br i1 %2681, label %2694, label %2682

2682:                                             ; preds = %2635, %2676
  %2683 = phi i64 [ %2638, %2635 ], [ %2649, %2676 ]
  %2684 = phi i32 [ 1, %2635 ], [ %2680, %2676 ]
  br label %2685

2685:                                             ; preds = %2682, %2685
  %2686 = phi i64 [ %2691, %2685 ], [ %2683, %2682 ]
  %2687 = phi i32 [ %2690, %2685 ], [ %2684, %2682 ]
  %2688 = getelementptr inbounds i32, ptr %11, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = mul nsw i32 %2689, %2687
  %2691 = add nsw i64 %2686, -1
  %2692 = trunc i64 %2686 to i32
  %2693 = icmp sgt i32 %2692, 0
  br i1 %2693, label %2685, label %2694, !llvm.loop !850

2694:                                             ; preds = %2685, %2676
  %2695 = phi i32 [ %2680, %2676 ], [ %2690, %2685 ]
  %2696 = and i64 %2645, 4294967295
  %2697 = getelementptr inbounds i32, ptr %6, i64 %2696
  %2698 = load i32, ptr %2697, align 4, !tbaa !5
  %2699 = mul nsw i32 %2698, %2695
  %2700 = add nsw i32 %2699, %2639
  %2701 = icmp sgt i64 %2637, 2
  %2702 = add nsw i64 %2638, -1
  %2703 = add i32 %2636, 1
  br i1 %2701, label %2635, label %2704, !llvm.loop !851

2704:                                             ; preds = %2694, %2632
  %2705 = phi i32 [ %2634, %2632 ], [ %2700, %2694 ]
  %2706 = icmp slt i32 %2705, %5
  br i1 %2706, label %2709, label %2707

2707:                                             ; preds = %2704
  %2708 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

2709:                                             ; preds = %2704
  %2710 = sext i32 %2705 to i64
  %2711 = getelementptr inbounds i64, ptr %2466, i64 %2710
  %2712 = load i64, ptr %2711, align 8, !tbaa !120
  %2713 = trunc i64 %2712 to i32
  %2714 = load i32, ptr %2468, align 4, !tbaa !5
  %2715 = icmp sgt i32 %2714, %2713
  br i1 %2715, label %2716, label %2717

2716:                                             ; preds = %2709
  store i32 %2713, ptr %2468, align 4, !tbaa !5
  br label %2717

2717:                                             ; preds = %2709, %2716
  %2718 = add nuw nsw i32 %2633, 1
  br i1 %2481, label %2719, label %2769

2719:                                             ; preds = %2717
  %2720 = load i32, ptr %4, align 4, !tbaa !5
  %2721 = load i32, ptr %12, align 4, !tbaa !5
  %2722 = add nsw i32 %2721, -1
  %2723 = icmp slt i32 %2720, %2722
  br i1 %2723, label %2746, label %2724

2724:                                             ; preds = %2719
  %2725 = icmp eq i32 %2720, %2722
  br i1 %2725, label %2726, label %2762

2726:                                             ; preds = %2724
  store i32 0, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2727, ptr %6, align 4, !tbaa !5
  br i1 %2486, label %2769, label %2728

2728:                                             ; preds = %2726, %2756
  %2729 = phi i64 [ %2760, %2756 ], [ 1, %2726 ]
  %2730 = getelementptr inbounds i32, ptr %4, i64 %2729
  %2731 = load i32, ptr %2730, align 4, !tbaa !5
  %2732 = getelementptr inbounds i32, ptr %12, i64 %2729
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, -1
  %2735 = icmp slt i32 %2731, %2734
  br i1 %2735, label %2736, label %2754

2736:                                             ; preds = %2728
  br i1 %2723, label %2746, label %2737

2737:                                             ; preds = %2736
  %2738 = shl i64 %2729, 32
  %2739 = add i64 %2738, -4294967296
  %2740 = ashr exact i64 %2739, 32
  %2741 = getelementptr inbounds i32, ptr %7, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2729
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = add nsw i32 %2744, %2742
  store i32 %2745, ptr %2743, align 4, !tbaa !5
  br label %2764

2746:                                             ; preds = %2719, %2736
  %2747 = phi i32 [ %2731, %2736 ], [ %2720, %2719 ]
  %2748 = phi ptr [ %2730, %2736 ], [ %4, %2719 ]
  %2749 = phi i64 [ %2729, %2736 ], [ 0, %2719 ]
  %2750 = add nsw i32 %2747, 1
  store i32 %2750, ptr %2748, align 4, !tbaa !5
  %2751 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = getelementptr inbounds i32, ptr %6, i64 %2749
  br label %2764

2754:                                             ; preds = %2728
  %2755 = icmp eq i32 %2731, %2734
  br i1 %2755, label %2756, label %2762

2756:                                             ; preds = %2754
  store i32 0, ptr %2730, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %8, i64 %2729
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2729
  store i32 %2758, ptr %2759, align 4, !tbaa !5
  %2760 = add nuw nsw i64 %2729, 1
  %2761 = icmp eq i64 %2760, %2484
  br i1 %2761, label %2769, label %2728, !llvm.loop !852

2762:                                             ; preds = %2724, %2754
  %2763 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2764:                                             ; preds = %2737, %2746
  %2765 = phi ptr [ %2753, %2746 ], [ %2730, %2737 ]
  %2766 = phi i32 [ %2752, %2746 ], [ 1, %2737 ]
  %2767 = load i32, ptr %2765, align 4, !tbaa !5
  %2768 = add nsw i32 %2767, %2766
  store i32 %2768, ptr %2765, align 4, !tbaa !5
  br label %2769

2769:                                             ; preds = %2756, %2764, %2726, %2717
  %2770 = icmp eq i32 %2718, %5
  br i1 %2770, label %5494, label %2632, !llvm.loop !853

2771:                                             ; preds = %2472
  %2772 = getelementptr inbounds i32, ptr %3, i64 %19
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = icmp eq i32 %2773, 0
  %2775 = icmp sgt i32 %5, 0
  br i1 %2774, label %2785, label %2776

2776:                                             ; preds = %2771
  br i1 %2775, label %2777, label %5494

2777:                                             ; preds = %2776
  %2778 = icmp sgt i32 %13, 1
  %2779 = icmp sgt i32 %13, 0
  %2780 = add i32 %13, -2
  %2781 = zext i32 %2780 to i64
  %2782 = zext i32 %13 to i64
  %2783 = add nuw i32 %5, 1
  %2784 = icmp eq i32 %13, 1
  br label %2926

2785:                                             ; preds = %2771
  br i1 %2775, label %2786, label %5494

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2794

2794:                                             ; preds = %2786, %2924
  %2795 = phi i32 [ 0, %2786 ], [ %2876, %2924 ]
  %2796 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2787, label %2797, label %2866

2797:                                             ; preds = %2794, %2856
  %2798 = phi i32 [ %2865, %2856 ], [ 0, %2794 ]
  %2799 = phi i64 [ %2807, %2856 ], [ %2791, %2794 ]
  %2800 = phi i64 [ %2864, %2856 ], [ %2790, %2794 ]
  %2801 = phi i32 [ %2862, %2856 ], [ %2796, %2794 ]
  %2802 = sub i32 %2789, %2798
  %2803 = tail call i32 @llvm.smin.i32(i32 %2802, i32 0)
  %2804 = sub i32 %2802, %2803
  %2805 = zext i32 %2804 to i64
  %2806 = add nuw nsw i64 %2805, 1
  %2807 = add nsw i64 %2799, -1
  %2808 = icmp ult i32 %2804, 31
  br i1 %2808, label %2844, label %2809

2809:                                             ; preds = %2797
  %2810 = and i64 %2806, 8589934560
  %2811 = sub i64 %2800, %2810
  br label %2812

2812:                                             ; preds = %2812, %2809
  %2813 = phi i64 [ 0, %2809 ], [ %2836, %2812 ]
  %2814 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2832, %2812 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2833, %2812 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2834, %2812 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2809 ], [ %2835, %2812 ]
  %2818 = sub i64 %2800, %2813
  %2819 = getelementptr inbounds i32, ptr %9, i64 %2818
  %2820 = getelementptr inbounds i32, ptr %2819, i64 -7
  %2821 = load <8 x i32>, ptr %2820, align 4, !tbaa !5
  %2822 = shufflevector <8 x i32> %2821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2823 = getelementptr inbounds i32, ptr %2819, i64 -15
  %2824 = load <8 x i32>, ptr %2823, align 4, !tbaa !5
  %2825 = shufflevector <8 x i32> %2824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2826 = getelementptr inbounds i32, ptr %2819, i64 -23
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !5
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2819, i64 -31
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !5
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = mul <8 x i32> %2822, %2814
  %2833 = mul <8 x i32> %2825, %2815
  %2834 = mul <8 x i32> %2828, %2816
  %2835 = mul <8 x i32> %2831, %2817
  %2836 = add nuw i64 %2813, 32
  %2837 = icmp eq i64 %2836, %2810
  br i1 %2837, label %2838, label %2812, !llvm.loop !854

2838:                                             ; preds = %2812
  %2839 = mul <8 x i32> %2833, %2832
  %2840 = mul <8 x i32> %2834, %2839
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2841)
  %2843 = icmp eq i64 %2806, %2810
  br i1 %2843, label %2856, label %2844

2844:                                             ; preds = %2797, %2838
  %2845 = phi i64 [ %2800, %2797 ], [ %2811, %2838 ]
  %2846 = phi i32 [ 1, %2797 ], [ %2842, %2838 ]
  br label %2847

2847:                                             ; preds = %2844, %2847
  %2848 = phi i64 [ %2853, %2847 ], [ %2845, %2844 ]
  %2849 = phi i32 [ %2852, %2847 ], [ %2846, %2844 ]
  %2850 = getelementptr inbounds i32, ptr %9, i64 %2848
  %2851 = load i32, ptr %2850, align 4, !tbaa !5
  %2852 = mul nsw i32 %2851, %2849
  %2853 = add nsw i64 %2848, -1
  %2854 = trunc i64 %2848 to i32
  %2855 = icmp sgt i32 %2854, 0
  br i1 %2855, label %2847, label %2856, !llvm.loop !855

2856:                                             ; preds = %2847, %2838
  %2857 = phi i32 [ %2842, %2838 ], [ %2852, %2847 ]
  %2858 = and i64 %2807, 4294967295
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2858
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = mul nsw i32 %2860, %2857
  %2862 = add nsw i32 %2861, %2801
  %2863 = icmp sgt i64 %2799, 2
  %2864 = add nsw i64 %2800, -1
  %2865 = add i32 %2798, 1
  br i1 %2863, label %2797, label %2866, !llvm.loop !856

2866:                                             ; preds = %2856, %2794
  %2867 = phi i32 [ %2796, %2794 ], [ %2862, %2856 ]
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds i64, ptr %2466, i64 %2868
  %2870 = load i64, ptr %2869, align 8, !tbaa !120
  %2871 = trunc i64 %2870 to i32
  %2872 = load i32, ptr %2468, align 4, !tbaa !5
  %2873 = icmp sgt i32 %2872, %2871
  br i1 %2873, label %2874, label %2875

2874:                                             ; preds = %2866
  store i32 %2871, ptr %2468, align 4, !tbaa !5
  br label %2875

2875:                                             ; preds = %2874, %2866
  %2876 = add nuw nsw i32 %2795, 1
  br i1 %2788, label %2877, label %2924

2877:                                             ; preds = %2875
  %2878 = load i32, ptr %4, align 4, !tbaa !5
  %2879 = load i32, ptr %12, align 4, !tbaa !5
  %2880 = add nsw i32 %2879, -1
  %2881 = icmp slt i32 %2878, %2880
  br i1 %2881, label %2901, label %2882

2882:                                             ; preds = %2877
  %2883 = icmp eq i32 %2878, %2880
  br i1 %2883, label %2884, label %2917

2884:                                             ; preds = %2882
  store i32 0, ptr %4, align 4, !tbaa !5
  %2885 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2885, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2924, label %2886

2886:                                             ; preds = %2884, %2911
  %2887 = phi i64 [ %2915, %2911 ], [ 1, %2884 ]
  %2888 = getelementptr inbounds i32, ptr %4, i64 %2887
  %2889 = load i32, ptr %2888, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %12, i64 %2887
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = add nsw i32 %2891, -1
  %2893 = icmp slt i32 %2889, %2892
  br i1 %2893, label %2894, label %2909

2894:                                             ; preds = %2886
  br i1 %2881, label %2901, label %2895

2895:                                             ; preds = %2894
  %2896 = getelementptr inbounds i32, ptr %7, i64 %2887
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2887
  %2899 = load i32, ptr %2898, align 4, !tbaa !5
  %2900 = add nsw i32 %2899, %2897
  store i32 %2900, ptr %2898, align 4, !tbaa !5
  br label %2919

2901:                                             ; preds = %2877, %2894
  %2902 = phi i32 [ %2889, %2894 ], [ %2878, %2877 ]
  %2903 = phi ptr [ %2888, %2894 ], [ %4, %2877 ]
  %2904 = phi i64 [ %2887, %2894 ], [ 0, %2877 ]
  %2905 = add nsw i32 %2902, 1
  store i32 %2905, ptr %2903, align 4, !tbaa !5
  %2906 = getelementptr inbounds i32, ptr %7, i64 %2904
  %2907 = load i32, ptr %2906, align 4, !tbaa !5
  %2908 = getelementptr inbounds i32, ptr %6, i64 %2904
  br label %2919

2909:                                             ; preds = %2886
  %2910 = icmp eq i32 %2889, %2892
  br i1 %2910, label %2911, label %2917

2911:                                             ; preds = %2909
  store i32 0, ptr %2888, align 4, !tbaa !5
  %2912 = getelementptr inbounds i32, ptr %8, i64 %2887
  %2913 = load i32, ptr %2912, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %6, i64 %2887
  store i32 %2913, ptr %2914, align 4, !tbaa !5
  %2915 = add nuw nsw i64 %2887, 1
  %2916 = icmp eq i64 %2915, %2791
  br i1 %2916, label %2924, label %2886, !llvm.loop !857

2917:                                             ; preds = %2882, %2909
  %2918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

2919:                                             ; preds = %2895, %2901
  %2920 = phi ptr [ %2908, %2901 ], [ %2888, %2895 ]
  %2921 = phi i32 [ %2907, %2901 ], [ 1, %2895 ]
  %2922 = load i32, ptr %2920, align 4, !tbaa !5
  %2923 = add nsw i32 %2922, %2921
  store i32 %2923, ptr %2920, align 4, !tbaa !5
  br label %2924

2924:                                             ; preds = %2911, %2919, %2884, %2875
  %2925 = icmp eq i32 %2876, %5
  br i1 %2925, label %5494, label %2794, !llvm.loop !858

2926:                                             ; preds = %2777, %3063
  %2927 = phi i32 [ 0, %2777 ], [ %3012, %3063 ]
  %2928 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2778, label %2929, label %2998

2929:                                             ; preds = %2926, %2988
  %2930 = phi i32 [ %2997, %2988 ], [ 0, %2926 ]
  %2931 = phi i64 [ %2939, %2988 ], [ %2782, %2926 ]
  %2932 = phi i64 [ %2996, %2988 ], [ %2781, %2926 ]
  %2933 = phi i32 [ %2994, %2988 ], [ %2928, %2926 ]
  %2934 = sub i32 %2780, %2930
  %2935 = tail call i32 @llvm.smin.i32(i32 %2934, i32 0)
  %2936 = sub i32 %2934, %2935
  %2937 = zext i32 %2936 to i64
  %2938 = add nuw nsw i64 %2937, 1
  %2939 = add nsw i64 %2931, -1
  %2940 = icmp ult i32 %2936, 31
  br i1 %2940, label %2976, label %2941

2941:                                             ; preds = %2929
  %2942 = and i64 %2938, 8589934560
  %2943 = sub i64 %2932, %2942
  br label %2944

2944:                                             ; preds = %2944, %2941
  %2945 = phi i64 [ 0, %2941 ], [ %2968, %2944 ]
  %2946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2941 ], [ %2964, %2944 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2941 ], [ %2965, %2944 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2941 ], [ %2966, %2944 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2941 ], [ %2967, %2944 ]
  %2950 = sub i64 %2932, %2945
  %2951 = getelementptr inbounds i32, ptr %11, i64 %2950
  %2952 = getelementptr inbounds i32, ptr %2951, i64 -7
  %2953 = load <8 x i32>, ptr %2952, align 4, !tbaa !5
  %2954 = shufflevector <8 x i32> %2953, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2955 = getelementptr inbounds i32, ptr %2951, i64 -15
  %2956 = load <8 x i32>, ptr %2955, align 4, !tbaa !5
  %2957 = shufflevector <8 x i32> %2956, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2958 = getelementptr inbounds i32, ptr %2951, i64 -23
  %2959 = load <8 x i32>, ptr %2958, align 4, !tbaa !5
  %2960 = shufflevector <8 x i32> %2959, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2961 = getelementptr inbounds i32, ptr %2951, i64 -31
  %2962 = load <8 x i32>, ptr %2961, align 4, !tbaa !5
  %2963 = shufflevector <8 x i32> %2962, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2964 = mul <8 x i32> %2954, %2946
  %2965 = mul <8 x i32> %2957, %2947
  %2966 = mul <8 x i32> %2960, %2948
  %2967 = mul <8 x i32> %2963, %2949
  %2968 = add nuw i64 %2945, 32
  %2969 = icmp eq i64 %2968, %2942
  br i1 %2969, label %2970, label %2944, !llvm.loop !859

2970:                                             ; preds = %2944
  %2971 = mul <8 x i32> %2965, %2964
  %2972 = mul <8 x i32> %2966, %2971
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2973)
  %2975 = icmp eq i64 %2938, %2942
  br i1 %2975, label %2988, label %2976

2976:                                             ; preds = %2929, %2970
  %2977 = phi i64 [ %2932, %2929 ], [ %2943, %2970 ]
  %2978 = phi i32 [ 1, %2929 ], [ %2974, %2970 ]
  br label %2979

2979:                                             ; preds = %2976, %2979
  %2980 = phi i64 [ %2985, %2979 ], [ %2977, %2976 ]
  %2981 = phi i32 [ %2984, %2979 ], [ %2978, %2976 ]
  %2982 = getelementptr inbounds i32, ptr %11, i64 %2980
  %2983 = load i32, ptr %2982, align 4, !tbaa !5
  %2984 = mul nsw i32 %2983, %2981
  %2985 = add nsw i64 %2980, -1
  %2986 = trunc i64 %2980 to i32
  %2987 = icmp sgt i32 %2986, 0
  br i1 %2987, label %2979, label %2988, !llvm.loop !860

2988:                                             ; preds = %2979, %2970
  %2989 = phi i32 [ %2974, %2970 ], [ %2984, %2979 ]
  %2990 = and i64 %2939, 4294967295
  %2991 = getelementptr inbounds i32, ptr %6, i64 %2990
  %2992 = load i32, ptr %2991, align 4, !tbaa !5
  %2993 = mul nsw i32 %2992, %2989
  %2994 = add nsw i32 %2993, %2933
  %2995 = icmp sgt i64 %2931, 2
  %2996 = add nsw i64 %2932, -1
  %2997 = add i32 %2930, 1
  br i1 %2995, label %2929, label %2998, !llvm.loop !861

2998:                                             ; preds = %2988, %2926
  %2999 = phi i32 [ %2928, %2926 ], [ %2994, %2988 ]
  %3000 = icmp slt i32 %2999, %5
  br i1 %3000, label %3003, label %3001

3001:                                             ; preds = %2998
  %3002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

3003:                                             ; preds = %2998
  %3004 = sext i32 %2999 to i64
  %3005 = getelementptr inbounds i64, ptr %2466, i64 %3004
  %3006 = load i64, ptr %3005, align 8, !tbaa !120
  %3007 = trunc i64 %3006 to i32
  %3008 = load i32, ptr %2468, align 4, !tbaa !5
  %3009 = icmp sgt i32 %3008, %3007
  br i1 %3009, label %3010, label %3011

3010:                                             ; preds = %3003
  store i32 %3007, ptr %2468, align 4, !tbaa !5
  br label %3011

3011:                                             ; preds = %3010, %3003
  %3012 = add nuw nsw i32 %2927, 1
  br i1 %2779, label %3013, label %3063

3013:                                             ; preds = %3011
  %3014 = load i32, ptr %4, align 4, !tbaa !5
  %3015 = load i32, ptr %12, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, -1
  %3017 = icmp slt i32 %3014, %3016
  br i1 %3017, label %3040, label %3018

3018:                                             ; preds = %3013
  %3019 = icmp eq i32 %3014, %3016
  br i1 %3019, label %3020, label %3056

3020:                                             ; preds = %3018
  store i32 0, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3021, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %3063, label %3022

3022:                                             ; preds = %3020, %3050
  %3023 = phi i64 [ %3054, %3050 ], [ 1, %3020 ]
  %3024 = getelementptr inbounds i32, ptr %4, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = getelementptr inbounds i32, ptr %12, i64 %3023
  %3027 = load i32, ptr %3026, align 4, !tbaa !5
  %3028 = add nsw i32 %3027, -1
  %3029 = icmp slt i32 %3025, %3028
  br i1 %3029, label %3030, label %3048

3030:                                             ; preds = %3022
  br i1 %3017, label %3040, label %3031

3031:                                             ; preds = %3030
  %3032 = shl i64 %3023, 32
  %3033 = add i64 %3032, -4294967296
  %3034 = ashr exact i64 %3033, 32
  %3035 = getelementptr inbounds i32, ptr %7, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3023
  %3038 = load i32, ptr %3037, align 4, !tbaa !5
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %3037, align 4, !tbaa !5
  br label %3058

3040:                                             ; preds = %3013, %3030
  %3041 = phi i32 [ %3025, %3030 ], [ %3014, %3013 ]
  %3042 = phi ptr [ %3024, %3030 ], [ %4, %3013 ]
  %3043 = phi i64 [ %3023, %3030 ], [ 0, %3013 ]
  %3044 = add nsw i32 %3041, 1
  store i32 %3044, ptr %3042, align 4, !tbaa !5
  %3045 = getelementptr inbounds i32, ptr %7, i64 %3043
  %3046 = load i32, ptr %3045, align 4, !tbaa !5
  %3047 = getelementptr inbounds i32, ptr %6, i64 %3043
  br label %3058

3048:                                             ; preds = %3022
  %3049 = icmp eq i32 %3025, %3028
  br i1 %3049, label %3050, label %3056

3050:                                             ; preds = %3048
  store i32 0, ptr %3024, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %8, i64 %3023
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3023
  store i32 %3052, ptr %3053, align 4, !tbaa !5
  %3054 = add nuw nsw i64 %3023, 1
  %3055 = icmp eq i64 %3054, %2782
  br i1 %3055, label %3063, label %3022, !llvm.loop !862

3056:                                             ; preds = %3018, %3048
  %3057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3058:                                             ; preds = %3031, %3040
  %3059 = phi ptr [ %3047, %3040 ], [ %3024, %3031 ]
  %3060 = phi i32 [ %3046, %3040 ], [ 1, %3031 ]
  %3061 = load i32, ptr %3059, align 4, !tbaa !5
  %3062 = add nsw i32 %3061, %3060
  store i32 %3062, ptr %3059, align 4, !tbaa !5
  br label %3063

3063:                                             ; preds = %3050, %3058, %3020, %3011
  %3064 = icmp eq i32 %3012, %5
  br i1 %3064, label %5494, label %2926, !llvm.loop !863

3065:                                             ; preds = %2472
  %3066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1262, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

3067:                                             ; preds = %18
  %3068 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3069 = load ptr, ptr %3068, align 8, !tbaa !9
  %3070 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3071 = load ptr, ptr %3070, align 8, !tbaa !9
  %3072 = load i64, ptr %3069, align 8, !tbaa !120
  store i64 %3072, ptr %3071, align 8, !tbaa !120
  %3073 = icmp eq i32 %13, 0
  br i1 %3073, label %3074, label %3078

3074:                                             ; preds = %3067
  %3075 = load i64, ptr %3069, align 8, !tbaa !120
  %3076 = icmp sgt i64 %3072, %3075
  br i1 %3076, label %3077, label %5494

3077:                                             ; preds = %3074
  store i64 %3075, ptr %3071, align 8, !tbaa !120
  br label %5494

3078:                                             ; preds = %3067
  switch i32 %1, label %3671 [
    i32 1, label %3079
    i32 0, label %3377
  ]

3079:                                             ; preds = %3078
  %3080 = getelementptr inbounds i32, ptr %3, i64 %19
  %3081 = load i32, ptr %3080, align 4, !tbaa !5
  %3082 = icmp eq i32 %3081, 0
  %3083 = icmp sgt i32 %5, 0
  br i1 %3082, label %3093, label %3084

3084:                                             ; preds = %3079
  br i1 %3083, label %3085, label %5494

3085:                                             ; preds = %3084
  %3086 = icmp sgt i32 %13, 1
  %3087 = icmp sgt i32 %13, 0
  %3088 = add i32 %13, -2
  %3089 = zext i32 %3088 to i64
  %3090 = zext i32 %13 to i64
  %3091 = add nuw i32 %5, 1
  %3092 = icmp eq i32 %13, 1
  br label %3238

3093:                                             ; preds = %3079
  br i1 %3083, label %3094, label %5494

3094:                                             ; preds = %3093
  %3095 = icmp sgt i32 %13, 1
  %3096 = icmp sgt i32 %13, 0
  %3097 = add i32 %13, -2
  %3098 = zext i32 %3097 to i64
  %3099 = zext i32 %13 to i64
  %3100 = add nuw i32 %5, 1
  %3101 = icmp eq i32 %13, 1
  br label %3102

3102:                                             ; preds = %3094, %3236
  %3103 = phi i64 [ %3072, %3094 ], [ %3187, %3236 ]
  %3104 = phi i32 [ 0, %3094 ], [ %3188, %3236 ]
  %3105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3095, label %3106, label %3175

3106:                                             ; preds = %3102, %3165
  %3107 = phi i32 [ %3174, %3165 ], [ 0, %3102 ]
  %3108 = phi i64 [ %3116, %3165 ], [ %3099, %3102 ]
  %3109 = phi i64 [ %3173, %3165 ], [ %3098, %3102 ]
  %3110 = phi i32 [ %3171, %3165 ], [ %3105, %3102 ]
  %3111 = sub i32 %3097, %3107
  %3112 = tail call i32 @llvm.smin.i32(i32 %3111, i32 0)
  %3113 = sub i32 %3111, %3112
  %3114 = zext i32 %3113 to i64
  %3115 = add nuw nsw i64 %3114, 1
  %3116 = add nsw i64 %3108, -1
  %3117 = icmp ult i32 %3113, 31
  br i1 %3117, label %3153, label %3118

3118:                                             ; preds = %3106
  %3119 = and i64 %3115, 8589934560
  %3120 = sub i64 %3109, %3119
  br label %3121

3121:                                             ; preds = %3121, %3118
  %3122 = phi i64 [ 0, %3118 ], [ %3145, %3121 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3141, %3121 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3142, %3121 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3143, %3121 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3144, %3121 ]
  %3127 = sub i64 %3109, %3122
  %3128 = getelementptr inbounds i32, ptr %9, i64 %3127
  %3129 = getelementptr inbounds i32, ptr %3128, i64 -7
  %3130 = load <8 x i32>, ptr %3129, align 4, !tbaa !5
  %3131 = shufflevector <8 x i32> %3130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3132 = getelementptr inbounds i32, ptr %3128, i64 -15
  %3133 = load <8 x i32>, ptr %3132, align 4, !tbaa !5
  %3134 = shufflevector <8 x i32> %3133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3135 = getelementptr inbounds i32, ptr %3128, i64 -23
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3128, i64 -31
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = mul <8 x i32> %3131, %3123
  %3142 = mul <8 x i32> %3134, %3124
  %3143 = mul <8 x i32> %3137, %3125
  %3144 = mul <8 x i32> %3140, %3126
  %3145 = add nuw i64 %3122, 32
  %3146 = icmp eq i64 %3145, %3119
  br i1 %3146, label %3147, label %3121, !llvm.loop !864

3147:                                             ; preds = %3121
  %3148 = mul <8 x i32> %3142, %3141
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = mul <8 x i32> %3144, %3149
  %3151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3150)
  %3152 = icmp eq i64 %3115, %3119
  br i1 %3152, label %3165, label %3153

3153:                                             ; preds = %3106, %3147
  %3154 = phi i64 [ %3109, %3106 ], [ %3120, %3147 ]
  %3155 = phi i32 [ 1, %3106 ], [ %3151, %3147 ]
  br label %3156

3156:                                             ; preds = %3153, %3156
  %3157 = phi i64 [ %3162, %3156 ], [ %3154, %3153 ]
  %3158 = phi i32 [ %3161, %3156 ], [ %3155, %3153 ]
  %3159 = getelementptr inbounds i32, ptr %9, i64 %3157
  %3160 = load i32, ptr %3159, align 4, !tbaa !5
  %3161 = mul nsw i32 %3160, %3158
  %3162 = add nsw i64 %3157, -1
  %3163 = trunc i64 %3157 to i32
  %3164 = icmp sgt i32 %3163, 0
  br i1 %3164, label %3156, label %3165, !llvm.loop !865

3165:                                             ; preds = %3156, %3147
  %3166 = phi i32 [ %3151, %3147 ], [ %3161, %3156 ]
  %3167 = and i64 %3116, 4294967295
  %3168 = getelementptr inbounds i32, ptr %6, i64 %3167
  %3169 = load i32, ptr %3168, align 4, !tbaa !5
  %3170 = mul nsw i32 %3169, %3166
  %3171 = add nsw i32 %3170, %3110
  %3172 = icmp sgt i64 %3108, 2
  %3173 = add nsw i64 %3109, -1
  %3174 = add i32 %3107, 1
  br i1 %3172, label %3106, label %3175, !llvm.loop !866

3175:                                             ; preds = %3165, %3102
  %3176 = phi i32 [ %3105, %3102 ], [ %3171, %3165 ]
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds double, ptr %2, i64 %3177
  %3179 = load double, ptr %3178, align 8, !tbaa !18
  %3180 = getelementptr inbounds i64, ptr %3069, i64 %3177
  %3181 = load i64, ptr %3180, align 8, !tbaa !120
  %3182 = fcmp fast one double %3179, 0.000000e+00
  %3183 = icmp sgt i64 %3103, %3181
  %3184 = select i1 %3182, i1 %3183, i1 false
  br i1 %3184, label %3185, label %3186

3185:                                             ; preds = %3175
  store i64 %3181, ptr %3071, align 8, !tbaa !120
  br label %3186

3186:                                             ; preds = %3185, %3175
  %3187 = phi i64 [ %3181, %3185 ], [ %3103, %3175 ]
  %3188 = add nuw nsw i32 %3104, 1
  br i1 %3096, label %3189, label %3236

3189:                                             ; preds = %3186
  %3190 = load i32, ptr %4, align 4, !tbaa !5
  %3191 = load i32, ptr %12, align 4, !tbaa !5
  %3192 = add nsw i32 %3191, -1
  %3193 = icmp slt i32 %3190, %3192
  br i1 %3193, label %3213, label %3194

3194:                                             ; preds = %3189
  %3195 = icmp eq i32 %3190, %3192
  br i1 %3195, label %3196, label %3229

3196:                                             ; preds = %3194
  store i32 0, ptr %4, align 4, !tbaa !5
  %3197 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3197, ptr %6, align 4, !tbaa !5
  br i1 %3101, label %3236, label %3198

3198:                                             ; preds = %3196, %3223
  %3199 = phi i64 [ %3227, %3223 ], [ 1, %3196 ]
  %3200 = getelementptr inbounds i32, ptr %4, i64 %3199
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %12, i64 %3199
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, -1
  %3205 = icmp slt i32 %3201, %3204
  br i1 %3205, label %3206, label %3221

3206:                                             ; preds = %3198
  br i1 %3193, label %3213, label %3207

3207:                                             ; preds = %3206
  %3208 = getelementptr inbounds i32, ptr %7, i64 %3199
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %6, i64 %3199
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, %3209
  store i32 %3212, ptr %3210, align 4, !tbaa !5
  br label %3231

3213:                                             ; preds = %3189, %3206
  %3214 = phi i32 [ %3201, %3206 ], [ %3190, %3189 ]
  %3215 = phi ptr [ %3200, %3206 ], [ %4, %3189 ]
  %3216 = phi i64 [ %3199, %3206 ], [ 0, %3189 ]
  %3217 = add nsw i32 %3214, 1
  store i32 %3217, ptr %3215, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %7, i64 %3216
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %6, i64 %3216
  br label %3231

3221:                                             ; preds = %3198
  %3222 = icmp eq i32 %3201, %3204
  br i1 %3222, label %3223, label %3229

3223:                                             ; preds = %3221
  store i32 0, ptr %3200, align 4, !tbaa !5
  %3224 = getelementptr inbounds i32, ptr %8, i64 %3199
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3199
  store i32 %3225, ptr %3226, align 4, !tbaa !5
  %3227 = add nuw nsw i64 %3199, 1
  %3228 = icmp eq i64 %3227, %3099
  br i1 %3228, label %3236, label %3198, !llvm.loop !867

3229:                                             ; preds = %3194, %3221
  %3230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3231:                                             ; preds = %3207, %3213
  %3232 = phi ptr [ %3220, %3213 ], [ %3200, %3207 ]
  %3233 = phi i32 [ %3219, %3213 ], [ 1, %3207 ]
  %3234 = load i32, ptr %3232, align 4, !tbaa !5
  %3235 = add nsw i32 %3234, %3233
  store i32 %3235, ptr %3232, align 4, !tbaa !5
  br label %3236

3236:                                             ; preds = %3223, %3231, %3196, %3186
  %3237 = icmp eq i32 %3188, %5
  br i1 %3237, label %5494, label %3102, !llvm.loop !868

3238:                                             ; preds = %3085, %3375
  %3239 = phi i64 [ %3072, %3085 ], [ %3323, %3375 ]
  %3240 = phi i32 [ 0, %3085 ], [ %3324, %3375 ]
  %3241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3086, label %3242, label %3311

3242:                                             ; preds = %3238, %3301
  %3243 = phi i32 [ %3310, %3301 ], [ 0, %3238 ]
  %3244 = phi i64 [ %3252, %3301 ], [ %3090, %3238 ]
  %3245 = phi i64 [ %3309, %3301 ], [ %3089, %3238 ]
  %3246 = phi i32 [ %3307, %3301 ], [ %3241, %3238 ]
  %3247 = sub i32 %3088, %3243
  %3248 = tail call i32 @llvm.smin.i32(i32 %3247, i32 0)
  %3249 = sub i32 %3247, %3248
  %3250 = zext i32 %3249 to i64
  %3251 = add nuw nsw i64 %3250, 1
  %3252 = add nsw i64 %3244, -1
  %3253 = icmp ult i32 %3249, 31
  br i1 %3253, label %3289, label %3254

3254:                                             ; preds = %3242
  %3255 = and i64 %3251, 8589934560
  %3256 = sub i64 %3245, %3255
  br label %3257

3257:                                             ; preds = %3257, %3254
  %3258 = phi i64 [ 0, %3254 ], [ %3281, %3257 ]
  %3259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3277, %3257 ]
  %3260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3278, %3257 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3279, %3257 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3280, %3257 ]
  %3263 = sub i64 %3245, %3258
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3263
  %3265 = getelementptr inbounds i32, ptr %3264, i64 -7
  %3266 = load <8 x i32>, ptr %3265, align 4, !tbaa !5
  %3267 = shufflevector <8 x i32> %3266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3268 = getelementptr inbounds i32, ptr %3264, i64 -15
  %3269 = load <8 x i32>, ptr %3268, align 4, !tbaa !5
  %3270 = shufflevector <8 x i32> %3269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3271 = getelementptr inbounds i32, ptr %3264, i64 -23
  %3272 = load <8 x i32>, ptr %3271, align 4, !tbaa !5
  %3273 = shufflevector <8 x i32> %3272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3274 = getelementptr inbounds i32, ptr %3264, i64 -31
  %3275 = load <8 x i32>, ptr %3274, align 4, !tbaa !5
  %3276 = shufflevector <8 x i32> %3275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3277 = mul <8 x i32> %3267, %3259
  %3278 = mul <8 x i32> %3270, %3260
  %3279 = mul <8 x i32> %3273, %3261
  %3280 = mul <8 x i32> %3276, %3262
  %3281 = add nuw i64 %3258, 32
  %3282 = icmp eq i64 %3281, %3255
  br i1 %3282, label %3283, label %3257, !llvm.loop !869

3283:                                             ; preds = %3257
  %3284 = mul <8 x i32> %3278, %3277
  %3285 = mul <8 x i32> %3279, %3284
  %3286 = mul <8 x i32> %3280, %3285
  %3287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3286)
  %3288 = icmp eq i64 %3251, %3255
  br i1 %3288, label %3301, label %3289

3289:                                             ; preds = %3242, %3283
  %3290 = phi i64 [ %3245, %3242 ], [ %3256, %3283 ]
  %3291 = phi i32 [ 1, %3242 ], [ %3287, %3283 ]
  br label %3292

3292:                                             ; preds = %3289, %3292
  %3293 = phi i64 [ %3298, %3292 ], [ %3290, %3289 ]
  %3294 = phi i32 [ %3297, %3292 ], [ %3291, %3289 ]
  %3295 = getelementptr inbounds i32, ptr %11, i64 %3293
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = mul nsw i32 %3296, %3294
  %3298 = add nsw i64 %3293, -1
  %3299 = trunc i64 %3293 to i32
  %3300 = icmp sgt i32 %3299, 0
  br i1 %3300, label %3292, label %3301, !llvm.loop !870

3301:                                             ; preds = %3292, %3283
  %3302 = phi i32 [ %3287, %3283 ], [ %3297, %3292 ]
  %3303 = and i64 %3252, 4294967295
  %3304 = getelementptr inbounds i32, ptr %6, i64 %3303
  %3305 = load i32, ptr %3304, align 4, !tbaa !5
  %3306 = mul nsw i32 %3305, %3302
  %3307 = add nsw i32 %3306, %3246
  %3308 = icmp sgt i64 %3244, 2
  %3309 = add nsw i64 %3245, -1
  %3310 = add i32 %3243, 1
  br i1 %3308, label %3242, label %3311, !llvm.loop !871

3311:                                             ; preds = %3301, %3238
  %3312 = phi i32 [ %3241, %3238 ], [ %3307, %3301 ]
  %3313 = icmp slt i32 %3312, %5
  br i1 %3313, label %3316, label %3314

3314:                                             ; preds = %3311
  %3315 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

3316:                                             ; preds = %3311
  %3317 = sext i32 %3312 to i64
  %3318 = getelementptr inbounds i64, ptr %3069, i64 %3317
  %3319 = load i64, ptr %3318, align 8, !tbaa !120
  %3320 = icmp sgt i64 %3239, %3319
  br i1 %3320, label %3321, label %3322

3321:                                             ; preds = %3316
  store i64 %3319, ptr %3071, align 8, !tbaa !120
  br label %3322

3322:                                             ; preds = %3316, %3321
  %3323 = phi i64 [ %3239, %3316 ], [ %3319, %3321 ]
  %3324 = add nuw nsw i32 %3240, 1
  br i1 %3087, label %3325, label %3375

3325:                                             ; preds = %3322
  %3326 = load i32, ptr %4, align 4, !tbaa !5
  %3327 = load i32, ptr %12, align 4, !tbaa !5
  %3328 = add nsw i32 %3327, -1
  %3329 = icmp slt i32 %3326, %3328
  br i1 %3329, label %3352, label %3330

3330:                                             ; preds = %3325
  %3331 = icmp eq i32 %3326, %3328
  br i1 %3331, label %3332, label %3368

3332:                                             ; preds = %3330
  store i32 0, ptr %4, align 4, !tbaa !5
  %3333 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3333, ptr %6, align 4, !tbaa !5
  br i1 %3092, label %3375, label %3334

3334:                                             ; preds = %3332, %3362
  %3335 = phi i64 [ %3366, %3362 ], [ 1, %3332 ]
  %3336 = getelementptr inbounds i32, ptr %4, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !5
  %3338 = getelementptr inbounds i32, ptr %12, i64 %3335
  %3339 = load i32, ptr %3338, align 4, !tbaa !5
  %3340 = add nsw i32 %3339, -1
  %3341 = icmp slt i32 %3337, %3340
  br i1 %3341, label %3342, label %3360

3342:                                             ; preds = %3334
  br i1 %3329, label %3352, label %3343

3343:                                             ; preds = %3342
  %3344 = shl i64 %3335, 32
  %3345 = add i64 %3344, -4294967296
  %3346 = ashr exact i64 %3345, 32
  %3347 = getelementptr inbounds i32, ptr %7, i64 %3346
  %3348 = load i32, ptr %3347, align 4, !tbaa !5
  %3349 = getelementptr inbounds i32, ptr %6, i64 %3335
  %3350 = load i32, ptr %3349, align 4, !tbaa !5
  %3351 = add nsw i32 %3350, %3348
  store i32 %3351, ptr %3349, align 4, !tbaa !5
  br label %3370

3352:                                             ; preds = %3325, %3342
  %3353 = phi i32 [ %3337, %3342 ], [ %3326, %3325 ]
  %3354 = phi ptr [ %3336, %3342 ], [ %4, %3325 ]
  %3355 = phi i64 [ %3335, %3342 ], [ 0, %3325 ]
  %3356 = add nsw i32 %3353, 1
  store i32 %3356, ptr %3354, align 4, !tbaa !5
  %3357 = getelementptr inbounds i32, ptr %7, i64 %3355
  %3358 = load i32, ptr %3357, align 4, !tbaa !5
  %3359 = getelementptr inbounds i32, ptr %6, i64 %3355
  br label %3370

3360:                                             ; preds = %3334
  %3361 = icmp eq i32 %3337, %3340
  br i1 %3361, label %3362, label %3368

3362:                                             ; preds = %3360
  store i32 0, ptr %3336, align 4, !tbaa !5
  %3363 = getelementptr inbounds i32, ptr %8, i64 %3335
  %3364 = load i32, ptr %3363, align 4, !tbaa !5
  %3365 = getelementptr inbounds i32, ptr %6, i64 %3335
  store i32 %3364, ptr %3365, align 4, !tbaa !5
  %3366 = add nuw nsw i64 %3335, 1
  %3367 = icmp eq i64 %3366, %3090
  br i1 %3367, label %3375, label %3334, !llvm.loop !872

3368:                                             ; preds = %3330, %3360
  %3369 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3370:                                             ; preds = %3343, %3352
  %3371 = phi ptr [ %3359, %3352 ], [ %3336, %3343 ]
  %3372 = phi i32 [ %3358, %3352 ], [ 1, %3343 ]
  %3373 = load i32, ptr %3371, align 4, !tbaa !5
  %3374 = add nsw i32 %3373, %3372
  store i32 %3374, ptr %3371, align 4, !tbaa !5
  br label %3375

3375:                                             ; preds = %3362, %3370, %3332, %3322
  %3376 = icmp eq i32 %3324, %5
  br i1 %3376, label %5494, label %3238, !llvm.loop !873

3377:                                             ; preds = %3078
  %3378 = getelementptr inbounds i32, ptr %3, i64 %19
  %3379 = load i32, ptr %3378, align 4, !tbaa !5
  %3380 = icmp eq i32 %3379, 0
  %3381 = icmp sgt i32 %5, 0
  br i1 %3380, label %3391, label %3382

3382:                                             ; preds = %3377
  br i1 %3381, label %3383, label %5494

3383:                                             ; preds = %3382
  %3384 = icmp sgt i32 %13, 1
  %3385 = icmp sgt i32 %13, 0
  %3386 = add i32 %13, -2
  %3387 = zext i32 %3386 to i64
  %3388 = zext i32 %13 to i64
  %3389 = add nuw i32 %5, 1
  %3390 = icmp eq i32 %13, 1
  br label %3532

3391:                                             ; preds = %3377
  br i1 %3381, label %3392, label %5494

3392:                                             ; preds = %3391
  %3393 = icmp sgt i32 %13, 1
  %3394 = icmp sgt i32 %13, 0
  %3395 = add i32 %13, -2
  %3396 = zext i32 %3395 to i64
  %3397 = zext i32 %13 to i64
  %3398 = add nuw i32 %5, 1
  %3399 = icmp eq i32 %13, 1
  br label %3400

3400:                                             ; preds = %3392, %3530
  %3401 = phi i64 [ %3072, %3392 ], [ %3481, %3530 ]
  %3402 = phi i32 [ 0, %3392 ], [ %3482, %3530 ]
  %3403 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3393, label %3404, label %3473

3404:                                             ; preds = %3400, %3463
  %3405 = phi i32 [ %3472, %3463 ], [ 0, %3400 ]
  %3406 = phi i64 [ %3414, %3463 ], [ %3397, %3400 ]
  %3407 = phi i64 [ %3471, %3463 ], [ %3396, %3400 ]
  %3408 = phi i32 [ %3469, %3463 ], [ %3403, %3400 ]
  %3409 = sub i32 %3395, %3405
  %3410 = tail call i32 @llvm.smin.i32(i32 %3409, i32 0)
  %3411 = sub i32 %3409, %3410
  %3412 = zext i32 %3411 to i64
  %3413 = add nuw nsw i64 %3412, 1
  %3414 = add nsw i64 %3406, -1
  %3415 = icmp ult i32 %3411, 31
  br i1 %3415, label %3451, label %3416

3416:                                             ; preds = %3404
  %3417 = and i64 %3413, 8589934560
  %3418 = sub i64 %3407, %3417
  br label %3419

3419:                                             ; preds = %3419, %3416
  %3420 = phi i64 [ 0, %3416 ], [ %3443, %3419 ]
  %3421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3416 ], [ %3439, %3419 ]
  %3422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3416 ], [ %3440, %3419 ]
  %3423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3416 ], [ %3441, %3419 ]
  %3424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3416 ], [ %3442, %3419 ]
  %3425 = sub i64 %3407, %3420
  %3426 = getelementptr inbounds i32, ptr %9, i64 %3425
  %3427 = getelementptr inbounds i32, ptr %3426, i64 -7
  %3428 = load <8 x i32>, ptr %3427, align 4, !tbaa !5
  %3429 = shufflevector <8 x i32> %3428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3430 = getelementptr inbounds i32, ptr %3426, i64 -15
  %3431 = load <8 x i32>, ptr %3430, align 4, !tbaa !5
  %3432 = shufflevector <8 x i32> %3431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3433 = getelementptr inbounds i32, ptr %3426, i64 -23
  %3434 = load <8 x i32>, ptr %3433, align 4, !tbaa !5
  %3435 = shufflevector <8 x i32> %3434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3436 = getelementptr inbounds i32, ptr %3426, i64 -31
  %3437 = load <8 x i32>, ptr %3436, align 4, !tbaa !5
  %3438 = shufflevector <8 x i32> %3437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3439 = mul <8 x i32> %3429, %3421
  %3440 = mul <8 x i32> %3432, %3422
  %3441 = mul <8 x i32> %3435, %3423
  %3442 = mul <8 x i32> %3438, %3424
  %3443 = add nuw i64 %3420, 32
  %3444 = icmp eq i64 %3443, %3417
  br i1 %3444, label %3445, label %3419, !llvm.loop !874

3445:                                             ; preds = %3419
  %3446 = mul <8 x i32> %3440, %3439
  %3447 = mul <8 x i32> %3441, %3446
  %3448 = mul <8 x i32> %3442, %3447
  %3449 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3448)
  %3450 = icmp eq i64 %3413, %3417
  br i1 %3450, label %3463, label %3451

3451:                                             ; preds = %3404, %3445
  %3452 = phi i64 [ %3407, %3404 ], [ %3418, %3445 ]
  %3453 = phi i32 [ 1, %3404 ], [ %3449, %3445 ]
  br label %3454

3454:                                             ; preds = %3451, %3454
  %3455 = phi i64 [ %3460, %3454 ], [ %3452, %3451 ]
  %3456 = phi i32 [ %3459, %3454 ], [ %3453, %3451 ]
  %3457 = getelementptr inbounds i32, ptr %9, i64 %3455
  %3458 = load i32, ptr %3457, align 4, !tbaa !5
  %3459 = mul nsw i32 %3458, %3456
  %3460 = add nsw i64 %3455, -1
  %3461 = trunc i64 %3455 to i32
  %3462 = icmp sgt i32 %3461, 0
  br i1 %3462, label %3454, label %3463, !llvm.loop !875

3463:                                             ; preds = %3454, %3445
  %3464 = phi i32 [ %3449, %3445 ], [ %3459, %3454 ]
  %3465 = and i64 %3414, 4294967295
  %3466 = getelementptr inbounds i32, ptr %6, i64 %3465
  %3467 = load i32, ptr %3466, align 4, !tbaa !5
  %3468 = mul nsw i32 %3467, %3464
  %3469 = add nsw i32 %3468, %3408
  %3470 = icmp sgt i64 %3406, 2
  %3471 = add nsw i64 %3407, -1
  %3472 = add i32 %3405, 1
  br i1 %3470, label %3404, label %3473, !llvm.loop !876

3473:                                             ; preds = %3463, %3400
  %3474 = phi i32 [ %3403, %3400 ], [ %3469, %3463 ]
  %3475 = sext i32 %3474 to i64
  %3476 = getelementptr inbounds i64, ptr %3069, i64 %3475
  %3477 = load i64, ptr %3476, align 8, !tbaa !120
  %3478 = icmp sgt i64 %3401, %3477
  br i1 %3478, label %3479, label %3480

3479:                                             ; preds = %3473
  store i64 %3477, ptr %3071, align 8, !tbaa !120
  br label %3480

3480:                                             ; preds = %3479, %3473
  %3481 = phi i64 [ %3477, %3479 ], [ %3401, %3473 ]
  %3482 = add nuw nsw i32 %3402, 1
  br i1 %3394, label %3483, label %3530

3483:                                             ; preds = %3480
  %3484 = load i32, ptr %4, align 4, !tbaa !5
  %3485 = load i32, ptr %12, align 4, !tbaa !5
  %3486 = add nsw i32 %3485, -1
  %3487 = icmp slt i32 %3484, %3486
  br i1 %3487, label %3507, label %3488

3488:                                             ; preds = %3483
  %3489 = icmp eq i32 %3484, %3486
  br i1 %3489, label %3490, label %3523

3490:                                             ; preds = %3488
  store i32 0, ptr %4, align 4, !tbaa !5
  %3491 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3491, ptr %6, align 4, !tbaa !5
  br i1 %3399, label %3530, label %3492

3492:                                             ; preds = %3490, %3517
  %3493 = phi i64 [ %3521, %3517 ], [ 1, %3490 ]
  %3494 = getelementptr inbounds i32, ptr %4, i64 %3493
  %3495 = load i32, ptr %3494, align 4, !tbaa !5
  %3496 = getelementptr inbounds i32, ptr %12, i64 %3493
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = add nsw i32 %3497, -1
  %3499 = icmp slt i32 %3495, %3498
  br i1 %3499, label %3500, label %3515

3500:                                             ; preds = %3492
  br i1 %3487, label %3507, label %3501

3501:                                             ; preds = %3500
  %3502 = getelementptr inbounds i32, ptr %7, i64 %3493
  %3503 = load i32, ptr %3502, align 4, !tbaa !5
  %3504 = getelementptr inbounds i32, ptr %6, i64 %3493
  %3505 = load i32, ptr %3504, align 4, !tbaa !5
  %3506 = add nsw i32 %3505, %3503
  store i32 %3506, ptr %3504, align 4, !tbaa !5
  br label %3525

3507:                                             ; preds = %3483, %3500
  %3508 = phi i32 [ %3495, %3500 ], [ %3484, %3483 ]
  %3509 = phi ptr [ %3494, %3500 ], [ %4, %3483 ]
  %3510 = phi i64 [ %3493, %3500 ], [ 0, %3483 ]
  %3511 = add nsw i32 %3508, 1
  store i32 %3511, ptr %3509, align 4, !tbaa !5
  %3512 = getelementptr inbounds i32, ptr %7, i64 %3510
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %6, i64 %3510
  br label %3525

3515:                                             ; preds = %3492
  %3516 = icmp eq i32 %3495, %3498
  br i1 %3516, label %3517, label %3523

3517:                                             ; preds = %3515
  store i32 0, ptr %3494, align 4, !tbaa !5
  %3518 = getelementptr inbounds i32, ptr %8, i64 %3493
  %3519 = load i32, ptr %3518, align 4, !tbaa !5
  %3520 = getelementptr inbounds i32, ptr %6, i64 %3493
  store i32 %3519, ptr %3520, align 4, !tbaa !5
  %3521 = add nuw nsw i64 %3493, 1
  %3522 = icmp eq i64 %3521, %3397
  br i1 %3522, label %3530, label %3492, !llvm.loop !877

3523:                                             ; preds = %3488, %3515
  %3524 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3525:                                             ; preds = %3501, %3507
  %3526 = phi ptr [ %3514, %3507 ], [ %3494, %3501 ]
  %3527 = phi i32 [ %3513, %3507 ], [ 1, %3501 ]
  %3528 = load i32, ptr %3526, align 4, !tbaa !5
  %3529 = add nsw i32 %3528, %3527
  store i32 %3529, ptr %3526, align 4, !tbaa !5
  br label %3530

3530:                                             ; preds = %3517, %3525, %3490, %3480
  %3531 = icmp eq i32 %3482, %5
  br i1 %3531, label %5494, label %3400, !llvm.loop !878

3532:                                             ; preds = %3383, %3669
  %3533 = phi i64 [ %3072, %3383 ], [ %3617, %3669 ]
  %3534 = phi i32 [ 0, %3383 ], [ %3618, %3669 ]
  %3535 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3384, label %3536, label %3605

3536:                                             ; preds = %3532, %3595
  %3537 = phi i32 [ %3604, %3595 ], [ 0, %3532 ]
  %3538 = phi i64 [ %3546, %3595 ], [ %3388, %3532 ]
  %3539 = phi i64 [ %3603, %3595 ], [ %3387, %3532 ]
  %3540 = phi i32 [ %3601, %3595 ], [ %3535, %3532 ]
  %3541 = sub i32 %3386, %3537
  %3542 = tail call i32 @llvm.smin.i32(i32 %3541, i32 0)
  %3543 = sub i32 %3541, %3542
  %3544 = zext i32 %3543 to i64
  %3545 = add nuw nsw i64 %3544, 1
  %3546 = add nsw i64 %3538, -1
  %3547 = icmp ult i32 %3543, 31
  br i1 %3547, label %3583, label %3548

3548:                                             ; preds = %3536
  %3549 = and i64 %3545, 8589934560
  %3550 = sub i64 %3539, %3549
  br label %3551

3551:                                             ; preds = %3551, %3548
  %3552 = phi i64 [ 0, %3548 ], [ %3575, %3551 ]
  %3553 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3548 ], [ %3571, %3551 ]
  %3554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3548 ], [ %3572, %3551 ]
  %3555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3548 ], [ %3573, %3551 ]
  %3556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3548 ], [ %3574, %3551 ]
  %3557 = sub i64 %3539, %3552
  %3558 = getelementptr inbounds i32, ptr %11, i64 %3557
  %3559 = getelementptr inbounds i32, ptr %3558, i64 -7
  %3560 = load <8 x i32>, ptr %3559, align 4, !tbaa !5
  %3561 = shufflevector <8 x i32> %3560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3562 = getelementptr inbounds i32, ptr %3558, i64 -15
  %3563 = load <8 x i32>, ptr %3562, align 4, !tbaa !5
  %3564 = shufflevector <8 x i32> %3563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3565 = getelementptr inbounds i32, ptr %3558, i64 -23
  %3566 = load <8 x i32>, ptr %3565, align 4, !tbaa !5
  %3567 = shufflevector <8 x i32> %3566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3568 = getelementptr inbounds i32, ptr %3558, i64 -31
  %3569 = load <8 x i32>, ptr %3568, align 4, !tbaa !5
  %3570 = shufflevector <8 x i32> %3569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3571 = mul <8 x i32> %3561, %3553
  %3572 = mul <8 x i32> %3564, %3554
  %3573 = mul <8 x i32> %3567, %3555
  %3574 = mul <8 x i32> %3570, %3556
  %3575 = add nuw i64 %3552, 32
  %3576 = icmp eq i64 %3575, %3549
  br i1 %3576, label %3577, label %3551, !llvm.loop !879

3577:                                             ; preds = %3551
  %3578 = mul <8 x i32> %3572, %3571
  %3579 = mul <8 x i32> %3573, %3578
  %3580 = mul <8 x i32> %3574, %3579
  %3581 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3580)
  %3582 = icmp eq i64 %3545, %3549
  br i1 %3582, label %3595, label %3583

3583:                                             ; preds = %3536, %3577
  %3584 = phi i64 [ %3539, %3536 ], [ %3550, %3577 ]
  %3585 = phi i32 [ 1, %3536 ], [ %3581, %3577 ]
  br label %3586

3586:                                             ; preds = %3583, %3586
  %3587 = phi i64 [ %3592, %3586 ], [ %3584, %3583 ]
  %3588 = phi i32 [ %3591, %3586 ], [ %3585, %3583 ]
  %3589 = getelementptr inbounds i32, ptr %11, i64 %3587
  %3590 = load i32, ptr %3589, align 4, !tbaa !5
  %3591 = mul nsw i32 %3590, %3588
  %3592 = add nsw i64 %3587, -1
  %3593 = trunc i64 %3587 to i32
  %3594 = icmp sgt i32 %3593, 0
  br i1 %3594, label %3586, label %3595, !llvm.loop !880

3595:                                             ; preds = %3586, %3577
  %3596 = phi i32 [ %3581, %3577 ], [ %3591, %3586 ]
  %3597 = and i64 %3546, 4294967295
  %3598 = getelementptr inbounds i32, ptr %6, i64 %3597
  %3599 = load i32, ptr %3598, align 4, !tbaa !5
  %3600 = mul nsw i32 %3599, %3596
  %3601 = add nsw i32 %3600, %3540
  %3602 = icmp sgt i64 %3538, 2
  %3603 = add nsw i64 %3539, -1
  %3604 = add i32 %3537, 1
  br i1 %3602, label %3536, label %3605, !llvm.loop !881

3605:                                             ; preds = %3595, %3532
  %3606 = phi i32 [ %3535, %3532 ], [ %3601, %3595 ]
  %3607 = icmp slt i32 %3606, %5
  br i1 %3607, label %3610, label %3608

3608:                                             ; preds = %3605
  %3609 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

3610:                                             ; preds = %3605
  %3611 = sext i32 %3606 to i64
  %3612 = getelementptr inbounds i64, ptr %3069, i64 %3611
  %3613 = load i64, ptr %3612, align 8, !tbaa !120
  %3614 = icmp sgt i64 %3533, %3613
  br i1 %3614, label %3615, label %3616

3615:                                             ; preds = %3610
  store i64 %3613, ptr %3071, align 8, !tbaa !120
  br label %3616

3616:                                             ; preds = %3615, %3610
  %3617 = phi i64 [ %3613, %3615 ], [ %3533, %3610 ]
  %3618 = add nuw nsw i32 %3534, 1
  br i1 %3385, label %3619, label %3669

3619:                                             ; preds = %3616
  %3620 = load i32, ptr %4, align 4, !tbaa !5
  %3621 = load i32, ptr %12, align 4, !tbaa !5
  %3622 = add nsw i32 %3621, -1
  %3623 = icmp slt i32 %3620, %3622
  br i1 %3623, label %3646, label %3624

3624:                                             ; preds = %3619
  %3625 = icmp eq i32 %3620, %3622
  br i1 %3625, label %3626, label %3662

3626:                                             ; preds = %3624
  store i32 0, ptr %4, align 4, !tbaa !5
  %3627 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3627, ptr %6, align 4, !tbaa !5
  br i1 %3390, label %3669, label %3628

3628:                                             ; preds = %3626, %3656
  %3629 = phi i64 [ %3660, %3656 ], [ 1, %3626 ]
  %3630 = getelementptr inbounds i32, ptr %4, i64 %3629
  %3631 = load i32, ptr %3630, align 4, !tbaa !5
  %3632 = getelementptr inbounds i32, ptr %12, i64 %3629
  %3633 = load i32, ptr %3632, align 4, !tbaa !5
  %3634 = add nsw i32 %3633, -1
  %3635 = icmp slt i32 %3631, %3634
  br i1 %3635, label %3636, label %3654

3636:                                             ; preds = %3628
  br i1 %3623, label %3646, label %3637

3637:                                             ; preds = %3636
  %3638 = shl i64 %3629, 32
  %3639 = add i64 %3638, -4294967296
  %3640 = ashr exact i64 %3639, 32
  %3641 = getelementptr inbounds i32, ptr %7, i64 %3640
  %3642 = load i32, ptr %3641, align 4, !tbaa !5
  %3643 = getelementptr inbounds i32, ptr %6, i64 %3629
  %3644 = load i32, ptr %3643, align 4, !tbaa !5
  %3645 = add nsw i32 %3644, %3642
  store i32 %3645, ptr %3643, align 4, !tbaa !5
  br label %3664

3646:                                             ; preds = %3619, %3636
  %3647 = phi i32 [ %3631, %3636 ], [ %3620, %3619 ]
  %3648 = phi ptr [ %3630, %3636 ], [ %4, %3619 ]
  %3649 = phi i64 [ %3629, %3636 ], [ 0, %3619 ]
  %3650 = add nsw i32 %3647, 1
  store i32 %3650, ptr %3648, align 4, !tbaa !5
  %3651 = getelementptr inbounds i32, ptr %7, i64 %3649
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = getelementptr inbounds i32, ptr %6, i64 %3649
  br label %3664

3654:                                             ; preds = %3628
  %3655 = icmp eq i32 %3631, %3634
  br i1 %3655, label %3656, label %3662

3656:                                             ; preds = %3654
  store i32 0, ptr %3630, align 4, !tbaa !5
  %3657 = getelementptr inbounds i32, ptr %8, i64 %3629
  %3658 = load i32, ptr %3657, align 4, !tbaa !5
  %3659 = getelementptr inbounds i32, ptr %6, i64 %3629
  store i32 %3658, ptr %3659, align 4, !tbaa !5
  %3660 = add nuw nsw i64 %3629, 1
  %3661 = icmp eq i64 %3660, %3388
  br i1 %3661, label %3669, label %3628, !llvm.loop !882

3662:                                             ; preds = %3624, %3654
  %3663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3664:                                             ; preds = %3637, %3646
  %3665 = phi ptr [ %3653, %3646 ], [ %3630, %3637 ]
  %3666 = phi i32 [ %3652, %3646 ], [ 1, %3637 ]
  %3667 = load i32, ptr %3665, align 4, !tbaa !5
  %3668 = add nsw i32 %3667, %3666
  store i32 %3668, ptr %3665, align 4, !tbaa !5
  br label %3669

3669:                                             ; preds = %3656, %3664, %3626, %3616
  %3670 = icmp eq i32 %3618, %5
  br i1 %3670, label %5494, label %3532, !llvm.loop !883

3671:                                             ; preds = %3078
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1267, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

3673:                                             ; preds = %18
  %3674 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3675 = load ptr, ptr %3674, align 8, !tbaa !9
  %3676 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3677 = load ptr, ptr %3676, align 8, !tbaa !9
  %3678 = load i64, ptr %3675, align 8, !tbaa !120
  %3679 = sitofp i64 %3678 to double
  store double %3679, ptr %3677, align 8, !tbaa !18
  %3680 = icmp eq i32 %13, 0
  br i1 %3680, label %5494, label %3681

3681:                                             ; preds = %3673
  switch i32 %1, label %4278 [
    i32 1, label %3682
    i32 0, label %3982
  ]

3682:                                             ; preds = %3681
  %3683 = getelementptr inbounds i32, ptr %3, i64 %19
  %3684 = load i32, ptr %3683, align 4, !tbaa !5
  %3685 = icmp eq i32 %3684, 0
  %3686 = icmp sgt i32 %5, 0
  br i1 %3685, label %3696, label %3687

3687:                                             ; preds = %3682
  br i1 %3686, label %3688, label %5494

3688:                                             ; preds = %3687
  %3689 = icmp sgt i32 %13, 1
  %3690 = icmp sgt i32 %13, 0
  %3691 = add i32 %13, -2
  %3692 = zext i32 %3691 to i64
  %3693 = zext i32 %13 to i64
  %3694 = add nuw i32 %5, 1
  %3695 = icmp eq i32 %13, 1
  br label %3842

3696:                                             ; preds = %3682
  br i1 %3686, label %3697, label %5494

3697:                                             ; preds = %3696
  %3698 = icmp sgt i32 %13, 1
  %3699 = icmp sgt i32 %13, 0
  %3700 = add i32 %13, -2
  %3701 = zext i32 %3700 to i64
  %3702 = zext i32 %13 to i64
  %3703 = add nuw i32 %5, 1
  %3704 = icmp eq i32 %13, 1
  br label %3705

3705:                                             ; preds = %3697, %3840
  %3706 = phi double [ %3679, %3697 ], [ %3791, %3840 ]
  %3707 = phi i32 [ 0, %3697 ], [ %3792, %3840 ]
  %3708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3698, label %3709, label %3778

3709:                                             ; preds = %3705, %3768
  %3710 = phi i32 [ %3777, %3768 ], [ 0, %3705 ]
  %3711 = phi i64 [ %3719, %3768 ], [ %3702, %3705 ]
  %3712 = phi i64 [ %3776, %3768 ], [ %3701, %3705 ]
  %3713 = phi i32 [ %3774, %3768 ], [ %3708, %3705 ]
  %3714 = sub i32 %3700, %3710
  %3715 = tail call i32 @llvm.smin.i32(i32 %3714, i32 0)
  %3716 = sub i32 %3714, %3715
  %3717 = zext i32 %3716 to i64
  %3718 = add nuw nsw i64 %3717, 1
  %3719 = add nsw i64 %3711, -1
  %3720 = icmp ult i32 %3716, 31
  br i1 %3720, label %3756, label %3721

3721:                                             ; preds = %3709
  %3722 = and i64 %3718, 8589934560
  %3723 = sub i64 %3712, %3722
  br label %3724

3724:                                             ; preds = %3724, %3721
  %3725 = phi i64 [ 0, %3721 ], [ %3748, %3724 ]
  %3726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3721 ], [ %3744, %3724 ]
  %3727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3721 ], [ %3745, %3724 ]
  %3728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3721 ], [ %3746, %3724 ]
  %3729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3721 ], [ %3747, %3724 ]
  %3730 = sub i64 %3712, %3725
  %3731 = getelementptr inbounds i32, ptr %9, i64 %3730
  %3732 = getelementptr inbounds i32, ptr %3731, i64 -7
  %3733 = load <8 x i32>, ptr %3732, align 4, !tbaa !5
  %3734 = shufflevector <8 x i32> %3733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3735 = getelementptr inbounds i32, ptr %3731, i64 -15
  %3736 = load <8 x i32>, ptr %3735, align 4, !tbaa !5
  %3737 = shufflevector <8 x i32> %3736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3738 = getelementptr inbounds i32, ptr %3731, i64 -23
  %3739 = load <8 x i32>, ptr %3738, align 4, !tbaa !5
  %3740 = shufflevector <8 x i32> %3739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3741 = getelementptr inbounds i32, ptr %3731, i64 -31
  %3742 = load <8 x i32>, ptr %3741, align 4, !tbaa !5
  %3743 = shufflevector <8 x i32> %3742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3744 = mul <8 x i32> %3734, %3726
  %3745 = mul <8 x i32> %3737, %3727
  %3746 = mul <8 x i32> %3740, %3728
  %3747 = mul <8 x i32> %3743, %3729
  %3748 = add nuw i64 %3725, 32
  %3749 = icmp eq i64 %3748, %3722
  br i1 %3749, label %3750, label %3724, !llvm.loop !884

3750:                                             ; preds = %3724
  %3751 = mul <8 x i32> %3745, %3744
  %3752 = mul <8 x i32> %3746, %3751
  %3753 = mul <8 x i32> %3747, %3752
  %3754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3753)
  %3755 = icmp eq i64 %3718, %3722
  br i1 %3755, label %3768, label %3756

3756:                                             ; preds = %3709, %3750
  %3757 = phi i64 [ %3712, %3709 ], [ %3723, %3750 ]
  %3758 = phi i32 [ 1, %3709 ], [ %3754, %3750 ]
  br label %3759

3759:                                             ; preds = %3756, %3759
  %3760 = phi i64 [ %3765, %3759 ], [ %3757, %3756 ]
  %3761 = phi i32 [ %3764, %3759 ], [ %3758, %3756 ]
  %3762 = getelementptr inbounds i32, ptr %9, i64 %3760
  %3763 = load i32, ptr %3762, align 4, !tbaa !5
  %3764 = mul nsw i32 %3763, %3761
  %3765 = add nsw i64 %3760, -1
  %3766 = trunc i64 %3760 to i32
  %3767 = icmp sgt i32 %3766, 0
  br i1 %3767, label %3759, label %3768, !llvm.loop !885

3768:                                             ; preds = %3759, %3750
  %3769 = phi i32 [ %3754, %3750 ], [ %3764, %3759 ]
  %3770 = and i64 %3719, 4294967295
  %3771 = getelementptr inbounds i32, ptr %6, i64 %3770
  %3772 = load i32, ptr %3771, align 4, !tbaa !5
  %3773 = mul nsw i32 %3772, %3769
  %3774 = add nsw i32 %3773, %3713
  %3775 = icmp sgt i64 %3711, 2
  %3776 = add nsw i64 %3712, -1
  %3777 = add i32 %3710, 1
  br i1 %3775, label %3709, label %3778, !llvm.loop !886

3778:                                             ; preds = %3768, %3705
  %3779 = phi i32 [ %3708, %3705 ], [ %3774, %3768 ]
  %3780 = sext i32 %3779 to i64
  %3781 = getelementptr inbounds double, ptr %2, i64 %3780
  %3782 = load double, ptr %3781, align 8, !tbaa !18
  %3783 = getelementptr inbounds i64, ptr %3675, i64 %3780
  %3784 = load i64, ptr %3783, align 8, !tbaa !120
  %3785 = sitofp i64 %3784 to double
  %3786 = fcmp fast one double %3782, 0.000000e+00
  %3787 = fcmp fast ogt double %3706, %3785
  %3788 = select i1 %3786, i1 %3787, i1 false
  br i1 %3788, label %3789, label %3790

3789:                                             ; preds = %3778
  store double %3785, ptr %3677, align 8, !tbaa !18
  br label %3790

3790:                                             ; preds = %3789, %3778
  %3791 = phi double [ %3785, %3789 ], [ %3706, %3778 ]
  %3792 = add nuw nsw i32 %3707, 1
  br i1 %3699, label %3793, label %3840

3793:                                             ; preds = %3790
  %3794 = load i32, ptr %4, align 4, !tbaa !5
  %3795 = load i32, ptr %12, align 4, !tbaa !5
  %3796 = add nsw i32 %3795, -1
  %3797 = icmp slt i32 %3794, %3796
  br i1 %3797, label %3817, label %3798

3798:                                             ; preds = %3793
  %3799 = icmp eq i32 %3794, %3796
  br i1 %3799, label %3800, label %3833

3800:                                             ; preds = %3798
  store i32 0, ptr %4, align 4, !tbaa !5
  %3801 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3801, ptr %6, align 4, !tbaa !5
  br i1 %3704, label %3840, label %3802

3802:                                             ; preds = %3800, %3827
  %3803 = phi i64 [ %3831, %3827 ], [ 1, %3800 ]
  %3804 = getelementptr inbounds i32, ptr %4, i64 %3803
  %3805 = load i32, ptr %3804, align 4, !tbaa !5
  %3806 = getelementptr inbounds i32, ptr %12, i64 %3803
  %3807 = load i32, ptr %3806, align 4, !tbaa !5
  %3808 = add nsw i32 %3807, -1
  %3809 = icmp slt i32 %3805, %3808
  br i1 %3809, label %3810, label %3825

3810:                                             ; preds = %3802
  br i1 %3797, label %3817, label %3811

3811:                                             ; preds = %3810
  %3812 = getelementptr inbounds i32, ptr %7, i64 %3803
  %3813 = load i32, ptr %3812, align 4, !tbaa !5
  %3814 = getelementptr inbounds i32, ptr %6, i64 %3803
  %3815 = load i32, ptr %3814, align 4, !tbaa !5
  %3816 = add nsw i32 %3815, %3813
  store i32 %3816, ptr %3814, align 4, !tbaa !5
  br label %3835

3817:                                             ; preds = %3793, %3810
  %3818 = phi i32 [ %3805, %3810 ], [ %3794, %3793 ]
  %3819 = phi ptr [ %3804, %3810 ], [ %4, %3793 ]
  %3820 = phi i64 [ %3803, %3810 ], [ 0, %3793 ]
  %3821 = add nsw i32 %3818, 1
  store i32 %3821, ptr %3819, align 4, !tbaa !5
  %3822 = getelementptr inbounds i32, ptr %7, i64 %3820
  %3823 = load i32, ptr %3822, align 4, !tbaa !5
  %3824 = getelementptr inbounds i32, ptr %6, i64 %3820
  br label %3835

3825:                                             ; preds = %3802
  %3826 = icmp eq i32 %3805, %3808
  br i1 %3826, label %3827, label %3833

3827:                                             ; preds = %3825
  store i32 0, ptr %3804, align 4, !tbaa !5
  %3828 = getelementptr inbounds i32, ptr %8, i64 %3803
  %3829 = load i32, ptr %3828, align 4, !tbaa !5
  %3830 = getelementptr inbounds i32, ptr %6, i64 %3803
  store i32 %3829, ptr %3830, align 4, !tbaa !5
  %3831 = add nuw nsw i64 %3803, 1
  %3832 = icmp eq i64 %3831, %3702
  br i1 %3832, label %3840, label %3802, !llvm.loop !887

3833:                                             ; preds = %3798, %3825
  %3834 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3835:                                             ; preds = %3811, %3817
  %3836 = phi ptr [ %3824, %3817 ], [ %3804, %3811 ]
  %3837 = phi i32 [ %3823, %3817 ], [ 1, %3811 ]
  %3838 = load i32, ptr %3836, align 4, !tbaa !5
  %3839 = add nsw i32 %3838, %3837
  store i32 %3839, ptr %3836, align 4, !tbaa !5
  br label %3840

3840:                                             ; preds = %3827, %3835, %3800, %3790
  %3841 = icmp eq i32 %3792, %5
  br i1 %3841, label %5494, label %3705, !llvm.loop !888

3842:                                             ; preds = %3688, %3980
  %3843 = phi double [ %3679, %3688 ], [ %3928, %3980 ]
  %3844 = phi i32 [ 0, %3688 ], [ %3929, %3980 ]
  %3845 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3689, label %3846, label %3915

3846:                                             ; preds = %3842, %3905
  %3847 = phi i32 [ %3914, %3905 ], [ 0, %3842 ]
  %3848 = phi i64 [ %3856, %3905 ], [ %3693, %3842 ]
  %3849 = phi i64 [ %3913, %3905 ], [ %3692, %3842 ]
  %3850 = phi i32 [ %3911, %3905 ], [ %3845, %3842 ]
  %3851 = sub i32 %3691, %3847
  %3852 = tail call i32 @llvm.smin.i32(i32 %3851, i32 0)
  %3853 = sub i32 %3851, %3852
  %3854 = zext i32 %3853 to i64
  %3855 = add nuw nsw i64 %3854, 1
  %3856 = add nsw i64 %3848, -1
  %3857 = icmp ult i32 %3853, 31
  br i1 %3857, label %3893, label %3858

3858:                                             ; preds = %3846
  %3859 = and i64 %3855, 8589934560
  %3860 = sub i64 %3849, %3859
  br label %3861

3861:                                             ; preds = %3861, %3858
  %3862 = phi i64 [ 0, %3858 ], [ %3885, %3861 ]
  %3863 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3858 ], [ %3881, %3861 ]
  %3864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3858 ], [ %3882, %3861 ]
  %3865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3858 ], [ %3883, %3861 ]
  %3866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3858 ], [ %3884, %3861 ]
  %3867 = sub i64 %3849, %3862
  %3868 = getelementptr inbounds i32, ptr %11, i64 %3867
  %3869 = getelementptr inbounds i32, ptr %3868, i64 -7
  %3870 = load <8 x i32>, ptr %3869, align 4, !tbaa !5
  %3871 = shufflevector <8 x i32> %3870, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3872 = getelementptr inbounds i32, ptr %3868, i64 -15
  %3873 = load <8 x i32>, ptr %3872, align 4, !tbaa !5
  %3874 = shufflevector <8 x i32> %3873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3875 = getelementptr inbounds i32, ptr %3868, i64 -23
  %3876 = load <8 x i32>, ptr %3875, align 4, !tbaa !5
  %3877 = shufflevector <8 x i32> %3876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3878 = getelementptr inbounds i32, ptr %3868, i64 -31
  %3879 = load <8 x i32>, ptr %3878, align 4, !tbaa !5
  %3880 = shufflevector <8 x i32> %3879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3881 = mul <8 x i32> %3871, %3863
  %3882 = mul <8 x i32> %3874, %3864
  %3883 = mul <8 x i32> %3877, %3865
  %3884 = mul <8 x i32> %3880, %3866
  %3885 = add nuw i64 %3862, 32
  %3886 = icmp eq i64 %3885, %3859
  br i1 %3886, label %3887, label %3861, !llvm.loop !889

3887:                                             ; preds = %3861
  %3888 = mul <8 x i32> %3882, %3881
  %3889 = mul <8 x i32> %3883, %3888
  %3890 = mul <8 x i32> %3884, %3889
  %3891 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3890)
  %3892 = icmp eq i64 %3855, %3859
  br i1 %3892, label %3905, label %3893

3893:                                             ; preds = %3846, %3887
  %3894 = phi i64 [ %3849, %3846 ], [ %3860, %3887 ]
  %3895 = phi i32 [ 1, %3846 ], [ %3891, %3887 ]
  br label %3896

3896:                                             ; preds = %3893, %3896
  %3897 = phi i64 [ %3902, %3896 ], [ %3894, %3893 ]
  %3898 = phi i32 [ %3901, %3896 ], [ %3895, %3893 ]
  %3899 = getelementptr inbounds i32, ptr %11, i64 %3897
  %3900 = load i32, ptr %3899, align 4, !tbaa !5
  %3901 = mul nsw i32 %3900, %3898
  %3902 = add nsw i64 %3897, -1
  %3903 = trunc i64 %3897 to i32
  %3904 = icmp sgt i32 %3903, 0
  br i1 %3904, label %3896, label %3905, !llvm.loop !890

3905:                                             ; preds = %3896, %3887
  %3906 = phi i32 [ %3891, %3887 ], [ %3901, %3896 ]
  %3907 = and i64 %3856, 4294967295
  %3908 = getelementptr inbounds i32, ptr %6, i64 %3907
  %3909 = load i32, ptr %3908, align 4, !tbaa !5
  %3910 = mul nsw i32 %3909, %3906
  %3911 = add nsw i32 %3910, %3850
  %3912 = icmp sgt i64 %3848, 2
  %3913 = add nsw i64 %3849, -1
  %3914 = add i32 %3847, 1
  br i1 %3912, label %3846, label %3915, !llvm.loop !891

3915:                                             ; preds = %3905, %3842
  %3916 = phi i32 [ %3845, %3842 ], [ %3911, %3905 ]
  %3917 = icmp slt i32 %3916, %5
  br i1 %3917, label %3920, label %3918

3918:                                             ; preds = %3915
  %3919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

3920:                                             ; preds = %3915
  %3921 = sext i32 %3916 to i64
  %3922 = getelementptr inbounds i64, ptr %3675, i64 %3921
  %3923 = load i64, ptr %3922, align 8, !tbaa !120
  %3924 = sitofp i64 %3923 to double
  %3925 = fcmp fast ogt double %3843, %3924
  br i1 %3925, label %3926, label %3927

3926:                                             ; preds = %3920
  store double %3924, ptr %3677, align 8, !tbaa !18
  br label %3927

3927:                                             ; preds = %3920, %3926
  %3928 = phi double [ %3843, %3920 ], [ %3924, %3926 ]
  %3929 = add nuw nsw i32 %3844, 1
  br i1 %3690, label %3930, label %3980

3930:                                             ; preds = %3927
  %3931 = load i32, ptr %4, align 4, !tbaa !5
  %3932 = load i32, ptr %12, align 4, !tbaa !5
  %3933 = add nsw i32 %3932, -1
  %3934 = icmp slt i32 %3931, %3933
  br i1 %3934, label %3957, label %3935

3935:                                             ; preds = %3930
  %3936 = icmp eq i32 %3931, %3933
  br i1 %3936, label %3937, label %3973

3937:                                             ; preds = %3935
  store i32 0, ptr %4, align 4, !tbaa !5
  %3938 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3938, ptr %6, align 4, !tbaa !5
  br i1 %3695, label %3980, label %3939

3939:                                             ; preds = %3937, %3967
  %3940 = phi i64 [ %3971, %3967 ], [ 1, %3937 ]
  %3941 = getelementptr inbounds i32, ptr %4, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = getelementptr inbounds i32, ptr %12, i64 %3940
  %3944 = load i32, ptr %3943, align 4, !tbaa !5
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3942, %3945
  br i1 %3946, label %3947, label %3965

3947:                                             ; preds = %3939
  br i1 %3934, label %3957, label %3948

3948:                                             ; preds = %3947
  %3949 = shl i64 %3940, 32
  %3950 = add i64 %3949, -4294967296
  %3951 = ashr exact i64 %3950, 32
  %3952 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %6, i64 %3940
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = add nsw i32 %3955, %3953
  store i32 %3956, ptr %3954, align 4, !tbaa !5
  br label %3975

3957:                                             ; preds = %3930, %3947
  %3958 = phi i32 [ %3942, %3947 ], [ %3931, %3930 ]
  %3959 = phi ptr [ %3941, %3947 ], [ %4, %3930 ]
  %3960 = phi i64 [ %3940, %3947 ], [ 0, %3930 ]
  %3961 = add nsw i32 %3958, 1
  store i32 %3961, ptr %3959, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = getelementptr inbounds i32, ptr %6, i64 %3960
  br label %3975

3965:                                             ; preds = %3939
  %3966 = icmp eq i32 %3942, %3945
  br i1 %3966, label %3967, label %3973

3967:                                             ; preds = %3965
  store i32 0, ptr %3941, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %8, i64 %3940
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %6, i64 %3940
  store i32 %3969, ptr %3970, align 4, !tbaa !5
  %3971 = add nuw nsw i64 %3940, 1
  %3972 = icmp eq i64 %3971, %3693
  br i1 %3972, label %3980, label %3939, !llvm.loop !892

3973:                                             ; preds = %3935, %3965
  %3974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

3975:                                             ; preds = %3948, %3957
  %3976 = phi ptr [ %3964, %3957 ], [ %3941, %3948 ]
  %3977 = phi i32 [ %3963, %3957 ], [ 1, %3948 ]
  %3978 = load i32, ptr %3976, align 4, !tbaa !5
  %3979 = add nsw i32 %3978, %3977
  store i32 %3979, ptr %3976, align 4, !tbaa !5
  br label %3980

3980:                                             ; preds = %3967, %3975, %3937, %3927
  %3981 = icmp eq i32 %3929, %5
  br i1 %3981, label %5494, label %3842, !llvm.loop !893

3982:                                             ; preds = %3681
  %3983 = getelementptr inbounds i32, ptr %3, i64 %19
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp sgt i32 %5, 0
  br i1 %3985, label %3996, label %3987

3987:                                             ; preds = %3982
  br i1 %3986, label %3988, label %5494

3988:                                             ; preds = %3987
  %3989 = icmp sgt i32 %13, 1
  %3990 = icmp sgt i32 %13, 0
  %3991 = add i32 %13, -2
  %3992 = zext i32 %3991 to i64
  %3993 = zext i32 %13 to i64
  %3994 = add nuw i32 %5, 1
  %3995 = icmp eq i32 %13, 1
  br label %4138

3996:                                             ; preds = %3982
  br i1 %3986, label %3997, label %5494

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4005

4005:                                             ; preds = %3997, %4136
  %4006 = phi double [ %3679, %3997 ], [ %4087, %4136 ]
  %4007 = phi i32 [ 0, %3997 ], [ %4088, %4136 ]
  %4008 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4009, label %4078

4009:                                             ; preds = %4005, %4068
  %4010 = phi i32 [ %4077, %4068 ], [ 0, %4005 ]
  %4011 = phi i64 [ %4019, %4068 ], [ %4002, %4005 ]
  %4012 = phi i64 [ %4076, %4068 ], [ %4001, %4005 ]
  %4013 = phi i32 [ %4074, %4068 ], [ %4008, %4005 ]
  %4014 = sub i32 %4000, %4010
  %4015 = tail call i32 @llvm.smin.i32(i32 %4014, i32 0)
  %4016 = sub i32 %4014, %4015
  %4017 = zext i32 %4016 to i64
  %4018 = add nuw nsw i64 %4017, 1
  %4019 = add nsw i64 %4011, -1
  %4020 = icmp ult i32 %4016, 31
  br i1 %4020, label %4056, label %4021

4021:                                             ; preds = %4009
  %4022 = and i64 %4018, 8589934560
  %4023 = sub i64 %4012, %4022
  br label %4024

4024:                                             ; preds = %4024, %4021
  %4025 = phi i64 [ 0, %4021 ], [ %4048, %4024 ]
  %4026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4021 ], [ %4044, %4024 ]
  %4027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4021 ], [ %4045, %4024 ]
  %4028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4021 ], [ %4046, %4024 ]
  %4029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4021 ], [ %4047, %4024 ]
  %4030 = sub i64 %4012, %4025
  %4031 = getelementptr inbounds i32, ptr %9, i64 %4030
  %4032 = getelementptr inbounds i32, ptr %4031, i64 -7
  %4033 = load <8 x i32>, ptr %4032, align 4, !tbaa !5
  %4034 = shufflevector <8 x i32> %4033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4035 = getelementptr inbounds i32, ptr %4031, i64 -15
  %4036 = load <8 x i32>, ptr %4035, align 4, !tbaa !5
  %4037 = shufflevector <8 x i32> %4036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4038 = getelementptr inbounds i32, ptr %4031, i64 -23
  %4039 = load <8 x i32>, ptr %4038, align 4, !tbaa !5
  %4040 = shufflevector <8 x i32> %4039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4041 = getelementptr inbounds i32, ptr %4031, i64 -31
  %4042 = load <8 x i32>, ptr %4041, align 4, !tbaa !5
  %4043 = shufflevector <8 x i32> %4042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4044 = mul <8 x i32> %4034, %4026
  %4045 = mul <8 x i32> %4037, %4027
  %4046 = mul <8 x i32> %4040, %4028
  %4047 = mul <8 x i32> %4043, %4029
  %4048 = add nuw i64 %4025, 32
  %4049 = icmp eq i64 %4048, %4022
  br i1 %4049, label %4050, label %4024, !llvm.loop !894

4050:                                             ; preds = %4024
  %4051 = mul <8 x i32> %4045, %4044
  %4052 = mul <8 x i32> %4046, %4051
  %4053 = mul <8 x i32> %4047, %4052
  %4054 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4053)
  %4055 = icmp eq i64 %4018, %4022
  br i1 %4055, label %4068, label %4056

4056:                                             ; preds = %4009, %4050
  %4057 = phi i64 [ %4012, %4009 ], [ %4023, %4050 ]
  %4058 = phi i32 [ 1, %4009 ], [ %4054, %4050 ]
  br label %4059

4059:                                             ; preds = %4056, %4059
  %4060 = phi i64 [ %4065, %4059 ], [ %4057, %4056 ]
  %4061 = phi i32 [ %4064, %4059 ], [ %4058, %4056 ]
  %4062 = getelementptr inbounds i32, ptr %9, i64 %4060
  %4063 = load i32, ptr %4062, align 4, !tbaa !5
  %4064 = mul nsw i32 %4063, %4061
  %4065 = add nsw i64 %4060, -1
  %4066 = trunc i64 %4060 to i32
  %4067 = icmp sgt i32 %4066, 0
  br i1 %4067, label %4059, label %4068, !llvm.loop !895

4068:                                             ; preds = %4059, %4050
  %4069 = phi i32 [ %4054, %4050 ], [ %4064, %4059 ]
  %4070 = and i64 %4019, 4294967295
  %4071 = getelementptr inbounds i32, ptr %6, i64 %4070
  %4072 = load i32, ptr %4071, align 4, !tbaa !5
  %4073 = mul nsw i32 %4072, %4069
  %4074 = add nsw i32 %4073, %4013
  %4075 = icmp sgt i64 %4011, 2
  %4076 = add nsw i64 %4012, -1
  %4077 = add i32 %4010, 1
  br i1 %4075, label %4009, label %4078, !llvm.loop !896

4078:                                             ; preds = %4068, %4005
  %4079 = phi i32 [ %4008, %4005 ], [ %4074, %4068 ]
  %4080 = sext i32 %4079 to i64
  %4081 = getelementptr inbounds i64, ptr %3675, i64 %4080
  %4082 = load i64, ptr %4081, align 8, !tbaa !120
  %4083 = sitofp i64 %4082 to double
  %4084 = fcmp fast ogt double %4006, %4083
  br i1 %4084, label %4085, label %4086

4085:                                             ; preds = %4078
  store double %4083, ptr %3677, align 8, !tbaa !18
  br label %4086

4086:                                             ; preds = %4085, %4078
  %4087 = phi double [ %4083, %4085 ], [ %4006, %4078 ]
  %4088 = add nuw nsw i32 %4007, 1
  br i1 %3999, label %4089, label %4136

4089:                                             ; preds = %4086
  %4090 = load i32, ptr %4, align 4, !tbaa !5
  %4091 = load i32, ptr %12, align 4, !tbaa !5
  %4092 = add nsw i32 %4091, -1
  %4093 = icmp slt i32 %4090, %4092
  br i1 %4093, label %4113, label %4094

4094:                                             ; preds = %4089
  %4095 = icmp eq i32 %4090, %4092
  br i1 %4095, label %4096, label %4129

4096:                                             ; preds = %4094
  store i32 0, ptr %4, align 4, !tbaa !5
  %4097 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4097, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4136, label %4098

4098:                                             ; preds = %4096, %4123
  %4099 = phi i64 [ %4127, %4123 ], [ 1, %4096 ]
  %4100 = getelementptr inbounds i32, ptr %4, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = getelementptr inbounds i32, ptr %12, i64 %4099
  %4103 = load i32, ptr %4102, align 4, !tbaa !5
  %4104 = add nsw i32 %4103, -1
  %4105 = icmp slt i32 %4101, %4104
  br i1 %4105, label %4106, label %4121

4106:                                             ; preds = %4098
  br i1 %4093, label %4113, label %4107

4107:                                             ; preds = %4106
  %4108 = getelementptr inbounds i32, ptr %7, i64 %4099
  %4109 = load i32, ptr %4108, align 4, !tbaa !5
  %4110 = getelementptr inbounds i32, ptr %6, i64 %4099
  %4111 = load i32, ptr %4110, align 4, !tbaa !5
  %4112 = add nsw i32 %4111, %4109
  store i32 %4112, ptr %4110, align 4, !tbaa !5
  br label %4131

4113:                                             ; preds = %4089, %4106
  %4114 = phi i32 [ %4101, %4106 ], [ %4090, %4089 ]
  %4115 = phi ptr [ %4100, %4106 ], [ %4, %4089 ]
  %4116 = phi i64 [ %4099, %4106 ], [ 0, %4089 ]
  %4117 = add nsw i32 %4114, 1
  store i32 %4117, ptr %4115, align 4, !tbaa !5
  %4118 = getelementptr inbounds i32, ptr %7, i64 %4116
  %4119 = load i32, ptr %4118, align 4, !tbaa !5
  %4120 = getelementptr inbounds i32, ptr %6, i64 %4116
  br label %4131

4121:                                             ; preds = %4098
  %4122 = icmp eq i32 %4101, %4104
  br i1 %4122, label %4123, label %4129

4123:                                             ; preds = %4121
  store i32 0, ptr %4100, align 4, !tbaa !5
  %4124 = getelementptr inbounds i32, ptr %8, i64 %4099
  %4125 = load i32, ptr %4124, align 4, !tbaa !5
  %4126 = getelementptr inbounds i32, ptr %6, i64 %4099
  store i32 %4125, ptr %4126, align 4, !tbaa !5
  %4127 = add nuw nsw i64 %4099, 1
  %4128 = icmp eq i64 %4127, %4002
  br i1 %4128, label %4136, label %4098, !llvm.loop !897

4129:                                             ; preds = %4094, %4121
  %4130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4131:                                             ; preds = %4107, %4113
  %4132 = phi ptr [ %4120, %4113 ], [ %4100, %4107 ]
  %4133 = phi i32 [ %4119, %4113 ], [ 1, %4107 ]
  %4134 = load i32, ptr %4132, align 4, !tbaa !5
  %4135 = add nsw i32 %4134, %4133
  store i32 %4135, ptr %4132, align 4, !tbaa !5
  br label %4136

4136:                                             ; preds = %4123, %4131, %4096, %4086
  %4137 = icmp eq i32 %4088, %5
  br i1 %4137, label %5494, label %4005, !llvm.loop !898

4138:                                             ; preds = %3988, %4276
  %4139 = phi double [ %3679, %3988 ], [ %4224, %4276 ]
  %4140 = phi i32 [ 0, %3988 ], [ %4225, %4276 ]
  %4141 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4142, label %4211

4142:                                             ; preds = %4138, %4201
  %4143 = phi i32 [ %4210, %4201 ], [ 0, %4138 ]
  %4144 = phi i64 [ %4152, %4201 ], [ %3993, %4138 ]
  %4145 = phi i64 [ %4209, %4201 ], [ %3992, %4138 ]
  %4146 = phi i32 [ %4207, %4201 ], [ %4141, %4138 ]
  %4147 = sub i32 %3991, %4143
  %4148 = tail call i32 @llvm.smin.i32(i32 %4147, i32 0)
  %4149 = sub i32 %4147, %4148
  %4150 = zext i32 %4149 to i64
  %4151 = add nuw nsw i64 %4150, 1
  %4152 = add nsw i64 %4144, -1
  %4153 = icmp ult i32 %4149, 31
  br i1 %4153, label %4189, label %4154

4154:                                             ; preds = %4142
  %4155 = and i64 %4151, 8589934560
  %4156 = sub i64 %4145, %4155
  br label %4157

4157:                                             ; preds = %4157, %4154
  %4158 = phi i64 [ 0, %4154 ], [ %4181, %4157 ]
  %4159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4177, %4157 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4178, %4157 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4179, %4157 ]
  %4162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4180, %4157 ]
  %4163 = sub i64 %4145, %4158
  %4164 = getelementptr inbounds i32, ptr %11, i64 %4163
  %4165 = getelementptr inbounds i32, ptr %4164, i64 -7
  %4166 = load <8 x i32>, ptr %4165, align 4, !tbaa !5
  %4167 = shufflevector <8 x i32> %4166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4168 = getelementptr inbounds i32, ptr %4164, i64 -15
  %4169 = load <8 x i32>, ptr %4168, align 4, !tbaa !5
  %4170 = shufflevector <8 x i32> %4169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4171 = getelementptr inbounds i32, ptr %4164, i64 -23
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !5
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4164, i64 -31
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !5
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = mul <8 x i32> %4167, %4159
  %4178 = mul <8 x i32> %4170, %4160
  %4179 = mul <8 x i32> %4173, %4161
  %4180 = mul <8 x i32> %4176, %4162
  %4181 = add nuw i64 %4158, 32
  %4182 = icmp eq i64 %4181, %4155
  br i1 %4182, label %4183, label %4157, !llvm.loop !899

4183:                                             ; preds = %4157
  %4184 = mul <8 x i32> %4178, %4177
  %4185 = mul <8 x i32> %4179, %4184
  %4186 = mul <8 x i32> %4180, %4185
  %4187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4186)
  %4188 = icmp eq i64 %4151, %4155
  br i1 %4188, label %4201, label %4189

4189:                                             ; preds = %4142, %4183
  %4190 = phi i64 [ %4145, %4142 ], [ %4156, %4183 ]
  %4191 = phi i32 [ 1, %4142 ], [ %4187, %4183 ]
  br label %4192

4192:                                             ; preds = %4189, %4192
  %4193 = phi i64 [ %4198, %4192 ], [ %4190, %4189 ]
  %4194 = phi i32 [ %4197, %4192 ], [ %4191, %4189 ]
  %4195 = getelementptr inbounds i32, ptr %11, i64 %4193
  %4196 = load i32, ptr %4195, align 4, !tbaa !5
  %4197 = mul nsw i32 %4196, %4194
  %4198 = add nsw i64 %4193, -1
  %4199 = trunc i64 %4193 to i32
  %4200 = icmp sgt i32 %4199, 0
  br i1 %4200, label %4192, label %4201, !llvm.loop !900

4201:                                             ; preds = %4192, %4183
  %4202 = phi i32 [ %4187, %4183 ], [ %4197, %4192 ]
  %4203 = and i64 %4152, 4294967295
  %4204 = getelementptr inbounds i32, ptr %6, i64 %4203
  %4205 = load i32, ptr %4204, align 4, !tbaa !5
  %4206 = mul nsw i32 %4205, %4202
  %4207 = add nsw i32 %4206, %4146
  %4208 = icmp sgt i64 %4144, 2
  %4209 = add nsw i64 %4145, -1
  %4210 = add i32 %4143, 1
  br i1 %4208, label %4142, label %4211, !llvm.loop !901

4211:                                             ; preds = %4201, %4138
  %4212 = phi i32 [ %4141, %4138 ], [ %4207, %4201 ]
  %4213 = icmp slt i32 %4212, %5
  br i1 %4213, label %4216, label %4214

4214:                                             ; preds = %4211
  %4215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

4216:                                             ; preds = %4211
  %4217 = sext i32 %4212 to i64
  %4218 = getelementptr inbounds i64, ptr %3675, i64 %4217
  %4219 = load i64, ptr %4218, align 8, !tbaa !120
  %4220 = sitofp i64 %4219 to double
  %4221 = fcmp fast ogt double %4139, %4220
  br i1 %4221, label %4222, label %4223

4222:                                             ; preds = %4216
  store double %4220, ptr %3677, align 8, !tbaa !18
  br label %4223

4223:                                             ; preds = %4222, %4216
  %4224 = phi double [ %4220, %4222 ], [ %4139, %4216 ]
  %4225 = add nuw nsw i32 %4140, 1
  br i1 %3990, label %4226, label %4276

4226:                                             ; preds = %4223
  %4227 = load i32, ptr %4, align 4, !tbaa !5
  %4228 = load i32, ptr %12, align 4, !tbaa !5
  %4229 = add nsw i32 %4228, -1
  %4230 = icmp slt i32 %4227, %4229
  br i1 %4230, label %4253, label %4231

4231:                                             ; preds = %4226
  %4232 = icmp eq i32 %4227, %4229
  br i1 %4232, label %4233, label %4269

4233:                                             ; preds = %4231
  store i32 0, ptr %4, align 4, !tbaa !5
  %4234 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4234, ptr %6, align 4, !tbaa !5
  br i1 %3995, label %4276, label %4235

4235:                                             ; preds = %4233, %4263
  %4236 = phi i64 [ %4267, %4263 ], [ 1, %4233 ]
  %4237 = getelementptr inbounds i32, ptr %4, i64 %4236
  %4238 = load i32, ptr %4237, align 4, !tbaa !5
  %4239 = getelementptr inbounds i32, ptr %12, i64 %4236
  %4240 = load i32, ptr %4239, align 4, !tbaa !5
  %4241 = add nsw i32 %4240, -1
  %4242 = icmp slt i32 %4238, %4241
  br i1 %4242, label %4243, label %4261

4243:                                             ; preds = %4235
  br i1 %4230, label %4253, label %4244

4244:                                             ; preds = %4243
  %4245 = shl i64 %4236, 32
  %4246 = add i64 %4245, -4294967296
  %4247 = ashr exact i64 %4246, 32
  %4248 = getelementptr inbounds i32, ptr %7, i64 %4247
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = getelementptr inbounds i32, ptr %6, i64 %4236
  %4251 = load i32, ptr %4250, align 4, !tbaa !5
  %4252 = add nsw i32 %4251, %4249
  store i32 %4252, ptr %4250, align 4, !tbaa !5
  br label %4271

4253:                                             ; preds = %4226, %4243
  %4254 = phi i32 [ %4238, %4243 ], [ %4227, %4226 ]
  %4255 = phi ptr [ %4237, %4243 ], [ %4, %4226 ]
  %4256 = phi i64 [ %4236, %4243 ], [ 0, %4226 ]
  %4257 = add nsw i32 %4254, 1
  store i32 %4257, ptr %4255, align 4, !tbaa !5
  %4258 = getelementptr inbounds i32, ptr %7, i64 %4256
  %4259 = load i32, ptr %4258, align 4, !tbaa !5
  %4260 = getelementptr inbounds i32, ptr %6, i64 %4256
  br label %4271

4261:                                             ; preds = %4235
  %4262 = icmp eq i32 %4238, %4241
  br i1 %4262, label %4263, label %4269

4263:                                             ; preds = %4261
  store i32 0, ptr %4237, align 4, !tbaa !5
  %4264 = getelementptr inbounds i32, ptr %8, i64 %4236
  %4265 = load i32, ptr %4264, align 4, !tbaa !5
  %4266 = getelementptr inbounds i32, ptr %6, i64 %4236
  store i32 %4265, ptr %4266, align 4, !tbaa !5
  %4267 = add nuw nsw i64 %4236, 1
  %4268 = icmp eq i64 %4267, %3993
  br i1 %4268, label %4276, label %4235, !llvm.loop !902

4269:                                             ; preds = %4231, %4261
  %4270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4271:                                             ; preds = %4244, %4253
  %4272 = phi ptr [ %4260, %4253 ], [ %4237, %4244 ]
  %4273 = phi i32 [ %4259, %4253 ], [ 1, %4244 ]
  %4274 = load i32, ptr %4272, align 4, !tbaa !5
  %4275 = add nsw i32 %4274, %4273
  store i32 %4275, ptr %4272, align 4, !tbaa !5
  br label %4276

4276:                                             ; preds = %4263, %4271, %4233, %4223
  %4277 = icmp eq i32 %4225, %5
  br i1 %4277, label %5494, label %4138, !llvm.loop !903

4278:                                             ; preds = %3681
  %4279 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1271, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

4280:                                             ; preds = %18
  %4281 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4282 = load ptr, ptr %4281, align 8, !tbaa !9
  %4283 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4284 = load ptr, ptr %4283, align 8, !tbaa !9
  %4285 = load i64, ptr %4282, align 8, !tbaa !120
  %4286 = sitofp i64 %4285 to float
  store float %4286, ptr %4284, align 4, !tbaa !162
  %4287 = icmp eq i32 %13, 0
  br i1 %4287, label %5494, label %4288

4288:                                             ; preds = %4280
  switch i32 %1, label %4885 [
    i32 1, label %4289
    i32 0, label %4589
  ]

4289:                                             ; preds = %4288
  %4290 = getelementptr inbounds i32, ptr %3, i64 %19
  %4291 = load i32, ptr %4290, align 4, !tbaa !5
  %4292 = icmp eq i32 %4291, 0
  %4293 = icmp sgt i32 %5, 0
  br i1 %4292, label %4303, label %4294

4294:                                             ; preds = %4289
  br i1 %4293, label %4295, label %5494

4295:                                             ; preds = %4294
  %4296 = icmp sgt i32 %13, 1
  %4297 = icmp sgt i32 %13, 0
  %4298 = add i32 %13, -2
  %4299 = zext i32 %4298 to i64
  %4300 = zext i32 %13 to i64
  %4301 = add nuw i32 %5, 1
  %4302 = icmp eq i32 %13, 1
  br label %4449

4303:                                             ; preds = %4289
  br i1 %4293, label %4304, label %5494

4304:                                             ; preds = %4303
  %4305 = icmp sgt i32 %13, 1
  %4306 = icmp sgt i32 %13, 0
  %4307 = add i32 %13, -2
  %4308 = zext i32 %4307 to i64
  %4309 = zext i32 %13 to i64
  %4310 = add nuw i32 %5, 1
  %4311 = icmp eq i32 %13, 1
  br label %4312

4312:                                             ; preds = %4304, %4447
  %4313 = phi float [ %4286, %4304 ], [ %4398, %4447 ]
  %4314 = phi i32 [ 0, %4304 ], [ %4399, %4447 ]
  %4315 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4305, label %4316, label %4385

4316:                                             ; preds = %4312, %4375
  %4317 = phi i32 [ %4384, %4375 ], [ 0, %4312 ]
  %4318 = phi i64 [ %4326, %4375 ], [ %4309, %4312 ]
  %4319 = phi i64 [ %4383, %4375 ], [ %4308, %4312 ]
  %4320 = phi i32 [ %4381, %4375 ], [ %4315, %4312 ]
  %4321 = sub i32 %4307, %4317
  %4322 = tail call i32 @llvm.smin.i32(i32 %4321, i32 0)
  %4323 = sub i32 %4321, %4322
  %4324 = zext i32 %4323 to i64
  %4325 = add nuw nsw i64 %4324, 1
  %4326 = add nsw i64 %4318, -1
  %4327 = icmp ult i32 %4323, 31
  br i1 %4327, label %4363, label %4328

4328:                                             ; preds = %4316
  %4329 = and i64 %4325, 8589934560
  %4330 = sub i64 %4319, %4329
  br label %4331

4331:                                             ; preds = %4331, %4328
  %4332 = phi i64 [ 0, %4328 ], [ %4355, %4331 ]
  %4333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4328 ], [ %4351, %4331 ]
  %4334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4328 ], [ %4352, %4331 ]
  %4335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4328 ], [ %4353, %4331 ]
  %4336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4328 ], [ %4354, %4331 ]
  %4337 = sub i64 %4319, %4332
  %4338 = getelementptr inbounds i32, ptr %9, i64 %4337
  %4339 = getelementptr inbounds i32, ptr %4338, i64 -7
  %4340 = load <8 x i32>, ptr %4339, align 4, !tbaa !5
  %4341 = shufflevector <8 x i32> %4340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4342 = getelementptr inbounds i32, ptr %4338, i64 -15
  %4343 = load <8 x i32>, ptr %4342, align 4, !tbaa !5
  %4344 = shufflevector <8 x i32> %4343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4345 = getelementptr inbounds i32, ptr %4338, i64 -23
  %4346 = load <8 x i32>, ptr %4345, align 4, !tbaa !5
  %4347 = shufflevector <8 x i32> %4346, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4348 = getelementptr inbounds i32, ptr %4338, i64 -31
  %4349 = load <8 x i32>, ptr %4348, align 4, !tbaa !5
  %4350 = shufflevector <8 x i32> %4349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4351 = mul <8 x i32> %4341, %4333
  %4352 = mul <8 x i32> %4344, %4334
  %4353 = mul <8 x i32> %4347, %4335
  %4354 = mul <8 x i32> %4350, %4336
  %4355 = add nuw i64 %4332, 32
  %4356 = icmp eq i64 %4355, %4329
  br i1 %4356, label %4357, label %4331, !llvm.loop !904

4357:                                             ; preds = %4331
  %4358 = mul <8 x i32> %4352, %4351
  %4359 = mul <8 x i32> %4353, %4358
  %4360 = mul <8 x i32> %4354, %4359
  %4361 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4360)
  %4362 = icmp eq i64 %4325, %4329
  br i1 %4362, label %4375, label %4363

4363:                                             ; preds = %4316, %4357
  %4364 = phi i64 [ %4319, %4316 ], [ %4330, %4357 ]
  %4365 = phi i32 [ 1, %4316 ], [ %4361, %4357 ]
  br label %4366

4366:                                             ; preds = %4363, %4366
  %4367 = phi i64 [ %4372, %4366 ], [ %4364, %4363 ]
  %4368 = phi i32 [ %4371, %4366 ], [ %4365, %4363 ]
  %4369 = getelementptr inbounds i32, ptr %9, i64 %4367
  %4370 = load i32, ptr %4369, align 4, !tbaa !5
  %4371 = mul nsw i32 %4370, %4368
  %4372 = add nsw i64 %4367, -1
  %4373 = trunc i64 %4367 to i32
  %4374 = icmp sgt i32 %4373, 0
  br i1 %4374, label %4366, label %4375, !llvm.loop !905

4375:                                             ; preds = %4366, %4357
  %4376 = phi i32 [ %4361, %4357 ], [ %4371, %4366 ]
  %4377 = and i64 %4326, 4294967295
  %4378 = getelementptr inbounds i32, ptr %6, i64 %4377
  %4379 = load i32, ptr %4378, align 4, !tbaa !5
  %4380 = mul nsw i32 %4379, %4376
  %4381 = add nsw i32 %4380, %4320
  %4382 = icmp sgt i64 %4318, 2
  %4383 = add nsw i64 %4319, -1
  %4384 = add i32 %4317, 1
  br i1 %4382, label %4316, label %4385, !llvm.loop !906

4385:                                             ; preds = %4375, %4312
  %4386 = phi i32 [ %4315, %4312 ], [ %4381, %4375 ]
  %4387 = sext i32 %4386 to i64
  %4388 = getelementptr inbounds double, ptr %2, i64 %4387
  %4389 = load double, ptr %4388, align 8, !tbaa !18
  %4390 = getelementptr inbounds i64, ptr %4282, i64 %4387
  %4391 = load i64, ptr %4390, align 8, !tbaa !120
  %4392 = sitofp i64 %4391 to float
  %4393 = fcmp fast one double %4389, 0.000000e+00
  %4394 = fcmp fast ogt float %4313, %4392
  %4395 = select i1 %4393, i1 %4394, i1 false
  br i1 %4395, label %4396, label %4397

4396:                                             ; preds = %4385
  store float %4392, ptr %4284, align 4, !tbaa !162
  br label %4397

4397:                                             ; preds = %4396, %4385
  %4398 = phi float [ %4392, %4396 ], [ %4313, %4385 ]
  %4399 = add nuw nsw i32 %4314, 1
  br i1 %4306, label %4400, label %4447

4400:                                             ; preds = %4397
  %4401 = load i32, ptr %4, align 4, !tbaa !5
  %4402 = load i32, ptr %12, align 4, !tbaa !5
  %4403 = add nsw i32 %4402, -1
  %4404 = icmp slt i32 %4401, %4403
  br i1 %4404, label %4424, label %4405

4405:                                             ; preds = %4400
  %4406 = icmp eq i32 %4401, %4403
  br i1 %4406, label %4407, label %4440

4407:                                             ; preds = %4405
  store i32 0, ptr %4, align 4, !tbaa !5
  %4408 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4408, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4447, label %4409

4409:                                             ; preds = %4407, %4434
  %4410 = phi i64 [ %4438, %4434 ], [ 1, %4407 ]
  %4411 = getelementptr inbounds i32, ptr %4, i64 %4410
  %4412 = load i32, ptr %4411, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %12, i64 %4410
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = add nsw i32 %4414, -1
  %4416 = icmp slt i32 %4412, %4415
  br i1 %4416, label %4417, label %4432

4417:                                             ; preds = %4409
  br i1 %4404, label %4424, label %4418

4418:                                             ; preds = %4417
  %4419 = getelementptr inbounds i32, ptr %7, i64 %4410
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4410
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = add nsw i32 %4422, %4420
  store i32 %4423, ptr %4421, align 4, !tbaa !5
  br label %4442

4424:                                             ; preds = %4400, %4417
  %4425 = phi i32 [ %4412, %4417 ], [ %4401, %4400 ]
  %4426 = phi ptr [ %4411, %4417 ], [ %4, %4400 ]
  %4427 = phi i64 [ %4410, %4417 ], [ 0, %4400 ]
  %4428 = add nsw i32 %4425, 1
  store i32 %4428, ptr %4426, align 4, !tbaa !5
  %4429 = getelementptr inbounds i32, ptr %7, i64 %4427
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = getelementptr inbounds i32, ptr %6, i64 %4427
  br label %4442

4432:                                             ; preds = %4409
  %4433 = icmp eq i32 %4412, %4415
  br i1 %4433, label %4434, label %4440

4434:                                             ; preds = %4432
  store i32 0, ptr %4411, align 4, !tbaa !5
  %4435 = getelementptr inbounds i32, ptr %8, i64 %4410
  %4436 = load i32, ptr %4435, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %6, i64 %4410
  store i32 %4436, ptr %4437, align 4, !tbaa !5
  %4438 = add nuw nsw i64 %4410, 1
  %4439 = icmp eq i64 %4438, %4309
  br i1 %4439, label %4447, label %4409, !llvm.loop !907

4440:                                             ; preds = %4405, %4432
  %4441 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4442:                                             ; preds = %4418, %4424
  %4443 = phi ptr [ %4431, %4424 ], [ %4411, %4418 ]
  %4444 = phi i32 [ %4430, %4424 ], [ 1, %4418 ]
  %4445 = load i32, ptr %4443, align 4, !tbaa !5
  %4446 = add nsw i32 %4445, %4444
  store i32 %4446, ptr %4443, align 4, !tbaa !5
  br label %4447

4447:                                             ; preds = %4434, %4442, %4407, %4397
  %4448 = icmp eq i32 %4399, %5
  br i1 %4448, label %5494, label %4312, !llvm.loop !908

4449:                                             ; preds = %4295, %4587
  %4450 = phi float [ %4286, %4295 ], [ %4535, %4587 ]
  %4451 = phi i32 [ 0, %4295 ], [ %4536, %4587 ]
  %4452 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4296, label %4453, label %4522

4453:                                             ; preds = %4449, %4512
  %4454 = phi i32 [ %4521, %4512 ], [ 0, %4449 ]
  %4455 = phi i64 [ %4463, %4512 ], [ %4300, %4449 ]
  %4456 = phi i64 [ %4520, %4512 ], [ %4299, %4449 ]
  %4457 = phi i32 [ %4518, %4512 ], [ %4452, %4449 ]
  %4458 = sub i32 %4298, %4454
  %4459 = tail call i32 @llvm.smin.i32(i32 %4458, i32 0)
  %4460 = sub i32 %4458, %4459
  %4461 = zext i32 %4460 to i64
  %4462 = add nuw nsw i64 %4461, 1
  %4463 = add nsw i64 %4455, -1
  %4464 = icmp ult i32 %4460, 31
  br i1 %4464, label %4500, label %4465

4465:                                             ; preds = %4453
  %4466 = and i64 %4462, 8589934560
  %4467 = sub i64 %4456, %4466
  br label %4468

4468:                                             ; preds = %4468, %4465
  %4469 = phi i64 [ 0, %4465 ], [ %4492, %4468 ]
  %4470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4488, %4468 ]
  %4471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4489, %4468 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4490, %4468 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4491, %4468 ]
  %4474 = sub i64 %4456, %4469
  %4475 = getelementptr inbounds i32, ptr %11, i64 %4474
  %4476 = getelementptr inbounds i32, ptr %4475, i64 -7
  %4477 = load <8 x i32>, ptr %4476, align 4, !tbaa !5
  %4478 = shufflevector <8 x i32> %4477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4479 = getelementptr inbounds i32, ptr %4475, i64 -15
  %4480 = load <8 x i32>, ptr %4479, align 4, !tbaa !5
  %4481 = shufflevector <8 x i32> %4480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4482 = getelementptr inbounds i32, ptr %4475, i64 -23
  %4483 = load <8 x i32>, ptr %4482, align 4, !tbaa !5
  %4484 = shufflevector <8 x i32> %4483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4485 = getelementptr inbounds i32, ptr %4475, i64 -31
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !5
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = mul <8 x i32> %4478, %4470
  %4489 = mul <8 x i32> %4481, %4471
  %4490 = mul <8 x i32> %4484, %4472
  %4491 = mul <8 x i32> %4487, %4473
  %4492 = add nuw i64 %4469, 32
  %4493 = icmp eq i64 %4492, %4466
  br i1 %4493, label %4494, label %4468, !llvm.loop !909

4494:                                             ; preds = %4468
  %4495 = mul <8 x i32> %4489, %4488
  %4496 = mul <8 x i32> %4490, %4495
  %4497 = mul <8 x i32> %4491, %4496
  %4498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4497)
  %4499 = icmp eq i64 %4462, %4466
  br i1 %4499, label %4512, label %4500

4500:                                             ; preds = %4453, %4494
  %4501 = phi i64 [ %4456, %4453 ], [ %4467, %4494 ]
  %4502 = phi i32 [ 1, %4453 ], [ %4498, %4494 ]
  br label %4503

4503:                                             ; preds = %4500, %4503
  %4504 = phi i64 [ %4509, %4503 ], [ %4501, %4500 ]
  %4505 = phi i32 [ %4508, %4503 ], [ %4502, %4500 ]
  %4506 = getelementptr inbounds i32, ptr %11, i64 %4504
  %4507 = load i32, ptr %4506, align 4, !tbaa !5
  %4508 = mul nsw i32 %4507, %4505
  %4509 = add nsw i64 %4504, -1
  %4510 = trunc i64 %4504 to i32
  %4511 = icmp sgt i32 %4510, 0
  br i1 %4511, label %4503, label %4512, !llvm.loop !910

4512:                                             ; preds = %4503, %4494
  %4513 = phi i32 [ %4498, %4494 ], [ %4508, %4503 ]
  %4514 = and i64 %4463, 4294967295
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4514
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = mul nsw i32 %4516, %4513
  %4518 = add nsw i32 %4517, %4457
  %4519 = icmp sgt i64 %4455, 2
  %4520 = add nsw i64 %4456, -1
  %4521 = add i32 %4454, 1
  br i1 %4519, label %4453, label %4522, !llvm.loop !911

4522:                                             ; preds = %4512, %4449
  %4523 = phi i32 [ %4452, %4449 ], [ %4518, %4512 ]
  %4524 = icmp slt i32 %4523, %5
  br i1 %4524, label %4527, label %4525

4525:                                             ; preds = %4522
  %4526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

4527:                                             ; preds = %4522
  %4528 = sext i32 %4523 to i64
  %4529 = getelementptr inbounds i64, ptr %4282, i64 %4528
  %4530 = load i64, ptr %4529, align 8, !tbaa !120
  %4531 = sitofp i64 %4530 to float
  %4532 = fcmp fast ogt float %4450, %4531
  br i1 %4532, label %4533, label %4534

4533:                                             ; preds = %4527
  store float %4531, ptr %4284, align 4, !tbaa !162
  br label %4534

4534:                                             ; preds = %4527, %4533
  %4535 = phi float [ %4450, %4527 ], [ %4531, %4533 ]
  %4536 = add nuw nsw i32 %4451, 1
  br i1 %4297, label %4537, label %4587

4537:                                             ; preds = %4534
  %4538 = load i32, ptr %4, align 4, !tbaa !5
  %4539 = load i32, ptr %12, align 4, !tbaa !5
  %4540 = add nsw i32 %4539, -1
  %4541 = icmp slt i32 %4538, %4540
  br i1 %4541, label %4564, label %4542

4542:                                             ; preds = %4537
  %4543 = icmp eq i32 %4538, %4540
  br i1 %4543, label %4544, label %4580

4544:                                             ; preds = %4542
  store i32 0, ptr %4, align 4, !tbaa !5
  %4545 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4545, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4587, label %4546

4546:                                             ; preds = %4544, %4574
  %4547 = phi i64 [ %4578, %4574 ], [ 1, %4544 ]
  %4548 = getelementptr inbounds i32, ptr %4, i64 %4547
  %4549 = load i32, ptr %4548, align 4, !tbaa !5
  %4550 = getelementptr inbounds i32, ptr %12, i64 %4547
  %4551 = load i32, ptr %4550, align 4, !tbaa !5
  %4552 = add nsw i32 %4551, -1
  %4553 = icmp slt i32 %4549, %4552
  br i1 %4553, label %4554, label %4572

4554:                                             ; preds = %4546
  br i1 %4541, label %4564, label %4555

4555:                                             ; preds = %4554
  %4556 = shl i64 %4547, 32
  %4557 = add i64 %4556, -4294967296
  %4558 = ashr exact i64 %4557, 32
  %4559 = getelementptr inbounds i32, ptr %7, i64 %4558
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %6, i64 %4547
  %4562 = load i32, ptr %4561, align 4, !tbaa !5
  %4563 = add nsw i32 %4562, %4560
  store i32 %4563, ptr %4561, align 4, !tbaa !5
  br label %4582

4564:                                             ; preds = %4537, %4554
  %4565 = phi i32 [ %4549, %4554 ], [ %4538, %4537 ]
  %4566 = phi ptr [ %4548, %4554 ], [ %4, %4537 ]
  %4567 = phi i64 [ %4547, %4554 ], [ 0, %4537 ]
  %4568 = add nsw i32 %4565, 1
  store i32 %4568, ptr %4566, align 4, !tbaa !5
  %4569 = getelementptr inbounds i32, ptr %7, i64 %4567
  %4570 = load i32, ptr %4569, align 4, !tbaa !5
  %4571 = getelementptr inbounds i32, ptr %6, i64 %4567
  br label %4582

4572:                                             ; preds = %4546
  %4573 = icmp eq i32 %4549, %4552
  br i1 %4573, label %4574, label %4580

4574:                                             ; preds = %4572
  store i32 0, ptr %4548, align 4, !tbaa !5
  %4575 = getelementptr inbounds i32, ptr %8, i64 %4547
  %4576 = load i32, ptr %4575, align 4, !tbaa !5
  %4577 = getelementptr inbounds i32, ptr %6, i64 %4547
  store i32 %4576, ptr %4577, align 4, !tbaa !5
  %4578 = add nuw nsw i64 %4547, 1
  %4579 = icmp eq i64 %4578, %4300
  br i1 %4579, label %4587, label %4546, !llvm.loop !912

4580:                                             ; preds = %4542, %4572
  %4581 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4582:                                             ; preds = %4555, %4564
  %4583 = phi ptr [ %4571, %4564 ], [ %4548, %4555 ]
  %4584 = phi i32 [ %4570, %4564 ], [ 1, %4555 ]
  %4585 = load i32, ptr %4583, align 4, !tbaa !5
  %4586 = add nsw i32 %4585, %4584
  store i32 %4586, ptr %4583, align 4, !tbaa !5
  br label %4587

4587:                                             ; preds = %4574, %4582, %4544, %4534
  %4588 = icmp eq i32 %4536, %5
  br i1 %4588, label %5494, label %4449, !llvm.loop !913

4589:                                             ; preds = %4288
  %4590 = getelementptr inbounds i32, ptr %3, i64 %19
  %4591 = load i32, ptr %4590, align 4, !tbaa !5
  %4592 = icmp eq i32 %4591, 0
  %4593 = icmp sgt i32 %5, 0
  br i1 %4592, label %4603, label %4594

4594:                                             ; preds = %4589
  br i1 %4593, label %4595, label %5494

4595:                                             ; preds = %4594
  %4596 = icmp sgt i32 %13, 1
  %4597 = icmp sgt i32 %13, 0
  %4598 = add i32 %13, -2
  %4599 = zext i32 %4598 to i64
  %4600 = zext i32 %13 to i64
  %4601 = add nuw i32 %5, 1
  %4602 = icmp eq i32 %13, 1
  br label %4745

4603:                                             ; preds = %4589
  br i1 %4593, label %4604, label %5494

4604:                                             ; preds = %4603
  %4605 = icmp sgt i32 %13, 1
  %4606 = icmp sgt i32 %13, 0
  %4607 = add i32 %13, -2
  %4608 = zext i32 %4607 to i64
  %4609 = zext i32 %13 to i64
  %4610 = add nuw i32 %5, 1
  %4611 = icmp eq i32 %13, 1
  br label %4612

4612:                                             ; preds = %4604, %4743
  %4613 = phi float [ %4286, %4604 ], [ %4694, %4743 ]
  %4614 = phi i32 [ 0, %4604 ], [ %4695, %4743 ]
  %4615 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4605, label %4616, label %4685

4616:                                             ; preds = %4612, %4675
  %4617 = phi i32 [ %4684, %4675 ], [ 0, %4612 ]
  %4618 = phi i64 [ %4626, %4675 ], [ %4609, %4612 ]
  %4619 = phi i64 [ %4683, %4675 ], [ %4608, %4612 ]
  %4620 = phi i32 [ %4681, %4675 ], [ %4615, %4612 ]
  %4621 = sub i32 %4607, %4617
  %4622 = tail call i32 @llvm.smin.i32(i32 %4621, i32 0)
  %4623 = sub i32 %4621, %4622
  %4624 = zext i32 %4623 to i64
  %4625 = add nuw nsw i64 %4624, 1
  %4626 = add nsw i64 %4618, -1
  %4627 = icmp ult i32 %4623, 31
  br i1 %4627, label %4663, label %4628

4628:                                             ; preds = %4616
  %4629 = and i64 %4625, 8589934560
  %4630 = sub i64 %4619, %4629
  br label %4631

4631:                                             ; preds = %4631, %4628
  %4632 = phi i64 [ 0, %4628 ], [ %4655, %4631 ]
  %4633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4628 ], [ %4651, %4631 ]
  %4634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4628 ], [ %4652, %4631 ]
  %4635 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4628 ], [ %4653, %4631 ]
  %4636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4628 ], [ %4654, %4631 ]
  %4637 = sub i64 %4619, %4632
  %4638 = getelementptr inbounds i32, ptr %9, i64 %4637
  %4639 = getelementptr inbounds i32, ptr %4638, i64 -7
  %4640 = load <8 x i32>, ptr %4639, align 4, !tbaa !5
  %4641 = shufflevector <8 x i32> %4640, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4642 = getelementptr inbounds i32, ptr %4638, i64 -15
  %4643 = load <8 x i32>, ptr %4642, align 4, !tbaa !5
  %4644 = shufflevector <8 x i32> %4643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4645 = getelementptr inbounds i32, ptr %4638, i64 -23
  %4646 = load <8 x i32>, ptr %4645, align 4, !tbaa !5
  %4647 = shufflevector <8 x i32> %4646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4648 = getelementptr inbounds i32, ptr %4638, i64 -31
  %4649 = load <8 x i32>, ptr %4648, align 4, !tbaa !5
  %4650 = shufflevector <8 x i32> %4649, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4651 = mul <8 x i32> %4641, %4633
  %4652 = mul <8 x i32> %4644, %4634
  %4653 = mul <8 x i32> %4647, %4635
  %4654 = mul <8 x i32> %4650, %4636
  %4655 = add nuw i64 %4632, 32
  %4656 = icmp eq i64 %4655, %4629
  br i1 %4656, label %4657, label %4631, !llvm.loop !914

4657:                                             ; preds = %4631
  %4658 = mul <8 x i32> %4652, %4651
  %4659 = mul <8 x i32> %4653, %4658
  %4660 = mul <8 x i32> %4654, %4659
  %4661 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4660)
  %4662 = icmp eq i64 %4625, %4629
  br i1 %4662, label %4675, label %4663

4663:                                             ; preds = %4616, %4657
  %4664 = phi i64 [ %4619, %4616 ], [ %4630, %4657 ]
  %4665 = phi i32 [ 1, %4616 ], [ %4661, %4657 ]
  br label %4666

4666:                                             ; preds = %4663, %4666
  %4667 = phi i64 [ %4672, %4666 ], [ %4664, %4663 ]
  %4668 = phi i32 [ %4671, %4666 ], [ %4665, %4663 ]
  %4669 = getelementptr inbounds i32, ptr %9, i64 %4667
  %4670 = load i32, ptr %4669, align 4, !tbaa !5
  %4671 = mul nsw i32 %4670, %4668
  %4672 = add nsw i64 %4667, -1
  %4673 = trunc i64 %4667 to i32
  %4674 = icmp sgt i32 %4673, 0
  br i1 %4674, label %4666, label %4675, !llvm.loop !915

4675:                                             ; preds = %4666, %4657
  %4676 = phi i32 [ %4661, %4657 ], [ %4671, %4666 ]
  %4677 = and i64 %4626, 4294967295
  %4678 = getelementptr inbounds i32, ptr %6, i64 %4677
  %4679 = load i32, ptr %4678, align 4, !tbaa !5
  %4680 = mul nsw i32 %4679, %4676
  %4681 = add nsw i32 %4680, %4620
  %4682 = icmp sgt i64 %4618, 2
  %4683 = add nsw i64 %4619, -1
  %4684 = add i32 %4617, 1
  br i1 %4682, label %4616, label %4685, !llvm.loop !916

4685:                                             ; preds = %4675, %4612
  %4686 = phi i32 [ %4615, %4612 ], [ %4681, %4675 ]
  %4687 = sext i32 %4686 to i64
  %4688 = getelementptr inbounds i64, ptr %4282, i64 %4687
  %4689 = load i64, ptr %4688, align 8, !tbaa !120
  %4690 = sitofp i64 %4689 to float
  %4691 = fcmp fast ogt float %4613, %4690
  br i1 %4691, label %4692, label %4693

4692:                                             ; preds = %4685
  store float %4690, ptr %4284, align 4, !tbaa !162
  br label %4693

4693:                                             ; preds = %4692, %4685
  %4694 = phi float [ %4690, %4692 ], [ %4613, %4685 ]
  %4695 = add nuw nsw i32 %4614, 1
  br i1 %4606, label %4696, label %4743

4696:                                             ; preds = %4693
  %4697 = load i32, ptr %4, align 4, !tbaa !5
  %4698 = load i32, ptr %12, align 4, !tbaa !5
  %4699 = add nsw i32 %4698, -1
  %4700 = icmp slt i32 %4697, %4699
  br i1 %4700, label %4720, label %4701

4701:                                             ; preds = %4696
  %4702 = icmp eq i32 %4697, %4699
  br i1 %4702, label %4703, label %4736

4703:                                             ; preds = %4701
  store i32 0, ptr %4, align 4, !tbaa !5
  %4704 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4704, ptr %6, align 4, !tbaa !5
  br i1 %4611, label %4743, label %4705

4705:                                             ; preds = %4703, %4730
  %4706 = phi i64 [ %4734, %4730 ], [ 1, %4703 ]
  %4707 = getelementptr inbounds i32, ptr %4, i64 %4706
  %4708 = load i32, ptr %4707, align 4, !tbaa !5
  %4709 = getelementptr inbounds i32, ptr %12, i64 %4706
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = add nsw i32 %4710, -1
  %4712 = icmp slt i32 %4708, %4711
  br i1 %4712, label %4713, label %4728

4713:                                             ; preds = %4705
  br i1 %4700, label %4720, label %4714

4714:                                             ; preds = %4713
  %4715 = getelementptr inbounds i32, ptr %7, i64 %4706
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = getelementptr inbounds i32, ptr %6, i64 %4706
  %4718 = load i32, ptr %4717, align 4, !tbaa !5
  %4719 = add nsw i32 %4718, %4716
  store i32 %4719, ptr %4717, align 4, !tbaa !5
  br label %4738

4720:                                             ; preds = %4696, %4713
  %4721 = phi i32 [ %4708, %4713 ], [ %4697, %4696 ]
  %4722 = phi ptr [ %4707, %4713 ], [ %4, %4696 ]
  %4723 = phi i64 [ %4706, %4713 ], [ 0, %4696 ]
  %4724 = add nsw i32 %4721, 1
  store i32 %4724, ptr %4722, align 4, !tbaa !5
  %4725 = getelementptr inbounds i32, ptr %7, i64 %4723
  %4726 = load i32, ptr %4725, align 4, !tbaa !5
  %4727 = getelementptr inbounds i32, ptr %6, i64 %4723
  br label %4738

4728:                                             ; preds = %4705
  %4729 = icmp eq i32 %4708, %4711
  br i1 %4729, label %4730, label %4736

4730:                                             ; preds = %4728
  store i32 0, ptr %4707, align 4, !tbaa !5
  %4731 = getelementptr inbounds i32, ptr %8, i64 %4706
  %4732 = load i32, ptr %4731, align 4, !tbaa !5
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4706
  store i32 %4732, ptr %4733, align 4, !tbaa !5
  %4734 = add nuw nsw i64 %4706, 1
  %4735 = icmp eq i64 %4734, %4609
  br i1 %4735, label %4743, label %4705, !llvm.loop !917

4736:                                             ; preds = %4701, %4728
  %4737 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4738:                                             ; preds = %4714, %4720
  %4739 = phi ptr [ %4727, %4720 ], [ %4707, %4714 ]
  %4740 = phi i32 [ %4726, %4720 ], [ 1, %4714 ]
  %4741 = load i32, ptr %4739, align 4, !tbaa !5
  %4742 = add nsw i32 %4741, %4740
  store i32 %4742, ptr %4739, align 4, !tbaa !5
  br label %4743

4743:                                             ; preds = %4730, %4738, %4703, %4693
  %4744 = icmp eq i32 %4695, %5
  br i1 %4744, label %5494, label %4612, !llvm.loop !918

4745:                                             ; preds = %4595, %4883
  %4746 = phi float [ %4286, %4595 ], [ %4831, %4883 ]
  %4747 = phi i32 [ 0, %4595 ], [ %4832, %4883 ]
  %4748 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4596, label %4749, label %4818

4749:                                             ; preds = %4745, %4808
  %4750 = phi i32 [ %4817, %4808 ], [ 0, %4745 ]
  %4751 = phi i64 [ %4759, %4808 ], [ %4600, %4745 ]
  %4752 = phi i64 [ %4816, %4808 ], [ %4599, %4745 ]
  %4753 = phi i32 [ %4814, %4808 ], [ %4748, %4745 ]
  %4754 = sub i32 %4598, %4750
  %4755 = tail call i32 @llvm.smin.i32(i32 %4754, i32 0)
  %4756 = sub i32 %4754, %4755
  %4757 = zext i32 %4756 to i64
  %4758 = add nuw nsw i64 %4757, 1
  %4759 = add nsw i64 %4751, -1
  %4760 = icmp ult i32 %4756, 31
  br i1 %4760, label %4796, label %4761

4761:                                             ; preds = %4749
  %4762 = and i64 %4758, 8589934560
  %4763 = sub i64 %4752, %4762
  br label %4764

4764:                                             ; preds = %4764, %4761
  %4765 = phi i64 [ 0, %4761 ], [ %4788, %4764 ]
  %4766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4761 ], [ %4784, %4764 ]
  %4767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4761 ], [ %4785, %4764 ]
  %4768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4761 ], [ %4786, %4764 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4761 ], [ %4787, %4764 ]
  %4770 = sub i64 %4752, %4765
  %4771 = getelementptr inbounds i32, ptr %11, i64 %4770
  %4772 = getelementptr inbounds i32, ptr %4771, i64 -7
  %4773 = load <8 x i32>, ptr %4772, align 4, !tbaa !5
  %4774 = shufflevector <8 x i32> %4773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4775 = getelementptr inbounds i32, ptr %4771, i64 -15
  %4776 = load <8 x i32>, ptr %4775, align 4, !tbaa !5
  %4777 = shufflevector <8 x i32> %4776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4778 = getelementptr inbounds i32, ptr %4771, i64 -23
  %4779 = load <8 x i32>, ptr %4778, align 4, !tbaa !5
  %4780 = shufflevector <8 x i32> %4779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4781 = getelementptr inbounds i32, ptr %4771, i64 -31
  %4782 = load <8 x i32>, ptr %4781, align 4, !tbaa !5
  %4783 = shufflevector <8 x i32> %4782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4784 = mul <8 x i32> %4774, %4766
  %4785 = mul <8 x i32> %4777, %4767
  %4786 = mul <8 x i32> %4780, %4768
  %4787 = mul <8 x i32> %4783, %4769
  %4788 = add nuw i64 %4765, 32
  %4789 = icmp eq i64 %4788, %4762
  br i1 %4789, label %4790, label %4764, !llvm.loop !919

4790:                                             ; preds = %4764
  %4791 = mul <8 x i32> %4785, %4784
  %4792 = mul <8 x i32> %4786, %4791
  %4793 = mul <8 x i32> %4787, %4792
  %4794 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4793)
  %4795 = icmp eq i64 %4758, %4762
  br i1 %4795, label %4808, label %4796

4796:                                             ; preds = %4749, %4790
  %4797 = phi i64 [ %4752, %4749 ], [ %4763, %4790 ]
  %4798 = phi i32 [ 1, %4749 ], [ %4794, %4790 ]
  br label %4799

4799:                                             ; preds = %4796, %4799
  %4800 = phi i64 [ %4805, %4799 ], [ %4797, %4796 ]
  %4801 = phi i32 [ %4804, %4799 ], [ %4798, %4796 ]
  %4802 = getelementptr inbounds i32, ptr %11, i64 %4800
  %4803 = load i32, ptr %4802, align 4, !tbaa !5
  %4804 = mul nsw i32 %4803, %4801
  %4805 = add nsw i64 %4800, -1
  %4806 = trunc i64 %4800 to i32
  %4807 = icmp sgt i32 %4806, 0
  br i1 %4807, label %4799, label %4808, !llvm.loop !920

4808:                                             ; preds = %4799, %4790
  %4809 = phi i32 [ %4794, %4790 ], [ %4804, %4799 ]
  %4810 = and i64 %4759, 4294967295
  %4811 = getelementptr inbounds i32, ptr %6, i64 %4810
  %4812 = load i32, ptr %4811, align 4, !tbaa !5
  %4813 = mul nsw i32 %4812, %4809
  %4814 = add nsw i32 %4813, %4753
  %4815 = icmp sgt i64 %4751, 2
  %4816 = add nsw i64 %4752, -1
  %4817 = add i32 %4750, 1
  br i1 %4815, label %4749, label %4818, !llvm.loop !921

4818:                                             ; preds = %4808, %4745
  %4819 = phi i32 [ %4748, %4745 ], [ %4814, %4808 ]
  %4820 = icmp slt i32 %4819, %5
  br i1 %4820, label %4823, label %4821

4821:                                             ; preds = %4818
  %4822 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

4823:                                             ; preds = %4818
  %4824 = sext i32 %4819 to i64
  %4825 = getelementptr inbounds i64, ptr %4282, i64 %4824
  %4826 = load i64, ptr %4825, align 8, !tbaa !120
  %4827 = sitofp i64 %4826 to float
  %4828 = fcmp fast ogt float %4746, %4827
  br i1 %4828, label %4829, label %4830

4829:                                             ; preds = %4823
  store float %4827, ptr %4284, align 4, !tbaa !162
  br label %4830

4830:                                             ; preds = %4829, %4823
  %4831 = phi float [ %4827, %4829 ], [ %4746, %4823 ]
  %4832 = add nuw nsw i32 %4747, 1
  br i1 %4597, label %4833, label %4883

4833:                                             ; preds = %4830
  %4834 = load i32, ptr %4, align 4, !tbaa !5
  %4835 = load i32, ptr %12, align 4, !tbaa !5
  %4836 = add nsw i32 %4835, -1
  %4837 = icmp slt i32 %4834, %4836
  br i1 %4837, label %4860, label %4838

4838:                                             ; preds = %4833
  %4839 = icmp eq i32 %4834, %4836
  br i1 %4839, label %4840, label %4876

4840:                                             ; preds = %4838
  store i32 0, ptr %4, align 4, !tbaa !5
  %4841 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4841, ptr %6, align 4, !tbaa !5
  br i1 %4602, label %4883, label %4842

4842:                                             ; preds = %4840, %4870
  %4843 = phi i64 [ %4874, %4870 ], [ 1, %4840 ]
  %4844 = getelementptr inbounds i32, ptr %4, i64 %4843
  %4845 = load i32, ptr %4844, align 4, !tbaa !5
  %4846 = getelementptr inbounds i32, ptr %12, i64 %4843
  %4847 = load i32, ptr %4846, align 4, !tbaa !5
  %4848 = add nsw i32 %4847, -1
  %4849 = icmp slt i32 %4845, %4848
  br i1 %4849, label %4850, label %4868

4850:                                             ; preds = %4842
  br i1 %4837, label %4860, label %4851

4851:                                             ; preds = %4850
  %4852 = shl i64 %4843, 32
  %4853 = add i64 %4852, -4294967296
  %4854 = ashr exact i64 %4853, 32
  %4855 = getelementptr inbounds i32, ptr %7, i64 %4854
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = getelementptr inbounds i32, ptr %6, i64 %4843
  %4858 = load i32, ptr %4857, align 4, !tbaa !5
  %4859 = add nsw i32 %4858, %4856
  store i32 %4859, ptr %4857, align 4, !tbaa !5
  br label %4878

4860:                                             ; preds = %4833, %4850
  %4861 = phi i32 [ %4845, %4850 ], [ %4834, %4833 ]
  %4862 = phi ptr [ %4844, %4850 ], [ %4, %4833 ]
  %4863 = phi i64 [ %4843, %4850 ], [ 0, %4833 ]
  %4864 = add nsw i32 %4861, 1
  store i32 %4864, ptr %4862, align 4, !tbaa !5
  %4865 = getelementptr inbounds i32, ptr %7, i64 %4863
  %4866 = load i32, ptr %4865, align 4, !tbaa !5
  %4867 = getelementptr inbounds i32, ptr %6, i64 %4863
  br label %4878

4868:                                             ; preds = %4842
  %4869 = icmp eq i32 %4845, %4848
  br i1 %4869, label %4870, label %4876

4870:                                             ; preds = %4868
  store i32 0, ptr %4844, align 4, !tbaa !5
  %4871 = getelementptr inbounds i32, ptr %8, i64 %4843
  %4872 = load i32, ptr %4871, align 4, !tbaa !5
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4843
  store i32 %4872, ptr %4873, align 4, !tbaa !5
  %4874 = add nuw nsw i64 %4843, 1
  %4875 = icmp eq i64 %4874, %4600
  br i1 %4875, label %4883, label %4842, !llvm.loop !922

4876:                                             ; preds = %4838, %4868
  %4877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

4878:                                             ; preds = %4851, %4860
  %4879 = phi ptr [ %4867, %4860 ], [ %4844, %4851 ]
  %4880 = phi i32 [ %4866, %4860 ], [ 1, %4851 ]
  %4881 = load i32, ptr %4879, align 4, !tbaa !5
  %4882 = add nsw i32 %4881, %4880
  store i32 %4882, ptr %4879, align 4, !tbaa !5
  br label %4883

4883:                                             ; preds = %4870, %4878, %4840, %4830
  %4884 = icmp eq i32 %4832, %5
  br i1 %4884, label %5494, label %4745, !llvm.loop !923

4885:                                             ; preds = %4288
  %4886 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

4887:                                             ; preds = %18
  %4888 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4889 = load ptr, ptr %4888, align 8, !tbaa !9
  %4890 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4891 = load ptr, ptr %4890, align 8, !tbaa !9
  %4892 = load i64, ptr %4889, align 8, !tbaa !120
  %4893 = sitofp i64 %4892 to double
  store double %4893, ptr %4891, align 8, !tbaa !18
  %4894 = icmp eq i32 %13, 0
  br i1 %4894, label %5494, label %4895

4895:                                             ; preds = %4887
  switch i32 %1, label %5492 [
    i32 1, label %4896
    i32 0, label %5196
  ]

4896:                                             ; preds = %4895
  %4897 = getelementptr inbounds i32, ptr %3, i64 %19
  %4898 = load i32, ptr %4897, align 4, !tbaa !5
  %4899 = icmp eq i32 %4898, 0
  %4900 = icmp sgt i32 %5, 0
  br i1 %4899, label %4910, label %4901

4901:                                             ; preds = %4896
  br i1 %4900, label %4902, label %5494

4902:                                             ; preds = %4901
  %4903 = icmp sgt i32 %13, 1
  %4904 = icmp sgt i32 %13, 0
  %4905 = add i32 %13, -2
  %4906 = zext i32 %4905 to i64
  %4907 = zext i32 %13 to i64
  %4908 = add nuw i32 %5, 1
  %4909 = icmp eq i32 %13, 1
  br label %5056

4910:                                             ; preds = %4896
  br i1 %4900, label %4911, label %5494

4911:                                             ; preds = %4910
  %4912 = icmp sgt i32 %13, 1
  %4913 = icmp sgt i32 %13, 0
  %4914 = add i32 %13, -2
  %4915 = zext i32 %4914 to i64
  %4916 = zext i32 %13 to i64
  %4917 = add nuw i32 %5, 1
  %4918 = icmp eq i32 %13, 1
  br label %4919

4919:                                             ; preds = %4911, %5054
  %4920 = phi double [ %4893, %4911 ], [ %5005, %5054 ]
  %4921 = phi i32 [ 0, %4911 ], [ %5006, %5054 ]
  %4922 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4912, label %4923, label %4992

4923:                                             ; preds = %4919, %4982
  %4924 = phi i32 [ %4991, %4982 ], [ 0, %4919 ]
  %4925 = phi i64 [ %4933, %4982 ], [ %4916, %4919 ]
  %4926 = phi i64 [ %4990, %4982 ], [ %4915, %4919 ]
  %4927 = phi i32 [ %4988, %4982 ], [ %4922, %4919 ]
  %4928 = sub i32 %4914, %4924
  %4929 = tail call i32 @llvm.smin.i32(i32 %4928, i32 0)
  %4930 = sub i32 %4928, %4929
  %4931 = zext i32 %4930 to i64
  %4932 = add nuw nsw i64 %4931, 1
  %4933 = add nsw i64 %4925, -1
  %4934 = icmp ult i32 %4930, 31
  br i1 %4934, label %4970, label %4935

4935:                                             ; preds = %4923
  %4936 = and i64 %4932, 8589934560
  %4937 = sub i64 %4926, %4936
  br label %4938

4938:                                             ; preds = %4938, %4935
  %4939 = phi i64 [ 0, %4935 ], [ %4962, %4938 ]
  %4940 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4935 ], [ %4958, %4938 ]
  %4941 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4935 ], [ %4959, %4938 ]
  %4942 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4935 ], [ %4960, %4938 ]
  %4943 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4935 ], [ %4961, %4938 ]
  %4944 = sub i64 %4926, %4939
  %4945 = getelementptr inbounds i32, ptr %9, i64 %4944
  %4946 = getelementptr inbounds i32, ptr %4945, i64 -7
  %4947 = load <8 x i32>, ptr %4946, align 4, !tbaa !5
  %4948 = shufflevector <8 x i32> %4947, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4949 = getelementptr inbounds i32, ptr %4945, i64 -15
  %4950 = load <8 x i32>, ptr %4949, align 4, !tbaa !5
  %4951 = shufflevector <8 x i32> %4950, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4952 = getelementptr inbounds i32, ptr %4945, i64 -23
  %4953 = load <8 x i32>, ptr %4952, align 4, !tbaa !5
  %4954 = shufflevector <8 x i32> %4953, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4955 = getelementptr inbounds i32, ptr %4945, i64 -31
  %4956 = load <8 x i32>, ptr %4955, align 4, !tbaa !5
  %4957 = shufflevector <8 x i32> %4956, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4958 = mul <8 x i32> %4948, %4940
  %4959 = mul <8 x i32> %4951, %4941
  %4960 = mul <8 x i32> %4954, %4942
  %4961 = mul <8 x i32> %4957, %4943
  %4962 = add nuw i64 %4939, 32
  %4963 = icmp eq i64 %4962, %4936
  br i1 %4963, label %4964, label %4938, !llvm.loop !924

4964:                                             ; preds = %4938
  %4965 = mul <8 x i32> %4959, %4958
  %4966 = mul <8 x i32> %4960, %4965
  %4967 = mul <8 x i32> %4961, %4966
  %4968 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4967)
  %4969 = icmp eq i64 %4932, %4936
  br i1 %4969, label %4982, label %4970

4970:                                             ; preds = %4923, %4964
  %4971 = phi i64 [ %4926, %4923 ], [ %4937, %4964 ]
  %4972 = phi i32 [ 1, %4923 ], [ %4968, %4964 ]
  br label %4973

4973:                                             ; preds = %4970, %4973
  %4974 = phi i64 [ %4979, %4973 ], [ %4971, %4970 ]
  %4975 = phi i32 [ %4978, %4973 ], [ %4972, %4970 ]
  %4976 = getelementptr inbounds i32, ptr %9, i64 %4974
  %4977 = load i32, ptr %4976, align 4, !tbaa !5
  %4978 = mul nsw i32 %4977, %4975
  %4979 = add nsw i64 %4974, -1
  %4980 = trunc i64 %4974 to i32
  %4981 = icmp sgt i32 %4980, 0
  br i1 %4981, label %4973, label %4982, !llvm.loop !925

4982:                                             ; preds = %4973, %4964
  %4983 = phi i32 [ %4968, %4964 ], [ %4978, %4973 ]
  %4984 = and i64 %4933, 4294967295
  %4985 = getelementptr inbounds i32, ptr %6, i64 %4984
  %4986 = load i32, ptr %4985, align 4, !tbaa !5
  %4987 = mul nsw i32 %4986, %4983
  %4988 = add nsw i32 %4987, %4927
  %4989 = icmp sgt i64 %4925, 2
  %4990 = add nsw i64 %4926, -1
  %4991 = add i32 %4924, 1
  br i1 %4989, label %4923, label %4992, !llvm.loop !926

4992:                                             ; preds = %4982, %4919
  %4993 = phi i32 [ %4922, %4919 ], [ %4988, %4982 ]
  %4994 = sext i32 %4993 to i64
  %4995 = getelementptr inbounds double, ptr %2, i64 %4994
  %4996 = load double, ptr %4995, align 8, !tbaa !18
  %4997 = getelementptr inbounds i64, ptr %4889, i64 %4994
  %4998 = load i64, ptr %4997, align 8, !tbaa !120
  %4999 = sitofp i64 %4998 to double
  %5000 = fcmp fast one double %4996, 0.000000e+00
  %5001 = fcmp fast ogt double %4920, %4999
  %5002 = select i1 %5000, i1 %5001, i1 false
  br i1 %5002, label %5003, label %5004

5003:                                             ; preds = %4992
  store double %4999, ptr %4891, align 8, !tbaa !18
  br label %5004

5004:                                             ; preds = %5003, %4992
  %5005 = phi double [ %4999, %5003 ], [ %4920, %4992 ]
  %5006 = add nuw nsw i32 %4921, 1
  br i1 %4913, label %5007, label %5054

5007:                                             ; preds = %5004
  %5008 = load i32, ptr %4, align 4, !tbaa !5
  %5009 = load i32, ptr %12, align 4, !tbaa !5
  %5010 = add nsw i32 %5009, -1
  %5011 = icmp slt i32 %5008, %5010
  br i1 %5011, label %5031, label %5012

5012:                                             ; preds = %5007
  %5013 = icmp eq i32 %5008, %5010
  br i1 %5013, label %5014, label %5047

5014:                                             ; preds = %5012
  store i32 0, ptr %4, align 4, !tbaa !5
  %5015 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5015, ptr %6, align 4, !tbaa !5
  br i1 %4918, label %5054, label %5016

5016:                                             ; preds = %5014, %5041
  %5017 = phi i64 [ %5045, %5041 ], [ 1, %5014 ]
  %5018 = getelementptr inbounds i32, ptr %4, i64 %5017
  %5019 = load i32, ptr %5018, align 4, !tbaa !5
  %5020 = getelementptr inbounds i32, ptr %12, i64 %5017
  %5021 = load i32, ptr %5020, align 4, !tbaa !5
  %5022 = add nsw i32 %5021, -1
  %5023 = icmp slt i32 %5019, %5022
  br i1 %5023, label %5024, label %5039

5024:                                             ; preds = %5016
  br i1 %5011, label %5031, label %5025

5025:                                             ; preds = %5024
  %5026 = getelementptr inbounds i32, ptr %7, i64 %5017
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %6, i64 %5017
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = add nsw i32 %5029, %5027
  store i32 %5030, ptr %5028, align 4, !tbaa !5
  br label %5049

5031:                                             ; preds = %5007, %5024
  %5032 = phi i32 [ %5019, %5024 ], [ %5008, %5007 ]
  %5033 = phi ptr [ %5018, %5024 ], [ %4, %5007 ]
  %5034 = phi i64 [ %5017, %5024 ], [ 0, %5007 ]
  %5035 = add nsw i32 %5032, 1
  store i32 %5035, ptr %5033, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %7, i64 %5034
  %5037 = load i32, ptr %5036, align 4, !tbaa !5
  %5038 = getelementptr inbounds i32, ptr %6, i64 %5034
  br label %5049

5039:                                             ; preds = %5016
  %5040 = icmp eq i32 %5019, %5022
  br i1 %5040, label %5041, label %5047

5041:                                             ; preds = %5039
  store i32 0, ptr %5018, align 4, !tbaa !5
  %5042 = getelementptr inbounds i32, ptr %8, i64 %5017
  %5043 = load i32, ptr %5042, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %6, i64 %5017
  store i32 %5043, ptr %5044, align 4, !tbaa !5
  %5045 = add nuw nsw i64 %5017, 1
  %5046 = icmp eq i64 %5045, %4916
  br i1 %5046, label %5054, label %5016, !llvm.loop !927

5047:                                             ; preds = %5012, %5039
  %5048 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

5049:                                             ; preds = %5025, %5031
  %5050 = phi ptr [ %5038, %5031 ], [ %5018, %5025 ]
  %5051 = phi i32 [ %5037, %5031 ], [ 1, %5025 ]
  %5052 = load i32, ptr %5050, align 4, !tbaa !5
  %5053 = add nsw i32 %5052, %5051
  store i32 %5053, ptr %5050, align 4, !tbaa !5
  br label %5054

5054:                                             ; preds = %5041, %5049, %5014, %5004
  %5055 = icmp eq i32 %5006, %5
  br i1 %5055, label %5494, label %4919, !llvm.loop !928

5056:                                             ; preds = %4902, %5194
  %5057 = phi double [ %4893, %4902 ], [ %5142, %5194 ]
  %5058 = phi i32 [ 0, %4902 ], [ %5143, %5194 ]
  %5059 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4903, label %5060, label %5129

5060:                                             ; preds = %5056, %5119
  %5061 = phi i32 [ %5128, %5119 ], [ 0, %5056 ]
  %5062 = phi i64 [ %5070, %5119 ], [ %4907, %5056 ]
  %5063 = phi i64 [ %5127, %5119 ], [ %4906, %5056 ]
  %5064 = phi i32 [ %5125, %5119 ], [ %5059, %5056 ]
  %5065 = sub i32 %4905, %5061
  %5066 = tail call i32 @llvm.smin.i32(i32 %5065, i32 0)
  %5067 = sub i32 %5065, %5066
  %5068 = zext i32 %5067 to i64
  %5069 = add nuw nsw i64 %5068, 1
  %5070 = add nsw i64 %5062, -1
  %5071 = icmp ult i32 %5067, 31
  br i1 %5071, label %5107, label %5072

5072:                                             ; preds = %5060
  %5073 = and i64 %5069, 8589934560
  %5074 = sub i64 %5063, %5073
  br label %5075

5075:                                             ; preds = %5075, %5072
  %5076 = phi i64 [ 0, %5072 ], [ %5099, %5075 ]
  %5077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5095, %5075 ]
  %5078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5096, %5075 ]
  %5079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5097, %5075 ]
  %5080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5098, %5075 ]
  %5081 = sub i64 %5063, %5076
  %5082 = getelementptr inbounds i32, ptr %11, i64 %5081
  %5083 = getelementptr inbounds i32, ptr %5082, i64 -7
  %5084 = load <8 x i32>, ptr %5083, align 4, !tbaa !5
  %5085 = shufflevector <8 x i32> %5084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5086 = getelementptr inbounds i32, ptr %5082, i64 -15
  %5087 = load <8 x i32>, ptr %5086, align 4, !tbaa !5
  %5088 = shufflevector <8 x i32> %5087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5089 = getelementptr inbounds i32, ptr %5082, i64 -23
  %5090 = load <8 x i32>, ptr %5089, align 4, !tbaa !5
  %5091 = shufflevector <8 x i32> %5090, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5092 = getelementptr inbounds i32, ptr %5082, i64 -31
  %5093 = load <8 x i32>, ptr %5092, align 4, !tbaa !5
  %5094 = shufflevector <8 x i32> %5093, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5095 = mul <8 x i32> %5085, %5077
  %5096 = mul <8 x i32> %5088, %5078
  %5097 = mul <8 x i32> %5091, %5079
  %5098 = mul <8 x i32> %5094, %5080
  %5099 = add nuw i64 %5076, 32
  %5100 = icmp eq i64 %5099, %5073
  br i1 %5100, label %5101, label %5075, !llvm.loop !929

5101:                                             ; preds = %5075
  %5102 = mul <8 x i32> %5096, %5095
  %5103 = mul <8 x i32> %5097, %5102
  %5104 = mul <8 x i32> %5098, %5103
  %5105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5104)
  %5106 = icmp eq i64 %5069, %5073
  br i1 %5106, label %5119, label %5107

5107:                                             ; preds = %5060, %5101
  %5108 = phi i64 [ %5063, %5060 ], [ %5074, %5101 ]
  %5109 = phi i32 [ 1, %5060 ], [ %5105, %5101 ]
  br label %5110

5110:                                             ; preds = %5107, %5110
  %5111 = phi i64 [ %5116, %5110 ], [ %5108, %5107 ]
  %5112 = phi i32 [ %5115, %5110 ], [ %5109, %5107 ]
  %5113 = getelementptr inbounds i32, ptr %11, i64 %5111
  %5114 = load i32, ptr %5113, align 4, !tbaa !5
  %5115 = mul nsw i32 %5114, %5112
  %5116 = add nsw i64 %5111, -1
  %5117 = trunc i64 %5111 to i32
  %5118 = icmp sgt i32 %5117, 0
  br i1 %5118, label %5110, label %5119, !llvm.loop !930

5119:                                             ; preds = %5110, %5101
  %5120 = phi i32 [ %5105, %5101 ], [ %5115, %5110 ]
  %5121 = and i64 %5070, 4294967295
  %5122 = getelementptr inbounds i32, ptr %6, i64 %5121
  %5123 = load i32, ptr %5122, align 4, !tbaa !5
  %5124 = mul nsw i32 %5123, %5120
  %5125 = add nsw i32 %5124, %5064
  %5126 = icmp sgt i64 %5062, 2
  %5127 = add nsw i64 %5063, -1
  %5128 = add i32 %5061, 1
  br i1 %5126, label %5060, label %5129, !llvm.loop !931

5129:                                             ; preds = %5119, %5056
  %5130 = phi i32 [ %5059, %5056 ], [ %5125, %5119 ]
  %5131 = icmp slt i32 %5130, %5
  br i1 %5131, label %5134, label %5132

5132:                                             ; preds = %5129
  %5133 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

5134:                                             ; preds = %5129
  %5135 = sext i32 %5130 to i64
  %5136 = getelementptr inbounds i64, ptr %4889, i64 %5135
  %5137 = load i64, ptr %5136, align 8, !tbaa !120
  %5138 = sitofp i64 %5137 to double
  %5139 = fcmp fast ogt double %5057, %5138
  br i1 %5139, label %5140, label %5141

5140:                                             ; preds = %5134
  store double %5138, ptr %4891, align 8, !tbaa !18
  br label %5141

5141:                                             ; preds = %5134, %5140
  %5142 = phi double [ %5057, %5134 ], [ %5138, %5140 ]
  %5143 = add nuw nsw i32 %5058, 1
  br i1 %4904, label %5144, label %5194

5144:                                             ; preds = %5141
  %5145 = load i32, ptr %4, align 4, !tbaa !5
  %5146 = load i32, ptr %12, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, -1
  %5148 = icmp slt i32 %5145, %5147
  br i1 %5148, label %5171, label %5149

5149:                                             ; preds = %5144
  %5150 = icmp eq i32 %5145, %5147
  br i1 %5150, label %5151, label %5187

5151:                                             ; preds = %5149
  store i32 0, ptr %4, align 4, !tbaa !5
  %5152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5152, ptr %6, align 4, !tbaa !5
  br i1 %4909, label %5194, label %5153

5153:                                             ; preds = %5151, %5181
  %5154 = phi i64 [ %5185, %5181 ], [ 1, %5151 ]
  %5155 = getelementptr inbounds i32, ptr %4, i64 %5154
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = getelementptr inbounds i32, ptr %12, i64 %5154
  %5158 = load i32, ptr %5157, align 4, !tbaa !5
  %5159 = add nsw i32 %5158, -1
  %5160 = icmp slt i32 %5156, %5159
  br i1 %5160, label %5161, label %5179

5161:                                             ; preds = %5153
  br i1 %5148, label %5171, label %5162

5162:                                             ; preds = %5161
  %5163 = shl i64 %5154, 32
  %5164 = add i64 %5163, -4294967296
  %5165 = ashr exact i64 %5164, 32
  %5166 = getelementptr inbounds i32, ptr %7, i64 %5165
  %5167 = load i32, ptr %5166, align 4, !tbaa !5
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5154
  %5169 = load i32, ptr %5168, align 4, !tbaa !5
  %5170 = add nsw i32 %5169, %5167
  store i32 %5170, ptr %5168, align 4, !tbaa !5
  br label %5189

5171:                                             ; preds = %5144, %5161
  %5172 = phi i32 [ %5156, %5161 ], [ %5145, %5144 ]
  %5173 = phi ptr [ %5155, %5161 ], [ %4, %5144 ]
  %5174 = phi i64 [ %5154, %5161 ], [ 0, %5144 ]
  %5175 = add nsw i32 %5172, 1
  store i32 %5175, ptr %5173, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %7, i64 %5174
  %5177 = load i32, ptr %5176, align 4, !tbaa !5
  %5178 = getelementptr inbounds i32, ptr %6, i64 %5174
  br label %5189

5179:                                             ; preds = %5153
  %5180 = icmp eq i32 %5156, %5159
  br i1 %5180, label %5181, label %5187

5181:                                             ; preds = %5179
  store i32 0, ptr %5155, align 4, !tbaa !5
  %5182 = getelementptr inbounds i32, ptr %8, i64 %5154
  %5183 = load i32, ptr %5182, align 4, !tbaa !5
  %5184 = getelementptr inbounds i32, ptr %6, i64 %5154
  store i32 %5183, ptr %5184, align 4, !tbaa !5
  %5185 = add nuw nsw i64 %5154, 1
  %5186 = icmp eq i64 %5185, %4907
  br i1 %5186, label %5194, label %5153, !llvm.loop !932

5187:                                             ; preds = %5149, %5179
  %5188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

5189:                                             ; preds = %5162, %5171
  %5190 = phi ptr [ %5178, %5171 ], [ %5155, %5162 ]
  %5191 = phi i32 [ %5177, %5171 ], [ 1, %5162 ]
  %5192 = load i32, ptr %5190, align 4, !tbaa !5
  %5193 = add nsw i32 %5192, %5191
  store i32 %5193, ptr %5190, align 4, !tbaa !5
  br label %5194

5194:                                             ; preds = %5181, %5189, %5151, %5141
  %5195 = icmp eq i32 %5143, %5
  br i1 %5195, label %5494, label %5056, !llvm.loop !933

5196:                                             ; preds = %4895
  %5197 = getelementptr inbounds i32, ptr %3, i64 %19
  %5198 = load i32, ptr %5197, align 4, !tbaa !5
  %5199 = icmp eq i32 %5198, 0
  %5200 = icmp sgt i32 %5, 0
  br i1 %5199, label %5210, label %5201

5201:                                             ; preds = %5196
  br i1 %5200, label %5202, label %5494

5202:                                             ; preds = %5201
  %5203 = icmp sgt i32 %13, 1
  %5204 = icmp sgt i32 %13, 0
  %5205 = add i32 %13, -2
  %5206 = zext i32 %5205 to i64
  %5207 = zext i32 %13 to i64
  %5208 = add nuw i32 %5, 1
  %5209 = icmp eq i32 %13, 1
  br label %5352

5210:                                             ; preds = %5196
  br i1 %5200, label %5211, label %5494

5211:                                             ; preds = %5210
  %5212 = icmp sgt i32 %13, 1
  %5213 = icmp sgt i32 %13, 0
  %5214 = add i32 %13, -2
  %5215 = zext i32 %5214 to i64
  %5216 = zext i32 %13 to i64
  %5217 = add nuw i32 %5, 1
  %5218 = icmp eq i32 %13, 1
  br label %5219

5219:                                             ; preds = %5211, %5350
  %5220 = phi double [ %4893, %5211 ], [ %5301, %5350 ]
  %5221 = phi i32 [ 0, %5211 ], [ %5302, %5350 ]
  %5222 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5212, label %5223, label %5292

5223:                                             ; preds = %5219, %5282
  %5224 = phi i32 [ %5291, %5282 ], [ 0, %5219 ]
  %5225 = phi i64 [ %5233, %5282 ], [ %5216, %5219 ]
  %5226 = phi i64 [ %5290, %5282 ], [ %5215, %5219 ]
  %5227 = phi i32 [ %5288, %5282 ], [ %5222, %5219 ]
  %5228 = sub i32 %5214, %5224
  %5229 = tail call i32 @llvm.smin.i32(i32 %5228, i32 0)
  %5230 = sub i32 %5228, %5229
  %5231 = zext i32 %5230 to i64
  %5232 = add nuw nsw i64 %5231, 1
  %5233 = add nsw i64 %5225, -1
  %5234 = icmp ult i32 %5230, 31
  br i1 %5234, label %5270, label %5235

5235:                                             ; preds = %5223
  %5236 = and i64 %5232, 8589934560
  %5237 = sub i64 %5226, %5236
  br label %5238

5238:                                             ; preds = %5238, %5235
  %5239 = phi i64 [ 0, %5235 ], [ %5262, %5238 ]
  %5240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5235 ], [ %5258, %5238 ]
  %5241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5235 ], [ %5259, %5238 ]
  %5242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5235 ], [ %5260, %5238 ]
  %5243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5235 ], [ %5261, %5238 ]
  %5244 = sub i64 %5226, %5239
  %5245 = getelementptr inbounds i32, ptr %9, i64 %5244
  %5246 = getelementptr inbounds i32, ptr %5245, i64 -7
  %5247 = load <8 x i32>, ptr %5246, align 4, !tbaa !5
  %5248 = shufflevector <8 x i32> %5247, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5249 = getelementptr inbounds i32, ptr %5245, i64 -15
  %5250 = load <8 x i32>, ptr %5249, align 4, !tbaa !5
  %5251 = shufflevector <8 x i32> %5250, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5252 = getelementptr inbounds i32, ptr %5245, i64 -23
  %5253 = load <8 x i32>, ptr %5252, align 4, !tbaa !5
  %5254 = shufflevector <8 x i32> %5253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5255 = getelementptr inbounds i32, ptr %5245, i64 -31
  %5256 = load <8 x i32>, ptr %5255, align 4, !tbaa !5
  %5257 = shufflevector <8 x i32> %5256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5258 = mul <8 x i32> %5248, %5240
  %5259 = mul <8 x i32> %5251, %5241
  %5260 = mul <8 x i32> %5254, %5242
  %5261 = mul <8 x i32> %5257, %5243
  %5262 = add nuw i64 %5239, 32
  %5263 = icmp eq i64 %5262, %5236
  br i1 %5263, label %5264, label %5238, !llvm.loop !934

5264:                                             ; preds = %5238
  %5265 = mul <8 x i32> %5259, %5258
  %5266 = mul <8 x i32> %5260, %5265
  %5267 = mul <8 x i32> %5261, %5266
  %5268 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5267)
  %5269 = icmp eq i64 %5232, %5236
  br i1 %5269, label %5282, label %5270

5270:                                             ; preds = %5223, %5264
  %5271 = phi i64 [ %5226, %5223 ], [ %5237, %5264 ]
  %5272 = phi i32 [ 1, %5223 ], [ %5268, %5264 ]
  br label %5273

5273:                                             ; preds = %5270, %5273
  %5274 = phi i64 [ %5279, %5273 ], [ %5271, %5270 ]
  %5275 = phi i32 [ %5278, %5273 ], [ %5272, %5270 ]
  %5276 = getelementptr inbounds i32, ptr %9, i64 %5274
  %5277 = load i32, ptr %5276, align 4, !tbaa !5
  %5278 = mul nsw i32 %5277, %5275
  %5279 = add nsw i64 %5274, -1
  %5280 = trunc i64 %5274 to i32
  %5281 = icmp sgt i32 %5280, 0
  br i1 %5281, label %5273, label %5282, !llvm.loop !935

5282:                                             ; preds = %5273, %5264
  %5283 = phi i32 [ %5268, %5264 ], [ %5278, %5273 ]
  %5284 = and i64 %5233, 4294967295
  %5285 = getelementptr inbounds i32, ptr %6, i64 %5284
  %5286 = load i32, ptr %5285, align 4, !tbaa !5
  %5287 = mul nsw i32 %5286, %5283
  %5288 = add nsw i32 %5287, %5227
  %5289 = icmp sgt i64 %5225, 2
  %5290 = add nsw i64 %5226, -1
  %5291 = add i32 %5224, 1
  br i1 %5289, label %5223, label %5292, !llvm.loop !936

5292:                                             ; preds = %5282, %5219
  %5293 = phi i32 [ %5222, %5219 ], [ %5288, %5282 ]
  %5294 = sext i32 %5293 to i64
  %5295 = getelementptr inbounds i64, ptr %4889, i64 %5294
  %5296 = load i64, ptr %5295, align 8, !tbaa !120
  %5297 = sitofp i64 %5296 to double
  %5298 = fcmp fast ogt double %5220, %5297
  br i1 %5298, label %5299, label %5300

5299:                                             ; preds = %5292
  store double %5297, ptr %4891, align 8, !tbaa !18
  br label %5300

5300:                                             ; preds = %5299, %5292
  %5301 = phi double [ %5297, %5299 ], [ %5220, %5292 ]
  %5302 = add nuw nsw i32 %5221, 1
  br i1 %5213, label %5303, label %5350

5303:                                             ; preds = %5300
  %5304 = load i32, ptr %4, align 4, !tbaa !5
  %5305 = load i32, ptr %12, align 4, !tbaa !5
  %5306 = add nsw i32 %5305, -1
  %5307 = icmp slt i32 %5304, %5306
  br i1 %5307, label %5327, label %5308

5308:                                             ; preds = %5303
  %5309 = icmp eq i32 %5304, %5306
  br i1 %5309, label %5310, label %5343

5310:                                             ; preds = %5308
  store i32 0, ptr %4, align 4, !tbaa !5
  %5311 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5311, ptr %6, align 4, !tbaa !5
  br i1 %5218, label %5350, label %5312

5312:                                             ; preds = %5310, %5337
  %5313 = phi i64 [ %5341, %5337 ], [ 1, %5310 ]
  %5314 = getelementptr inbounds i32, ptr %4, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %12, i64 %5313
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = add nsw i32 %5317, -1
  %5319 = icmp slt i32 %5315, %5318
  br i1 %5319, label %5320, label %5335

5320:                                             ; preds = %5312
  br i1 %5307, label %5327, label %5321

5321:                                             ; preds = %5320
  %5322 = getelementptr inbounds i32, ptr %7, i64 %5313
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5313
  %5325 = load i32, ptr %5324, align 4, !tbaa !5
  %5326 = add nsw i32 %5325, %5323
  store i32 %5326, ptr %5324, align 4, !tbaa !5
  br label %5345

5327:                                             ; preds = %5303, %5320
  %5328 = phi i32 [ %5315, %5320 ], [ %5304, %5303 ]
  %5329 = phi ptr [ %5314, %5320 ], [ %4, %5303 ]
  %5330 = phi i64 [ %5313, %5320 ], [ 0, %5303 ]
  %5331 = add nsw i32 %5328, 1
  store i32 %5331, ptr %5329, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %7, i64 %5330
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = getelementptr inbounds i32, ptr %6, i64 %5330
  br label %5345

5335:                                             ; preds = %5312
  %5336 = icmp eq i32 %5315, %5318
  br i1 %5336, label %5337, label %5343

5337:                                             ; preds = %5335
  store i32 0, ptr %5314, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %8, i64 %5313
  %5339 = load i32, ptr %5338, align 4, !tbaa !5
  %5340 = getelementptr inbounds i32, ptr %6, i64 %5313
  store i32 %5339, ptr %5340, align 4, !tbaa !5
  %5341 = add nuw nsw i64 %5313, 1
  %5342 = icmp eq i64 %5341, %5216
  br i1 %5342, label %5350, label %5312, !llvm.loop !937

5343:                                             ; preds = %5308, %5335
  %5344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

5345:                                             ; preds = %5321, %5327
  %5346 = phi ptr [ %5334, %5327 ], [ %5314, %5321 ]
  %5347 = phi i32 [ %5333, %5327 ], [ 1, %5321 ]
  %5348 = load i32, ptr %5346, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, %5347
  store i32 %5349, ptr %5346, align 4, !tbaa !5
  br label %5350

5350:                                             ; preds = %5337, %5345, %5310, %5300
  %5351 = icmp eq i32 %5302, %5
  br i1 %5351, label %5494, label %5219, !llvm.loop !938

5352:                                             ; preds = %5202, %5490
  %5353 = phi double [ %4893, %5202 ], [ %5438, %5490 ]
  %5354 = phi i32 [ 0, %5202 ], [ %5439, %5490 ]
  %5355 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5203, label %5356, label %5425

5356:                                             ; preds = %5352, %5415
  %5357 = phi i32 [ %5424, %5415 ], [ 0, %5352 ]
  %5358 = phi i64 [ %5366, %5415 ], [ %5207, %5352 ]
  %5359 = phi i64 [ %5423, %5415 ], [ %5206, %5352 ]
  %5360 = phi i32 [ %5421, %5415 ], [ %5355, %5352 ]
  %5361 = sub i32 %5205, %5357
  %5362 = tail call i32 @llvm.smin.i32(i32 %5361, i32 0)
  %5363 = sub i32 %5361, %5362
  %5364 = zext i32 %5363 to i64
  %5365 = add nuw nsw i64 %5364, 1
  %5366 = add nsw i64 %5358, -1
  %5367 = icmp ult i32 %5363, 31
  br i1 %5367, label %5403, label %5368

5368:                                             ; preds = %5356
  %5369 = and i64 %5365, 8589934560
  %5370 = sub i64 %5359, %5369
  br label %5371

5371:                                             ; preds = %5371, %5368
  %5372 = phi i64 [ 0, %5368 ], [ %5395, %5371 ]
  %5373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5391, %5371 ]
  %5374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5392, %5371 ]
  %5375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5393, %5371 ]
  %5376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5394, %5371 ]
  %5377 = sub i64 %5359, %5372
  %5378 = getelementptr inbounds i32, ptr %11, i64 %5377
  %5379 = getelementptr inbounds i32, ptr %5378, i64 -7
  %5380 = load <8 x i32>, ptr %5379, align 4, !tbaa !5
  %5381 = shufflevector <8 x i32> %5380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5382 = getelementptr inbounds i32, ptr %5378, i64 -15
  %5383 = load <8 x i32>, ptr %5382, align 4, !tbaa !5
  %5384 = shufflevector <8 x i32> %5383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5385 = getelementptr inbounds i32, ptr %5378, i64 -23
  %5386 = load <8 x i32>, ptr %5385, align 4, !tbaa !5
  %5387 = shufflevector <8 x i32> %5386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5388 = getelementptr inbounds i32, ptr %5378, i64 -31
  %5389 = load <8 x i32>, ptr %5388, align 4, !tbaa !5
  %5390 = shufflevector <8 x i32> %5389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5391 = mul <8 x i32> %5381, %5373
  %5392 = mul <8 x i32> %5384, %5374
  %5393 = mul <8 x i32> %5387, %5375
  %5394 = mul <8 x i32> %5390, %5376
  %5395 = add nuw i64 %5372, 32
  %5396 = icmp eq i64 %5395, %5369
  br i1 %5396, label %5397, label %5371, !llvm.loop !939

5397:                                             ; preds = %5371
  %5398 = mul <8 x i32> %5392, %5391
  %5399 = mul <8 x i32> %5393, %5398
  %5400 = mul <8 x i32> %5394, %5399
  %5401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5400)
  %5402 = icmp eq i64 %5365, %5369
  br i1 %5402, label %5415, label %5403

5403:                                             ; preds = %5356, %5397
  %5404 = phi i64 [ %5359, %5356 ], [ %5370, %5397 ]
  %5405 = phi i32 [ 1, %5356 ], [ %5401, %5397 ]
  br label %5406

5406:                                             ; preds = %5403, %5406
  %5407 = phi i64 [ %5412, %5406 ], [ %5404, %5403 ]
  %5408 = phi i32 [ %5411, %5406 ], [ %5405, %5403 ]
  %5409 = getelementptr inbounds i32, ptr %11, i64 %5407
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = mul nsw i32 %5410, %5408
  %5412 = add nsw i64 %5407, -1
  %5413 = trunc i64 %5407 to i32
  %5414 = icmp sgt i32 %5413, 0
  br i1 %5414, label %5406, label %5415, !llvm.loop !940

5415:                                             ; preds = %5406, %5397
  %5416 = phi i32 [ %5401, %5397 ], [ %5411, %5406 ]
  %5417 = and i64 %5366, 4294967295
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5417
  %5419 = load i32, ptr %5418, align 4, !tbaa !5
  %5420 = mul nsw i32 %5419, %5416
  %5421 = add nsw i32 %5420, %5360
  %5422 = icmp sgt i64 %5358, 2
  %5423 = add nsw i64 %5359, -1
  %5424 = add i32 %5357, 1
  br i1 %5422, label %5356, label %5425, !llvm.loop !941

5425:                                             ; preds = %5415, %5352
  %5426 = phi i32 [ %5355, %5352 ], [ %5421, %5415 ]
  %5427 = icmp slt i32 %5426, %5
  br i1 %5427, label %5430, label %5428

5428:                                             ; preds = %5425
  %5429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5494

5430:                                             ; preds = %5425
  %5431 = sext i32 %5426 to i64
  %5432 = getelementptr inbounds i64, ptr %4889, i64 %5431
  %5433 = load i64, ptr %5432, align 8, !tbaa !120
  %5434 = sitofp i64 %5433 to double
  %5435 = fcmp fast ogt double %5353, %5434
  br i1 %5435, label %5436, label %5437

5436:                                             ; preds = %5430
  store double %5434, ptr %4891, align 8, !tbaa !18
  br label %5437

5437:                                             ; preds = %5436, %5430
  %5438 = phi double [ %5434, %5436 ], [ %5353, %5430 ]
  %5439 = add nuw nsw i32 %5354, 1
  br i1 %5204, label %5440, label %5490

5440:                                             ; preds = %5437
  %5441 = load i32, ptr %4, align 4, !tbaa !5
  %5442 = load i32, ptr %12, align 4, !tbaa !5
  %5443 = add nsw i32 %5442, -1
  %5444 = icmp slt i32 %5441, %5443
  br i1 %5444, label %5467, label %5445

5445:                                             ; preds = %5440
  %5446 = icmp eq i32 %5441, %5443
  br i1 %5446, label %5447, label %5483

5447:                                             ; preds = %5445
  store i32 0, ptr %4, align 4, !tbaa !5
  %5448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5448, ptr %6, align 4, !tbaa !5
  br i1 %5209, label %5490, label %5449

5449:                                             ; preds = %5447, %5477
  %5450 = phi i64 [ %5481, %5477 ], [ 1, %5447 ]
  %5451 = getelementptr inbounds i32, ptr %4, i64 %5450
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = getelementptr inbounds i32, ptr %12, i64 %5450
  %5454 = load i32, ptr %5453, align 4, !tbaa !5
  %5455 = add nsw i32 %5454, -1
  %5456 = icmp slt i32 %5452, %5455
  br i1 %5456, label %5457, label %5475

5457:                                             ; preds = %5449
  br i1 %5444, label %5467, label %5458

5458:                                             ; preds = %5457
  %5459 = shl i64 %5450, 32
  %5460 = add i64 %5459, -4294967296
  %5461 = ashr exact i64 %5460, 32
  %5462 = getelementptr inbounds i32, ptr %7, i64 %5461
  %5463 = load i32, ptr %5462, align 4, !tbaa !5
  %5464 = getelementptr inbounds i32, ptr %6, i64 %5450
  %5465 = load i32, ptr %5464, align 4, !tbaa !5
  %5466 = add nsw i32 %5465, %5463
  store i32 %5466, ptr %5464, align 4, !tbaa !5
  br label %5485

5467:                                             ; preds = %5440, %5457
  %5468 = phi i32 [ %5452, %5457 ], [ %5441, %5440 ]
  %5469 = phi ptr [ %5451, %5457 ], [ %4, %5440 ]
  %5470 = phi i64 [ %5450, %5457 ], [ 0, %5440 ]
  %5471 = add nsw i32 %5468, 1
  store i32 %5471, ptr %5469, align 4, !tbaa !5
  %5472 = getelementptr inbounds i32, ptr %7, i64 %5470
  %5473 = load i32, ptr %5472, align 4, !tbaa !5
  %5474 = getelementptr inbounds i32, ptr %6, i64 %5470
  br label %5485

5475:                                             ; preds = %5449
  %5476 = icmp eq i32 %5452, %5455
  br i1 %5476, label %5477, label %5483

5477:                                             ; preds = %5475
  store i32 0, ptr %5451, align 4, !tbaa !5
  %5478 = getelementptr inbounds i32, ptr %8, i64 %5450
  %5479 = load i32, ptr %5478, align 4, !tbaa !5
  %5480 = getelementptr inbounds i32, ptr %6, i64 %5450
  store i32 %5479, ptr %5480, align 4, !tbaa !5
  %5481 = add nuw nsw i64 %5450, 1
  %5482 = icmp eq i64 %5481, %5207
  br i1 %5482, label %5490, label %5449, !llvm.loop !942

5483:                                             ; preds = %5445, %5475
  %5484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5494

5485:                                             ; preds = %5458, %5467
  %5486 = phi ptr [ %5474, %5467 ], [ %5451, %5458 ]
  %5487 = phi i32 [ %5473, %5467 ], [ 1, %5458 ]
  %5488 = load i32, ptr %5486, align 4, !tbaa !5
  %5489 = add nsw i32 %5488, %5487
  store i32 %5489, ptr %5486, align 4, !tbaa !5
  br label %5490

5490:                                             ; preds = %5477, %5485, %5447, %5437
  %5491 = icmp eq i32 %5439, %5
  br i1 %5491, label %5494, label %5352, !llvm.loop !943

5492:                                             ; preds = %4895
  %5493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1280, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5494

5494:                                             ; preds = %5490, %5350, %5194, %5054, %4883, %4743, %4587, %4447, %4276, %4136, %3980, %3840, %3669, %3530, %3375, %3236, %3063, %2924, %2769, %2630, %2460, %2320, %2164, %2024, %1853, %1714, %1559, %1420, %1245, %1106, %951, %812, %642, %500, %342, %200, %5201, %5210, %4901, %4910, %4594, %4603, %4294, %4303, %3987, %3996, %3687, %3696, %3382, %3391, %3084, %3093, %2776, %2785, %2478, %2487, %2171, %2180, %1871, %1880, %1566, %1575, %1268, %1277, %958, %967, %660, %669, %349, %358, %45, %54, %4887, %5492, %4280, %4885, %3673, %4278, %3077, %3074, %3671, %2464, %3065, %1857, %2462, %1261, %1257, %1855, %646, %1247, %37, %30, %644, %18, %5047, %5132, %5187, %5343, %5428, %5483, %4440, %4525, %4580, %4736, %4821, %4876, %3833, %3918, %3973, %4129, %4214, %4269, %3229, %3314, %3368, %3523, %3608, %3662, %2623, %2707, %2762, %2917, %3001, %3056, %2017, %2102, %2157, %2313, %2398, %2453, %1413, %1497, %1552, %1707, %1791, %1846, %805, %889, %944, %1099, %1183, %1238, %193, %277, %335, %493, %577, %635
  %5495 = phi i32 [ -1, %635 ], [ -1, %577 ], [ -1, %493 ], [ -1, %335 ], [ -1, %277 ], [ -1, %193 ], [ -1, %1238 ], [ -1, %1183 ], [ -1, %1099 ], [ -1, %944 ], [ -1, %889 ], [ -1, %805 ], [ -1, %1846 ], [ -1, %1791 ], [ -1, %1707 ], [ -1, %1552 ], [ -1, %1497 ], [ -1, %1413 ], [ -1, %2453 ], [ -1, %2398 ], [ -1, %2313 ], [ -1, %2157 ], [ -1, %2102 ], [ -1, %2017 ], [ -1, %3056 ], [ -1, %3001 ], [ -1, %2917 ], [ -1, %2762 ], [ -1, %2707 ], [ -1, %2623 ], [ -1, %3662 ], [ -1, %3608 ], [ -1, %3523 ], [ -1, %3368 ], [ -1, %3314 ], [ -1, %3229 ], [ -1, %4269 ], [ -1, %4214 ], [ -1, %4129 ], [ -1, %3973 ], [ -1, %3918 ], [ -1, %3833 ], [ -1, %4876 ], [ -1, %4821 ], [ -1, %4736 ], [ -1, %4580 ], [ -1, %4525 ], [ -1, %4440 ], [ -1, %5483 ], [ -1, %5428 ], [ -1, %5343 ], [ -1, %5187 ], [ -1, %5132 ], [ -1, %5047 ], [ %10, %18 ], [ 1, %644 ], [ 1, %30 ], [ 1, %37 ], [ 1, %646 ], [ 1, %1247 ], [ 1, %1855 ], [ 1, %1257 ], [ 1, %1261 ], [ 1, %1857 ], [ 1, %2462 ], [ 1, %2464 ], [ 1, %3065 ], [ 1, %3671 ], [ 1, %3074 ], [ 1, %3077 ], [ 1, %3673 ], [ 1, %4278 ], [ 1, %4280 ], [ 1, %4885 ], [ 1, %4887 ], [ 1, %5492 ], [ 1, %54 ], [ 1, %45 ], [ 1, %358 ], [ 1, %349 ], [ 1, %669 ], [ 1, %660 ], [ 1, %967 ], [ 1, %958 ], [ 1, %1277 ], [ 1, %1268 ], [ 1, %1575 ], [ 1, %1566 ], [ 1, %1880 ], [ 1, %1871 ], [ 1, %2180 ], [ 1, %2171 ], [ 1, %2487 ], [ 1, %2478 ], [ 1, %2785 ], [ 1, %2776 ], [ 1, %3093 ], [ 1, %3084 ], [ 1, %3391 ], [ 1, %3382 ], [ 1, %3696 ], [ 1, %3687 ], [ 1, %3996 ], [ 1, %3987 ], [ 1, %4303 ], [ 1, %4294 ], [ 1, %4603 ], [ 1, %4594 ], [ 1, %4910 ], [ 1, %4901 ], [ 1, %5210 ], [ 1, %5201 ], [ %61, %200 ], [ %52, %342 ], [ %365, %500 ], [ %356, %642 ], [ %676, %812 ], [ %667, %951 ], [ %974, %1106 ], [ %965, %1245 ], [ %1284, %1420 ], [ %1275, %1559 ], [ %1582, %1714 ], [ %1573, %1853 ], [ %1887, %2024 ], [ %1878, %2164 ], [ %2187, %2320 ], [ %2178, %2460 ], [ %2494, %2630 ], [ %2485, %2769 ], [ %2792, %2924 ], [ %2783, %3063 ], [ %3100, %3236 ], [ %3091, %3375 ], [ %3398, %3530 ], [ %3389, %3669 ], [ %3703, %3840 ], [ %3694, %3980 ], [ %4003, %4136 ], [ %3994, %4276 ], [ %4310, %4447 ], [ %4301, %4587 ], [ %4610, %4743 ], [ %4601, %4883 ], [ %4917, %5054 ], [ %4908, %5194 ], [ %5217, %5350 ], [ %5208, %5490 ]
  ret i32 %5495
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5477 [
    i32 101, label %22
    i32 102, label %630
    i32 103, label %1233
    i32 104, label %1841
    i32 105, label %2448
    i32 106, label %3051
    i32 107, label %3658
    i32 108, label %4264
    i32 109, label %4871
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load double, ptr %24, align 8, !tbaa !18
  %28 = fptoui double %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load double, ptr %24, align 8, !tbaa !18
  %32 = fptoui double %31 to i8
  %33 = icmp ugt i8 %28, %32
  br i1 %33, label %34, label %5477

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !11
  br label %5477

35:                                               ; preds = %22
  switch i32 %1, label %628 [
    i32 1, label %36
    i32 0, label %334
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !5
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5477

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %195

50:                                               ; preds = %36
  br i1 %40, label %51, label %5477

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %193
  %60 = phi i32 [ 0, %51 ], [ %145, %193 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %52, label %62, label %131

62:                                               ; preds = %59, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %59 ]
  %64 = phi i64 [ %72, %121 ], [ %56, %59 ]
  %65 = phi i64 [ %129, %121 ], [ %55, %59 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %59 ]
  %67 = sub i32 %54, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !944

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !945

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !946

131:                                              ; preds = %121, %59
  %132 = phi i32 [ %61, %59 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds double, ptr %24, i64 %133
  %137 = load double, ptr %136, align 8, !tbaa !18
  %138 = fptoui double %137 to i8
  %139 = fcmp fast ueq double %135, 0.000000e+00
  br i1 %139, label %144, label %140

140:                                              ; preds = %131
  %141 = load i8, ptr %26, align 1, !tbaa !11
  %142 = icmp ugt i8 %141, %138
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  store i8 %138, ptr %26, align 1, !tbaa !11
  br label %144

144:                                              ; preds = %140, %143, %131
  %145 = add nuw nsw i32 %60, 1
  br i1 %53, label %146, label %193

146:                                              ; preds = %144
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %58, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %56
  br i1 %185, label %193, label %155, !llvm.loop !947

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %144
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5477, label %59, !llvm.loop !948

195:                                              ; preds = %42, %332
  %196 = phi i32 [ 0, %42 ], [ %281, %332 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %43, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %47, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %46, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %45, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !949

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !950

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !951

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = icmp ugt i8 %277, %276
  br i1 %278, label %279, label %280

279:                                              ; preds = %272
  store i8 %276, ptr %26, align 1, !tbaa !11
  br label %280

280:                                              ; preds = %272, %279
  %281 = add nuw nsw i32 %196, 1
  br i1 %44, label %282, label %332

282:                                              ; preds = %280
  %283 = load i32, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %12, align 4, !tbaa !5
  %285 = add nsw i32 %284, -1
  %286 = icmp slt i32 %283, %285
  br i1 %286, label %309, label %287

287:                                              ; preds = %282
  %288 = icmp eq i32 %283, %285
  br i1 %288, label %289, label %325

289:                                              ; preds = %287
  store i32 0, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %290, ptr %6, align 4, !tbaa !5
  br i1 %49, label %332, label %291

291:                                              ; preds = %289, %319
  %292 = phi i64 [ %323, %319 ], [ 1, %289 ]
  %293 = getelementptr inbounds i32, ptr %4, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !5
  %295 = getelementptr inbounds i32, ptr %12, i64 %292
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = add nsw i32 %296, -1
  %298 = icmp slt i32 %294, %297
  br i1 %298, label %299, label %317

299:                                              ; preds = %291
  br i1 %286, label %309, label %300

300:                                              ; preds = %299
  %301 = shl i64 %292, 32
  %302 = add i64 %301, -4294967296
  %303 = ashr exact i64 %302, 32
  %304 = getelementptr inbounds i32, ptr %7, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = getelementptr inbounds i32, ptr %6, i64 %292
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = add nsw i32 %307, %305
  store i32 %308, ptr %306, align 4, !tbaa !5
  br label %327

309:                                              ; preds = %282, %299
  %310 = phi i32 [ %294, %299 ], [ %283, %282 ]
  %311 = phi ptr [ %293, %299 ], [ %4, %282 ]
  %312 = phi i64 [ %292, %299 ], [ 0, %282 ]
  %313 = add nsw i32 %310, 1
  store i32 %313, ptr %311, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %7, i64 %312
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %312
  br label %327

317:                                              ; preds = %291
  %318 = icmp eq i32 %294, %297
  br i1 %318, label %319, label %325

319:                                              ; preds = %317
  store i32 0, ptr %293, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %8, i64 %292
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %292
  store i32 %321, ptr %322, align 4, !tbaa !5
  %323 = add nuw nsw i64 %292, 1
  %324 = icmp eq i64 %323, %47
  br i1 %324, label %332, label %291, !llvm.loop !952

325:                                              ; preds = %287, %317
  %326 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

327:                                              ; preds = %300, %309
  %328 = phi ptr [ %316, %309 ], [ %293, %300 ]
  %329 = phi i32 [ %315, %309 ], [ 1, %300 ]
  %330 = load i32, ptr %328, align 4, !tbaa !5
  %331 = add nsw i32 %330, %329
  store i32 %331, ptr %328, align 4, !tbaa !5
  br label %332

332:                                              ; preds = %319, %327, %289, %280
  %333 = icmp eq i32 %281, %5
  br i1 %333, label %5477, label %195, !llvm.loop !953

334:                                              ; preds = %35
  %335 = getelementptr inbounds i32, ptr %3, i64 %19
  %336 = load i32, ptr %335, align 4, !tbaa !5
  %337 = icmp eq i32 %336, 0
  %338 = icmp sgt i32 %5, 0
  br i1 %337, label %348, label %339

339:                                              ; preds = %334
  br i1 %338, label %340, label %5477

340:                                              ; preds = %339
  %341 = icmp sgt i32 %13, 1
  %342 = icmp sgt i32 %13, 0
  %343 = add i32 %13, -2
  %344 = zext i32 %343 to i64
  %345 = zext i32 %13 to i64
  %346 = add nuw i32 %5, 1
  %347 = icmp eq i32 %13, 1
  br label %489

348:                                              ; preds = %334
  br i1 %338, label %349, label %5477

349:                                              ; preds = %348
  %350 = icmp sgt i32 %13, 1
  %351 = icmp sgt i32 %13, 0
  %352 = add i32 %13, -2
  %353 = zext i32 %352 to i64
  %354 = zext i32 %13 to i64
  %355 = add nuw i32 %5, 1
  %356 = icmp eq i32 %13, 1
  br label %357

357:                                              ; preds = %349, %487
  %358 = phi i32 [ 0, %349 ], [ %439, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %350, label %360, label %429

360:                                              ; preds = %357, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %357 ]
  %362 = phi i64 [ %370, %419 ], [ %354, %357 ]
  %363 = phi i64 [ %427, %419 ], [ %353, %357 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %357 ]
  %365 = sub i32 %352, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !954

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !955

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !956

429:                                              ; preds = %419, %357
  %430 = phi i32 [ %359, %357 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds double, ptr %24, i64 %431
  %433 = load double, ptr %432, align 8, !tbaa !18
  %434 = fptoui double %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = icmp ugt i8 %435, %434
  br i1 %436, label %437, label %438

437:                                              ; preds = %429
  store i8 %434, ptr %26, align 1, !tbaa !11
  br label %438

438:                                              ; preds = %437, %429
  %439 = add nuw nsw i32 %358, 1
  br i1 %351, label %440, label %487

440:                                              ; preds = %438
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %356, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %354
  br i1 %479, label %487, label %449, !llvm.loop !957

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %438
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5477, label %357, !llvm.loop !958

489:                                              ; preds = %340, %626
  %490 = phi i32 [ 0, %340 ], [ %575, %626 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %341, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %345, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %344, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %343, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !959

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !960

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !961

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds double, ptr %24, i64 %567
  %569 = load double, ptr %568, align 8, !tbaa !18
  %570 = fptoui double %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = icmp ugt i8 %571, %570
  br i1 %572, label %573, label %574

573:                                              ; preds = %566
  store i8 %570, ptr %26, align 1, !tbaa !11
  br label %574

574:                                              ; preds = %573, %566
  %575 = add nuw nsw i32 %490, 1
  br i1 %342, label %576, label %626

576:                                              ; preds = %574
  %577 = load i32, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %12, align 4, !tbaa !5
  %579 = add nsw i32 %578, -1
  %580 = icmp slt i32 %577, %579
  br i1 %580, label %603, label %581

581:                                              ; preds = %576
  %582 = icmp eq i32 %577, %579
  br i1 %582, label %583, label %619

583:                                              ; preds = %581
  store i32 0, ptr %4, align 4, !tbaa !5
  %584 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %584, ptr %6, align 4, !tbaa !5
  br i1 %347, label %626, label %585

585:                                              ; preds = %583, %613
  %586 = phi i64 [ %617, %613 ], [ 1, %583 ]
  %587 = getelementptr inbounds i32, ptr %4, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = getelementptr inbounds i32, ptr %12, i64 %586
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = add nsw i32 %590, -1
  %592 = icmp slt i32 %588, %591
  br i1 %592, label %593, label %611

593:                                              ; preds = %585
  br i1 %580, label %603, label %594

594:                                              ; preds = %593
  %595 = shl i64 %586, 32
  %596 = add i64 %595, -4294967296
  %597 = ashr exact i64 %596, 32
  %598 = getelementptr inbounds i32, ptr %7, i64 %597
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %586
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = add nsw i32 %601, %599
  store i32 %602, ptr %600, align 4, !tbaa !5
  br label %621

603:                                              ; preds = %576, %593
  %604 = phi i32 [ %588, %593 ], [ %577, %576 ]
  %605 = phi ptr [ %587, %593 ], [ %4, %576 ]
  %606 = phi i64 [ %586, %593 ], [ 0, %576 ]
  %607 = add nsw i32 %604, 1
  store i32 %607, ptr %605, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %7, i64 %606
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %606
  br label %621

611:                                              ; preds = %585
  %612 = icmp eq i32 %588, %591
  br i1 %612, label %613, label %619

613:                                              ; preds = %611
  store i32 0, ptr %587, align 4, !tbaa !5
  %614 = getelementptr inbounds i32, ptr %8, i64 %586
  %615 = load i32, ptr %614, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %6, i64 %586
  store i32 %615, ptr %616, align 4, !tbaa !5
  %617 = add nuw nsw i64 %586, 1
  %618 = icmp eq i64 %617, %345
  br i1 %618, label %626, label %585, !llvm.loop !962

619:                                              ; preds = %581, %611
  %620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

621:                                              ; preds = %594, %603
  %622 = phi ptr [ %610, %603 ], [ %587, %594 ]
  %623 = phi i32 [ %609, %603 ], [ 1, %594 ]
  %624 = load i32, ptr %622, align 4, !tbaa !5
  %625 = add nsw i32 %624, %623
  store i32 %625, ptr %622, align 4, !tbaa !5
  br label %626

626:                                              ; preds = %613, %621, %583, %574
  %627 = icmp eq i32 %575, %5
  br i1 %627, label %5477, label %489, !llvm.loop !963

628:                                              ; preds = %35
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1483, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

630:                                              ; preds = %18
  %631 = getelementptr inbounds ptr, ptr %14, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !9
  %633 = getelementptr inbounds ptr, ptr %16, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = load double, ptr %632, align 8, !tbaa !18
  %636 = fptosi double %635 to i32
  store i32 %636, ptr %634, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %5477, label %638

638:                                              ; preds = %630
  switch i32 %1, label %1231 [
    i32 1, label %639
    i32 0, label %937
  ]

639:                                              ; preds = %638
  %640 = getelementptr inbounds i32, ptr %3, i64 %19
  %641 = load i32, ptr %640, align 4, !tbaa !5
  %642 = icmp eq i32 %641, 0
  %643 = icmp sgt i32 %5, 0
  br i1 %642, label %653, label %644

644:                                              ; preds = %639
  br i1 %643, label %645, label %5477

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %798

653:                                              ; preds = %639
  br i1 %643, label %654, label %5477

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %662

662:                                              ; preds = %654, %796
  %663 = phi i32 [ 0, %654 ], [ %748, %796 ]
  %664 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %655, label %665, label %734

665:                                              ; preds = %662, %724
  %666 = phi i32 [ %733, %724 ], [ 0, %662 ]
  %667 = phi i64 [ %675, %724 ], [ %659, %662 ]
  %668 = phi i64 [ %732, %724 ], [ %658, %662 ]
  %669 = phi i32 [ %730, %724 ], [ %664, %662 ]
  %670 = sub i32 %657, %666
  %671 = tail call i32 @llvm.smin.i32(i32 %670, i32 0)
  %672 = sub i32 %670, %671
  %673 = zext i32 %672 to i64
  %674 = add nuw nsw i64 %673, 1
  %675 = add nsw i64 %667, -1
  %676 = icmp ult i32 %672, 31
  br i1 %676, label %712, label %677

677:                                              ; preds = %665
  %678 = and i64 %674, 8589934560
  %679 = sub i64 %668, %678
  br label %680

680:                                              ; preds = %680, %677
  %681 = phi i64 [ 0, %677 ], [ %704, %680 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %700, %680 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %701, %680 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %702, %680 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %703, %680 ]
  %686 = sub i64 %668, %681
  %687 = getelementptr inbounds i32, ptr %9, i64 %686
  %688 = getelementptr inbounds i32, ptr %687, i64 -7
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %687, i64 -15
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %687, i64 -23
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = getelementptr inbounds i32, ptr %687, i64 -31
  %698 = load <8 x i32>, ptr %697, align 4, !tbaa !5
  %699 = shufflevector <8 x i32> %698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %700 = mul <8 x i32> %690, %682
  %701 = mul <8 x i32> %693, %683
  %702 = mul <8 x i32> %696, %684
  %703 = mul <8 x i32> %699, %685
  %704 = add nuw i64 %681, 32
  %705 = icmp eq i64 %704, %678
  br i1 %705, label %706, label %680, !llvm.loop !964

706:                                              ; preds = %680
  %707 = mul <8 x i32> %701, %700
  %708 = mul <8 x i32> %702, %707
  %709 = mul <8 x i32> %703, %708
  %710 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %709)
  %711 = icmp eq i64 %674, %678
  br i1 %711, label %724, label %712

712:                                              ; preds = %665, %706
  %713 = phi i64 [ %668, %665 ], [ %679, %706 ]
  %714 = phi i32 [ 1, %665 ], [ %710, %706 ]
  br label %715

715:                                              ; preds = %712, %715
  %716 = phi i64 [ %721, %715 ], [ %713, %712 ]
  %717 = phi i32 [ %720, %715 ], [ %714, %712 ]
  %718 = getelementptr inbounds i32, ptr %9, i64 %716
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %717
  %721 = add nsw i64 %716, -1
  %722 = trunc i64 %716 to i32
  %723 = icmp sgt i32 %722, 0
  br i1 %723, label %715, label %724, !llvm.loop !965

724:                                              ; preds = %715, %706
  %725 = phi i32 [ %710, %706 ], [ %720, %715 ]
  %726 = and i64 %675, 4294967295
  %727 = getelementptr inbounds i32, ptr %6, i64 %726
  %728 = load i32, ptr %727, align 4, !tbaa !5
  %729 = mul nsw i32 %728, %725
  %730 = add nsw i32 %729, %669
  %731 = icmp sgt i64 %667, 2
  %732 = add nsw i64 %668, -1
  %733 = add i32 %666, 1
  br i1 %731, label %665, label %734, !llvm.loop !966

734:                                              ; preds = %724, %662
  %735 = phi i32 [ %664, %662 ], [ %730, %724 ]
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds double, ptr %2, i64 %736
  %738 = load double, ptr %737, align 8, !tbaa !18
  %739 = getelementptr inbounds double, ptr %632, i64 %736
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = fptosi double %740 to i32
  %742 = fcmp fast ueq double %738, 0.000000e+00
  br i1 %742, label %747, label %743

743:                                              ; preds = %734
  %744 = load i32, ptr %634, align 4, !tbaa !5
  %745 = icmp sgt i32 %744, %741
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  store i32 %741, ptr %634, align 4, !tbaa !5
  br label %747

747:                                              ; preds = %743, %746, %734
  %748 = add nuw nsw i32 %663, 1
  br i1 %656, label %749, label %796

749:                                              ; preds = %747
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %661, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %659
  br i1 %788, label %796, label %758, !llvm.loop !967

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %747
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5477, label %662, !llvm.loop !968

798:                                              ; preds = %645, %935
  %799 = phi i32 [ 0, %645 ], [ %884, %935 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %650, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %649, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %648, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !969

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !970

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !971

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds double, ptr %632, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !18
  %879 = fptosi double %878 to i32
  %880 = load i32, ptr %634, align 4, !tbaa !5
  %881 = icmp sgt i32 %880, %879
  br i1 %881, label %882, label %883

882:                                              ; preds = %875
  store i32 %879, ptr %634, align 4, !tbaa !5
  br label %883

883:                                              ; preds = %875, %882
  %884 = add nuw nsw i32 %799, 1
  br i1 %647, label %885, label %935

885:                                              ; preds = %883
  %886 = load i32, ptr %4, align 4, !tbaa !5
  %887 = load i32, ptr %12, align 4, !tbaa !5
  %888 = add nsw i32 %887, -1
  %889 = icmp slt i32 %886, %888
  br i1 %889, label %912, label %890

890:                                              ; preds = %885
  %891 = icmp eq i32 %886, %888
  br i1 %891, label %892, label %928

892:                                              ; preds = %890
  store i32 0, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %893, ptr %6, align 4, !tbaa !5
  br i1 %652, label %935, label %894

894:                                              ; preds = %892, %922
  %895 = phi i64 [ %926, %922 ], [ 1, %892 ]
  %896 = getelementptr inbounds i32, ptr %4, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %12, i64 %895
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, -1
  %901 = icmp slt i32 %897, %900
  br i1 %901, label %902, label %920

902:                                              ; preds = %894
  br i1 %889, label %912, label %903

903:                                              ; preds = %902
  %904 = shl i64 %895, 32
  %905 = add i64 %904, -4294967296
  %906 = ashr exact i64 %905, 32
  %907 = getelementptr inbounds i32, ptr %7, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %6, i64 %895
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, %908
  store i32 %911, ptr %909, align 4, !tbaa !5
  br label %930

912:                                              ; preds = %885, %902
  %913 = phi i32 [ %897, %902 ], [ %886, %885 ]
  %914 = phi ptr [ %896, %902 ], [ %4, %885 ]
  %915 = phi i64 [ %895, %902 ], [ 0, %885 ]
  %916 = add nsw i32 %913, 1
  store i32 %916, ptr %914, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %7, i64 %915
  %918 = load i32, ptr %917, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %6, i64 %915
  br label %930

920:                                              ; preds = %894
  %921 = icmp eq i32 %897, %900
  br i1 %921, label %922, label %928

922:                                              ; preds = %920
  store i32 0, ptr %896, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %8, i64 %895
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %895
  store i32 %924, ptr %925, align 4, !tbaa !5
  %926 = add nuw nsw i64 %895, 1
  %927 = icmp eq i64 %926, %650
  br i1 %927, label %935, label %894, !llvm.loop !972

928:                                              ; preds = %890, %920
  %929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

930:                                              ; preds = %903, %912
  %931 = phi ptr [ %919, %912 ], [ %896, %903 ]
  %932 = phi i32 [ %918, %912 ], [ 1, %903 ]
  %933 = load i32, ptr %931, align 4, !tbaa !5
  %934 = add nsw i32 %933, %932
  store i32 %934, ptr %931, align 4, !tbaa !5
  br label %935

935:                                              ; preds = %922, %930, %892, %883
  %936 = icmp eq i32 %884, %5
  br i1 %936, label %5477, label %798, !llvm.loop !973

937:                                              ; preds = %638
  %938 = getelementptr inbounds i32, ptr %3, i64 %19
  %939 = load i32, ptr %938, align 4, !tbaa !5
  %940 = icmp eq i32 %939, 0
  %941 = icmp sgt i32 %5, 0
  br i1 %940, label %951, label %942

942:                                              ; preds = %937
  br i1 %941, label %943, label %5477

943:                                              ; preds = %942
  %944 = icmp sgt i32 %13, 1
  %945 = icmp sgt i32 %13, 0
  %946 = add i32 %13, -2
  %947 = zext i32 %946 to i64
  %948 = zext i32 %13 to i64
  %949 = add nuw i32 %5, 1
  %950 = icmp eq i32 %13, 1
  br label %1092

951:                                              ; preds = %937
  br i1 %941, label %952, label %5477

952:                                              ; preds = %951
  %953 = icmp sgt i32 %13, 1
  %954 = icmp sgt i32 %13, 0
  %955 = add i32 %13, -2
  %956 = zext i32 %955 to i64
  %957 = zext i32 %13 to i64
  %958 = add nuw i32 %5, 1
  %959 = icmp eq i32 %13, 1
  br label %960

960:                                              ; preds = %952, %1090
  %961 = phi i32 [ 0, %952 ], [ %1042, %1090 ]
  %962 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %953, label %963, label %1032

963:                                              ; preds = %960, %1022
  %964 = phi i32 [ %1031, %1022 ], [ 0, %960 ]
  %965 = phi i64 [ %973, %1022 ], [ %957, %960 ]
  %966 = phi i64 [ %1030, %1022 ], [ %956, %960 ]
  %967 = phi i32 [ %1028, %1022 ], [ %962, %960 ]
  %968 = sub i32 %955, %964
  %969 = tail call i32 @llvm.smin.i32(i32 %968, i32 0)
  %970 = sub i32 %968, %969
  %971 = zext i32 %970 to i64
  %972 = add nuw nsw i64 %971, 1
  %973 = add nsw i64 %965, -1
  %974 = icmp ult i32 %970, 31
  br i1 %974, label %1010, label %975

975:                                              ; preds = %963
  %976 = and i64 %972, 8589934560
  %977 = sub i64 %966, %976
  br label %978

978:                                              ; preds = %978, %975
  %979 = phi i64 [ 0, %975 ], [ %1002, %978 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %998, %978 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %999, %978 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1000, %978 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1001, %978 ]
  %984 = sub i64 %966, %979
  %985 = getelementptr inbounds i32, ptr %9, i64 %984
  %986 = getelementptr inbounds i32, ptr %985, i64 -7
  %987 = load <8 x i32>, ptr %986, align 4, !tbaa !5
  %988 = shufflevector <8 x i32> %987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %989 = getelementptr inbounds i32, ptr %985, i64 -15
  %990 = load <8 x i32>, ptr %989, align 4, !tbaa !5
  %991 = shufflevector <8 x i32> %990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %992 = getelementptr inbounds i32, ptr %985, i64 -23
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %985, i64 -31
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = mul <8 x i32> %988, %980
  %999 = mul <8 x i32> %991, %981
  %1000 = mul <8 x i32> %994, %982
  %1001 = mul <8 x i32> %997, %983
  %1002 = add nuw i64 %979, 32
  %1003 = icmp eq i64 %1002, %976
  br i1 %1003, label %1004, label %978, !llvm.loop !974

1004:                                             ; preds = %978
  %1005 = mul <8 x i32> %999, %998
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = mul <8 x i32> %1001, %1006
  %1008 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1007)
  %1009 = icmp eq i64 %972, %976
  br i1 %1009, label %1022, label %1010

1010:                                             ; preds = %963, %1004
  %1011 = phi i64 [ %966, %963 ], [ %977, %1004 ]
  %1012 = phi i32 [ 1, %963 ], [ %1008, %1004 ]
  br label %1013

1013:                                             ; preds = %1010, %1013
  %1014 = phi i64 [ %1019, %1013 ], [ %1011, %1010 ]
  %1015 = phi i32 [ %1018, %1013 ], [ %1012, %1010 ]
  %1016 = getelementptr inbounds i32, ptr %9, i64 %1014
  %1017 = load i32, ptr %1016, align 4, !tbaa !5
  %1018 = mul nsw i32 %1017, %1015
  %1019 = add nsw i64 %1014, -1
  %1020 = trunc i64 %1014 to i32
  %1021 = icmp sgt i32 %1020, 0
  br i1 %1021, label %1013, label %1022, !llvm.loop !975

1022:                                             ; preds = %1013, %1004
  %1023 = phi i32 [ %1008, %1004 ], [ %1018, %1013 ]
  %1024 = and i64 %973, 4294967295
  %1025 = getelementptr inbounds i32, ptr %6, i64 %1024
  %1026 = load i32, ptr %1025, align 4, !tbaa !5
  %1027 = mul nsw i32 %1026, %1023
  %1028 = add nsw i32 %1027, %967
  %1029 = icmp sgt i64 %965, 2
  %1030 = add nsw i64 %966, -1
  %1031 = add i32 %964, 1
  br i1 %1029, label %963, label %1032, !llvm.loop !976

1032:                                             ; preds = %1022, %960
  %1033 = phi i32 [ %962, %960 ], [ %1028, %1022 ]
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds double, ptr %632, i64 %1034
  %1036 = load double, ptr %1035, align 8, !tbaa !18
  %1037 = fptosi double %1036 to i32
  %1038 = load i32, ptr %634, align 4, !tbaa !5
  %1039 = icmp sgt i32 %1038, %1037
  br i1 %1039, label %1040, label %1041

1040:                                             ; preds = %1032
  store i32 %1037, ptr %634, align 4, !tbaa !5
  br label %1041

1041:                                             ; preds = %1040, %1032
  %1042 = add nuw nsw i32 %961, 1
  br i1 %954, label %1043, label %1090

1043:                                             ; preds = %1041
  %1044 = load i32, ptr %4, align 4, !tbaa !5
  %1045 = load i32, ptr %12, align 4, !tbaa !5
  %1046 = add nsw i32 %1045, -1
  %1047 = icmp slt i32 %1044, %1046
  br i1 %1047, label %1067, label %1048

1048:                                             ; preds = %1043
  %1049 = icmp eq i32 %1044, %1046
  br i1 %1049, label %1050, label %1083

1050:                                             ; preds = %1048
  store i32 0, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1051, ptr %6, align 4, !tbaa !5
  br i1 %959, label %1090, label %1052

1052:                                             ; preds = %1050, %1077
  %1053 = phi i64 [ %1081, %1077 ], [ 1, %1050 ]
  %1054 = getelementptr inbounds i32, ptr %4, i64 %1053
  %1055 = load i32, ptr %1054, align 4, !tbaa !5
  %1056 = getelementptr inbounds i32, ptr %12, i64 %1053
  %1057 = load i32, ptr %1056, align 4, !tbaa !5
  %1058 = add nsw i32 %1057, -1
  %1059 = icmp slt i32 %1055, %1058
  br i1 %1059, label %1060, label %1075

1060:                                             ; preds = %1052
  br i1 %1047, label %1067, label %1061

1061:                                             ; preds = %1060
  %1062 = getelementptr inbounds i32, ptr %7, i64 %1053
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = getelementptr inbounds i32, ptr %6, i64 %1053
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = add nsw i32 %1065, %1063
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  br label %1085

1067:                                             ; preds = %1043, %1060
  %1068 = phi i32 [ %1055, %1060 ], [ %1044, %1043 ]
  %1069 = phi ptr [ %1054, %1060 ], [ %4, %1043 ]
  %1070 = phi i64 [ %1053, %1060 ], [ 0, %1043 ]
  %1071 = add nsw i32 %1068, 1
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1070
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1070
  br label %1085

1075:                                             ; preds = %1052
  %1076 = icmp eq i32 %1055, %1058
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1075
  store i32 0, ptr %1054, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %8, i64 %1053
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1053
  store i32 %1079, ptr %1080, align 4, !tbaa !5
  %1081 = add nuw nsw i64 %1053, 1
  %1082 = icmp eq i64 %1081, %957
  br i1 %1082, label %1090, label %1052, !llvm.loop !977

1083:                                             ; preds = %1048, %1075
  %1084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1085:                                             ; preds = %1061, %1067
  %1086 = phi ptr [ %1074, %1067 ], [ %1054, %1061 ]
  %1087 = phi i32 [ %1073, %1067 ], [ 1, %1061 ]
  %1088 = load i32, ptr %1086, align 4, !tbaa !5
  %1089 = add nsw i32 %1088, %1087
  store i32 %1089, ptr %1086, align 4, !tbaa !5
  br label %1090

1090:                                             ; preds = %1077, %1085, %1050, %1041
  %1091 = icmp eq i32 %1042, %5
  br i1 %1091, label %5477, label %960, !llvm.loop !978

1092:                                             ; preds = %943, %1229
  %1093 = phi i32 [ 0, %943 ], [ %1178, %1229 ]
  %1094 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %944, label %1095, label %1164

1095:                                             ; preds = %1092, %1154
  %1096 = phi i32 [ %1163, %1154 ], [ 0, %1092 ]
  %1097 = phi i64 [ %1105, %1154 ], [ %948, %1092 ]
  %1098 = phi i64 [ %1162, %1154 ], [ %947, %1092 ]
  %1099 = phi i32 [ %1160, %1154 ], [ %1094, %1092 ]
  %1100 = sub i32 %946, %1096
  %1101 = tail call i32 @llvm.smin.i32(i32 %1100, i32 0)
  %1102 = sub i32 %1100, %1101
  %1103 = zext i32 %1102 to i64
  %1104 = add nuw nsw i64 %1103, 1
  %1105 = add nsw i64 %1097, -1
  %1106 = icmp ult i32 %1102, 31
  br i1 %1106, label %1142, label %1107

1107:                                             ; preds = %1095
  %1108 = and i64 %1104, 8589934560
  %1109 = sub i64 %1098, %1108
  br label %1110

1110:                                             ; preds = %1110, %1107
  %1111 = phi i64 [ 0, %1107 ], [ %1134, %1110 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1130, %1110 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1131, %1110 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1132, %1110 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1133, %1110 ]
  %1116 = sub i64 %1098, %1111
  %1117 = getelementptr inbounds i32, ptr %11, i64 %1116
  %1118 = getelementptr inbounds i32, ptr %1117, i64 -7
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = getelementptr inbounds i32, ptr %1117, i64 -15
  %1122 = load <8 x i32>, ptr %1121, align 4, !tbaa !5
  %1123 = shufflevector <8 x i32> %1122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1124 = getelementptr inbounds i32, ptr %1117, i64 -23
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1117, i64 -31
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = mul <8 x i32> %1120, %1112
  %1131 = mul <8 x i32> %1123, %1113
  %1132 = mul <8 x i32> %1126, %1114
  %1133 = mul <8 x i32> %1129, %1115
  %1134 = add nuw i64 %1111, 32
  %1135 = icmp eq i64 %1134, %1108
  br i1 %1135, label %1136, label %1110, !llvm.loop !979

1136:                                             ; preds = %1110
  %1137 = mul <8 x i32> %1131, %1130
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = mul <8 x i32> %1133, %1138
  %1140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1139)
  %1141 = icmp eq i64 %1104, %1108
  br i1 %1141, label %1154, label %1142

1142:                                             ; preds = %1095, %1136
  %1143 = phi i64 [ %1098, %1095 ], [ %1109, %1136 ]
  %1144 = phi i32 [ 1, %1095 ], [ %1140, %1136 ]
  br label %1145

1145:                                             ; preds = %1142, %1145
  %1146 = phi i64 [ %1151, %1145 ], [ %1143, %1142 ]
  %1147 = phi i32 [ %1150, %1145 ], [ %1144, %1142 ]
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1147
  %1151 = add nsw i64 %1146, -1
  %1152 = trunc i64 %1146 to i32
  %1153 = icmp sgt i32 %1152, 0
  br i1 %1153, label %1145, label %1154, !llvm.loop !980

1154:                                             ; preds = %1145, %1136
  %1155 = phi i32 [ %1140, %1136 ], [ %1150, %1145 ]
  %1156 = and i64 %1105, 4294967295
  %1157 = getelementptr inbounds i32, ptr %6, i64 %1156
  %1158 = load i32, ptr %1157, align 4, !tbaa !5
  %1159 = mul nsw i32 %1158, %1155
  %1160 = add nsw i32 %1159, %1099
  %1161 = icmp sgt i64 %1097, 2
  %1162 = add nsw i64 %1098, -1
  %1163 = add i32 %1096, 1
  br i1 %1161, label %1095, label %1164, !llvm.loop !981

1164:                                             ; preds = %1154, %1092
  %1165 = phi i32 [ %1094, %1092 ], [ %1160, %1154 ]
  %1166 = icmp slt i32 %1165, %5
  br i1 %1166, label %1169, label %1167

1167:                                             ; preds = %1164
  %1168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1169:                                             ; preds = %1164
  %1170 = sext i32 %1165 to i64
  %1171 = getelementptr inbounds double, ptr %632, i64 %1170
  %1172 = load double, ptr %1171, align 8, !tbaa !18
  %1173 = fptosi double %1172 to i32
  %1174 = load i32, ptr %634, align 4, !tbaa !5
  %1175 = icmp sgt i32 %1174, %1173
  br i1 %1175, label %1176, label %1177

1176:                                             ; preds = %1169
  store i32 %1173, ptr %634, align 4, !tbaa !5
  br label %1177

1177:                                             ; preds = %1176, %1169
  %1178 = add nuw nsw i32 %1093, 1
  br i1 %945, label %1179, label %1229

1179:                                             ; preds = %1177
  %1180 = load i32, ptr %4, align 4, !tbaa !5
  %1181 = load i32, ptr %12, align 4, !tbaa !5
  %1182 = add nsw i32 %1181, -1
  %1183 = icmp slt i32 %1180, %1182
  br i1 %1183, label %1206, label %1184

1184:                                             ; preds = %1179
  %1185 = icmp eq i32 %1180, %1182
  br i1 %1185, label %1186, label %1222

1186:                                             ; preds = %1184
  store i32 0, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1187, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1229, label %1188

1188:                                             ; preds = %1186, %1216
  %1189 = phi i64 [ %1220, %1216 ], [ 1, %1186 ]
  %1190 = getelementptr inbounds i32, ptr %4, i64 %1189
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %12, i64 %1189
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = add nsw i32 %1193, -1
  %1195 = icmp slt i32 %1191, %1194
  br i1 %1195, label %1196, label %1214

1196:                                             ; preds = %1188
  br i1 %1183, label %1206, label %1197

1197:                                             ; preds = %1196
  %1198 = shl i64 %1189, 32
  %1199 = add i64 %1198, -4294967296
  %1200 = ashr exact i64 %1199, 32
  %1201 = getelementptr inbounds i32, ptr %7, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1189
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = add nsw i32 %1204, %1202
  store i32 %1205, ptr %1203, align 4, !tbaa !5
  br label %1224

1206:                                             ; preds = %1179, %1196
  %1207 = phi i32 [ %1191, %1196 ], [ %1180, %1179 ]
  %1208 = phi ptr [ %1190, %1196 ], [ %4, %1179 ]
  %1209 = phi i64 [ %1189, %1196 ], [ 0, %1179 ]
  %1210 = add nsw i32 %1207, 1
  store i32 %1210, ptr %1208, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1209
  %1212 = load i32, ptr %1211, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1209
  br label %1224

1214:                                             ; preds = %1188
  %1215 = icmp eq i32 %1191, %1194
  br i1 %1215, label %1216, label %1222

1216:                                             ; preds = %1214
  store i32 0, ptr %1190, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %8, i64 %1189
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1189
  store i32 %1218, ptr %1219, align 4, !tbaa !5
  %1220 = add nuw nsw i64 %1189, 1
  %1221 = icmp eq i64 %1220, %948
  br i1 %1221, label %1229, label %1188, !llvm.loop !982

1222:                                             ; preds = %1184, %1214
  %1223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1224:                                             ; preds = %1197, %1206
  %1225 = phi ptr [ %1213, %1206 ], [ %1190, %1197 ]
  %1226 = phi i32 [ %1212, %1206 ], [ 1, %1197 ]
  %1227 = load i32, ptr %1225, align 4, !tbaa !5
  %1228 = add nsw i32 %1227, %1226
  store i32 %1228, ptr %1225, align 4, !tbaa !5
  br label %1229

1229:                                             ; preds = %1216, %1224, %1186, %1177
  %1230 = icmp eq i32 %1178, %5
  br i1 %1230, label %5477, label %1092, !llvm.loop !983

1231:                                             ; preds = %638
  %1232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1486, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

1233:                                             ; preds = %18
  %1234 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1235 = load ptr, ptr %1234, align 8, !tbaa !9
  %1236 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1237 = load ptr, ptr %1236, align 8, !tbaa !9
  %1238 = load double, ptr %1235, align 8, !tbaa !18
  %1239 = fptosi double %1238 to i8
  store i8 %1239, ptr %1237, align 1, !tbaa !11
  %1240 = icmp eq i32 %13, 0
  br i1 %1240, label %1241, label %1246

1241:                                             ; preds = %1233
  %1242 = load double, ptr %1235, align 8, !tbaa !18
  %1243 = fptosi double %1242 to i8
  %1244 = icmp sgt i8 %1239, %1243
  br i1 %1244, label %1245, label %5477

1245:                                             ; preds = %1241
  store i8 %1243, ptr %1237, align 1, !tbaa !11
  br label %5477

1246:                                             ; preds = %1233
  switch i32 %1, label %1839 [
    i32 1, label %1247
    i32 0, label %1545
  ]

1247:                                             ; preds = %1246
  %1248 = getelementptr inbounds i32, ptr %3, i64 %19
  %1249 = load i32, ptr %1248, align 4, !tbaa !5
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp sgt i32 %5, 0
  br i1 %1250, label %1261, label %1252

1252:                                             ; preds = %1247
  br i1 %1251, label %1253, label %5477

1253:                                             ; preds = %1252
  %1254 = icmp sgt i32 %13, 1
  %1255 = icmp sgt i32 %13, 0
  %1256 = add i32 %13, -2
  %1257 = zext i32 %1256 to i64
  %1258 = zext i32 %13 to i64
  %1259 = add nuw i32 %5, 1
  %1260 = icmp eq i32 %13, 1
  br label %1406

1261:                                             ; preds = %1247
  br i1 %1251, label %1262, label %5477

1262:                                             ; preds = %1261
  %1263 = icmp sgt i32 %13, 1
  %1264 = icmp sgt i32 %13, 0
  %1265 = add i32 %13, -2
  %1266 = zext i32 %1265 to i64
  %1267 = zext i32 %13 to i64
  %1268 = add nuw i32 %5, 1
  %1269 = icmp eq i32 %13, 1
  br label %1270

1270:                                             ; preds = %1262, %1404
  %1271 = phi i32 [ 0, %1262 ], [ %1356, %1404 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1273, label %1342

1273:                                             ; preds = %1270, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1270 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1267, %1270 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1266, %1270 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1270 ]
  %1278 = sub i32 %1265, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !984

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !985

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !986

1342:                                             ; preds = %1332, %1270
  %1343 = phi i32 [ %1272, %1270 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds double, ptr %1235, i64 %1344
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = fptosi double %1348 to i8
  %1350 = fcmp fast ueq double %1346, 0.000000e+00
  br i1 %1350, label %1355, label %1351

1351:                                             ; preds = %1342
  %1352 = load i8, ptr %1237, align 1, !tbaa !11
  %1353 = icmp sgt i8 %1352, %1349
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  store i8 %1349, ptr %1237, align 1, !tbaa !11
  br label %1355

1355:                                             ; preds = %1351, %1354, %1342
  %1356 = add nuw nsw i32 %1271, 1
  br i1 %1264, label %1357, label %1404

1357:                                             ; preds = %1355
  %1358 = load i32, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %12, align 4, !tbaa !5
  %1360 = add nsw i32 %1359, -1
  %1361 = icmp slt i32 %1358, %1360
  br i1 %1361, label %1381, label %1362

1362:                                             ; preds = %1357
  %1363 = icmp eq i32 %1358, %1360
  br i1 %1363, label %1364, label %1397

1364:                                             ; preds = %1362
  store i32 0, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1365, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1404, label %1366

1366:                                             ; preds = %1364, %1391
  %1367 = phi i64 [ %1395, %1391 ], [ 1, %1364 ]
  %1368 = getelementptr inbounds i32, ptr %4, i64 %1367
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %12, i64 %1367
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = add nsw i32 %1371, -1
  %1373 = icmp slt i32 %1369, %1372
  br i1 %1373, label %1374, label %1389

1374:                                             ; preds = %1366
  br i1 %1361, label %1381, label %1375

1375:                                             ; preds = %1374
  %1376 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1367
  %1379 = load i32, ptr %1378, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1377
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  br label %1399

1381:                                             ; preds = %1357, %1374
  %1382 = phi i32 [ %1369, %1374 ], [ %1358, %1357 ]
  %1383 = phi ptr [ %1368, %1374 ], [ %4, %1357 ]
  %1384 = phi i64 [ %1367, %1374 ], [ 0, %1357 ]
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1384
  br label %1399

1389:                                             ; preds = %1366
  %1390 = icmp eq i32 %1369, %1372
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1389
  store i32 0, ptr %1368, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %8, i64 %1367
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1367
  store i32 %1393, ptr %1394, align 4, !tbaa !5
  %1395 = add nuw nsw i64 %1367, 1
  %1396 = icmp eq i64 %1395, %1267
  br i1 %1396, label %1404, label %1366, !llvm.loop !987

1397:                                             ; preds = %1362, %1389
  %1398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1399:                                             ; preds = %1375, %1381
  %1400 = phi ptr [ %1388, %1381 ], [ %1368, %1375 ]
  %1401 = phi i32 [ %1387, %1381 ], [ 1, %1375 ]
  %1402 = load i32, ptr %1400, align 4, !tbaa !5
  %1403 = add nsw i32 %1402, %1401
  store i32 %1403, ptr %1400, align 4, !tbaa !5
  br label %1404

1404:                                             ; preds = %1391, %1399, %1364, %1355
  %1405 = icmp eq i32 %1356, %5
  br i1 %1405, label %5477, label %1270, !llvm.loop !988

1406:                                             ; preds = %1253, %1543
  %1407 = phi i32 [ 0, %1253 ], [ %1492, %1543 ]
  %1408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1409, label %1478

1409:                                             ; preds = %1406, %1468
  %1410 = phi i32 [ %1477, %1468 ], [ 0, %1406 ]
  %1411 = phi i64 [ %1419, %1468 ], [ %1258, %1406 ]
  %1412 = phi i64 [ %1476, %1468 ], [ %1257, %1406 ]
  %1413 = phi i32 [ %1474, %1468 ], [ %1408, %1406 ]
  %1414 = sub i32 %1256, %1410
  %1415 = tail call i32 @llvm.smin.i32(i32 %1414, i32 0)
  %1416 = sub i32 %1414, %1415
  %1417 = zext i32 %1416 to i64
  %1418 = add nuw nsw i64 %1417, 1
  %1419 = add nsw i64 %1411, -1
  %1420 = icmp ult i32 %1416, 31
  br i1 %1420, label %1456, label %1421

1421:                                             ; preds = %1409
  %1422 = and i64 %1418, 8589934560
  %1423 = sub i64 %1412, %1422
  br label %1424

1424:                                             ; preds = %1424, %1421
  %1425 = phi i64 [ 0, %1421 ], [ %1448, %1424 ]
  %1426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1444, %1424 ]
  %1427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1445, %1424 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1446, %1424 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1447, %1424 ]
  %1430 = sub i64 %1412, %1425
  %1431 = getelementptr inbounds i32, ptr %11, i64 %1430
  %1432 = getelementptr inbounds i32, ptr %1431, i64 -7
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = getelementptr inbounds i32, ptr %1431, i64 -15
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1431, i64 -23
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1431, i64 -31
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = mul <8 x i32> %1434, %1426
  %1445 = mul <8 x i32> %1437, %1427
  %1446 = mul <8 x i32> %1440, %1428
  %1447 = mul <8 x i32> %1443, %1429
  %1448 = add nuw i64 %1425, 32
  %1449 = icmp eq i64 %1448, %1422
  br i1 %1449, label %1450, label %1424, !llvm.loop !989

1450:                                             ; preds = %1424
  %1451 = mul <8 x i32> %1445, %1444
  %1452 = mul <8 x i32> %1446, %1451
  %1453 = mul <8 x i32> %1447, %1452
  %1454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1453)
  %1455 = icmp eq i64 %1418, %1422
  br i1 %1455, label %1468, label %1456

1456:                                             ; preds = %1409, %1450
  %1457 = phi i64 [ %1412, %1409 ], [ %1423, %1450 ]
  %1458 = phi i32 [ 1, %1409 ], [ %1454, %1450 ]
  br label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1465, %1459 ], [ %1457, %1456 ]
  %1461 = phi i32 [ %1464, %1459 ], [ %1458, %1456 ]
  %1462 = getelementptr inbounds i32, ptr %11, i64 %1460
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1461
  %1465 = add nsw i64 %1460, -1
  %1466 = trunc i64 %1460 to i32
  %1467 = icmp sgt i32 %1466, 0
  br i1 %1467, label %1459, label %1468, !llvm.loop !990

1468:                                             ; preds = %1459, %1450
  %1469 = phi i32 [ %1454, %1450 ], [ %1464, %1459 ]
  %1470 = and i64 %1419, 4294967295
  %1471 = getelementptr inbounds i32, ptr %6, i64 %1470
  %1472 = load i32, ptr %1471, align 4, !tbaa !5
  %1473 = mul nsw i32 %1472, %1469
  %1474 = add nsw i32 %1473, %1413
  %1475 = icmp sgt i64 %1411, 2
  %1476 = add nsw i64 %1412, -1
  %1477 = add i32 %1410, 1
  br i1 %1475, label %1409, label %1478, !llvm.loop !991

1478:                                             ; preds = %1468, %1406
  %1479 = phi i32 [ %1408, %1406 ], [ %1474, %1468 ]
  %1480 = icmp slt i32 %1479, %5
  br i1 %1480, label %1483, label %1481

1481:                                             ; preds = %1478
  %1482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1483:                                             ; preds = %1478
  %1484 = sext i32 %1479 to i64
  %1485 = getelementptr inbounds double, ptr %1235, i64 %1484
  %1486 = load double, ptr %1485, align 8, !tbaa !18
  %1487 = fptosi double %1486 to i8
  %1488 = load i8, ptr %1237, align 1, !tbaa !11
  %1489 = icmp sgt i8 %1488, %1487
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1483
  store i8 %1487, ptr %1237, align 1, !tbaa !11
  br label %1491

1491:                                             ; preds = %1483, %1490
  %1492 = add nuw nsw i32 %1407, 1
  br i1 %1255, label %1493, label %1543

1493:                                             ; preds = %1491
  %1494 = load i32, ptr %4, align 4, !tbaa !5
  %1495 = load i32, ptr %12, align 4, !tbaa !5
  %1496 = add nsw i32 %1495, -1
  %1497 = icmp slt i32 %1494, %1496
  br i1 %1497, label %1520, label %1498

1498:                                             ; preds = %1493
  %1499 = icmp eq i32 %1494, %1496
  br i1 %1499, label %1500, label %1536

1500:                                             ; preds = %1498
  store i32 0, ptr %4, align 4, !tbaa !5
  %1501 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1501, ptr %6, align 4, !tbaa !5
  br i1 %1260, label %1543, label %1502

1502:                                             ; preds = %1500, %1530
  %1503 = phi i64 [ %1534, %1530 ], [ 1, %1500 ]
  %1504 = getelementptr inbounds i32, ptr %4, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %12, i64 %1503
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, -1
  %1509 = icmp slt i32 %1505, %1508
  br i1 %1509, label %1510, label %1528

1510:                                             ; preds = %1502
  br i1 %1497, label %1520, label %1511

1511:                                             ; preds = %1510
  %1512 = shl i64 %1503, 32
  %1513 = add i64 %1512, -4294967296
  %1514 = ashr exact i64 %1513, 32
  %1515 = getelementptr inbounds i32, ptr %7, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !5
  %1517 = getelementptr inbounds i32, ptr %6, i64 %1503
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = add nsw i32 %1518, %1516
  store i32 %1519, ptr %1517, align 4, !tbaa !5
  br label %1538

1520:                                             ; preds = %1493, %1510
  %1521 = phi i32 [ %1505, %1510 ], [ %1494, %1493 ]
  %1522 = phi ptr [ %1504, %1510 ], [ %4, %1493 ]
  %1523 = phi i64 [ %1503, %1510 ], [ 0, %1493 ]
  %1524 = add nsw i32 %1521, 1
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1523
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1523
  br label %1538

1528:                                             ; preds = %1502
  %1529 = icmp eq i32 %1505, %1508
  br i1 %1529, label %1530, label %1536

1530:                                             ; preds = %1528
  store i32 0, ptr %1504, align 4, !tbaa !5
  %1531 = getelementptr inbounds i32, ptr %8, i64 %1503
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %6, i64 %1503
  store i32 %1532, ptr %1533, align 4, !tbaa !5
  %1534 = add nuw nsw i64 %1503, 1
  %1535 = icmp eq i64 %1534, %1258
  br i1 %1535, label %1543, label %1502, !llvm.loop !992

1536:                                             ; preds = %1498, %1528
  %1537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1538:                                             ; preds = %1511, %1520
  %1539 = phi ptr [ %1527, %1520 ], [ %1504, %1511 ]
  %1540 = phi i32 [ %1526, %1520 ], [ 1, %1511 ]
  %1541 = load i32, ptr %1539, align 4, !tbaa !5
  %1542 = add nsw i32 %1541, %1540
  store i32 %1542, ptr %1539, align 4, !tbaa !5
  br label %1543

1543:                                             ; preds = %1530, %1538, %1500, %1491
  %1544 = icmp eq i32 %1492, %5
  br i1 %1544, label %5477, label %1406, !llvm.loop !993

1545:                                             ; preds = %1246
  %1546 = getelementptr inbounds i32, ptr %3, i64 %19
  %1547 = load i32, ptr %1546, align 4, !tbaa !5
  %1548 = icmp eq i32 %1547, 0
  %1549 = icmp sgt i32 %5, 0
  br i1 %1548, label %1559, label %1550

1550:                                             ; preds = %1545
  br i1 %1549, label %1551, label %5477

1551:                                             ; preds = %1550
  %1552 = icmp sgt i32 %13, 1
  %1553 = icmp sgt i32 %13, 0
  %1554 = add i32 %13, -2
  %1555 = zext i32 %1554 to i64
  %1556 = zext i32 %13 to i64
  %1557 = add nuw i32 %5, 1
  %1558 = icmp eq i32 %13, 1
  br label %1700

1559:                                             ; preds = %1545
  br i1 %1549, label %1560, label %5477

1560:                                             ; preds = %1559
  %1561 = icmp sgt i32 %13, 1
  %1562 = icmp sgt i32 %13, 0
  %1563 = add i32 %13, -2
  %1564 = zext i32 %1563 to i64
  %1565 = zext i32 %13 to i64
  %1566 = add nuw i32 %5, 1
  %1567 = icmp eq i32 %13, 1
  br label %1568

1568:                                             ; preds = %1560, %1698
  %1569 = phi i32 [ 0, %1560 ], [ %1650, %1698 ]
  %1570 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1561, label %1571, label %1640

1571:                                             ; preds = %1568, %1630
  %1572 = phi i32 [ %1639, %1630 ], [ 0, %1568 ]
  %1573 = phi i64 [ %1581, %1630 ], [ %1565, %1568 ]
  %1574 = phi i64 [ %1638, %1630 ], [ %1564, %1568 ]
  %1575 = phi i32 [ %1636, %1630 ], [ %1570, %1568 ]
  %1576 = sub i32 %1563, %1572
  %1577 = tail call i32 @llvm.smin.i32(i32 %1576, i32 0)
  %1578 = sub i32 %1576, %1577
  %1579 = zext i32 %1578 to i64
  %1580 = add nuw nsw i64 %1579, 1
  %1581 = add nsw i64 %1573, -1
  %1582 = icmp ult i32 %1578, 31
  br i1 %1582, label %1618, label %1583

1583:                                             ; preds = %1571
  %1584 = and i64 %1580, 8589934560
  %1585 = sub i64 %1574, %1584
  br label %1586

1586:                                             ; preds = %1586, %1583
  %1587 = phi i64 [ 0, %1583 ], [ %1610, %1586 ]
  %1588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1606, %1586 ]
  %1589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1607, %1586 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1608, %1586 ]
  %1591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1609, %1586 ]
  %1592 = sub i64 %1574, %1587
  %1593 = getelementptr inbounds i32, ptr %9, i64 %1592
  %1594 = getelementptr inbounds i32, ptr %1593, i64 -7
  %1595 = load <8 x i32>, ptr %1594, align 4, !tbaa !5
  %1596 = shufflevector <8 x i32> %1595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1597 = getelementptr inbounds i32, ptr %1593, i64 -15
  %1598 = load <8 x i32>, ptr %1597, align 4, !tbaa !5
  %1599 = shufflevector <8 x i32> %1598, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1600 = getelementptr inbounds i32, ptr %1593, i64 -23
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1593, i64 -31
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = mul <8 x i32> %1596, %1588
  %1607 = mul <8 x i32> %1599, %1589
  %1608 = mul <8 x i32> %1602, %1590
  %1609 = mul <8 x i32> %1605, %1591
  %1610 = add nuw i64 %1587, 32
  %1611 = icmp eq i64 %1610, %1584
  br i1 %1611, label %1612, label %1586, !llvm.loop !994

1612:                                             ; preds = %1586
  %1613 = mul <8 x i32> %1607, %1606
  %1614 = mul <8 x i32> %1608, %1613
  %1615 = mul <8 x i32> %1609, %1614
  %1616 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1615)
  %1617 = icmp eq i64 %1580, %1584
  br i1 %1617, label %1630, label %1618

1618:                                             ; preds = %1571, %1612
  %1619 = phi i64 [ %1574, %1571 ], [ %1585, %1612 ]
  %1620 = phi i32 [ 1, %1571 ], [ %1616, %1612 ]
  br label %1621

1621:                                             ; preds = %1618, %1621
  %1622 = phi i64 [ %1627, %1621 ], [ %1619, %1618 ]
  %1623 = phi i32 [ %1626, %1621 ], [ %1620, %1618 ]
  %1624 = getelementptr inbounds i32, ptr %9, i64 %1622
  %1625 = load i32, ptr %1624, align 4, !tbaa !5
  %1626 = mul nsw i32 %1625, %1623
  %1627 = add nsw i64 %1622, -1
  %1628 = trunc i64 %1622 to i32
  %1629 = icmp sgt i32 %1628, 0
  br i1 %1629, label %1621, label %1630, !llvm.loop !995

1630:                                             ; preds = %1621, %1612
  %1631 = phi i32 [ %1616, %1612 ], [ %1626, %1621 ]
  %1632 = and i64 %1581, 4294967295
  %1633 = getelementptr inbounds i32, ptr %6, i64 %1632
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1631
  %1636 = add nsw i32 %1635, %1575
  %1637 = icmp sgt i64 %1573, 2
  %1638 = add nsw i64 %1574, -1
  %1639 = add i32 %1572, 1
  br i1 %1637, label %1571, label %1640, !llvm.loop !996

1640:                                             ; preds = %1630, %1568
  %1641 = phi i32 [ %1570, %1568 ], [ %1636, %1630 ]
  %1642 = sext i32 %1641 to i64
  %1643 = getelementptr inbounds double, ptr %1235, i64 %1642
  %1644 = load double, ptr %1643, align 8, !tbaa !18
  %1645 = fptosi double %1644 to i8
  %1646 = load i8, ptr %1237, align 1, !tbaa !11
  %1647 = icmp sgt i8 %1646, %1645
  br i1 %1647, label %1648, label %1649

1648:                                             ; preds = %1640
  store i8 %1645, ptr %1237, align 1, !tbaa !11
  br label %1649

1649:                                             ; preds = %1648, %1640
  %1650 = add nuw nsw i32 %1569, 1
  br i1 %1562, label %1651, label %1698

1651:                                             ; preds = %1649
  %1652 = load i32, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %12, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, -1
  %1655 = icmp slt i32 %1652, %1654
  br i1 %1655, label %1675, label %1656

1656:                                             ; preds = %1651
  %1657 = icmp eq i32 %1652, %1654
  br i1 %1657, label %1658, label %1691

1658:                                             ; preds = %1656
  store i32 0, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1659, ptr %6, align 4, !tbaa !5
  br i1 %1567, label %1698, label %1660

1660:                                             ; preds = %1658, %1685
  %1661 = phi i64 [ %1689, %1685 ], [ 1, %1658 ]
  %1662 = getelementptr inbounds i32, ptr %4, i64 %1661
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %12, i64 %1661
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1663, %1666
  br i1 %1667, label %1668, label %1683

1668:                                             ; preds = %1660
  br i1 %1655, label %1675, label %1669

1669:                                             ; preds = %1668
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1661
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1661
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1671
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  br label %1693

1675:                                             ; preds = %1651, %1668
  %1676 = phi i32 [ %1663, %1668 ], [ %1652, %1651 ]
  %1677 = phi ptr [ %1662, %1668 ], [ %4, %1651 ]
  %1678 = phi i64 [ %1661, %1668 ], [ 0, %1651 ]
  %1679 = add nsw i32 %1676, 1
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %7, i64 %1678
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1678
  br label %1693

1683:                                             ; preds = %1660
  %1684 = icmp eq i32 %1663, %1666
  br i1 %1684, label %1685, label %1691

1685:                                             ; preds = %1683
  store i32 0, ptr %1662, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %8, i64 %1661
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1661
  store i32 %1687, ptr %1688, align 4, !tbaa !5
  %1689 = add nuw nsw i64 %1661, 1
  %1690 = icmp eq i64 %1689, %1565
  br i1 %1690, label %1698, label %1660, !llvm.loop !997

1691:                                             ; preds = %1656, %1683
  %1692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1693:                                             ; preds = %1669, %1675
  %1694 = phi ptr [ %1682, %1675 ], [ %1662, %1669 ]
  %1695 = phi i32 [ %1681, %1675 ], [ 1, %1669 ]
  %1696 = load i32, ptr %1694, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, %1695
  store i32 %1697, ptr %1694, align 4, !tbaa !5
  br label %1698

1698:                                             ; preds = %1685, %1693, %1658, %1649
  %1699 = icmp eq i32 %1650, %5
  br i1 %1699, label %5477, label %1568, !llvm.loop !998

1700:                                             ; preds = %1551, %1837
  %1701 = phi i32 [ 0, %1551 ], [ %1786, %1837 ]
  %1702 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1703, label %1772

1703:                                             ; preds = %1700, %1762
  %1704 = phi i32 [ %1771, %1762 ], [ 0, %1700 ]
  %1705 = phi i64 [ %1713, %1762 ], [ %1556, %1700 ]
  %1706 = phi i64 [ %1770, %1762 ], [ %1555, %1700 ]
  %1707 = phi i32 [ %1768, %1762 ], [ %1702, %1700 ]
  %1708 = sub i32 %1554, %1704
  %1709 = tail call i32 @llvm.smin.i32(i32 %1708, i32 0)
  %1710 = sub i32 %1708, %1709
  %1711 = zext i32 %1710 to i64
  %1712 = add nuw nsw i64 %1711, 1
  %1713 = add nsw i64 %1705, -1
  %1714 = icmp ult i32 %1710, 31
  br i1 %1714, label %1750, label %1715

1715:                                             ; preds = %1703
  %1716 = and i64 %1712, 8589934560
  %1717 = sub i64 %1706, %1716
  br label %1718

1718:                                             ; preds = %1718, %1715
  %1719 = phi i64 [ 0, %1715 ], [ %1742, %1718 ]
  %1720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1738, %1718 ]
  %1721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1739, %1718 ]
  %1722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1740, %1718 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1741, %1718 ]
  %1724 = sub i64 %1706, %1719
  %1725 = getelementptr inbounds i32, ptr %11, i64 %1724
  %1726 = getelementptr inbounds i32, ptr %1725, i64 -7
  %1727 = load <8 x i32>, ptr %1726, align 4, !tbaa !5
  %1728 = shufflevector <8 x i32> %1727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1729 = getelementptr inbounds i32, ptr %1725, i64 -15
  %1730 = load <8 x i32>, ptr %1729, align 4, !tbaa !5
  %1731 = shufflevector <8 x i32> %1730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1732 = getelementptr inbounds i32, ptr %1725, i64 -23
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1725, i64 -31
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = mul <8 x i32> %1728, %1720
  %1739 = mul <8 x i32> %1731, %1721
  %1740 = mul <8 x i32> %1734, %1722
  %1741 = mul <8 x i32> %1737, %1723
  %1742 = add nuw i64 %1719, 32
  %1743 = icmp eq i64 %1742, %1716
  br i1 %1743, label %1744, label %1718, !llvm.loop !999

1744:                                             ; preds = %1718
  %1745 = mul <8 x i32> %1739, %1738
  %1746 = mul <8 x i32> %1740, %1745
  %1747 = mul <8 x i32> %1741, %1746
  %1748 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1747)
  %1749 = icmp eq i64 %1712, %1716
  br i1 %1749, label %1762, label %1750

1750:                                             ; preds = %1703, %1744
  %1751 = phi i64 [ %1706, %1703 ], [ %1717, %1744 ]
  %1752 = phi i32 [ 1, %1703 ], [ %1748, %1744 ]
  br label %1753

1753:                                             ; preds = %1750, %1753
  %1754 = phi i64 [ %1759, %1753 ], [ %1751, %1750 ]
  %1755 = phi i32 [ %1758, %1753 ], [ %1752, %1750 ]
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1754
  %1757 = load i32, ptr %1756, align 4, !tbaa !5
  %1758 = mul nsw i32 %1757, %1755
  %1759 = add nsw i64 %1754, -1
  %1760 = trunc i64 %1754 to i32
  %1761 = icmp sgt i32 %1760, 0
  br i1 %1761, label %1753, label %1762, !llvm.loop !1000

1762:                                             ; preds = %1753, %1744
  %1763 = phi i32 [ %1748, %1744 ], [ %1758, %1753 ]
  %1764 = and i64 %1713, 4294967295
  %1765 = getelementptr inbounds i32, ptr %6, i64 %1764
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1763
  %1768 = add nsw i32 %1767, %1707
  %1769 = icmp sgt i64 %1705, 2
  %1770 = add nsw i64 %1706, -1
  %1771 = add i32 %1704, 1
  br i1 %1769, label %1703, label %1772, !llvm.loop !1001

1772:                                             ; preds = %1762, %1700
  %1773 = phi i32 [ %1702, %1700 ], [ %1768, %1762 ]
  %1774 = icmp slt i32 %1773, %5
  br i1 %1774, label %1777, label %1775

1775:                                             ; preds = %1772
  %1776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1777:                                             ; preds = %1772
  %1778 = sext i32 %1773 to i64
  %1779 = getelementptr inbounds double, ptr %1235, i64 %1778
  %1780 = load double, ptr %1779, align 8, !tbaa !18
  %1781 = fptosi double %1780 to i8
  %1782 = load i8, ptr %1237, align 1, !tbaa !11
  %1783 = icmp sgt i8 %1782, %1781
  br i1 %1783, label %1784, label %1785

1784:                                             ; preds = %1777
  store i8 %1781, ptr %1237, align 1, !tbaa !11
  br label %1785

1785:                                             ; preds = %1784, %1777
  %1786 = add nuw nsw i32 %1701, 1
  br i1 %1553, label %1787, label %1837

1787:                                             ; preds = %1785
  %1788 = load i32, ptr %4, align 4, !tbaa !5
  %1789 = load i32, ptr %12, align 4, !tbaa !5
  %1790 = add nsw i32 %1789, -1
  %1791 = icmp slt i32 %1788, %1790
  br i1 %1791, label %1814, label %1792

1792:                                             ; preds = %1787
  %1793 = icmp eq i32 %1788, %1790
  br i1 %1793, label %1794, label %1830

1794:                                             ; preds = %1792
  store i32 0, ptr %4, align 4, !tbaa !5
  %1795 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1795, ptr %6, align 4, !tbaa !5
  br i1 %1558, label %1837, label %1796

1796:                                             ; preds = %1794, %1824
  %1797 = phi i64 [ %1828, %1824 ], [ 1, %1794 ]
  %1798 = getelementptr inbounds i32, ptr %4, i64 %1797
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %12, i64 %1797
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1799, %1802
  br i1 %1803, label %1804, label %1822

1804:                                             ; preds = %1796
  br i1 %1791, label %1814, label %1805

1805:                                             ; preds = %1804
  %1806 = shl i64 %1797, 32
  %1807 = add i64 %1806, -4294967296
  %1808 = ashr exact i64 %1807, 32
  %1809 = getelementptr inbounds i32, ptr %7, i64 %1808
  %1810 = load i32, ptr %1809, align 4, !tbaa !5
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1797
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, %1810
  store i32 %1813, ptr %1811, align 4, !tbaa !5
  br label %1832

1814:                                             ; preds = %1787, %1804
  %1815 = phi i32 [ %1799, %1804 ], [ %1788, %1787 ]
  %1816 = phi ptr [ %1798, %1804 ], [ %4, %1787 ]
  %1817 = phi i64 [ %1797, %1804 ], [ 0, %1787 ]
  %1818 = add nsw i32 %1815, 1
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %7, i64 %1817
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = getelementptr inbounds i32, ptr %6, i64 %1817
  br label %1832

1822:                                             ; preds = %1796
  %1823 = icmp eq i32 %1799, %1802
  br i1 %1823, label %1824, label %1830

1824:                                             ; preds = %1822
  store i32 0, ptr %1798, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %8, i64 %1797
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1797
  store i32 %1826, ptr %1827, align 4, !tbaa !5
  %1828 = add nuw nsw i64 %1797, 1
  %1829 = icmp eq i64 %1828, %1556
  br i1 %1829, label %1837, label %1796, !llvm.loop !1002

1830:                                             ; preds = %1792, %1822
  %1831 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1832:                                             ; preds = %1805, %1814
  %1833 = phi ptr [ %1821, %1814 ], [ %1798, %1805 ]
  %1834 = phi i32 [ %1820, %1814 ], [ 1, %1805 ]
  %1835 = load i32, ptr %1833, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1834
  store i32 %1836, ptr %1833, align 4, !tbaa !5
  br label %1837

1837:                                             ; preds = %1824, %1832, %1794, %1785
  %1838 = icmp eq i32 %1786, %5
  br i1 %1838, label %5477, label %1700, !llvm.loop !1003

1839:                                             ; preds = %1246
  %1840 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1490, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

1841:                                             ; preds = %18
  %1842 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1843 = load ptr, ptr %1842, align 8, !tbaa !9
  %1844 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1845 = load ptr, ptr %1844, align 8, !tbaa !9
  %1846 = load double, ptr %1843, align 8, !tbaa !18
  %1847 = fptosi double %1846 to i16
  store i16 %1847, ptr %1845, align 2, !tbaa !78
  %1848 = icmp eq i32 %13, 0
  br i1 %1848, label %5477, label %1849

1849:                                             ; preds = %1841
  switch i32 %1, label %2446 [
    i32 1, label %1850
    i32 0, label %2150
  ]

1850:                                             ; preds = %1849
  %1851 = getelementptr inbounds i32, ptr %3, i64 %19
  %1852 = load i32, ptr %1851, align 4, !tbaa !5
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp sgt i32 %5, 0
  br i1 %1853, label %1864, label %1855

1855:                                             ; preds = %1850
  br i1 %1854, label %1856, label %5477

1856:                                             ; preds = %1855
  %1857 = icmp sgt i32 %13, 1
  %1858 = icmp sgt i32 %13, 0
  %1859 = add i32 %13, -2
  %1860 = zext i32 %1859 to i64
  %1861 = zext i32 %13 to i64
  %1862 = add nuw i32 %5, 1
  %1863 = icmp eq i32 %13, 1
  br label %2010

1864:                                             ; preds = %1850
  br i1 %1854, label %1865, label %5477

1865:                                             ; preds = %1864
  %1866 = icmp sgt i32 %13, 1
  %1867 = icmp sgt i32 %13, 0
  %1868 = add i32 %13, -2
  %1869 = zext i32 %1868 to i64
  %1870 = zext i32 %13 to i64
  %1871 = add nuw i32 %5, 1
  %1872 = icmp eq i32 %13, 1
  br label %1873

1873:                                             ; preds = %1865, %2008
  %1874 = phi i16 [ %1847, %1865 ], [ %1959, %2008 ]
  %1875 = phi i32 [ 0, %1865 ], [ %1960, %2008 ]
  %1876 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1866, label %1877, label %1946

1877:                                             ; preds = %1873, %1936
  %1878 = phi i32 [ %1945, %1936 ], [ 0, %1873 ]
  %1879 = phi i64 [ %1887, %1936 ], [ %1870, %1873 ]
  %1880 = phi i64 [ %1944, %1936 ], [ %1869, %1873 ]
  %1881 = phi i32 [ %1942, %1936 ], [ %1876, %1873 ]
  %1882 = sub i32 %1868, %1878
  %1883 = tail call i32 @llvm.smin.i32(i32 %1882, i32 0)
  %1884 = sub i32 %1882, %1883
  %1885 = zext i32 %1884 to i64
  %1886 = add nuw nsw i64 %1885, 1
  %1887 = add nsw i64 %1879, -1
  %1888 = icmp ult i32 %1884, 31
  br i1 %1888, label %1924, label %1889

1889:                                             ; preds = %1877
  %1890 = and i64 %1886, 8589934560
  %1891 = sub i64 %1880, %1890
  br label %1892

1892:                                             ; preds = %1892, %1889
  %1893 = phi i64 [ 0, %1889 ], [ %1916, %1892 ]
  %1894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1912, %1892 ]
  %1895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1913, %1892 ]
  %1896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1914, %1892 ]
  %1897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1915, %1892 ]
  %1898 = sub i64 %1880, %1893
  %1899 = getelementptr inbounds i32, ptr %9, i64 %1898
  %1900 = getelementptr inbounds i32, ptr %1899, i64 -7
  %1901 = load <8 x i32>, ptr %1900, align 4, !tbaa !5
  %1902 = shufflevector <8 x i32> %1901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1903 = getelementptr inbounds i32, ptr %1899, i64 -15
  %1904 = load <8 x i32>, ptr %1903, align 4, !tbaa !5
  %1905 = shufflevector <8 x i32> %1904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1906 = getelementptr inbounds i32, ptr %1899, i64 -23
  %1907 = load <8 x i32>, ptr %1906, align 4, !tbaa !5
  %1908 = shufflevector <8 x i32> %1907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1909 = getelementptr inbounds i32, ptr %1899, i64 -31
  %1910 = load <8 x i32>, ptr %1909, align 4, !tbaa !5
  %1911 = shufflevector <8 x i32> %1910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1912 = mul <8 x i32> %1902, %1894
  %1913 = mul <8 x i32> %1905, %1895
  %1914 = mul <8 x i32> %1908, %1896
  %1915 = mul <8 x i32> %1911, %1897
  %1916 = add nuw i64 %1893, 32
  %1917 = icmp eq i64 %1916, %1890
  br i1 %1917, label %1918, label %1892, !llvm.loop !1004

1918:                                             ; preds = %1892
  %1919 = mul <8 x i32> %1913, %1912
  %1920 = mul <8 x i32> %1914, %1919
  %1921 = mul <8 x i32> %1915, %1920
  %1922 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1921)
  %1923 = icmp eq i64 %1886, %1890
  br i1 %1923, label %1936, label %1924

1924:                                             ; preds = %1877, %1918
  %1925 = phi i64 [ %1880, %1877 ], [ %1891, %1918 ]
  %1926 = phi i32 [ 1, %1877 ], [ %1922, %1918 ]
  br label %1927

1927:                                             ; preds = %1924, %1927
  %1928 = phi i64 [ %1933, %1927 ], [ %1925, %1924 ]
  %1929 = phi i32 [ %1932, %1927 ], [ %1926, %1924 ]
  %1930 = getelementptr inbounds i32, ptr %9, i64 %1928
  %1931 = load i32, ptr %1930, align 4, !tbaa !5
  %1932 = mul nsw i32 %1931, %1929
  %1933 = add nsw i64 %1928, -1
  %1934 = trunc i64 %1928 to i32
  %1935 = icmp sgt i32 %1934, 0
  br i1 %1935, label %1927, label %1936, !llvm.loop !1005

1936:                                             ; preds = %1927, %1918
  %1937 = phi i32 [ %1922, %1918 ], [ %1932, %1927 ]
  %1938 = and i64 %1887, 4294967295
  %1939 = getelementptr inbounds i32, ptr %6, i64 %1938
  %1940 = load i32, ptr %1939, align 4, !tbaa !5
  %1941 = mul nsw i32 %1940, %1937
  %1942 = add nsw i32 %1941, %1881
  %1943 = icmp sgt i64 %1879, 2
  %1944 = add nsw i64 %1880, -1
  %1945 = add i32 %1878, 1
  br i1 %1943, label %1877, label %1946, !llvm.loop !1006

1946:                                             ; preds = %1936, %1873
  %1947 = phi i32 [ %1876, %1873 ], [ %1942, %1936 ]
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds double, ptr %2, i64 %1948
  %1950 = load double, ptr %1949, align 8, !tbaa !18
  %1951 = getelementptr inbounds double, ptr %1843, i64 %1948
  %1952 = load double, ptr %1951, align 8, !tbaa !18
  %1953 = fptosi double %1952 to i16
  %1954 = fcmp fast one double %1950, 0.000000e+00
  %1955 = icmp sgt i16 %1874, %1953
  %1956 = select i1 %1954, i1 %1955, i1 false
  br i1 %1956, label %1957, label %1958

1957:                                             ; preds = %1946
  store i16 %1953, ptr %1845, align 2, !tbaa !78
  br label %1958

1958:                                             ; preds = %1957, %1946
  %1959 = phi i16 [ %1953, %1957 ], [ %1874, %1946 ]
  %1960 = add nuw nsw i32 %1875, 1
  br i1 %1867, label %1961, label %2008

1961:                                             ; preds = %1958
  %1962 = load i32, ptr %4, align 4, !tbaa !5
  %1963 = load i32, ptr %12, align 4, !tbaa !5
  %1964 = add nsw i32 %1963, -1
  %1965 = icmp slt i32 %1962, %1964
  br i1 %1965, label %1985, label %1966

1966:                                             ; preds = %1961
  %1967 = icmp eq i32 %1962, %1964
  br i1 %1967, label %1968, label %2001

1968:                                             ; preds = %1966
  store i32 0, ptr %4, align 4, !tbaa !5
  %1969 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1969, ptr %6, align 4, !tbaa !5
  br i1 %1872, label %2008, label %1970

1970:                                             ; preds = %1968, %1995
  %1971 = phi i64 [ %1999, %1995 ], [ 1, %1968 ]
  %1972 = getelementptr inbounds i32, ptr %4, i64 %1971
  %1973 = load i32, ptr %1972, align 4, !tbaa !5
  %1974 = getelementptr inbounds i32, ptr %12, i64 %1971
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1973, %1976
  br i1 %1977, label %1978, label %1993

1978:                                             ; preds = %1970
  br i1 %1965, label %1985, label %1979

1979:                                             ; preds = %1978
  %1980 = getelementptr inbounds i32, ptr %7, i64 %1971
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %6, i64 %1971
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = add nsw i32 %1983, %1981
  store i32 %1984, ptr %1982, align 4, !tbaa !5
  br label %2003

1985:                                             ; preds = %1961, %1978
  %1986 = phi i32 [ %1973, %1978 ], [ %1962, %1961 ]
  %1987 = phi ptr [ %1972, %1978 ], [ %4, %1961 ]
  %1988 = phi i64 [ %1971, %1978 ], [ 0, %1961 ]
  %1989 = add nsw i32 %1986, 1
  store i32 %1989, ptr %1987, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %7, i64 %1988
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %6, i64 %1988
  br label %2003

1993:                                             ; preds = %1970
  %1994 = icmp eq i32 %1973, %1976
  br i1 %1994, label %1995, label %2001

1995:                                             ; preds = %1993
  store i32 0, ptr %1972, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %8, i64 %1971
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1971
  store i32 %1997, ptr %1998, align 4, !tbaa !5
  %1999 = add nuw nsw i64 %1971, 1
  %2000 = icmp eq i64 %1999, %1870
  br i1 %2000, label %2008, label %1970, !llvm.loop !1007

2001:                                             ; preds = %1966, %1993
  %2002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2003:                                             ; preds = %1979, %1985
  %2004 = phi ptr [ %1992, %1985 ], [ %1972, %1979 ]
  %2005 = phi i32 [ %1991, %1985 ], [ 1, %1979 ]
  %2006 = load i32, ptr %2004, align 4, !tbaa !5
  %2007 = add nsw i32 %2006, %2005
  store i32 %2007, ptr %2004, align 4, !tbaa !5
  br label %2008

2008:                                             ; preds = %1995, %2003, %1968, %1958
  %2009 = icmp eq i32 %1960, %5
  br i1 %2009, label %5477, label %1873, !llvm.loop !1008

2010:                                             ; preds = %1856, %2148
  %2011 = phi i16 [ %1847, %1856 ], [ %2096, %2148 ]
  %2012 = phi i32 [ 0, %1856 ], [ %2097, %2148 ]
  %2013 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1857, label %2014, label %2083

2014:                                             ; preds = %2010, %2073
  %2015 = phi i32 [ %2082, %2073 ], [ 0, %2010 ]
  %2016 = phi i64 [ %2024, %2073 ], [ %1861, %2010 ]
  %2017 = phi i64 [ %2081, %2073 ], [ %1860, %2010 ]
  %2018 = phi i32 [ %2079, %2073 ], [ %2013, %2010 ]
  %2019 = sub i32 %1859, %2015
  %2020 = tail call i32 @llvm.smin.i32(i32 %2019, i32 0)
  %2021 = sub i32 %2019, %2020
  %2022 = zext i32 %2021 to i64
  %2023 = add nuw nsw i64 %2022, 1
  %2024 = add nsw i64 %2016, -1
  %2025 = icmp ult i32 %2021, 31
  br i1 %2025, label %2061, label %2026

2026:                                             ; preds = %2014
  %2027 = and i64 %2023, 8589934560
  %2028 = sub i64 %2017, %2027
  br label %2029

2029:                                             ; preds = %2029, %2026
  %2030 = phi i64 [ 0, %2026 ], [ %2053, %2029 ]
  %2031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2049, %2029 ]
  %2032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2050, %2029 ]
  %2033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2051, %2029 ]
  %2034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2052, %2029 ]
  %2035 = sub i64 %2017, %2030
  %2036 = getelementptr inbounds i32, ptr %11, i64 %2035
  %2037 = getelementptr inbounds i32, ptr %2036, i64 -7
  %2038 = load <8 x i32>, ptr %2037, align 4, !tbaa !5
  %2039 = shufflevector <8 x i32> %2038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2040 = getelementptr inbounds i32, ptr %2036, i64 -15
  %2041 = load <8 x i32>, ptr %2040, align 4, !tbaa !5
  %2042 = shufflevector <8 x i32> %2041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2043 = getelementptr inbounds i32, ptr %2036, i64 -23
  %2044 = load <8 x i32>, ptr %2043, align 4, !tbaa !5
  %2045 = shufflevector <8 x i32> %2044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2046 = getelementptr inbounds i32, ptr %2036, i64 -31
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = mul <8 x i32> %2039, %2031
  %2050 = mul <8 x i32> %2042, %2032
  %2051 = mul <8 x i32> %2045, %2033
  %2052 = mul <8 x i32> %2048, %2034
  %2053 = add nuw i64 %2030, 32
  %2054 = icmp eq i64 %2053, %2027
  br i1 %2054, label %2055, label %2029, !llvm.loop !1009

2055:                                             ; preds = %2029
  %2056 = mul <8 x i32> %2050, %2049
  %2057 = mul <8 x i32> %2051, %2056
  %2058 = mul <8 x i32> %2052, %2057
  %2059 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2058)
  %2060 = icmp eq i64 %2023, %2027
  br i1 %2060, label %2073, label %2061

2061:                                             ; preds = %2014, %2055
  %2062 = phi i64 [ %2017, %2014 ], [ %2028, %2055 ]
  %2063 = phi i32 [ 1, %2014 ], [ %2059, %2055 ]
  br label %2064

2064:                                             ; preds = %2061, %2064
  %2065 = phi i64 [ %2070, %2064 ], [ %2062, %2061 ]
  %2066 = phi i32 [ %2069, %2064 ], [ %2063, %2061 ]
  %2067 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2068 = load i32, ptr %2067, align 4, !tbaa !5
  %2069 = mul nsw i32 %2068, %2066
  %2070 = add nsw i64 %2065, -1
  %2071 = trunc i64 %2065 to i32
  %2072 = icmp sgt i32 %2071, 0
  br i1 %2072, label %2064, label %2073, !llvm.loop !1010

2073:                                             ; preds = %2064, %2055
  %2074 = phi i32 [ %2059, %2055 ], [ %2069, %2064 ]
  %2075 = and i64 %2024, 4294967295
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2074
  %2079 = add nsw i32 %2078, %2018
  %2080 = icmp sgt i64 %2016, 2
  %2081 = add nsw i64 %2017, -1
  %2082 = add i32 %2015, 1
  br i1 %2080, label %2014, label %2083, !llvm.loop !1011

2083:                                             ; preds = %2073, %2010
  %2084 = phi i32 [ %2013, %2010 ], [ %2079, %2073 ]
  %2085 = icmp slt i32 %2084, %5
  br i1 %2085, label %2088, label %2086

2086:                                             ; preds = %2083
  %2087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2088:                                             ; preds = %2083
  %2089 = sext i32 %2084 to i64
  %2090 = getelementptr inbounds double, ptr %1843, i64 %2089
  %2091 = load double, ptr %2090, align 8, !tbaa !18
  %2092 = fptosi double %2091 to i16
  %2093 = icmp sgt i16 %2011, %2092
  br i1 %2093, label %2094, label %2095

2094:                                             ; preds = %2088
  store i16 %2092, ptr %1845, align 2, !tbaa !78
  br label %2095

2095:                                             ; preds = %2088, %2094
  %2096 = phi i16 [ %2011, %2088 ], [ %2092, %2094 ]
  %2097 = add nuw nsw i32 %2012, 1
  br i1 %1858, label %2098, label %2148

2098:                                             ; preds = %2095
  %2099 = load i32, ptr %4, align 4, !tbaa !5
  %2100 = load i32, ptr %12, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, -1
  %2102 = icmp slt i32 %2099, %2101
  br i1 %2102, label %2125, label %2103

2103:                                             ; preds = %2098
  %2104 = icmp eq i32 %2099, %2101
  br i1 %2104, label %2105, label %2141

2105:                                             ; preds = %2103
  store i32 0, ptr %4, align 4, !tbaa !5
  %2106 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2106, ptr %6, align 4, !tbaa !5
  br i1 %1863, label %2148, label %2107

2107:                                             ; preds = %2105, %2135
  %2108 = phi i64 [ %2139, %2135 ], [ 1, %2105 ]
  %2109 = getelementptr inbounds i32, ptr %4, i64 %2108
  %2110 = load i32, ptr %2109, align 4, !tbaa !5
  %2111 = getelementptr inbounds i32, ptr %12, i64 %2108
  %2112 = load i32, ptr %2111, align 4, !tbaa !5
  %2113 = add nsw i32 %2112, -1
  %2114 = icmp slt i32 %2110, %2113
  br i1 %2114, label %2115, label %2133

2115:                                             ; preds = %2107
  br i1 %2102, label %2125, label %2116

2116:                                             ; preds = %2115
  %2117 = shl i64 %2108, 32
  %2118 = add i64 %2117, -4294967296
  %2119 = ashr exact i64 %2118, 32
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2108
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, %2121
  store i32 %2124, ptr %2122, align 4, !tbaa !5
  br label %2143

2125:                                             ; preds = %2098, %2115
  %2126 = phi i32 [ %2110, %2115 ], [ %2099, %2098 ]
  %2127 = phi ptr [ %2109, %2115 ], [ %4, %2098 ]
  %2128 = phi i64 [ %2108, %2115 ], [ 0, %2098 ]
  %2129 = add nsw i32 %2126, 1
  store i32 %2129, ptr %2127, align 4, !tbaa !5
  %2130 = getelementptr inbounds i32, ptr %7, i64 %2128
  %2131 = load i32, ptr %2130, align 4, !tbaa !5
  %2132 = getelementptr inbounds i32, ptr %6, i64 %2128
  br label %2143

2133:                                             ; preds = %2107
  %2134 = icmp eq i32 %2110, %2113
  br i1 %2134, label %2135, label %2141

2135:                                             ; preds = %2133
  store i32 0, ptr %2109, align 4, !tbaa !5
  %2136 = getelementptr inbounds i32, ptr %8, i64 %2108
  %2137 = load i32, ptr %2136, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %6, i64 %2108
  store i32 %2137, ptr %2138, align 4, !tbaa !5
  %2139 = add nuw nsw i64 %2108, 1
  %2140 = icmp eq i64 %2139, %1861
  br i1 %2140, label %2148, label %2107, !llvm.loop !1012

2141:                                             ; preds = %2103, %2133
  %2142 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2143:                                             ; preds = %2116, %2125
  %2144 = phi ptr [ %2132, %2125 ], [ %2109, %2116 ]
  %2145 = phi i32 [ %2131, %2125 ], [ 1, %2116 ]
  %2146 = load i32, ptr %2144, align 4, !tbaa !5
  %2147 = add nsw i32 %2146, %2145
  store i32 %2147, ptr %2144, align 4, !tbaa !5
  br label %2148

2148:                                             ; preds = %2135, %2143, %2105, %2095
  %2149 = icmp eq i32 %2097, %5
  br i1 %2149, label %5477, label %2010, !llvm.loop !1013

2150:                                             ; preds = %1849
  %2151 = getelementptr inbounds i32, ptr %3, i64 %19
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = icmp eq i32 %2152, 0
  %2154 = icmp sgt i32 %5, 0
  br i1 %2153, label %2164, label %2155

2155:                                             ; preds = %2150
  br i1 %2154, label %2156, label %5477

2156:                                             ; preds = %2155
  %2157 = icmp sgt i32 %13, 1
  %2158 = icmp sgt i32 %13, 0
  %2159 = add i32 %13, -2
  %2160 = zext i32 %2159 to i64
  %2161 = zext i32 %13 to i64
  %2162 = add nuw i32 %5, 1
  %2163 = icmp eq i32 %13, 1
  br label %2306

2164:                                             ; preds = %2150
  br i1 %2154, label %2165, label %5477

2165:                                             ; preds = %2164
  %2166 = icmp sgt i32 %13, 1
  %2167 = icmp sgt i32 %13, 0
  %2168 = add i32 %13, -2
  %2169 = zext i32 %2168 to i64
  %2170 = zext i32 %13 to i64
  %2171 = add nuw i32 %5, 1
  %2172 = icmp eq i32 %13, 1
  br label %2173

2173:                                             ; preds = %2165, %2304
  %2174 = phi i16 [ %1847, %2165 ], [ %2255, %2304 ]
  %2175 = phi i32 [ 0, %2165 ], [ %2256, %2304 ]
  %2176 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2166, label %2177, label %2246

2177:                                             ; preds = %2173, %2236
  %2178 = phi i32 [ %2245, %2236 ], [ 0, %2173 ]
  %2179 = phi i64 [ %2187, %2236 ], [ %2170, %2173 ]
  %2180 = phi i64 [ %2244, %2236 ], [ %2169, %2173 ]
  %2181 = phi i32 [ %2242, %2236 ], [ %2176, %2173 ]
  %2182 = sub i32 %2168, %2178
  %2183 = tail call i32 @llvm.smin.i32(i32 %2182, i32 0)
  %2184 = sub i32 %2182, %2183
  %2185 = zext i32 %2184 to i64
  %2186 = add nuw nsw i64 %2185, 1
  %2187 = add nsw i64 %2179, -1
  %2188 = icmp ult i32 %2184, 31
  br i1 %2188, label %2224, label %2189

2189:                                             ; preds = %2177
  %2190 = and i64 %2186, 8589934560
  %2191 = sub i64 %2180, %2190
  br label %2192

2192:                                             ; preds = %2192, %2189
  %2193 = phi i64 [ 0, %2189 ], [ %2216, %2192 ]
  %2194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2212, %2192 ]
  %2195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2213, %2192 ]
  %2196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2214, %2192 ]
  %2197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2215, %2192 ]
  %2198 = sub i64 %2180, %2193
  %2199 = getelementptr inbounds i32, ptr %9, i64 %2198
  %2200 = getelementptr inbounds i32, ptr %2199, i64 -7
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = getelementptr inbounds i32, ptr %2199, i64 -15
  %2204 = load <8 x i32>, ptr %2203, align 4, !tbaa !5
  %2205 = shufflevector <8 x i32> %2204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2206 = getelementptr inbounds i32, ptr %2199, i64 -23
  %2207 = load <8 x i32>, ptr %2206, align 4, !tbaa !5
  %2208 = shufflevector <8 x i32> %2207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2209 = getelementptr inbounds i32, ptr %2199, i64 -31
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = mul <8 x i32> %2202, %2194
  %2213 = mul <8 x i32> %2205, %2195
  %2214 = mul <8 x i32> %2208, %2196
  %2215 = mul <8 x i32> %2211, %2197
  %2216 = add nuw i64 %2193, 32
  %2217 = icmp eq i64 %2216, %2190
  br i1 %2217, label %2218, label %2192, !llvm.loop !1014

2218:                                             ; preds = %2192
  %2219 = mul <8 x i32> %2213, %2212
  %2220 = mul <8 x i32> %2214, %2219
  %2221 = mul <8 x i32> %2215, %2220
  %2222 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2221)
  %2223 = icmp eq i64 %2186, %2190
  br i1 %2223, label %2236, label %2224

2224:                                             ; preds = %2177, %2218
  %2225 = phi i64 [ %2180, %2177 ], [ %2191, %2218 ]
  %2226 = phi i32 [ 1, %2177 ], [ %2222, %2218 ]
  br label %2227

2227:                                             ; preds = %2224, %2227
  %2228 = phi i64 [ %2233, %2227 ], [ %2225, %2224 ]
  %2229 = phi i32 [ %2232, %2227 ], [ %2226, %2224 ]
  %2230 = getelementptr inbounds i32, ptr %9, i64 %2228
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2229
  %2233 = add nsw i64 %2228, -1
  %2234 = trunc i64 %2228 to i32
  %2235 = icmp sgt i32 %2234, 0
  br i1 %2235, label %2227, label %2236, !llvm.loop !1015

2236:                                             ; preds = %2227, %2218
  %2237 = phi i32 [ %2222, %2218 ], [ %2232, %2227 ]
  %2238 = and i64 %2187, 4294967295
  %2239 = getelementptr inbounds i32, ptr %6, i64 %2238
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = mul nsw i32 %2240, %2237
  %2242 = add nsw i32 %2241, %2181
  %2243 = icmp sgt i64 %2179, 2
  %2244 = add nsw i64 %2180, -1
  %2245 = add i32 %2178, 1
  br i1 %2243, label %2177, label %2246, !llvm.loop !1016

2246:                                             ; preds = %2236, %2173
  %2247 = phi i32 [ %2176, %2173 ], [ %2242, %2236 ]
  %2248 = sext i32 %2247 to i64
  %2249 = getelementptr inbounds double, ptr %1843, i64 %2248
  %2250 = load double, ptr %2249, align 8, !tbaa !18
  %2251 = fptosi double %2250 to i16
  %2252 = icmp sgt i16 %2174, %2251
  br i1 %2252, label %2253, label %2254

2253:                                             ; preds = %2246
  store i16 %2251, ptr %1845, align 2, !tbaa !78
  br label %2254

2254:                                             ; preds = %2253, %2246
  %2255 = phi i16 [ %2251, %2253 ], [ %2174, %2246 ]
  %2256 = add nuw nsw i32 %2175, 1
  br i1 %2167, label %2257, label %2304

2257:                                             ; preds = %2254
  %2258 = load i32, ptr %4, align 4, !tbaa !5
  %2259 = load i32, ptr %12, align 4, !tbaa !5
  %2260 = add nsw i32 %2259, -1
  %2261 = icmp slt i32 %2258, %2260
  br i1 %2261, label %2281, label %2262

2262:                                             ; preds = %2257
  %2263 = icmp eq i32 %2258, %2260
  br i1 %2263, label %2264, label %2297

2264:                                             ; preds = %2262
  store i32 0, ptr %4, align 4, !tbaa !5
  %2265 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2265, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2304, label %2266

2266:                                             ; preds = %2264, %2291
  %2267 = phi i64 [ %2295, %2291 ], [ 1, %2264 ]
  %2268 = getelementptr inbounds i32, ptr %4, i64 %2267
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %12, i64 %2267
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2269, %2272
  br i1 %2273, label %2274, label %2289

2274:                                             ; preds = %2266
  br i1 %2261, label %2281, label %2275

2275:                                             ; preds = %2274
  %2276 = getelementptr inbounds i32, ptr %7, i64 %2267
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = getelementptr inbounds i32, ptr %6, i64 %2267
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = add nsw i32 %2279, %2277
  store i32 %2280, ptr %2278, align 4, !tbaa !5
  br label %2299

2281:                                             ; preds = %2257, %2274
  %2282 = phi i32 [ %2269, %2274 ], [ %2258, %2257 ]
  %2283 = phi ptr [ %2268, %2274 ], [ %4, %2257 ]
  %2284 = phi i64 [ %2267, %2274 ], [ 0, %2257 ]
  %2285 = add nsw i32 %2282, 1
  store i32 %2285, ptr %2283, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %7, i64 %2284
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %6, i64 %2284
  br label %2299

2289:                                             ; preds = %2266
  %2290 = icmp eq i32 %2269, %2272
  br i1 %2290, label %2291, label %2297

2291:                                             ; preds = %2289
  store i32 0, ptr %2268, align 4, !tbaa !5
  %2292 = getelementptr inbounds i32, ptr %8, i64 %2267
  %2293 = load i32, ptr %2292, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2267
  store i32 %2293, ptr %2294, align 4, !tbaa !5
  %2295 = add nuw nsw i64 %2267, 1
  %2296 = icmp eq i64 %2295, %2170
  br i1 %2296, label %2304, label %2266, !llvm.loop !1017

2297:                                             ; preds = %2262, %2289
  %2298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2299:                                             ; preds = %2275, %2281
  %2300 = phi ptr [ %2288, %2281 ], [ %2268, %2275 ]
  %2301 = phi i32 [ %2287, %2281 ], [ 1, %2275 ]
  %2302 = load i32, ptr %2300, align 4, !tbaa !5
  %2303 = add nsw i32 %2302, %2301
  store i32 %2303, ptr %2300, align 4, !tbaa !5
  br label %2304

2304:                                             ; preds = %2291, %2299, %2264, %2254
  %2305 = icmp eq i32 %2256, %5
  br i1 %2305, label %5477, label %2173, !llvm.loop !1018

2306:                                             ; preds = %2156, %2444
  %2307 = phi i16 [ %1847, %2156 ], [ %2392, %2444 ]
  %2308 = phi i32 [ 0, %2156 ], [ %2393, %2444 ]
  %2309 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2157, label %2310, label %2379

2310:                                             ; preds = %2306, %2369
  %2311 = phi i32 [ %2378, %2369 ], [ 0, %2306 ]
  %2312 = phi i64 [ %2320, %2369 ], [ %2161, %2306 ]
  %2313 = phi i64 [ %2377, %2369 ], [ %2160, %2306 ]
  %2314 = phi i32 [ %2375, %2369 ], [ %2309, %2306 ]
  %2315 = sub i32 %2159, %2311
  %2316 = tail call i32 @llvm.smin.i32(i32 %2315, i32 0)
  %2317 = sub i32 %2315, %2316
  %2318 = zext i32 %2317 to i64
  %2319 = add nuw nsw i64 %2318, 1
  %2320 = add nsw i64 %2312, -1
  %2321 = icmp ult i32 %2317, 31
  br i1 %2321, label %2357, label %2322

2322:                                             ; preds = %2310
  %2323 = and i64 %2319, 8589934560
  %2324 = sub i64 %2313, %2323
  br label %2325

2325:                                             ; preds = %2325, %2322
  %2326 = phi i64 [ 0, %2322 ], [ %2349, %2325 ]
  %2327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2345, %2325 ]
  %2328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2346, %2325 ]
  %2329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2347, %2325 ]
  %2330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2348, %2325 ]
  %2331 = sub i64 %2313, %2326
  %2332 = getelementptr inbounds i32, ptr %11, i64 %2331
  %2333 = getelementptr inbounds i32, ptr %2332, i64 -7
  %2334 = load <8 x i32>, ptr %2333, align 4, !tbaa !5
  %2335 = shufflevector <8 x i32> %2334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2336 = getelementptr inbounds i32, ptr %2332, i64 -15
  %2337 = load <8 x i32>, ptr %2336, align 4, !tbaa !5
  %2338 = shufflevector <8 x i32> %2337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2339 = getelementptr inbounds i32, ptr %2332, i64 -23
  %2340 = load <8 x i32>, ptr %2339, align 4, !tbaa !5
  %2341 = shufflevector <8 x i32> %2340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2342 = getelementptr inbounds i32, ptr %2332, i64 -31
  %2343 = load <8 x i32>, ptr %2342, align 4, !tbaa !5
  %2344 = shufflevector <8 x i32> %2343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2345 = mul <8 x i32> %2335, %2327
  %2346 = mul <8 x i32> %2338, %2328
  %2347 = mul <8 x i32> %2341, %2329
  %2348 = mul <8 x i32> %2344, %2330
  %2349 = add nuw i64 %2326, 32
  %2350 = icmp eq i64 %2349, %2323
  br i1 %2350, label %2351, label %2325, !llvm.loop !1019

2351:                                             ; preds = %2325
  %2352 = mul <8 x i32> %2346, %2345
  %2353 = mul <8 x i32> %2347, %2352
  %2354 = mul <8 x i32> %2348, %2353
  %2355 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2354)
  %2356 = icmp eq i64 %2319, %2323
  br i1 %2356, label %2369, label %2357

2357:                                             ; preds = %2310, %2351
  %2358 = phi i64 [ %2313, %2310 ], [ %2324, %2351 ]
  %2359 = phi i32 [ 1, %2310 ], [ %2355, %2351 ]
  br label %2360

2360:                                             ; preds = %2357, %2360
  %2361 = phi i64 [ %2366, %2360 ], [ %2358, %2357 ]
  %2362 = phi i32 [ %2365, %2360 ], [ %2359, %2357 ]
  %2363 = getelementptr inbounds i32, ptr %11, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = mul nsw i32 %2364, %2362
  %2366 = add nsw i64 %2361, -1
  %2367 = trunc i64 %2361 to i32
  %2368 = icmp sgt i32 %2367, 0
  br i1 %2368, label %2360, label %2369, !llvm.loop !1020

2369:                                             ; preds = %2360, %2351
  %2370 = phi i32 [ %2355, %2351 ], [ %2365, %2360 ]
  %2371 = and i64 %2320, 4294967295
  %2372 = getelementptr inbounds i32, ptr %6, i64 %2371
  %2373 = load i32, ptr %2372, align 4, !tbaa !5
  %2374 = mul nsw i32 %2373, %2370
  %2375 = add nsw i32 %2374, %2314
  %2376 = icmp sgt i64 %2312, 2
  %2377 = add nsw i64 %2313, -1
  %2378 = add i32 %2311, 1
  br i1 %2376, label %2310, label %2379, !llvm.loop !1021

2379:                                             ; preds = %2369, %2306
  %2380 = phi i32 [ %2309, %2306 ], [ %2375, %2369 ]
  %2381 = icmp slt i32 %2380, %5
  br i1 %2381, label %2384, label %2382

2382:                                             ; preds = %2379
  %2383 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2384:                                             ; preds = %2379
  %2385 = sext i32 %2380 to i64
  %2386 = getelementptr inbounds double, ptr %1843, i64 %2385
  %2387 = load double, ptr %2386, align 8, !tbaa !18
  %2388 = fptosi double %2387 to i16
  %2389 = icmp sgt i16 %2307, %2388
  br i1 %2389, label %2390, label %2391

2390:                                             ; preds = %2384
  store i16 %2388, ptr %1845, align 2, !tbaa !78
  br label %2391

2391:                                             ; preds = %2390, %2384
  %2392 = phi i16 [ %2388, %2390 ], [ %2307, %2384 ]
  %2393 = add nuw nsw i32 %2308, 1
  br i1 %2158, label %2394, label %2444

2394:                                             ; preds = %2391
  %2395 = load i32, ptr %4, align 4, !tbaa !5
  %2396 = load i32, ptr %12, align 4, !tbaa !5
  %2397 = add nsw i32 %2396, -1
  %2398 = icmp slt i32 %2395, %2397
  br i1 %2398, label %2421, label %2399

2399:                                             ; preds = %2394
  %2400 = icmp eq i32 %2395, %2397
  br i1 %2400, label %2401, label %2437

2401:                                             ; preds = %2399
  store i32 0, ptr %4, align 4, !tbaa !5
  %2402 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2402, ptr %6, align 4, !tbaa !5
  br i1 %2163, label %2444, label %2403

2403:                                             ; preds = %2401, %2431
  %2404 = phi i64 [ %2435, %2431 ], [ 1, %2401 ]
  %2405 = getelementptr inbounds i32, ptr %4, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %12, i64 %2404
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = add nsw i32 %2408, -1
  %2410 = icmp slt i32 %2406, %2409
  br i1 %2410, label %2411, label %2429

2411:                                             ; preds = %2403
  br i1 %2398, label %2421, label %2412

2412:                                             ; preds = %2411
  %2413 = shl i64 %2404, 32
  %2414 = add i64 %2413, -4294967296
  %2415 = ashr exact i64 %2414, 32
  %2416 = getelementptr inbounds i32, ptr %7, i64 %2415
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = add nsw i32 %2419, %2417
  store i32 %2420, ptr %2418, align 4, !tbaa !5
  br label %2439

2421:                                             ; preds = %2394, %2411
  %2422 = phi i32 [ %2406, %2411 ], [ %2395, %2394 ]
  %2423 = phi ptr [ %2405, %2411 ], [ %4, %2394 ]
  %2424 = phi i64 [ %2404, %2411 ], [ 0, %2394 ]
  %2425 = add nsw i32 %2422, 1
  store i32 %2425, ptr %2423, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2424
  br label %2439

2429:                                             ; preds = %2403
  %2430 = icmp eq i32 %2406, %2409
  br i1 %2430, label %2431, label %2437

2431:                                             ; preds = %2429
  store i32 0, ptr %2405, align 4, !tbaa !5
  %2432 = getelementptr inbounds i32, ptr %8, i64 %2404
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2404
  store i32 %2433, ptr %2434, align 4, !tbaa !5
  %2435 = add nuw nsw i64 %2404, 1
  %2436 = icmp eq i64 %2435, %2161
  br i1 %2436, label %2444, label %2403, !llvm.loop !1022

2437:                                             ; preds = %2399, %2429
  %2438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2439:                                             ; preds = %2412, %2421
  %2440 = phi ptr [ %2428, %2421 ], [ %2405, %2412 ]
  %2441 = phi i32 [ %2427, %2421 ], [ 1, %2412 ]
  %2442 = load i32, ptr %2440, align 4, !tbaa !5
  %2443 = add nsw i32 %2442, %2441
  store i32 %2443, ptr %2440, align 4, !tbaa !5
  br label %2444

2444:                                             ; preds = %2431, %2439, %2401, %2391
  %2445 = icmp eq i32 %2393, %5
  br i1 %2445, label %5477, label %2306, !llvm.loop !1023

2446:                                             ; preds = %1849
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1495, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

2448:                                             ; preds = %18
  %2449 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2450 = load ptr, ptr %2449, align 8, !tbaa !9
  %2451 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2452 = load ptr, ptr %2451, align 8, !tbaa !9
  %2453 = load double, ptr %2450, align 8, !tbaa !18
  %2454 = fptosi double %2453 to i32
  store i32 %2454, ptr %2452, align 4, !tbaa !5
  %2455 = icmp eq i32 %13, 0
  br i1 %2455, label %5477, label %2456

2456:                                             ; preds = %2448
  switch i32 %1, label %3049 [
    i32 1, label %2457
    i32 0, label %2755
  ]

2457:                                             ; preds = %2456
  %2458 = getelementptr inbounds i32, ptr %3, i64 %19
  %2459 = load i32, ptr %2458, align 4, !tbaa !5
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp sgt i32 %5, 0
  br i1 %2460, label %2471, label %2462

2462:                                             ; preds = %2457
  br i1 %2461, label %2463, label %5477

2463:                                             ; preds = %2462
  %2464 = icmp sgt i32 %13, 1
  %2465 = icmp sgt i32 %13, 0
  %2466 = add i32 %13, -2
  %2467 = zext i32 %2466 to i64
  %2468 = zext i32 %13 to i64
  %2469 = add nuw i32 %5, 1
  %2470 = icmp eq i32 %13, 1
  br label %2616

2471:                                             ; preds = %2457
  br i1 %2461, label %2472, label %5477

2472:                                             ; preds = %2471
  %2473 = icmp sgt i32 %13, 1
  %2474 = icmp sgt i32 %13, 0
  %2475 = add i32 %13, -2
  %2476 = zext i32 %2475 to i64
  %2477 = zext i32 %13 to i64
  %2478 = add nuw i32 %5, 1
  %2479 = icmp eq i32 %13, 1
  br label %2480

2480:                                             ; preds = %2472, %2614
  %2481 = phi i32 [ 0, %2472 ], [ %2566, %2614 ]
  %2482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2473, label %2483, label %2552

2483:                                             ; preds = %2480, %2542
  %2484 = phi i32 [ %2551, %2542 ], [ 0, %2480 ]
  %2485 = phi i64 [ %2493, %2542 ], [ %2477, %2480 ]
  %2486 = phi i64 [ %2550, %2542 ], [ %2476, %2480 ]
  %2487 = phi i32 [ %2548, %2542 ], [ %2482, %2480 ]
  %2488 = sub i32 %2475, %2484
  %2489 = tail call i32 @llvm.smin.i32(i32 %2488, i32 0)
  %2490 = sub i32 %2488, %2489
  %2491 = zext i32 %2490 to i64
  %2492 = add nuw nsw i64 %2491, 1
  %2493 = add nsw i64 %2485, -1
  %2494 = icmp ult i32 %2490, 31
  br i1 %2494, label %2530, label %2495

2495:                                             ; preds = %2483
  %2496 = and i64 %2492, 8589934560
  %2497 = sub i64 %2486, %2496
  br label %2498

2498:                                             ; preds = %2498, %2495
  %2499 = phi i64 [ 0, %2495 ], [ %2522, %2498 ]
  %2500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2518, %2498 ]
  %2501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2519, %2498 ]
  %2502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2520, %2498 ]
  %2503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2521, %2498 ]
  %2504 = sub i64 %2486, %2499
  %2505 = getelementptr inbounds i32, ptr %9, i64 %2504
  %2506 = getelementptr inbounds i32, ptr %2505, i64 -7
  %2507 = load <8 x i32>, ptr %2506, align 4, !tbaa !5
  %2508 = shufflevector <8 x i32> %2507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2509 = getelementptr inbounds i32, ptr %2505, i64 -15
  %2510 = load <8 x i32>, ptr %2509, align 4, !tbaa !5
  %2511 = shufflevector <8 x i32> %2510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2512 = getelementptr inbounds i32, ptr %2505, i64 -23
  %2513 = load <8 x i32>, ptr %2512, align 4, !tbaa !5
  %2514 = shufflevector <8 x i32> %2513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2515 = getelementptr inbounds i32, ptr %2505, i64 -31
  %2516 = load <8 x i32>, ptr %2515, align 4, !tbaa !5
  %2517 = shufflevector <8 x i32> %2516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2518 = mul <8 x i32> %2508, %2500
  %2519 = mul <8 x i32> %2511, %2501
  %2520 = mul <8 x i32> %2514, %2502
  %2521 = mul <8 x i32> %2517, %2503
  %2522 = add nuw i64 %2499, 32
  %2523 = icmp eq i64 %2522, %2496
  br i1 %2523, label %2524, label %2498, !llvm.loop !1024

2524:                                             ; preds = %2498
  %2525 = mul <8 x i32> %2519, %2518
  %2526 = mul <8 x i32> %2520, %2525
  %2527 = mul <8 x i32> %2521, %2526
  %2528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2527)
  %2529 = icmp eq i64 %2492, %2496
  br i1 %2529, label %2542, label %2530

2530:                                             ; preds = %2483, %2524
  %2531 = phi i64 [ %2486, %2483 ], [ %2497, %2524 ]
  %2532 = phi i32 [ 1, %2483 ], [ %2528, %2524 ]
  br label %2533

2533:                                             ; preds = %2530, %2533
  %2534 = phi i64 [ %2539, %2533 ], [ %2531, %2530 ]
  %2535 = phi i32 [ %2538, %2533 ], [ %2532, %2530 ]
  %2536 = getelementptr inbounds i32, ptr %9, i64 %2534
  %2537 = load i32, ptr %2536, align 4, !tbaa !5
  %2538 = mul nsw i32 %2537, %2535
  %2539 = add nsw i64 %2534, -1
  %2540 = trunc i64 %2534 to i32
  %2541 = icmp sgt i32 %2540, 0
  br i1 %2541, label %2533, label %2542, !llvm.loop !1025

2542:                                             ; preds = %2533, %2524
  %2543 = phi i32 [ %2528, %2524 ], [ %2538, %2533 ]
  %2544 = and i64 %2493, 4294967295
  %2545 = getelementptr inbounds i32, ptr %6, i64 %2544
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = mul nsw i32 %2546, %2543
  %2548 = add nsw i32 %2547, %2487
  %2549 = icmp sgt i64 %2485, 2
  %2550 = add nsw i64 %2486, -1
  %2551 = add i32 %2484, 1
  br i1 %2549, label %2483, label %2552, !llvm.loop !1026

2552:                                             ; preds = %2542, %2480
  %2553 = phi i32 [ %2482, %2480 ], [ %2548, %2542 ]
  %2554 = sext i32 %2553 to i64
  %2555 = getelementptr inbounds double, ptr %2, i64 %2554
  %2556 = load double, ptr %2555, align 8, !tbaa !18
  %2557 = getelementptr inbounds double, ptr %2450, i64 %2554
  %2558 = load double, ptr %2557, align 8, !tbaa !18
  %2559 = fptosi double %2558 to i32
  %2560 = fcmp fast ueq double %2556, 0.000000e+00
  br i1 %2560, label %2565, label %2561

2561:                                             ; preds = %2552
  %2562 = load i32, ptr %2452, align 4, !tbaa !5
  %2563 = icmp sgt i32 %2562, %2559
  br i1 %2563, label %2564, label %2565

2564:                                             ; preds = %2561
  store i32 %2559, ptr %2452, align 4, !tbaa !5
  br label %2565

2565:                                             ; preds = %2561, %2564, %2552
  %2566 = add nuw nsw i32 %2481, 1
  br i1 %2474, label %2567, label %2614

2567:                                             ; preds = %2565
  %2568 = load i32, ptr %4, align 4, !tbaa !5
  %2569 = load i32, ptr %12, align 4, !tbaa !5
  %2570 = add nsw i32 %2569, -1
  %2571 = icmp slt i32 %2568, %2570
  br i1 %2571, label %2591, label %2572

2572:                                             ; preds = %2567
  %2573 = icmp eq i32 %2568, %2570
  br i1 %2573, label %2574, label %2607

2574:                                             ; preds = %2572
  store i32 0, ptr %4, align 4, !tbaa !5
  %2575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2575, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2614, label %2576

2576:                                             ; preds = %2574, %2601
  %2577 = phi i64 [ %2605, %2601 ], [ 1, %2574 ]
  %2578 = getelementptr inbounds i32, ptr %4, i64 %2577
  %2579 = load i32, ptr %2578, align 4, !tbaa !5
  %2580 = getelementptr inbounds i32, ptr %12, i64 %2577
  %2581 = load i32, ptr %2580, align 4, !tbaa !5
  %2582 = add nsw i32 %2581, -1
  %2583 = icmp slt i32 %2579, %2582
  br i1 %2583, label %2584, label %2599

2584:                                             ; preds = %2576
  br i1 %2571, label %2591, label %2585

2585:                                             ; preds = %2584
  %2586 = getelementptr inbounds i32, ptr %7, i64 %2577
  %2587 = load i32, ptr %2586, align 4, !tbaa !5
  %2588 = getelementptr inbounds i32, ptr %6, i64 %2577
  %2589 = load i32, ptr %2588, align 4, !tbaa !5
  %2590 = add nsw i32 %2589, %2587
  store i32 %2590, ptr %2588, align 4, !tbaa !5
  br label %2609

2591:                                             ; preds = %2567, %2584
  %2592 = phi i32 [ %2579, %2584 ], [ %2568, %2567 ]
  %2593 = phi ptr [ %2578, %2584 ], [ %4, %2567 ]
  %2594 = phi i64 [ %2577, %2584 ], [ 0, %2567 ]
  %2595 = add nsw i32 %2592, 1
  store i32 %2595, ptr %2593, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %7, i64 %2594
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2594
  br label %2609

2599:                                             ; preds = %2576
  %2600 = icmp eq i32 %2579, %2582
  br i1 %2600, label %2601, label %2607

2601:                                             ; preds = %2599
  store i32 0, ptr %2578, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %8, i64 %2577
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2577
  store i32 %2603, ptr %2604, align 4, !tbaa !5
  %2605 = add nuw nsw i64 %2577, 1
  %2606 = icmp eq i64 %2605, %2477
  br i1 %2606, label %2614, label %2576, !llvm.loop !1027

2607:                                             ; preds = %2572, %2599
  %2608 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2609:                                             ; preds = %2585, %2591
  %2610 = phi ptr [ %2598, %2591 ], [ %2578, %2585 ]
  %2611 = phi i32 [ %2597, %2591 ], [ 1, %2585 ]
  %2612 = load i32, ptr %2610, align 4, !tbaa !5
  %2613 = add nsw i32 %2612, %2611
  store i32 %2613, ptr %2610, align 4, !tbaa !5
  br label %2614

2614:                                             ; preds = %2601, %2609, %2574, %2565
  %2615 = icmp eq i32 %2566, %5
  br i1 %2615, label %5477, label %2480, !llvm.loop !1028

2616:                                             ; preds = %2463, %2753
  %2617 = phi i32 [ 0, %2463 ], [ %2702, %2753 ]
  %2618 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2464, label %2619, label %2688

2619:                                             ; preds = %2616, %2678
  %2620 = phi i32 [ %2687, %2678 ], [ 0, %2616 ]
  %2621 = phi i64 [ %2629, %2678 ], [ %2468, %2616 ]
  %2622 = phi i64 [ %2686, %2678 ], [ %2467, %2616 ]
  %2623 = phi i32 [ %2684, %2678 ], [ %2618, %2616 ]
  %2624 = sub i32 %2466, %2620
  %2625 = tail call i32 @llvm.smin.i32(i32 %2624, i32 0)
  %2626 = sub i32 %2624, %2625
  %2627 = zext i32 %2626 to i64
  %2628 = add nuw nsw i64 %2627, 1
  %2629 = add nsw i64 %2621, -1
  %2630 = icmp ult i32 %2626, 31
  br i1 %2630, label %2666, label %2631

2631:                                             ; preds = %2619
  %2632 = and i64 %2628, 8589934560
  %2633 = sub i64 %2622, %2632
  br label %2634

2634:                                             ; preds = %2634, %2631
  %2635 = phi i64 [ 0, %2631 ], [ %2658, %2634 ]
  %2636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2654, %2634 ]
  %2637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2655, %2634 ]
  %2638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2656, %2634 ]
  %2639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2657, %2634 ]
  %2640 = sub i64 %2622, %2635
  %2641 = getelementptr inbounds i32, ptr %11, i64 %2640
  %2642 = getelementptr inbounds i32, ptr %2641, i64 -7
  %2643 = load <8 x i32>, ptr %2642, align 4, !tbaa !5
  %2644 = shufflevector <8 x i32> %2643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2645 = getelementptr inbounds i32, ptr %2641, i64 -15
  %2646 = load <8 x i32>, ptr %2645, align 4, !tbaa !5
  %2647 = shufflevector <8 x i32> %2646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2648 = getelementptr inbounds i32, ptr %2641, i64 -23
  %2649 = load <8 x i32>, ptr %2648, align 4, !tbaa !5
  %2650 = shufflevector <8 x i32> %2649, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2651 = getelementptr inbounds i32, ptr %2641, i64 -31
  %2652 = load <8 x i32>, ptr %2651, align 4, !tbaa !5
  %2653 = shufflevector <8 x i32> %2652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2654 = mul <8 x i32> %2644, %2636
  %2655 = mul <8 x i32> %2647, %2637
  %2656 = mul <8 x i32> %2650, %2638
  %2657 = mul <8 x i32> %2653, %2639
  %2658 = add nuw i64 %2635, 32
  %2659 = icmp eq i64 %2658, %2632
  br i1 %2659, label %2660, label %2634, !llvm.loop !1029

2660:                                             ; preds = %2634
  %2661 = mul <8 x i32> %2655, %2654
  %2662 = mul <8 x i32> %2656, %2661
  %2663 = mul <8 x i32> %2657, %2662
  %2664 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2663)
  %2665 = icmp eq i64 %2628, %2632
  br i1 %2665, label %2678, label %2666

2666:                                             ; preds = %2619, %2660
  %2667 = phi i64 [ %2622, %2619 ], [ %2633, %2660 ]
  %2668 = phi i32 [ 1, %2619 ], [ %2664, %2660 ]
  br label %2669

2669:                                             ; preds = %2666, %2669
  %2670 = phi i64 [ %2675, %2669 ], [ %2667, %2666 ]
  %2671 = phi i32 [ %2674, %2669 ], [ %2668, %2666 ]
  %2672 = getelementptr inbounds i32, ptr %11, i64 %2670
  %2673 = load i32, ptr %2672, align 4, !tbaa !5
  %2674 = mul nsw i32 %2673, %2671
  %2675 = add nsw i64 %2670, -1
  %2676 = trunc i64 %2670 to i32
  %2677 = icmp sgt i32 %2676, 0
  br i1 %2677, label %2669, label %2678, !llvm.loop !1030

2678:                                             ; preds = %2669, %2660
  %2679 = phi i32 [ %2664, %2660 ], [ %2674, %2669 ]
  %2680 = and i64 %2629, 4294967295
  %2681 = getelementptr inbounds i32, ptr %6, i64 %2680
  %2682 = load i32, ptr %2681, align 4, !tbaa !5
  %2683 = mul nsw i32 %2682, %2679
  %2684 = add nsw i32 %2683, %2623
  %2685 = icmp sgt i64 %2621, 2
  %2686 = add nsw i64 %2622, -1
  %2687 = add i32 %2620, 1
  br i1 %2685, label %2619, label %2688, !llvm.loop !1031

2688:                                             ; preds = %2678, %2616
  %2689 = phi i32 [ %2618, %2616 ], [ %2684, %2678 ]
  %2690 = icmp slt i32 %2689, %5
  br i1 %2690, label %2693, label %2691

2691:                                             ; preds = %2688
  %2692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2693:                                             ; preds = %2688
  %2694 = sext i32 %2689 to i64
  %2695 = getelementptr inbounds double, ptr %2450, i64 %2694
  %2696 = load double, ptr %2695, align 8, !tbaa !18
  %2697 = fptosi double %2696 to i32
  %2698 = load i32, ptr %2452, align 4, !tbaa !5
  %2699 = icmp sgt i32 %2698, %2697
  br i1 %2699, label %2700, label %2701

2700:                                             ; preds = %2693
  store i32 %2697, ptr %2452, align 4, !tbaa !5
  br label %2701

2701:                                             ; preds = %2693, %2700
  %2702 = add nuw nsw i32 %2617, 1
  br i1 %2465, label %2703, label %2753

2703:                                             ; preds = %2701
  %2704 = load i32, ptr %4, align 4, !tbaa !5
  %2705 = load i32, ptr %12, align 4, !tbaa !5
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2704, %2706
  br i1 %2707, label %2730, label %2708

2708:                                             ; preds = %2703
  %2709 = icmp eq i32 %2704, %2706
  br i1 %2709, label %2710, label %2746

2710:                                             ; preds = %2708
  store i32 0, ptr %4, align 4, !tbaa !5
  %2711 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2711, ptr %6, align 4, !tbaa !5
  br i1 %2470, label %2753, label %2712

2712:                                             ; preds = %2710, %2740
  %2713 = phi i64 [ %2744, %2740 ], [ 1, %2710 ]
  %2714 = getelementptr inbounds i32, ptr %4, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = getelementptr inbounds i32, ptr %12, i64 %2713
  %2717 = load i32, ptr %2716, align 4, !tbaa !5
  %2718 = add nsw i32 %2717, -1
  %2719 = icmp slt i32 %2715, %2718
  br i1 %2719, label %2720, label %2738

2720:                                             ; preds = %2712
  br i1 %2707, label %2730, label %2721

2721:                                             ; preds = %2720
  %2722 = shl i64 %2713, 32
  %2723 = add i64 %2722, -4294967296
  %2724 = ashr exact i64 %2723, 32
  %2725 = getelementptr inbounds i32, ptr %7, i64 %2724
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2728 = load i32, ptr %2727, align 4, !tbaa !5
  %2729 = add nsw i32 %2728, %2726
  store i32 %2729, ptr %2727, align 4, !tbaa !5
  br label %2748

2730:                                             ; preds = %2703, %2720
  %2731 = phi i32 [ %2715, %2720 ], [ %2704, %2703 ]
  %2732 = phi ptr [ %2714, %2720 ], [ %4, %2703 ]
  %2733 = phi i64 [ %2713, %2720 ], [ 0, %2703 ]
  %2734 = add nsw i32 %2731, 1
  store i32 %2734, ptr %2732, align 4, !tbaa !5
  %2735 = getelementptr inbounds i32, ptr %7, i64 %2733
  %2736 = load i32, ptr %2735, align 4, !tbaa !5
  %2737 = getelementptr inbounds i32, ptr %6, i64 %2733
  br label %2748

2738:                                             ; preds = %2712
  %2739 = icmp eq i32 %2715, %2718
  br i1 %2739, label %2740, label %2746

2740:                                             ; preds = %2738
  store i32 0, ptr %2714, align 4, !tbaa !5
  %2741 = getelementptr inbounds i32, ptr %8, i64 %2713
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2713
  store i32 %2742, ptr %2743, align 4, !tbaa !5
  %2744 = add nuw nsw i64 %2713, 1
  %2745 = icmp eq i64 %2744, %2468
  br i1 %2745, label %2753, label %2712, !llvm.loop !1032

2746:                                             ; preds = %2708, %2738
  %2747 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2748:                                             ; preds = %2721, %2730
  %2749 = phi ptr [ %2737, %2730 ], [ %2714, %2721 ]
  %2750 = phi i32 [ %2736, %2730 ], [ 1, %2721 ]
  %2751 = load i32, ptr %2749, align 4, !tbaa !5
  %2752 = add nsw i32 %2751, %2750
  store i32 %2752, ptr %2749, align 4, !tbaa !5
  br label %2753

2753:                                             ; preds = %2740, %2748, %2710, %2701
  %2754 = icmp eq i32 %2702, %5
  br i1 %2754, label %5477, label %2616, !llvm.loop !1033

2755:                                             ; preds = %2456
  %2756 = getelementptr inbounds i32, ptr %3, i64 %19
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = icmp eq i32 %2757, 0
  %2759 = icmp sgt i32 %5, 0
  br i1 %2758, label %2769, label %2760

2760:                                             ; preds = %2755
  br i1 %2759, label %2761, label %5477

2761:                                             ; preds = %2760
  %2762 = icmp sgt i32 %13, 1
  %2763 = icmp sgt i32 %13, 0
  %2764 = add i32 %13, -2
  %2765 = zext i32 %2764 to i64
  %2766 = zext i32 %13 to i64
  %2767 = add nuw i32 %5, 1
  %2768 = icmp eq i32 %13, 1
  br label %2910

2769:                                             ; preds = %2755
  br i1 %2759, label %2770, label %5477

2770:                                             ; preds = %2769
  %2771 = icmp sgt i32 %13, 1
  %2772 = icmp sgt i32 %13, 0
  %2773 = add i32 %13, -2
  %2774 = zext i32 %2773 to i64
  %2775 = zext i32 %13 to i64
  %2776 = add nuw i32 %5, 1
  %2777 = icmp eq i32 %13, 1
  br label %2778

2778:                                             ; preds = %2770, %2908
  %2779 = phi i32 [ 0, %2770 ], [ %2860, %2908 ]
  %2780 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2771, label %2781, label %2850

2781:                                             ; preds = %2778, %2840
  %2782 = phi i32 [ %2849, %2840 ], [ 0, %2778 ]
  %2783 = phi i64 [ %2791, %2840 ], [ %2775, %2778 ]
  %2784 = phi i64 [ %2848, %2840 ], [ %2774, %2778 ]
  %2785 = phi i32 [ %2846, %2840 ], [ %2780, %2778 ]
  %2786 = sub i32 %2773, %2782
  %2787 = tail call i32 @llvm.smin.i32(i32 %2786, i32 0)
  %2788 = sub i32 %2786, %2787
  %2789 = zext i32 %2788 to i64
  %2790 = add nuw nsw i64 %2789, 1
  %2791 = add nsw i64 %2783, -1
  %2792 = icmp ult i32 %2788, 31
  br i1 %2792, label %2828, label %2793

2793:                                             ; preds = %2781
  %2794 = and i64 %2790, 8589934560
  %2795 = sub i64 %2784, %2794
  br label %2796

2796:                                             ; preds = %2796, %2793
  %2797 = phi i64 [ 0, %2793 ], [ %2820, %2796 ]
  %2798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2816, %2796 ]
  %2799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2817, %2796 ]
  %2800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2818, %2796 ]
  %2801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2819, %2796 ]
  %2802 = sub i64 %2784, %2797
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2802
  %2804 = getelementptr inbounds i32, ptr %2803, i64 -7
  %2805 = load <8 x i32>, ptr %2804, align 4, !tbaa !5
  %2806 = shufflevector <8 x i32> %2805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2807 = getelementptr inbounds i32, ptr %2803, i64 -15
  %2808 = load <8 x i32>, ptr %2807, align 4, !tbaa !5
  %2809 = shufflevector <8 x i32> %2808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2810 = getelementptr inbounds i32, ptr %2803, i64 -23
  %2811 = load <8 x i32>, ptr %2810, align 4, !tbaa !5
  %2812 = shufflevector <8 x i32> %2811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2813 = getelementptr inbounds i32, ptr %2803, i64 -31
  %2814 = load <8 x i32>, ptr %2813, align 4, !tbaa !5
  %2815 = shufflevector <8 x i32> %2814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2816 = mul <8 x i32> %2806, %2798
  %2817 = mul <8 x i32> %2809, %2799
  %2818 = mul <8 x i32> %2812, %2800
  %2819 = mul <8 x i32> %2815, %2801
  %2820 = add nuw i64 %2797, 32
  %2821 = icmp eq i64 %2820, %2794
  br i1 %2821, label %2822, label %2796, !llvm.loop !1034

2822:                                             ; preds = %2796
  %2823 = mul <8 x i32> %2817, %2816
  %2824 = mul <8 x i32> %2818, %2823
  %2825 = mul <8 x i32> %2819, %2824
  %2826 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2825)
  %2827 = icmp eq i64 %2790, %2794
  br i1 %2827, label %2840, label %2828

2828:                                             ; preds = %2781, %2822
  %2829 = phi i64 [ %2784, %2781 ], [ %2795, %2822 ]
  %2830 = phi i32 [ 1, %2781 ], [ %2826, %2822 ]
  br label %2831

2831:                                             ; preds = %2828, %2831
  %2832 = phi i64 [ %2837, %2831 ], [ %2829, %2828 ]
  %2833 = phi i32 [ %2836, %2831 ], [ %2830, %2828 ]
  %2834 = getelementptr inbounds i32, ptr %9, i64 %2832
  %2835 = load i32, ptr %2834, align 4, !tbaa !5
  %2836 = mul nsw i32 %2835, %2833
  %2837 = add nsw i64 %2832, -1
  %2838 = trunc i64 %2832 to i32
  %2839 = icmp sgt i32 %2838, 0
  br i1 %2839, label %2831, label %2840, !llvm.loop !1035

2840:                                             ; preds = %2831, %2822
  %2841 = phi i32 [ %2826, %2822 ], [ %2836, %2831 ]
  %2842 = and i64 %2791, 4294967295
  %2843 = getelementptr inbounds i32, ptr %6, i64 %2842
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = mul nsw i32 %2844, %2841
  %2846 = add nsw i32 %2845, %2785
  %2847 = icmp sgt i64 %2783, 2
  %2848 = add nsw i64 %2784, -1
  %2849 = add i32 %2782, 1
  br i1 %2847, label %2781, label %2850, !llvm.loop !1036

2850:                                             ; preds = %2840, %2778
  %2851 = phi i32 [ %2780, %2778 ], [ %2846, %2840 ]
  %2852 = sext i32 %2851 to i64
  %2853 = getelementptr inbounds double, ptr %2450, i64 %2852
  %2854 = load double, ptr %2853, align 8, !tbaa !18
  %2855 = fptosi double %2854 to i32
  %2856 = load i32, ptr %2452, align 4, !tbaa !5
  %2857 = icmp sgt i32 %2856, %2855
  br i1 %2857, label %2858, label %2859

2858:                                             ; preds = %2850
  store i32 %2855, ptr %2452, align 4, !tbaa !5
  br label %2859

2859:                                             ; preds = %2858, %2850
  %2860 = add nuw nsw i32 %2779, 1
  br i1 %2772, label %2861, label %2908

2861:                                             ; preds = %2859
  %2862 = load i32, ptr %4, align 4, !tbaa !5
  %2863 = load i32, ptr %12, align 4, !tbaa !5
  %2864 = add nsw i32 %2863, -1
  %2865 = icmp slt i32 %2862, %2864
  br i1 %2865, label %2885, label %2866

2866:                                             ; preds = %2861
  %2867 = icmp eq i32 %2862, %2864
  br i1 %2867, label %2868, label %2901

2868:                                             ; preds = %2866
  store i32 0, ptr %4, align 4, !tbaa !5
  %2869 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2869, ptr %6, align 4, !tbaa !5
  br i1 %2777, label %2908, label %2870

2870:                                             ; preds = %2868, %2895
  %2871 = phi i64 [ %2899, %2895 ], [ 1, %2868 ]
  %2872 = getelementptr inbounds i32, ptr %4, i64 %2871
  %2873 = load i32, ptr %2872, align 4, !tbaa !5
  %2874 = getelementptr inbounds i32, ptr %12, i64 %2871
  %2875 = load i32, ptr %2874, align 4, !tbaa !5
  %2876 = add nsw i32 %2875, -1
  %2877 = icmp slt i32 %2873, %2876
  br i1 %2877, label %2878, label %2893

2878:                                             ; preds = %2870
  br i1 %2865, label %2885, label %2879

2879:                                             ; preds = %2878
  %2880 = getelementptr inbounds i32, ptr %7, i64 %2871
  %2881 = load i32, ptr %2880, align 4, !tbaa !5
  %2882 = getelementptr inbounds i32, ptr %6, i64 %2871
  %2883 = load i32, ptr %2882, align 4, !tbaa !5
  %2884 = add nsw i32 %2883, %2881
  store i32 %2884, ptr %2882, align 4, !tbaa !5
  br label %2903

2885:                                             ; preds = %2861, %2878
  %2886 = phi i32 [ %2873, %2878 ], [ %2862, %2861 ]
  %2887 = phi ptr [ %2872, %2878 ], [ %4, %2861 ]
  %2888 = phi i64 [ %2871, %2878 ], [ 0, %2861 ]
  %2889 = add nsw i32 %2886, 1
  store i32 %2889, ptr %2887, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = getelementptr inbounds i32, ptr %6, i64 %2888
  br label %2903

2893:                                             ; preds = %2870
  %2894 = icmp eq i32 %2873, %2876
  br i1 %2894, label %2895, label %2901

2895:                                             ; preds = %2893
  store i32 0, ptr %2872, align 4, !tbaa !5
  %2896 = getelementptr inbounds i32, ptr %8, i64 %2871
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2871
  store i32 %2897, ptr %2898, align 4, !tbaa !5
  %2899 = add nuw nsw i64 %2871, 1
  %2900 = icmp eq i64 %2899, %2775
  br i1 %2900, label %2908, label %2870, !llvm.loop !1037

2901:                                             ; preds = %2866, %2893
  %2902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2903:                                             ; preds = %2879, %2885
  %2904 = phi ptr [ %2892, %2885 ], [ %2872, %2879 ]
  %2905 = phi i32 [ %2891, %2885 ], [ 1, %2879 ]
  %2906 = load i32, ptr %2904, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2905
  store i32 %2907, ptr %2904, align 4, !tbaa !5
  br label %2908

2908:                                             ; preds = %2895, %2903, %2868, %2859
  %2909 = icmp eq i32 %2860, %5
  br i1 %2909, label %5477, label %2778, !llvm.loop !1038

2910:                                             ; preds = %2761, %3047
  %2911 = phi i32 [ 0, %2761 ], [ %2996, %3047 ]
  %2912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2762, label %2913, label %2982

2913:                                             ; preds = %2910, %2972
  %2914 = phi i32 [ %2981, %2972 ], [ 0, %2910 ]
  %2915 = phi i64 [ %2923, %2972 ], [ %2766, %2910 ]
  %2916 = phi i64 [ %2980, %2972 ], [ %2765, %2910 ]
  %2917 = phi i32 [ %2978, %2972 ], [ %2912, %2910 ]
  %2918 = sub i32 %2764, %2914
  %2919 = tail call i32 @llvm.smin.i32(i32 %2918, i32 0)
  %2920 = sub i32 %2918, %2919
  %2921 = zext i32 %2920 to i64
  %2922 = add nuw nsw i64 %2921, 1
  %2923 = add nsw i64 %2915, -1
  %2924 = icmp ult i32 %2920, 31
  br i1 %2924, label %2960, label %2925

2925:                                             ; preds = %2913
  %2926 = and i64 %2922, 8589934560
  %2927 = sub i64 %2916, %2926
  br label %2928

2928:                                             ; preds = %2928, %2925
  %2929 = phi i64 [ 0, %2925 ], [ %2952, %2928 ]
  %2930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2948, %2928 ]
  %2931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2949, %2928 ]
  %2932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2950, %2928 ]
  %2933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2951, %2928 ]
  %2934 = sub i64 %2916, %2929
  %2935 = getelementptr inbounds i32, ptr %11, i64 %2934
  %2936 = getelementptr inbounds i32, ptr %2935, i64 -7
  %2937 = load <8 x i32>, ptr %2936, align 4, !tbaa !5
  %2938 = shufflevector <8 x i32> %2937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2939 = getelementptr inbounds i32, ptr %2935, i64 -15
  %2940 = load <8 x i32>, ptr %2939, align 4, !tbaa !5
  %2941 = shufflevector <8 x i32> %2940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2942 = getelementptr inbounds i32, ptr %2935, i64 -23
  %2943 = load <8 x i32>, ptr %2942, align 4, !tbaa !5
  %2944 = shufflevector <8 x i32> %2943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2945 = getelementptr inbounds i32, ptr %2935, i64 -31
  %2946 = load <8 x i32>, ptr %2945, align 4, !tbaa !5
  %2947 = shufflevector <8 x i32> %2946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2948 = mul <8 x i32> %2938, %2930
  %2949 = mul <8 x i32> %2941, %2931
  %2950 = mul <8 x i32> %2944, %2932
  %2951 = mul <8 x i32> %2947, %2933
  %2952 = add nuw i64 %2929, 32
  %2953 = icmp eq i64 %2952, %2926
  br i1 %2953, label %2954, label %2928, !llvm.loop !1039

2954:                                             ; preds = %2928
  %2955 = mul <8 x i32> %2949, %2948
  %2956 = mul <8 x i32> %2950, %2955
  %2957 = mul <8 x i32> %2951, %2956
  %2958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2957)
  %2959 = icmp eq i64 %2922, %2926
  br i1 %2959, label %2972, label %2960

2960:                                             ; preds = %2913, %2954
  %2961 = phi i64 [ %2916, %2913 ], [ %2927, %2954 ]
  %2962 = phi i32 [ 1, %2913 ], [ %2958, %2954 ]
  br label %2963

2963:                                             ; preds = %2960, %2963
  %2964 = phi i64 [ %2969, %2963 ], [ %2961, %2960 ]
  %2965 = phi i32 [ %2968, %2963 ], [ %2962, %2960 ]
  %2966 = getelementptr inbounds i32, ptr %11, i64 %2964
  %2967 = load i32, ptr %2966, align 4, !tbaa !5
  %2968 = mul nsw i32 %2967, %2965
  %2969 = add nsw i64 %2964, -1
  %2970 = trunc i64 %2964 to i32
  %2971 = icmp sgt i32 %2970, 0
  br i1 %2971, label %2963, label %2972, !llvm.loop !1040

2972:                                             ; preds = %2963, %2954
  %2973 = phi i32 [ %2958, %2954 ], [ %2968, %2963 ]
  %2974 = and i64 %2923, 4294967295
  %2975 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = mul nsw i32 %2976, %2973
  %2978 = add nsw i32 %2977, %2917
  %2979 = icmp sgt i64 %2915, 2
  %2980 = add nsw i64 %2916, -1
  %2981 = add i32 %2914, 1
  br i1 %2979, label %2913, label %2982, !llvm.loop !1041

2982:                                             ; preds = %2972, %2910
  %2983 = phi i32 [ %2912, %2910 ], [ %2978, %2972 ]
  %2984 = icmp slt i32 %2983, %5
  br i1 %2984, label %2987, label %2985

2985:                                             ; preds = %2982
  %2986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2987:                                             ; preds = %2982
  %2988 = sext i32 %2983 to i64
  %2989 = getelementptr inbounds double, ptr %2450, i64 %2988
  %2990 = load double, ptr %2989, align 8, !tbaa !18
  %2991 = fptosi double %2990 to i32
  %2992 = load i32, ptr %2452, align 4, !tbaa !5
  %2993 = icmp sgt i32 %2992, %2991
  br i1 %2993, label %2994, label %2995

2994:                                             ; preds = %2987
  store i32 %2991, ptr %2452, align 4, !tbaa !5
  br label %2995

2995:                                             ; preds = %2994, %2987
  %2996 = add nuw nsw i32 %2911, 1
  br i1 %2763, label %2997, label %3047

2997:                                             ; preds = %2995
  %2998 = load i32, ptr %4, align 4, !tbaa !5
  %2999 = load i32, ptr %12, align 4, !tbaa !5
  %3000 = add nsw i32 %2999, -1
  %3001 = icmp slt i32 %2998, %3000
  br i1 %3001, label %3024, label %3002

3002:                                             ; preds = %2997
  %3003 = icmp eq i32 %2998, %3000
  br i1 %3003, label %3004, label %3040

3004:                                             ; preds = %3002
  store i32 0, ptr %4, align 4, !tbaa !5
  %3005 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3005, ptr %6, align 4, !tbaa !5
  br i1 %2768, label %3047, label %3006

3006:                                             ; preds = %3004, %3034
  %3007 = phi i64 [ %3038, %3034 ], [ 1, %3004 ]
  %3008 = getelementptr inbounds i32, ptr %4, i64 %3007
  %3009 = load i32, ptr %3008, align 4, !tbaa !5
  %3010 = getelementptr inbounds i32, ptr %12, i64 %3007
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = add nsw i32 %3011, -1
  %3013 = icmp slt i32 %3009, %3012
  br i1 %3013, label %3014, label %3032

3014:                                             ; preds = %3006
  br i1 %3001, label %3024, label %3015

3015:                                             ; preds = %3014
  %3016 = shl i64 %3007, 32
  %3017 = add i64 %3016, -4294967296
  %3018 = ashr exact i64 %3017, 32
  %3019 = getelementptr inbounds i32, ptr %7, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !5
  %3021 = getelementptr inbounds i32, ptr %6, i64 %3007
  %3022 = load i32, ptr %3021, align 4, !tbaa !5
  %3023 = add nsw i32 %3022, %3020
  store i32 %3023, ptr %3021, align 4, !tbaa !5
  br label %3042

3024:                                             ; preds = %2997, %3014
  %3025 = phi i32 [ %3009, %3014 ], [ %2998, %2997 ]
  %3026 = phi ptr [ %3008, %3014 ], [ %4, %2997 ]
  %3027 = phi i64 [ %3007, %3014 ], [ 0, %2997 ]
  %3028 = add nsw i32 %3025, 1
  store i32 %3028, ptr %3026, align 4, !tbaa !5
  %3029 = getelementptr inbounds i32, ptr %7, i64 %3027
  %3030 = load i32, ptr %3029, align 4, !tbaa !5
  %3031 = getelementptr inbounds i32, ptr %6, i64 %3027
  br label %3042

3032:                                             ; preds = %3006
  %3033 = icmp eq i32 %3009, %3012
  br i1 %3033, label %3034, label %3040

3034:                                             ; preds = %3032
  store i32 0, ptr %3008, align 4, !tbaa !5
  %3035 = getelementptr inbounds i32, ptr %8, i64 %3007
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3007
  store i32 %3036, ptr %3037, align 4, !tbaa !5
  %3038 = add nuw nsw i64 %3007, 1
  %3039 = icmp eq i64 %3038, %2766
  br i1 %3039, label %3047, label %3006, !llvm.loop !1042

3040:                                             ; preds = %3002, %3032
  %3041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3042:                                             ; preds = %3015, %3024
  %3043 = phi ptr [ %3031, %3024 ], [ %3008, %3015 ]
  %3044 = phi i32 [ %3030, %3024 ], [ 1, %3015 ]
  %3045 = load i32, ptr %3043, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, %3044
  store i32 %3046, ptr %3043, align 4, !tbaa !5
  br label %3047

3047:                                             ; preds = %3034, %3042, %3004, %2995
  %3048 = icmp eq i32 %2996, %5
  br i1 %3048, label %5477, label %2910, !llvm.loop !1043

3049:                                             ; preds = %2456
  %3050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1500, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

3051:                                             ; preds = %18
  %3052 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3053 = load ptr, ptr %3052, align 8, !tbaa !9
  %3054 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3055 = load ptr, ptr %3054, align 8, !tbaa !9
  %3056 = load double, ptr %3053, align 8, !tbaa !18
  %3057 = fptosi double %3056 to i64
  store i64 %3057, ptr %3055, align 8, !tbaa !120
  %3058 = icmp eq i32 %13, 0
  br i1 %3058, label %5477, label %3059

3059:                                             ; preds = %3051
  switch i32 %1, label %3656 [
    i32 1, label %3060
    i32 0, label %3360
  ]

3060:                                             ; preds = %3059
  %3061 = getelementptr inbounds i32, ptr %3, i64 %19
  %3062 = load i32, ptr %3061, align 4, !tbaa !5
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp sgt i32 %5, 0
  br i1 %3063, label %3074, label %3065

3065:                                             ; preds = %3060
  br i1 %3064, label %3066, label %5477

3066:                                             ; preds = %3065
  %3067 = icmp sgt i32 %13, 1
  %3068 = icmp sgt i32 %13, 0
  %3069 = add i32 %13, -2
  %3070 = zext i32 %3069 to i64
  %3071 = zext i32 %13 to i64
  %3072 = add nuw i32 %5, 1
  %3073 = icmp eq i32 %13, 1
  br label %3220

3074:                                             ; preds = %3060
  br i1 %3064, label %3075, label %5477

3075:                                             ; preds = %3074
  %3076 = icmp sgt i32 %13, 1
  %3077 = icmp sgt i32 %13, 0
  %3078 = add i32 %13, -2
  %3079 = zext i32 %3078 to i64
  %3080 = zext i32 %13 to i64
  %3081 = add nuw i32 %5, 1
  %3082 = icmp eq i32 %13, 1
  br label %3083

3083:                                             ; preds = %3075, %3218
  %3084 = phi i64 [ %3057, %3075 ], [ %3169, %3218 ]
  %3085 = phi i32 [ 0, %3075 ], [ %3170, %3218 ]
  %3086 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3076, label %3087, label %3156

3087:                                             ; preds = %3083, %3146
  %3088 = phi i32 [ %3155, %3146 ], [ 0, %3083 ]
  %3089 = phi i64 [ %3097, %3146 ], [ %3080, %3083 ]
  %3090 = phi i64 [ %3154, %3146 ], [ %3079, %3083 ]
  %3091 = phi i32 [ %3152, %3146 ], [ %3086, %3083 ]
  %3092 = sub i32 %3078, %3088
  %3093 = tail call i32 @llvm.smin.i32(i32 %3092, i32 0)
  %3094 = sub i32 %3092, %3093
  %3095 = zext i32 %3094 to i64
  %3096 = add nuw nsw i64 %3095, 1
  %3097 = add nsw i64 %3089, -1
  %3098 = icmp ult i32 %3094, 31
  br i1 %3098, label %3134, label %3099

3099:                                             ; preds = %3087
  %3100 = and i64 %3096, 8589934560
  %3101 = sub i64 %3090, %3100
  br label %3102

3102:                                             ; preds = %3102, %3099
  %3103 = phi i64 [ 0, %3099 ], [ %3126, %3102 ]
  %3104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3122, %3102 ]
  %3105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3123, %3102 ]
  %3106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3124, %3102 ]
  %3107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3125, %3102 ]
  %3108 = sub i64 %3090, %3103
  %3109 = getelementptr inbounds i32, ptr %9, i64 %3108
  %3110 = getelementptr inbounds i32, ptr %3109, i64 -7
  %3111 = load <8 x i32>, ptr %3110, align 4, !tbaa !5
  %3112 = shufflevector <8 x i32> %3111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3113 = getelementptr inbounds i32, ptr %3109, i64 -15
  %3114 = load <8 x i32>, ptr %3113, align 4, !tbaa !5
  %3115 = shufflevector <8 x i32> %3114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3116 = getelementptr inbounds i32, ptr %3109, i64 -23
  %3117 = load <8 x i32>, ptr %3116, align 4, !tbaa !5
  %3118 = shufflevector <8 x i32> %3117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3119 = getelementptr inbounds i32, ptr %3109, i64 -31
  %3120 = load <8 x i32>, ptr %3119, align 4, !tbaa !5
  %3121 = shufflevector <8 x i32> %3120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3122 = mul <8 x i32> %3112, %3104
  %3123 = mul <8 x i32> %3115, %3105
  %3124 = mul <8 x i32> %3118, %3106
  %3125 = mul <8 x i32> %3121, %3107
  %3126 = add nuw i64 %3103, 32
  %3127 = icmp eq i64 %3126, %3100
  br i1 %3127, label %3128, label %3102, !llvm.loop !1044

3128:                                             ; preds = %3102
  %3129 = mul <8 x i32> %3123, %3122
  %3130 = mul <8 x i32> %3124, %3129
  %3131 = mul <8 x i32> %3125, %3130
  %3132 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3131)
  %3133 = icmp eq i64 %3096, %3100
  br i1 %3133, label %3146, label %3134

3134:                                             ; preds = %3087, %3128
  %3135 = phi i64 [ %3090, %3087 ], [ %3101, %3128 ]
  %3136 = phi i32 [ 1, %3087 ], [ %3132, %3128 ]
  br label %3137

3137:                                             ; preds = %3134, %3137
  %3138 = phi i64 [ %3143, %3137 ], [ %3135, %3134 ]
  %3139 = phi i32 [ %3142, %3137 ], [ %3136, %3134 ]
  %3140 = getelementptr inbounds i32, ptr %9, i64 %3138
  %3141 = load i32, ptr %3140, align 4, !tbaa !5
  %3142 = mul nsw i32 %3141, %3139
  %3143 = add nsw i64 %3138, -1
  %3144 = trunc i64 %3138 to i32
  %3145 = icmp sgt i32 %3144, 0
  br i1 %3145, label %3137, label %3146, !llvm.loop !1045

3146:                                             ; preds = %3137, %3128
  %3147 = phi i32 [ %3132, %3128 ], [ %3142, %3137 ]
  %3148 = and i64 %3097, 4294967295
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3148
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = mul nsw i32 %3150, %3147
  %3152 = add nsw i32 %3151, %3091
  %3153 = icmp sgt i64 %3089, 2
  %3154 = add nsw i64 %3090, -1
  %3155 = add i32 %3088, 1
  br i1 %3153, label %3087, label %3156, !llvm.loop !1046

3156:                                             ; preds = %3146, %3083
  %3157 = phi i32 [ %3086, %3083 ], [ %3152, %3146 ]
  %3158 = sext i32 %3157 to i64
  %3159 = getelementptr inbounds double, ptr %2, i64 %3158
  %3160 = load double, ptr %3159, align 8, !tbaa !18
  %3161 = getelementptr inbounds double, ptr %3053, i64 %3158
  %3162 = load double, ptr %3161, align 8, !tbaa !18
  %3163 = fptosi double %3162 to i64
  %3164 = fcmp fast one double %3160, 0.000000e+00
  %3165 = icmp sgt i64 %3084, %3163
  %3166 = select i1 %3164, i1 %3165, i1 false
  br i1 %3166, label %3167, label %3168

3167:                                             ; preds = %3156
  store i64 %3163, ptr %3055, align 8, !tbaa !120
  br label %3168

3168:                                             ; preds = %3167, %3156
  %3169 = phi i64 [ %3163, %3167 ], [ %3084, %3156 ]
  %3170 = add nuw nsw i32 %3085, 1
  br i1 %3077, label %3171, label %3218

3171:                                             ; preds = %3168
  %3172 = load i32, ptr %4, align 4, !tbaa !5
  %3173 = load i32, ptr %12, align 4, !tbaa !5
  %3174 = add nsw i32 %3173, -1
  %3175 = icmp slt i32 %3172, %3174
  br i1 %3175, label %3195, label %3176

3176:                                             ; preds = %3171
  %3177 = icmp eq i32 %3172, %3174
  br i1 %3177, label %3178, label %3211

3178:                                             ; preds = %3176
  store i32 0, ptr %4, align 4, !tbaa !5
  %3179 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3179, ptr %6, align 4, !tbaa !5
  br i1 %3082, label %3218, label %3180

3180:                                             ; preds = %3178, %3205
  %3181 = phi i64 [ %3209, %3205 ], [ 1, %3178 ]
  %3182 = getelementptr inbounds i32, ptr %4, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = getelementptr inbounds i32, ptr %12, i64 %3181
  %3185 = load i32, ptr %3184, align 4, !tbaa !5
  %3186 = add nsw i32 %3185, -1
  %3187 = icmp slt i32 %3183, %3186
  br i1 %3187, label %3188, label %3203

3188:                                             ; preds = %3180
  br i1 %3175, label %3195, label %3189

3189:                                             ; preds = %3188
  %3190 = getelementptr inbounds i32, ptr %7, i64 %3181
  %3191 = load i32, ptr %3190, align 4, !tbaa !5
  %3192 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3193 = load i32, ptr %3192, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, %3191
  store i32 %3194, ptr %3192, align 4, !tbaa !5
  br label %3213

3195:                                             ; preds = %3171, %3188
  %3196 = phi i32 [ %3183, %3188 ], [ %3172, %3171 ]
  %3197 = phi ptr [ %3182, %3188 ], [ %4, %3171 ]
  %3198 = phi i64 [ %3181, %3188 ], [ 0, %3171 ]
  %3199 = add nsw i32 %3196, 1
  store i32 %3199, ptr %3197, align 4, !tbaa !5
  %3200 = getelementptr inbounds i32, ptr %7, i64 %3198
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %6, i64 %3198
  br label %3213

3203:                                             ; preds = %3180
  %3204 = icmp eq i32 %3183, %3186
  br i1 %3204, label %3205, label %3211

3205:                                             ; preds = %3203
  store i32 0, ptr %3182, align 4, !tbaa !5
  %3206 = getelementptr inbounds i32, ptr %8, i64 %3181
  %3207 = load i32, ptr %3206, align 4, !tbaa !5
  %3208 = getelementptr inbounds i32, ptr %6, i64 %3181
  store i32 %3207, ptr %3208, align 4, !tbaa !5
  %3209 = add nuw nsw i64 %3181, 1
  %3210 = icmp eq i64 %3209, %3080
  br i1 %3210, label %3218, label %3180, !llvm.loop !1047

3211:                                             ; preds = %3176, %3203
  %3212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3213:                                             ; preds = %3189, %3195
  %3214 = phi ptr [ %3202, %3195 ], [ %3182, %3189 ]
  %3215 = phi i32 [ %3201, %3195 ], [ 1, %3189 ]
  %3216 = load i32, ptr %3214, align 4, !tbaa !5
  %3217 = add nsw i32 %3216, %3215
  store i32 %3217, ptr %3214, align 4, !tbaa !5
  br label %3218

3218:                                             ; preds = %3205, %3213, %3178, %3168
  %3219 = icmp eq i32 %3170, %5
  br i1 %3219, label %5477, label %3083, !llvm.loop !1048

3220:                                             ; preds = %3066, %3358
  %3221 = phi i64 [ %3057, %3066 ], [ %3306, %3358 ]
  %3222 = phi i32 [ 0, %3066 ], [ %3307, %3358 ]
  %3223 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3067, label %3224, label %3293

3224:                                             ; preds = %3220, %3283
  %3225 = phi i32 [ %3292, %3283 ], [ 0, %3220 ]
  %3226 = phi i64 [ %3234, %3283 ], [ %3071, %3220 ]
  %3227 = phi i64 [ %3291, %3283 ], [ %3070, %3220 ]
  %3228 = phi i32 [ %3289, %3283 ], [ %3223, %3220 ]
  %3229 = sub i32 %3069, %3225
  %3230 = tail call i32 @llvm.smin.i32(i32 %3229, i32 0)
  %3231 = sub i32 %3229, %3230
  %3232 = zext i32 %3231 to i64
  %3233 = add nuw nsw i64 %3232, 1
  %3234 = add nsw i64 %3226, -1
  %3235 = icmp ult i32 %3231, 31
  br i1 %3235, label %3271, label %3236

3236:                                             ; preds = %3224
  %3237 = and i64 %3233, 8589934560
  %3238 = sub i64 %3227, %3237
  br label %3239

3239:                                             ; preds = %3239, %3236
  %3240 = phi i64 [ 0, %3236 ], [ %3263, %3239 ]
  %3241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3259, %3239 ]
  %3242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3260, %3239 ]
  %3243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3261, %3239 ]
  %3244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3262, %3239 ]
  %3245 = sub i64 %3227, %3240
  %3246 = getelementptr inbounds i32, ptr %11, i64 %3245
  %3247 = getelementptr inbounds i32, ptr %3246, i64 -7
  %3248 = load <8 x i32>, ptr %3247, align 4, !tbaa !5
  %3249 = shufflevector <8 x i32> %3248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3250 = getelementptr inbounds i32, ptr %3246, i64 -15
  %3251 = load <8 x i32>, ptr %3250, align 4, !tbaa !5
  %3252 = shufflevector <8 x i32> %3251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3253 = getelementptr inbounds i32, ptr %3246, i64 -23
  %3254 = load <8 x i32>, ptr %3253, align 4, !tbaa !5
  %3255 = shufflevector <8 x i32> %3254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3256 = getelementptr inbounds i32, ptr %3246, i64 -31
  %3257 = load <8 x i32>, ptr %3256, align 4, !tbaa !5
  %3258 = shufflevector <8 x i32> %3257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3259 = mul <8 x i32> %3249, %3241
  %3260 = mul <8 x i32> %3252, %3242
  %3261 = mul <8 x i32> %3255, %3243
  %3262 = mul <8 x i32> %3258, %3244
  %3263 = add nuw i64 %3240, 32
  %3264 = icmp eq i64 %3263, %3237
  br i1 %3264, label %3265, label %3239, !llvm.loop !1049

3265:                                             ; preds = %3239
  %3266 = mul <8 x i32> %3260, %3259
  %3267 = mul <8 x i32> %3261, %3266
  %3268 = mul <8 x i32> %3262, %3267
  %3269 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3268)
  %3270 = icmp eq i64 %3233, %3237
  br i1 %3270, label %3283, label %3271

3271:                                             ; preds = %3224, %3265
  %3272 = phi i64 [ %3227, %3224 ], [ %3238, %3265 ]
  %3273 = phi i32 [ 1, %3224 ], [ %3269, %3265 ]
  br label %3274

3274:                                             ; preds = %3271, %3274
  %3275 = phi i64 [ %3280, %3274 ], [ %3272, %3271 ]
  %3276 = phi i32 [ %3279, %3274 ], [ %3273, %3271 ]
  %3277 = getelementptr inbounds i32, ptr %11, i64 %3275
  %3278 = load i32, ptr %3277, align 4, !tbaa !5
  %3279 = mul nsw i32 %3278, %3276
  %3280 = add nsw i64 %3275, -1
  %3281 = trunc i64 %3275 to i32
  %3282 = icmp sgt i32 %3281, 0
  br i1 %3282, label %3274, label %3283, !llvm.loop !1050

3283:                                             ; preds = %3274, %3265
  %3284 = phi i32 [ %3269, %3265 ], [ %3279, %3274 ]
  %3285 = and i64 %3234, 4294967295
  %3286 = getelementptr inbounds i32, ptr %6, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = mul nsw i32 %3287, %3284
  %3289 = add nsw i32 %3288, %3228
  %3290 = icmp sgt i64 %3226, 2
  %3291 = add nsw i64 %3227, -1
  %3292 = add i32 %3225, 1
  br i1 %3290, label %3224, label %3293, !llvm.loop !1051

3293:                                             ; preds = %3283, %3220
  %3294 = phi i32 [ %3223, %3220 ], [ %3289, %3283 ]
  %3295 = icmp slt i32 %3294, %5
  br i1 %3295, label %3298, label %3296

3296:                                             ; preds = %3293
  %3297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3298:                                             ; preds = %3293
  %3299 = sext i32 %3294 to i64
  %3300 = getelementptr inbounds double, ptr %3053, i64 %3299
  %3301 = load double, ptr %3300, align 8, !tbaa !18
  %3302 = fptosi double %3301 to i64
  %3303 = icmp sgt i64 %3221, %3302
  br i1 %3303, label %3304, label %3305

3304:                                             ; preds = %3298
  store i64 %3302, ptr %3055, align 8, !tbaa !120
  br label %3305

3305:                                             ; preds = %3298, %3304
  %3306 = phi i64 [ %3221, %3298 ], [ %3302, %3304 ]
  %3307 = add nuw nsw i32 %3222, 1
  br i1 %3068, label %3308, label %3358

3308:                                             ; preds = %3305
  %3309 = load i32, ptr %4, align 4, !tbaa !5
  %3310 = load i32, ptr %12, align 4, !tbaa !5
  %3311 = add nsw i32 %3310, -1
  %3312 = icmp slt i32 %3309, %3311
  br i1 %3312, label %3335, label %3313

3313:                                             ; preds = %3308
  %3314 = icmp eq i32 %3309, %3311
  br i1 %3314, label %3315, label %3351

3315:                                             ; preds = %3313
  store i32 0, ptr %4, align 4, !tbaa !5
  %3316 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3316, ptr %6, align 4, !tbaa !5
  br i1 %3073, label %3358, label %3317

3317:                                             ; preds = %3315, %3345
  %3318 = phi i64 [ %3349, %3345 ], [ 1, %3315 ]
  %3319 = getelementptr inbounds i32, ptr %4, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = getelementptr inbounds i32, ptr %12, i64 %3318
  %3322 = load i32, ptr %3321, align 4, !tbaa !5
  %3323 = add nsw i32 %3322, -1
  %3324 = icmp slt i32 %3320, %3323
  br i1 %3324, label %3325, label %3343

3325:                                             ; preds = %3317
  br i1 %3312, label %3335, label %3326

3326:                                             ; preds = %3325
  %3327 = shl i64 %3318, 32
  %3328 = add i64 %3327, -4294967296
  %3329 = ashr exact i64 %3328, 32
  %3330 = getelementptr inbounds i32, ptr %7, i64 %3329
  %3331 = load i32, ptr %3330, align 4, !tbaa !5
  %3332 = getelementptr inbounds i32, ptr %6, i64 %3318
  %3333 = load i32, ptr %3332, align 4, !tbaa !5
  %3334 = add nsw i32 %3333, %3331
  store i32 %3334, ptr %3332, align 4, !tbaa !5
  br label %3353

3335:                                             ; preds = %3308, %3325
  %3336 = phi i32 [ %3320, %3325 ], [ %3309, %3308 ]
  %3337 = phi ptr [ %3319, %3325 ], [ %4, %3308 ]
  %3338 = phi i64 [ %3318, %3325 ], [ 0, %3308 ]
  %3339 = add nsw i32 %3336, 1
  store i32 %3339, ptr %3337, align 4, !tbaa !5
  %3340 = getelementptr inbounds i32, ptr %7, i64 %3338
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %6, i64 %3338
  br label %3353

3343:                                             ; preds = %3317
  %3344 = icmp eq i32 %3320, %3323
  br i1 %3344, label %3345, label %3351

3345:                                             ; preds = %3343
  store i32 0, ptr %3319, align 4, !tbaa !5
  %3346 = getelementptr inbounds i32, ptr %8, i64 %3318
  %3347 = load i32, ptr %3346, align 4, !tbaa !5
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3318
  store i32 %3347, ptr %3348, align 4, !tbaa !5
  %3349 = add nuw nsw i64 %3318, 1
  %3350 = icmp eq i64 %3349, %3071
  br i1 %3350, label %3358, label %3317, !llvm.loop !1052

3351:                                             ; preds = %3313, %3343
  %3352 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3353:                                             ; preds = %3326, %3335
  %3354 = phi ptr [ %3342, %3335 ], [ %3319, %3326 ]
  %3355 = phi i32 [ %3341, %3335 ], [ 1, %3326 ]
  %3356 = load i32, ptr %3354, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, %3355
  store i32 %3357, ptr %3354, align 4, !tbaa !5
  br label %3358

3358:                                             ; preds = %3345, %3353, %3315, %3305
  %3359 = icmp eq i32 %3307, %5
  br i1 %3359, label %5477, label %3220, !llvm.loop !1053

3360:                                             ; preds = %3059
  %3361 = getelementptr inbounds i32, ptr %3, i64 %19
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = icmp eq i32 %3362, 0
  %3364 = icmp sgt i32 %5, 0
  br i1 %3363, label %3374, label %3365

3365:                                             ; preds = %3360
  br i1 %3364, label %3366, label %5477

3366:                                             ; preds = %3365
  %3367 = icmp sgt i32 %13, 1
  %3368 = icmp sgt i32 %13, 0
  %3369 = add i32 %13, -2
  %3370 = zext i32 %3369 to i64
  %3371 = zext i32 %13 to i64
  %3372 = add nuw i32 %5, 1
  %3373 = icmp eq i32 %13, 1
  br label %3516

3374:                                             ; preds = %3360
  br i1 %3364, label %3375, label %5477

3375:                                             ; preds = %3374
  %3376 = icmp sgt i32 %13, 1
  %3377 = icmp sgt i32 %13, 0
  %3378 = add i32 %13, -2
  %3379 = zext i32 %3378 to i64
  %3380 = zext i32 %13 to i64
  %3381 = add nuw i32 %5, 1
  %3382 = icmp eq i32 %13, 1
  br label %3383

3383:                                             ; preds = %3375, %3514
  %3384 = phi i64 [ %3057, %3375 ], [ %3465, %3514 ]
  %3385 = phi i32 [ 0, %3375 ], [ %3466, %3514 ]
  %3386 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3376, label %3387, label %3456

3387:                                             ; preds = %3383, %3446
  %3388 = phi i32 [ %3455, %3446 ], [ 0, %3383 ]
  %3389 = phi i64 [ %3397, %3446 ], [ %3380, %3383 ]
  %3390 = phi i64 [ %3454, %3446 ], [ %3379, %3383 ]
  %3391 = phi i32 [ %3452, %3446 ], [ %3386, %3383 ]
  %3392 = sub i32 %3378, %3388
  %3393 = tail call i32 @llvm.smin.i32(i32 %3392, i32 0)
  %3394 = sub i32 %3392, %3393
  %3395 = zext i32 %3394 to i64
  %3396 = add nuw nsw i64 %3395, 1
  %3397 = add nsw i64 %3389, -1
  %3398 = icmp ult i32 %3394, 31
  br i1 %3398, label %3434, label %3399

3399:                                             ; preds = %3387
  %3400 = and i64 %3396, 8589934560
  %3401 = sub i64 %3390, %3400
  br label %3402

3402:                                             ; preds = %3402, %3399
  %3403 = phi i64 [ 0, %3399 ], [ %3426, %3402 ]
  %3404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3422, %3402 ]
  %3405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3423, %3402 ]
  %3406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3424, %3402 ]
  %3407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3425, %3402 ]
  %3408 = sub i64 %3390, %3403
  %3409 = getelementptr inbounds i32, ptr %9, i64 %3408
  %3410 = getelementptr inbounds i32, ptr %3409, i64 -7
  %3411 = load <8 x i32>, ptr %3410, align 4, !tbaa !5
  %3412 = shufflevector <8 x i32> %3411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3413 = getelementptr inbounds i32, ptr %3409, i64 -15
  %3414 = load <8 x i32>, ptr %3413, align 4, !tbaa !5
  %3415 = shufflevector <8 x i32> %3414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3416 = getelementptr inbounds i32, ptr %3409, i64 -23
  %3417 = load <8 x i32>, ptr %3416, align 4, !tbaa !5
  %3418 = shufflevector <8 x i32> %3417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3419 = getelementptr inbounds i32, ptr %3409, i64 -31
  %3420 = load <8 x i32>, ptr %3419, align 4, !tbaa !5
  %3421 = shufflevector <8 x i32> %3420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3422 = mul <8 x i32> %3412, %3404
  %3423 = mul <8 x i32> %3415, %3405
  %3424 = mul <8 x i32> %3418, %3406
  %3425 = mul <8 x i32> %3421, %3407
  %3426 = add nuw i64 %3403, 32
  %3427 = icmp eq i64 %3426, %3400
  br i1 %3427, label %3428, label %3402, !llvm.loop !1054

3428:                                             ; preds = %3402
  %3429 = mul <8 x i32> %3423, %3422
  %3430 = mul <8 x i32> %3424, %3429
  %3431 = mul <8 x i32> %3425, %3430
  %3432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3431)
  %3433 = icmp eq i64 %3396, %3400
  br i1 %3433, label %3446, label %3434

3434:                                             ; preds = %3387, %3428
  %3435 = phi i64 [ %3390, %3387 ], [ %3401, %3428 ]
  %3436 = phi i32 [ 1, %3387 ], [ %3432, %3428 ]
  br label %3437

3437:                                             ; preds = %3434, %3437
  %3438 = phi i64 [ %3443, %3437 ], [ %3435, %3434 ]
  %3439 = phi i32 [ %3442, %3437 ], [ %3436, %3434 ]
  %3440 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = mul nsw i32 %3441, %3439
  %3443 = add nsw i64 %3438, -1
  %3444 = trunc i64 %3438 to i32
  %3445 = icmp sgt i32 %3444, 0
  br i1 %3445, label %3437, label %3446, !llvm.loop !1055

3446:                                             ; preds = %3437, %3428
  %3447 = phi i32 [ %3432, %3428 ], [ %3442, %3437 ]
  %3448 = and i64 %3397, 4294967295
  %3449 = getelementptr inbounds i32, ptr %6, i64 %3448
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = mul nsw i32 %3450, %3447
  %3452 = add nsw i32 %3451, %3391
  %3453 = icmp sgt i64 %3389, 2
  %3454 = add nsw i64 %3390, -1
  %3455 = add i32 %3388, 1
  br i1 %3453, label %3387, label %3456, !llvm.loop !1056

3456:                                             ; preds = %3446, %3383
  %3457 = phi i32 [ %3386, %3383 ], [ %3452, %3446 ]
  %3458 = sext i32 %3457 to i64
  %3459 = getelementptr inbounds double, ptr %3053, i64 %3458
  %3460 = load double, ptr %3459, align 8, !tbaa !18
  %3461 = fptosi double %3460 to i64
  %3462 = icmp sgt i64 %3384, %3461
  br i1 %3462, label %3463, label %3464

3463:                                             ; preds = %3456
  store i64 %3461, ptr %3055, align 8, !tbaa !120
  br label %3464

3464:                                             ; preds = %3463, %3456
  %3465 = phi i64 [ %3461, %3463 ], [ %3384, %3456 ]
  %3466 = add nuw nsw i32 %3385, 1
  br i1 %3377, label %3467, label %3514

3467:                                             ; preds = %3464
  %3468 = load i32, ptr %4, align 4, !tbaa !5
  %3469 = load i32, ptr %12, align 4, !tbaa !5
  %3470 = add nsw i32 %3469, -1
  %3471 = icmp slt i32 %3468, %3470
  br i1 %3471, label %3491, label %3472

3472:                                             ; preds = %3467
  %3473 = icmp eq i32 %3468, %3470
  br i1 %3473, label %3474, label %3507

3474:                                             ; preds = %3472
  store i32 0, ptr %4, align 4, !tbaa !5
  %3475 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3475, ptr %6, align 4, !tbaa !5
  br i1 %3382, label %3514, label %3476

3476:                                             ; preds = %3474, %3501
  %3477 = phi i64 [ %3505, %3501 ], [ 1, %3474 ]
  %3478 = getelementptr inbounds i32, ptr %4, i64 %3477
  %3479 = load i32, ptr %3478, align 4, !tbaa !5
  %3480 = getelementptr inbounds i32, ptr %12, i64 %3477
  %3481 = load i32, ptr %3480, align 4, !tbaa !5
  %3482 = add nsw i32 %3481, -1
  %3483 = icmp slt i32 %3479, %3482
  br i1 %3483, label %3484, label %3499

3484:                                             ; preds = %3476
  br i1 %3471, label %3491, label %3485

3485:                                             ; preds = %3484
  %3486 = getelementptr inbounds i32, ptr %7, i64 %3477
  %3487 = load i32, ptr %3486, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %6, i64 %3477
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = add nsw i32 %3489, %3487
  store i32 %3490, ptr %3488, align 4, !tbaa !5
  br label %3509

3491:                                             ; preds = %3467, %3484
  %3492 = phi i32 [ %3479, %3484 ], [ %3468, %3467 ]
  %3493 = phi ptr [ %3478, %3484 ], [ %4, %3467 ]
  %3494 = phi i64 [ %3477, %3484 ], [ 0, %3467 ]
  %3495 = add nsw i32 %3492, 1
  store i32 %3495, ptr %3493, align 4, !tbaa !5
  %3496 = getelementptr inbounds i32, ptr %7, i64 %3494
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = getelementptr inbounds i32, ptr %6, i64 %3494
  br label %3509

3499:                                             ; preds = %3476
  %3500 = icmp eq i32 %3479, %3482
  br i1 %3500, label %3501, label %3507

3501:                                             ; preds = %3499
  store i32 0, ptr %3478, align 4, !tbaa !5
  %3502 = getelementptr inbounds i32, ptr %8, i64 %3477
  %3503 = load i32, ptr %3502, align 4, !tbaa !5
  %3504 = getelementptr inbounds i32, ptr %6, i64 %3477
  store i32 %3503, ptr %3504, align 4, !tbaa !5
  %3505 = add nuw nsw i64 %3477, 1
  %3506 = icmp eq i64 %3505, %3380
  br i1 %3506, label %3514, label %3476, !llvm.loop !1057

3507:                                             ; preds = %3472, %3499
  %3508 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3509:                                             ; preds = %3485, %3491
  %3510 = phi ptr [ %3498, %3491 ], [ %3478, %3485 ]
  %3511 = phi i32 [ %3497, %3491 ], [ 1, %3485 ]
  %3512 = load i32, ptr %3510, align 4, !tbaa !5
  %3513 = add nsw i32 %3512, %3511
  store i32 %3513, ptr %3510, align 4, !tbaa !5
  br label %3514

3514:                                             ; preds = %3501, %3509, %3474, %3464
  %3515 = icmp eq i32 %3466, %5
  br i1 %3515, label %5477, label %3383, !llvm.loop !1058

3516:                                             ; preds = %3366, %3654
  %3517 = phi i64 [ %3057, %3366 ], [ %3602, %3654 ]
  %3518 = phi i32 [ 0, %3366 ], [ %3603, %3654 ]
  %3519 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3367, label %3520, label %3589

3520:                                             ; preds = %3516, %3579
  %3521 = phi i32 [ %3588, %3579 ], [ 0, %3516 ]
  %3522 = phi i64 [ %3530, %3579 ], [ %3371, %3516 ]
  %3523 = phi i64 [ %3587, %3579 ], [ %3370, %3516 ]
  %3524 = phi i32 [ %3585, %3579 ], [ %3519, %3516 ]
  %3525 = sub i32 %3369, %3521
  %3526 = tail call i32 @llvm.smin.i32(i32 %3525, i32 0)
  %3527 = sub i32 %3525, %3526
  %3528 = zext i32 %3527 to i64
  %3529 = add nuw nsw i64 %3528, 1
  %3530 = add nsw i64 %3522, -1
  %3531 = icmp ult i32 %3527, 31
  br i1 %3531, label %3567, label %3532

3532:                                             ; preds = %3520
  %3533 = and i64 %3529, 8589934560
  %3534 = sub i64 %3523, %3533
  br label %3535

3535:                                             ; preds = %3535, %3532
  %3536 = phi i64 [ 0, %3532 ], [ %3559, %3535 ]
  %3537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3555, %3535 ]
  %3538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3556, %3535 ]
  %3539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3557, %3535 ]
  %3540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3558, %3535 ]
  %3541 = sub i64 %3523, %3536
  %3542 = getelementptr inbounds i32, ptr %11, i64 %3541
  %3543 = getelementptr inbounds i32, ptr %3542, i64 -7
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !5
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = getelementptr inbounds i32, ptr %3542, i64 -15
  %3547 = load <8 x i32>, ptr %3546, align 4, !tbaa !5
  %3548 = shufflevector <8 x i32> %3547, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3549 = getelementptr inbounds i32, ptr %3542, i64 -23
  %3550 = load <8 x i32>, ptr %3549, align 4, !tbaa !5
  %3551 = shufflevector <8 x i32> %3550, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3552 = getelementptr inbounds i32, ptr %3542, i64 -31
  %3553 = load <8 x i32>, ptr %3552, align 4, !tbaa !5
  %3554 = shufflevector <8 x i32> %3553, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3555 = mul <8 x i32> %3545, %3537
  %3556 = mul <8 x i32> %3548, %3538
  %3557 = mul <8 x i32> %3551, %3539
  %3558 = mul <8 x i32> %3554, %3540
  %3559 = add nuw i64 %3536, 32
  %3560 = icmp eq i64 %3559, %3533
  br i1 %3560, label %3561, label %3535, !llvm.loop !1059

3561:                                             ; preds = %3535
  %3562 = mul <8 x i32> %3556, %3555
  %3563 = mul <8 x i32> %3557, %3562
  %3564 = mul <8 x i32> %3558, %3563
  %3565 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3564)
  %3566 = icmp eq i64 %3529, %3533
  br i1 %3566, label %3579, label %3567

3567:                                             ; preds = %3520, %3561
  %3568 = phi i64 [ %3523, %3520 ], [ %3534, %3561 ]
  %3569 = phi i32 [ 1, %3520 ], [ %3565, %3561 ]
  br label %3570

3570:                                             ; preds = %3567, %3570
  %3571 = phi i64 [ %3576, %3570 ], [ %3568, %3567 ]
  %3572 = phi i32 [ %3575, %3570 ], [ %3569, %3567 ]
  %3573 = getelementptr inbounds i32, ptr %11, i64 %3571
  %3574 = load i32, ptr %3573, align 4, !tbaa !5
  %3575 = mul nsw i32 %3574, %3572
  %3576 = add nsw i64 %3571, -1
  %3577 = trunc i64 %3571 to i32
  %3578 = icmp sgt i32 %3577, 0
  br i1 %3578, label %3570, label %3579, !llvm.loop !1060

3579:                                             ; preds = %3570, %3561
  %3580 = phi i32 [ %3565, %3561 ], [ %3575, %3570 ]
  %3581 = and i64 %3530, 4294967295
  %3582 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = mul nsw i32 %3583, %3580
  %3585 = add nsw i32 %3584, %3524
  %3586 = icmp sgt i64 %3522, 2
  %3587 = add nsw i64 %3523, -1
  %3588 = add i32 %3521, 1
  br i1 %3586, label %3520, label %3589, !llvm.loop !1061

3589:                                             ; preds = %3579, %3516
  %3590 = phi i32 [ %3519, %3516 ], [ %3585, %3579 ]
  %3591 = icmp slt i32 %3590, %5
  br i1 %3591, label %3594, label %3592

3592:                                             ; preds = %3589
  %3593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3594:                                             ; preds = %3589
  %3595 = sext i32 %3590 to i64
  %3596 = getelementptr inbounds double, ptr %3053, i64 %3595
  %3597 = load double, ptr %3596, align 8, !tbaa !18
  %3598 = fptosi double %3597 to i64
  %3599 = icmp sgt i64 %3517, %3598
  br i1 %3599, label %3600, label %3601

3600:                                             ; preds = %3594
  store i64 %3598, ptr %3055, align 8, !tbaa !120
  br label %3601

3601:                                             ; preds = %3600, %3594
  %3602 = phi i64 [ %3598, %3600 ], [ %3517, %3594 ]
  %3603 = add nuw nsw i32 %3518, 1
  br i1 %3368, label %3604, label %3654

3604:                                             ; preds = %3601
  %3605 = load i32, ptr %4, align 4, !tbaa !5
  %3606 = load i32, ptr %12, align 4, !tbaa !5
  %3607 = add nsw i32 %3606, -1
  %3608 = icmp slt i32 %3605, %3607
  br i1 %3608, label %3631, label %3609

3609:                                             ; preds = %3604
  %3610 = icmp eq i32 %3605, %3607
  br i1 %3610, label %3611, label %3647

3611:                                             ; preds = %3609
  store i32 0, ptr %4, align 4, !tbaa !5
  %3612 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3612, ptr %6, align 4, !tbaa !5
  br i1 %3373, label %3654, label %3613

3613:                                             ; preds = %3611, %3641
  %3614 = phi i64 [ %3645, %3641 ], [ 1, %3611 ]
  %3615 = getelementptr inbounds i32, ptr %4, i64 %3614
  %3616 = load i32, ptr %3615, align 4, !tbaa !5
  %3617 = getelementptr inbounds i32, ptr %12, i64 %3614
  %3618 = load i32, ptr %3617, align 4, !tbaa !5
  %3619 = add nsw i32 %3618, -1
  %3620 = icmp slt i32 %3616, %3619
  br i1 %3620, label %3621, label %3639

3621:                                             ; preds = %3613
  br i1 %3608, label %3631, label %3622

3622:                                             ; preds = %3621
  %3623 = shl i64 %3614, 32
  %3624 = add i64 %3623, -4294967296
  %3625 = ashr exact i64 %3624, 32
  %3626 = getelementptr inbounds i32, ptr %7, i64 %3625
  %3627 = load i32, ptr %3626, align 4, !tbaa !5
  %3628 = getelementptr inbounds i32, ptr %6, i64 %3614
  %3629 = load i32, ptr %3628, align 4, !tbaa !5
  %3630 = add nsw i32 %3629, %3627
  store i32 %3630, ptr %3628, align 4, !tbaa !5
  br label %3649

3631:                                             ; preds = %3604, %3621
  %3632 = phi i32 [ %3616, %3621 ], [ %3605, %3604 ]
  %3633 = phi ptr [ %3615, %3621 ], [ %4, %3604 ]
  %3634 = phi i64 [ %3614, %3621 ], [ 0, %3604 ]
  %3635 = add nsw i32 %3632, 1
  store i32 %3635, ptr %3633, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %7, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = getelementptr inbounds i32, ptr %6, i64 %3634
  br label %3649

3639:                                             ; preds = %3613
  %3640 = icmp eq i32 %3616, %3619
  br i1 %3640, label %3641, label %3647

3641:                                             ; preds = %3639
  store i32 0, ptr %3615, align 4, !tbaa !5
  %3642 = getelementptr inbounds i32, ptr %8, i64 %3614
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3614
  store i32 %3643, ptr %3644, align 4, !tbaa !5
  %3645 = add nuw nsw i64 %3614, 1
  %3646 = icmp eq i64 %3645, %3371
  br i1 %3646, label %3654, label %3613, !llvm.loop !1062

3647:                                             ; preds = %3609, %3639
  %3648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3649:                                             ; preds = %3622, %3631
  %3650 = phi ptr [ %3638, %3631 ], [ %3615, %3622 ]
  %3651 = phi i32 [ %3637, %3631 ], [ 1, %3622 ]
  %3652 = load i32, ptr %3650, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, %3651
  store i32 %3653, ptr %3650, align 4, !tbaa !5
  br label %3654

3654:                                             ; preds = %3641, %3649, %3611, %3601
  %3655 = icmp eq i32 %3603, %5
  br i1 %3655, label %5477, label %3516, !llvm.loop !1063

3656:                                             ; preds = %3059
  %3657 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1505, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

3658:                                             ; preds = %18
  %3659 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3660 = load ptr, ptr %3659, align 8, !tbaa !9
  %3661 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3662 = load ptr, ptr %3661, align 8, !tbaa !9
  %3663 = load double, ptr %3660, align 8, !tbaa !18
  store double %3663, ptr %3662, align 8, !tbaa !18
  %3664 = icmp eq i32 %13, 0
  br i1 %3664, label %3665, label %3669

3665:                                             ; preds = %3658
  %3666 = load double, ptr %3660, align 8, !tbaa !18
  %3667 = fcmp fast ogt double %3663, %3666
  br i1 %3667, label %3668, label %5477

3668:                                             ; preds = %3665
  store double %3666, ptr %3662, align 8, !tbaa !18
  br label %5477

3669:                                             ; preds = %3658
  switch i32 %1, label %4262 [
    i32 1, label %3670
    i32 0, label %3968
  ]

3670:                                             ; preds = %3669
  %3671 = getelementptr inbounds i32, ptr %3, i64 %19
  %3672 = load i32, ptr %3671, align 4, !tbaa !5
  %3673 = icmp eq i32 %3672, 0
  %3674 = icmp sgt i32 %5, 0
  br i1 %3673, label %3684, label %3675

3675:                                             ; preds = %3670
  br i1 %3674, label %3676, label %5477

3676:                                             ; preds = %3675
  %3677 = icmp sgt i32 %13, 1
  %3678 = icmp sgt i32 %13, 0
  %3679 = add i32 %13, -2
  %3680 = zext i32 %3679 to i64
  %3681 = zext i32 %13 to i64
  %3682 = add nuw i32 %5, 1
  %3683 = icmp eq i32 %13, 1
  br label %3829

3684:                                             ; preds = %3670
  br i1 %3674, label %3685, label %5477

3685:                                             ; preds = %3684
  %3686 = icmp sgt i32 %13, 1
  %3687 = icmp sgt i32 %13, 0
  %3688 = add i32 %13, -2
  %3689 = zext i32 %3688 to i64
  %3690 = zext i32 %13 to i64
  %3691 = add nuw i32 %5, 1
  %3692 = icmp eq i32 %13, 1
  br label %3693

3693:                                             ; preds = %3685, %3827
  %3694 = phi double [ %3663, %3685 ], [ %3778, %3827 ]
  %3695 = phi i32 [ 0, %3685 ], [ %3779, %3827 ]
  %3696 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3686, label %3697, label %3766

3697:                                             ; preds = %3693, %3756
  %3698 = phi i32 [ %3765, %3756 ], [ 0, %3693 ]
  %3699 = phi i64 [ %3707, %3756 ], [ %3690, %3693 ]
  %3700 = phi i64 [ %3764, %3756 ], [ %3689, %3693 ]
  %3701 = phi i32 [ %3762, %3756 ], [ %3696, %3693 ]
  %3702 = sub i32 %3688, %3698
  %3703 = tail call i32 @llvm.smin.i32(i32 %3702, i32 0)
  %3704 = sub i32 %3702, %3703
  %3705 = zext i32 %3704 to i64
  %3706 = add nuw nsw i64 %3705, 1
  %3707 = add nsw i64 %3699, -1
  %3708 = icmp ult i32 %3704, 31
  br i1 %3708, label %3744, label %3709

3709:                                             ; preds = %3697
  %3710 = and i64 %3706, 8589934560
  %3711 = sub i64 %3700, %3710
  br label %3712

3712:                                             ; preds = %3712, %3709
  %3713 = phi i64 [ 0, %3709 ], [ %3736, %3712 ]
  %3714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3732, %3712 ]
  %3715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3733, %3712 ]
  %3716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3734, %3712 ]
  %3717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3735, %3712 ]
  %3718 = sub i64 %3700, %3713
  %3719 = getelementptr inbounds i32, ptr %9, i64 %3718
  %3720 = getelementptr inbounds i32, ptr %3719, i64 -7
  %3721 = load <8 x i32>, ptr %3720, align 4, !tbaa !5
  %3722 = shufflevector <8 x i32> %3721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3723 = getelementptr inbounds i32, ptr %3719, i64 -15
  %3724 = load <8 x i32>, ptr %3723, align 4, !tbaa !5
  %3725 = shufflevector <8 x i32> %3724, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3726 = getelementptr inbounds i32, ptr %3719, i64 -23
  %3727 = load <8 x i32>, ptr %3726, align 4, !tbaa !5
  %3728 = shufflevector <8 x i32> %3727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3729 = getelementptr inbounds i32, ptr %3719, i64 -31
  %3730 = load <8 x i32>, ptr %3729, align 4, !tbaa !5
  %3731 = shufflevector <8 x i32> %3730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3732 = mul <8 x i32> %3722, %3714
  %3733 = mul <8 x i32> %3725, %3715
  %3734 = mul <8 x i32> %3728, %3716
  %3735 = mul <8 x i32> %3731, %3717
  %3736 = add nuw i64 %3713, 32
  %3737 = icmp eq i64 %3736, %3710
  br i1 %3737, label %3738, label %3712, !llvm.loop !1064

3738:                                             ; preds = %3712
  %3739 = mul <8 x i32> %3733, %3732
  %3740 = mul <8 x i32> %3734, %3739
  %3741 = mul <8 x i32> %3735, %3740
  %3742 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3741)
  %3743 = icmp eq i64 %3706, %3710
  br i1 %3743, label %3756, label %3744

3744:                                             ; preds = %3697, %3738
  %3745 = phi i64 [ %3700, %3697 ], [ %3711, %3738 ]
  %3746 = phi i32 [ 1, %3697 ], [ %3742, %3738 ]
  br label %3747

3747:                                             ; preds = %3744, %3747
  %3748 = phi i64 [ %3753, %3747 ], [ %3745, %3744 ]
  %3749 = phi i32 [ %3752, %3747 ], [ %3746, %3744 ]
  %3750 = getelementptr inbounds i32, ptr %9, i64 %3748
  %3751 = load i32, ptr %3750, align 4, !tbaa !5
  %3752 = mul nsw i32 %3751, %3749
  %3753 = add nsw i64 %3748, -1
  %3754 = trunc i64 %3748 to i32
  %3755 = icmp sgt i32 %3754, 0
  br i1 %3755, label %3747, label %3756, !llvm.loop !1065

3756:                                             ; preds = %3747, %3738
  %3757 = phi i32 [ %3742, %3738 ], [ %3752, %3747 ]
  %3758 = and i64 %3707, 4294967295
  %3759 = getelementptr inbounds i32, ptr %6, i64 %3758
  %3760 = load i32, ptr %3759, align 4, !tbaa !5
  %3761 = mul nsw i32 %3760, %3757
  %3762 = add nsw i32 %3761, %3701
  %3763 = icmp sgt i64 %3699, 2
  %3764 = add nsw i64 %3700, -1
  %3765 = add i32 %3698, 1
  br i1 %3763, label %3697, label %3766, !llvm.loop !1066

3766:                                             ; preds = %3756, %3693
  %3767 = phi i32 [ %3696, %3693 ], [ %3762, %3756 ]
  %3768 = sext i32 %3767 to i64
  %3769 = getelementptr inbounds double, ptr %2, i64 %3768
  %3770 = load double, ptr %3769, align 8, !tbaa !18
  %3771 = getelementptr inbounds double, ptr %3660, i64 %3768
  %3772 = load double, ptr %3771, align 8, !tbaa !18
  %3773 = fcmp fast one double %3770, 0.000000e+00
  %3774 = fcmp fast ogt double %3694, %3772
  %3775 = select i1 %3773, i1 %3774, i1 false
  br i1 %3775, label %3776, label %3777

3776:                                             ; preds = %3766
  store double %3772, ptr %3662, align 8, !tbaa !18
  br label %3777

3777:                                             ; preds = %3776, %3766
  %3778 = phi double [ %3772, %3776 ], [ %3694, %3766 ]
  %3779 = add nuw nsw i32 %3695, 1
  br i1 %3687, label %3780, label %3827

3780:                                             ; preds = %3777
  %3781 = load i32, ptr %4, align 4, !tbaa !5
  %3782 = load i32, ptr %12, align 4, !tbaa !5
  %3783 = add nsw i32 %3782, -1
  %3784 = icmp slt i32 %3781, %3783
  br i1 %3784, label %3804, label %3785

3785:                                             ; preds = %3780
  %3786 = icmp eq i32 %3781, %3783
  br i1 %3786, label %3787, label %3820

3787:                                             ; preds = %3785
  store i32 0, ptr %4, align 4, !tbaa !5
  %3788 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3788, ptr %6, align 4, !tbaa !5
  br i1 %3692, label %3827, label %3789

3789:                                             ; preds = %3787, %3814
  %3790 = phi i64 [ %3818, %3814 ], [ 1, %3787 ]
  %3791 = getelementptr inbounds i32, ptr %4, i64 %3790
  %3792 = load i32, ptr %3791, align 4, !tbaa !5
  %3793 = getelementptr inbounds i32, ptr %12, i64 %3790
  %3794 = load i32, ptr %3793, align 4, !tbaa !5
  %3795 = add nsw i32 %3794, -1
  %3796 = icmp slt i32 %3792, %3795
  br i1 %3796, label %3797, label %3812

3797:                                             ; preds = %3789
  br i1 %3784, label %3804, label %3798

3798:                                             ; preds = %3797
  %3799 = getelementptr inbounds i32, ptr %7, i64 %3790
  %3800 = load i32, ptr %3799, align 4, !tbaa !5
  %3801 = getelementptr inbounds i32, ptr %6, i64 %3790
  %3802 = load i32, ptr %3801, align 4, !tbaa !5
  %3803 = add nsw i32 %3802, %3800
  store i32 %3803, ptr %3801, align 4, !tbaa !5
  br label %3822

3804:                                             ; preds = %3780, %3797
  %3805 = phi i32 [ %3792, %3797 ], [ %3781, %3780 ]
  %3806 = phi ptr [ %3791, %3797 ], [ %4, %3780 ]
  %3807 = phi i64 [ %3790, %3797 ], [ 0, %3780 ]
  %3808 = add nsw i32 %3805, 1
  store i32 %3808, ptr %3806, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %7, i64 %3807
  %3810 = load i32, ptr %3809, align 4, !tbaa !5
  %3811 = getelementptr inbounds i32, ptr %6, i64 %3807
  br label %3822

3812:                                             ; preds = %3789
  %3813 = icmp eq i32 %3792, %3795
  br i1 %3813, label %3814, label %3820

3814:                                             ; preds = %3812
  store i32 0, ptr %3791, align 4, !tbaa !5
  %3815 = getelementptr inbounds i32, ptr %8, i64 %3790
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %6, i64 %3790
  store i32 %3816, ptr %3817, align 4, !tbaa !5
  %3818 = add nuw nsw i64 %3790, 1
  %3819 = icmp eq i64 %3818, %3690
  br i1 %3819, label %3827, label %3789, !llvm.loop !1067

3820:                                             ; preds = %3785, %3812
  %3821 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3822:                                             ; preds = %3798, %3804
  %3823 = phi ptr [ %3811, %3804 ], [ %3791, %3798 ]
  %3824 = phi i32 [ %3810, %3804 ], [ 1, %3798 ]
  %3825 = load i32, ptr %3823, align 4, !tbaa !5
  %3826 = add nsw i32 %3825, %3824
  store i32 %3826, ptr %3823, align 4, !tbaa !5
  br label %3827

3827:                                             ; preds = %3814, %3822, %3787, %3777
  %3828 = icmp eq i32 %3779, %5
  br i1 %3828, label %5477, label %3693, !llvm.loop !1068

3829:                                             ; preds = %3676, %3966
  %3830 = phi double [ %3663, %3676 ], [ %3914, %3966 ]
  %3831 = phi i32 [ 0, %3676 ], [ %3915, %3966 ]
  %3832 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3677, label %3833, label %3902

3833:                                             ; preds = %3829, %3892
  %3834 = phi i32 [ %3901, %3892 ], [ 0, %3829 ]
  %3835 = phi i64 [ %3843, %3892 ], [ %3681, %3829 ]
  %3836 = phi i64 [ %3900, %3892 ], [ %3680, %3829 ]
  %3837 = phi i32 [ %3898, %3892 ], [ %3832, %3829 ]
  %3838 = sub i32 %3679, %3834
  %3839 = tail call i32 @llvm.smin.i32(i32 %3838, i32 0)
  %3840 = sub i32 %3838, %3839
  %3841 = zext i32 %3840 to i64
  %3842 = add nuw nsw i64 %3841, 1
  %3843 = add nsw i64 %3835, -1
  %3844 = icmp ult i32 %3840, 31
  br i1 %3844, label %3880, label %3845

3845:                                             ; preds = %3833
  %3846 = and i64 %3842, 8589934560
  %3847 = sub i64 %3836, %3846
  br label %3848

3848:                                             ; preds = %3848, %3845
  %3849 = phi i64 [ 0, %3845 ], [ %3872, %3848 ]
  %3850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3868, %3848 ]
  %3851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3869, %3848 ]
  %3852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3870, %3848 ]
  %3853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3871, %3848 ]
  %3854 = sub i64 %3836, %3849
  %3855 = getelementptr inbounds i32, ptr %11, i64 %3854
  %3856 = getelementptr inbounds i32, ptr %3855, i64 -7
  %3857 = load <8 x i32>, ptr %3856, align 4, !tbaa !5
  %3858 = shufflevector <8 x i32> %3857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3859 = getelementptr inbounds i32, ptr %3855, i64 -15
  %3860 = load <8 x i32>, ptr %3859, align 4, !tbaa !5
  %3861 = shufflevector <8 x i32> %3860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3862 = getelementptr inbounds i32, ptr %3855, i64 -23
  %3863 = load <8 x i32>, ptr %3862, align 4, !tbaa !5
  %3864 = shufflevector <8 x i32> %3863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3865 = getelementptr inbounds i32, ptr %3855, i64 -31
  %3866 = load <8 x i32>, ptr %3865, align 4, !tbaa !5
  %3867 = shufflevector <8 x i32> %3866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3868 = mul <8 x i32> %3858, %3850
  %3869 = mul <8 x i32> %3861, %3851
  %3870 = mul <8 x i32> %3864, %3852
  %3871 = mul <8 x i32> %3867, %3853
  %3872 = add nuw i64 %3849, 32
  %3873 = icmp eq i64 %3872, %3846
  br i1 %3873, label %3874, label %3848, !llvm.loop !1069

3874:                                             ; preds = %3848
  %3875 = mul <8 x i32> %3869, %3868
  %3876 = mul <8 x i32> %3870, %3875
  %3877 = mul <8 x i32> %3871, %3876
  %3878 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3877)
  %3879 = icmp eq i64 %3842, %3846
  br i1 %3879, label %3892, label %3880

3880:                                             ; preds = %3833, %3874
  %3881 = phi i64 [ %3836, %3833 ], [ %3847, %3874 ]
  %3882 = phi i32 [ 1, %3833 ], [ %3878, %3874 ]
  br label %3883

3883:                                             ; preds = %3880, %3883
  %3884 = phi i64 [ %3889, %3883 ], [ %3881, %3880 ]
  %3885 = phi i32 [ %3888, %3883 ], [ %3882, %3880 ]
  %3886 = getelementptr inbounds i32, ptr %11, i64 %3884
  %3887 = load i32, ptr %3886, align 4, !tbaa !5
  %3888 = mul nsw i32 %3887, %3885
  %3889 = add nsw i64 %3884, -1
  %3890 = trunc i64 %3884 to i32
  %3891 = icmp sgt i32 %3890, 0
  br i1 %3891, label %3883, label %3892, !llvm.loop !1070

3892:                                             ; preds = %3883, %3874
  %3893 = phi i32 [ %3878, %3874 ], [ %3888, %3883 ]
  %3894 = and i64 %3843, 4294967295
  %3895 = getelementptr inbounds i32, ptr %6, i64 %3894
  %3896 = load i32, ptr %3895, align 4, !tbaa !5
  %3897 = mul nsw i32 %3896, %3893
  %3898 = add nsw i32 %3897, %3837
  %3899 = icmp sgt i64 %3835, 2
  %3900 = add nsw i64 %3836, -1
  %3901 = add i32 %3834, 1
  br i1 %3899, label %3833, label %3902, !llvm.loop !1071

3902:                                             ; preds = %3892, %3829
  %3903 = phi i32 [ %3832, %3829 ], [ %3898, %3892 ]
  %3904 = icmp slt i32 %3903, %5
  br i1 %3904, label %3907, label %3905

3905:                                             ; preds = %3902
  %3906 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3907:                                             ; preds = %3902
  %3908 = sext i32 %3903 to i64
  %3909 = getelementptr inbounds double, ptr %3660, i64 %3908
  %3910 = load double, ptr %3909, align 8, !tbaa !18
  %3911 = fcmp fast ogt double %3830, %3910
  br i1 %3911, label %3912, label %3913

3912:                                             ; preds = %3907
  store double %3910, ptr %3662, align 8, !tbaa !18
  br label %3913

3913:                                             ; preds = %3907, %3912
  %3914 = phi double [ %3830, %3907 ], [ %3910, %3912 ]
  %3915 = add nuw nsw i32 %3831, 1
  br i1 %3678, label %3916, label %3966

3916:                                             ; preds = %3913
  %3917 = load i32, ptr %4, align 4, !tbaa !5
  %3918 = load i32, ptr %12, align 4, !tbaa !5
  %3919 = add nsw i32 %3918, -1
  %3920 = icmp slt i32 %3917, %3919
  br i1 %3920, label %3943, label %3921

3921:                                             ; preds = %3916
  %3922 = icmp eq i32 %3917, %3919
  br i1 %3922, label %3923, label %3959

3923:                                             ; preds = %3921
  store i32 0, ptr %4, align 4, !tbaa !5
  %3924 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3924, ptr %6, align 4, !tbaa !5
  br i1 %3683, label %3966, label %3925

3925:                                             ; preds = %3923, %3953
  %3926 = phi i64 [ %3957, %3953 ], [ 1, %3923 ]
  %3927 = getelementptr inbounds i32, ptr %4, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = getelementptr inbounds i32, ptr %12, i64 %3926
  %3930 = load i32, ptr %3929, align 4, !tbaa !5
  %3931 = add nsw i32 %3930, -1
  %3932 = icmp slt i32 %3928, %3931
  br i1 %3932, label %3933, label %3951

3933:                                             ; preds = %3925
  br i1 %3920, label %3943, label %3934

3934:                                             ; preds = %3933
  %3935 = shl i64 %3926, 32
  %3936 = add i64 %3935, -4294967296
  %3937 = ashr exact i64 %3936, 32
  %3938 = getelementptr inbounds i32, ptr %7, i64 %3937
  %3939 = load i32, ptr %3938, align 4, !tbaa !5
  %3940 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3941 = load i32, ptr %3940, align 4, !tbaa !5
  %3942 = add nsw i32 %3941, %3939
  store i32 %3942, ptr %3940, align 4, !tbaa !5
  br label %3961

3943:                                             ; preds = %3916, %3933
  %3944 = phi i32 [ %3928, %3933 ], [ %3917, %3916 ]
  %3945 = phi ptr [ %3927, %3933 ], [ %4, %3916 ]
  %3946 = phi i64 [ %3926, %3933 ], [ 0, %3916 ]
  %3947 = add nsw i32 %3944, 1
  store i32 %3947, ptr %3945, align 4, !tbaa !5
  %3948 = getelementptr inbounds i32, ptr %7, i64 %3946
  %3949 = load i32, ptr %3948, align 4, !tbaa !5
  %3950 = getelementptr inbounds i32, ptr %6, i64 %3946
  br label %3961

3951:                                             ; preds = %3925
  %3952 = icmp eq i32 %3928, %3931
  br i1 %3952, label %3953, label %3959

3953:                                             ; preds = %3951
  store i32 0, ptr %3927, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %8, i64 %3926
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = getelementptr inbounds i32, ptr %6, i64 %3926
  store i32 %3955, ptr %3956, align 4, !tbaa !5
  %3957 = add nuw nsw i64 %3926, 1
  %3958 = icmp eq i64 %3957, %3681
  br i1 %3958, label %3966, label %3925, !llvm.loop !1072

3959:                                             ; preds = %3921, %3951
  %3960 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3961:                                             ; preds = %3934, %3943
  %3962 = phi ptr [ %3950, %3943 ], [ %3927, %3934 ]
  %3963 = phi i32 [ %3949, %3943 ], [ 1, %3934 ]
  %3964 = load i32, ptr %3962, align 4, !tbaa !5
  %3965 = add nsw i32 %3964, %3963
  store i32 %3965, ptr %3962, align 4, !tbaa !5
  br label %3966

3966:                                             ; preds = %3953, %3961, %3923, %3913
  %3967 = icmp eq i32 %3915, %5
  br i1 %3967, label %5477, label %3829, !llvm.loop !1073

3968:                                             ; preds = %3669
  %3969 = getelementptr inbounds i32, ptr %3, i64 %19
  %3970 = load i32, ptr %3969, align 4, !tbaa !5
  %3971 = icmp eq i32 %3970, 0
  %3972 = icmp sgt i32 %5, 0
  br i1 %3971, label %3982, label %3973

3973:                                             ; preds = %3968
  br i1 %3972, label %3974, label %5477

3974:                                             ; preds = %3973
  %3975 = icmp sgt i32 %13, 1
  %3976 = icmp sgt i32 %13, 0
  %3977 = add i32 %13, -2
  %3978 = zext i32 %3977 to i64
  %3979 = zext i32 %13 to i64
  %3980 = add nuw i32 %5, 1
  %3981 = icmp eq i32 %13, 1
  br label %4123

3982:                                             ; preds = %3968
  br i1 %3972, label %3983, label %5477

3983:                                             ; preds = %3982
  %3984 = icmp sgt i32 %13, 1
  %3985 = icmp sgt i32 %13, 0
  %3986 = add i32 %13, -2
  %3987 = zext i32 %3986 to i64
  %3988 = zext i32 %13 to i64
  %3989 = add nuw i32 %5, 1
  %3990 = icmp eq i32 %13, 1
  br label %3991

3991:                                             ; preds = %3983, %4121
  %3992 = phi double [ %3663, %3983 ], [ %4072, %4121 ]
  %3993 = phi i32 [ 0, %3983 ], [ %4073, %4121 ]
  %3994 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3984, label %3995, label %4064

3995:                                             ; preds = %3991, %4054
  %3996 = phi i32 [ %4063, %4054 ], [ 0, %3991 ]
  %3997 = phi i64 [ %4005, %4054 ], [ %3988, %3991 ]
  %3998 = phi i64 [ %4062, %4054 ], [ %3987, %3991 ]
  %3999 = phi i32 [ %4060, %4054 ], [ %3994, %3991 ]
  %4000 = sub i32 %3986, %3996
  %4001 = tail call i32 @llvm.smin.i32(i32 %4000, i32 0)
  %4002 = sub i32 %4000, %4001
  %4003 = zext i32 %4002 to i64
  %4004 = add nuw nsw i64 %4003, 1
  %4005 = add nsw i64 %3997, -1
  %4006 = icmp ult i32 %4002, 31
  br i1 %4006, label %4042, label %4007

4007:                                             ; preds = %3995
  %4008 = and i64 %4004, 8589934560
  %4009 = sub i64 %3998, %4008
  br label %4010

4010:                                             ; preds = %4010, %4007
  %4011 = phi i64 [ 0, %4007 ], [ %4034, %4010 ]
  %4012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4030, %4010 ]
  %4013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4031, %4010 ]
  %4014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4032, %4010 ]
  %4015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4033, %4010 ]
  %4016 = sub i64 %3998, %4011
  %4017 = getelementptr inbounds i32, ptr %9, i64 %4016
  %4018 = getelementptr inbounds i32, ptr %4017, i64 -7
  %4019 = load <8 x i32>, ptr %4018, align 4, !tbaa !5
  %4020 = shufflevector <8 x i32> %4019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4021 = getelementptr inbounds i32, ptr %4017, i64 -15
  %4022 = load <8 x i32>, ptr %4021, align 4, !tbaa !5
  %4023 = shufflevector <8 x i32> %4022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4024 = getelementptr inbounds i32, ptr %4017, i64 -23
  %4025 = load <8 x i32>, ptr %4024, align 4, !tbaa !5
  %4026 = shufflevector <8 x i32> %4025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4027 = getelementptr inbounds i32, ptr %4017, i64 -31
  %4028 = load <8 x i32>, ptr %4027, align 4, !tbaa !5
  %4029 = shufflevector <8 x i32> %4028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4030 = mul <8 x i32> %4020, %4012
  %4031 = mul <8 x i32> %4023, %4013
  %4032 = mul <8 x i32> %4026, %4014
  %4033 = mul <8 x i32> %4029, %4015
  %4034 = add nuw i64 %4011, 32
  %4035 = icmp eq i64 %4034, %4008
  br i1 %4035, label %4036, label %4010, !llvm.loop !1074

4036:                                             ; preds = %4010
  %4037 = mul <8 x i32> %4031, %4030
  %4038 = mul <8 x i32> %4032, %4037
  %4039 = mul <8 x i32> %4033, %4038
  %4040 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4039)
  %4041 = icmp eq i64 %4004, %4008
  br i1 %4041, label %4054, label %4042

4042:                                             ; preds = %3995, %4036
  %4043 = phi i64 [ %3998, %3995 ], [ %4009, %4036 ]
  %4044 = phi i32 [ 1, %3995 ], [ %4040, %4036 ]
  br label %4045

4045:                                             ; preds = %4042, %4045
  %4046 = phi i64 [ %4051, %4045 ], [ %4043, %4042 ]
  %4047 = phi i32 [ %4050, %4045 ], [ %4044, %4042 ]
  %4048 = getelementptr inbounds i32, ptr %9, i64 %4046
  %4049 = load i32, ptr %4048, align 4, !tbaa !5
  %4050 = mul nsw i32 %4049, %4047
  %4051 = add nsw i64 %4046, -1
  %4052 = trunc i64 %4046 to i32
  %4053 = icmp sgt i32 %4052, 0
  br i1 %4053, label %4045, label %4054, !llvm.loop !1075

4054:                                             ; preds = %4045, %4036
  %4055 = phi i32 [ %4040, %4036 ], [ %4050, %4045 ]
  %4056 = and i64 %4005, 4294967295
  %4057 = getelementptr inbounds i32, ptr %6, i64 %4056
  %4058 = load i32, ptr %4057, align 4, !tbaa !5
  %4059 = mul nsw i32 %4058, %4055
  %4060 = add nsw i32 %4059, %3999
  %4061 = icmp sgt i64 %3997, 2
  %4062 = add nsw i64 %3998, -1
  %4063 = add i32 %3996, 1
  br i1 %4061, label %3995, label %4064, !llvm.loop !1076

4064:                                             ; preds = %4054, %3991
  %4065 = phi i32 [ %3994, %3991 ], [ %4060, %4054 ]
  %4066 = sext i32 %4065 to i64
  %4067 = getelementptr inbounds double, ptr %3660, i64 %4066
  %4068 = load double, ptr %4067, align 8, !tbaa !18
  %4069 = fcmp fast ogt double %3992, %4068
  br i1 %4069, label %4070, label %4071

4070:                                             ; preds = %4064
  store double %4068, ptr %3662, align 8, !tbaa !18
  br label %4071

4071:                                             ; preds = %4070, %4064
  %4072 = phi double [ %4068, %4070 ], [ %3992, %4064 ]
  %4073 = add nuw nsw i32 %3993, 1
  br i1 %3985, label %4074, label %4121

4074:                                             ; preds = %4071
  %4075 = load i32, ptr %4, align 4, !tbaa !5
  %4076 = load i32, ptr %12, align 4, !tbaa !5
  %4077 = add nsw i32 %4076, -1
  %4078 = icmp slt i32 %4075, %4077
  br i1 %4078, label %4098, label %4079

4079:                                             ; preds = %4074
  %4080 = icmp eq i32 %4075, %4077
  br i1 %4080, label %4081, label %4114

4081:                                             ; preds = %4079
  store i32 0, ptr %4, align 4, !tbaa !5
  %4082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4082, ptr %6, align 4, !tbaa !5
  br i1 %3990, label %4121, label %4083

4083:                                             ; preds = %4081, %4108
  %4084 = phi i64 [ %4112, %4108 ], [ 1, %4081 ]
  %4085 = getelementptr inbounds i32, ptr %4, i64 %4084
  %4086 = load i32, ptr %4085, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %12, i64 %4084
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = add nsw i32 %4088, -1
  %4090 = icmp slt i32 %4086, %4089
  br i1 %4090, label %4091, label %4106

4091:                                             ; preds = %4083
  br i1 %4078, label %4098, label %4092

4092:                                             ; preds = %4091
  %4093 = getelementptr inbounds i32, ptr %7, i64 %4084
  %4094 = load i32, ptr %4093, align 4, !tbaa !5
  %4095 = getelementptr inbounds i32, ptr %6, i64 %4084
  %4096 = load i32, ptr %4095, align 4, !tbaa !5
  %4097 = add nsw i32 %4096, %4094
  store i32 %4097, ptr %4095, align 4, !tbaa !5
  br label %4116

4098:                                             ; preds = %4074, %4091
  %4099 = phi i32 [ %4086, %4091 ], [ %4075, %4074 ]
  %4100 = phi ptr [ %4085, %4091 ], [ %4, %4074 ]
  %4101 = phi i64 [ %4084, %4091 ], [ 0, %4074 ]
  %4102 = add nsw i32 %4099, 1
  store i32 %4102, ptr %4100, align 4, !tbaa !5
  %4103 = getelementptr inbounds i32, ptr %7, i64 %4101
  %4104 = load i32, ptr %4103, align 4, !tbaa !5
  %4105 = getelementptr inbounds i32, ptr %6, i64 %4101
  br label %4116

4106:                                             ; preds = %4083
  %4107 = icmp eq i32 %4086, %4089
  br i1 %4107, label %4108, label %4114

4108:                                             ; preds = %4106
  store i32 0, ptr %4085, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %8, i64 %4084
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = getelementptr inbounds i32, ptr %6, i64 %4084
  store i32 %4110, ptr %4111, align 4, !tbaa !5
  %4112 = add nuw nsw i64 %4084, 1
  %4113 = icmp eq i64 %4112, %3988
  br i1 %4113, label %4121, label %4083, !llvm.loop !1077

4114:                                             ; preds = %4079, %4106
  %4115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4116:                                             ; preds = %4092, %4098
  %4117 = phi ptr [ %4105, %4098 ], [ %4085, %4092 ]
  %4118 = phi i32 [ %4104, %4098 ], [ 1, %4092 ]
  %4119 = load i32, ptr %4117, align 4, !tbaa !5
  %4120 = add nsw i32 %4119, %4118
  store i32 %4120, ptr %4117, align 4, !tbaa !5
  br label %4121

4121:                                             ; preds = %4108, %4116, %4081, %4071
  %4122 = icmp eq i32 %4073, %5
  br i1 %4122, label %5477, label %3991, !llvm.loop !1078

4123:                                             ; preds = %3974, %4260
  %4124 = phi double [ %3663, %3974 ], [ %4208, %4260 ]
  %4125 = phi i32 [ 0, %3974 ], [ %4209, %4260 ]
  %4126 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3975, label %4127, label %4196

4127:                                             ; preds = %4123, %4186
  %4128 = phi i32 [ %4195, %4186 ], [ 0, %4123 ]
  %4129 = phi i64 [ %4137, %4186 ], [ %3979, %4123 ]
  %4130 = phi i64 [ %4194, %4186 ], [ %3978, %4123 ]
  %4131 = phi i32 [ %4192, %4186 ], [ %4126, %4123 ]
  %4132 = sub i32 %3977, %4128
  %4133 = tail call i32 @llvm.smin.i32(i32 %4132, i32 0)
  %4134 = sub i32 %4132, %4133
  %4135 = zext i32 %4134 to i64
  %4136 = add nuw nsw i64 %4135, 1
  %4137 = add nsw i64 %4129, -1
  %4138 = icmp ult i32 %4134, 31
  br i1 %4138, label %4174, label %4139

4139:                                             ; preds = %4127
  %4140 = and i64 %4136, 8589934560
  %4141 = sub i64 %4130, %4140
  br label %4142

4142:                                             ; preds = %4142, %4139
  %4143 = phi i64 [ 0, %4139 ], [ %4166, %4142 ]
  %4144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4162, %4142 ]
  %4145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4163, %4142 ]
  %4146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4164, %4142 ]
  %4147 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4165, %4142 ]
  %4148 = sub i64 %4130, %4143
  %4149 = getelementptr inbounds i32, ptr %11, i64 %4148
  %4150 = getelementptr inbounds i32, ptr %4149, i64 -7
  %4151 = load <8 x i32>, ptr %4150, align 4, !tbaa !5
  %4152 = shufflevector <8 x i32> %4151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4153 = getelementptr inbounds i32, ptr %4149, i64 -15
  %4154 = load <8 x i32>, ptr %4153, align 4, !tbaa !5
  %4155 = shufflevector <8 x i32> %4154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4156 = getelementptr inbounds i32, ptr %4149, i64 -23
  %4157 = load <8 x i32>, ptr %4156, align 4, !tbaa !5
  %4158 = shufflevector <8 x i32> %4157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4159 = getelementptr inbounds i32, ptr %4149, i64 -31
  %4160 = load <8 x i32>, ptr %4159, align 4, !tbaa !5
  %4161 = shufflevector <8 x i32> %4160, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4162 = mul <8 x i32> %4152, %4144
  %4163 = mul <8 x i32> %4155, %4145
  %4164 = mul <8 x i32> %4158, %4146
  %4165 = mul <8 x i32> %4161, %4147
  %4166 = add nuw i64 %4143, 32
  %4167 = icmp eq i64 %4166, %4140
  br i1 %4167, label %4168, label %4142, !llvm.loop !1079

4168:                                             ; preds = %4142
  %4169 = mul <8 x i32> %4163, %4162
  %4170 = mul <8 x i32> %4164, %4169
  %4171 = mul <8 x i32> %4165, %4170
  %4172 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4171)
  %4173 = icmp eq i64 %4136, %4140
  br i1 %4173, label %4186, label %4174

4174:                                             ; preds = %4127, %4168
  %4175 = phi i64 [ %4130, %4127 ], [ %4141, %4168 ]
  %4176 = phi i32 [ 1, %4127 ], [ %4172, %4168 ]
  br label %4177

4177:                                             ; preds = %4174, %4177
  %4178 = phi i64 [ %4183, %4177 ], [ %4175, %4174 ]
  %4179 = phi i32 [ %4182, %4177 ], [ %4176, %4174 ]
  %4180 = getelementptr inbounds i32, ptr %11, i64 %4178
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = mul nsw i32 %4181, %4179
  %4183 = add nsw i64 %4178, -1
  %4184 = trunc i64 %4178 to i32
  %4185 = icmp sgt i32 %4184, 0
  br i1 %4185, label %4177, label %4186, !llvm.loop !1080

4186:                                             ; preds = %4177, %4168
  %4187 = phi i32 [ %4172, %4168 ], [ %4182, %4177 ]
  %4188 = and i64 %4137, 4294967295
  %4189 = getelementptr inbounds i32, ptr %6, i64 %4188
  %4190 = load i32, ptr %4189, align 4, !tbaa !5
  %4191 = mul nsw i32 %4190, %4187
  %4192 = add nsw i32 %4191, %4131
  %4193 = icmp sgt i64 %4129, 2
  %4194 = add nsw i64 %4130, -1
  %4195 = add i32 %4128, 1
  br i1 %4193, label %4127, label %4196, !llvm.loop !1081

4196:                                             ; preds = %4186, %4123
  %4197 = phi i32 [ %4126, %4123 ], [ %4192, %4186 ]
  %4198 = icmp slt i32 %4197, %5
  br i1 %4198, label %4201, label %4199

4199:                                             ; preds = %4196
  %4200 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4201:                                             ; preds = %4196
  %4202 = sext i32 %4197 to i64
  %4203 = getelementptr inbounds double, ptr %3660, i64 %4202
  %4204 = load double, ptr %4203, align 8, !tbaa !18
  %4205 = fcmp fast ogt double %4124, %4204
  br i1 %4205, label %4206, label %4207

4206:                                             ; preds = %4201
  store double %4204, ptr %3662, align 8, !tbaa !18
  br label %4207

4207:                                             ; preds = %4206, %4201
  %4208 = phi double [ %4204, %4206 ], [ %4124, %4201 ]
  %4209 = add nuw nsw i32 %4125, 1
  br i1 %3976, label %4210, label %4260

4210:                                             ; preds = %4207
  %4211 = load i32, ptr %4, align 4, !tbaa !5
  %4212 = load i32, ptr %12, align 4, !tbaa !5
  %4213 = add nsw i32 %4212, -1
  %4214 = icmp slt i32 %4211, %4213
  br i1 %4214, label %4237, label %4215

4215:                                             ; preds = %4210
  %4216 = icmp eq i32 %4211, %4213
  br i1 %4216, label %4217, label %4253

4217:                                             ; preds = %4215
  store i32 0, ptr %4, align 4, !tbaa !5
  %4218 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4218, ptr %6, align 4, !tbaa !5
  br i1 %3981, label %4260, label %4219

4219:                                             ; preds = %4217, %4247
  %4220 = phi i64 [ %4251, %4247 ], [ 1, %4217 ]
  %4221 = getelementptr inbounds i32, ptr %4, i64 %4220
  %4222 = load i32, ptr %4221, align 4, !tbaa !5
  %4223 = getelementptr inbounds i32, ptr %12, i64 %4220
  %4224 = load i32, ptr %4223, align 4, !tbaa !5
  %4225 = add nsw i32 %4224, -1
  %4226 = icmp slt i32 %4222, %4225
  br i1 %4226, label %4227, label %4245

4227:                                             ; preds = %4219
  br i1 %4214, label %4237, label %4228

4228:                                             ; preds = %4227
  %4229 = shl i64 %4220, 32
  %4230 = add i64 %4229, -4294967296
  %4231 = ashr exact i64 %4230, 32
  %4232 = getelementptr inbounds i32, ptr %7, i64 %4231
  %4233 = load i32, ptr %4232, align 4, !tbaa !5
  %4234 = getelementptr inbounds i32, ptr %6, i64 %4220
  %4235 = load i32, ptr %4234, align 4, !tbaa !5
  %4236 = add nsw i32 %4235, %4233
  store i32 %4236, ptr %4234, align 4, !tbaa !5
  br label %4255

4237:                                             ; preds = %4210, %4227
  %4238 = phi i32 [ %4222, %4227 ], [ %4211, %4210 ]
  %4239 = phi ptr [ %4221, %4227 ], [ %4, %4210 ]
  %4240 = phi i64 [ %4220, %4227 ], [ 0, %4210 ]
  %4241 = add nsw i32 %4238, 1
  store i32 %4241, ptr %4239, align 4, !tbaa !5
  %4242 = getelementptr inbounds i32, ptr %7, i64 %4240
  %4243 = load i32, ptr %4242, align 4, !tbaa !5
  %4244 = getelementptr inbounds i32, ptr %6, i64 %4240
  br label %4255

4245:                                             ; preds = %4219
  %4246 = icmp eq i32 %4222, %4225
  br i1 %4246, label %4247, label %4253

4247:                                             ; preds = %4245
  store i32 0, ptr %4221, align 4, !tbaa !5
  %4248 = getelementptr inbounds i32, ptr %8, i64 %4220
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = getelementptr inbounds i32, ptr %6, i64 %4220
  store i32 %4249, ptr %4250, align 4, !tbaa !5
  %4251 = add nuw nsw i64 %4220, 1
  %4252 = icmp eq i64 %4251, %3979
  br i1 %4252, label %4260, label %4219, !llvm.loop !1082

4253:                                             ; preds = %4215, %4245
  %4254 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4255:                                             ; preds = %4228, %4237
  %4256 = phi ptr [ %4244, %4237 ], [ %4221, %4228 ]
  %4257 = phi i32 [ %4243, %4237 ], [ 1, %4228 ]
  %4258 = load i32, ptr %4256, align 4, !tbaa !5
  %4259 = add nsw i32 %4258, %4257
  store i32 %4259, ptr %4256, align 4, !tbaa !5
  br label %4260

4260:                                             ; preds = %4247, %4255, %4217, %4207
  %4261 = icmp eq i32 %4209, %5
  br i1 %4261, label %5477, label %4123, !llvm.loop !1083

4262:                                             ; preds = %3669
  %4263 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1509, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

4264:                                             ; preds = %18
  %4265 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4266 = load ptr, ptr %4265, align 8, !tbaa !9
  %4267 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4268 = load ptr, ptr %4267, align 8, !tbaa !9
  %4269 = load double, ptr %4266, align 8, !tbaa !18
  %4270 = fptrunc double %4269 to float
  store float %4270, ptr %4268, align 4, !tbaa !162
  %4271 = icmp eq i32 %13, 0
  br i1 %4271, label %5477, label %4272

4272:                                             ; preds = %4264
  switch i32 %1, label %4869 [
    i32 1, label %4273
    i32 0, label %4573
  ]

4273:                                             ; preds = %4272
  %4274 = getelementptr inbounds i32, ptr %3, i64 %19
  %4275 = load i32, ptr %4274, align 4, !tbaa !5
  %4276 = icmp eq i32 %4275, 0
  %4277 = icmp sgt i32 %5, 0
  br i1 %4276, label %4287, label %4278

4278:                                             ; preds = %4273
  br i1 %4277, label %4279, label %5477

4279:                                             ; preds = %4278
  %4280 = icmp sgt i32 %13, 1
  %4281 = icmp sgt i32 %13, 0
  %4282 = add i32 %13, -2
  %4283 = zext i32 %4282 to i64
  %4284 = zext i32 %13 to i64
  %4285 = add nuw i32 %5, 1
  %4286 = icmp eq i32 %13, 1
  br label %4433

4287:                                             ; preds = %4273
  br i1 %4277, label %4288, label %5477

4288:                                             ; preds = %4287
  %4289 = icmp sgt i32 %13, 1
  %4290 = icmp sgt i32 %13, 0
  %4291 = add i32 %13, -2
  %4292 = zext i32 %4291 to i64
  %4293 = zext i32 %13 to i64
  %4294 = add nuw i32 %5, 1
  %4295 = icmp eq i32 %13, 1
  br label %4296

4296:                                             ; preds = %4288, %4431
  %4297 = phi float [ %4270, %4288 ], [ %4382, %4431 ]
  %4298 = phi i32 [ 0, %4288 ], [ %4383, %4431 ]
  %4299 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4289, label %4300, label %4369

4300:                                             ; preds = %4296, %4359
  %4301 = phi i32 [ %4368, %4359 ], [ 0, %4296 ]
  %4302 = phi i64 [ %4310, %4359 ], [ %4293, %4296 ]
  %4303 = phi i64 [ %4367, %4359 ], [ %4292, %4296 ]
  %4304 = phi i32 [ %4365, %4359 ], [ %4299, %4296 ]
  %4305 = sub i32 %4291, %4301
  %4306 = tail call i32 @llvm.smin.i32(i32 %4305, i32 0)
  %4307 = sub i32 %4305, %4306
  %4308 = zext i32 %4307 to i64
  %4309 = add nuw nsw i64 %4308, 1
  %4310 = add nsw i64 %4302, -1
  %4311 = icmp ult i32 %4307, 31
  br i1 %4311, label %4347, label %4312

4312:                                             ; preds = %4300
  %4313 = and i64 %4309, 8589934560
  %4314 = sub i64 %4303, %4313
  br label %4315

4315:                                             ; preds = %4315, %4312
  %4316 = phi i64 [ 0, %4312 ], [ %4339, %4315 ]
  %4317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4335, %4315 ]
  %4318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4336, %4315 ]
  %4319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4337, %4315 ]
  %4320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4338, %4315 ]
  %4321 = sub i64 %4303, %4316
  %4322 = getelementptr inbounds i32, ptr %9, i64 %4321
  %4323 = getelementptr inbounds i32, ptr %4322, i64 -7
  %4324 = load <8 x i32>, ptr %4323, align 4, !tbaa !5
  %4325 = shufflevector <8 x i32> %4324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4326 = getelementptr inbounds i32, ptr %4322, i64 -15
  %4327 = load <8 x i32>, ptr %4326, align 4, !tbaa !5
  %4328 = shufflevector <8 x i32> %4327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4329 = getelementptr inbounds i32, ptr %4322, i64 -23
  %4330 = load <8 x i32>, ptr %4329, align 4, !tbaa !5
  %4331 = shufflevector <8 x i32> %4330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4332 = getelementptr inbounds i32, ptr %4322, i64 -31
  %4333 = load <8 x i32>, ptr %4332, align 4, !tbaa !5
  %4334 = shufflevector <8 x i32> %4333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4335 = mul <8 x i32> %4325, %4317
  %4336 = mul <8 x i32> %4328, %4318
  %4337 = mul <8 x i32> %4331, %4319
  %4338 = mul <8 x i32> %4334, %4320
  %4339 = add nuw i64 %4316, 32
  %4340 = icmp eq i64 %4339, %4313
  br i1 %4340, label %4341, label %4315, !llvm.loop !1084

4341:                                             ; preds = %4315
  %4342 = mul <8 x i32> %4336, %4335
  %4343 = mul <8 x i32> %4337, %4342
  %4344 = mul <8 x i32> %4338, %4343
  %4345 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4344)
  %4346 = icmp eq i64 %4309, %4313
  br i1 %4346, label %4359, label %4347

4347:                                             ; preds = %4300, %4341
  %4348 = phi i64 [ %4303, %4300 ], [ %4314, %4341 ]
  %4349 = phi i32 [ 1, %4300 ], [ %4345, %4341 ]
  br label %4350

4350:                                             ; preds = %4347, %4350
  %4351 = phi i64 [ %4356, %4350 ], [ %4348, %4347 ]
  %4352 = phi i32 [ %4355, %4350 ], [ %4349, %4347 ]
  %4353 = getelementptr inbounds i32, ptr %9, i64 %4351
  %4354 = load i32, ptr %4353, align 4, !tbaa !5
  %4355 = mul nsw i32 %4354, %4352
  %4356 = add nsw i64 %4351, -1
  %4357 = trunc i64 %4351 to i32
  %4358 = icmp sgt i32 %4357, 0
  br i1 %4358, label %4350, label %4359, !llvm.loop !1085

4359:                                             ; preds = %4350, %4341
  %4360 = phi i32 [ %4345, %4341 ], [ %4355, %4350 ]
  %4361 = and i64 %4310, 4294967295
  %4362 = getelementptr inbounds i32, ptr %6, i64 %4361
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = mul nsw i32 %4363, %4360
  %4365 = add nsw i32 %4364, %4304
  %4366 = icmp sgt i64 %4302, 2
  %4367 = add nsw i64 %4303, -1
  %4368 = add i32 %4301, 1
  br i1 %4366, label %4300, label %4369, !llvm.loop !1086

4369:                                             ; preds = %4359, %4296
  %4370 = phi i32 [ %4299, %4296 ], [ %4365, %4359 ]
  %4371 = sext i32 %4370 to i64
  %4372 = getelementptr inbounds double, ptr %2, i64 %4371
  %4373 = load double, ptr %4372, align 8, !tbaa !18
  %4374 = getelementptr inbounds double, ptr %4266, i64 %4371
  %4375 = load double, ptr %4374, align 8, !tbaa !18
  %4376 = fptrunc double %4375 to float
  %4377 = fcmp fast one double %4373, 0.000000e+00
  %4378 = fcmp fast ogt float %4297, %4376
  %4379 = select i1 %4377, i1 %4378, i1 false
  br i1 %4379, label %4380, label %4381

4380:                                             ; preds = %4369
  store float %4376, ptr %4268, align 4, !tbaa !162
  br label %4381

4381:                                             ; preds = %4380, %4369
  %4382 = phi float [ %4376, %4380 ], [ %4297, %4369 ]
  %4383 = add nuw nsw i32 %4298, 1
  br i1 %4290, label %4384, label %4431

4384:                                             ; preds = %4381
  %4385 = load i32, ptr %4, align 4, !tbaa !5
  %4386 = load i32, ptr %12, align 4, !tbaa !5
  %4387 = add nsw i32 %4386, -1
  %4388 = icmp slt i32 %4385, %4387
  br i1 %4388, label %4408, label %4389

4389:                                             ; preds = %4384
  %4390 = icmp eq i32 %4385, %4387
  br i1 %4390, label %4391, label %4424

4391:                                             ; preds = %4389
  store i32 0, ptr %4, align 4, !tbaa !5
  %4392 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4392, ptr %6, align 4, !tbaa !5
  br i1 %4295, label %4431, label %4393

4393:                                             ; preds = %4391, %4418
  %4394 = phi i64 [ %4422, %4418 ], [ 1, %4391 ]
  %4395 = getelementptr inbounds i32, ptr %4, i64 %4394
  %4396 = load i32, ptr %4395, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %12, i64 %4394
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = add nsw i32 %4398, -1
  %4400 = icmp slt i32 %4396, %4399
  br i1 %4400, label %4401, label %4416

4401:                                             ; preds = %4393
  br i1 %4388, label %4408, label %4402

4402:                                             ; preds = %4401
  %4403 = getelementptr inbounds i32, ptr %7, i64 %4394
  %4404 = load i32, ptr %4403, align 4, !tbaa !5
  %4405 = getelementptr inbounds i32, ptr %6, i64 %4394
  %4406 = load i32, ptr %4405, align 4, !tbaa !5
  %4407 = add nsw i32 %4406, %4404
  store i32 %4407, ptr %4405, align 4, !tbaa !5
  br label %4426

4408:                                             ; preds = %4384, %4401
  %4409 = phi i32 [ %4396, %4401 ], [ %4385, %4384 ]
  %4410 = phi ptr [ %4395, %4401 ], [ %4, %4384 ]
  %4411 = phi i64 [ %4394, %4401 ], [ 0, %4384 ]
  %4412 = add nsw i32 %4409, 1
  store i32 %4412, ptr %4410, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %7, i64 %4411
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = getelementptr inbounds i32, ptr %6, i64 %4411
  br label %4426

4416:                                             ; preds = %4393
  %4417 = icmp eq i32 %4396, %4399
  br i1 %4417, label %4418, label %4424

4418:                                             ; preds = %4416
  store i32 0, ptr %4395, align 4, !tbaa !5
  %4419 = getelementptr inbounds i32, ptr %8, i64 %4394
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4394
  store i32 %4420, ptr %4421, align 4, !tbaa !5
  %4422 = add nuw nsw i64 %4394, 1
  %4423 = icmp eq i64 %4422, %4293
  br i1 %4423, label %4431, label %4393, !llvm.loop !1087

4424:                                             ; preds = %4389, %4416
  %4425 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4426:                                             ; preds = %4402, %4408
  %4427 = phi ptr [ %4415, %4408 ], [ %4395, %4402 ]
  %4428 = phi i32 [ %4414, %4408 ], [ 1, %4402 ]
  %4429 = load i32, ptr %4427, align 4, !tbaa !5
  %4430 = add nsw i32 %4429, %4428
  store i32 %4430, ptr %4427, align 4, !tbaa !5
  br label %4431

4431:                                             ; preds = %4418, %4426, %4391, %4381
  %4432 = icmp eq i32 %4383, %5
  br i1 %4432, label %5477, label %4296, !llvm.loop !1088

4433:                                             ; preds = %4279, %4571
  %4434 = phi float [ %4270, %4279 ], [ %4519, %4571 ]
  %4435 = phi i32 [ 0, %4279 ], [ %4520, %4571 ]
  %4436 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4280, label %4437, label %4506

4437:                                             ; preds = %4433, %4496
  %4438 = phi i32 [ %4505, %4496 ], [ 0, %4433 ]
  %4439 = phi i64 [ %4447, %4496 ], [ %4284, %4433 ]
  %4440 = phi i64 [ %4504, %4496 ], [ %4283, %4433 ]
  %4441 = phi i32 [ %4502, %4496 ], [ %4436, %4433 ]
  %4442 = sub i32 %4282, %4438
  %4443 = tail call i32 @llvm.smin.i32(i32 %4442, i32 0)
  %4444 = sub i32 %4442, %4443
  %4445 = zext i32 %4444 to i64
  %4446 = add nuw nsw i64 %4445, 1
  %4447 = add nsw i64 %4439, -1
  %4448 = icmp ult i32 %4444, 31
  br i1 %4448, label %4484, label %4449

4449:                                             ; preds = %4437
  %4450 = and i64 %4446, 8589934560
  %4451 = sub i64 %4440, %4450
  br label %4452

4452:                                             ; preds = %4452, %4449
  %4453 = phi i64 [ 0, %4449 ], [ %4476, %4452 ]
  %4454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4472, %4452 ]
  %4455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4473, %4452 ]
  %4456 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4474, %4452 ]
  %4457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4475, %4452 ]
  %4458 = sub i64 %4440, %4453
  %4459 = getelementptr inbounds i32, ptr %11, i64 %4458
  %4460 = getelementptr inbounds i32, ptr %4459, i64 -7
  %4461 = load <8 x i32>, ptr %4460, align 4, !tbaa !5
  %4462 = shufflevector <8 x i32> %4461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4463 = getelementptr inbounds i32, ptr %4459, i64 -15
  %4464 = load <8 x i32>, ptr %4463, align 4, !tbaa !5
  %4465 = shufflevector <8 x i32> %4464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4466 = getelementptr inbounds i32, ptr %4459, i64 -23
  %4467 = load <8 x i32>, ptr %4466, align 4, !tbaa !5
  %4468 = shufflevector <8 x i32> %4467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4469 = getelementptr inbounds i32, ptr %4459, i64 -31
  %4470 = load <8 x i32>, ptr %4469, align 4, !tbaa !5
  %4471 = shufflevector <8 x i32> %4470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4472 = mul <8 x i32> %4462, %4454
  %4473 = mul <8 x i32> %4465, %4455
  %4474 = mul <8 x i32> %4468, %4456
  %4475 = mul <8 x i32> %4471, %4457
  %4476 = add nuw i64 %4453, 32
  %4477 = icmp eq i64 %4476, %4450
  br i1 %4477, label %4478, label %4452, !llvm.loop !1089

4478:                                             ; preds = %4452
  %4479 = mul <8 x i32> %4473, %4472
  %4480 = mul <8 x i32> %4474, %4479
  %4481 = mul <8 x i32> %4475, %4480
  %4482 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4481)
  %4483 = icmp eq i64 %4446, %4450
  br i1 %4483, label %4496, label %4484

4484:                                             ; preds = %4437, %4478
  %4485 = phi i64 [ %4440, %4437 ], [ %4451, %4478 ]
  %4486 = phi i32 [ 1, %4437 ], [ %4482, %4478 ]
  br label %4487

4487:                                             ; preds = %4484, %4487
  %4488 = phi i64 [ %4493, %4487 ], [ %4485, %4484 ]
  %4489 = phi i32 [ %4492, %4487 ], [ %4486, %4484 ]
  %4490 = getelementptr inbounds i32, ptr %11, i64 %4488
  %4491 = load i32, ptr %4490, align 4, !tbaa !5
  %4492 = mul nsw i32 %4491, %4489
  %4493 = add nsw i64 %4488, -1
  %4494 = trunc i64 %4488 to i32
  %4495 = icmp sgt i32 %4494, 0
  br i1 %4495, label %4487, label %4496, !llvm.loop !1090

4496:                                             ; preds = %4487, %4478
  %4497 = phi i32 [ %4482, %4478 ], [ %4492, %4487 ]
  %4498 = and i64 %4447, 4294967295
  %4499 = getelementptr inbounds i32, ptr %6, i64 %4498
  %4500 = load i32, ptr %4499, align 4, !tbaa !5
  %4501 = mul nsw i32 %4500, %4497
  %4502 = add nsw i32 %4501, %4441
  %4503 = icmp sgt i64 %4439, 2
  %4504 = add nsw i64 %4440, -1
  %4505 = add i32 %4438, 1
  br i1 %4503, label %4437, label %4506, !llvm.loop !1091

4506:                                             ; preds = %4496, %4433
  %4507 = phi i32 [ %4436, %4433 ], [ %4502, %4496 ]
  %4508 = icmp slt i32 %4507, %5
  br i1 %4508, label %4511, label %4509

4509:                                             ; preds = %4506
  %4510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4511:                                             ; preds = %4506
  %4512 = sext i32 %4507 to i64
  %4513 = getelementptr inbounds double, ptr %4266, i64 %4512
  %4514 = load double, ptr %4513, align 8, !tbaa !18
  %4515 = fptrunc double %4514 to float
  %4516 = fcmp fast ogt float %4434, %4515
  br i1 %4516, label %4517, label %4518

4517:                                             ; preds = %4511
  store float %4515, ptr %4268, align 4, !tbaa !162
  br label %4518

4518:                                             ; preds = %4511, %4517
  %4519 = phi float [ %4434, %4511 ], [ %4515, %4517 ]
  %4520 = add nuw nsw i32 %4435, 1
  br i1 %4281, label %4521, label %4571

4521:                                             ; preds = %4518
  %4522 = load i32, ptr %4, align 4, !tbaa !5
  %4523 = load i32, ptr %12, align 4, !tbaa !5
  %4524 = add nsw i32 %4523, -1
  %4525 = icmp slt i32 %4522, %4524
  br i1 %4525, label %4548, label %4526

4526:                                             ; preds = %4521
  %4527 = icmp eq i32 %4522, %4524
  br i1 %4527, label %4528, label %4564

4528:                                             ; preds = %4526
  store i32 0, ptr %4, align 4, !tbaa !5
  %4529 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4529, ptr %6, align 4, !tbaa !5
  br i1 %4286, label %4571, label %4530

4530:                                             ; preds = %4528, %4558
  %4531 = phi i64 [ %4562, %4558 ], [ 1, %4528 ]
  %4532 = getelementptr inbounds i32, ptr %4, i64 %4531
  %4533 = load i32, ptr %4532, align 4, !tbaa !5
  %4534 = getelementptr inbounds i32, ptr %12, i64 %4531
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = add nsw i32 %4535, -1
  %4537 = icmp slt i32 %4533, %4536
  br i1 %4537, label %4538, label %4556

4538:                                             ; preds = %4530
  br i1 %4525, label %4548, label %4539

4539:                                             ; preds = %4538
  %4540 = shl i64 %4531, 32
  %4541 = add i64 %4540, -4294967296
  %4542 = ashr exact i64 %4541, 32
  %4543 = getelementptr inbounds i32, ptr %7, i64 %4542
  %4544 = load i32, ptr %4543, align 4, !tbaa !5
  %4545 = getelementptr inbounds i32, ptr %6, i64 %4531
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = add nsw i32 %4546, %4544
  store i32 %4547, ptr %4545, align 4, !tbaa !5
  br label %4566

4548:                                             ; preds = %4521, %4538
  %4549 = phi i32 [ %4533, %4538 ], [ %4522, %4521 ]
  %4550 = phi ptr [ %4532, %4538 ], [ %4, %4521 ]
  %4551 = phi i64 [ %4531, %4538 ], [ 0, %4521 ]
  %4552 = add nsw i32 %4549, 1
  store i32 %4552, ptr %4550, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %7, i64 %4551
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = getelementptr inbounds i32, ptr %6, i64 %4551
  br label %4566

4556:                                             ; preds = %4530
  %4557 = icmp eq i32 %4533, %4536
  br i1 %4557, label %4558, label %4564

4558:                                             ; preds = %4556
  store i32 0, ptr %4532, align 4, !tbaa !5
  %4559 = getelementptr inbounds i32, ptr %8, i64 %4531
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %6, i64 %4531
  store i32 %4560, ptr %4561, align 4, !tbaa !5
  %4562 = add nuw nsw i64 %4531, 1
  %4563 = icmp eq i64 %4562, %4284
  br i1 %4563, label %4571, label %4530, !llvm.loop !1092

4564:                                             ; preds = %4526, %4556
  %4565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4566:                                             ; preds = %4539, %4548
  %4567 = phi ptr [ %4555, %4548 ], [ %4532, %4539 ]
  %4568 = phi i32 [ %4554, %4548 ], [ 1, %4539 ]
  %4569 = load i32, ptr %4567, align 4, !tbaa !5
  %4570 = add nsw i32 %4569, %4568
  store i32 %4570, ptr %4567, align 4, !tbaa !5
  br label %4571

4571:                                             ; preds = %4558, %4566, %4528, %4518
  %4572 = icmp eq i32 %4520, %5
  br i1 %4572, label %5477, label %4433, !llvm.loop !1093

4573:                                             ; preds = %4272
  %4574 = getelementptr inbounds i32, ptr %3, i64 %19
  %4575 = load i32, ptr %4574, align 4, !tbaa !5
  %4576 = icmp eq i32 %4575, 0
  %4577 = icmp sgt i32 %5, 0
  br i1 %4576, label %4587, label %4578

4578:                                             ; preds = %4573
  br i1 %4577, label %4579, label %5477

4579:                                             ; preds = %4578
  %4580 = icmp sgt i32 %13, 1
  %4581 = icmp sgt i32 %13, 0
  %4582 = add i32 %13, -2
  %4583 = zext i32 %4582 to i64
  %4584 = zext i32 %13 to i64
  %4585 = add nuw i32 %5, 1
  %4586 = icmp eq i32 %13, 1
  br label %4729

4587:                                             ; preds = %4573
  br i1 %4577, label %4588, label %5477

4588:                                             ; preds = %4587
  %4589 = icmp sgt i32 %13, 1
  %4590 = icmp sgt i32 %13, 0
  %4591 = add i32 %13, -2
  %4592 = zext i32 %4591 to i64
  %4593 = zext i32 %13 to i64
  %4594 = add nuw i32 %5, 1
  %4595 = icmp eq i32 %13, 1
  br label %4596

4596:                                             ; preds = %4588, %4727
  %4597 = phi float [ %4270, %4588 ], [ %4678, %4727 ]
  %4598 = phi i32 [ 0, %4588 ], [ %4679, %4727 ]
  %4599 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4589, label %4600, label %4669

4600:                                             ; preds = %4596, %4659
  %4601 = phi i32 [ %4668, %4659 ], [ 0, %4596 ]
  %4602 = phi i64 [ %4610, %4659 ], [ %4593, %4596 ]
  %4603 = phi i64 [ %4667, %4659 ], [ %4592, %4596 ]
  %4604 = phi i32 [ %4665, %4659 ], [ %4599, %4596 ]
  %4605 = sub i32 %4591, %4601
  %4606 = tail call i32 @llvm.smin.i32(i32 %4605, i32 0)
  %4607 = sub i32 %4605, %4606
  %4608 = zext i32 %4607 to i64
  %4609 = add nuw nsw i64 %4608, 1
  %4610 = add nsw i64 %4602, -1
  %4611 = icmp ult i32 %4607, 31
  br i1 %4611, label %4647, label %4612

4612:                                             ; preds = %4600
  %4613 = and i64 %4609, 8589934560
  %4614 = sub i64 %4603, %4613
  br label %4615

4615:                                             ; preds = %4615, %4612
  %4616 = phi i64 [ 0, %4612 ], [ %4639, %4615 ]
  %4617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4635, %4615 ]
  %4618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4636, %4615 ]
  %4619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4637, %4615 ]
  %4620 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4638, %4615 ]
  %4621 = sub i64 %4603, %4616
  %4622 = getelementptr inbounds i32, ptr %9, i64 %4621
  %4623 = getelementptr inbounds i32, ptr %4622, i64 -7
  %4624 = load <8 x i32>, ptr %4623, align 4, !tbaa !5
  %4625 = shufflevector <8 x i32> %4624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4626 = getelementptr inbounds i32, ptr %4622, i64 -15
  %4627 = load <8 x i32>, ptr %4626, align 4, !tbaa !5
  %4628 = shufflevector <8 x i32> %4627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4629 = getelementptr inbounds i32, ptr %4622, i64 -23
  %4630 = load <8 x i32>, ptr %4629, align 4, !tbaa !5
  %4631 = shufflevector <8 x i32> %4630, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4632 = getelementptr inbounds i32, ptr %4622, i64 -31
  %4633 = load <8 x i32>, ptr %4632, align 4, !tbaa !5
  %4634 = shufflevector <8 x i32> %4633, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4635 = mul <8 x i32> %4625, %4617
  %4636 = mul <8 x i32> %4628, %4618
  %4637 = mul <8 x i32> %4631, %4619
  %4638 = mul <8 x i32> %4634, %4620
  %4639 = add nuw i64 %4616, 32
  %4640 = icmp eq i64 %4639, %4613
  br i1 %4640, label %4641, label %4615, !llvm.loop !1094

4641:                                             ; preds = %4615
  %4642 = mul <8 x i32> %4636, %4635
  %4643 = mul <8 x i32> %4637, %4642
  %4644 = mul <8 x i32> %4638, %4643
  %4645 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4644)
  %4646 = icmp eq i64 %4609, %4613
  br i1 %4646, label %4659, label %4647

4647:                                             ; preds = %4600, %4641
  %4648 = phi i64 [ %4603, %4600 ], [ %4614, %4641 ]
  %4649 = phi i32 [ 1, %4600 ], [ %4645, %4641 ]
  br label %4650

4650:                                             ; preds = %4647, %4650
  %4651 = phi i64 [ %4656, %4650 ], [ %4648, %4647 ]
  %4652 = phi i32 [ %4655, %4650 ], [ %4649, %4647 ]
  %4653 = getelementptr inbounds i32, ptr %9, i64 %4651
  %4654 = load i32, ptr %4653, align 4, !tbaa !5
  %4655 = mul nsw i32 %4654, %4652
  %4656 = add nsw i64 %4651, -1
  %4657 = trunc i64 %4651 to i32
  %4658 = icmp sgt i32 %4657, 0
  br i1 %4658, label %4650, label %4659, !llvm.loop !1095

4659:                                             ; preds = %4650, %4641
  %4660 = phi i32 [ %4645, %4641 ], [ %4655, %4650 ]
  %4661 = and i64 %4610, 4294967295
  %4662 = getelementptr inbounds i32, ptr %6, i64 %4661
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = mul nsw i32 %4663, %4660
  %4665 = add nsw i32 %4664, %4604
  %4666 = icmp sgt i64 %4602, 2
  %4667 = add nsw i64 %4603, -1
  %4668 = add i32 %4601, 1
  br i1 %4666, label %4600, label %4669, !llvm.loop !1096

4669:                                             ; preds = %4659, %4596
  %4670 = phi i32 [ %4599, %4596 ], [ %4665, %4659 ]
  %4671 = sext i32 %4670 to i64
  %4672 = getelementptr inbounds double, ptr %4266, i64 %4671
  %4673 = load double, ptr %4672, align 8, !tbaa !18
  %4674 = fptrunc double %4673 to float
  %4675 = fcmp fast ogt float %4597, %4674
  br i1 %4675, label %4676, label %4677

4676:                                             ; preds = %4669
  store float %4674, ptr %4268, align 4, !tbaa !162
  br label %4677

4677:                                             ; preds = %4676, %4669
  %4678 = phi float [ %4674, %4676 ], [ %4597, %4669 ]
  %4679 = add nuw nsw i32 %4598, 1
  br i1 %4590, label %4680, label %4727

4680:                                             ; preds = %4677
  %4681 = load i32, ptr %4, align 4, !tbaa !5
  %4682 = load i32, ptr %12, align 4, !tbaa !5
  %4683 = add nsw i32 %4682, -1
  %4684 = icmp slt i32 %4681, %4683
  br i1 %4684, label %4704, label %4685

4685:                                             ; preds = %4680
  %4686 = icmp eq i32 %4681, %4683
  br i1 %4686, label %4687, label %4720

4687:                                             ; preds = %4685
  store i32 0, ptr %4, align 4, !tbaa !5
  %4688 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4688, ptr %6, align 4, !tbaa !5
  br i1 %4595, label %4727, label %4689

4689:                                             ; preds = %4687, %4714
  %4690 = phi i64 [ %4718, %4714 ], [ 1, %4687 ]
  %4691 = getelementptr inbounds i32, ptr %4, i64 %4690
  %4692 = load i32, ptr %4691, align 4, !tbaa !5
  %4693 = getelementptr inbounds i32, ptr %12, i64 %4690
  %4694 = load i32, ptr %4693, align 4, !tbaa !5
  %4695 = add nsw i32 %4694, -1
  %4696 = icmp slt i32 %4692, %4695
  br i1 %4696, label %4697, label %4712

4697:                                             ; preds = %4689
  br i1 %4684, label %4704, label %4698

4698:                                             ; preds = %4697
  %4699 = getelementptr inbounds i32, ptr %7, i64 %4690
  %4700 = load i32, ptr %4699, align 4, !tbaa !5
  %4701 = getelementptr inbounds i32, ptr %6, i64 %4690
  %4702 = load i32, ptr %4701, align 4, !tbaa !5
  %4703 = add nsw i32 %4702, %4700
  store i32 %4703, ptr %4701, align 4, !tbaa !5
  br label %4722

4704:                                             ; preds = %4680, %4697
  %4705 = phi i32 [ %4692, %4697 ], [ %4681, %4680 ]
  %4706 = phi ptr [ %4691, %4697 ], [ %4, %4680 ]
  %4707 = phi i64 [ %4690, %4697 ], [ 0, %4680 ]
  %4708 = add nsw i32 %4705, 1
  store i32 %4708, ptr %4706, align 4, !tbaa !5
  %4709 = getelementptr inbounds i32, ptr %7, i64 %4707
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = getelementptr inbounds i32, ptr %6, i64 %4707
  br label %4722

4712:                                             ; preds = %4689
  %4713 = icmp eq i32 %4692, %4695
  br i1 %4713, label %4714, label %4720

4714:                                             ; preds = %4712
  store i32 0, ptr %4691, align 4, !tbaa !5
  %4715 = getelementptr inbounds i32, ptr %8, i64 %4690
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = getelementptr inbounds i32, ptr %6, i64 %4690
  store i32 %4716, ptr %4717, align 4, !tbaa !5
  %4718 = add nuw nsw i64 %4690, 1
  %4719 = icmp eq i64 %4718, %4593
  br i1 %4719, label %4727, label %4689, !llvm.loop !1097

4720:                                             ; preds = %4685, %4712
  %4721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4722:                                             ; preds = %4698, %4704
  %4723 = phi ptr [ %4711, %4704 ], [ %4691, %4698 ]
  %4724 = phi i32 [ %4710, %4704 ], [ 1, %4698 ]
  %4725 = load i32, ptr %4723, align 4, !tbaa !5
  %4726 = add nsw i32 %4725, %4724
  store i32 %4726, ptr %4723, align 4, !tbaa !5
  br label %4727

4727:                                             ; preds = %4714, %4722, %4687, %4677
  %4728 = icmp eq i32 %4679, %5
  br i1 %4728, label %5477, label %4596, !llvm.loop !1098

4729:                                             ; preds = %4579, %4867
  %4730 = phi float [ %4270, %4579 ], [ %4815, %4867 ]
  %4731 = phi i32 [ 0, %4579 ], [ %4816, %4867 ]
  %4732 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4580, label %4733, label %4802

4733:                                             ; preds = %4729, %4792
  %4734 = phi i32 [ %4801, %4792 ], [ 0, %4729 ]
  %4735 = phi i64 [ %4743, %4792 ], [ %4584, %4729 ]
  %4736 = phi i64 [ %4800, %4792 ], [ %4583, %4729 ]
  %4737 = phi i32 [ %4798, %4792 ], [ %4732, %4729 ]
  %4738 = sub i32 %4582, %4734
  %4739 = tail call i32 @llvm.smin.i32(i32 %4738, i32 0)
  %4740 = sub i32 %4738, %4739
  %4741 = zext i32 %4740 to i64
  %4742 = add nuw nsw i64 %4741, 1
  %4743 = add nsw i64 %4735, -1
  %4744 = icmp ult i32 %4740, 31
  br i1 %4744, label %4780, label %4745

4745:                                             ; preds = %4733
  %4746 = and i64 %4742, 8589934560
  %4747 = sub i64 %4736, %4746
  br label %4748

4748:                                             ; preds = %4748, %4745
  %4749 = phi i64 [ 0, %4745 ], [ %4772, %4748 ]
  %4750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4768, %4748 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4769, %4748 ]
  %4752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4770, %4748 ]
  %4753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4771, %4748 ]
  %4754 = sub i64 %4736, %4749
  %4755 = getelementptr inbounds i32, ptr %11, i64 %4754
  %4756 = getelementptr inbounds i32, ptr %4755, i64 -7
  %4757 = load <8 x i32>, ptr %4756, align 4, !tbaa !5
  %4758 = shufflevector <8 x i32> %4757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4759 = getelementptr inbounds i32, ptr %4755, i64 -15
  %4760 = load <8 x i32>, ptr %4759, align 4, !tbaa !5
  %4761 = shufflevector <8 x i32> %4760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4762 = getelementptr inbounds i32, ptr %4755, i64 -23
  %4763 = load <8 x i32>, ptr %4762, align 4, !tbaa !5
  %4764 = shufflevector <8 x i32> %4763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4765 = getelementptr inbounds i32, ptr %4755, i64 -31
  %4766 = load <8 x i32>, ptr %4765, align 4, !tbaa !5
  %4767 = shufflevector <8 x i32> %4766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4768 = mul <8 x i32> %4758, %4750
  %4769 = mul <8 x i32> %4761, %4751
  %4770 = mul <8 x i32> %4764, %4752
  %4771 = mul <8 x i32> %4767, %4753
  %4772 = add nuw i64 %4749, 32
  %4773 = icmp eq i64 %4772, %4746
  br i1 %4773, label %4774, label %4748, !llvm.loop !1099

4774:                                             ; preds = %4748
  %4775 = mul <8 x i32> %4769, %4768
  %4776 = mul <8 x i32> %4770, %4775
  %4777 = mul <8 x i32> %4771, %4776
  %4778 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4777)
  %4779 = icmp eq i64 %4742, %4746
  br i1 %4779, label %4792, label %4780

4780:                                             ; preds = %4733, %4774
  %4781 = phi i64 [ %4736, %4733 ], [ %4747, %4774 ]
  %4782 = phi i32 [ 1, %4733 ], [ %4778, %4774 ]
  br label %4783

4783:                                             ; preds = %4780, %4783
  %4784 = phi i64 [ %4789, %4783 ], [ %4781, %4780 ]
  %4785 = phi i32 [ %4788, %4783 ], [ %4782, %4780 ]
  %4786 = getelementptr inbounds i32, ptr %11, i64 %4784
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = mul nsw i32 %4787, %4785
  %4789 = add nsw i64 %4784, -1
  %4790 = trunc i64 %4784 to i32
  %4791 = icmp sgt i32 %4790, 0
  br i1 %4791, label %4783, label %4792, !llvm.loop !1100

4792:                                             ; preds = %4783, %4774
  %4793 = phi i32 [ %4778, %4774 ], [ %4788, %4783 ]
  %4794 = and i64 %4743, 4294967295
  %4795 = getelementptr inbounds i32, ptr %6, i64 %4794
  %4796 = load i32, ptr %4795, align 4, !tbaa !5
  %4797 = mul nsw i32 %4796, %4793
  %4798 = add nsw i32 %4797, %4737
  %4799 = icmp sgt i64 %4735, 2
  %4800 = add nsw i64 %4736, -1
  %4801 = add i32 %4734, 1
  br i1 %4799, label %4733, label %4802, !llvm.loop !1101

4802:                                             ; preds = %4792, %4729
  %4803 = phi i32 [ %4732, %4729 ], [ %4798, %4792 ]
  %4804 = icmp slt i32 %4803, %5
  br i1 %4804, label %4807, label %4805

4805:                                             ; preds = %4802
  %4806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4807:                                             ; preds = %4802
  %4808 = sext i32 %4803 to i64
  %4809 = getelementptr inbounds double, ptr %4266, i64 %4808
  %4810 = load double, ptr %4809, align 8, !tbaa !18
  %4811 = fptrunc double %4810 to float
  %4812 = fcmp fast ogt float %4730, %4811
  br i1 %4812, label %4813, label %4814

4813:                                             ; preds = %4807
  store float %4811, ptr %4268, align 4, !tbaa !162
  br label %4814

4814:                                             ; preds = %4813, %4807
  %4815 = phi float [ %4811, %4813 ], [ %4730, %4807 ]
  %4816 = add nuw nsw i32 %4731, 1
  br i1 %4581, label %4817, label %4867

4817:                                             ; preds = %4814
  %4818 = load i32, ptr %4, align 4, !tbaa !5
  %4819 = load i32, ptr %12, align 4, !tbaa !5
  %4820 = add nsw i32 %4819, -1
  %4821 = icmp slt i32 %4818, %4820
  br i1 %4821, label %4844, label %4822

4822:                                             ; preds = %4817
  %4823 = icmp eq i32 %4818, %4820
  br i1 %4823, label %4824, label %4860

4824:                                             ; preds = %4822
  store i32 0, ptr %4, align 4, !tbaa !5
  %4825 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4825, ptr %6, align 4, !tbaa !5
  br i1 %4586, label %4867, label %4826

4826:                                             ; preds = %4824, %4854
  %4827 = phi i64 [ %4858, %4854 ], [ 1, %4824 ]
  %4828 = getelementptr inbounds i32, ptr %4, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = getelementptr inbounds i32, ptr %12, i64 %4827
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, -1
  %4833 = icmp slt i32 %4829, %4832
  br i1 %4833, label %4834, label %4852

4834:                                             ; preds = %4826
  br i1 %4821, label %4844, label %4835

4835:                                             ; preds = %4834
  %4836 = shl i64 %4827, 32
  %4837 = add i64 %4836, -4294967296
  %4838 = ashr exact i64 %4837, 32
  %4839 = getelementptr inbounds i32, ptr %7, i64 %4838
  %4840 = load i32, ptr %4839, align 4, !tbaa !5
  %4841 = getelementptr inbounds i32, ptr %6, i64 %4827
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = add nsw i32 %4842, %4840
  store i32 %4843, ptr %4841, align 4, !tbaa !5
  br label %4862

4844:                                             ; preds = %4817, %4834
  %4845 = phi i32 [ %4829, %4834 ], [ %4818, %4817 ]
  %4846 = phi ptr [ %4828, %4834 ], [ %4, %4817 ]
  %4847 = phi i64 [ %4827, %4834 ], [ 0, %4817 ]
  %4848 = add nsw i32 %4845, 1
  store i32 %4848, ptr %4846, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %7, i64 %4847
  %4850 = load i32, ptr %4849, align 4, !tbaa !5
  %4851 = getelementptr inbounds i32, ptr %6, i64 %4847
  br label %4862

4852:                                             ; preds = %4826
  %4853 = icmp eq i32 %4829, %4832
  br i1 %4853, label %4854, label %4860

4854:                                             ; preds = %4852
  store i32 0, ptr %4828, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %8, i64 %4827
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = getelementptr inbounds i32, ptr %6, i64 %4827
  store i32 %4856, ptr %4857, align 4, !tbaa !5
  %4858 = add nuw nsw i64 %4827, 1
  %4859 = icmp eq i64 %4858, %4584
  br i1 %4859, label %4867, label %4826, !llvm.loop !1102

4860:                                             ; preds = %4822, %4852
  %4861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4862:                                             ; preds = %4835, %4844
  %4863 = phi ptr [ %4851, %4844 ], [ %4828, %4835 ]
  %4864 = phi i32 [ %4850, %4844 ], [ 1, %4835 ]
  %4865 = load i32, ptr %4863, align 4, !tbaa !5
  %4866 = add nsw i32 %4865, %4864
  store i32 %4866, ptr %4863, align 4, !tbaa !5
  br label %4867

4867:                                             ; preds = %4854, %4862, %4824, %4814
  %4868 = icmp eq i32 %4816, %5
  br i1 %4868, label %5477, label %4729, !llvm.loop !1103

4869:                                             ; preds = %4272
  %4870 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

4871:                                             ; preds = %18
  %4872 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4873 = load ptr, ptr %4872, align 8, !tbaa !9
  %4874 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4875 = load ptr, ptr %4874, align 8, !tbaa !9
  %4876 = load double, ptr %4873, align 8, !tbaa !18
  store double %4876, ptr %4875, align 8, !tbaa !18
  %4877 = icmp eq i32 %13, 0
  br i1 %4877, label %4878, label %4882

4878:                                             ; preds = %4871
  %4879 = load double, ptr %4873, align 8, !tbaa !18
  %4880 = fcmp fast ogt double %4876, %4879
  br i1 %4880, label %4881, label %5477

4881:                                             ; preds = %4878
  store double %4879, ptr %4875, align 8, !tbaa !18
  br label %5477

4882:                                             ; preds = %4871
  switch i32 %1, label %5475 [
    i32 1, label %4883
    i32 0, label %5181
  ]

4883:                                             ; preds = %4882
  %4884 = getelementptr inbounds i32, ptr %3, i64 %19
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = icmp eq i32 %4885, 0
  %4887 = icmp sgt i32 %5, 0
  br i1 %4886, label %4897, label %4888

4888:                                             ; preds = %4883
  br i1 %4887, label %4889, label %5477

4889:                                             ; preds = %4888
  %4890 = icmp sgt i32 %13, 1
  %4891 = icmp sgt i32 %13, 0
  %4892 = add i32 %13, -2
  %4893 = zext i32 %4892 to i64
  %4894 = zext i32 %13 to i64
  %4895 = add nuw i32 %5, 1
  %4896 = icmp eq i32 %13, 1
  br label %5042

4897:                                             ; preds = %4883
  br i1 %4887, label %4898, label %5477

4898:                                             ; preds = %4897
  %4899 = icmp sgt i32 %13, 1
  %4900 = icmp sgt i32 %13, 0
  %4901 = add i32 %13, -2
  %4902 = zext i32 %4901 to i64
  %4903 = zext i32 %13 to i64
  %4904 = add nuw i32 %5, 1
  %4905 = icmp eq i32 %13, 1
  br label %4906

4906:                                             ; preds = %4898, %5040
  %4907 = phi double [ %4876, %4898 ], [ %4991, %5040 ]
  %4908 = phi i32 [ 0, %4898 ], [ %4992, %5040 ]
  %4909 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4899, label %4910, label %4979

4910:                                             ; preds = %4906, %4969
  %4911 = phi i32 [ %4978, %4969 ], [ 0, %4906 ]
  %4912 = phi i64 [ %4920, %4969 ], [ %4903, %4906 ]
  %4913 = phi i64 [ %4977, %4969 ], [ %4902, %4906 ]
  %4914 = phi i32 [ %4975, %4969 ], [ %4909, %4906 ]
  %4915 = sub i32 %4901, %4911
  %4916 = tail call i32 @llvm.smin.i32(i32 %4915, i32 0)
  %4917 = sub i32 %4915, %4916
  %4918 = zext i32 %4917 to i64
  %4919 = add nuw nsw i64 %4918, 1
  %4920 = add nsw i64 %4912, -1
  %4921 = icmp ult i32 %4917, 31
  br i1 %4921, label %4957, label %4922

4922:                                             ; preds = %4910
  %4923 = and i64 %4919, 8589934560
  %4924 = sub i64 %4913, %4923
  br label %4925

4925:                                             ; preds = %4925, %4922
  %4926 = phi i64 [ 0, %4922 ], [ %4949, %4925 ]
  %4927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4945, %4925 ]
  %4928 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4946, %4925 ]
  %4929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4947, %4925 ]
  %4930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4948, %4925 ]
  %4931 = sub i64 %4913, %4926
  %4932 = getelementptr inbounds i32, ptr %9, i64 %4931
  %4933 = getelementptr inbounds i32, ptr %4932, i64 -7
  %4934 = load <8 x i32>, ptr %4933, align 4, !tbaa !5
  %4935 = shufflevector <8 x i32> %4934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4936 = getelementptr inbounds i32, ptr %4932, i64 -15
  %4937 = load <8 x i32>, ptr %4936, align 4, !tbaa !5
  %4938 = shufflevector <8 x i32> %4937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4939 = getelementptr inbounds i32, ptr %4932, i64 -23
  %4940 = load <8 x i32>, ptr %4939, align 4, !tbaa !5
  %4941 = shufflevector <8 x i32> %4940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4942 = getelementptr inbounds i32, ptr %4932, i64 -31
  %4943 = load <8 x i32>, ptr %4942, align 4, !tbaa !5
  %4944 = shufflevector <8 x i32> %4943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4945 = mul <8 x i32> %4935, %4927
  %4946 = mul <8 x i32> %4938, %4928
  %4947 = mul <8 x i32> %4941, %4929
  %4948 = mul <8 x i32> %4944, %4930
  %4949 = add nuw i64 %4926, 32
  %4950 = icmp eq i64 %4949, %4923
  br i1 %4950, label %4951, label %4925, !llvm.loop !1104

4951:                                             ; preds = %4925
  %4952 = mul <8 x i32> %4946, %4945
  %4953 = mul <8 x i32> %4947, %4952
  %4954 = mul <8 x i32> %4948, %4953
  %4955 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4954)
  %4956 = icmp eq i64 %4919, %4923
  br i1 %4956, label %4969, label %4957

4957:                                             ; preds = %4910, %4951
  %4958 = phi i64 [ %4913, %4910 ], [ %4924, %4951 ]
  %4959 = phi i32 [ 1, %4910 ], [ %4955, %4951 ]
  br label %4960

4960:                                             ; preds = %4957, %4960
  %4961 = phi i64 [ %4966, %4960 ], [ %4958, %4957 ]
  %4962 = phi i32 [ %4965, %4960 ], [ %4959, %4957 ]
  %4963 = getelementptr inbounds i32, ptr %9, i64 %4961
  %4964 = load i32, ptr %4963, align 4, !tbaa !5
  %4965 = mul nsw i32 %4964, %4962
  %4966 = add nsw i64 %4961, -1
  %4967 = trunc i64 %4961 to i32
  %4968 = icmp sgt i32 %4967, 0
  br i1 %4968, label %4960, label %4969, !llvm.loop !1105

4969:                                             ; preds = %4960, %4951
  %4970 = phi i32 [ %4955, %4951 ], [ %4965, %4960 ]
  %4971 = and i64 %4920, 4294967295
  %4972 = getelementptr inbounds i32, ptr %6, i64 %4971
  %4973 = load i32, ptr %4972, align 4, !tbaa !5
  %4974 = mul nsw i32 %4973, %4970
  %4975 = add nsw i32 %4974, %4914
  %4976 = icmp sgt i64 %4912, 2
  %4977 = add nsw i64 %4913, -1
  %4978 = add i32 %4911, 1
  br i1 %4976, label %4910, label %4979, !llvm.loop !1106

4979:                                             ; preds = %4969, %4906
  %4980 = phi i32 [ %4909, %4906 ], [ %4975, %4969 ]
  %4981 = sext i32 %4980 to i64
  %4982 = getelementptr inbounds double, ptr %2, i64 %4981
  %4983 = load double, ptr %4982, align 8, !tbaa !18
  %4984 = getelementptr inbounds double, ptr %4873, i64 %4981
  %4985 = load double, ptr %4984, align 8, !tbaa !18
  %4986 = fcmp fast one double %4983, 0.000000e+00
  %4987 = fcmp fast ogt double %4907, %4985
  %4988 = select i1 %4986, i1 %4987, i1 false
  br i1 %4988, label %4989, label %4990

4989:                                             ; preds = %4979
  store double %4985, ptr %4875, align 8, !tbaa !18
  br label %4990

4990:                                             ; preds = %4989, %4979
  %4991 = phi double [ %4985, %4989 ], [ %4907, %4979 ]
  %4992 = add nuw nsw i32 %4908, 1
  br i1 %4900, label %4993, label %5040

4993:                                             ; preds = %4990
  %4994 = load i32, ptr %4, align 4, !tbaa !5
  %4995 = load i32, ptr %12, align 4, !tbaa !5
  %4996 = add nsw i32 %4995, -1
  %4997 = icmp slt i32 %4994, %4996
  br i1 %4997, label %5017, label %4998

4998:                                             ; preds = %4993
  %4999 = icmp eq i32 %4994, %4996
  br i1 %4999, label %5000, label %5033

5000:                                             ; preds = %4998
  store i32 0, ptr %4, align 4, !tbaa !5
  %5001 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5001, ptr %6, align 4, !tbaa !5
  br i1 %4905, label %5040, label %5002

5002:                                             ; preds = %5000, %5027
  %5003 = phi i64 [ %5031, %5027 ], [ 1, %5000 ]
  %5004 = getelementptr inbounds i32, ptr %4, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !5
  %5006 = getelementptr inbounds i32, ptr %12, i64 %5003
  %5007 = load i32, ptr %5006, align 4, !tbaa !5
  %5008 = add nsw i32 %5007, -1
  %5009 = icmp slt i32 %5005, %5008
  br i1 %5009, label %5010, label %5025

5010:                                             ; preds = %5002
  br i1 %4997, label %5017, label %5011

5011:                                             ; preds = %5010
  %5012 = getelementptr inbounds i32, ptr %7, i64 %5003
  %5013 = load i32, ptr %5012, align 4, !tbaa !5
  %5014 = getelementptr inbounds i32, ptr %6, i64 %5003
  %5015 = load i32, ptr %5014, align 4, !tbaa !5
  %5016 = add nsw i32 %5015, %5013
  store i32 %5016, ptr %5014, align 4, !tbaa !5
  br label %5035

5017:                                             ; preds = %4993, %5010
  %5018 = phi i32 [ %5005, %5010 ], [ %4994, %4993 ]
  %5019 = phi ptr [ %5004, %5010 ], [ %4, %4993 ]
  %5020 = phi i64 [ %5003, %5010 ], [ 0, %4993 ]
  %5021 = add nsw i32 %5018, 1
  store i32 %5021, ptr %5019, align 4, !tbaa !5
  %5022 = getelementptr inbounds i32, ptr %7, i64 %5020
  %5023 = load i32, ptr %5022, align 4, !tbaa !5
  %5024 = getelementptr inbounds i32, ptr %6, i64 %5020
  br label %5035

5025:                                             ; preds = %5002
  %5026 = icmp eq i32 %5005, %5008
  br i1 %5026, label %5027, label %5033

5027:                                             ; preds = %5025
  store i32 0, ptr %5004, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %8, i64 %5003
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5003
  store i32 %5029, ptr %5030, align 4, !tbaa !5
  %5031 = add nuw nsw i64 %5003, 1
  %5032 = icmp eq i64 %5031, %4903
  br i1 %5032, label %5040, label %5002, !llvm.loop !1107

5033:                                             ; preds = %4998, %5025
  %5034 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5035:                                             ; preds = %5011, %5017
  %5036 = phi ptr [ %5024, %5017 ], [ %5004, %5011 ]
  %5037 = phi i32 [ %5023, %5017 ], [ 1, %5011 ]
  %5038 = load i32, ptr %5036, align 4, !tbaa !5
  %5039 = add nsw i32 %5038, %5037
  store i32 %5039, ptr %5036, align 4, !tbaa !5
  br label %5040

5040:                                             ; preds = %5027, %5035, %5000, %4990
  %5041 = icmp eq i32 %4992, %5
  br i1 %5041, label %5477, label %4906, !llvm.loop !1108

5042:                                             ; preds = %4889, %5179
  %5043 = phi double [ %4876, %4889 ], [ %5127, %5179 ]
  %5044 = phi i32 [ 0, %4889 ], [ %5128, %5179 ]
  %5045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4890, label %5046, label %5115

5046:                                             ; preds = %5042, %5105
  %5047 = phi i32 [ %5114, %5105 ], [ 0, %5042 ]
  %5048 = phi i64 [ %5056, %5105 ], [ %4894, %5042 ]
  %5049 = phi i64 [ %5113, %5105 ], [ %4893, %5042 ]
  %5050 = phi i32 [ %5111, %5105 ], [ %5045, %5042 ]
  %5051 = sub i32 %4892, %5047
  %5052 = tail call i32 @llvm.smin.i32(i32 %5051, i32 0)
  %5053 = sub i32 %5051, %5052
  %5054 = zext i32 %5053 to i64
  %5055 = add nuw nsw i64 %5054, 1
  %5056 = add nsw i64 %5048, -1
  %5057 = icmp ult i32 %5053, 31
  br i1 %5057, label %5093, label %5058

5058:                                             ; preds = %5046
  %5059 = and i64 %5055, 8589934560
  %5060 = sub i64 %5049, %5059
  br label %5061

5061:                                             ; preds = %5061, %5058
  %5062 = phi i64 [ 0, %5058 ], [ %5085, %5061 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5081, %5061 ]
  %5064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5082, %5061 ]
  %5065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5083, %5061 ]
  %5066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5084, %5061 ]
  %5067 = sub i64 %5049, %5062
  %5068 = getelementptr inbounds i32, ptr %11, i64 %5067
  %5069 = getelementptr inbounds i32, ptr %5068, i64 -7
  %5070 = load <8 x i32>, ptr %5069, align 4, !tbaa !5
  %5071 = shufflevector <8 x i32> %5070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5072 = getelementptr inbounds i32, ptr %5068, i64 -15
  %5073 = load <8 x i32>, ptr %5072, align 4, !tbaa !5
  %5074 = shufflevector <8 x i32> %5073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5075 = getelementptr inbounds i32, ptr %5068, i64 -23
  %5076 = load <8 x i32>, ptr %5075, align 4, !tbaa !5
  %5077 = shufflevector <8 x i32> %5076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5078 = getelementptr inbounds i32, ptr %5068, i64 -31
  %5079 = load <8 x i32>, ptr %5078, align 4, !tbaa !5
  %5080 = shufflevector <8 x i32> %5079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5081 = mul <8 x i32> %5071, %5063
  %5082 = mul <8 x i32> %5074, %5064
  %5083 = mul <8 x i32> %5077, %5065
  %5084 = mul <8 x i32> %5080, %5066
  %5085 = add nuw i64 %5062, 32
  %5086 = icmp eq i64 %5085, %5059
  br i1 %5086, label %5087, label %5061, !llvm.loop !1109

5087:                                             ; preds = %5061
  %5088 = mul <8 x i32> %5082, %5081
  %5089 = mul <8 x i32> %5083, %5088
  %5090 = mul <8 x i32> %5084, %5089
  %5091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5090)
  %5092 = icmp eq i64 %5055, %5059
  br i1 %5092, label %5105, label %5093

5093:                                             ; preds = %5046, %5087
  %5094 = phi i64 [ %5049, %5046 ], [ %5060, %5087 ]
  %5095 = phi i32 [ 1, %5046 ], [ %5091, %5087 ]
  br label %5096

5096:                                             ; preds = %5093, %5096
  %5097 = phi i64 [ %5102, %5096 ], [ %5094, %5093 ]
  %5098 = phi i32 [ %5101, %5096 ], [ %5095, %5093 ]
  %5099 = getelementptr inbounds i32, ptr %11, i64 %5097
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = mul nsw i32 %5100, %5098
  %5102 = add nsw i64 %5097, -1
  %5103 = trunc i64 %5097 to i32
  %5104 = icmp sgt i32 %5103, 0
  br i1 %5104, label %5096, label %5105, !llvm.loop !1110

5105:                                             ; preds = %5096, %5087
  %5106 = phi i32 [ %5091, %5087 ], [ %5101, %5096 ]
  %5107 = and i64 %5056, 4294967295
  %5108 = getelementptr inbounds i32, ptr %6, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = mul nsw i32 %5109, %5106
  %5111 = add nsw i32 %5110, %5050
  %5112 = icmp sgt i64 %5048, 2
  %5113 = add nsw i64 %5049, -1
  %5114 = add i32 %5047, 1
  br i1 %5112, label %5046, label %5115, !llvm.loop !1111

5115:                                             ; preds = %5105, %5042
  %5116 = phi i32 [ %5045, %5042 ], [ %5111, %5105 ]
  %5117 = icmp slt i32 %5116, %5
  br i1 %5117, label %5120, label %5118

5118:                                             ; preds = %5115
  %5119 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

5120:                                             ; preds = %5115
  %5121 = sext i32 %5116 to i64
  %5122 = getelementptr inbounds double, ptr %4873, i64 %5121
  %5123 = load double, ptr %5122, align 8, !tbaa !18
  %5124 = fcmp fast ogt double %5043, %5123
  br i1 %5124, label %5125, label %5126

5125:                                             ; preds = %5120
  store double %5123, ptr %4875, align 8, !tbaa !18
  br label %5126

5126:                                             ; preds = %5120, %5125
  %5127 = phi double [ %5043, %5120 ], [ %5123, %5125 ]
  %5128 = add nuw nsw i32 %5044, 1
  br i1 %4891, label %5129, label %5179

5129:                                             ; preds = %5126
  %5130 = load i32, ptr %4, align 4, !tbaa !5
  %5131 = load i32, ptr %12, align 4, !tbaa !5
  %5132 = add nsw i32 %5131, -1
  %5133 = icmp slt i32 %5130, %5132
  br i1 %5133, label %5156, label %5134

5134:                                             ; preds = %5129
  %5135 = icmp eq i32 %5130, %5132
  br i1 %5135, label %5136, label %5172

5136:                                             ; preds = %5134
  store i32 0, ptr %4, align 4, !tbaa !5
  %5137 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5137, ptr %6, align 4, !tbaa !5
  br i1 %4896, label %5179, label %5138

5138:                                             ; preds = %5136, %5166
  %5139 = phi i64 [ %5170, %5166 ], [ 1, %5136 ]
  %5140 = getelementptr inbounds i32, ptr %4, i64 %5139
  %5141 = load i32, ptr %5140, align 4, !tbaa !5
  %5142 = getelementptr inbounds i32, ptr %12, i64 %5139
  %5143 = load i32, ptr %5142, align 4, !tbaa !5
  %5144 = add nsw i32 %5143, -1
  %5145 = icmp slt i32 %5141, %5144
  br i1 %5145, label %5146, label %5164

5146:                                             ; preds = %5138
  br i1 %5133, label %5156, label %5147

5147:                                             ; preds = %5146
  %5148 = shl i64 %5139, 32
  %5149 = add i64 %5148, -4294967296
  %5150 = ashr exact i64 %5149, 32
  %5151 = getelementptr inbounds i32, ptr %7, i64 %5150
  %5152 = load i32, ptr %5151, align 4, !tbaa !5
  %5153 = getelementptr inbounds i32, ptr %6, i64 %5139
  %5154 = load i32, ptr %5153, align 4, !tbaa !5
  %5155 = add nsw i32 %5154, %5152
  store i32 %5155, ptr %5153, align 4, !tbaa !5
  br label %5174

5156:                                             ; preds = %5129, %5146
  %5157 = phi i32 [ %5141, %5146 ], [ %5130, %5129 ]
  %5158 = phi ptr [ %5140, %5146 ], [ %4, %5129 ]
  %5159 = phi i64 [ %5139, %5146 ], [ 0, %5129 ]
  %5160 = add nsw i32 %5157, 1
  store i32 %5160, ptr %5158, align 4, !tbaa !5
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5159
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5159
  br label %5174

5164:                                             ; preds = %5138
  %5165 = icmp eq i32 %5141, %5144
  br i1 %5165, label %5166, label %5172

5166:                                             ; preds = %5164
  store i32 0, ptr %5140, align 4, !tbaa !5
  %5167 = getelementptr inbounds i32, ptr %8, i64 %5139
  %5168 = load i32, ptr %5167, align 4, !tbaa !5
  %5169 = getelementptr inbounds i32, ptr %6, i64 %5139
  store i32 %5168, ptr %5169, align 4, !tbaa !5
  %5170 = add nuw nsw i64 %5139, 1
  %5171 = icmp eq i64 %5170, %4894
  br i1 %5171, label %5179, label %5138, !llvm.loop !1112

5172:                                             ; preds = %5134, %5164
  %5173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5174:                                             ; preds = %5147, %5156
  %5175 = phi ptr [ %5163, %5156 ], [ %5140, %5147 ]
  %5176 = phi i32 [ %5162, %5156 ], [ 1, %5147 ]
  %5177 = load i32, ptr %5175, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, %5176
  store i32 %5178, ptr %5175, align 4, !tbaa !5
  br label %5179

5179:                                             ; preds = %5166, %5174, %5136, %5126
  %5180 = icmp eq i32 %5128, %5
  br i1 %5180, label %5477, label %5042, !llvm.loop !1113

5181:                                             ; preds = %4882
  %5182 = getelementptr inbounds i32, ptr %3, i64 %19
  %5183 = load i32, ptr %5182, align 4, !tbaa !5
  %5184 = icmp eq i32 %5183, 0
  %5185 = icmp sgt i32 %5, 0
  br i1 %5184, label %5195, label %5186

5186:                                             ; preds = %5181
  br i1 %5185, label %5187, label %5477

5187:                                             ; preds = %5186
  %5188 = icmp sgt i32 %13, 1
  %5189 = icmp sgt i32 %13, 0
  %5190 = add i32 %13, -2
  %5191 = zext i32 %5190 to i64
  %5192 = zext i32 %13 to i64
  %5193 = add nuw i32 %5, 1
  %5194 = icmp eq i32 %13, 1
  br label %5336

5195:                                             ; preds = %5181
  br i1 %5185, label %5196, label %5477

5196:                                             ; preds = %5195
  %5197 = icmp sgt i32 %13, 1
  %5198 = icmp sgt i32 %13, 0
  %5199 = add i32 %13, -2
  %5200 = zext i32 %5199 to i64
  %5201 = zext i32 %13 to i64
  %5202 = add nuw i32 %5, 1
  %5203 = icmp eq i32 %13, 1
  br label %5204

5204:                                             ; preds = %5196, %5334
  %5205 = phi double [ %4876, %5196 ], [ %5285, %5334 ]
  %5206 = phi i32 [ 0, %5196 ], [ %5286, %5334 ]
  %5207 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5197, label %5208, label %5277

5208:                                             ; preds = %5204, %5267
  %5209 = phi i32 [ %5276, %5267 ], [ 0, %5204 ]
  %5210 = phi i64 [ %5218, %5267 ], [ %5201, %5204 ]
  %5211 = phi i64 [ %5275, %5267 ], [ %5200, %5204 ]
  %5212 = phi i32 [ %5273, %5267 ], [ %5207, %5204 ]
  %5213 = sub i32 %5199, %5209
  %5214 = tail call i32 @llvm.smin.i32(i32 %5213, i32 0)
  %5215 = sub i32 %5213, %5214
  %5216 = zext i32 %5215 to i64
  %5217 = add nuw nsw i64 %5216, 1
  %5218 = add nsw i64 %5210, -1
  %5219 = icmp ult i32 %5215, 31
  br i1 %5219, label %5255, label %5220

5220:                                             ; preds = %5208
  %5221 = and i64 %5217, 8589934560
  %5222 = sub i64 %5211, %5221
  br label %5223

5223:                                             ; preds = %5223, %5220
  %5224 = phi i64 [ 0, %5220 ], [ %5247, %5223 ]
  %5225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5243, %5223 ]
  %5226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5244, %5223 ]
  %5227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5245, %5223 ]
  %5228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5246, %5223 ]
  %5229 = sub i64 %5211, %5224
  %5230 = getelementptr inbounds i32, ptr %9, i64 %5229
  %5231 = getelementptr inbounds i32, ptr %5230, i64 -7
  %5232 = load <8 x i32>, ptr %5231, align 4, !tbaa !5
  %5233 = shufflevector <8 x i32> %5232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5234 = getelementptr inbounds i32, ptr %5230, i64 -15
  %5235 = load <8 x i32>, ptr %5234, align 4, !tbaa !5
  %5236 = shufflevector <8 x i32> %5235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5237 = getelementptr inbounds i32, ptr %5230, i64 -23
  %5238 = load <8 x i32>, ptr %5237, align 4, !tbaa !5
  %5239 = shufflevector <8 x i32> %5238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5240 = getelementptr inbounds i32, ptr %5230, i64 -31
  %5241 = load <8 x i32>, ptr %5240, align 4, !tbaa !5
  %5242 = shufflevector <8 x i32> %5241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5243 = mul <8 x i32> %5233, %5225
  %5244 = mul <8 x i32> %5236, %5226
  %5245 = mul <8 x i32> %5239, %5227
  %5246 = mul <8 x i32> %5242, %5228
  %5247 = add nuw i64 %5224, 32
  %5248 = icmp eq i64 %5247, %5221
  br i1 %5248, label %5249, label %5223, !llvm.loop !1114

5249:                                             ; preds = %5223
  %5250 = mul <8 x i32> %5244, %5243
  %5251 = mul <8 x i32> %5245, %5250
  %5252 = mul <8 x i32> %5246, %5251
  %5253 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5252)
  %5254 = icmp eq i64 %5217, %5221
  br i1 %5254, label %5267, label %5255

5255:                                             ; preds = %5208, %5249
  %5256 = phi i64 [ %5211, %5208 ], [ %5222, %5249 ]
  %5257 = phi i32 [ 1, %5208 ], [ %5253, %5249 ]
  br label %5258

5258:                                             ; preds = %5255, %5258
  %5259 = phi i64 [ %5264, %5258 ], [ %5256, %5255 ]
  %5260 = phi i32 [ %5263, %5258 ], [ %5257, %5255 ]
  %5261 = getelementptr inbounds i32, ptr %9, i64 %5259
  %5262 = load i32, ptr %5261, align 4, !tbaa !5
  %5263 = mul nsw i32 %5262, %5260
  %5264 = add nsw i64 %5259, -1
  %5265 = trunc i64 %5259 to i32
  %5266 = icmp sgt i32 %5265, 0
  br i1 %5266, label %5258, label %5267, !llvm.loop !1115

5267:                                             ; preds = %5258, %5249
  %5268 = phi i32 [ %5253, %5249 ], [ %5263, %5258 ]
  %5269 = and i64 %5218, 4294967295
  %5270 = getelementptr inbounds i32, ptr %6, i64 %5269
  %5271 = load i32, ptr %5270, align 4, !tbaa !5
  %5272 = mul nsw i32 %5271, %5268
  %5273 = add nsw i32 %5272, %5212
  %5274 = icmp sgt i64 %5210, 2
  %5275 = add nsw i64 %5211, -1
  %5276 = add i32 %5209, 1
  br i1 %5274, label %5208, label %5277, !llvm.loop !1116

5277:                                             ; preds = %5267, %5204
  %5278 = phi i32 [ %5207, %5204 ], [ %5273, %5267 ]
  %5279 = sext i32 %5278 to i64
  %5280 = getelementptr inbounds double, ptr %4873, i64 %5279
  %5281 = load double, ptr %5280, align 8, !tbaa !18
  %5282 = fcmp fast ogt double %5205, %5281
  br i1 %5282, label %5283, label %5284

5283:                                             ; preds = %5277
  store double %5281, ptr %4875, align 8, !tbaa !18
  br label %5284

5284:                                             ; preds = %5283, %5277
  %5285 = phi double [ %5281, %5283 ], [ %5205, %5277 ]
  %5286 = add nuw nsw i32 %5206, 1
  br i1 %5198, label %5287, label %5334

5287:                                             ; preds = %5284
  %5288 = load i32, ptr %4, align 4, !tbaa !5
  %5289 = load i32, ptr %12, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, -1
  %5291 = icmp slt i32 %5288, %5290
  br i1 %5291, label %5311, label %5292

5292:                                             ; preds = %5287
  %5293 = icmp eq i32 %5288, %5290
  br i1 %5293, label %5294, label %5327

5294:                                             ; preds = %5292
  store i32 0, ptr %4, align 4, !tbaa !5
  %5295 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5295, ptr %6, align 4, !tbaa !5
  br i1 %5203, label %5334, label %5296

5296:                                             ; preds = %5294, %5321
  %5297 = phi i64 [ %5325, %5321 ], [ 1, %5294 ]
  %5298 = getelementptr inbounds i32, ptr %4, i64 %5297
  %5299 = load i32, ptr %5298, align 4, !tbaa !5
  %5300 = getelementptr inbounds i32, ptr %12, i64 %5297
  %5301 = load i32, ptr %5300, align 4, !tbaa !5
  %5302 = add nsw i32 %5301, -1
  %5303 = icmp slt i32 %5299, %5302
  br i1 %5303, label %5304, label %5319

5304:                                             ; preds = %5296
  br i1 %5291, label %5311, label %5305

5305:                                             ; preds = %5304
  %5306 = getelementptr inbounds i32, ptr %7, i64 %5297
  %5307 = load i32, ptr %5306, align 4, !tbaa !5
  %5308 = getelementptr inbounds i32, ptr %6, i64 %5297
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = add nsw i32 %5309, %5307
  store i32 %5310, ptr %5308, align 4, !tbaa !5
  br label %5329

5311:                                             ; preds = %5287, %5304
  %5312 = phi i32 [ %5299, %5304 ], [ %5288, %5287 ]
  %5313 = phi ptr [ %5298, %5304 ], [ %4, %5287 ]
  %5314 = phi i64 [ %5297, %5304 ], [ 0, %5287 ]
  %5315 = add nsw i32 %5312, 1
  store i32 %5315, ptr %5313, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %7, i64 %5314
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = getelementptr inbounds i32, ptr %6, i64 %5314
  br label %5329

5319:                                             ; preds = %5296
  %5320 = icmp eq i32 %5299, %5302
  br i1 %5320, label %5321, label %5327

5321:                                             ; preds = %5319
  store i32 0, ptr %5298, align 4, !tbaa !5
  %5322 = getelementptr inbounds i32, ptr %8, i64 %5297
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5297
  store i32 %5323, ptr %5324, align 4, !tbaa !5
  %5325 = add nuw nsw i64 %5297, 1
  %5326 = icmp eq i64 %5325, %5201
  br i1 %5326, label %5334, label %5296, !llvm.loop !1117

5327:                                             ; preds = %5292, %5319
  %5328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5329:                                             ; preds = %5305, %5311
  %5330 = phi ptr [ %5318, %5311 ], [ %5298, %5305 ]
  %5331 = phi i32 [ %5317, %5311 ], [ 1, %5305 ]
  %5332 = load i32, ptr %5330, align 4, !tbaa !5
  %5333 = add nsw i32 %5332, %5331
  store i32 %5333, ptr %5330, align 4, !tbaa !5
  br label %5334

5334:                                             ; preds = %5321, %5329, %5294, %5284
  %5335 = icmp eq i32 %5286, %5
  br i1 %5335, label %5477, label %5204, !llvm.loop !1118

5336:                                             ; preds = %5187, %5473
  %5337 = phi double [ %4876, %5187 ], [ %5421, %5473 ]
  %5338 = phi i32 [ 0, %5187 ], [ %5422, %5473 ]
  %5339 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5188, label %5340, label %5409

5340:                                             ; preds = %5336, %5399
  %5341 = phi i32 [ %5408, %5399 ], [ 0, %5336 ]
  %5342 = phi i64 [ %5350, %5399 ], [ %5192, %5336 ]
  %5343 = phi i64 [ %5407, %5399 ], [ %5191, %5336 ]
  %5344 = phi i32 [ %5405, %5399 ], [ %5339, %5336 ]
  %5345 = sub i32 %5190, %5341
  %5346 = tail call i32 @llvm.smin.i32(i32 %5345, i32 0)
  %5347 = sub i32 %5345, %5346
  %5348 = zext i32 %5347 to i64
  %5349 = add nuw nsw i64 %5348, 1
  %5350 = add nsw i64 %5342, -1
  %5351 = icmp ult i32 %5347, 31
  br i1 %5351, label %5387, label %5352

5352:                                             ; preds = %5340
  %5353 = and i64 %5349, 8589934560
  %5354 = sub i64 %5343, %5353
  br label %5355

5355:                                             ; preds = %5355, %5352
  %5356 = phi i64 [ 0, %5352 ], [ %5379, %5355 ]
  %5357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5375, %5355 ]
  %5358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5376, %5355 ]
  %5359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5377, %5355 ]
  %5360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5378, %5355 ]
  %5361 = sub i64 %5343, %5356
  %5362 = getelementptr inbounds i32, ptr %11, i64 %5361
  %5363 = getelementptr inbounds i32, ptr %5362, i64 -7
  %5364 = load <8 x i32>, ptr %5363, align 4, !tbaa !5
  %5365 = shufflevector <8 x i32> %5364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5366 = getelementptr inbounds i32, ptr %5362, i64 -15
  %5367 = load <8 x i32>, ptr %5366, align 4, !tbaa !5
  %5368 = shufflevector <8 x i32> %5367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5369 = getelementptr inbounds i32, ptr %5362, i64 -23
  %5370 = load <8 x i32>, ptr %5369, align 4, !tbaa !5
  %5371 = shufflevector <8 x i32> %5370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5372 = getelementptr inbounds i32, ptr %5362, i64 -31
  %5373 = load <8 x i32>, ptr %5372, align 4, !tbaa !5
  %5374 = shufflevector <8 x i32> %5373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5375 = mul <8 x i32> %5365, %5357
  %5376 = mul <8 x i32> %5368, %5358
  %5377 = mul <8 x i32> %5371, %5359
  %5378 = mul <8 x i32> %5374, %5360
  %5379 = add nuw i64 %5356, 32
  %5380 = icmp eq i64 %5379, %5353
  br i1 %5380, label %5381, label %5355, !llvm.loop !1119

5381:                                             ; preds = %5355
  %5382 = mul <8 x i32> %5376, %5375
  %5383 = mul <8 x i32> %5377, %5382
  %5384 = mul <8 x i32> %5378, %5383
  %5385 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5384)
  %5386 = icmp eq i64 %5349, %5353
  br i1 %5386, label %5399, label %5387

5387:                                             ; preds = %5340, %5381
  %5388 = phi i64 [ %5343, %5340 ], [ %5354, %5381 ]
  %5389 = phi i32 [ 1, %5340 ], [ %5385, %5381 ]
  br label %5390

5390:                                             ; preds = %5387, %5390
  %5391 = phi i64 [ %5396, %5390 ], [ %5388, %5387 ]
  %5392 = phi i32 [ %5395, %5390 ], [ %5389, %5387 ]
  %5393 = getelementptr inbounds i32, ptr %11, i64 %5391
  %5394 = load i32, ptr %5393, align 4, !tbaa !5
  %5395 = mul nsw i32 %5394, %5392
  %5396 = add nsw i64 %5391, -1
  %5397 = trunc i64 %5391 to i32
  %5398 = icmp sgt i32 %5397, 0
  br i1 %5398, label %5390, label %5399, !llvm.loop !1120

5399:                                             ; preds = %5390, %5381
  %5400 = phi i32 [ %5385, %5381 ], [ %5395, %5390 ]
  %5401 = and i64 %5350, 4294967295
  %5402 = getelementptr inbounds i32, ptr %6, i64 %5401
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = mul nsw i32 %5403, %5400
  %5405 = add nsw i32 %5404, %5344
  %5406 = icmp sgt i64 %5342, 2
  %5407 = add nsw i64 %5343, -1
  %5408 = add i32 %5341, 1
  br i1 %5406, label %5340, label %5409, !llvm.loop !1121

5409:                                             ; preds = %5399, %5336
  %5410 = phi i32 [ %5339, %5336 ], [ %5405, %5399 ]
  %5411 = icmp slt i32 %5410, %5
  br i1 %5411, label %5414, label %5412

5412:                                             ; preds = %5409
  %5413 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

5414:                                             ; preds = %5409
  %5415 = sext i32 %5410 to i64
  %5416 = getelementptr inbounds double, ptr %4873, i64 %5415
  %5417 = load double, ptr %5416, align 8, !tbaa !18
  %5418 = fcmp fast ogt double %5337, %5417
  br i1 %5418, label %5419, label %5420

5419:                                             ; preds = %5414
  store double %5417, ptr %4875, align 8, !tbaa !18
  br label %5420

5420:                                             ; preds = %5419, %5414
  %5421 = phi double [ %5417, %5419 ], [ %5337, %5414 ]
  %5422 = add nuw nsw i32 %5338, 1
  br i1 %5189, label %5423, label %5473

5423:                                             ; preds = %5420
  %5424 = load i32, ptr %4, align 4, !tbaa !5
  %5425 = load i32, ptr %12, align 4, !tbaa !5
  %5426 = add nsw i32 %5425, -1
  %5427 = icmp slt i32 %5424, %5426
  br i1 %5427, label %5450, label %5428

5428:                                             ; preds = %5423
  %5429 = icmp eq i32 %5424, %5426
  br i1 %5429, label %5430, label %5466

5430:                                             ; preds = %5428
  store i32 0, ptr %4, align 4, !tbaa !5
  %5431 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5431, ptr %6, align 4, !tbaa !5
  br i1 %5194, label %5473, label %5432

5432:                                             ; preds = %5430, %5460
  %5433 = phi i64 [ %5464, %5460 ], [ 1, %5430 ]
  %5434 = getelementptr inbounds i32, ptr %4, i64 %5433
  %5435 = load i32, ptr %5434, align 4, !tbaa !5
  %5436 = getelementptr inbounds i32, ptr %12, i64 %5433
  %5437 = load i32, ptr %5436, align 4, !tbaa !5
  %5438 = add nsw i32 %5437, -1
  %5439 = icmp slt i32 %5435, %5438
  br i1 %5439, label %5440, label %5458

5440:                                             ; preds = %5432
  br i1 %5427, label %5450, label %5441

5441:                                             ; preds = %5440
  %5442 = shl i64 %5433, 32
  %5443 = add i64 %5442, -4294967296
  %5444 = ashr exact i64 %5443, 32
  %5445 = getelementptr inbounds i32, ptr %7, i64 %5444
  %5446 = load i32, ptr %5445, align 4, !tbaa !5
  %5447 = getelementptr inbounds i32, ptr %6, i64 %5433
  %5448 = load i32, ptr %5447, align 4, !tbaa !5
  %5449 = add nsw i32 %5448, %5446
  store i32 %5449, ptr %5447, align 4, !tbaa !5
  br label %5468

5450:                                             ; preds = %5423, %5440
  %5451 = phi i32 [ %5435, %5440 ], [ %5424, %5423 ]
  %5452 = phi ptr [ %5434, %5440 ], [ %4, %5423 ]
  %5453 = phi i64 [ %5433, %5440 ], [ 0, %5423 ]
  %5454 = add nsw i32 %5451, 1
  store i32 %5454, ptr %5452, align 4, !tbaa !5
  %5455 = getelementptr inbounds i32, ptr %7, i64 %5453
  %5456 = load i32, ptr %5455, align 4, !tbaa !5
  %5457 = getelementptr inbounds i32, ptr %6, i64 %5453
  br label %5468

5458:                                             ; preds = %5432
  %5459 = icmp eq i32 %5435, %5438
  br i1 %5459, label %5460, label %5466

5460:                                             ; preds = %5458
  store i32 0, ptr %5434, align 4, !tbaa !5
  %5461 = getelementptr inbounds i32, ptr %8, i64 %5433
  %5462 = load i32, ptr %5461, align 4, !tbaa !5
  %5463 = getelementptr inbounds i32, ptr %6, i64 %5433
  store i32 %5462, ptr %5463, align 4, !tbaa !5
  %5464 = add nuw nsw i64 %5433, 1
  %5465 = icmp eq i64 %5464, %5192
  br i1 %5465, label %5473, label %5432, !llvm.loop !1122

5466:                                             ; preds = %5428, %5458
  %5467 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5468:                                             ; preds = %5441, %5450
  %5469 = phi ptr [ %5457, %5450 ], [ %5434, %5441 ]
  %5470 = phi i32 [ %5456, %5450 ], [ 1, %5441 ]
  %5471 = load i32, ptr %5469, align 4, !tbaa !5
  %5472 = add nsw i32 %5471, %5470
  store i32 %5472, ptr %5469, align 4, !tbaa !5
  br label %5473

5473:                                             ; preds = %5460, %5468, %5430, %5420
  %5474 = icmp eq i32 %5422, %5
  br i1 %5474, label %5477, label %5336, !llvm.loop !1123

5475:                                             ; preds = %4882
  %5476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

5477:                                             ; preds = %5473, %5334, %5179, %5040, %4867, %4727, %4571, %4431, %4260, %4121, %3966, %3827, %3654, %3514, %3358, %3218, %3047, %2908, %2753, %2614, %2444, %2304, %2148, %2008, %1837, %1698, %1543, %1404, %1229, %1090, %935, %796, %626, %487, %332, %193, %5186, %5195, %4888, %4897, %4578, %4587, %4278, %4287, %3973, %3982, %3675, %3684, %3365, %3374, %3065, %3074, %2760, %2769, %2462, %2471, %2155, %2164, %1855, %1864, %1550, %1559, %1252, %1261, %942, %951, %644, %653, %339, %348, %41, %50, %4881, %4878, %5475, %4264, %4869, %3668, %3665, %4262, %3051, %3656, %2448, %3049, %1841, %2446, %1245, %1241, %1839, %630, %1231, %34, %30, %628, %18, %5033, %5118, %5172, %5327, %5412, %5466, %4424, %4509, %4564, %4720, %4805, %4860, %3820, %3905, %3959, %4114, %4199, %4253, %3211, %3296, %3351, %3507, %3592, %3647, %2607, %2691, %2746, %2901, %2985, %3040, %2001, %2086, %2141, %2297, %2382, %2437, %1397, %1481, %1536, %1691, %1775, %1830, %789, %873, %928, %1083, %1167, %1222, %186, %270, %325, %480, %564, %619
  %5478 = phi i32 [ -1, %619 ], [ -1, %564 ], [ -1, %480 ], [ -1, %325 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1222 ], [ -1, %1167 ], [ -1, %1083 ], [ -1, %928 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1830 ], [ -1, %1775 ], [ -1, %1691 ], [ -1, %1536 ], [ -1, %1481 ], [ -1, %1397 ], [ -1, %2437 ], [ -1, %2382 ], [ -1, %2297 ], [ -1, %2141 ], [ -1, %2086 ], [ -1, %2001 ], [ -1, %3040 ], [ -1, %2985 ], [ -1, %2901 ], [ -1, %2746 ], [ -1, %2691 ], [ -1, %2607 ], [ -1, %3647 ], [ -1, %3592 ], [ -1, %3507 ], [ -1, %3351 ], [ -1, %3296 ], [ -1, %3211 ], [ -1, %4253 ], [ -1, %4199 ], [ -1, %4114 ], [ -1, %3959 ], [ -1, %3905 ], [ -1, %3820 ], [ -1, %4860 ], [ -1, %4805 ], [ -1, %4720 ], [ -1, %4564 ], [ -1, %4509 ], [ -1, %4424 ], [ -1, %5466 ], [ -1, %5412 ], [ -1, %5327 ], [ -1, %5172 ], [ -1, %5118 ], [ -1, %5033 ], [ %10, %18 ], [ 1, %628 ], [ 1, %30 ], [ 1, %34 ], [ 1, %630 ], [ 1, %1231 ], [ 1, %1839 ], [ 1, %1241 ], [ 1, %1245 ], [ 1, %1841 ], [ 1, %2446 ], [ 1, %2448 ], [ 1, %3049 ], [ 1, %3051 ], [ 1, %3656 ], [ 1, %4262 ], [ 1, %3665 ], [ 1, %3668 ], [ 1, %4264 ], [ 1, %4869 ], [ 1, %5475 ], [ 1, %4878 ], [ 1, %4881 ], [ 1, %50 ], [ 1, %41 ], [ 1, %348 ], [ 1, %339 ], [ 1, %653 ], [ 1, %644 ], [ 1, %951 ], [ 1, %942 ], [ 1, %1261 ], [ 1, %1252 ], [ 1, %1559 ], [ 1, %1550 ], [ 1, %1864 ], [ 1, %1855 ], [ 1, %2164 ], [ 1, %2155 ], [ 1, %2471 ], [ 1, %2462 ], [ 1, %2769 ], [ 1, %2760 ], [ 1, %3074 ], [ 1, %3065 ], [ 1, %3374 ], [ 1, %3365 ], [ 1, %3684 ], [ 1, %3675 ], [ 1, %3982 ], [ 1, %3973 ], [ 1, %4287 ], [ 1, %4278 ], [ 1, %4587 ], [ 1, %4578 ], [ 1, %4897 ], [ 1, %4888 ], [ 1, %5195 ], [ 1, %5186 ], [ %57, %193 ], [ %48, %332 ], [ %355, %487 ], [ %346, %626 ], [ %660, %796 ], [ %651, %935 ], [ %958, %1090 ], [ %949, %1229 ], [ %1268, %1404 ], [ %1259, %1543 ], [ %1566, %1698 ], [ %1557, %1837 ], [ %1871, %2008 ], [ %1862, %2148 ], [ %2171, %2304 ], [ %2162, %2444 ], [ %2478, %2614 ], [ %2469, %2753 ], [ %2776, %2908 ], [ %2767, %3047 ], [ %3081, %3218 ], [ %3072, %3358 ], [ %3381, %3514 ], [ %3372, %3654 ], [ %3691, %3827 ], [ %3682, %3966 ], [ %3989, %4121 ], [ %3980, %4260 ], [ %4294, %4431 ], [ %4285, %4571 ], [ %4594, %4727 ], [ %4585, %4867 ], [ %4904, %5040 ], [ %4895, %5179 ], [ %5202, %5334 ], [ %5193, %5473 ]
  ret i32 %5478
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5478 [
    i32 101, label %22
    i32 102, label %630
    i32 103, label %1233
    i32 104, label %1841
    i32 105, label %2448
    i32 106, label %3051
    i32 107, label %3658
    i32 108, label %4265
    i32 109, label %4871
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load float, ptr %24, align 4, !tbaa !162
  %28 = fptoui float %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load float, ptr %24, align 4, !tbaa !162
  %32 = fptoui float %31 to i8
  %33 = icmp ugt i8 %28, %32
  br i1 %33, label %34, label %5478

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !11
  br label %5478

35:                                               ; preds = %22
  switch i32 %1, label %628 [
    i32 1, label %36
    i32 0, label %334
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !5
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5478

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %195

50:                                               ; preds = %36
  br i1 %40, label %51, label %5478

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %193
  %60 = phi i32 [ 0, %51 ], [ %145, %193 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %52, label %62, label %131

62:                                               ; preds = %59, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %59 ]
  %64 = phi i64 [ %72, %121 ], [ %56, %59 ]
  %65 = phi i64 [ %129, %121 ], [ %55, %59 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %59 ]
  %67 = sub i32 %54, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !1124

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !1125

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !1126

131:                                              ; preds = %121, %59
  %132 = phi i32 [ %61, %59 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds float, ptr %24, i64 %133
  %137 = load float, ptr %136, align 4, !tbaa !162
  %138 = fptoui float %137 to i8
  %139 = fcmp fast ueq double %135, 0.000000e+00
  br i1 %139, label %144, label %140

140:                                              ; preds = %131
  %141 = load i8, ptr %26, align 1, !tbaa !11
  %142 = icmp ugt i8 %141, %138
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  store i8 %138, ptr %26, align 1, !tbaa !11
  br label %144

144:                                              ; preds = %140, %143, %131
  %145 = add nuw nsw i32 %60, 1
  br i1 %53, label %146, label %193

146:                                              ; preds = %144
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %58, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %56
  br i1 %185, label %193, label %155, !llvm.loop !1127

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %144
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5478, label %59, !llvm.loop !1128

195:                                              ; preds = %42, %332
  %196 = phi i32 [ 0, %42 ], [ %281, %332 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %43, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %47, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %46, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %45, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !1129

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !1130

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !1131

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds float, ptr %24, i64 %273
  %275 = load float, ptr %274, align 4, !tbaa !162
  %276 = fptoui float %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = icmp ugt i8 %277, %276
  br i1 %278, label %279, label %280

279:                                              ; preds = %272
  store i8 %276, ptr %26, align 1, !tbaa !11
  br label %280

280:                                              ; preds = %272, %279
  %281 = add nuw nsw i32 %196, 1
  br i1 %44, label %282, label %332

282:                                              ; preds = %280
  %283 = load i32, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %12, align 4, !tbaa !5
  %285 = add nsw i32 %284, -1
  %286 = icmp slt i32 %283, %285
  br i1 %286, label %309, label %287

287:                                              ; preds = %282
  %288 = icmp eq i32 %283, %285
  br i1 %288, label %289, label %325

289:                                              ; preds = %287
  store i32 0, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %290, ptr %6, align 4, !tbaa !5
  br i1 %49, label %332, label %291

291:                                              ; preds = %289, %319
  %292 = phi i64 [ %323, %319 ], [ 1, %289 ]
  %293 = getelementptr inbounds i32, ptr %4, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !5
  %295 = getelementptr inbounds i32, ptr %12, i64 %292
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = add nsw i32 %296, -1
  %298 = icmp slt i32 %294, %297
  br i1 %298, label %299, label %317

299:                                              ; preds = %291
  br i1 %286, label %309, label %300

300:                                              ; preds = %299
  %301 = shl i64 %292, 32
  %302 = add i64 %301, -4294967296
  %303 = ashr exact i64 %302, 32
  %304 = getelementptr inbounds i32, ptr %7, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = getelementptr inbounds i32, ptr %6, i64 %292
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = add nsw i32 %307, %305
  store i32 %308, ptr %306, align 4, !tbaa !5
  br label %327

309:                                              ; preds = %282, %299
  %310 = phi i32 [ %294, %299 ], [ %283, %282 ]
  %311 = phi ptr [ %293, %299 ], [ %4, %282 ]
  %312 = phi i64 [ %292, %299 ], [ 0, %282 ]
  %313 = add nsw i32 %310, 1
  store i32 %313, ptr %311, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %7, i64 %312
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %312
  br label %327

317:                                              ; preds = %291
  %318 = icmp eq i32 %294, %297
  br i1 %318, label %319, label %325

319:                                              ; preds = %317
  store i32 0, ptr %293, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %8, i64 %292
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %292
  store i32 %321, ptr %322, align 4, !tbaa !5
  %323 = add nuw nsw i64 %292, 1
  %324 = icmp eq i64 %323, %47
  br i1 %324, label %332, label %291, !llvm.loop !1132

325:                                              ; preds = %287, %317
  %326 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

327:                                              ; preds = %300, %309
  %328 = phi ptr [ %316, %309 ], [ %293, %300 ]
  %329 = phi i32 [ %315, %309 ], [ 1, %300 ]
  %330 = load i32, ptr %328, align 4, !tbaa !5
  %331 = add nsw i32 %330, %329
  store i32 %331, ptr %328, align 4, !tbaa !5
  br label %332

332:                                              ; preds = %319, %327, %289, %280
  %333 = icmp eq i32 %281, %5
  br i1 %333, label %5478, label %195, !llvm.loop !1133

334:                                              ; preds = %35
  %335 = getelementptr inbounds i32, ptr %3, i64 %19
  %336 = load i32, ptr %335, align 4, !tbaa !5
  %337 = icmp eq i32 %336, 0
  %338 = icmp sgt i32 %5, 0
  br i1 %337, label %348, label %339

339:                                              ; preds = %334
  br i1 %338, label %340, label %5478

340:                                              ; preds = %339
  %341 = icmp sgt i32 %13, 1
  %342 = icmp sgt i32 %13, 0
  %343 = add i32 %13, -2
  %344 = zext i32 %343 to i64
  %345 = zext i32 %13 to i64
  %346 = add nuw i32 %5, 1
  %347 = icmp eq i32 %13, 1
  br label %489

348:                                              ; preds = %334
  br i1 %338, label %349, label %5478

349:                                              ; preds = %348
  %350 = icmp sgt i32 %13, 1
  %351 = icmp sgt i32 %13, 0
  %352 = add i32 %13, -2
  %353 = zext i32 %352 to i64
  %354 = zext i32 %13 to i64
  %355 = add nuw i32 %5, 1
  %356 = icmp eq i32 %13, 1
  br label %357

357:                                              ; preds = %349, %487
  %358 = phi i32 [ 0, %349 ], [ %439, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %350, label %360, label %429

360:                                              ; preds = %357, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %357 ]
  %362 = phi i64 [ %370, %419 ], [ %354, %357 ]
  %363 = phi i64 [ %427, %419 ], [ %353, %357 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %357 ]
  %365 = sub i32 %352, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !1134

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !1135

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !1136

429:                                              ; preds = %419, %357
  %430 = phi i32 [ %359, %357 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds float, ptr %24, i64 %431
  %433 = load float, ptr %432, align 4, !tbaa !162
  %434 = fptoui float %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = icmp ugt i8 %435, %434
  br i1 %436, label %437, label %438

437:                                              ; preds = %429
  store i8 %434, ptr %26, align 1, !tbaa !11
  br label %438

438:                                              ; preds = %437, %429
  %439 = add nuw nsw i32 %358, 1
  br i1 %351, label %440, label %487

440:                                              ; preds = %438
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %356, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %354
  br i1 %479, label %487, label %449, !llvm.loop !1137

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %438
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5478, label %357, !llvm.loop !1138

489:                                              ; preds = %340, %626
  %490 = phi i32 [ 0, %340 ], [ %575, %626 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %341, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %345, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %344, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %343, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !1139

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !1140

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !1141

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds float, ptr %24, i64 %567
  %569 = load float, ptr %568, align 4, !tbaa !162
  %570 = fptoui float %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = icmp ugt i8 %571, %570
  br i1 %572, label %573, label %574

573:                                              ; preds = %566
  store i8 %570, ptr %26, align 1, !tbaa !11
  br label %574

574:                                              ; preds = %573, %566
  %575 = add nuw nsw i32 %490, 1
  br i1 %342, label %576, label %626

576:                                              ; preds = %574
  %577 = load i32, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %12, align 4, !tbaa !5
  %579 = add nsw i32 %578, -1
  %580 = icmp slt i32 %577, %579
  br i1 %580, label %603, label %581

581:                                              ; preds = %576
  %582 = icmp eq i32 %577, %579
  br i1 %582, label %583, label %619

583:                                              ; preds = %581
  store i32 0, ptr %4, align 4, !tbaa !5
  %584 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %584, ptr %6, align 4, !tbaa !5
  br i1 %347, label %626, label %585

585:                                              ; preds = %583, %613
  %586 = phi i64 [ %617, %613 ], [ 1, %583 ]
  %587 = getelementptr inbounds i32, ptr %4, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = getelementptr inbounds i32, ptr %12, i64 %586
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = add nsw i32 %590, -1
  %592 = icmp slt i32 %588, %591
  br i1 %592, label %593, label %611

593:                                              ; preds = %585
  br i1 %580, label %603, label %594

594:                                              ; preds = %593
  %595 = shl i64 %586, 32
  %596 = add i64 %595, -4294967296
  %597 = ashr exact i64 %596, 32
  %598 = getelementptr inbounds i32, ptr %7, i64 %597
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %586
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = add nsw i32 %601, %599
  store i32 %602, ptr %600, align 4, !tbaa !5
  br label %621

603:                                              ; preds = %576, %593
  %604 = phi i32 [ %588, %593 ], [ %577, %576 ]
  %605 = phi ptr [ %587, %593 ], [ %4, %576 ]
  %606 = phi i64 [ %586, %593 ], [ 0, %576 ]
  %607 = add nsw i32 %604, 1
  store i32 %607, ptr %605, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %7, i64 %606
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %606
  br label %621

611:                                              ; preds = %585
  %612 = icmp eq i32 %588, %591
  br i1 %612, label %613, label %619

613:                                              ; preds = %611
  store i32 0, ptr %587, align 4, !tbaa !5
  %614 = getelementptr inbounds i32, ptr %8, i64 %586
  %615 = load i32, ptr %614, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %6, i64 %586
  store i32 %615, ptr %616, align 4, !tbaa !5
  %617 = add nuw nsw i64 %586, 1
  %618 = icmp eq i64 %617, %345
  br i1 %618, label %626, label %585, !llvm.loop !1142

619:                                              ; preds = %581, %611
  %620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

621:                                              ; preds = %594, %603
  %622 = phi ptr [ %610, %603 ], [ %587, %594 ]
  %623 = phi i32 [ %609, %603 ], [ 1, %594 ]
  %624 = load i32, ptr %622, align 4, !tbaa !5
  %625 = add nsw i32 %624, %623
  store i32 %625, ptr %622, align 4, !tbaa !5
  br label %626

626:                                              ; preds = %613, %621, %583, %574
  %627 = icmp eq i32 %575, %5
  br i1 %627, label %5478, label %489, !llvm.loop !1143

628:                                              ; preds = %35
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1721, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

630:                                              ; preds = %18
  %631 = getelementptr inbounds ptr, ptr %14, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !9
  %633 = getelementptr inbounds ptr, ptr %16, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = load float, ptr %632, align 4, !tbaa !162
  %636 = fptosi float %635 to i32
  store i32 %636, ptr %634, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %5478, label %638

638:                                              ; preds = %630
  switch i32 %1, label %1231 [
    i32 1, label %639
    i32 0, label %937
  ]

639:                                              ; preds = %638
  %640 = getelementptr inbounds i32, ptr %3, i64 %19
  %641 = load i32, ptr %640, align 4, !tbaa !5
  %642 = icmp eq i32 %641, 0
  %643 = icmp sgt i32 %5, 0
  br i1 %642, label %653, label %644

644:                                              ; preds = %639
  br i1 %643, label %645, label %5478

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %798

653:                                              ; preds = %639
  br i1 %643, label %654, label %5478

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %662

662:                                              ; preds = %654, %796
  %663 = phi i32 [ 0, %654 ], [ %748, %796 ]
  %664 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %655, label %665, label %734

665:                                              ; preds = %662, %724
  %666 = phi i32 [ %733, %724 ], [ 0, %662 ]
  %667 = phi i64 [ %675, %724 ], [ %659, %662 ]
  %668 = phi i64 [ %732, %724 ], [ %658, %662 ]
  %669 = phi i32 [ %730, %724 ], [ %664, %662 ]
  %670 = sub i32 %657, %666
  %671 = tail call i32 @llvm.smin.i32(i32 %670, i32 0)
  %672 = sub i32 %670, %671
  %673 = zext i32 %672 to i64
  %674 = add nuw nsw i64 %673, 1
  %675 = add nsw i64 %667, -1
  %676 = icmp ult i32 %672, 31
  br i1 %676, label %712, label %677

677:                                              ; preds = %665
  %678 = and i64 %674, 8589934560
  %679 = sub i64 %668, %678
  br label %680

680:                                              ; preds = %680, %677
  %681 = phi i64 [ 0, %677 ], [ %704, %680 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %700, %680 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %701, %680 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %702, %680 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %703, %680 ]
  %686 = sub i64 %668, %681
  %687 = getelementptr inbounds i32, ptr %9, i64 %686
  %688 = getelementptr inbounds i32, ptr %687, i64 -7
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %687, i64 -15
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %687, i64 -23
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = getelementptr inbounds i32, ptr %687, i64 -31
  %698 = load <8 x i32>, ptr %697, align 4, !tbaa !5
  %699 = shufflevector <8 x i32> %698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %700 = mul <8 x i32> %690, %682
  %701 = mul <8 x i32> %693, %683
  %702 = mul <8 x i32> %696, %684
  %703 = mul <8 x i32> %699, %685
  %704 = add nuw i64 %681, 32
  %705 = icmp eq i64 %704, %678
  br i1 %705, label %706, label %680, !llvm.loop !1144

706:                                              ; preds = %680
  %707 = mul <8 x i32> %701, %700
  %708 = mul <8 x i32> %702, %707
  %709 = mul <8 x i32> %703, %708
  %710 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %709)
  %711 = icmp eq i64 %674, %678
  br i1 %711, label %724, label %712

712:                                              ; preds = %665, %706
  %713 = phi i64 [ %668, %665 ], [ %679, %706 ]
  %714 = phi i32 [ 1, %665 ], [ %710, %706 ]
  br label %715

715:                                              ; preds = %712, %715
  %716 = phi i64 [ %721, %715 ], [ %713, %712 ]
  %717 = phi i32 [ %720, %715 ], [ %714, %712 ]
  %718 = getelementptr inbounds i32, ptr %9, i64 %716
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %717
  %721 = add nsw i64 %716, -1
  %722 = trunc i64 %716 to i32
  %723 = icmp sgt i32 %722, 0
  br i1 %723, label %715, label %724, !llvm.loop !1145

724:                                              ; preds = %715, %706
  %725 = phi i32 [ %710, %706 ], [ %720, %715 ]
  %726 = and i64 %675, 4294967295
  %727 = getelementptr inbounds i32, ptr %6, i64 %726
  %728 = load i32, ptr %727, align 4, !tbaa !5
  %729 = mul nsw i32 %728, %725
  %730 = add nsw i32 %729, %669
  %731 = icmp sgt i64 %667, 2
  %732 = add nsw i64 %668, -1
  %733 = add i32 %666, 1
  br i1 %731, label %665, label %734, !llvm.loop !1146

734:                                              ; preds = %724, %662
  %735 = phi i32 [ %664, %662 ], [ %730, %724 ]
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds double, ptr %2, i64 %736
  %738 = load double, ptr %737, align 8, !tbaa !18
  %739 = getelementptr inbounds float, ptr %632, i64 %736
  %740 = load float, ptr %739, align 4, !tbaa !162
  %741 = fptosi float %740 to i32
  %742 = fcmp fast ueq double %738, 0.000000e+00
  br i1 %742, label %747, label %743

743:                                              ; preds = %734
  %744 = load i32, ptr %634, align 4, !tbaa !5
  %745 = icmp sgt i32 %744, %741
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  store i32 %741, ptr %634, align 4, !tbaa !5
  br label %747

747:                                              ; preds = %743, %746, %734
  %748 = add nuw nsw i32 %663, 1
  br i1 %656, label %749, label %796

749:                                              ; preds = %747
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %661, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %659
  br i1 %788, label %796, label %758, !llvm.loop !1147

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %747
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5478, label %662, !llvm.loop !1148

798:                                              ; preds = %645, %935
  %799 = phi i32 [ 0, %645 ], [ %884, %935 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %650, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %649, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %648, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !1149

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !1150

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !1151

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds float, ptr %632, i64 %876
  %878 = load float, ptr %877, align 4, !tbaa !162
  %879 = fptosi float %878 to i32
  %880 = load i32, ptr %634, align 4, !tbaa !5
  %881 = icmp sgt i32 %880, %879
  br i1 %881, label %882, label %883

882:                                              ; preds = %875
  store i32 %879, ptr %634, align 4, !tbaa !5
  br label %883

883:                                              ; preds = %875, %882
  %884 = add nuw nsw i32 %799, 1
  br i1 %647, label %885, label %935

885:                                              ; preds = %883
  %886 = load i32, ptr %4, align 4, !tbaa !5
  %887 = load i32, ptr %12, align 4, !tbaa !5
  %888 = add nsw i32 %887, -1
  %889 = icmp slt i32 %886, %888
  br i1 %889, label %912, label %890

890:                                              ; preds = %885
  %891 = icmp eq i32 %886, %888
  br i1 %891, label %892, label %928

892:                                              ; preds = %890
  store i32 0, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %893, ptr %6, align 4, !tbaa !5
  br i1 %652, label %935, label %894

894:                                              ; preds = %892, %922
  %895 = phi i64 [ %926, %922 ], [ 1, %892 ]
  %896 = getelementptr inbounds i32, ptr %4, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %12, i64 %895
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, -1
  %901 = icmp slt i32 %897, %900
  br i1 %901, label %902, label %920

902:                                              ; preds = %894
  br i1 %889, label %912, label %903

903:                                              ; preds = %902
  %904 = shl i64 %895, 32
  %905 = add i64 %904, -4294967296
  %906 = ashr exact i64 %905, 32
  %907 = getelementptr inbounds i32, ptr %7, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %6, i64 %895
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, %908
  store i32 %911, ptr %909, align 4, !tbaa !5
  br label %930

912:                                              ; preds = %885, %902
  %913 = phi i32 [ %897, %902 ], [ %886, %885 ]
  %914 = phi ptr [ %896, %902 ], [ %4, %885 ]
  %915 = phi i64 [ %895, %902 ], [ 0, %885 ]
  %916 = add nsw i32 %913, 1
  store i32 %916, ptr %914, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %7, i64 %915
  %918 = load i32, ptr %917, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %6, i64 %915
  br label %930

920:                                              ; preds = %894
  %921 = icmp eq i32 %897, %900
  br i1 %921, label %922, label %928

922:                                              ; preds = %920
  store i32 0, ptr %896, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %8, i64 %895
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %895
  store i32 %924, ptr %925, align 4, !tbaa !5
  %926 = add nuw nsw i64 %895, 1
  %927 = icmp eq i64 %926, %650
  br i1 %927, label %935, label %894, !llvm.loop !1152

928:                                              ; preds = %890, %920
  %929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

930:                                              ; preds = %903, %912
  %931 = phi ptr [ %919, %912 ], [ %896, %903 ]
  %932 = phi i32 [ %918, %912 ], [ 1, %903 ]
  %933 = load i32, ptr %931, align 4, !tbaa !5
  %934 = add nsw i32 %933, %932
  store i32 %934, ptr %931, align 4, !tbaa !5
  br label %935

935:                                              ; preds = %922, %930, %892, %883
  %936 = icmp eq i32 %884, %5
  br i1 %936, label %5478, label %798, !llvm.loop !1153

937:                                              ; preds = %638
  %938 = getelementptr inbounds i32, ptr %3, i64 %19
  %939 = load i32, ptr %938, align 4, !tbaa !5
  %940 = icmp eq i32 %939, 0
  %941 = icmp sgt i32 %5, 0
  br i1 %940, label %951, label %942

942:                                              ; preds = %937
  br i1 %941, label %943, label %5478

943:                                              ; preds = %942
  %944 = icmp sgt i32 %13, 1
  %945 = icmp sgt i32 %13, 0
  %946 = add i32 %13, -2
  %947 = zext i32 %946 to i64
  %948 = zext i32 %13 to i64
  %949 = add nuw i32 %5, 1
  %950 = icmp eq i32 %13, 1
  br label %1092

951:                                              ; preds = %937
  br i1 %941, label %952, label %5478

952:                                              ; preds = %951
  %953 = icmp sgt i32 %13, 1
  %954 = icmp sgt i32 %13, 0
  %955 = add i32 %13, -2
  %956 = zext i32 %955 to i64
  %957 = zext i32 %13 to i64
  %958 = add nuw i32 %5, 1
  %959 = icmp eq i32 %13, 1
  br label %960

960:                                              ; preds = %952, %1090
  %961 = phi i32 [ 0, %952 ], [ %1042, %1090 ]
  %962 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %953, label %963, label %1032

963:                                              ; preds = %960, %1022
  %964 = phi i32 [ %1031, %1022 ], [ 0, %960 ]
  %965 = phi i64 [ %973, %1022 ], [ %957, %960 ]
  %966 = phi i64 [ %1030, %1022 ], [ %956, %960 ]
  %967 = phi i32 [ %1028, %1022 ], [ %962, %960 ]
  %968 = sub i32 %955, %964
  %969 = tail call i32 @llvm.smin.i32(i32 %968, i32 0)
  %970 = sub i32 %968, %969
  %971 = zext i32 %970 to i64
  %972 = add nuw nsw i64 %971, 1
  %973 = add nsw i64 %965, -1
  %974 = icmp ult i32 %970, 31
  br i1 %974, label %1010, label %975

975:                                              ; preds = %963
  %976 = and i64 %972, 8589934560
  %977 = sub i64 %966, %976
  br label %978

978:                                              ; preds = %978, %975
  %979 = phi i64 [ 0, %975 ], [ %1002, %978 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %998, %978 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %999, %978 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1000, %978 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1001, %978 ]
  %984 = sub i64 %966, %979
  %985 = getelementptr inbounds i32, ptr %9, i64 %984
  %986 = getelementptr inbounds i32, ptr %985, i64 -7
  %987 = load <8 x i32>, ptr %986, align 4, !tbaa !5
  %988 = shufflevector <8 x i32> %987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %989 = getelementptr inbounds i32, ptr %985, i64 -15
  %990 = load <8 x i32>, ptr %989, align 4, !tbaa !5
  %991 = shufflevector <8 x i32> %990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %992 = getelementptr inbounds i32, ptr %985, i64 -23
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %985, i64 -31
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = mul <8 x i32> %988, %980
  %999 = mul <8 x i32> %991, %981
  %1000 = mul <8 x i32> %994, %982
  %1001 = mul <8 x i32> %997, %983
  %1002 = add nuw i64 %979, 32
  %1003 = icmp eq i64 %1002, %976
  br i1 %1003, label %1004, label %978, !llvm.loop !1154

1004:                                             ; preds = %978
  %1005 = mul <8 x i32> %999, %998
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = mul <8 x i32> %1001, %1006
  %1008 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1007)
  %1009 = icmp eq i64 %972, %976
  br i1 %1009, label %1022, label %1010

1010:                                             ; preds = %963, %1004
  %1011 = phi i64 [ %966, %963 ], [ %977, %1004 ]
  %1012 = phi i32 [ 1, %963 ], [ %1008, %1004 ]
  br label %1013

1013:                                             ; preds = %1010, %1013
  %1014 = phi i64 [ %1019, %1013 ], [ %1011, %1010 ]
  %1015 = phi i32 [ %1018, %1013 ], [ %1012, %1010 ]
  %1016 = getelementptr inbounds i32, ptr %9, i64 %1014
  %1017 = load i32, ptr %1016, align 4, !tbaa !5
  %1018 = mul nsw i32 %1017, %1015
  %1019 = add nsw i64 %1014, -1
  %1020 = trunc i64 %1014 to i32
  %1021 = icmp sgt i32 %1020, 0
  br i1 %1021, label %1013, label %1022, !llvm.loop !1155

1022:                                             ; preds = %1013, %1004
  %1023 = phi i32 [ %1008, %1004 ], [ %1018, %1013 ]
  %1024 = and i64 %973, 4294967295
  %1025 = getelementptr inbounds i32, ptr %6, i64 %1024
  %1026 = load i32, ptr %1025, align 4, !tbaa !5
  %1027 = mul nsw i32 %1026, %1023
  %1028 = add nsw i32 %1027, %967
  %1029 = icmp sgt i64 %965, 2
  %1030 = add nsw i64 %966, -1
  %1031 = add i32 %964, 1
  br i1 %1029, label %963, label %1032, !llvm.loop !1156

1032:                                             ; preds = %1022, %960
  %1033 = phi i32 [ %962, %960 ], [ %1028, %1022 ]
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds float, ptr %632, i64 %1034
  %1036 = load float, ptr %1035, align 4, !tbaa !162
  %1037 = fptosi float %1036 to i32
  %1038 = load i32, ptr %634, align 4, !tbaa !5
  %1039 = icmp sgt i32 %1038, %1037
  br i1 %1039, label %1040, label %1041

1040:                                             ; preds = %1032
  store i32 %1037, ptr %634, align 4, !tbaa !5
  br label %1041

1041:                                             ; preds = %1040, %1032
  %1042 = add nuw nsw i32 %961, 1
  br i1 %954, label %1043, label %1090

1043:                                             ; preds = %1041
  %1044 = load i32, ptr %4, align 4, !tbaa !5
  %1045 = load i32, ptr %12, align 4, !tbaa !5
  %1046 = add nsw i32 %1045, -1
  %1047 = icmp slt i32 %1044, %1046
  br i1 %1047, label %1067, label %1048

1048:                                             ; preds = %1043
  %1049 = icmp eq i32 %1044, %1046
  br i1 %1049, label %1050, label %1083

1050:                                             ; preds = %1048
  store i32 0, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1051, ptr %6, align 4, !tbaa !5
  br i1 %959, label %1090, label %1052

1052:                                             ; preds = %1050, %1077
  %1053 = phi i64 [ %1081, %1077 ], [ 1, %1050 ]
  %1054 = getelementptr inbounds i32, ptr %4, i64 %1053
  %1055 = load i32, ptr %1054, align 4, !tbaa !5
  %1056 = getelementptr inbounds i32, ptr %12, i64 %1053
  %1057 = load i32, ptr %1056, align 4, !tbaa !5
  %1058 = add nsw i32 %1057, -1
  %1059 = icmp slt i32 %1055, %1058
  br i1 %1059, label %1060, label %1075

1060:                                             ; preds = %1052
  br i1 %1047, label %1067, label %1061

1061:                                             ; preds = %1060
  %1062 = getelementptr inbounds i32, ptr %7, i64 %1053
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = getelementptr inbounds i32, ptr %6, i64 %1053
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = add nsw i32 %1065, %1063
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  br label %1085

1067:                                             ; preds = %1043, %1060
  %1068 = phi i32 [ %1055, %1060 ], [ %1044, %1043 ]
  %1069 = phi ptr [ %1054, %1060 ], [ %4, %1043 ]
  %1070 = phi i64 [ %1053, %1060 ], [ 0, %1043 ]
  %1071 = add nsw i32 %1068, 1
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1070
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1070
  br label %1085

1075:                                             ; preds = %1052
  %1076 = icmp eq i32 %1055, %1058
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1075
  store i32 0, ptr %1054, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %8, i64 %1053
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1053
  store i32 %1079, ptr %1080, align 4, !tbaa !5
  %1081 = add nuw nsw i64 %1053, 1
  %1082 = icmp eq i64 %1081, %957
  br i1 %1082, label %1090, label %1052, !llvm.loop !1157

1083:                                             ; preds = %1048, %1075
  %1084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1085:                                             ; preds = %1061, %1067
  %1086 = phi ptr [ %1074, %1067 ], [ %1054, %1061 ]
  %1087 = phi i32 [ %1073, %1067 ], [ 1, %1061 ]
  %1088 = load i32, ptr %1086, align 4, !tbaa !5
  %1089 = add nsw i32 %1088, %1087
  store i32 %1089, ptr %1086, align 4, !tbaa !5
  br label %1090

1090:                                             ; preds = %1077, %1085, %1050, %1041
  %1091 = icmp eq i32 %1042, %5
  br i1 %1091, label %5478, label %960, !llvm.loop !1158

1092:                                             ; preds = %943, %1229
  %1093 = phi i32 [ 0, %943 ], [ %1178, %1229 ]
  %1094 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %944, label %1095, label %1164

1095:                                             ; preds = %1092, %1154
  %1096 = phi i32 [ %1163, %1154 ], [ 0, %1092 ]
  %1097 = phi i64 [ %1105, %1154 ], [ %948, %1092 ]
  %1098 = phi i64 [ %1162, %1154 ], [ %947, %1092 ]
  %1099 = phi i32 [ %1160, %1154 ], [ %1094, %1092 ]
  %1100 = sub i32 %946, %1096
  %1101 = tail call i32 @llvm.smin.i32(i32 %1100, i32 0)
  %1102 = sub i32 %1100, %1101
  %1103 = zext i32 %1102 to i64
  %1104 = add nuw nsw i64 %1103, 1
  %1105 = add nsw i64 %1097, -1
  %1106 = icmp ult i32 %1102, 31
  br i1 %1106, label %1142, label %1107

1107:                                             ; preds = %1095
  %1108 = and i64 %1104, 8589934560
  %1109 = sub i64 %1098, %1108
  br label %1110

1110:                                             ; preds = %1110, %1107
  %1111 = phi i64 [ 0, %1107 ], [ %1134, %1110 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1130, %1110 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1131, %1110 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1132, %1110 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1133, %1110 ]
  %1116 = sub i64 %1098, %1111
  %1117 = getelementptr inbounds i32, ptr %11, i64 %1116
  %1118 = getelementptr inbounds i32, ptr %1117, i64 -7
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = getelementptr inbounds i32, ptr %1117, i64 -15
  %1122 = load <8 x i32>, ptr %1121, align 4, !tbaa !5
  %1123 = shufflevector <8 x i32> %1122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1124 = getelementptr inbounds i32, ptr %1117, i64 -23
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1117, i64 -31
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = mul <8 x i32> %1120, %1112
  %1131 = mul <8 x i32> %1123, %1113
  %1132 = mul <8 x i32> %1126, %1114
  %1133 = mul <8 x i32> %1129, %1115
  %1134 = add nuw i64 %1111, 32
  %1135 = icmp eq i64 %1134, %1108
  br i1 %1135, label %1136, label %1110, !llvm.loop !1159

1136:                                             ; preds = %1110
  %1137 = mul <8 x i32> %1131, %1130
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = mul <8 x i32> %1133, %1138
  %1140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1139)
  %1141 = icmp eq i64 %1104, %1108
  br i1 %1141, label %1154, label %1142

1142:                                             ; preds = %1095, %1136
  %1143 = phi i64 [ %1098, %1095 ], [ %1109, %1136 ]
  %1144 = phi i32 [ 1, %1095 ], [ %1140, %1136 ]
  br label %1145

1145:                                             ; preds = %1142, %1145
  %1146 = phi i64 [ %1151, %1145 ], [ %1143, %1142 ]
  %1147 = phi i32 [ %1150, %1145 ], [ %1144, %1142 ]
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1147
  %1151 = add nsw i64 %1146, -1
  %1152 = trunc i64 %1146 to i32
  %1153 = icmp sgt i32 %1152, 0
  br i1 %1153, label %1145, label %1154, !llvm.loop !1160

1154:                                             ; preds = %1145, %1136
  %1155 = phi i32 [ %1140, %1136 ], [ %1150, %1145 ]
  %1156 = and i64 %1105, 4294967295
  %1157 = getelementptr inbounds i32, ptr %6, i64 %1156
  %1158 = load i32, ptr %1157, align 4, !tbaa !5
  %1159 = mul nsw i32 %1158, %1155
  %1160 = add nsw i32 %1159, %1099
  %1161 = icmp sgt i64 %1097, 2
  %1162 = add nsw i64 %1098, -1
  %1163 = add i32 %1096, 1
  br i1 %1161, label %1095, label %1164, !llvm.loop !1161

1164:                                             ; preds = %1154, %1092
  %1165 = phi i32 [ %1094, %1092 ], [ %1160, %1154 ]
  %1166 = icmp slt i32 %1165, %5
  br i1 %1166, label %1169, label %1167

1167:                                             ; preds = %1164
  %1168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1169:                                             ; preds = %1164
  %1170 = sext i32 %1165 to i64
  %1171 = getelementptr inbounds float, ptr %632, i64 %1170
  %1172 = load float, ptr %1171, align 4, !tbaa !162
  %1173 = fptosi float %1172 to i32
  %1174 = load i32, ptr %634, align 4, !tbaa !5
  %1175 = icmp sgt i32 %1174, %1173
  br i1 %1175, label %1176, label %1177

1176:                                             ; preds = %1169
  store i32 %1173, ptr %634, align 4, !tbaa !5
  br label %1177

1177:                                             ; preds = %1176, %1169
  %1178 = add nuw nsw i32 %1093, 1
  br i1 %945, label %1179, label %1229

1179:                                             ; preds = %1177
  %1180 = load i32, ptr %4, align 4, !tbaa !5
  %1181 = load i32, ptr %12, align 4, !tbaa !5
  %1182 = add nsw i32 %1181, -1
  %1183 = icmp slt i32 %1180, %1182
  br i1 %1183, label %1206, label %1184

1184:                                             ; preds = %1179
  %1185 = icmp eq i32 %1180, %1182
  br i1 %1185, label %1186, label %1222

1186:                                             ; preds = %1184
  store i32 0, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1187, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1229, label %1188

1188:                                             ; preds = %1186, %1216
  %1189 = phi i64 [ %1220, %1216 ], [ 1, %1186 ]
  %1190 = getelementptr inbounds i32, ptr %4, i64 %1189
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %12, i64 %1189
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = add nsw i32 %1193, -1
  %1195 = icmp slt i32 %1191, %1194
  br i1 %1195, label %1196, label %1214

1196:                                             ; preds = %1188
  br i1 %1183, label %1206, label %1197

1197:                                             ; preds = %1196
  %1198 = shl i64 %1189, 32
  %1199 = add i64 %1198, -4294967296
  %1200 = ashr exact i64 %1199, 32
  %1201 = getelementptr inbounds i32, ptr %7, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1189
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = add nsw i32 %1204, %1202
  store i32 %1205, ptr %1203, align 4, !tbaa !5
  br label %1224

1206:                                             ; preds = %1179, %1196
  %1207 = phi i32 [ %1191, %1196 ], [ %1180, %1179 ]
  %1208 = phi ptr [ %1190, %1196 ], [ %4, %1179 ]
  %1209 = phi i64 [ %1189, %1196 ], [ 0, %1179 ]
  %1210 = add nsw i32 %1207, 1
  store i32 %1210, ptr %1208, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1209
  %1212 = load i32, ptr %1211, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1209
  br label %1224

1214:                                             ; preds = %1188
  %1215 = icmp eq i32 %1191, %1194
  br i1 %1215, label %1216, label %1222

1216:                                             ; preds = %1214
  store i32 0, ptr %1190, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %8, i64 %1189
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1189
  store i32 %1218, ptr %1219, align 4, !tbaa !5
  %1220 = add nuw nsw i64 %1189, 1
  %1221 = icmp eq i64 %1220, %948
  br i1 %1221, label %1229, label %1188, !llvm.loop !1162

1222:                                             ; preds = %1184, %1214
  %1223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1224:                                             ; preds = %1197, %1206
  %1225 = phi ptr [ %1213, %1206 ], [ %1190, %1197 ]
  %1226 = phi i32 [ %1212, %1206 ], [ 1, %1197 ]
  %1227 = load i32, ptr %1225, align 4, !tbaa !5
  %1228 = add nsw i32 %1227, %1226
  store i32 %1228, ptr %1225, align 4, !tbaa !5
  br label %1229

1229:                                             ; preds = %1216, %1224, %1186, %1177
  %1230 = icmp eq i32 %1178, %5
  br i1 %1230, label %5478, label %1092, !llvm.loop !1163

1231:                                             ; preds = %638
  %1232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1724, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

1233:                                             ; preds = %18
  %1234 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1235 = load ptr, ptr %1234, align 8, !tbaa !9
  %1236 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1237 = load ptr, ptr %1236, align 8, !tbaa !9
  %1238 = load float, ptr %1235, align 4, !tbaa !162
  %1239 = fptosi float %1238 to i8
  store i8 %1239, ptr %1237, align 1, !tbaa !11
  %1240 = icmp eq i32 %13, 0
  br i1 %1240, label %1241, label %1246

1241:                                             ; preds = %1233
  %1242 = load float, ptr %1235, align 4, !tbaa !162
  %1243 = fptosi float %1242 to i8
  %1244 = icmp sgt i8 %1239, %1243
  br i1 %1244, label %1245, label %5478

1245:                                             ; preds = %1241
  store i8 %1243, ptr %1237, align 1, !tbaa !11
  br label %5478

1246:                                             ; preds = %1233
  switch i32 %1, label %1839 [
    i32 1, label %1247
    i32 0, label %1545
  ]

1247:                                             ; preds = %1246
  %1248 = getelementptr inbounds i32, ptr %3, i64 %19
  %1249 = load i32, ptr %1248, align 4, !tbaa !5
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp sgt i32 %5, 0
  br i1 %1250, label %1261, label %1252

1252:                                             ; preds = %1247
  br i1 %1251, label %1253, label %5478

1253:                                             ; preds = %1252
  %1254 = icmp sgt i32 %13, 1
  %1255 = icmp sgt i32 %13, 0
  %1256 = add i32 %13, -2
  %1257 = zext i32 %1256 to i64
  %1258 = zext i32 %13 to i64
  %1259 = add nuw i32 %5, 1
  %1260 = icmp eq i32 %13, 1
  br label %1406

1261:                                             ; preds = %1247
  br i1 %1251, label %1262, label %5478

1262:                                             ; preds = %1261
  %1263 = icmp sgt i32 %13, 1
  %1264 = icmp sgt i32 %13, 0
  %1265 = add i32 %13, -2
  %1266 = zext i32 %1265 to i64
  %1267 = zext i32 %13 to i64
  %1268 = add nuw i32 %5, 1
  %1269 = icmp eq i32 %13, 1
  br label %1270

1270:                                             ; preds = %1262, %1404
  %1271 = phi i32 [ 0, %1262 ], [ %1356, %1404 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1273, label %1342

1273:                                             ; preds = %1270, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1270 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1267, %1270 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1266, %1270 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1270 ]
  %1278 = sub i32 %1265, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !1164

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !1165

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !1166

1342:                                             ; preds = %1332, %1270
  %1343 = phi i32 [ %1272, %1270 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds float, ptr %1235, i64 %1344
  %1348 = load float, ptr %1347, align 4, !tbaa !162
  %1349 = fptosi float %1348 to i8
  %1350 = fcmp fast ueq double %1346, 0.000000e+00
  br i1 %1350, label %1355, label %1351

1351:                                             ; preds = %1342
  %1352 = load i8, ptr %1237, align 1, !tbaa !11
  %1353 = icmp sgt i8 %1352, %1349
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  store i8 %1349, ptr %1237, align 1, !tbaa !11
  br label %1355

1355:                                             ; preds = %1351, %1354, %1342
  %1356 = add nuw nsw i32 %1271, 1
  br i1 %1264, label %1357, label %1404

1357:                                             ; preds = %1355
  %1358 = load i32, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %12, align 4, !tbaa !5
  %1360 = add nsw i32 %1359, -1
  %1361 = icmp slt i32 %1358, %1360
  br i1 %1361, label %1381, label %1362

1362:                                             ; preds = %1357
  %1363 = icmp eq i32 %1358, %1360
  br i1 %1363, label %1364, label %1397

1364:                                             ; preds = %1362
  store i32 0, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1365, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1404, label %1366

1366:                                             ; preds = %1364, %1391
  %1367 = phi i64 [ %1395, %1391 ], [ 1, %1364 ]
  %1368 = getelementptr inbounds i32, ptr %4, i64 %1367
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %12, i64 %1367
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = add nsw i32 %1371, -1
  %1373 = icmp slt i32 %1369, %1372
  br i1 %1373, label %1374, label %1389

1374:                                             ; preds = %1366
  br i1 %1361, label %1381, label %1375

1375:                                             ; preds = %1374
  %1376 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1367
  %1379 = load i32, ptr %1378, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1377
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  br label %1399

1381:                                             ; preds = %1357, %1374
  %1382 = phi i32 [ %1369, %1374 ], [ %1358, %1357 ]
  %1383 = phi ptr [ %1368, %1374 ], [ %4, %1357 ]
  %1384 = phi i64 [ %1367, %1374 ], [ 0, %1357 ]
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1384
  br label %1399

1389:                                             ; preds = %1366
  %1390 = icmp eq i32 %1369, %1372
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1389
  store i32 0, ptr %1368, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %8, i64 %1367
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1367
  store i32 %1393, ptr %1394, align 4, !tbaa !5
  %1395 = add nuw nsw i64 %1367, 1
  %1396 = icmp eq i64 %1395, %1267
  br i1 %1396, label %1404, label %1366, !llvm.loop !1167

1397:                                             ; preds = %1362, %1389
  %1398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1399:                                             ; preds = %1375, %1381
  %1400 = phi ptr [ %1388, %1381 ], [ %1368, %1375 ]
  %1401 = phi i32 [ %1387, %1381 ], [ 1, %1375 ]
  %1402 = load i32, ptr %1400, align 4, !tbaa !5
  %1403 = add nsw i32 %1402, %1401
  store i32 %1403, ptr %1400, align 4, !tbaa !5
  br label %1404

1404:                                             ; preds = %1391, %1399, %1364, %1355
  %1405 = icmp eq i32 %1356, %5
  br i1 %1405, label %5478, label %1270, !llvm.loop !1168

1406:                                             ; preds = %1253, %1543
  %1407 = phi i32 [ 0, %1253 ], [ %1492, %1543 ]
  %1408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1409, label %1478

1409:                                             ; preds = %1406, %1468
  %1410 = phi i32 [ %1477, %1468 ], [ 0, %1406 ]
  %1411 = phi i64 [ %1419, %1468 ], [ %1258, %1406 ]
  %1412 = phi i64 [ %1476, %1468 ], [ %1257, %1406 ]
  %1413 = phi i32 [ %1474, %1468 ], [ %1408, %1406 ]
  %1414 = sub i32 %1256, %1410
  %1415 = tail call i32 @llvm.smin.i32(i32 %1414, i32 0)
  %1416 = sub i32 %1414, %1415
  %1417 = zext i32 %1416 to i64
  %1418 = add nuw nsw i64 %1417, 1
  %1419 = add nsw i64 %1411, -1
  %1420 = icmp ult i32 %1416, 31
  br i1 %1420, label %1456, label %1421

1421:                                             ; preds = %1409
  %1422 = and i64 %1418, 8589934560
  %1423 = sub i64 %1412, %1422
  br label %1424

1424:                                             ; preds = %1424, %1421
  %1425 = phi i64 [ 0, %1421 ], [ %1448, %1424 ]
  %1426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1444, %1424 ]
  %1427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1445, %1424 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1446, %1424 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1447, %1424 ]
  %1430 = sub i64 %1412, %1425
  %1431 = getelementptr inbounds i32, ptr %11, i64 %1430
  %1432 = getelementptr inbounds i32, ptr %1431, i64 -7
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = getelementptr inbounds i32, ptr %1431, i64 -15
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1431, i64 -23
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1431, i64 -31
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = mul <8 x i32> %1434, %1426
  %1445 = mul <8 x i32> %1437, %1427
  %1446 = mul <8 x i32> %1440, %1428
  %1447 = mul <8 x i32> %1443, %1429
  %1448 = add nuw i64 %1425, 32
  %1449 = icmp eq i64 %1448, %1422
  br i1 %1449, label %1450, label %1424, !llvm.loop !1169

1450:                                             ; preds = %1424
  %1451 = mul <8 x i32> %1445, %1444
  %1452 = mul <8 x i32> %1446, %1451
  %1453 = mul <8 x i32> %1447, %1452
  %1454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1453)
  %1455 = icmp eq i64 %1418, %1422
  br i1 %1455, label %1468, label %1456

1456:                                             ; preds = %1409, %1450
  %1457 = phi i64 [ %1412, %1409 ], [ %1423, %1450 ]
  %1458 = phi i32 [ 1, %1409 ], [ %1454, %1450 ]
  br label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1465, %1459 ], [ %1457, %1456 ]
  %1461 = phi i32 [ %1464, %1459 ], [ %1458, %1456 ]
  %1462 = getelementptr inbounds i32, ptr %11, i64 %1460
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1461
  %1465 = add nsw i64 %1460, -1
  %1466 = trunc i64 %1460 to i32
  %1467 = icmp sgt i32 %1466, 0
  br i1 %1467, label %1459, label %1468, !llvm.loop !1170

1468:                                             ; preds = %1459, %1450
  %1469 = phi i32 [ %1454, %1450 ], [ %1464, %1459 ]
  %1470 = and i64 %1419, 4294967295
  %1471 = getelementptr inbounds i32, ptr %6, i64 %1470
  %1472 = load i32, ptr %1471, align 4, !tbaa !5
  %1473 = mul nsw i32 %1472, %1469
  %1474 = add nsw i32 %1473, %1413
  %1475 = icmp sgt i64 %1411, 2
  %1476 = add nsw i64 %1412, -1
  %1477 = add i32 %1410, 1
  br i1 %1475, label %1409, label %1478, !llvm.loop !1171

1478:                                             ; preds = %1468, %1406
  %1479 = phi i32 [ %1408, %1406 ], [ %1474, %1468 ]
  %1480 = icmp slt i32 %1479, %5
  br i1 %1480, label %1483, label %1481

1481:                                             ; preds = %1478
  %1482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1483:                                             ; preds = %1478
  %1484 = sext i32 %1479 to i64
  %1485 = getelementptr inbounds float, ptr %1235, i64 %1484
  %1486 = load float, ptr %1485, align 4, !tbaa !162
  %1487 = fptosi float %1486 to i8
  %1488 = load i8, ptr %1237, align 1, !tbaa !11
  %1489 = icmp sgt i8 %1488, %1487
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1483
  store i8 %1487, ptr %1237, align 1, !tbaa !11
  br label %1491

1491:                                             ; preds = %1483, %1490
  %1492 = add nuw nsw i32 %1407, 1
  br i1 %1255, label %1493, label %1543

1493:                                             ; preds = %1491
  %1494 = load i32, ptr %4, align 4, !tbaa !5
  %1495 = load i32, ptr %12, align 4, !tbaa !5
  %1496 = add nsw i32 %1495, -1
  %1497 = icmp slt i32 %1494, %1496
  br i1 %1497, label %1520, label %1498

1498:                                             ; preds = %1493
  %1499 = icmp eq i32 %1494, %1496
  br i1 %1499, label %1500, label %1536

1500:                                             ; preds = %1498
  store i32 0, ptr %4, align 4, !tbaa !5
  %1501 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1501, ptr %6, align 4, !tbaa !5
  br i1 %1260, label %1543, label %1502

1502:                                             ; preds = %1500, %1530
  %1503 = phi i64 [ %1534, %1530 ], [ 1, %1500 ]
  %1504 = getelementptr inbounds i32, ptr %4, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %12, i64 %1503
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, -1
  %1509 = icmp slt i32 %1505, %1508
  br i1 %1509, label %1510, label %1528

1510:                                             ; preds = %1502
  br i1 %1497, label %1520, label %1511

1511:                                             ; preds = %1510
  %1512 = shl i64 %1503, 32
  %1513 = add i64 %1512, -4294967296
  %1514 = ashr exact i64 %1513, 32
  %1515 = getelementptr inbounds i32, ptr %7, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !5
  %1517 = getelementptr inbounds i32, ptr %6, i64 %1503
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = add nsw i32 %1518, %1516
  store i32 %1519, ptr %1517, align 4, !tbaa !5
  br label %1538

1520:                                             ; preds = %1493, %1510
  %1521 = phi i32 [ %1505, %1510 ], [ %1494, %1493 ]
  %1522 = phi ptr [ %1504, %1510 ], [ %4, %1493 ]
  %1523 = phi i64 [ %1503, %1510 ], [ 0, %1493 ]
  %1524 = add nsw i32 %1521, 1
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1523
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1523
  br label %1538

1528:                                             ; preds = %1502
  %1529 = icmp eq i32 %1505, %1508
  br i1 %1529, label %1530, label %1536

1530:                                             ; preds = %1528
  store i32 0, ptr %1504, align 4, !tbaa !5
  %1531 = getelementptr inbounds i32, ptr %8, i64 %1503
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %6, i64 %1503
  store i32 %1532, ptr %1533, align 4, !tbaa !5
  %1534 = add nuw nsw i64 %1503, 1
  %1535 = icmp eq i64 %1534, %1258
  br i1 %1535, label %1543, label %1502, !llvm.loop !1172

1536:                                             ; preds = %1498, %1528
  %1537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1538:                                             ; preds = %1511, %1520
  %1539 = phi ptr [ %1527, %1520 ], [ %1504, %1511 ]
  %1540 = phi i32 [ %1526, %1520 ], [ 1, %1511 ]
  %1541 = load i32, ptr %1539, align 4, !tbaa !5
  %1542 = add nsw i32 %1541, %1540
  store i32 %1542, ptr %1539, align 4, !tbaa !5
  br label %1543

1543:                                             ; preds = %1530, %1538, %1500, %1491
  %1544 = icmp eq i32 %1492, %5
  br i1 %1544, label %5478, label %1406, !llvm.loop !1173

1545:                                             ; preds = %1246
  %1546 = getelementptr inbounds i32, ptr %3, i64 %19
  %1547 = load i32, ptr %1546, align 4, !tbaa !5
  %1548 = icmp eq i32 %1547, 0
  %1549 = icmp sgt i32 %5, 0
  br i1 %1548, label %1559, label %1550

1550:                                             ; preds = %1545
  br i1 %1549, label %1551, label %5478

1551:                                             ; preds = %1550
  %1552 = icmp sgt i32 %13, 1
  %1553 = icmp sgt i32 %13, 0
  %1554 = add i32 %13, -2
  %1555 = zext i32 %1554 to i64
  %1556 = zext i32 %13 to i64
  %1557 = add nuw i32 %5, 1
  %1558 = icmp eq i32 %13, 1
  br label %1700

1559:                                             ; preds = %1545
  br i1 %1549, label %1560, label %5478

1560:                                             ; preds = %1559
  %1561 = icmp sgt i32 %13, 1
  %1562 = icmp sgt i32 %13, 0
  %1563 = add i32 %13, -2
  %1564 = zext i32 %1563 to i64
  %1565 = zext i32 %13 to i64
  %1566 = add nuw i32 %5, 1
  %1567 = icmp eq i32 %13, 1
  br label %1568

1568:                                             ; preds = %1560, %1698
  %1569 = phi i32 [ 0, %1560 ], [ %1650, %1698 ]
  %1570 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1561, label %1571, label %1640

1571:                                             ; preds = %1568, %1630
  %1572 = phi i32 [ %1639, %1630 ], [ 0, %1568 ]
  %1573 = phi i64 [ %1581, %1630 ], [ %1565, %1568 ]
  %1574 = phi i64 [ %1638, %1630 ], [ %1564, %1568 ]
  %1575 = phi i32 [ %1636, %1630 ], [ %1570, %1568 ]
  %1576 = sub i32 %1563, %1572
  %1577 = tail call i32 @llvm.smin.i32(i32 %1576, i32 0)
  %1578 = sub i32 %1576, %1577
  %1579 = zext i32 %1578 to i64
  %1580 = add nuw nsw i64 %1579, 1
  %1581 = add nsw i64 %1573, -1
  %1582 = icmp ult i32 %1578, 31
  br i1 %1582, label %1618, label %1583

1583:                                             ; preds = %1571
  %1584 = and i64 %1580, 8589934560
  %1585 = sub i64 %1574, %1584
  br label %1586

1586:                                             ; preds = %1586, %1583
  %1587 = phi i64 [ 0, %1583 ], [ %1610, %1586 ]
  %1588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1606, %1586 ]
  %1589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1607, %1586 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1608, %1586 ]
  %1591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1609, %1586 ]
  %1592 = sub i64 %1574, %1587
  %1593 = getelementptr inbounds i32, ptr %9, i64 %1592
  %1594 = getelementptr inbounds i32, ptr %1593, i64 -7
  %1595 = load <8 x i32>, ptr %1594, align 4, !tbaa !5
  %1596 = shufflevector <8 x i32> %1595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1597 = getelementptr inbounds i32, ptr %1593, i64 -15
  %1598 = load <8 x i32>, ptr %1597, align 4, !tbaa !5
  %1599 = shufflevector <8 x i32> %1598, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1600 = getelementptr inbounds i32, ptr %1593, i64 -23
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1593, i64 -31
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = mul <8 x i32> %1596, %1588
  %1607 = mul <8 x i32> %1599, %1589
  %1608 = mul <8 x i32> %1602, %1590
  %1609 = mul <8 x i32> %1605, %1591
  %1610 = add nuw i64 %1587, 32
  %1611 = icmp eq i64 %1610, %1584
  br i1 %1611, label %1612, label %1586, !llvm.loop !1174

1612:                                             ; preds = %1586
  %1613 = mul <8 x i32> %1607, %1606
  %1614 = mul <8 x i32> %1608, %1613
  %1615 = mul <8 x i32> %1609, %1614
  %1616 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1615)
  %1617 = icmp eq i64 %1580, %1584
  br i1 %1617, label %1630, label %1618

1618:                                             ; preds = %1571, %1612
  %1619 = phi i64 [ %1574, %1571 ], [ %1585, %1612 ]
  %1620 = phi i32 [ 1, %1571 ], [ %1616, %1612 ]
  br label %1621

1621:                                             ; preds = %1618, %1621
  %1622 = phi i64 [ %1627, %1621 ], [ %1619, %1618 ]
  %1623 = phi i32 [ %1626, %1621 ], [ %1620, %1618 ]
  %1624 = getelementptr inbounds i32, ptr %9, i64 %1622
  %1625 = load i32, ptr %1624, align 4, !tbaa !5
  %1626 = mul nsw i32 %1625, %1623
  %1627 = add nsw i64 %1622, -1
  %1628 = trunc i64 %1622 to i32
  %1629 = icmp sgt i32 %1628, 0
  br i1 %1629, label %1621, label %1630, !llvm.loop !1175

1630:                                             ; preds = %1621, %1612
  %1631 = phi i32 [ %1616, %1612 ], [ %1626, %1621 ]
  %1632 = and i64 %1581, 4294967295
  %1633 = getelementptr inbounds i32, ptr %6, i64 %1632
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1631
  %1636 = add nsw i32 %1635, %1575
  %1637 = icmp sgt i64 %1573, 2
  %1638 = add nsw i64 %1574, -1
  %1639 = add i32 %1572, 1
  br i1 %1637, label %1571, label %1640, !llvm.loop !1176

1640:                                             ; preds = %1630, %1568
  %1641 = phi i32 [ %1570, %1568 ], [ %1636, %1630 ]
  %1642 = sext i32 %1641 to i64
  %1643 = getelementptr inbounds float, ptr %1235, i64 %1642
  %1644 = load float, ptr %1643, align 4, !tbaa !162
  %1645 = fptosi float %1644 to i8
  %1646 = load i8, ptr %1237, align 1, !tbaa !11
  %1647 = icmp sgt i8 %1646, %1645
  br i1 %1647, label %1648, label %1649

1648:                                             ; preds = %1640
  store i8 %1645, ptr %1237, align 1, !tbaa !11
  br label %1649

1649:                                             ; preds = %1648, %1640
  %1650 = add nuw nsw i32 %1569, 1
  br i1 %1562, label %1651, label %1698

1651:                                             ; preds = %1649
  %1652 = load i32, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %12, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, -1
  %1655 = icmp slt i32 %1652, %1654
  br i1 %1655, label %1675, label %1656

1656:                                             ; preds = %1651
  %1657 = icmp eq i32 %1652, %1654
  br i1 %1657, label %1658, label %1691

1658:                                             ; preds = %1656
  store i32 0, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1659, ptr %6, align 4, !tbaa !5
  br i1 %1567, label %1698, label %1660

1660:                                             ; preds = %1658, %1685
  %1661 = phi i64 [ %1689, %1685 ], [ 1, %1658 ]
  %1662 = getelementptr inbounds i32, ptr %4, i64 %1661
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %12, i64 %1661
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1663, %1666
  br i1 %1667, label %1668, label %1683

1668:                                             ; preds = %1660
  br i1 %1655, label %1675, label %1669

1669:                                             ; preds = %1668
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1661
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1661
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1671
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  br label %1693

1675:                                             ; preds = %1651, %1668
  %1676 = phi i32 [ %1663, %1668 ], [ %1652, %1651 ]
  %1677 = phi ptr [ %1662, %1668 ], [ %4, %1651 ]
  %1678 = phi i64 [ %1661, %1668 ], [ 0, %1651 ]
  %1679 = add nsw i32 %1676, 1
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %7, i64 %1678
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1678
  br label %1693

1683:                                             ; preds = %1660
  %1684 = icmp eq i32 %1663, %1666
  br i1 %1684, label %1685, label %1691

1685:                                             ; preds = %1683
  store i32 0, ptr %1662, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %8, i64 %1661
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1661
  store i32 %1687, ptr %1688, align 4, !tbaa !5
  %1689 = add nuw nsw i64 %1661, 1
  %1690 = icmp eq i64 %1689, %1565
  br i1 %1690, label %1698, label %1660, !llvm.loop !1177

1691:                                             ; preds = %1656, %1683
  %1692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1693:                                             ; preds = %1669, %1675
  %1694 = phi ptr [ %1682, %1675 ], [ %1662, %1669 ]
  %1695 = phi i32 [ %1681, %1675 ], [ 1, %1669 ]
  %1696 = load i32, ptr %1694, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, %1695
  store i32 %1697, ptr %1694, align 4, !tbaa !5
  br label %1698

1698:                                             ; preds = %1685, %1693, %1658, %1649
  %1699 = icmp eq i32 %1650, %5
  br i1 %1699, label %5478, label %1568, !llvm.loop !1178

1700:                                             ; preds = %1551, %1837
  %1701 = phi i32 [ 0, %1551 ], [ %1786, %1837 ]
  %1702 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1703, label %1772

1703:                                             ; preds = %1700, %1762
  %1704 = phi i32 [ %1771, %1762 ], [ 0, %1700 ]
  %1705 = phi i64 [ %1713, %1762 ], [ %1556, %1700 ]
  %1706 = phi i64 [ %1770, %1762 ], [ %1555, %1700 ]
  %1707 = phi i32 [ %1768, %1762 ], [ %1702, %1700 ]
  %1708 = sub i32 %1554, %1704
  %1709 = tail call i32 @llvm.smin.i32(i32 %1708, i32 0)
  %1710 = sub i32 %1708, %1709
  %1711 = zext i32 %1710 to i64
  %1712 = add nuw nsw i64 %1711, 1
  %1713 = add nsw i64 %1705, -1
  %1714 = icmp ult i32 %1710, 31
  br i1 %1714, label %1750, label %1715

1715:                                             ; preds = %1703
  %1716 = and i64 %1712, 8589934560
  %1717 = sub i64 %1706, %1716
  br label %1718

1718:                                             ; preds = %1718, %1715
  %1719 = phi i64 [ 0, %1715 ], [ %1742, %1718 ]
  %1720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1738, %1718 ]
  %1721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1739, %1718 ]
  %1722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1740, %1718 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1741, %1718 ]
  %1724 = sub i64 %1706, %1719
  %1725 = getelementptr inbounds i32, ptr %11, i64 %1724
  %1726 = getelementptr inbounds i32, ptr %1725, i64 -7
  %1727 = load <8 x i32>, ptr %1726, align 4, !tbaa !5
  %1728 = shufflevector <8 x i32> %1727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1729 = getelementptr inbounds i32, ptr %1725, i64 -15
  %1730 = load <8 x i32>, ptr %1729, align 4, !tbaa !5
  %1731 = shufflevector <8 x i32> %1730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1732 = getelementptr inbounds i32, ptr %1725, i64 -23
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1725, i64 -31
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = mul <8 x i32> %1728, %1720
  %1739 = mul <8 x i32> %1731, %1721
  %1740 = mul <8 x i32> %1734, %1722
  %1741 = mul <8 x i32> %1737, %1723
  %1742 = add nuw i64 %1719, 32
  %1743 = icmp eq i64 %1742, %1716
  br i1 %1743, label %1744, label %1718, !llvm.loop !1179

1744:                                             ; preds = %1718
  %1745 = mul <8 x i32> %1739, %1738
  %1746 = mul <8 x i32> %1740, %1745
  %1747 = mul <8 x i32> %1741, %1746
  %1748 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1747)
  %1749 = icmp eq i64 %1712, %1716
  br i1 %1749, label %1762, label %1750

1750:                                             ; preds = %1703, %1744
  %1751 = phi i64 [ %1706, %1703 ], [ %1717, %1744 ]
  %1752 = phi i32 [ 1, %1703 ], [ %1748, %1744 ]
  br label %1753

1753:                                             ; preds = %1750, %1753
  %1754 = phi i64 [ %1759, %1753 ], [ %1751, %1750 ]
  %1755 = phi i32 [ %1758, %1753 ], [ %1752, %1750 ]
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1754
  %1757 = load i32, ptr %1756, align 4, !tbaa !5
  %1758 = mul nsw i32 %1757, %1755
  %1759 = add nsw i64 %1754, -1
  %1760 = trunc i64 %1754 to i32
  %1761 = icmp sgt i32 %1760, 0
  br i1 %1761, label %1753, label %1762, !llvm.loop !1180

1762:                                             ; preds = %1753, %1744
  %1763 = phi i32 [ %1748, %1744 ], [ %1758, %1753 ]
  %1764 = and i64 %1713, 4294967295
  %1765 = getelementptr inbounds i32, ptr %6, i64 %1764
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1763
  %1768 = add nsw i32 %1767, %1707
  %1769 = icmp sgt i64 %1705, 2
  %1770 = add nsw i64 %1706, -1
  %1771 = add i32 %1704, 1
  br i1 %1769, label %1703, label %1772, !llvm.loop !1181

1772:                                             ; preds = %1762, %1700
  %1773 = phi i32 [ %1702, %1700 ], [ %1768, %1762 ]
  %1774 = icmp slt i32 %1773, %5
  br i1 %1774, label %1777, label %1775

1775:                                             ; preds = %1772
  %1776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1777:                                             ; preds = %1772
  %1778 = sext i32 %1773 to i64
  %1779 = getelementptr inbounds float, ptr %1235, i64 %1778
  %1780 = load float, ptr %1779, align 4, !tbaa !162
  %1781 = fptosi float %1780 to i8
  %1782 = load i8, ptr %1237, align 1, !tbaa !11
  %1783 = icmp sgt i8 %1782, %1781
  br i1 %1783, label %1784, label %1785

1784:                                             ; preds = %1777
  store i8 %1781, ptr %1237, align 1, !tbaa !11
  br label %1785

1785:                                             ; preds = %1784, %1777
  %1786 = add nuw nsw i32 %1701, 1
  br i1 %1553, label %1787, label %1837

1787:                                             ; preds = %1785
  %1788 = load i32, ptr %4, align 4, !tbaa !5
  %1789 = load i32, ptr %12, align 4, !tbaa !5
  %1790 = add nsw i32 %1789, -1
  %1791 = icmp slt i32 %1788, %1790
  br i1 %1791, label %1814, label %1792

1792:                                             ; preds = %1787
  %1793 = icmp eq i32 %1788, %1790
  br i1 %1793, label %1794, label %1830

1794:                                             ; preds = %1792
  store i32 0, ptr %4, align 4, !tbaa !5
  %1795 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1795, ptr %6, align 4, !tbaa !5
  br i1 %1558, label %1837, label %1796

1796:                                             ; preds = %1794, %1824
  %1797 = phi i64 [ %1828, %1824 ], [ 1, %1794 ]
  %1798 = getelementptr inbounds i32, ptr %4, i64 %1797
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %12, i64 %1797
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1799, %1802
  br i1 %1803, label %1804, label %1822

1804:                                             ; preds = %1796
  br i1 %1791, label %1814, label %1805

1805:                                             ; preds = %1804
  %1806 = shl i64 %1797, 32
  %1807 = add i64 %1806, -4294967296
  %1808 = ashr exact i64 %1807, 32
  %1809 = getelementptr inbounds i32, ptr %7, i64 %1808
  %1810 = load i32, ptr %1809, align 4, !tbaa !5
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1797
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, %1810
  store i32 %1813, ptr %1811, align 4, !tbaa !5
  br label %1832

1814:                                             ; preds = %1787, %1804
  %1815 = phi i32 [ %1799, %1804 ], [ %1788, %1787 ]
  %1816 = phi ptr [ %1798, %1804 ], [ %4, %1787 ]
  %1817 = phi i64 [ %1797, %1804 ], [ 0, %1787 ]
  %1818 = add nsw i32 %1815, 1
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %7, i64 %1817
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = getelementptr inbounds i32, ptr %6, i64 %1817
  br label %1832

1822:                                             ; preds = %1796
  %1823 = icmp eq i32 %1799, %1802
  br i1 %1823, label %1824, label %1830

1824:                                             ; preds = %1822
  store i32 0, ptr %1798, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %8, i64 %1797
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1797
  store i32 %1826, ptr %1827, align 4, !tbaa !5
  %1828 = add nuw nsw i64 %1797, 1
  %1829 = icmp eq i64 %1828, %1556
  br i1 %1829, label %1837, label %1796, !llvm.loop !1182

1830:                                             ; preds = %1792, %1822
  %1831 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1832:                                             ; preds = %1805, %1814
  %1833 = phi ptr [ %1821, %1814 ], [ %1798, %1805 ]
  %1834 = phi i32 [ %1820, %1814 ], [ 1, %1805 ]
  %1835 = load i32, ptr %1833, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1834
  store i32 %1836, ptr %1833, align 4, !tbaa !5
  br label %1837

1837:                                             ; preds = %1824, %1832, %1794, %1785
  %1838 = icmp eq i32 %1786, %5
  br i1 %1838, label %5478, label %1700, !llvm.loop !1183

1839:                                             ; preds = %1246
  %1840 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1728, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

1841:                                             ; preds = %18
  %1842 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1843 = load ptr, ptr %1842, align 8, !tbaa !9
  %1844 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1845 = load ptr, ptr %1844, align 8, !tbaa !9
  %1846 = load float, ptr %1843, align 4, !tbaa !162
  %1847 = fptosi float %1846 to i16
  store i16 %1847, ptr %1845, align 2, !tbaa !78
  %1848 = icmp eq i32 %13, 0
  br i1 %1848, label %5478, label %1849

1849:                                             ; preds = %1841
  switch i32 %1, label %2446 [
    i32 1, label %1850
    i32 0, label %2150
  ]

1850:                                             ; preds = %1849
  %1851 = getelementptr inbounds i32, ptr %3, i64 %19
  %1852 = load i32, ptr %1851, align 4, !tbaa !5
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp sgt i32 %5, 0
  br i1 %1853, label %1864, label %1855

1855:                                             ; preds = %1850
  br i1 %1854, label %1856, label %5478

1856:                                             ; preds = %1855
  %1857 = icmp sgt i32 %13, 1
  %1858 = icmp sgt i32 %13, 0
  %1859 = add i32 %13, -2
  %1860 = zext i32 %1859 to i64
  %1861 = zext i32 %13 to i64
  %1862 = add nuw i32 %5, 1
  %1863 = icmp eq i32 %13, 1
  br label %2010

1864:                                             ; preds = %1850
  br i1 %1854, label %1865, label %5478

1865:                                             ; preds = %1864
  %1866 = icmp sgt i32 %13, 1
  %1867 = icmp sgt i32 %13, 0
  %1868 = add i32 %13, -2
  %1869 = zext i32 %1868 to i64
  %1870 = zext i32 %13 to i64
  %1871 = add nuw i32 %5, 1
  %1872 = icmp eq i32 %13, 1
  br label %1873

1873:                                             ; preds = %1865, %2008
  %1874 = phi i16 [ %1847, %1865 ], [ %1959, %2008 ]
  %1875 = phi i32 [ 0, %1865 ], [ %1960, %2008 ]
  %1876 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1866, label %1877, label %1946

1877:                                             ; preds = %1873, %1936
  %1878 = phi i32 [ %1945, %1936 ], [ 0, %1873 ]
  %1879 = phi i64 [ %1887, %1936 ], [ %1870, %1873 ]
  %1880 = phi i64 [ %1944, %1936 ], [ %1869, %1873 ]
  %1881 = phi i32 [ %1942, %1936 ], [ %1876, %1873 ]
  %1882 = sub i32 %1868, %1878
  %1883 = tail call i32 @llvm.smin.i32(i32 %1882, i32 0)
  %1884 = sub i32 %1882, %1883
  %1885 = zext i32 %1884 to i64
  %1886 = add nuw nsw i64 %1885, 1
  %1887 = add nsw i64 %1879, -1
  %1888 = icmp ult i32 %1884, 31
  br i1 %1888, label %1924, label %1889

1889:                                             ; preds = %1877
  %1890 = and i64 %1886, 8589934560
  %1891 = sub i64 %1880, %1890
  br label %1892

1892:                                             ; preds = %1892, %1889
  %1893 = phi i64 [ 0, %1889 ], [ %1916, %1892 ]
  %1894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1912, %1892 ]
  %1895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1913, %1892 ]
  %1896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1914, %1892 ]
  %1897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1915, %1892 ]
  %1898 = sub i64 %1880, %1893
  %1899 = getelementptr inbounds i32, ptr %9, i64 %1898
  %1900 = getelementptr inbounds i32, ptr %1899, i64 -7
  %1901 = load <8 x i32>, ptr %1900, align 4, !tbaa !5
  %1902 = shufflevector <8 x i32> %1901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1903 = getelementptr inbounds i32, ptr %1899, i64 -15
  %1904 = load <8 x i32>, ptr %1903, align 4, !tbaa !5
  %1905 = shufflevector <8 x i32> %1904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1906 = getelementptr inbounds i32, ptr %1899, i64 -23
  %1907 = load <8 x i32>, ptr %1906, align 4, !tbaa !5
  %1908 = shufflevector <8 x i32> %1907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1909 = getelementptr inbounds i32, ptr %1899, i64 -31
  %1910 = load <8 x i32>, ptr %1909, align 4, !tbaa !5
  %1911 = shufflevector <8 x i32> %1910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1912 = mul <8 x i32> %1902, %1894
  %1913 = mul <8 x i32> %1905, %1895
  %1914 = mul <8 x i32> %1908, %1896
  %1915 = mul <8 x i32> %1911, %1897
  %1916 = add nuw i64 %1893, 32
  %1917 = icmp eq i64 %1916, %1890
  br i1 %1917, label %1918, label %1892, !llvm.loop !1184

1918:                                             ; preds = %1892
  %1919 = mul <8 x i32> %1913, %1912
  %1920 = mul <8 x i32> %1914, %1919
  %1921 = mul <8 x i32> %1915, %1920
  %1922 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1921)
  %1923 = icmp eq i64 %1886, %1890
  br i1 %1923, label %1936, label %1924

1924:                                             ; preds = %1877, %1918
  %1925 = phi i64 [ %1880, %1877 ], [ %1891, %1918 ]
  %1926 = phi i32 [ 1, %1877 ], [ %1922, %1918 ]
  br label %1927

1927:                                             ; preds = %1924, %1927
  %1928 = phi i64 [ %1933, %1927 ], [ %1925, %1924 ]
  %1929 = phi i32 [ %1932, %1927 ], [ %1926, %1924 ]
  %1930 = getelementptr inbounds i32, ptr %9, i64 %1928
  %1931 = load i32, ptr %1930, align 4, !tbaa !5
  %1932 = mul nsw i32 %1931, %1929
  %1933 = add nsw i64 %1928, -1
  %1934 = trunc i64 %1928 to i32
  %1935 = icmp sgt i32 %1934, 0
  br i1 %1935, label %1927, label %1936, !llvm.loop !1185

1936:                                             ; preds = %1927, %1918
  %1937 = phi i32 [ %1922, %1918 ], [ %1932, %1927 ]
  %1938 = and i64 %1887, 4294967295
  %1939 = getelementptr inbounds i32, ptr %6, i64 %1938
  %1940 = load i32, ptr %1939, align 4, !tbaa !5
  %1941 = mul nsw i32 %1940, %1937
  %1942 = add nsw i32 %1941, %1881
  %1943 = icmp sgt i64 %1879, 2
  %1944 = add nsw i64 %1880, -1
  %1945 = add i32 %1878, 1
  br i1 %1943, label %1877, label %1946, !llvm.loop !1186

1946:                                             ; preds = %1936, %1873
  %1947 = phi i32 [ %1876, %1873 ], [ %1942, %1936 ]
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds double, ptr %2, i64 %1948
  %1950 = load double, ptr %1949, align 8, !tbaa !18
  %1951 = getelementptr inbounds float, ptr %1843, i64 %1948
  %1952 = load float, ptr %1951, align 4, !tbaa !162
  %1953 = fptosi float %1952 to i16
  %1954 = fcmp fast one double %1950, 0.000000e+00
  %1955 = icmp sgt i16 %1874, %1953
  %1956 = select i1 %1954, i1 %1955, i1 false
  br i1 %1956, label %1957, label %1958

1957:                                             ; preds = %1946
  store i16 %1953, ptr %1845, align 2, !tbaa !78
  br label %1958

1958:                                             ; preds = %1957, %1946
  %1959 = phi i16 [ %1953, %1957 ], [ %1874, %1946 ]
  %1960 = add nuw nsw i32 %1875, 1
  br i1 %1867, label %1961, label %2008

1961:                                             ; preds = %1958
  %1962 = load i32, ptr %4, align 4, !tbaa !5
  %1963 = load i32, ptr %12, align 4, !tbaa !5
  %1964 = add nsw i32 %1963, -1
  %1965 = icmp slt i32 %1962, %1964
  br i1 %1965, label %1985, label %1966

1966:                                             ; preds = %1961
  %1967 = icmp eq i32 %1962, %1964
  br i1 %1967, label %1968, label %2001

1968:                                             ; preds = %1966
  store i32 0, ptr %4, align 4, !tbaa !5
  %1969 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1969, ptr %6, align 4, !tbaa !5
  br i1 %1872, label %2008, label %1970

1970:                                             ; preds = %1968, %1995
  %1971 = phi i64 [ %1999, %1995 ], [ 1, %1968 ]
  %1972 = getelementptr inbounds i32, ptr %4, i64 %1971
  %1973 = load i32, ptr %1972, align 4, !tbaa !5
  %1974 = getelementptr inbounds i32, ptr %12, i64 %1971
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1973, %1976
  br i1 %1977, label %1978, label %1993

1978:                                             ; preds = %1970
  br i1 %1965, label %1985, label %1979

1979:                                             ; preds = %1978
  %1980 = getelementptr inbounds i32, ptr %7, i64 %1971
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %6, i64 %1971
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = add nsw i32 %1983, %1981
  store i32 %1984, ptr %1982, align 4, !tbaa !5
  br label %2003

1985:                                             ; preds = %1961, %1978
  %1986 = phi i32 [ %1973, %1978 ], [ %1962, %1961 ]
  %1987 = phi ptr [ %1972, %1978 ], [ %4, %1961 ]
  %1988 = phi i64 [ %1971, %1978 ], [ 0, %1961 ]
  %1989 = add nsw i32 %1986, 1
  store i32 %1989, ptr %1987, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %7, i64 %1988
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %6, i64 %1988
  br label %2003

1993:                                             ; preds = %1970
  %1994 = icmp eq i32 %1973, %1976
  br i1 %1994, label %1995, label %2001

1995:                                             ; preds = %1993
  store i32 0, ptr %1972, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %8, i64 %1971
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1971
  store i32 %1997, ptr %1998, align 4, !tbaa !5
  %1999 = add nuw nsw i64 %1971, 1
  %2000 = icmp eq i64 %1999, %1870
  br i1 %2000, label %2008, label %1970, !llvm.loop !1187

2001:                                             ; preds = %1966, %1993
  %2002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2003:                                             ; preds = %1979, %1985
  %2004 = phi ptr [ %1992, %1985 ], [ %1972, %1979 ]
  %2005 = phi i32 [ %1991, %1985 ], [ 1, %1979 ]
  %2006 = load i32, ptr %2004, align 4, !tbaa !5
  %2007 = add nsw i32 %2006, %2005
  store i32 %2007, ptr %2004, align 4, !tbaa !5
  br label %2008

2008:                                             ; preds = %1995, %2003, %1968, %1958
  %2009 = icmp eq i32 %1960, %5
  br i1 %2009, label %5478, label %1873, !llvm.loop !1188

2010:                                             ; preds = %1856, %2148
  %2011 = phi i16 [ %1847, %1856 ], [ %2096, %2148 ]
  %2012 = phi i32 [ 0, %1856 ], [ %2097, %2148 ]
  %2013 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1857, label %2014, label %2083

2014:                                             ; preds = %2010, %2073
  %2015 = phi i32 [ %2082, %2073 ], [ 0, %2010 ]
  %2016 = phi i64 [ %2024, %2073 ], [ %1861, %2010 ]
  %2017 = phi i64 [ %2081, %2073 ], [ %1860, %2010 ]
  %2018 = phi i32 [ %2079, %2073 ], [ %2013, %2010 ]
  %2019 = sub i32 %1859, %2015
  %2020 = tail call i32 @llvm.smin.i32(i32 %2019, i32 0)
  %2021 = sub i32 %2019, %2020
  %2022 = zext i32 %2021 to i64
  %2023 = add nuw nsw i64 %2022, 1
  %2024 = add nsw i64 %2016, -1
  %2025 = icmp ult i32 %2021, 31
  br i1 %2025, label %2061, label %2026

2026:                                             ; preds = %2014
  %2027 = and i64 %2023, 8589934560
  %2028 = sub i64 %2017, %2027
  br label %2029

2029:                                             ; preds = %2029, %2026
  %2030 = phi i64 [ 0, %2026 ], [ %2053, %2029 ]
  %2031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2049, %2029 ]
  %2032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2050, %2029 ]
  %2033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2051, %2029 ]
  %2034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2052, %2029 ]
  %2035 = sub i64 %2017, %2030
  %2036 = getelementptr inbounds i32, ptr %11, i64 %2035
  %2037 = getelementptr inbounds i32, ptr %2036, i64 -7
  %2038 = load <8 x i32>, ptr %2037, align 4, !tbaa !5
  %2039 = shufflevector <8 x i32> %2038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2040 = getelementptr inbounds i32, ptr %2036, i64 -15
  %2041 = load <8 x i32>, ptr %2040, align 4, !tbaa !5
  %2042 = shufflevector <8 x i32> %2041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2043 = getelementptr inbounds i32, ptr %2036, i64 -23
  %2044 = load <8 x i32>, ptr %2043, align 4, !tbaa !5
  %2045 = shufflevector <8 x i32> %2044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2046 = getelementptr inbounds i32, ptr %2036, i64 -31
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = mul <8 x i32> %2039, %2031
  %2050 = mul <8 x i32> %2042, %2032
  %2051 = mul <8 x i32> %2045, %2033
  %2052 = mul <8 x i32> %2048, %2034
  %2053 = add nuw i64 %2030, 32
  %2054 = icmp eq i64 %2053, %2027
  br i1 %2054, label %2055, label %2029, !llvm.loop !1189

2055:                                             ; preds = %2029
  %2056 = mul <8 x i32> %2050, %2049
  %2057 = mul <8 x i32> %2051, %2056
  %2058 = mul <8 x i32> %2052, %2057
  %2059 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2058)
  %2060 = icmp eq i64 %2023, %2027
  br i1 %2060, label %2073, label %2061

2061:                                             ; preds = %2014, %2055
  %2062 = phi i64 [ %2017, %2014 ], [ %2028, %2055 ]
  %2063 = phi i32 [ 1, %2014 ], [ %2059, %2055 ]
  br label %2064

2064:                                             ; preds = %2061, %2064
  %2065 = phi i64 [ %2070, %2064 ], [ %2062, %2061 ]
  %2066 = phi i32 [ %2069, %2064 ], [ %2063, %2061 ]
  %2067 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2068 = load i32, ptr %2067, align 4, !tbaa !5
  %2069 = mul nsw i32 %2068, %2066
  %2070 = add nsw i64 %2065, -1
  %2071 = trunc i64 %2065 to i32
  %2072 = icmp sgt i32 %2071, 0
  br i1 %2072, label %2064, label %2073, !llvm.loop !1190

2073:                                             ; preds = %2064, %2055
  %2074 = phi i32 [ %2059, %2055 ], [ %2069, %2064 ]
  %2075 = and i64 %2024, 4294967295
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2074
  %2079 = add nsw i32 %2078, %2018
  %2080 = icmp sgt i64 %2016, 2
  %2081 = add nsw i64 %2017, -1
  %2082 = add i32 %2015, 1
  br i1 %2080, label %2014, label %2083, !llvm.loop !1191

2083:                                             ; preds = %2073, %2010
  %2084 = phi i32 [ %2013, %2010 ], [ %2079, %2073 ]
  %2085 = icmp slt i32 %2084, %5
  br i1 %2085, label %2088, label %2086

2086:                                             ; preds = %2083
  %2087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2088:                                             ; preds = %2083
  %2089 = sext i32 %2084 to i64
  %2090 = getelementptr inbounds float, ptr %1843, i64 %2089
  %2091 = load float, ptr %2090, align 4, !tbaa !162
  %2092 = fptosi float %2091 to i16
  %2093 = icmp sgt i16 %2011, %2092
  br i1 %2093, label %2094, label %2095

2094:                                             ; preds = %2088
  store i16 %2092, ptr %1845, align 2, !tbaa !78
  br label %2095

2095:                                             ; preds = %2088, %2094
  %2096 = phi i16 [ %2011, %2088 ], [ %2092, %2094 ]
  %2097 = add nuw nsw i32 %2012, 1
  br i1 %1858, label %2098, label %2148

2098:                                             ; preds = %2095
  %2099 = load i32, ptr %4, align 4, !tbaa !5
  %2100 = load i32, ptr %12, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, -1
  %2102 = icmp slt i32 %2099, %2101
  br i1 %2102, label %2125, label %2103

2103:                                             ; preds = %2098
  %2104 = icmp eq i32 %2099, %2101
  br i1 %2104, label %2105, label %2141

2105:                                             ; preds = %2103
  store i32 0, ptr %4, align 4, !tbaa !5
  %2106 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2106, ptr %6, align 4, !tbaa !5
  br i1 %1863, label %2148, label %2107

2107:                                             ; preds = %2105, %2135
  %2108 = phi i64 [ %2139, %2135 ], [ 1, %2105 ]
  %2109 = getelementptr inbounds i32, ptr %4, i64 %2108
  %2110 = load i32, ptr %2109, align 4, !tbaa !5
  %2111 = getelementptr inbounds i32, ptr %12, i64 %2108
  %2112 = load i32, ptr %2111, align 4, !tbaa !5
  %2113 = add nsw i32 %2112, -1
  %2114 = icmp slt i32 %2110, %2113
  br i1 %2114, label %2115, label %2133

2115:                                             ; preds = %2107
  br i1 %2102, label %2125, label %2116

2116:                                             ; preds = %2115
  %2117 = shl i64 %2108, 32
  %2118 = add i64 %2117, -4294967296
  %2119 = ashr exact i64 %2118, 32
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2108
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, %2121
  store i32 %2124, ptr %2122, align 4, !tbaa !5
  br label %2143

2125:                                             ; preds = %2098, %2115
  %2126 = phi i32 [ %2110, %2115 ], [ %2099, %2098 ]
  %2127 = phi ptr [ %2109, %2115 ], [ %4, %2098 ]
  %2128 = phi i64 [ %2108, %2115 ], [ 0, %2098 ]
  %2129 = add nsw i32 %2126, 1
  store i32 %2129, ptr %2127, align 4, !tbaa !5
  %2130 = getelementptr inbounds i32, ptr %7, i64 %2128
  %2131 = load i32, ptr %2130, align 4, !tbaa !5
  %2132 = getelementptr inbounds i32, ptr %6, i64 %2128
  br label %2143

2133:                                             ; preds = %2107
  %2134 = icmp eq i32 %2110, %2113
  br i1 %2134, label %2135, label %2141

2135:                                             ; preds = %2133
  store i32 0, ptr %2109, align 4, !tbaa !5
  %2136 = getelementptr inbounds i32, ptr %8, i64 %2108
  %2137 = load i32, ptr %2136, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %6, i64 %2108
  store i32 %2137, ptr %2138, align 4, !tbaa !5
  %2139 = add nuw nsw i64 %2108, 1
  %2140 = icmp eq i64 %2139, %1861
  br i1 %2140, label %2148, label %2107, !llvm.loop !1192

2141:                                             ; preds = %2103, %2133
  %2142 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2143:                                             ; preds = %2116, %2125
  %2144 = phi ptr [ %2132, %2125 ], [ %2109, %2116 ]
  %2145 = phi i32 [ %2131, %2125 ], [ 1, %2116 ]
  %2146 = load i32, ptr %2144, align 4, !tbaa !5
  %2147 = add nsw i32 %2146, %2145
  store i32 %2147, ptr %2144, align 4, !tbaa !5
  br label %2148

2148:                                             ; preds = %2135, %2143, %2105, %2095
  %2149 = icmp eq i32 %2097, %5
  br i1 %2149, label %5478, label %2010, !llvm.loop !1193

2150:                                             ; preds = %1849
  %2151 = getelementptr inbounds i32, ptr %3, i64 %19
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = icmp eq i32 %2152, 0
  %2154 = icmp sgt i32 %5, 0
  br i1 %2153, label %2164, label %2155

2155:                                             ; preds = %2150
  br i1 %2154, label %2156, label %5478

2156:                                             ; preds = %2155
  %2157 = icmp sgt i32 %13, 1
  %2158 = icmp sgt i32 %13, 0
  %2159 = add i32 %13, -2
  %2160 = zext i32 %2159 to i64
  %2161 = zext i32 %13 to i64
  %2162 = add nuw i32 %5, 1
  %2163 = icmp eq i32 %13, 1
  br label %2306

2164:                                             ; preds = %2150
  br i1 %2154, label %2165, label %5478

2165:                                             ; preds = %2164
  %2166 = icmp sgt i32 %13, 1
  %2167 = icmp sgt i32 %13, 0
  %2168 = add i32 %13, -2
  %2169 = zext i32 %2168 to i64
  %2170 = zext i32 %13 to i64
  %2171 = add nuw i32 %5, 1
  %2172 = icmp eq i32 %13, 1
  br label %2173

2173:                                             ; preds = %2165, %2304
  %2174 = phi i16 [ %1847, %2165 ], [ %2255, %2304 ]
  %2175 = phi i32 [ 0, %2165 ], [ %2256, %2304 ]
  %2176 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2166, label %2177, label %2246

2177:                                             ; preds = %2173, %2236
  %2178 = phi i32 [ %2245, %2236 ], [ 0, %2173 ]
  %2179 = phi i64 [ %2187, %2236 ], [ %2170, %2173 ]
  %2180 = phi i64 [ %2244, %2236 ], [ %2169, %2173 ]
  %2181 = phi i32 [ %2242, %2236 ], [ %2176, %2173 ]
  %2182 = sub i32 %2168, %2178
  %2183 = tail call i32 @llvm.smin.i32(i32 %2182, i32 0)
  %2184 = sub i32 %2182, %2183
  %2185 = zext i32 %2184 to i64
  %2186 = add nuw nsw i64 %2185, 1
  %2187 = add nsw i64 %2179, -1
  %2188 = icmp ult i32 %2184, 31
  br i1 %2188, label %2224, label %2189

2189:                                             ; preds = %2177
  %2190 = and i64 %2186, 8589934560
  %2191 = sub i64 %2180, %2190
  br label %2192

2192:                                             ; preds = %2192, %2189
  %2193 = phi i64 [ 0, %2189 ], [ %2216, %2192 ]
  %2194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2212, %2192 ]
  %2195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2213, %2192 ]
  %2196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2214, %2192 ]
  %2197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2215, %2192 ]
  %2198 = sub i64 %2180, %2193
  %2199 = getelementptr inbounds i32, ptr %9, i64 %2198
  %2200 = getelementptr inbounds i32, ptr %2199, i64 -7
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = getelementptr inbounds i32, ptr %2199, i64 -15
  %2204 = load <8 x i32>, ptr %2203, align 4, !tbaa !5
  %2205 = shufflevector <8 x i32> %2204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2206 = getelementptr inbounds i32, ptr %2199, i64 -23
  %2207 = load <8 x i32>, ptr %2206, align 4, !tbaa !5
  %2208 = shufflevector <8 x i32> %2207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2209 = getelementptr inbounds i32, ptr %2199, i64 -31
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = mul <8 x i32> %2202, %2194
  %2213 = mul <8 x i32> %2205, %2195
  %2214 = mul <8 x i32> %2208, %2196
  %2215 = mul <8 x i32> %2211, %2197
  %2216 = add nuw i64 %2193, 32
  %2217 = icmp eq i64 %2216, %2190
  br i1 %2217, label %2218, label %2192, !llvm.loop !1194

2218:                                             ; preds = %2192
  %2219 = mul <8 x i32> %2213, %2212
  %2220 = mul <8 x i32> %2214, %2219
  %2221 = mul <8 x i32> %2215, %2220
  %2222 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2221)
  %2223 = icmp eq i64 %2186, %2190
  br i1 %2223, label %2236, label %2224

2224:                                             ; preds = %2177, %2218
  %2225 = phi i64 [ %2180, %2177 ], [ %2191, %2218 ]
  %2226 = phi i32 [ 1, %2177 ], [ %2222, %2218 ]
  br label %2227

2227:                                             ; preds = %2224, %2227
  %2228 = phi i64 [ %2233, %2227 ], [ %2225, %2224 ]
  %2229 = phi i32 [ %2232, %2227 ], [ %2226, %2224 ]
  %2230 = getelementptr inbounds i32, ptr %9, i64 %2228
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2229
  %2233 = add nsw i64 %2228, -1
  %2234 = trunc i64 %2228 to i32
  %2235 = icmp sgt i32 %2234, 0
  br i1 %2235, label %2227, label %2236, !llvm.loop !1195

2236:                                             ; preds = %2227, %2218
  %2237 = phi i32 [ %2222, %2218 ], [ %2232, %2227 ]
  %2238 = and i64 %2187, 4294967295
  %2239 = getelementptr inbounds i32, ptr %6, i64 %2238
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = mul nsw i32 %2240, %2237
  %2242 = add nsw i32 %2241, %2181
  %2243 = icmp sgt i64 %2179, 2
  %2244 = add nsw i64 %2180, -1
  %2245 = add i32 %2178, 1
  br i1 %2243, label %2177, label %2246, !llvm.loop !1196

2246:                                             ; preds = %2236, %2173
  %2247 = phi i32 [ %2176, %2173 ], [ %2242, %2236 ]
  %2248 = sext i32 %2247 to i64
  %2249 = getelementptr inbounds float, ptr %1843, i64 %2248
  %2250 = load float, ptr %2249, align 4, !tbaa !162
  %2251 = fptosi float %2250 to i16
  %2252 = icmp sgt i16 %2174, %2251
  br i1 %2252, label %2253, label %2254

2253:                                             ; preds = %2246
  store i16 %2251, ptr %1845, align 2, !tbaa !78
  br label %2254

2254:                                             ; preds = %2253, %2246
  %2255 = phi i16 [ %2251, %2253 ], [ %2174, %2246 ]
  %2256 = add nuw nsw i32 %2175, 1
  br i1 %2167, label %2257, label %2304

2257:                                             ; preds = %2254
  %2258 = load i32, ptr %4, align 4, !tbaa !5
  %2259 = load i32, ptr %12, align 4, !tbaa !5
  %2260 = add nsw i32 %2259, -1
  %2261 = icmp slt i32 %2258, %2260
  br i1 %2261, label %2281, label %2262

2262:                                             ; preds = %2257
  %2263 = icmp eq i32 %2258, %2260
  br i1 %2263, label %2264, label %2297

2264:                                             ; preds = %2262
  store i32 0, ptr %4, align 4, !tbaa !5
  %2265 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2265, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2304, label %2266

2266:                                             ; preds = %2264, %2291
  %2267 = phi i64 [ %2295, %2291 ], [ 1, %2264 ]
  %2268 = getelementptr inbounds i32, ptr %4, i64 %2267
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %12, i64 %2267
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2269, %2272
  br i1 %2273, label %2274, label %2289

2274:                                             ; preds = %2266
  br i1 %2261, label %2281, label %2275

2275:                                             ; preds = %2274
  %2276 = getelementptr inbounds i32, ptr %7, i64 %2267
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = getelementptr inbounds i32, ptr %6, i64 %2267
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = add nsw i32 %2279, %2277
  store i32 %2280, ptr %2278, align 4, !tbaa !5
  br label %2299

2281:                                             ; preds = %2257, %2274
  %2282 = phi i32 [ %2269, %2274 ], [ %2258, %2257 ]
  %2283 = phi ptr [ %2268, %2274 ], [ %4, %2257 ]
  %2284 = phi i64 [ %2267, %2274 ], [ 0, %2257 ]
  %2285 = add nsw i32 %2282, 1
  store i32 %2285, ptr %2283, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %7, i64 %2284
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %6, i64 %2284
  br label %2299

2289:                                             ; preds = %2266
  %2290 = icmp eq i32 %2269, %2272
  br i1 %2290, label %2291, label %2297

2291:                                             ; preds = %2289
  store i32 0, ptr %2268, align 4, !tbaa !5
  %2292 = getelementptr inbounds i32, ptr %8, i64 %2267
  %2293 = load i32, ptr %2292, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2267
  store i32 %2293, ptr %2294, align 4, !tbaa !5
  %2295 = add nuw nsw i64 %2267, 1
  %2296 = icmp eq i64 %2295, %2170
  br i1 %2296, label %2304, label %2266, !llvm.loop !1197

2297:                                             ; preds = %2262, %2289
  %2298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2299:                                             ; preds = %2275, %2281
  %2300 = phi ptr [ %2288, %2281 ], [ %2268, %2275 ]
  %2301 = phi i32 [ %2287, %2281 ], [ 1, %2275 ]
  %2302 = load i32, ptr %2300, align 4, !tbaa !5
  %2303 = add nsw i32 %2302, %2301
  store i32 %2303, ptr %2300, align 4, !tbaa !5
  br label %2304

2304:                                             ; preds = %2291, %2299, %2264, %2254
  %2305 = icmp eq i32 %2256, %5
  br i1 %2305, label %5478, label %2173, !llvm.loop !1198

2306:                                             ; preds = %2156, %2444
  %2307 = phi i16 [ %1847, %2156 ], [ %2392, %2444 ]
  %2308 = phi i32 [ 0, %2156 ], [ %2393, %2444 ]
  %2309 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2157, label %2310, label %2379

2310:                                             ; preds = %2306, %2369
  %2311 = phi i32 [ %2378, %2369 ], [ 0, %2306 ]
  %2312 = phi i64 [ %2320, %2369 ], [ %2161, %2306 ]
  %2313 = phi i64 [ %2377, %2369 ], [ %2160, %2306 ]
  %2314 = phi i32 [ %2375, %2369 ], [ %2309, %2306 ]
  %2315 = sub i32 %2159, %2311
  %2316 = tail call i32 @llvm.smin.i32(i32 %2315, i32 0)
  %2317 = sub i32 %2315, %2316
  %2318 = zext i32 %2317 to i64
  %2319 = add nuw nsw i64 %2318, 1
  %2320 = add nsw i64 %2312, -1
  %2321 = icmp ult i32 %2317, 31
  br i1 %2321, label %2357, label %2322

2322:                                             ; preds = %2310
  %2323 = and i64 %2319, 8589934560
  %2324 = sub i64 %2313, %2323
  br label %2325

2325:                                             ; preds = %2325, %2322
  %2326 = phi i64 [ 0, %2322 ], [ %2349, %2325 ]
  %2327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2345, %2325 ]
  %2328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2346, %2325 ]
  %2329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2347, %2325 ]
  %2330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2348, %2325 ]
  %2331 = sub i64 %2313, %2326
  %2332 = getelementptr inbounds i32, ptr %11, i64 %2331
  %2333 = getelementptr inbounds i32, ptr %2332, i64 -7
  %2334 = load <8 x i32>, ptr %2333, align 4, !tbaa !5
  %2335 = shufflevector <8 x i32> %2334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2336 = getelementptr inbounds i32, ptr %2332, i64 -15
  %2337 = load <8 x i32>, ptr %2336, align 4, !tbaa !5
  %2338 = shufflevector <8 x i32> %2337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2339 = getelementptr inbounds i32, ptr %2332, i64 -23
  %2340 = load <8 x i32>, ptr %2339, align 4, !tbaa !5
  %2341 = shufflevector <8 x i32> %2340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2342 = getelementptr inbounds i32, ptr %2332, i64 -31
  %2343 = load <8 x i32>, ptr %2342, align 4, !tbaa !5
  %2344 = shufflevector <8 x i32> %2343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2345 = mul <8 x i32> %2335, %2327
  %2346 = mul <8 x i32> %2338, %2328
  %2347 = mul <8 x i32> %2341, %2329
  %2348 = mul <8 x i32> %2344, %2330
  %2349 = add nuw i64 %2326, 32
  %2350 = icmp eq i64 %2349, %2323
  br i1 %2350, label %2351, label %2325, !llvm.loop !1199

2351:                                             ; preds = %2325
  %2352 = mul <8 x i32> %2346, %2345
  %2353 = mul <8 x i32> %2347, %2352
  %2354 = mul <8 x i32> %2348, %2353
  %2355 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2354)
  %2356 = icmp eq i64 %2319, %2323
  br i1 %2356, label %2369, label %2357

2357:                                             ; preds = %2310, %2351
  %2358 = phi i64 [ %2313, %2310 ], [ %2324, %2351 ]
  %2359 = phi i32 [ 1, %2310 ], [ %2355, %2351 ]
  br label %2360

2360:                                             ; preds = %2357, %2360
  %2361 = phi i64 [ %2366, %2360 ], [ %2358, %2357 ]
  %2362 = phi i32 [ %2365, %2360 ], [ %2359, %2357 ]
  %2363 = getelementptr inbounds i32, ptr %11, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = mul nsw i32 %2364, %2362
  %2366 = add nsw i64 %2361, -1
  %2367 = trunc i64 %2361 to i32
  %2368 = icmp sgt i32 %2367, 0
  br i1 %2368, label %2360, label %2369, !llvm.loop !1200

2369:                                             ; preds = %2360, %2351
  %2370 = phi i32 [ %2355, %2351 ], [ %2365, %2360 ]
  %2371 = and i64 %2320, 4294967295
  %2372 = getelementptr inbounds i32, ptr %6, i64 %2371
  %2373 = load i32, ptr %2372, align 4, !tbaa !5
  %2374 = mul nsw i32 %2373, %2370
  %2375 = add nsw i32 %2374, %2314
  %2376 = icmp sgt i64 %2312, 2
  %2377 = add nsw i64 %2313, -1
  %2378 = add i32 %2311, 1
  br i1 %2376, label %2310, label %2379, !llvm.loop !1201

2379:                                             ; preds = %2369, %2306
  %2380 = phi i32 [ %2309, %2306 ], [ %2375, %2369 ]
  %2381 = icmp slt i32 %2380, %5
  br i1 %2381, label %2384, label %2382

2382:                                             ; preds = %2379
  %2383 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2384:                                             ; preds = %2379
  %2385 = sext i32 %2380 to i64
  %2386 = getelementptr inbounds float, ptr %1843, i64 %2385
  %2387 = load float, ptr %2386, align 4, !tbaa !162
  %2388 = fptosi float %2387 to i16
  %2389 = icmp sgt i16 %2307, %2388
  br i1 %2389, label %2390, label %2391

2390:                                             ; preds = %2384
  store i16 %2388, ptr %1845, align 2, !tbaa !78
  br label %2391

2391:                                             ; preds = %2390, %2384
  %2392 = phi i16 [ %2388, %2390 ], [ %2307, %2384 ]
  %2393 = add nuw nsw i32 %2308, 1
  br i1 %2158, label %2394, label %2444

2394:                                             ; preds = %2391
  %2395 = load i32, ptr %4, align 4, !tbaa !5
  %2396 = load i32, ptr %12, align 4, !tbaa !5
  %2397 = add nsw i32 %2396, -1
  %2398 = icmp slt i32 %2395, %2397
  br i1 %2398, label %2421, label %2399

2399:                                             ; preds = %2394
  %2400 = icmp eq i32 %2395, %2397
  br i1 %2400, label %2401, label %2437

2401:                                             ; preds = %2399
  store i32 0, ptr %4, align 4, !tbaa !5
  %2402 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2402, ptr %6, align 4, !tbaa !5
  br i1 %2163, label %2444, label %2403

2403:                                             ; preds = %2401, %2431
  %2404 = phi i64 [ %2435, %2431 ], [ 1, %2401 ]
  %2405 = getelementptr inbounds i32, ptr %4, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %12, i64 %2404
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = add nsw i32 %2408, -1
  %2410 = icmp slt i32 %2406, %2409
  br i1 %2410, label %2411, label %2429

2411:                                             ; preds = %2403
  br i1 %2398, label %2421, label %2412

2412:                                             ; preds = %2411
  %2413 = shl i64 %2404, 32
  %2414 = add i64 %2413, -4294967296
  %2415 = ashr exact i64 %2414, 32
  %2416 = getelementptr inbounds i32, ptr %7, i64 %2415
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = add nsw i32 %2419, %2417
  store i32 %2420, ptr %2418, align 4, !tbaa !5
  br label %2439

2421:                                             ; preds = %2394, %2411
  %2422 = phi i32 [ %2406, %2411 ], [ %2395, %2394 ]
  %2423 = phi ptr [ %2405, %2411 ], [ %4, %2394 ]
  %2424 = phi i64 [ %2404, %2411 ], [ 0, %2394 ]
  %2425 = add nsw i32 %2422, 1
  store i32 %2425, ptr %2423, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2424
  br label %2439

2429:                                             ; preds = %2403
  %2430 = icmp eq i32 %2406, %2409
  br i1 %2430, label %2431, label %2437

2431:                                             ; preds = %2429
  store i32 0, ptr %2405, align 4, !tbaa !5
  %2432 = getelementptr inbounds i32, ptr %8, i64 %2404
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2404
  store i32 %2433, ptr %2434, align 4, !tbaa !5
  %2435 = add nuw nsw i64 %2404, 1
  %2436 = icmp eq i64 %2435, %2161
  br i1 %2436, label %2444, label %2403, !llvm.loop !1202

2437:                                             ; preds = %2399, %2429
  %2438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2439:                                             ; preds = %2412, %2421
  %2440 = phi ptr [ %2428, %2421 ], [ %2405, %2412 ]
  %2441 = phi i32 [ %2427, %2421 ], [ 1, %2412 ]
  %2442 = load i32, ptr %2440, align 4, !tbaa !5
  %2443 = add nsw i32 %2442, %2441
  store i32 %2443, ptr %2440, align 4, !tbaa !5
  br label %2444

2444:                                             ; preds = %2431, %2439, %2401, %2391
  %2445 = icmp eq i32 %2393, %5
  br i1 %2445, label %5478, label %2306, !llvm.loop !1203

2446:                                             ; preds = %1849
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1733, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

2448:                                             ; preds = %18
  %2449 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2450 = load ptr, ptr %2449, align 8, !tbaa !9
  %2451 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2452 = load ptr, ptr %2451, align 8, !tbaa !9
  %2453 = load float, ptr %2450, align 4, !tbaa !162
  %2454 = fptosi float %2453 to i32
  store i32 %2454, ptr %2452, align 4, !tbaa !5
  %2455 = icmp eq i32 %13, 0
  br i1 %2455, label %5478, label %2456

2456:                                             ; preds = %2448
  switch i32 %1, label %3049 [
    i32 1, label %2457
    i32 0, label %2755
  ]

2457:                                             ; preds = %2456
  %2458 = getelementptr inbounds i32, ptr %3, i64 %19
  %2459 = load i32, ptr %2458, align 4, !tbaa !5
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp sgt i32 %5, 0
  br i1 %2460, label %2471, label %2462

2462:                                             ; preds = %2457
  br i1 %2461, label %2463, label %5478

2463:                                             ; preds = %2462
  %2464 = icmp sgt i32 %13, 1
  %2465 = icmp sgt i32 %13, 0
  %2466 = add i32 %13, -2
  %2467 = zext i32 %2466 to i64
  %2468 = zext i32 %13 to i64
  %2469 = add nuw i32 %5, 1
  %2470 = icmp eq i32 %13, 1
  br label %2616

2471:                                             ; preds = %2457
  br i1 %2461, label %2472, label %5478

2472:                                             ; preds = %2471
  %2473 = icmp sgt i32 %13, 1
  %2474 = icmp sgt i32 %13, 0
  %2475 = add i32 %13, -2
  %2476 = zext i32 %2475 to i64
  %2477 = zext i32 %13 to i64
  %2478 = add nuw i32 %5, 1
  %2479 = icmp eq i32 %13, 1
  br label %2480

2480:                                             ; preds = %2472, %2614
  %2481 = phi i32 [ 0, %2472 ], [ %2566, %2614 ]
  %2482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2473, label %2483, label %2552

2483:                                             ; preds = %2480, %2542
  %2484 = phi i32 [ %2551, %2542 ], [ 0, %2480 ]
  %2485 = phi i64 [ %2493, %2542 ], [ %2477, %2480 ]
  %2486 = phi i64 [ %2550, %2542 ], [ %2476, %2480 ]
  %2487 = phi i32 [ %2548, %2542 ], [ %2482, %2480 ]
  %2488 = sub i32 %2475, %2484
  %2489 = tail call i32 @llvm.smin.i32(i32 %2488, i32 0)
  %2490 = sub i32 %2488, %2489
  %2491 = zext i32 %2490 to i64
  %2492 = add nuw nsw i64 %2491, 1
  %2493 = add nsw i64 %2485, -1
  %2494 = icmp ult i32 %2490, 31
  br i1 %2494, label %2530, label %2495

2495:                                             ; preds = %2483
  %2496 = and i64 %2492, 8589934560
  %2497 = sub i64 %2486, %2496
  br label %2498

2498:                                             ; preds = %2498, %2495
  %2499 = phi i64 [ 0, %2495 ], [ %2522, %2498 ]
  %2500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2518, %2498 ]
  %2501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2519, %2498 ]
  %2502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2520, %2498 ]
  %2503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2521, %2498 ]
  %2504 = sub i64 %2486, %2499
  %2505 = getelementptr inbounds i32, ptr %9, i64 %2504
  %2506 = getelementptr inbounds i32, ptr %2505, i64 -7
  %2507 = load <8 x i32>, ptr %2506, align 4, !tbaa !5
  %2508 = shufflevector <8 x i32> %2507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2509 = getelementptr inbounds i32, ptr %2505, i64 -15
  %2510 = load <8 x i32>, ptr %2509, align 4, !tbaa !5
  %2511 = shufflevector <8 x i32> %2510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2512 = getelementptr inbounds i32, ptr %2505, i64 -23
  %2513 = load <8 x i32>, ptr %2512, align 4, !tbaa !5
  %2514 = shufflevector <8 x i32> %2513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2515 = getelementptr inbounds i32, ptr %2505, i64 -31
  %2516 = load <8 x i32>, ptr %2515, align 4, !tbaa !5
  %2517 = shufflevector <8 x i32> %2516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2518 = mul <8 x i32> %2508, %2500
  %2519 = mul <8 x i32> %2511, %2501
  %2520 = mul <8 x i32> %2514, %2502
  %2521 = mul <8 x i32> %2517, %2503
  %2522 = add nuw i64 %2499, 32
  %2523 = icmp eq i64 %2522, %2496
  br i1 %2523, label %2524, label %2498, !llvm.loop !1204

2524:                                             ; preds = %2498
  %2525 = mul <8 x i32> %2519, %2518
  %2526 = mul <8 x i32> %2520, %2525
  %2527 = mul <8 x i32> %2521, %2526
  %2528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2527)
  %2529 = icmp eq i64 %2492, %2496
  br i1 %2529, label %2542, label %2530

2530:                                             ; preds = %2483, %2524
  %2531 = phi i64 [ %2486, %2483 ], [ %2497, %2524 ]
  %2532 = phi i32 [ 1, %2483 ], [ %2528, %2524 ]
  br label %2533

2533:                                             ; preds = %2530, %2533
  %2534 = phi i64 [ %2539, %2533 ], [ %2531, %2530 ]
  %2535 = phi i32 [ %2538, %2533 ], [ %2532, %2530 ]
  %2536 = getelementptr inbounds i32, ptr %9, i64 %2534
  %2537 = load i32, ptr %2536, align 4, !tbaa !5
  %2538 = mul nsw i32 %2537, %2535
  %2539 = add nsw i64 %2534, -1
  %2540 = trunc i64 %2534 to i32
  %2541 = icmp sgt i32 %2540, 0
  br i1 %2541, label %2533, label %2542, !llvm.loop !1205

2542:                                             ; preds = %2533, %2524
  %2543 = phi i32 [ %2528, %2524 ], [ %2538, %2533 ]
  %2544 = and i64 %2493, 4294967295
  %2545 = getelementptr inbounds i32, ptr %6, i64 %2544
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = mul nsw i32 %2546, %2543
  %2548 = add nsw i32 %2547, %2487
  %2549 = icmp sgt i64 %2485, 2
  %2550 = add nsw i64 %2486, -1
  %2551 = add i32 %2484, 1
  br i1 %2549, label %2483, label %2552, !llvm.loop !1206

2552:                                             ; preds = %2542, %2480
  %2553 = phi i32 [ %2482, %2480 ], [ %2548, %2542 ]
  %2554 = sext i32 %2553 to i64
  %2555 = getelementptr inbounds double, ptr %2, i64 %2554
  %2556 = load double, ptr %2555, align 8, !tbaa !18
  %2557 = getelementptr inbounds float, ptr %2450, i64 %2554
  %2558 = load float, ptr %2557, align 4, !tbaa !162
  %2559 = fptosi float %2558 to i32
  %2560 = fcmp fast ueq double %2556, 0.000000e+00
  br i1 %2560, label %2565, label %2561

2561:                                             ; preds = %2552
  %2562 = load i32, ptr %2452, align 4, !tbaa !5
  %2563 = icmp sgt i32 %2562, %2559
  br i1 %2563, label %2564, label %2565

2564:                                             ; preds = %2561
  store i32 %2559, ptr %2452, align 4, !tbaa !5
  br label %2565

2565:                                             ; preds = %2561, %2564, %2552
  %2566 = add nuw nsw i32 %2481, 1
  br i1 %2474, label %2567, label %2614

2567:                                             ; preds = %2565
  %2568 = load i32, ptr %4, align 4, !tbaa !5
  %2569 = load i32, ptr %12, align 4, !tbaa !5
  %2570 = add nsw i32 %2569, -1
  %2571 = icmp slt i32 %2568, %2570
  br i1 %2571, label %2591, label %2572

2572:                                             ; preds = %2567
  %2573 = icmp eq i32 %2568, %2570
  br i1 %2573, label %2574, label %2607

2574:                                             ; preds = %2572
  store i32 0, ptr %4, align 4, !tbaa !5
  %2575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2575, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2614, label %2576

2576:                                             ; preds = %2574, %2601
  %2577 = phi i64 [ %2605, %2601 ], [ 1, %2574 ]
  %2578 = getelementptr inbounds i32, ptr %4, i64 %2577
  %2579 = load i32, ptr %2578, align 4, !tbaa !5
  %2580 = getelementptr inbounds i32, ptr %12, i64 %2577
  %2581 = load i32, ptr %2580, align 4, !tbaa !5
  %2582 = add nsw i32 %2581, -1
  %2583 = icmp slt i32 %2579, %2582
  br i1 %2583, label %2584, label %2599

2584:                                             ; preds = %2576
  br i1 %2571, label %2591, label %2585

2585:                                             ; preds = %2584
  %2586 = getelementptr inbounds i32, ptr %7, i64 %2577
  %2587 = load i32, ptr %2586, align 4, !tbaa !5
  %2588 = getelementptr inbounds i32, ptr %6, i64 %2577
  %2589 = load i32, ptr %2588, align 4, !tbaa !5
  %2590 = add nsw i32 %2589, %2587
  store i32 %2590, ptr %2588, align 4, !tbaa !5
  br label %2609

2591:                                             ; preds = %2567, %2584
  %2592 = phi i32 [ %2579, %2584 ], [ %2568, %2567 ]
  %2593 = phi ptr [ %2578, %2584 ], [ %4, %2567 ]
  %2594 = phi i64 [ %2577, %2584 ], [ 0, %2567 ]
  %2595 = add nsw i32 %2592, 1
  store i32 %2595, ptr %2593, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %7, i64 %2594
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2594
  br label %2609

2599:                                             ; preds = %2576
  %2600 = icmp eq i32 %2579, %2582
  br i1 %2600, label %2601, label %2607

2601:                                             ; preds = %2599
  store i32 0, ptr %2578, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %8, i64 %2577
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2577
  store i32 %2603, ptr %2604, align 4, !tbaa !5
  %2605 = add nuw nsw i64 %2577, 1
  %2606 = icmp eq i64 %2605, %2477
  br i1 %2606, label %2614, label %2576, !llvm.loop !1207

2607:                                             ; preds = %2572, %2599
  %2608 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2609:                                             ; preds = %2585, %2591
  %2610 = phi ptr [ %2598, %2591 ], [ %2578, %2585 ]
  %2611 = phi i32 [ %2597, %2591 ], [ 1, %2585 ]
  %2612 = load i32, ptr %2610, align 4, !tbaa !5
  %2613 = add nsw i32 %2612, %2611
  store i32 %2613, ptr %2610, align 4, !tbaa !5
  br label %2614

2614:                                             ; preds = %2601, %2609, %2574, %2565
  %2615 = icmp eq i32 %2566, %5
  br i1 %2615, label %5478, label %2480, !llvm.loop !1208

2616:                                             ; preds = %2463, %2753
  %2617 = phi i32 [ 0, %2463 ], [ %2702, %2753 ]
  %2618 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2464, label %2619, label %2688

2619:                                             ; preds = %2616, %2678
  %2620 = phi i32 [ %2687, %2678 ], [ 0, %2616 ]
  %2621 = phi i64 [ %2629, %2678 ], [ %2468, %2616 ]
  %2622 = phi i64 [ %2686, %2678 ], [ %2467, %2616 ]
  %2623 = phi i32 [ %2684, %2678 ], [ %2618, %2616 ]
  %2624 = sub i32 %2466, %2620
  %2625 = tail call i32 @llvm.smin.i32(i32 %2624, i32 0)
  %2626 = sub i32 %2624, %2625
  %2627 = zext i32 %2626 to i64
  %2628 = add nuw nsw i64 %2627, 1
  %2629 = add nsw i64 %2621, -1
  %2630 = icmp ult i32 %2626, 31
  br i1 %2630, label %2666, label %2631

2631:                                             ; preds = %2619
  %2632 = and i64 %2628, 8589934560
  %2633 = sub i64 %2622, %2632
  br label %2634

2634:                                             ; preds = %2634, %2631
  %2635 = phi i64 [ 0, %2631 ], [ %2658, %2634 ]
  %2636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2654, %2634 ]
  %2637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2655, %2634 ]
  %2638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2656, %2634 ]
  %2639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2657, %2634 ]
  %2640 = sub i64 %2622, %2635
  %2641 = getelementptr inbounds i32, ptr %11, i64 %2640
  %2642 = getelementptr inbounds i32, ptr %2641, i64 -7
  %2643 = load <8 x i32>, ptr %2642, align 4, !tbaa !5
  %2644 = shufflevector <8 x i32> %2643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2645 = getelementptr inbounds i32, ptr %2641, i64 -15
  %2646 = load <8 x i32>, ptr %2645, align 4, !tbaa !5
  %2647 = shufflevector <8 x i32> %2646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2648 = getelementptr inbounds i32, ptr %2641, i64 -23
  %2649 = load <8 x i32>, ptr %2648, align 4, !tbaa !5
  %2650 = shufflevector <8 x i32> %2649, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2651 = getelementptr inbounds i32, ptr %2641, i64 -31
  %2652 = load <8 x i32>, ptr %2651, align 4, !tbaa !5
  %2653 = shufflevector <8 x i32> %2652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2654 = mul <8 x i32> %2644, %2636
  %2655 = mul <8 x i32> %2647, %2637
  %2656 = mul <8 x i32> %2650, %2638
  %2657 = mul <8 x i32> %2653, %2639
  %2658 = add nuw i64 %2635, 32
  %2659 = icmp eq i64 %2658, %2632
  br i1 %2659, label %2660, label %2634, !llvm.loop !1209

2660:                                             ; preds = %2634
  %2661 = mul <8 x i32> %2655, %2654
  %2662 = mul <8 x i32> %2656, %2661
  %2663 = mul <8 x i32> %2657, %2662
  %2664 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2663)
  %2665 = icmp eq i64 %2628, %2632
  br i1 %2665, label %2678, label %2666

2666:                                             ; preds = %2619, %2660
  %2667 = phi i64 [ %2622, %2619 ], [ %2633, %2660 ]
  %2668 = phi i32 [ 1, %2619 ], [ %2664, %2660 ]
  br label %2669

2669:                                             ; preds = %2666, %2669
  %2670 = phi i64 [ %2675, %2669 ], [ %2667, %2666 ]
  %2671 = phi i32 [ %2674, %2669 ], [ %2668, %2666 ]
  %2672 = getelementptr inbounds i32, ptr %11, i64 %2670
  %2673 = load i32, ptr %2672, align 4, !tbaa !5
  %2674 = mul nsw i32 %2673, %2671
  %2675 = add nsw i64 %2670, -1
  %2676 = trunc i64 %2670 to i32
  %2677 = icmp sgt i32 %2676, 0
  br i1 %2677, label %2669, label %2678, !llvm.loop !1210

2678:                                             ; preds = %2669, %2660
  %2679 = phi i32 [ %2664, %2660 ], [ %2674, %2669 ]
  %2680 = and i64 %2629, 4294967295
  %2681 = getelementptr inbounds i32, ptr %6, i64 %2680
  %2682 = load i32, ptr %2681, align 4, !tbaa !5
  %2683 = mul nsw i32 %2682, %2679
  %2684 = add nsw i32 %2683, %2623
  %2685 = icmp sgt i64 %2621, 2
  %2686 = add nsw i64 %2622, -1
  %2687 = add i32 %2620, 1
  br i1 %2685, label %2619, label %2688, !llvm.loop !1211

2688:                                             ; preds = %2678, %2616
  %2689 = phi i32 [ %2618, %2616 ], [ %2684, %2678 ]
  %2690 = icmp slt i32 %2689, %5
  br i1 %2690, label %2693, label %2691

2691:                                             ; preds = %2688
  %2692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2693:                                             ; preds = %2688
  %2694 = sext i32 %2689 to i64
  %2695 = getelementptr inbounds float, ptr %2450, i64 %2694
  %2696 = load float, ptr %2695, align 4, !tbaa !162
  %2697 = fptosi float %2696 to i32
  %2698 = load i32, ptr %2452, align 4, !tbaa !5
  %2699 = icmp sgt i32 %2698, %2697
  br i1 %2699, label %2700, label %2701

2700:                                             ; preds = %2693
  store i32 %2697, ptr %2452, align 4, !tbaa !5
  br label %2701

2701:                                             ; preds = %2693, %2700
  %2702 = add nuw nsw i32 %2617, 1
  br i1 %2465, label %2703, label %2753

2703:                                             ; preds = %2701
  %2704 = load i32, ptr %4, align 4, !tbaa !5
  %2705 = load i32, ptr %12, align 4, !tbaa !5
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2704, %2706
  br i1 %2707, label %2730, label %2708

2708:                                             ; preds = %2703
  %2709 = icmp eq i32 %2704, %2706
  br i1 %2709, label %2710, label %2746

2710:                                             ; preds = %2708
  store i32 0, ptr %4, align 4, !tbaa !5
  %2711 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2711, ptr %6, align 4, !tbaa !5
  br i1 %2470, label %2753, label %2712

2712:                                             ; preds = %2710, %2740
  %2713 = phi i64 [ %2744, %2740 ], [ 1, %2710 ]
  %2714 = getelementptr inbounds i32, ptr %4, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = getelementptr inbounds i32, ptr %12, i64 %2713
  %2717 = load i32, ptr %2716, align 4, !tbaa !5
  %2718 = add nsw i32 %2717, -1
  %2719 = icmp slt i32 %2715, %2718
  br i1 %2719, label %2720, label %2738

2720:                                             ; preds = %2712
  br i1 %2707, label %2730, label %2721

2721:                                             ; preds = %2720
  %2722 = shl i64 %2713, 32
  %2723 = add i64 %2722, -4294967296
  %2724 = ashr exact i64 %2723, 32
  %2725 = getelementptr inbounds i32, ptr %7, i64 %2724
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2728 = load i32, ptr %2727, align 4, !tbaa !5
  %2729 = add nsw i32 %2728, %2726
  store i32 %2729, ptr %2727, align 4, !tbaa !5
  br label %2748

2730:                                             ; preds = %2703, %2720
  %2731 = phi i32 [ %2715, %2720 ], [ %2704, %2703 ]
  %2732 = phi ptr [ %2714, %2720 ], [ %4, %2703 ]
  %2733 = phi i64 [ %2713, %2720 ], [ 0, %2703 ]
  %2734 = add nsw i32 %2731, 1
  store i32 %2734, ptr %2732, align 4, !tbaa !5
  %2735 = getelementptr inbounds i32, ptr %7, i64 %2733
  %2736 = load i32, ptr %2735, align 4, !tbaa !5
  %2737 = getelementptr inbounds i32, ptr %6, i64 %2733
  br label %2748

2738:                                             ; preds = %2712
  %2739 = icmp eq i32 %2715, %2718
  br i1 %2739, label %2740, label %2746

2740:                                             ; preds = %2738
  store i32 0, ptr %2714, align 4, !tbaa !5
  %2741 = getelementptr inbounds i32, ptr %8, i64 %2713
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2713
  store i32 %2742, ptr %2743, align 4, !tbaa !5
  %2744 = add nuw nsw i64 %2713, 1
  %2745 = icmp eq i64 %2744, %2468
  br i1 %2745, label %2753, label %2712, !llvm.loop !1212

2746:                                             ; preds = %2708, %2738
  %2747 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2748:                                             ; preds = %2721, %2730
  %2749 = phi ptr [ %2737, %2730 ], [ %2714, %2721 ]
  %2750 = phi i32 [ %2736, %2730 ], [ 1, %2721 ]
  %2751 = load i32, ptr %2749, align 4, !tbaa !5
  %2752 = add nsw i32 %2751, %2750
  store i32 %2752, ptr %2749, align 4, !tbaa !5
  br label %2753

2753:                                             ; preds = %2740, %2748, %2710, %2701
  %2754 = icmp eq i32 %2702, %5
  br i1 %2754, label %5478, label %2616, !llvm.loop !1213

2755:                                             ; preds = %2456
  %2756 = getelementptr inbounds i32, ptr %3, i64 %19
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = icmp eq i32 %2757, 0
  %2759 = icmp sgt i32 %5, 0
  br i1 %2758, label %2769, label %2760

2760:                                             ; preds = %2755
  br i1 %2759, label %2761, label %5478

2761:                                             ; preds = %2760
  %2762 = icmp sgt i32 %13, 1
  %2763 = icmp sgt i32 %13, 0
  %2764 = add i32 %13, -2
  %2765 = zext i32 %2764 to i64
  %2766 = zext i32 %13 to i64
  %2767 = add nuw i32 %5, 1
  %2768 = icmp eq i32 %13, 1
  br label %2910

2769:                                             ; preds = %2755
  br i1 %2759, label %2770, label %5478

2770:                                             ; preds = %2769
  %2771 = icmp sgt i32 %13, 1
  %2772 = icmp sgt i32 %13, 0
  %2773 = add i32 %13, -2
  %2774 = zext i32 %2773 to i64
  %2775 = zext i32 %13 to i64
  %2776 = add nuw i32 %5, 1
  %2777 = icmp eq i32 %13, 1
  br label %2778

2778:                                             ; preds = %2770, %2908
  %2779 = phi i32 [ 0, %2770 ], [ %2860, %2908 ]
  %2780 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2771, label %2781, label %2850

2781:                                             ; preds = %2778, %2840
  %2782 = phi i32 [ %2849, %2840 ], [ 0, %2778 ]
  %2783 = phi i64 [ %2791, %2840 ], [ %2775, %2778 ]
  %2784 = phi i64 [ %2848, %2840 ], [ %2774, %2778 ]
  %2785 = phi i32 [ %2846, %2840 ], [ %2780, %2778 ]
  %2786 = sub i32 %2773, %2782
  %2787 = tail call i32 @llvm.smin.i32(i32 %2786, i32 0)
  %2788 = sub i32 %2786, %2787
  %2789 = zext i32 %2788 to i64
  %2790 = add nuw nsw i64 %2789, 1
  %2791 = add nsw i64 %2783, -1
  %2792 = icmp ult i32 %2788, 31
  br i1 %2792, label %2828, label %2793

2793:                                             ; preds = %2781
  %2794 = and i64 %2790, 8589934560
  %2795 = sub i64 %2784, %2794
  br label %2796

2796:                                             ; preds = %2796, %2793
  %2797 = phi i64 [ 0, %2793 ], [ %2820, %2796 ]
  %2798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2816, %2796 ]
  %2799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2817, %2796 ]
  %2800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2818, %2796 ]
  %2801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2819, %2796 ]
  %2802 = sub i64 %2784, %2797
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2802
  %2804 = getelementptr inbounds i32, ptr %2803, i64 -7
  %2805 = load <8 x i32>, ptr %2804, align 4, !tbaa !5
  %2806 = shufflevector <8 x i32> %2805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2807 = getelementptr inbounds i32, ptr %2803, i64 -15
  %2808 = load <8 x i32>, ptr %2807, align 4, !tbaa !5
  %2809 = shufflevector <8 x i32> %2808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2810 = getelementptr inbounds i32, ptr %2803, i64 -23
  %2811 = load <8 x i32>, ptr %2810, align 4, !tbaa !5
  %2812 = shufflevector <8 x i32> %2811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2813 = getelementptr inbounds i32, ptr %2803, i64 -31
  %2814 = load <8 x i32>, ptr %2813, align 4, !tbaa !5
  %2815 = shufflevector <8 x i32> %2814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2816 = mul <8 x i32> %2806, %2798
  %2817 = mul <8 x i32> %2809, %2799
  %2818 = mul <8 x i32> %2812, %2800
  %2819 = mul <8 x i32> %2815, %2801
  %2820 = add nuw i64 %2797, 32
  %2821 = icmp eq i64 %2820, %2794
  br i1 %2821, label %2822, label %2796, !llvm.loop !1214

2822:                                             ; preds = %2796
  %2823 = mul <8 x i32> %2817, %2816
  %2824 = mul <8 x i32> %2818, %2823
  %2825 = mul <8 x i32> %2819, %2824
  %2826 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2825)
  %2827 = icmp eq i64 %2790, %2794
  br i1 %2827, label %2840, label %2828

2828:                                             ; preds = %2781, %2822
  %2829 = phi i64 [ %2784, %2781 ], [ %2795, %2822 ]
  %2830 = phi i32 [ 1, %2781 ], [ %2826, %2822 ]
  br label %2831

2831:                                             ; preds = %2828, %2831
  %2832 = phi i64 [ %2837, %2831 ], [ %2829, %2828 ]
  %2833 = phi i32 [ %2836, %2831 ], [ %2830, %2828 ]
  %2834 = getelementptr inbounds i32, ptr %9, i64 %2832
  %2835 = load i32, ptr %2834, align 4, !tbaa !5
  %2836 = mul nsw i32 %2835, %2833
  %2837 = add nsw i64 %2832, -1
  %2838 = trunc i64 %2832 to i32
  %2839 = icmp sgt i32 %2838, 0
  br i1 %2839, label %2831, label %2840, !llvm.loop !1215

2840:                                             ; preds = %2831, %2822
  %2841 = phi i32 [ %2826, %2822 ], [ %2836, %2831 ]
  %2842 = and i64 %2791, 4294967295
  %2843 = getelementptr inbounds i32, ptr %6, i64 %2842
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = mul nsw i32 %2844, %2841
  %2846 = add nsw i32 %2845, %2785
  %2847 = icmp sgt i64 %2783, 2
  %2848 = add nsw i64 %2784, -1
  %2849 = add i32 %2782, 1
  br i1 %2847, label %2781, label %2850, !llvm.loop !1216

2850:                                             ; preds = %2840, %2778
  %2851 = phi i32 [ %2780, %2778 ], [ %2846, %2840 ]
  %2852 = sext i32 %2851 to i64
  %2853 = getelementptr inbounds float, ptr %2450, i64 %2852
  %2854 = load float, ptr %2853, align 4, !tbaa !162
  %2855 = fptosi float %2854 to i32
  %2856 = load i32, ptr %2452, align 4, !tbaa !5
  %2857 = icmp sgt i32 %2856, %2855
  br i1 %2857, label %2858, label %2859

2858:                                             ; preds = %2850
  store i32 %2855, ptr %2452, align 4, !tbaa !5
  br label %2859

2859:                                             ; preds = %2858, %2850
  %2860 = add nuw nsw i32 %2779, 1
  br i1 %2772, label %2861, label %2908

2861:                                             ; preds = %2859
  %2862 = load i32, ptr %4, align 4, !tbaa !5
  %2863 = load i32, ptr %12, align 4, !tbaa !5
  %2864 = add nsw i32 %2863, -1
  %2865 = icmp slt i32 %2862, %2864
  br i1 %2865, label %2885, label %2866

2866:                                             ; preds = %2861
  %2867 = icmp eq i32 %2862, %2864
  br i1 %2867, label %2868, label %2901

2868:                                             ; preds = %2866
  store i32 0, ptr %4, align 4, !tbaa !5
  %2869 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2869, ptr %6, align 4, !tbaa !5
  br i1 %2777, label %2908, label %2870

2870:                                             ; preds = %2868, %2895
  %2871 = phi i64 [ %2899, %2895 ], [ 1, %2868 ]
  %2872 = getelementptr inbounds i32, ptr %4, i64 %2871
  %2873 = load i32, ptr %2872, align 4, !tbaa !5
  %2874 = getelementptr inbounds i32, ptr %12, i64 %2871
  %2875 = load i32, ptr %2874, align 4, !tbaa !5
  %2876 = add nsw i32 %2875, -1
  %2877 = icmp slt i32 %2873, %2876
  br i1 %2877, label %2878, label %2893

2878:                                             ; preds = %2870
  br i1 %2865, label %2885, label %2879

2879:                                             ; preds = %2878
  %2880 = getelementptr inbounds i32, ptr %7, i64 %2871
  %2881 = load i32, ptr %2880, align 4, !tbaa !5
  %2882 = getelementptr inbounds i32, ptr %6, i64 %2871
  %2883 = load i32, ptr %2882, align 4, !tbaa !5
  %2884 = add nsw i32 %2883, %2881
  store i32 %2884, ptr %2882, align 4, !tbaa !5
  br label %2903

2885:                                             ; preds = %2861, %2878
  %2886 = phi i32 [ %2873, %2878 ], [ %2862, %2861 ]
  %2887 = phi ptr [ %2872, %2878 ], [ %4, %2861 ]
  %2888 = phi i64 [ %2871, %2878 ], [ 0, %2861 ]
  %2889 = add nsw i32 %2886, 1
  store i32 %2889, ptr %2887, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = getelementptr inbounds i32, ptr %6, i64 %2888
  br label %2903

2893:                                             ; preds = %2870
  %2894 = icmp eq i32 %2873, %2876
  br i1 %2894, label %2895, label %2901

2895:                                             ; preds = %2893
  store i32 0, ptr %2872, align 4, !tbaa !5
  %2896 = getelementptr inbounds i32, ptr %8, i64 %2871
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2871
  store i32 %2897, ptr %2898, align 4, !tbaa !5
  %2899 = add nuw nsw i64 %2871, 1
  %2900 = icmp eq i64 %2899, %2775
  br i1 %2900, label %2908, label %2870, !llvm.loop !1217

2901:                                             ; preds = %2866, %2893
  %2902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2903:                                             ; preds = %2879, %2885
  %2904 = phi ptr [ %2892, %2885 ], [ %2872, %2879 ]
  %2905 = phi i32 [ %2891, %2885 ], [ 1, %2879 ]
  %2906 = load i32, ptr %2904, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2905
  store i32 %2907, ptr %2904, align 4, !tbaa !5
  br label %2908

2908:                                             ; preds = %2895, %2903, %2868, %2859
  %2909 = icmp eq i32 %2860, %5
  br i1 %2909, label %5478, label %2778, !llvm.loop !1218

2910:                                             ; preds = %2761, %3047
  %2911 = phi i32 [ 0, %2761 ], [ %2996, %3047 ]
  %2912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2762, label %2913, label %2982

2913:                                             ; preds = %2910, %2972
  %2914 = phi i32 [ %2981, %2972 ], [ 0, %2910 ]
  %2915 = phi i64 [ %2923, %2972 ], [ %2766, %2910 ]
  %2916 = phi i64 [ %2980, %2972 ], [ %2765, %2910 ]
  %2917 = phi i32 [ %2978, %2972 ], [ %2912, %2910 ]
  %2918 = sub i32 %2764, %2914
  %2919 = tail call i32 @llvm.smin.i32(i32 %2918, i32 0)
  %2920 = sub i32 %2918, %2919
  %2921 = zext i32 %2920 to i64
  %2922 = add nuw nsw i64 %2921, 1
  %2923 = add nsw i64 %2915, -1
  %2924 = icmp ult i32 %2920, 31
  br i1 %2924, label %2960, label %2925

2925:                                             ; preds = %2913
  %2926 = and i64 %2922, 8589934560
  %2927 = sub i64 %2916, %2926
  br label %2928

2928:                                             ; preds = %2928, %2925
  %2929 = phi i64 [ 0, %2925 ], [ %2952, %2928 ]
  %2930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2948, %2928 ]
  %2931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2949, %2928 ]
  %2932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2950, %2928 ]
  %2933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2951, %2928 ]
  %2934 = sub i64 %2916, %2929
  %2935 = getelementptr inbounds i32, ptr %11, i64 %2934
  %2936 = getelementptr inbounds i32, ptr %2935, i64 -7
  %2937 = load <8 x i32>, ptr %2936, align 4, !tbaa !5
  %2938 = shufflevector <8 x i32> %2937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2939 = getelementptr inbounds i32, ptr %2935, i64 -15
  %2940 = load <8 x i32>, ptr %2939, align 4, !tbaa !5
  %2941 = shufflevector <8 x i32> %2940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2942 = getelementptr inbounds i32, ptr %2935, i64 -23
  %2943 = load <8 x i32>, ptr %2942, align 4, !tbaa !5
  %2944 = shufflevector <8 x i32> %2943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2945 = getelementptr inbounds i32, ptr %2935, i64 -31
  %2946 = load <8 x i32>, ptr %2945, align 4, !tbaa !5
  %2947 = shufflevector <8 x i32> %2946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2948 = mul <8 x i32> %2938, %2930
  %2949 = mul <8 x i32> %2941, %2931
  %2950 = mul <8 x i32> %2944, %2932
  %2951 = mul <8 x i32> %2947, %2933
  %2952 = add nuw i64 %2929, 32
  %2953 = icmp eq i64 %2952, %2926
  br i1 %2953, label %2954, label %2928, !llvm.loop !1219

2954:                                             ; preds = %2928
  %2955 = mul <8 x i32> %2949, %2948
  %2956 = mul <8 x i32> %2950, %2955
  %2957 = mul <8 x i32> %2951, %2956
  %2958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2957)
  %2959 = icmp eq i64 %2922, %2926
  br i1 %2959, label %2972, label %2960

2960:                                             ; preds = %2913, %2954
  %2961 = phi i64 [ %2916, %2913 ], [ %2927, %2954 ]
  %2962 = phi i32 [ 1, %2913 ], [ %2958, %2954 ]
  br label %2963

2963:                                             ; preds = %2960, %2963
  %2964 = phi i64 [ %2969, %2963 ], [ %2961, %2960 ]
  %2965 = phi i32 [ %2968, %2963 ], [ %2962, %2960 ]
  %2966 = getelementptr inbounds i32, ptr %11, i64 %2964
  %2967 = load i32, ptr %2966, align 4, !tbaa !5
  %2968 = mul nsw i32 %2967, %2965
  %2969 = add nsw i64 %2964, -1
  %2970 = trunc i64 %2964 to i32
  %2971 = icmp sgt i32 %2970, 0
  br i1 %2971, label %2963, label %2972, !llvm.loop !1220

2972:                                             ; preds = %2963, %2954
  %2973 = phi i32 [ %2958, %2954 ], [ %2968, %2963 ]
  %2974 = and i64 %2923, 4294967295
  %2975 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = mul nsw i32 %2976, %2973
  %2978 = add nsw i32 %2977, %2917
  %2979 = icmp sgt i64 %2915, 2
  %2980 = add nsw i64 %2916, -1
  %2981 = add i32 %2914, 1
  br i1 %2979, label %2913, label %2982, !llvm.loop !1221

2982:                                             ; preds = %2972, %2910
  %2983 = phi i32 [ %2912, %2910 ], [ %2978, %2972 ]
  %2984 = icmp slt i32 %2983, %5
  br i1 %2984, label %2987, label %2985

2985:                                             ; preds = %2982
  %2986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2987:                                             ; preds = %2982
  %2988 = sext i32 %2983 to i64
  %2989 = getelementptr inbounds float, ptr %2450, i64 %2988
  %2990 = load float, ptr %2989, align 4, !tbaa !162
  %2991 = fptosi float %2990 to i32
  %2992 = load i32, ptr %2452, align 4, !tbaa !5
  %2993 = icmp sgt i32 %2992, %2991
  br i1 %2993, label %2994, label %2995

2994:                                             ; preds = %2987
  store i32 %2991, ptr %2452, align 4, !tbaa !5
  br label %2995

2995:                                             ; preds = %2994, %2987
  %2996 = add nuw nsw i32 %2911, 1
  br i1 %2763, label %2997, label %3047

2997:                                             ; preds = %2995
  %2998 = load i32, ptr %4, align 4, !tbaa !5
  %2999 = load i32, ptr %12, align 4, !tbaa !5
  %3000 = add nsw i32 %2999, -1
  %3001 = icmp slt i32 %2998, %3000
  br i1 %3001, label %3024, label %3002

3002:                                             ; preds = %2997
  %3003 = icmp eq i32 %2998, %3000
  br i1 %3003, label %3004, label %3040

3004:                                             ; preds = %3002
  store i32 0, ptr %4, align 4, !tbaa !5
  %3005 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3005, ptr %6, align 4, !tbaa !5
  br i1 %2768, label %3047, label %3006

3006:                                             ; preds = %3004, %3034
  %3007 = phi i64 [ %3038, %3034 ], [ 1, %3004 ]
  %3008 = getelementptr inbounds i32, ptr %4, i64 %3007
  %3009 = load i32, ptr %3008, align 4, !tbaa !5
  %3010 = getelementptr inbounds i32, ptr %12, i64 %3007
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = add nsw i32 %3011, -1
  %3013 = icmp slt i32 %3009, %3012
  br i1 %3013, label %3014, label %3032

3014:                                             ; preds = %3006
  br i1 %3001, label %3024, label %3015

3015:                                             ; preds = %3014
  %3016 = shl i64 %3007, 32
  %3017 = add i64 %3016, -4294967296
  %3018 = ashr exact i64 %3017, 32
  %3019 = getelementptr inbounds i32, ptr %7, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !5
  %3021 = getelementptr inbounds i32, ptr %6, i64 %3007
  %3022 = load i32, ptr %3021, align 4, !tbaa !5
  %3023 = add nsw i32 %3022, %3020
  store i32 %3023, ptr %3021, align 4, !tbaa !5
  br label %3042

3024:                                             ; preds = %2997, %3014
  %3025 = phi i32 [ %3009, %3014 ], [ %2998, %2997 ]
  %3026 = phi ptr [ %3008, %3014 ], [ %4, %2997 ]
  %3027 = phi i64 [ %3007, %3014 ], [ 0, %2997 ]
  %3028 = add nsw i32 %3025, 1
  store i32 %3028, ptr %3026, align 4, !tbaa !5
  %3029 = getelementptr inbounds i32, ptr %7, i64 %3027
  %3030 = load i32, ptr %3029, align 4, !tbaa !5
  %3031 = getelementptr inbounds i32, ptr %6, i64 %3027
  br label %3042

3032:                                             ; preds = %3006
  %3033 = icmp eq i32 %3009, %3012
  br i1 %3033, label %3034, label %3040

3034:                                             ; preds = %3032
  store i32 0, ptr %3008, align 4, !tbaa !5
  %3035 = getelementptr inbounds i32, ptr %8, i64 %3007
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3007
  store i32 %3036, ptr %3037, align 4, !tbaa !5
  %3038 = add nuw nsw i64 %3007, 1
  %3039 = icmp eq i64 %3038, %2766
  br i1 %3039, label %3047, label %3006, !llvm.loop !1222

3040:                                             ; preds = %3002, %3032
  %3041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3042:                                             ; preds = %3015, %3024
  %3043 = phi ptr [ %3031, %3024 ], [ %3008, %3015 ]
  %3044 = phi i32 [ %3030, %3024 ], [ 1, %3015 ]
  %3045 = load i32, ptr %3043, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, %3044
  store i32 %3046, ptr %3043, align 4, !tbaa !5
  br label %3047

3047:                                             ; preds = %3034, %3042, %3004, %2995
  %3048 = icmp eq i32 %2996, %5
  br i1 %3048, label %5478, label %2910, !llvm.loop !1223

3049:                                             ; preds = %2456
  %3050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1738, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

3051:                                             ; preds = %18
  %3052 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3053 = load ptr, ptr %3052, align 8, !tbaa !9
  %3054 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3055 = load ptr, ptr %3054, align 8, !tbaa !9
  %3056 = load float, ptr %3053, align 4, !tbaa !162
  %3057 = fptosi float %3056 to i64
  store i64 %3057, ptr %3055, align 8, !tbaa !120
  %3058 = icmp eq i32 %13, 0
  br i1 %3058, label %5478, label %3059

3059:                                             ; preds = %3051
  switch i32 %1, label %3656 [
    i32 1, label %3060
    i32 0, label %3360
  ]

3060:                                             ; preds = %3059
  %3061 = getelementptr inbounds i32, ptr %3, i64 %19
  %3062 = load i32, ptr %3061, align 4, !tbaa !5
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp sgt i32 %5, 0
  br i1 %3063, label %3074, label %3065

3065:                                             ; preds = %3060
  br i1 %3064, label %3066, label %5478

3066:                                             ; preds = %3065
  %3067 = icmp sgt i32 %13, 1
  %3068 = icmp sgt i32 %13, 0
  %3069 = add i32 %13, -2
  %3070 = zext i32 %3069 to i64
  %3071 = zext i32 %13 to i64
  %3072 = add nuw i32 %5, 1
  %3073 = icmp eq i32 %13, 1
  br label %3220

3074:                                             ; preds = %3060
  br i1 %3064, label %3075, label %5478

3075:                                             ; preds = %3074
  %3076 = icmp sgt i32 %13, 1
  %3077 = icmp sgt i32 %13, 0
  %3078 = add i32 %13, -2
  %3079 = zext i32 %3078 to i64
  %3080 = zext i32 %13 to i64
  %3081 = add nuw i32 %5, 1
  %3082 = icmp eq i32 %13, 1
  br label %3083

3083:                                             ; preds = %3075, %3218
  %3084 = phi i64 [ %3057, %3075 ], [ %3169, %3218 ]
  %3085 = phi i32 [ 0, %3075 ], [ %3170, %3218 ]
  %3086 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3076, label %3087, label %3156

3087:                                             ; preds = %3083, %3146
  %3088 = phi i32 [ %3155, %3146 ], [ 0, %3083 ]
  %3089 = phi i64 [ %3097, %3146 ], [ %3080, %3083 ]
  %3090 = phi i64 [ %3154, %3146 ], [ %3079, %3083 ]
  %3091 = phi i32 [ %3152, %3146 ], [ %3086, %3083 ]
  %3092 = sub i32 %3078, %3088
  %3093 = tail call i32 @llvm.smin.i32(i32 %3092, i32 0)
  %3094 = sub i32 %3092, %3093
  %3095 = zext i32 %3094 to i64
  %3096 = add nuw nsw i64 %3095, 1
  %3097 = add nsw i64 %3089, -1
  %3098 = icmp ult i32 %3094, 31
  br i1 %3098, label %3134, label %3099

3099:                                             ; preds = %3087
  %3100 = and i64 %3096, 8589934560
  %3101 = sub i64 %3090, %3100
  br label %3102

3102:                                             ; preds = %3102, %3099
  %3103 = phi i64 [ 0, %3099 ], [ %3126, %3102 ]
  %3104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3122, %3102 ]
  %3105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3123, %3102 ]
  %3106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3124, %3102 ]
  %3107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3125, %3102 ]
  %3108 = sub i64 %3090, %3103
  %3109 = getelementptr inbounds i32, ptr %9, i64 %3108
  %3110 = getelementptr inbounds i32, ptr %3109, i64 -7
  %3111 = load <8 x i32>, ptr %3110, align 4, !tbaa !5
  %3112 = shufflevector <8 x i32> %3111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3113 = getelementptr inbounds i32, ptr %3109, i64 -15
  %3114 = load <8 x i32>, ptr %3113, align 4, !tbaa !5
  %3115 = shufflevector <8 x i32> %3114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3116 = getelementptr inbounds i32, ptr %3109, i64 -23
  %3117 = load <8 x i32>, ptr %3116, align 4, !tbaa !5
  %3118 = shufflevector <8 x i32> %3117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3119 = getelementptr inbounds i32, ptr %3109, i64 -31
  %3120 = load <8 x i32>, ptr %3119, align 4, !tbaa !5
  %3121 = shufflevector <8 x i32> %3120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3122 = mul <8 x i32> %3112, %3104
  %3123 = mul <8 x i32> %3115, %3105
  %3124 = mul <8 x i32> %3118, %3106
  %3125 = mul <8 x i32> %3121, %3107
  %3126 = add nuw i64 %3103, 32
  %3127 = icmp eq i64 %3126, %3100
  br i1 %3127, label %3128, label %3102, !llvm.loop !1224

3128:                                             ; preds = %3102
  %3129 = mul <8 x i32> %3123, %3122
  %3130 = mul <8 x i32> %3124, %3129
  %3131 = mul <8 x i32> %3125, %3130
  %3132 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3131)
  %3133 = icmp eq i64 %3096, %3100
  br i1 %3133, label %3146, label %3134

3134:                                             ; preds = %3087, %3128
  %3135 = phi i64 [ %3090, %3087 ], [ %3101, %3128 ]
  %3136 = phi i32 [ 1, %3087 ], [ %3132, %3128 ]
  br label %3137

3137:                                             ; preds = %3134, %3137
  %3138 = phi i64 [ %3143, %3137 ], [ %3135, %3134 ]
  %3139 = phi i32 [ %3142, %3137 ], [ %3136, %3134 ]
  %3140 = getelementptr inbounds i32, ptr %9, i64 %3138
  %3141 = load i32, ptr %3140, align 4, !tbaa !5
  %3142 = mul nsw i32 %3141, %3139
  %3143 = add nsw i64 %3138, -1
  %3144 = trunc i64 %3138 to i32
  %3145 = icmp sgt i32 %3144, 0
  br i1 %3145, label %3137, label %3146, !llvm.loop !1225

3146:                                             ; preds = %3137, %3128
  %3147 = phi i32 [ %3132, %3128 ], [ %3142, %3137 ]
  %3148 = and i64 %3097, 4294967295
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3148
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = mul nsw i32 %3150, %3147
  %3152 = add nsw i32 %3151, %3091
  %3153 = icmp sgt i64 %3089, 2
  %3154 = add nsw i64 %3090, -1
  %3155 = add i32 %3088, 1
  br i1 %3153, label %3087, label %3156, !llvm.loop !1226

3156:                                             ; preds = %3146, %3083
  %3157 = phi i32 [ %3086, %3083 ], [ %3152, %3146 ]
  %3158 = sext i32 %3157 to i64
  %3159 = getelementptr inbounds double, ptr %2, i64 %3158
  %3160 = load double, ptr %3159, align 8, !tbaa !18
  %3161 = getelementptr inbounds float, ptr %3053, i64 %3158
  %3162 = load float, ptr %3161, align 4, !tbaa !162
  %3163 = fptosi float %3162 to i64
  %3164 = fcmp fast one double %3160, 0.000000e+00
  %3165 = icmp sgt i64 %3084, %3163
  %3166 = select i1 %3164, i1 %3165, i1 false
  br i1 %3166, label %3167, label %3168

3167:                                             ; preds = %3156
  store i64 %3163, ptr %3055, align 8, !tbaa !120
  br label %3168

3168:                                             ; preds = %3167, %3156
  %3169 = phi i64 [ %3163, %3167 ], [ %3084, %3156 ]
  %3170 = add nuw nsw i32 %3085, 1
  br i1 %3077, label %3171, label %3218

3171:                                             ; preds = %3168
  %3172 = load i32, ptr %4, align 4, !tbaa !5
  %3173 = load i32, ptr %12, align 4, !tbaa !5
  %3174 = add nsw i32 %3173, -1
  %3175 = icmp slt i32 %3172, %3174
  br i1 %3175, label %3195, label %3176

3176:                                             ; preds = %3171
  %3177 = icmp eq i32 %3172, %3174
  br i1 %3177, label %3178, label %3211

3178:                                             ; preds = %3176
  store i32 0, ptr %4, align 4, !tbaa !5
  %3179 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3179, ptr %6, align 4, !tbaa !5
  br i1 %3082, label %3218, label %3180

3180:                                             ; preds = %3178, %3205
  %3181 = phi i64 [ %3209, %3205 ], [ 1, %3178 ]
  %3182 = getelementptr inbounds i32, ptr %4, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = getelementptr inbounds i32, ptr %12, i64 %3181
  %3185 = load i32, ptr %3184, align 4, !tbaa !5
  %3186 = add nsw i32 %3185, -1
  %3187 = icmp slt i32 %3183, %3186
  br i1 %3187, label %3188, label %3203

3188:                                             ; preds = %3180
  br i1 %3175, label %3195, label %3189

3189:                                             ; preds = %3188
  %3190 = getelementptr inbounds i32, ptr %7, i64 %3181
  %3191 = load i32, ptr %3190, align 4, !tbaa !5
  %3192 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3193 = load i32, ptr %3192, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, %3191
  store i32 %3194, ptr %3192, align 4, !tbaa !5
  br label %3213

3195:                                             ; preds = %3171, %3188
  %3196 = phi i32 [ %3183, %3188 ], [ %3172, %3171 ]
  %3197 = phi ptr [ %3182, %3188 ], [ %4, %3171 ]
  %3198 = phi i64 [ %3181, %3188 ], [ 0, %3171 ]
  %3199 = add nsw i32 %3196, 1
  store i32 %3199, ptr %3197, align 4, !tbaa !5
  %3200 = getelementptr inbounds i32, ptr %7, i64 %3198
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %6, i64 %3198
  br label %3213

3203:                                             ; preds = %3180
  %3204 = icmp eq i32 %3183, %3186
  br i1 %3204, label %3205, label %3211

3205:                                             ; preds = %3203
  store i32 0, ptr %3182, align 4, !tbaa !5
  %3206 = getelementptr inbounds i32, ptr %8, i64 %3181
  %3207 = load i32, ptr %3206, align 4, !tbaa !5
  %3208 = getelementptr inbounds i32, ptr %6, i64 %3181
  store i32 %3207, ptr %3208, align 4, !tbaa !5
  %3209 = add nuw nsw i64 %3181, 1
  %3210 = icmp eq i64 %3209, %3080
  br i1 %3210, label %3218, label %3180, !llvm.loop !1227

3211:                                             ; preds = %3176, %3203
  %3212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3213:                                             ; preds = %3189, %3195
  %3214 = phi ptr [ %3202, %3195 ], [ %3182, %3189 ]
  %3215 = phi i32 [ %3201, %3195 ], [ 1, %3189 ]
  %3216 = load i32, ptr %3214, align 4, !tbaa !5
  %3217 = add nsw i32 %3216, %3215
  store i32 %3217, ptr %3214, align 4, !tbaa !5
  br label %3218

3218:                                             ; preds = %3205, %3213, %3178, %3168
  %3219 = icmp eq i32 %3170, %5
  br i1 %3219, label %5478, label %3083, !llvm.loop !1228

3220:                                             ; preds = %3066, %3358
  %3221 = phi i64 [ %3057, %3066 ], [ %3306, %3358 ]
  %3222 = phi i32 [ 0, %3066 ], [ %3307, %3358 ]
  %3223 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3067, label %3224, label %3293

3224:                                             ; preds = %3220, %3283
  %3225 = phi i32 [ %3292, %3283 ], [ 0, %3220 ]
  %3226 = phi i64 [ %3234, %3283 ], [ %3071, %3220 ]
  %3227 = phi i64 [ %3291, %3283 ], [ %3070, %3220 ]
  %3228 = phi i32 [ %3289, %3283 ], [ %3223, %3220 ]
  %3229 = sub i32 %3069, %3225
  %3230 = tail call i32 @llvm.smin.i32(i32 %3229, i32 0)
  %3231 = sub i32 %3229, %3230
  %3232 = zext i32 %3231 to i64
  %3233 = add nuw nsw i64 %3232, 1
  %3234 = add nsw i64 %3226, -1
  %3235 = icmp ult i32 %3231, 31
  br i1 %3235, label %3271, label %3236

3236:                                             ; preds = %3224
  %3237 = and i64 %3233, 8589934560
  %3238 = sub i64 %3227, %3237
  br label %3239

3239:                                             ; preds = %3239, %3236
  %3240 = phi i64 [ 0, %3236 ], [ %3263, %3239 ]
  %3241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3259, %3239 ]
  %3242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3260, %3239 ]
  %3243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3261, %3239 ]
  %3244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3262, %3239 ]
  %3245 = sub i64 %3227, %3240
  %3246 = getelementptr inbounds i32, ptr %11, i64 %3245
  %3247 = getelementptr inbounds i32, ptr %3246, i64 -7
  %3248 = load <8 x i32>, ptr %3247, align 4, !tbaa !5
  %3249 = shufflevector <8 x i32> %3248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3250 = getelementptr inbounds i32, ptr %3246, i64 -15
  %3251 = load <8 x i32>, ptr %3250, align 4, !tbaa !5
  %3252 = shufflevector <8 x i32> %3251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3253 = getelementptr inbounds i32, ptr %3246, i64 -23
  %3254 = load <8 x i32>, ptr %3253, align 4, !tbaa !5
  %3255 = shufflevector <8 x i32> %3254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3256 = getelementptr inbounds i32, ptr %3246, i64 -31
  %3257 = load <8 x i32>, ptr %3256, align 4, !tbaa !5
  %3258 = shufflevector <8 x i32> %3257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3259 = mul <8 x i32> %3249, %3241
  %3260 = mul <8 x i32> %3252, %3242
  %3261 = mul <8 x i32> %3255, %3243
  %3262 = mul <8 x i32> %3258, %3244
  %3263 = add nuw i64 %3240, 32
  %3264 = icmp eq i64 %3263, %3237
  br i1 %3264, label %3265, label %3239, !llvm.loop !1229

3265:                                             ; preds = %3239
  %3266 = mul <8 x i32> %3260, %3259
  %3267 = mul <8 x i32> %3261, %3266
  %3268 = mul <8 x i32> %3262, %3267
  %3269 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3268)
  %3270 = icmp eq i64 %3233, %3237
  br i1 %3270, label %3283, label %3271

3271:                                             ; preds = %3224, %3265
  %3272 = phi i64 [ %3227, %3224 ], [ %3238, %3265 ]
  %3273 = phi i32 [ 1, %3224 ], [ %3269, %3265 ]
  br label %3274

3274:                                             ; preds = %3271, %3274
  %3275 = phi i64 [ %3280, %3274 ], [ %3272, %3271 ]
  %3276 = phi i32 [ %3279, %3274 ], [ %3273, %3271 ]
  %3277 = getelementptr inbounds i32, ptr %11, i64 %3275
  %3278 = load i32, ptr %3277, align 4, !tbaa !5
  %3279 = mul nsw i32 %3278, %3276
  %3280 = add nsw i64 %3275, -1
  %3281 = trunc i64 %3275 to i32
  %3282 = icmp sgt i32 %3281, 0
  br i1 %3282, label %3274, label %3283, !llvm.loop !1230

3283:                                             ; preds = %3274, %3265
  %3284 = phi i32 [ %3269, %3265 ], [ %3279, %3274 ]
  %3285 = and i64 %3234, 4294967295
  %3286 = getelementptr inbounds i32, ptr %6, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = mul nsw i32 %3287, %3284
  %3289 = add nsw i32 %3288, %3228
  %3290 = icmp sgt i64 %3226, 2
  %3291 = add nsw i64 %3227, -1
  %3292 = add i32 %3225, 1
  br i1 %3290, label %3224, label %3293, !llvm.loop !1231

3293:                                             ; preds = %3283, %3220
  %3294 = phi i32 [ %3223, %3220 ], [ %3289, %3283 ]
  %3295 = icmp slt i32 %3294, %5
  br i1 %3295, label %3298, label %3296

3296:                                             ; preds = %3293
  %3297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3298:                                             ; preds = %3293
  %3299 = sext i32 %3294 to i64
  %3300 = getelementptr inbounds float, ptr %3053, i64 %3299
  %3301 = load float, ptr %3300, align 4, !tbaa !162
  %3302 = fptosi float %3301 to i64
  %3303 = icmp sgt i64 %3221, %3302
  br i1 %3303, label %3304, label %3305

3304:                                             ; preds = %3298
  store i64 %3302, ptr %3055, align 8, !tbaa !120
  br label %3305

3305:                                             ; preds = %3298, %3304
  %3306 = phi i64 [ %3221, %3298 ], [ %3302, %3304 ]
  %3307 = add nuw nsw i32 %3222, 1
  br i1 %3068, label %3308, label %3358

3308:                                             ; preds = %3305
  %3309 = load i32, ptr %4, align 4, !tbaa !5
  %3310 = load i32, ptr %12, align 4, !tbaa !5
  %3311 = add nsw i32 %3310, -1
  %3312 = icmp slt i32 %3309, %3311
  br i1 %3312, label %3335, label %3313

3313:                                             ; preds = %3308
  %3314 = icmp eq i32 %3309, %3311
  br i1 %3314, label %3315, label %3351

3315:                                             ; preds = %3313
  store i32 0, ptr %4, align 4, !tbaa !5
  %3316 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3316, ptr %6, align 4, !tbaa !5
  br i1 %3073, label %3358, label %3317

3317:                                             ; preds = %3315, %3345
  %3318 = phi i64 [ %3349, %3345 ], [ 1, %3315 ]
  %3319 = getelementptr inbounds i32, ptr %4, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = getelementptr inbounds i32, ptr %12, i64 %3318
  %3322 = load i32, ptr %3321, align 4, !tbaa !5
  %3323 = add nsw i32 %3322, -1
  %3324 = icmp slt i32 %3320, %3323
  br i1 %3324, label %3325, label %3343

3325:                                             ; preds = %3317
  br i1 %3312, label %3335, label %3326

3326:                                             ; preds = %3325
  %3327 = shl i64 %3318, 32
  %3328 = add i64 %3327, -4294967296
  %3329 = ashr exact i64 %3328, 32
  %3330 = getelementptr inbounds i32, ptr %7, i64 %3329
  %3331 = load i32, ptr %3330, align 4, !tbaa !5
  %3332 = getelementptr inbounds i32, ptr %6, i64 %3318
  %3333 = load i32, ptr %3332, align 4, !tbaa !5
  %3334 = add nsw i32 %3333, %3331
  store i32 %3334, ptr %3332, align 4, !tbaa !5
  br label %3353

3335:                                             ; preds = %3308, %3325
  %3336 = phi i32 [ %3320, %3325 ], [ %3309, %3308 ]
  %3337 = phi ptr [ %3319, %3325 ], [ %4, %3308 ]
  %3338 = phi i64 [ %3318, %3325 ], [ 0, %3308 ]
  %3339 = add nsw i32 %3336, 1
  store i32 %3339, ptr %3337, align 4, !tbaa !5
  %3340 = getelementptr inbounds i32, ptr %7, i64 %3338
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %6, i64 %3338
  br label %3353

3343:                                             ; preds = %3317
  %3344 = icmp eq i32 %3320, %3323
  br i1 %3344, label %3345, label %3351

3345:                                             ; preds = %3343
  store i32 0, ptr %3319, align 4, !tbaa !5
  %3346 = getelementptr inbounds i32, ptr %8, i64 %3318
  %3347 = load i32, ptr %3346, align 4, !tbaa !5
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3318
  store i32 %3347, ptr %3348, align 4, !tbaa !5
  %3349 = add nuw nsw i64 %3318, 1
  %3350 = icmp eq i64 %3349, %3071
  br i1 %3350, label %3358, label %3317, !llvm.loop !1232

3351:                                             ; preds = %3313, %3343
  %3352 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3353:                                             ; preds = %3326, %3335
  %3354 = phi ptr [ %3342, %3335 ], [ %3319, %3326 ]
  %3355 = phi i32 [ %3341, %3335 ], [ 1, %3326 ]
  %3356 = load i32, ptr %3354, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, %3355
  store i32 %3357, ptr %3354, align 4, !tbaa !5
  br label %3358

3358:                                             ; preds = %3345, %3353, %3315, %3305
  %3359 = icmp eq i32 %3307, %5
  br i1 %3359, label %5478, label %3220, !llvm.loop !1233

3360:                                             ; preds = %3059
  %3361 = getelementptr inbounds i32, ptr %3, i64 %19
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = icmp eq i32 %3362, 0
  %3364 = icmp sgt i32 %5, 0
  br i1 %3363, label %3374, label %3365

3365:                                             ; preds = %3360
  br i1 %3364, label %3366, label %5478

3366:                                             ; preds = %3365
  %3367 = icmp sgt i32 %13, 1
  %3368 = icmp sgt i32 %13, 0
  %3369 = add i32 %13, -2
  %3370 = zext i32 %3369 to i64
  %3371 = zext i32 %13 to i64
  %3372 = add nuw i32 %5, 1
  %3373 = icmp eq i32 %13, 1
  br label %3516

3374:                                             ; preds = %3360
  br i1 %3364, label %3375, label %5478

3375:                                             ; preds = %3374
  %3376 = icmp sgt i32 %13, 1
  %3377 = icmp sgt i32 %13, 0
  %3378 = add i32 %13, -2
  %3379 = zext i32 %3378 to i64
  %3380 = zext i32 %13 to i64
  %3381 = add nuw i32 %5, 1
  %3382 = icmp eq i32 %13, 1
  br label %3383

3383:                                             ; preds = %3375, %3514
  %3384 = phi i64 [ %3057, %3375 ], [ %3465, %3514 ]
  %3385 = phi i32 [ 0, %3375 ], [ %3466, %3514 ]
  %3386 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3376, label %3387, label %3456

3387:                                             ; preds = %3383, %3446
  %3388 = phi i32 [ %3455, %3446 ], [ 0, %3383 ]
  %3389 = phi i64 [ %3397, %3446 ], [ %3380, %3383 ]
  %3390 = phi i64 [ %3454, %3446 ], [ %3379, %3383 ]
  %3391 = phi i32 [ %3452, %3446 ], [ %3386, %3383 ]
  %3392 = sub i32 %3378, %3388
  %3393 = tail call i32 @llvm.smin.i32(i32 %3392, i32 0)
  %3394 = sub i32 %3392, %3393
  %3395 = zext i32 %3394 to i64
  %3396 = add nuw nsw i64 %3395, 1
  %3397 = add nsw i64 %3389, -1
  %3398 = icmp ult i32 %3394, 31
  br i1 %3398, label %3434, label %3399

3399:                                             ; preds = %3387
  %3400 = and i64 %3396, 8589934560
  %3401 = sub i64 %3390, %3400
  br label %3402

3402:                                             ; preds = %3402, %3399
  %3403 = phi i64 [ 0, %3399 ], [ %3426, %3402 ]
  %3404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3422, %3402 ]
  %3405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3423, %3402 ]
  %3406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3424, %3402 ]
  %3407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3425, %3402 ]
  %3408 = sub i64 %3390, %3403
  %3409 = getelementptr inbounds i32, ptr %9, i64 %3408
  %3410 = getelementptr inbounds i32, ptr %3409, i64 -7
  %3411 = load <8 x i32>, ptr %3410, align 4, !tbaa !5
  %3412 = shufflevector <8 x i32> %3411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3413 = getelementptr inbounds i32, ptr %3409, i64 -15
  %3414 = load <8 x i32>, ptr %3413, align 4, !tbaa !5
  %3415 = shufflevector <8 x i32> %3414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3416 = getelementptr inbounds i32, ptr %3409, i64 -23
  %3417 = load <8 x i32>, ptr %3416, align 4, !tbaa !5
  %3418 = shufflevector <8 x i32> %3417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3419 = getelementptr inbounds i32, ptr %3409, i64 -31
  %3420 = load <8 x i32>, ptr %3419, align 4, !tbaa !5
  %3421 = shufflevector <8 x i32> %3420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3422 = mul <8 x i32> %3412, %3404
  %3423 = mul <8 x i32> %3415, %3405
  %3424 = mul <8 x i32> %3418, %3406
  %3425 = mul <8 x i32> %3421, %3407
  %3426 = add nuw i64 %3403, 32
  %3427 = icmp eq i64 %3426, %3400
  br i1 %3427, label %3428, label %3402, !llvm.loop !1234

3428:                                             ; preds = %3402
  %3429 = mul <8 x i32> %3423, %3422
  %3430 = mul <8 x i32> %3424, %3429
  %3431 = mul <8 x i32> %3425, %3430
  %3432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3431)
  %3433 = icmp eq i64 %3396, %3400
  br i1 %3433, label %3446, label %3434

3434:                                             ; preds = %3387, %3428
  %3435 = phi i64 [ %3390, %3387 ], [ %3401, %3428 ]
  %3436 = phi i32 [ 1, %3387 ], [ %3432, %3428 ]
  br label %3437

3437:                                             ; preds = %3434, %3437
  %3438 = phi i64 [ %3443, %3437 ], [ %3435, %3434 ]
  %3439 = phi i32 [ %3442, %3437 ], [ %3436, %3434 ]
  %3440 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = mul nsw i32 %3441, %3439
  %3443 = add nsw i64 %3438, -1
  %3444 = trunc i64 %3438 to i32
  %3445 = icmp sgt i32 %3444, 0
  br i1 %3445, label %3437, label %3446, !llvm.loop !1235

3446:                                             ; preds = %3437, %3428
  %3447 = phi i32 [ %3432, %3428 ], [ %3442, %3437 ]
  %3448 = and i64 %3397, 4294967295
  %3449 = getelementptr inbounds i32, ptr %6, i64 %3448
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = mul nsw i32 %3450, %3447
  %3452 = add nsw i32 %3451, %3391
  %3453 = icmp sgt i64 %3389, 2
  %3454 = add nsw i64 %3390, -1
  %3455 = add i32 %3388, 1
  br i1 %3453, label %3387, label %3456, !llvm.loop !1236

3456:                                             ; preds = %3446, %3383
  %3457 = phi i32 [ %3386, %3383 ], [ %3452, %3446 ]
  %3458 = sext i32 %3457 to i64
  %3459 = getelementptr inbounds float, ptr %3053, i64 %3458
  %3460 = load float, ptr %3459, align 4, !tbaa !162
  %3461 = fptosi float %3460 to i64
  %3462 = icmp sgt i64 %3384, %3461
  br i1 %3462, label %3463, label %3464

3463:                                             ; preds = %3456
  store i64 %3461, ptr %3055, align 8, !tbaa !120
  br label %3464

3464:                                             ; preds = %3463, %3456
  %3465 = phi i64 [ %3461, %3463 ], [ %3384, %3456 ]
  %3466 = add nuw nsw i32 %3385, 1
  br i1 %3377, label %3467, label %3514

3467:                                             ; preds = %3464
  %3468 = load i32, ptr %4, align 4, !tbaa !5
  %3469 = load i32, ptr %12, align 4, !tbaa !5
  %3470 = add nsw i32 %3469, -1
  %3471 = icmp slt i32 %3468, %3470
  br i1 %3471, label %3491, label %3472

3472:                                             ; preds = %3467
  %3473 = icmp eq i32 %3468, %3470
  br i1 %3473, label %3474, label %3507

3474:                                             ; preds = %3472
  store i32 0, ptr %4, align 4, !tbaa !5
  %3475 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3475, ptr %6, align 4, !tbaa !5
  br i1 %3382, label %3514, label %3476

3476:                                             ; preds = %3474, %3501
  %3477 = phi i64 [ %3505, %3501 ], [ 1, %3474 ]
  %3478 = getelementptr inbounds i32, ptr %4, i64 %3477
  %3479 = load i32, ptr %3478, align 4, !tbaa !5
  %3480 = getelementptr inbounds i32, ptr %12, i64 %3477
  %3481 = load i32, ptr %3480, align 4, !tbaa !5
  %3482 = add nsw i32 %3481, -1
  %3483 = icmp slt i32 %3479, %3482
  br i1 %3483, label %3484, label %3499

3484:                                             ; preds = %3476
  br i1 %3471, label %3491, label %3485

3485:                                             ; preds = %3484
  %3486 = getelementptr inbounds i32, ptr %7, i64 %3477
  %3487 = load i32, ptr %3486, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %6, i64 %3477
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = add nsw i32 %3489, %3487
  store i32 %3490, ptr %3488, align 4, !tbaa !5
  br label %3509

3491:                                             ; preds = %3467, %3484
  %3492 = phi i32 [ %3479, %3484 ], [ %3468, %3467 ]
  %3493 = phi ptr [ %3478, %3484 ], [ %4, %3467 ]
  %3494 = phi i64 [ %3477, %3484 ], [ 0, %3467 ]
  %3495 = add nsw i32 %3492, 1
  store i32 %3495, ptr %3493, align 4, !tbaa !5
  %3496 = getelementptr inbounds i32, ptr %7, i64 %3494
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = getelementptr inbounds i32, ptr %6, i64 %3494
  br label %3509

3499:                                             ; preds = %3476
  %3500 = icmp eq i32 %3479, %3482
  br i1 %3500, label %3501, label %3507

3501:                                             ; preds = %3499
  store i32 0, ptr %3478, align 4, !tbaa !5
  %3502 = getelementptr inbounds i32, ptr %8, i64 %3477
  %3503 = load i32, ptr %3502, align 4, !tbaa !5
  %3504 = getelementptr inbounds i32, ptr %6, i64 %3477
  store i32 %3503, ptr %3504, align 4, !tbaa !5
  %3505 = add nuw nsw i64 %3477, 1
  %3506 = icmp eq i64 %3505, %3380
  br i1 %3506, label %3514, label %3476, !llvm.loop !1237

3507:                                             ; preds = %3472, %3499
  %3508 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3509:                                             ; preds = %3485, %3491
  %3510 = phi ptr [ %3498, %3491 ], [ %3478, %3485 ]
  %3511 = phi i32 [ %3497, %3491 ], [ 1, %3485 ]
  %3512 = load i32, ptr %3510, align 4, !tbaa !5
  %3513 = add nsw i32 %3512, %3511
  store i32 %3513, ptr %3510, align 4, !tbaa !5
  br label %3514

3514:                                             ; preds = %3501, %3509, %3474, %3464
  %3515 = icmp eq i32 %3466, %5
  br i1 %3515, label %5478, label %3383, !llvm.loop !1238

3516:                                             ; preds = %3366, %3654
  %3517 = phi i64 [ %3057, %3366 ], [ %3602, %3654 ]
  %3518 = phi i32 [ 0, %3366 ], [ %3603, %3654 ]
  %3519 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3367, label %3520, label %3589

3520:                                             ; preds = %3516, %3579
  %3521 = phi i32 [ %3588, %3579 ], [ 0, %3516 ]
  %3522 = phi i64 [ %3530, %3579 ], [ %3371, %3516 ]
  %3523 = phi i64 [ %3587, %3579 ], [ %3370, %3516 ]
  %3524 = phi i32 [ %3585, %3579 ], [ %3519, %3516 ]
  %3525 = sub i32 %3369, %3521
  %3526 = tail call i32 @llvm.smin.i32(i32 %3525, i32 0)
  %3527 = sub i32 %3525, %3526
  %3528 = zext i32 %3527 to i64
  %3529 = add nuw nsw i64 %3528, 1
  %3530 = add nsw i64 %3522, -1
  %3531 = icmp ult i32 %3527, 31
  br i1 %3531, label %3567, label %3532

3532:                                             ; preds = %3520
  %3533 = and i64 %3529, 8589934560
  %3534 = sub i64 %3523, %3533
  br label %3535

3535:                                             ; preds = %3535, %3532
  %3536 = phi i64 [ 0, %3532 ], [ %3559, %3535 ]
  %3537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3555, %3535 ]
  %3538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3556, %3535 ]
  %3539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3557, %3535 ]
  %3540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3558, %3535 ]
  %3541 = sub i64 %3523, %3536
  %3542 = getelementptr inbounds i32, ptr %11, i64 %3541
  %3543 = getelementptr inbounds i32, ptr %3542, i64 -7
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !5
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = getelementptr inbounds i32, ptr %3542, i64 -15
  %3547 = load <8 x i32>, ptr %3546, align 4, !tbaa !5
  %3548 = shufflevector <8 x i32> %3547, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3549 = getelementptr inbounds i32, ptr %3542, i64 -23
  %3550 = load <8 x i32>, ptr %3549, align 4, !tbaa !5
  %3551 = shufflevector <8 x i32> %3550, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3552 = getelementptr inbounds i32, ptr %3542, i64 -31
  %3553 = load <8 x i32>, ptr %3552, align 4, !tbaa !5
  %3554 = shufflevector <8 x i32> %3553, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3555 = mul <8 x i32> %3545, %3537
  %3556 = mul <8 x i32> %3548, %3538
  %3557 = mul <8 x i32> %3551, %3539
  %3558 = mul <8 x i32> %3554, %3540
  %3559 = add nuw i64 %3536, 32
  %3560 = icmp eq i64 %3559, %3533
  br i1 %3560, label %3561, label %3535, !llvm.loop !1239

3561:                                             ; preds = %3535
  %3562 = mul <8 x i32> %3556, %3555
  %3563 = mul <8 x i32> %3557, %3562
  %3564 = mul <8 x i32> %3558, %3563
  %3565 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3564)
  %3566 = icmp eq i64 %3529, %3533
  br i1 %3566, label %3579, label %3567

3567:                                             ; preds = %3520, %3561
  %3568 = phi i64 [ %3523, %3520 ], [ %3534, %3561 ]
  %3569 = phi i32 [ 1, %3520 ], [ %3565, %3561 ]
  br label %3570

3570:                                             ; preds = %3567, %3570
  %3571 = phi i64 [ %3576, %3570 ], [ %3568, %3567 ]
  %3572 = phi i32 [ %3575, %3570 ], [ %3569, %3567 ]
  %3573 = getelementptr inbounds i32, ptr %11, i64 %3571
  %3574 = load i32, ptr %3573, align 4, !tbaa !5
  %3575 = mul nsw i32 %3574, %3572
  %3576 = add nsw i64 %3571, -1
  %3577 = trunc i64 %3571 to i32
  %3578 = icmp sgt i32 %3577, 0
  br i1 %3578, label %3570, label %3579, !llvm.loop !1240

3579:                                             ; preds = %3570, %3561
  %3580 = phi i32 [ %3565, %3561 ], [ %3575, %3570 ]
  %3581 = and i64 %3530, 4294967295
  %3582 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = mul nsw i32 %3583, %3580
  %3585 = add nsw i32 %3584, %3524
  %3586 = icmp sgt i64 %3522, 2
  %3587 = add nsw i64 %3523, -1
  %3588 = add i32 %3521, 1
  br i1 %3586, label %3520, label %3589, !llvm.loop !1241

3589:                                             ; preds = %3579, %3516
  %3590 = phi i32 [ %3519, %3516 ], [ %3585, %3579 ]
  %3591 = icmp slt i32 %3590, %5
  br i1 %3591, label %3594, label %3592

3592:                                             ; preds = %3589
  %3593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3594:                                             ; preds = %3589
  %3595 = sext i32 %3590 to i64
  %3596 = getelementptr inbounds float, ptr %3053, i64 %3595
  %3597 = load float, ptr %3596, align 4, !tbaa !162
  %3598 = fptosi float %3597 to i64
  %3599 = icmp sgt i64 %3517, %3598
  br i1 %3599, label %3600, label %3601

3600:                                             ; preds = %3594
  store i64 %3598, ptr %3055, align 8, !tbaa !120
  br label %3601

3601:                                             ; preds = %3600, %3594
  %3602 = phi i64 [ %3598, %3600 ], [ %3517, %3594 ]
  %3603 = add nuw nsw i32 %3518, 1
  br i1 %3368, label %3604, label %3654

3604:                                             ; preds = %3601
  %3605 = load i32, ptr %4, align 4, !tbaa !5
  %3606 = load i32, ptr %12, align 4, !tbaa !5
  %3607 = add nsw i32 %3606, -1
  %3608 = icmp slt i32 %3605, %3607
  br i1 %3608, label %3631, label %3609

3609:                                             ; preds = %3604
  %3610 = icmp eq i32 %3605, %3607
  br i1 %3610, label %3611, label %3647

3611:                                             ; preds = %3609
  store i32 0, ptr %4, align 4, !tbaa !5
  %3612 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3612, ptr %6, align 4, !tbaa !5
  br i1 %3373, label %3654, label %3613

3613:                                             ; preds = %3611, %3641
  %3614 = phi i64 [ %3645, %3641 ], [ 1, %3611 ]
  %3615 = getelementptr inbounds i32, ptr %4, i64 %3614
  %3616 = load i32, ptr %3615, align 4, !tbaa !5
  %3617 = getelementptr inbounds i32, ptr %12, i64 %3614
  %3618 = load i32, ptr %3617, align 4, !tbaa !5
  %3619 = add nsw i32 %3618, -1
  %3620 = icmp slt i32 %3616, %3619
  br i1 %3620, label %3621, label %3639

3621:                                             ; preds = %3613
  br i1 %3608, label %3631, label %3622

3622:                                             ; preds = %3621
  %3623 = shl i64 %3614, 32
  %3624 = add i64 %3623, -4294967296
  %3625 = ashr exact i64 %3624, 32
  %3626 = getelementptr inbounds i32, ptr %7, i64 %3625
  %3627 = load i32, ptr %3626, align 4, !tbaa !5
  %3628 = getelementptr inbounds i32, ptr %6, i64 %3614
  %3629 = load i32, ptr %3628, align 4, !tbaa !5
  %3630 = add nsw i32 %3629, %3627
  store i32 %3630, ptr %3628, align 4, !tbaa !5
  br label %3649

3631:                                             ; preds = %3604, %3621
  %3632 = phi i32 [ %3616, %3621 ], [ %3605, %3604 ]
  %3633 = phi ptr [ %3615, %3621 ], [ %4, %3604 ]
  %3634 = phi i64 [ %3614, %3621 ], [ 0, %3604 ]
  %3635 = add nsw i32 %3632, 1
  store i32 %3635, ptr %3633, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %7, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = getelementptr inbounds i32, ptr %6, i64 %3634
  br label %3649

3639:                                             ; preds = %3613
  %3640 = icmp eq i32 %3616, %3619
  br i1 %3640, label %3641, label %3647

3641:                                             ; preds = %3639
  store i32 0, ptr %3615, align 4, !tbaa !5
  %3642 = getelementptr inbounds i32, ptr %8, i64 %3614
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3614
  store i32 %3643, ptr %3644, align 4, !tbaa !5
  %3645 = add nuw nsw i64 %3614, 1
  %3646 = icmp eq i64 %3645, %3371
  br i1 %3646, label %3654, label %3613, !llvm.loop !1242

3647:                                             ; preds = %3609, %3639
  %3648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3649:                                             ; preds = %3622, %3631
  %3650 = phi ptr [ %3638, %3631 ], [ %3615, %3622 ]
  %3651 = phi i32 [ %3637, %3631 ], [ 1, %3622 ]
  %3652 = load i32, ptr %3650, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, %3651
  store i32 %3653, ptr %3650, align 4, !tbaa !5
  br label %3654

3654:                                             ; preds = %3641, %3649, %3611, %3601
  %3655 = icmp eq i32 %3603, %5
  br i1 %3655, label %5478, label %3516, !llvm.loop !1243

3656:                                             ; preds = %3059
  %3657 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

3658:                                             ; preds = %18
  %3659 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3660 = load ptr, ptr %3659, align 8, !tbaa !9
  %3661 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3662 = load ptr, ptr %3661, align 8, !tbaa !9
  %3663 = load float, ptr %3660, align 4, !tbaa !162
  %3664 = fpext float %3663 to double
  store double %3664, ptr %3662, align 8, !tbaa !18
  %3665 = icmp eq i32 %13, 0
  br i1 %3665, label %5478, label %3666

3666:                                             ; preds = %3658
  switch i32 %1, label %4263 [
    i32 1, label %3667
    i32 0, label %3967
  ]

3667:                                             ; preds = %3666
  %3668 = getelementptr inbounds i32, ptr %3, i64 %19
  %3669 = load i32, ptr %3668, align 4, !tbaa !5
  %3670 = icmp eq i32 %3669, 0
  %3671 = icmp sgt i32 %5, 0
  br i1 %3670, label %3681, label %3672

3672:                                             ; preds = %3667
  br i1 %3671, label %3673, label %5478

3673:                                             ; preds = %3672
  %3674 = icmp sgt i32 %13, 1
  %3675 = icmp sgt i32 %13, 0
  %3676 = add i32 %13, -2
  %3677 = zext i32 %3676 to i64
  %3678 = zext i32 %13 to i64
  %3679 = add nuw i32 %5, 1
  %3680 = icmp eq i32 %13, 1
  br label %3827

3681:                                             ; preds = %3667
  br i1 %3671, label %3682, label %5478

3682:                                             ; preds = %3681
  %3683 = icmp sgt i32 %13, 1
  %3684 = icmp sgt i32 %13, 0
  %3685 = add i32 %13, -2
  %3686 = zext i32 %3685 to i64
  %3687 = zext i32 %13 to i64
  %3688 = add nuw i32 %5, 1
  %3689 = icmp eq i32 %13, 1
  br label %3690

3690:                                             ; preds = %3682, %3825
  %3691 = phi double [ %3664, %3682 ], [ %3776, %3825 ]
  %3692 = phi i32 [ 0, %3682 ], [ %3777, %3825 ]
  %3693 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3683, label %3694, label %3763

3694:                                             ; preds = %3690, %3753
  %3695 = phi i32 [ %3762, %3753 ], [ 0, %3690 ]
  %3696 = phi i64 [ %3704, %3753 ], [ %3687, %3690 ]
  %3697 = phi i64 [ %3761, %3753 ], [ %3686, %3690 ]
  %3698 = phi i32 [ %3759, %3753 ], [ %3693, %3690 ]
  %3699 = sub i32 %3685, %3695
  %3700 = tail call i32 @llvm.smin.i32(i32 %3699, i32 0)
  %3701 = sub i32 %3699, %3700
  %3702 = zext i32 %3701 to i64
  %3703 = add nuw nsw i64 %3702, 1
  %3704 = add nsw i64 %3696, -1
  %3705 = icmp ult i32 %3701, 31
  br i1 %3705, label %3741, label %3706

3706:                                             ; preds = %3694
  %3707 = and i64 %3703, 8589934560
  %3708 = sub i64 %3697, %3707
  br label %3709

3709:                                             ; preds = %3709, %3706
  %3710 = phi i64 [ 0, %3706 ], [ %3733, %3709 ]
  %3711 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3706 ], [ %3729, %3709 ]
  %3712 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3706 ], [ %3730, %3709 ]
  %3713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3706 ], [ %3731, %3709 ]
  %3714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3706 ], [ %3732, %3709 ]
  %3715 = sub i64 %3697, %3710
  %3716 = getelementptr inbounds i32, ptr %9, i64 %3715
  %3717 = getelementptr inbounds i32, ptr %3716, i64 -7
  %3718 = load <8 x i32>, ptr %3717, align 4, !tbaa !5
  %3719 = shufflevector <8 x i32> %3718, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3720 = getelementptr inbounds i32, ptr %3716, i64 -15
  %3721 = load <8 x i32>, ptr %3720, align 4, !tbaa !5
  %3722 = shufflevector <8 x i32> %3721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3723 = getelementptr inbounds i32, ptr %3716, i64 -23
  %3724 = load <8 x i32>, ptr %3723, align 4, !tbaa !5
  %3725 = shufflevector <8 x i32> %3724, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3726 = getelementptr inbounds i32, ptr %3716, i64 -31
  %3727 = load <8 x i32>, ptr %3726, align 4, !tbaa !5
  %3728 = shufflevector <8 x i32> %3727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3729 = mul <8 x i32> %3719, %3711
  %3730 = mul <8 x i32> %3722, %3712
  %3731 = mul <8 x i32> %3725, %3713
  %3732 = mul <8 x i32> %3728, %3714
  %3733 = add nuw i64 %3710, 32
  %3734 = icmp eq i64 %3733, %3707
  br i1 %3734, label %3735, label %3709, !llvm.loop !1244

3735:                                             ; preds = %3709
  %3736 = mul <8 x i32> %3730, %3729
  %3737 = mul <8 x i32> %3731, %3736
  %3738 = mul <8 x i32> %3732, %3737
  %3739 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3738)
  %3740 = icmp eq i64 %3703, %3707
  br i1 %3740, label %3753, label %3741

3741:                                             ; preds = %3694, %3735
  %3742 = phi i64 [ %3697, %3694 ], [ %3708, %3735 ]
  %3743 = phi i32 [ 1, %3694 ], [ %3739, %3735 ]
  br label %3744

3744:                                             ; preds = %3741, %3744
  %3745 = phi i64 [ %3750, %3744 ], [ %3742, %3741 ]
  %3746 = phi i32 [ %3749, %3744 ], [ %3743, %3741 ]
  %3747 = getelementptr inbounds i32, ptr %9, i64 %3745
  %3748 = load i32, ptr %3747, align 4, !tbaa !5
  %3749 = mul nsw i32 %3748, %3746
  %3750 = add nsw i64 %3745, -1
  %3751 = trunc i64 %3745 to i32
  %3752 = icmp sgt i32 %3751, 0
  br i1 %3752, label %3744, label %3753, !llvm.loop !1245

3753:                                             ; preds = %3744, %3735
  %3754 = phi i32 [ %3739, %3735 ], [ %3749, %3744 ]
  %3755 = and i64 %3704, 4294967295
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3755
  %3757 = load i32, ptr %3756, align 4, !tbaa !5
  %3758 = mul nsw i32 %3757, %3754
  %3759 = add nsw i32 %3758, %3698
  %3760 = icmp sgt i64 %3696, 2
  %3761 = add nsw i64 %3697, -1
  %3762 = add i32 %3695, 1
  br i1 %3760, label %3694, label %3763, !llvm.loop !1246

3763:                                             ; preds = %3753, %3690
  %3764 = phi i32 [ %3693, %3690 ], [ %3759, %3753 ]
  %3765 = sext i32 %3764 to i64
  %3766 = getelementptr inbounds double, ptr %2, i64 %3765
  %3767 = load double, ptr %3766, align 8, !tbaa !18
  %3768 = getelementptr inbounds float, ptr %3660, i64 %3765
  %3769 = load float, ptr %3768, align 4, !tbaa !162
  %3770 = fpext float %3769 to double
  %3771 = fcmp fast one double %3767, 0.000000e+00
  %3772 = fcmp fast ogt double %3691, %3770
  %3773 = select i1 %3771, i1 %3772, i1 false
  br i1 %3773, label %3774, label %3775

3774:                                             ; preds = %3763
  store double %3770, ptr %3662, align 8, !tbaa !18
  br label %3775

3775:                                             ; preds = %3774, %3763
  %3776 = phi double [ %3770, %3774 ], [ %3691, %3763 ]
  %3777 = add nuw nsw i32 %3692, 1
  br i1 %3684, label %3778, label %3825

3778:                                             ; preds = %3775
  %3779 = load i32, ptr %4, align 4, !tbaa !5
  %3780 = load i32, ptr %12, align 4, !tbaa !5
  %3781 = add nsw i32 %3780, -1
  %3782 = icmp slt i32 %3779, %3781
  br i1 %3782, label %3802, label %3783

3783:                                             ; preds = %3778
  %3784 = icmp eq i32 %3779, %3781
  br i1 %3784, label %3785, label %3818

3785:                                             ; preds = %3783
  store i32 0, ptr %4, align 4, !tbaa !5
  %3786 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3786, ptr %6, align 4, !tbaa !5
  br i1 %3689, label %3825, label %3787

3787:                                             ; preds = %3785, %3812
  %3788 = phi i64 [ %3816, %3812 ], [ 1, %3785 ]
  %3789 = getelementptr inbounds i32, ptr %4, i64 %3788
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = getelementptr inbounds i32, ptr %12, i64 %3788
  %3792 = load i32, ptr %3791, align 4, !tbaa !5
  %3793 = add nsw i32 %3792, -1
  %3794 = icmp slt i32 %3790, %3793
  br i1 %3794, label %3795, label %3810

3795:                                             ; preds = %3787
  br i1 %3782, label %3802, label %3796

3796:                                             ; preds = %3795
  %3797 = getelementptr inbounds i32, ptr %7, i64 %3788
  %3798 = load i32, ptr %3797, align 4, !tbaa !5
  %3799 = getelementptr inbounds i32, ptr %6, i64 %3788
  %3800 = load i32, ptr %3799, align 4, !tbaa !5
  %3801 = add nsw i32 %3800, %3798
  store i32 %3801, ptr %3799, align 4, !tbaa !5
  br label %3820

3802:                                             ; preds = %3778, %3795
  %3803 = phi i32 [ %3790, %3795 ], [ %3779, %3778 ]
  %3804 = phi ptr [ %3789, %3795 ], [ %4, %3778 ]
  %3805 = phi i64 [ %3788, %3795 ], [ 0, %3778 ]
  %3806 = add nsw i32 %3803, 1
  store i32 %3806, ptr %3804, align 4, !tbaa !5
  %3807 = getelementptr inbounds i32, ptr %7, i64 %3805
  %3808 = load i32, ptr %3807, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %6, i64 %3805
  br label %3820

3810:                                             ; preds = %3787
  %3811 = icmp eq i32 %3790, %3793
  br i1 %3811, label %3812, label %3818

3812:                                             ; preds = %3810
  store i32 0, ptr %3789, align 4, !tbaa !5
  %3813 = getelementptr inbounds i32, ptr %8, i64 %3788
  %3814 = load i32, ptr %3813, align 4, !tbaa !5
  %3815 = getelementptr inbounds i32, ptr %6, i64 %3788
  store i32 %3814, ptr %3815, align 4, !tbaa !5
  %3816 = add nuw nsw i64 %3788, 1
  %3817 = icmp eq i64 %3816, %3687
  br i1 %3817, label %3825, label %3787, !llvm.loop !1247

3818:                                             ; preds = %3783, %3810
  %3819 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3820:                                             ; preds = %3796, %3802
  %3821 = phi ptr [ %3809, %3802 ], [ %3789, %3796 ]
  %3822 = phi i32 [ %3808, %3802 ], [ 1, %3796 ]
  %3823 = load i32, ptr %3821, align 4, !tbaa !5
  %3824 = add nsw i32 %3823, %3822
  store i32 %3824, ptr %3821, align 4, !tbaa !5
  br label %3825

3825:                                             ; preds = %3812, %3820, %3785, %3775
  %3826 = icmp eq i32 %3777, %5
  br i1 %3826, label %5478, label %3690, !llvm.loop !1248

3827:                                             ; preds = %3673, %3965
  %3828 = phi double [ %3664, %3673 ], [ %3913, %3965 ]
  %3829 = phi i32 [ 0, %3673 ], [ %3914, %3965 ]
  %3830 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3674, label %3831, label %3900

3831:                                             ; preds = %3827, %3890
  %3832 = phi i32 [ %3899, %3890 ], [ 0, %3827 ]
  %3833 = phi i64 [ %3841, %3890 ], [ %3678, %3827 ]
  %3834 = phi i64 [ %3898, %3890 ], [ %3677, %3827 ]
  %3835 = phi i32 [ %3896, %3890 ], [ %3830, %3827 ]
  %3836 = sub i32 %3676, %3832
  %3837 = tail call i32 @llvm.smin.i32(i32 %3836, i32 0)
  %3838 = sub i32 %3836, %3837
  %3839 = zext i32 %3838 to i64
  %3840 = add nuw nsw i64 %3839, 1
  %3841 = add nsw i64 %3833, -1
  %3842 = icmp ult i32 %3838, 31
  br i1 %3842, label %3878, label %3843

3843:                                             ; preds = %3831
  %3844 = and i64 %3840, 8589934560
  %3845 = sub i64 %3834, %3844
  br label %3846

3846:                                             ; preds = %3846, %3843
  %3847 = phi i64 [ 0, %3843 ], [ %3870, %3846 ]
  %3848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3866, %3846 ]
  %3849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3867, %3846 ]
  %3850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3868, %3846 ]
  %3851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3869, %3846 ]
  %3852 = sub i64 %3834, %3847
  %3853 = getelementptr inbounds i32, ptr %11, i64 %3852
  %3854 = getelementptr inbounds i32, ptr %3853, i64 -7
  %3855 = load <8 x i32>, ptr %3854, align 4, !tbaa !5
  %3856 = shufflevector <8 x i32> %3855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3857 = getelementptr inbounds i32, ptr %3853, i64 -15
  %3858 = load <8 x i32>, ptr %3857, align 4, !tbaa !5
  %3859 = shufflevector <8 x i32> %3858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3860 = getelementptr inbounds i32, ptr %3853, i64 -23
  %3861 = load <8 x i32>, ptr %3860, align 4, !tbaa !5
  %3862 = shufflevector <8 x i32> %3861, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3863 = getelementptr inbounds i32, ptr %3853, i64 -31
  %3864 = load <8 x i32>, ptr %3863, align 4, !tbaa !5
  %3865 = shufflevector <8 x i32> %3864, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3866 = mul <8 x i32> %3856, %3848
  %3867 = mul <8 x i32> %3859, %3849
  %3868 = mul <8 x i32> %3862, %3850
  %3869 = mul <8 x i32> %3865, %3851
  %3870 = add nuw i64 %3847, 32
  %3871 = icmp eq i64 %3870, %3844
  br i1 %3871, label %3872, label %3846, !llvm.loop !1249

3872:                                             ; preds = %3846
  %3873 = mul <8 x i32> %3867, %3866
  %3874 = mul <8 x i32> %3868, %3873
  %3875 = mul <8 x i32> %3869, %3874
  %3876 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3875)
  %3877 = icmp eq i64 %3840, %3844
  br i1 %3877, label %3890, label %3878

3878:                                             ; preds = %3831, %3872
  %3879 = phi i64 [ %3834, %3831 ], [ %3845, %3872 ]
  %3880 = phi i32 [ 1, %3831 ], [ %3876, %3872 ]
  br label %3881

3881:                                             ; preds = %3878, %3881
  %3882 = phi i64 [ %3887, %3881 ], [ %3879, %3878 ]
  %3883 = phi i32 [ %3886, %3881 ], [ %3880, %3878 ]
  %3884 = getelementptr inbounds i32, ptr %11, i64 %3882
  %3885 = load i32, ptr %3884, align 4, !tbaa !5
  %3886 = mul nsw i32 %3885, %3883
  %3887 = add nsw i64 %3882, -1
  %3888 = trunc i64 %3882 to i32
  %3889 = icmp sgt i32 %3888, 0
  br i1 %3889, label %3881, label %3890, !llvm.loop !1250

3890:                                             ; preds = %3881, %3872
  %3891 = phi i32 [ %3876, %3872 ], [ %3886, %3881 ]
  %3892 = and i64 %3841, 4294967295
  %3893 = getelementptr inbounds i32, ptr %6, i64 %3892
  %3894 = load i32, ptr %3893, align 4, !tbaa !5
  %3895 = mul nsw i32 %3894, %3891
  %3896 = add nsw i32 %3895, %3835
  %3897 = icmp sgt i64 %3833, 2
  %3898 = add nsw i64 %3834, -1
  %3899 = add i32 %3832, 1
  br i1 %3897, label %3831, label %3900, !llvm.loop !1251

3900:                                             ; preds = %3890, %3827
  %3901 = phi i32 [ %3830, %3827 ], [ %3896, %3890 ]
  %3902 = icmp slt i32 %3901, %5
  br i1 %3902, label %3905, label %3903

3903:                                             ; preds = %3900
  %3904 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3905:                                             ; preds = %3900
  %3906 = sext i32 %3901 to i64
  %3907 = getelementptr inbounds float, ptr %3660, i64 %3906
  %3908 = load float, ptr %3907, align 4, !tbaa !162
  %3909 = fpext float %3908 to double
  %3910 = fcmp fast ogt double %3828, %3909
  br i1 %3910, label %3911, label %3912

3911:                                             ; preds = %3905
  store double %3909, ptr %3662, align 8, !tbaa !18
  br label %3912

3912:                                             ; preds = %3905, %3911
  %3913 = phi double [ %3828, %3905 ], [ %3909, %3911 ]
  %3914 = add nuw nsw i32 %3829, 1
  br i1 %3675, label %3915, label %3965

3915:                                             ; preds = %3912
  %3916 = load i32, ptr %4, align 4, !tbaa !5
  %3917 = load i32, ptr %12, align 4, !tbaa !5
  %3918 = add nsw i32 %3917, -1
  %3919 = icmp slt i32 %3916, %3918
  br i1 %3919, label %3942, label %3920

3920:                                             ; preds = %3915
  %3921 = icmp eq i32 %3916, %3918
  br i1 %3921, label %3922, label %3958

3922:                                             ; preds = %3920
  store i32 0, ptr %4, align 4, !tbaa !5
  %3923 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3923, ptr %6, align 4, !tbaa !5
  br i1 %3680, label %3965, label %3924

3924:                                             ; preds = %3922, %3952
  %3925 = phi i64 [ %3956, %3952 ], [ 1, %3922 ]
  %3926 = getelementptr inbounds i32, ptr %4, i64 %3925
  %3927 = load i32, ptr %3926, align 4, !tbaa !5
  %3928 = getelementptr inbounds i32, ptr %12, i64 %3925
  %3929 = load i32, ptr %3928, align 4, !tbaa !5
  %3930 = add nsw i32 %3929, -1
  %3931 = icmp slt i32 %3927, %3930
  br i1 %3931, label %3932, label %3950

3932:                                             ; preds = %3924
  br i1 %3919, label %3942, label %3933

3933:                                             ; preds = %3932
  %3934 = shl i64 %3925, 32
  %3935 = add i64 %3934, -4294967296
  %3936 = ashr exact i64 %3935, 32
  %3937 = getelementptr inbounds i32, ptr %7, i64 %3936
  %3938 = load i32, ptr %3937, align 4, !tbaa !5
  %3939 = getelementptr inbounds i32, ptr %6, i64 %3925
  %3940 = load i32, ptr %3939, align 4, !tbaa !5
  %3941 = add nsw i32 %3940, %3938
  store i32 %3941, ptr %3939, align 4, !tbaa !5
  br label %3960

3942:                                             ; preds = %3915, %3932
  %3943 = phi i32 [ %3927, %3932 ], [ %3916, %3915 ]
  %3944 = phi ptr [ %3926, %3932 ], [ %4, %3915 ]
  %3945 = phi i64 [ %3925, %3932 ], [ 0, %3915 ]
  %3946 = add nsw i32 %3943, 1
  store i32 %3946, ptr %3944, align 4, !tbaa !5
  %3947 = getelementptr inbounds i32, ptr %7, i64 %3945
  %3948 = load i32, ptr %3947, align 4, !tbaa !5
  %3949 = getelementptr inbounds i32, ptr %6, i64 %3945
  br label %3960

3950:                                             ; preds = %3924
  %3951 = icmp eq i32 %3927, %3930
  br i1 %3951, label %3952, label %3958

3952:                                             ; preds = %3950
  store i32 0, ptr %3926, align 4, !tbaa !5
  %3953 = getelementptr inbounds i32, ptr %8, i64 %3925
  %3954 = load i32, ptr %3953, align 4, !tbaa !5
  %3955 = getelementptr inbounds i32, ptr %6, i64 %3925
  store i32 %3954, ptr %3955, align 4, !tbaa !5
  %3956 = add nuw nsw i64 %3925, 1
  %3957 = icmp eq i64 %3956, %3678
  br i1 %3957, label %3965, label %3924, !llvm.loop !1252

3958:                                             ; preds = %3920, %3950
  %3959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3960:                                             ; preds = %3933, %3942
  %3961 = phi ptr [ %3949, %3942 ], [ %3926, %3933 ]
  %3962 = phi i32 [ %3948, %3942 ], [ 1, %3933 ]
  %3963 = load i32, ptr %3961, align 4, !tbaa !5
  %3964 = add nsw i32 %3963, %3962
  store i32 %3964, ptr %3961, align 4, !tbaa !5
  br label %3965

3965:                                             ; preds = %3952, %3960, %3922, %3912
  %3966 = icmp eq i32 %3914, %5
  br i1 %3966, label %5478, label %3827, !llvm.loop !1253

3967:                                             ; preds = %3666
  %3968 = getelementptr inbounds i32, ptr %3, i64 %19
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = icmp eq i32 %3969, 0
  %3971 = icmp sgt i32 %5, 0
  br i1 %3970, label %3981, label %3972

3972:                                             ; preds = %3967
  br i1 %3971, label %3973, label %5478

3973:                                             ; preds = %3972
  %3974 = icmp sgt i32 %13, 1
  %3975 = icmp sgt i32 %13, 0
  %3976 = add i32 %13, -2
  %3977 = zext i32 %3976 to i64
  %3978 = zext i32 %13 to i64
  %3979 = add nuw i32 %5, 1
  %3980 = icmp eq i32 %13, 1
  br label %4123

3981:                                             ; preds = %3967
  br i1 %3971, label %3982, label %5478

3982:                                             ; preds = %3981
  %3983 = icmp sgt i32 %13, 1
  %3984 = icmp sgt i32 %13, 0
  %3985 = add i32 %13, -2
  %3986 = zext i32 %3985 to i64
  %3987 = zext i32 %13 to i64
  %3988 = add nuw i32 %5, 1
  %3989 = icmp eq i32 %13, 1
  br label %3990

3990:                                             ; preds = %3982, %4121
  %3991 = phi double [ %3664, %3982 ], [ %4072, %4121 ]
  %3992 = phi i32 [ 0, %3982 ], [ %4073, %4121 ]
  %3993 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3983, label %3994, label %4063

3994:                                             ; preds = %3990, %4053
  %3995 = phi i32 [ %4062, %4053 ], [ 0, %3990 ]
  %3996 = phi i64 [ %4004, %4053 ], [ %3987, %3990 ]
  %3997 = phi i64 [ %4061, %4053 ], [ %3986, %3990 ]
  %3998 = phi i32 [ %4059, %4053 ], [ %3993, %3990 ]
  %3999 = sub i32 %3985, %3995
  %4000 = tail call i32 @llvm.smin.i32(i32 %3999, i32 0)
  %4001 = sub i32 %3999, %4000
  %4002 = zext i32 %4001 to i64
  %4003 = add nuw nsw i64 %4002, 1
  %4004 = add nsw i64 %3996, -1
  %4005 = icmp ult i32 %4001, 31
  br i1 %4005, label %4041, label %4006

4006:                                             ; preds = %3994
  %4007 = and i64 %4003, 8589934560
  %4008 = sub i64 %3997, %4007
  br label %4009

4009:                                             ; preds = %4009, %4006
  %4010 = phi i64 [ 0, %4006 ], [ %4033, %4009 ]
  %4011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4006 ], [ %4029, %4009 ]
  %4012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4006 ], [ %4030, %4009 ]
  %4013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4006 ], [ %4031, %4009 ]
  %4014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4006 ], [ %4032, %4009 ]
  %4015 = sub i64 %3997, %4010
  %4016 = getelementptr inbounds i32, ptr %9, i64 %4015
  %4017 = getelementptr inbounds i32, ptr %4016, i64 -7
  %4018 = load <8 x i32>, ptr %4017, align 4, !tbaa !5
  %4019 = shufflevector <8 x i32> %4018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4020 = getelementptr inbounds i32, ptr %4016, i64 -15
  %4021 = load <8 x i32>, ptr %4020, align 4, !tbaa !5
  %4022 = shufflevector <8 x i32> %4021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4023 = getelementptr inbounds i32, ptr %4016, i64 -23
  %4024 = load <8 x i32>, ptr %4023, align 4, !tbaa !5
  %4025 = shufflevector <8 x i32> %4024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4026 = getelementptr inbounds i32, ptr %4016, i64 -31
  %4027 = load <8 x i32>, ptr %4026, align 4, !tbaa !5
  %4028 = shufflevector <8 x i32> %4027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4029 = mul <8 x i32> %4019, %4011
  %4030 = mul <8 x i32> %4022, %4012
  %4031 = mul <8 x i32> %4025, %4013
  %4032 = mul <8 x i32> %4028, %4014
  %4033 = add nuw i64 %4010, 32
  %4034 = icmp eq i64 %4033, %4007
  br i1 %4034, label %4035, label %4009, !llvm.loop !1254

4035:                                             ; preds = %4009
  %4036 = mul <8 x i32> %4030, %4029
  %4037 = mul <8 x i32> %4031, %4036
  %4038 = mul <8 x i32> %4032, %4037
  %4039 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4038)
  %4040 = icmp eq i64 %4003, %4007
  br i1 %4040, label %4053, label %4041

4041:                                             ; preds = %3994, %4035
  %4042 = phi i64 [ %3997, %3994 ], [ %4008, %4035 ]
  %4043 = phi i32 [ 1, %3994 ], [ %4039, %4035 ]
  br label %4044

4044:                                             ; preds = %4041, %4044
  %4045 = phi i64 [ %4050, %4044 ], [ %4042, %4041 ]
  %4046 = phi i32 [ %4049, %4044 ], [ %4043, %4041 ]
  %4047 = getelementptr inbounds i32, ptr %9, i64 %4045
  %4048 = load i32, ptr %4047, align 4, !tbaa !5
  %4049 = mul nsw i32 %4048, %4046
  %4050 = add nsw i64 %4045, -1
  %4051 = trunc i64 %4045 to i32
  %4052 = icmp sgt i32 %4051, 0
  br i1 %4052, label %4044, label %4053, !llvm.loop !1255

4053:                                             ; preds = %4044, %4035
  %4054 = phi i32 [ %4039, %4035 ], [ %4049, %4044 ]
  %4055 = and i64 %4004, 4294967295
  %4056 = getelementptr inbounds i32, ptr %6, i64 %4055
  %4057 = load i32, ptr %4056, align 4, !tbaa !5
  %4058 = mul nsw i32 %4057, %4054
  %4059 = add nsw i32 %4058, %3998
  %4060 = icmp sgt i64 %3996, 2
  %4061 = add nsw i64 %3997, -1
  %4062 = add i32 %3995, 1
  br i1 %4060, label %3994, label %4063, !llvm.loop !1256

4063:                                             ; preds = %4053, %3990
  %4064 = phi i32 [ %3993, %3990 ], [ %4059, %4053 ]
  %4065 = sext i32 %4064 to i64
  %4066 = getelementptr inbounds float, ptr %3660, i64 %4065
  %4067 = load float, ptr %4066, align 4, !tbaa !162
  %4068 = fpext float %4067 to double
  %4069 = fcmp fast ogt double %3991, %4068
  br i1 %4069, label %4070, label %4071

4070:                                             ; preds = %4063
  store double %4068, ptr %3662, align 8, !tbaa !18
  br label %4071

4071:                                             ; preds = %4070, %4063
  %4072 = phi double [ %4068, %4070 ], [ %3991, %4063 ]
  %4073 = add nuw nsw i32 %3992, 1
  br i1 %3984, label %4074, label %4121

4074:                                             ; preds = %4071
  %4075 = load i32, ptr %4, align 4, !tbaa !5
  %4076 = load i32, ptr %12, align 4, !tbaa !5
  %4077 = add nsw i32 %4076, -1
  %4078 = icmp slt i32 %4075, %4077
  br i1 %4078, label %4098, label %4079

4079:                                             ; preds = %4074
  %4080 = icmp eq i32 %4075, %4077
  br i1 %4080, label %4081, label %4114

4081:                                             ; preds = %4079
  store i32 0, ptr %4, align 4, !tbaa !5
  %4082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4082, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4121, label %4083

4083:                                             ; preds = %4081, %4108
  %4084 = phi i64 [ %4112, %4108 ], [ 1, %4081 ]
  %4085 = getelementptr inbounds i32, ptr %4, i64 %4084
  %4086 = load i32, ptr %4085, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %12, i64 %4084
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = add nsw i32 %4088, -1
  %4090 = icmp slt i32 %4086, %4089
  br i1 %4090, label %4091, label %4106

4091:                                             ; preds = %4083
  br i1 %4078, label %4098, label %4092

4092:                                             ; preds = %4091
  %4093 = getelementptr inbounds i32, ptr %7, i64 %4084
  %4094 = load i32, ptr %4093, align 4, !tbaa !5
  %4095 = getelementptr inbounds i32, ptr %6, i64 %4084
  %4096 = load i32, ptr %4095, align 4, !tbaa !5
  %4097 = add nsw i32 %4096, %4094
  store i32 %4097, ptr %4095, align 4, !tbaa !5
  br label %4116

4098:                                             ; preds = %4074, %4091
  %4099 = phi i32 [ %4086, %4091 ], [ %4075, %4074 ]
  %4100 = phi ptr [ %4085, %4091 ], [ %4, %4074 ]
  %4101 = phi i64 [ %4084, %4091 ], [ 0, %4074 ]
  %4102 = add nsw i32 %4099, 1
  store i32 %4102, ptr %4100, align 4, !tbaa !5
  %4103 = getelementptr inbounds i32, ptr %7, i64 %4101
  %4104 = load i32, ptr %4103, align 4, !tbaa !5
  %4105 = getelementptr inbounds i32, ptr %6, i64 %4101
  br label %4116

4106:                                             ; preds = %4083
  %4107 = icmp eq i32 %4086, %4089
  br i1 %4107, label %4108, label %4114

4108:                                             ; preds = %4106
  store i32 0, ptr %4085, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %8, i64 %4084
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = getelementptr inbounds i32, ptr %6, i64 %4084
  store i32 %4110, ptr %4111, align 4, !tbaa !5
  %4112 = add nuw nsw i64 %4084, 1
  %4113 = icmp eq i64 %4112, %3987
  br i1 %4113, label %4121, label %4083, !llvm.loop !1257

4114:                                             ; preds = %4079, %4106
  %4115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4116:                                             ; preds = %4092, %4098
  %4117 = phi ptr [ %4105, %4098 ], [ %4085, %4092 ]
  %4118 = phi i32 [ %4104, %4098 ], [ 1, %4092 ]
  %4119 = load i32, ptr %4117, align 4, !tbaa !5
  %4120 = add nsw i32 %4119, %4118
  store i32 %4120, ptr %4117, align 4, !tbaa !5
  br label %4121

4121:                                             ; preds = %4108, %4116, %4081, %4071
  %4122 = icmp eq i32 %4073, %5
  br i1 %4122, label %5478, label %3990, !llvm.loop !1258

4123:                                             ; preds = %3973, %4261
  %4124 = phi double [ %3664, %3973 ], [ %4209, %4261 ]
  %4125 = phi i32 [ 0, %3973 ], [ %4210, %4261 ]
  %4126 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3974, label %4127, label %4196

4127:                                             ; preds = %4123, %4186
  %4128 = phi i32 [ %4195, %4186 ], [ 0, %4123 ]
  %4129 = phi i64 [ %4137, %4186 ], [ %3978, %4123 ]
  %4130 = phi i64 [ %4194, %4186 ], [ %3977, %4123 ]
  %4131 = phi i32 [ %4192, %4186 ], [ %4126, %4123 ]
  %4132 = sub i32 %3976, %4128
  %4133 = tail call i32 @llvm.smin.i32(i32 %4132, i32 0)
  %4134 = sub i32 %4132, %4133
  %4135 = zext i32 %4134 to i64
  %4136 = add nuw nsw i64 %4135, 1
  %4137 = add nsw i64 %4129, -1
  %4138 = icmp ult i32 %4134, 31
  br i1 %4138, label %4174, label %4139

4139:                                             ; preds = %4127
  %4140 = and i64 %4136, 8589934560
  %4141 = sub i64 %4130, %4140
  br label %4142

4142:                                             ; preds = %4142, %4139
  %4143 = phi i64 [ 0, %4139 ], [ %4166, %4142 ]
  %4144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4162, %4142 ]
  %4145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4163, %4142 ]
  %4146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4164, %4142 ]
  %4147 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4165, %4142 ]
  %4148 = sub i64 %4130, %4143
  %4149 = getelementptr inbounds i32, ptr %11, i64 %4148
  %4150 = getelementptr inbounds i32, ptr %4149, i64 -7
  %4151 = load <8 x i32>, ptr %4150, align 4, !tbaa !5
  %4152 = shufflevector <8 x i32> %4151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4153 = getelementptr inbounds i32, ptr %4149, i64 -15
  %4154 = load <8 x i32>, ptr %4153, align 4, !tbaa !5
  %4155 = shufflevector <8 x i32> %4154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4156 = getelementptr inbounds i32, ptr %4149, i64 -23
  %4157 = load <8 x i32>, ptr %4156, align 4, !tbaa !5
  %4158 = shufflevector <8 x i32> %4157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4159 = getelementptr inbounds i32, ptr %4149, i64 -31
  %4160 = load <8 x i32>, ptr %4159, align 4, !tbaa !5
  %4161 = shufflevector <8 x i32> %4160, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4162 = mul <8 x i32> %4152, %4144
  %4163 = mul <8 x i32> %4155, %4145
  %4164 = mul <8 x i32> %4158, %4146
  %4165 = mul <8 x i32> %4161, %4147
  %4166 = add nuw i64 %4143, 32
  %4167 = icmp eq i64 %4166, %4140
  br i1 %4167, label %4168, label %4142, !llvm.loop !1259

4168:                                             ; preds = %4142
  %4169 = mul <8 x i32> %4163, %4162
  %4170 = mul <8 x i32> %4164, %4169
  %4171 = mul <8 x i32> %4165, %4170
  %4172 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4171)
  %4173 = icmp eq i64 %4136, %4140
  br i1 %4173, label %4186, label %4174

4174:                                             ; preds = %4127, %4168
  %4175 = phi i64 [ %4130, %4127 ], [ %4141, %4168 ]
  %4176 = phi i32 [ 1, %4127 ], [ %4172, %4168 ]
  br label %4177

4177:                                             ; preds = %4174, %4177
  %4178 = phi i64 [ %4183, %4177 ], [ %4175, %4174 ]
  %4179 = phi i32 [ %4182, %4177 ], [ %4176, %4174 ]
  %4180 = getelementptr inbounds i32, ptr %11, i64 %4178
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = mul nsw i32 %4181, %4179
  %4183 = add nsw i64 %4178, -1
  %4184 = trunc i64 %4178 to i32
  %4185 = icmp sgt i32 %4184, 0
  br i1 %4185, label %4177, label %4186, !llvm.loop !1260

4186:                                             ; preds = %4177, %4168
  %4187 = phi i32 [ %4172, %4168 ], [ %4182, %4177 ]
  %4188 = and i64 %4137, 4294967295
  %4189 = getelementptr inbounds i32, ptr %6, i64 %4188
  %4190 = load i32, ptr %4189, align 4, !tbaa !5
  %4191 = mul nsw i32 %4190, %4187
  %4192 = add nsw i32 %4191, %4131
  %4193 = icmp sgt i64 %4129, 2
  %4194 = add nsw i64 %4130, -1
  %4195 = add i32 %4128, 1
  br i1 %4193, label %4127, label %4196, !llvm.loop !1261

4196:                                             ; preds = %4186, %4123
  %4197 = phi i32 [ %4126, %4123 ], [ %4192, %4186 ]
  %4198 = icmp slt i32 %4197, %5
  br i1 %4198, label %4201, label %4199

4199:                                             ; preds = %4196
  %4200 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4201:                                             ; preds = %4196
  %4202 = sext i32 %4197 to i64
  %4203 = getelementptr inbounds float, ptr %3660, i64 %4202
  %4204 = load float, ptr %4203, align 4, !tbaa !162
  %4205 = fpext float %4204 to double
  %4206 = fcmp fast ogt double %4124, %4205
  br i1 %4206, label %4207, label %4208

4207:                                             ; preds = %4201
  store double %4205, ptr %3662, align 8, !tbaa !18
  br label %4208

4208:                                             ; preds = %4207, %4201
  %4209 = phi double [ %4205, %4207 ], [ %4124, %4201 ]
  %4210 = add nuw nsw i32 %4125, 1
  br i1 %3975, label %4211, label %4261

4211:                                             ; preds = %4208
  %4212 = load i32, ptr %4, align 4, !tbaa !5
  %4213 = load i32, ptr %12, align 4, !tbaa !5
  %4214 = add nsw i32 %4213, -1
  %4215 = icmp slt i32 %4212, %4214
  br i1 %4215, label %4238, label %4216

4216:                                             ; preds = %4211
  %4217 = icmp eq i32 %4212, %4214
  br i1 %4217, label %4218, label %4254

4218:                                             ; preds = %4216
  store i32 0, ptr %4, align 4, !tbaa !5
  %4219 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4219, ptr %6, align 4, !tbaa !5
  br i1 %3980, label %4261, label %4220

4220:                                             ; preds = %4218, %4248
  %4221 = phi i64 [ %4252, %4248 ], [ 1, %4218 ]
  %4222 = getelementptr inbounds i32, ptr %4, i64 %4221
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %12, i64 %4221
  %4225 = load i32, ptr %4224, align 4, !tbaa !5
  %4226 = add nsw i32 %4225, -1
  %4227 = icmp slt i32 %4223, %4226
  br i1 %4227, label %4228, label %4246

4228:                                             ; preds = %4220
  br i1 %4215, label %4238, label %4229

4229:                                             ; preds = %4228
  %4230 = shl i64 %4221, 32
  %4231 = add i64 %4230, -4294967296
  %4232 = ashr exact i64 %4231, 32
  %4233 = getelementptr inbounds i32, ptr %7, i64 %4232
  %4234 = load i32, ptr %4233, align 4, !tbaa !5
  %4235 = getelementptr inbounds i32, ptr %6, i64 %4221
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = add nsw i32 %4236, %4234
  store i32 %4237, ptr %4235, align 4, !tbaa !5
  br label %4256

4238:                                             ; preds = %4211, %4228
  %4239 = phi i32 [ %4223, %4228 ], [ %4212, %4211 ]
  %4240 = phi ptr [ %4222, %4228 ], [ %4, %4211 ]
  %4241 = phi i64 [ %4221, %4228 ], [ 0, %4211 ]
  %4242 = add nsw i32 %4239, 1
  store i32 %4242, ptr %4240, align 4, !tbaa !5
  %4243 = getelementptr inbounds i32, ptr %7, i64 %4241
  %4244 = load i32, ptr %4243, align 4, !tbaa !5
  %4245 = getelementptr inbounds i32, ptr %6, i64 %4241
  br label %4256

4246:                                             ; preds = %4220
  %4247 = icmp eq i32 %4223, %4226
  br i1 %4247, label %4248, label %4254

4248:                                             ; preds = %4246
  store i32 0, ptr %4222, align 4, !tbaa !5
  %4249 = getelementptr inbounds i32, ptr %8, i64 %4221
  %4250 = load i32, ptr %4249, align 4, !tbaa !5
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4221
  store i32 %4250, ptr %4251, align 4, !tbaa !5
  %4252 = add nuw nsw i64 %4221, 1
  %4253 = icmp eq i64 %4252, %3978
  br i1 %4253, label %4261, label %4220, !llvm.loop !1262

4254:                                             ; preds = %4216, %4246
  %4255 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4256:                                             ; preds = %4229, %4238
  %4257 = phi ptr [ %4245, %4238 ], [ %4222, %4229 ]
  %4258 = phi i32 [ %4244, %4238 ], [ 1, %4229 ]
  %4259 = load i32, ptr %4257, align 4, !tbaa !5
  %4260 = add nsw i32 %4259, %4258
  store i32 %4260, ptr %4257, align 4, !tbaa !5
  br label %4261

4261:                                             ; preds = %4248, %4256, %4218, %4208
  %4262 = icmp eq i32 %4210, %5
  br i1 %4262, label %5478, label %4123, !llvm.loop !1263

4263:                                             ; preds = %3666
  %4264 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1747, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

4265:                                             ; preds = %18
  %4266 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4267 = load ptr, ptr %4266, align 8, !tbaa !9
  %4268 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4269 = load ptr, ptr %4268, align 8, !tbaa !9
  %4270 = load float, ptr %4267, align 4, !tbaa !162
  store float %4270, ptr %4269, align 4, !tbaa !162
  %4271 = icmp eq i32 %13, 0
  br i1 %4271, label %4272, label %4276

4272:                                             ; preds = %4265
  %4273 = load float, ptr %4267, align 4, !tbaa !162
  %4274 = fcmp fast ogt float %4270, %4273
  br i1 %4274, label %4275, label %5478

4275:                                             ; preds = %4272
  store float %4273, ptr %4269, align 4, !tbaa !162
  br label %5478

4276:                                             ; preds = %4265
  switch i32 %1, label %4869 [
    i32 1, label %4277
    i32 0, label %4575
  ]

4277:                                             ; preds = %4276
  %4278 = getelementptr inbounds i32, ptr %3, i64 %19
  %4279 = load i32, ptr %4278, align 4, !tbaa !5
  %4280 = icmp eq i32 %4279, 0
  %4281 = icmp sgt i32 %5, 0
  br i1 %4280, label %4291, label %4282

4282:                                             ; preds = %4277
  br i1 %4281, label %4283, label %5478

4283:                                             ; preds = %4282
  %4284 = icmp sgt i32 %13, 1
  %4285 = icmp sgt i32 %13, 0
  %4286 = add i32 %13, -2
  %4287 = zext i32 %4286 to i64
  %4288 = zext i32 %13 to i64
  %4289 = add nuw i32 %5, 1
  %4290 = icmp eq i32 %13, 1
  br label %4436

4291:                                             ; preds = %4277
  br i1 %4281, label %4292, label %5478

4292:                                             ; preds = %4291
  %4293 = icmp sgt i32 %13, 1
  %4294 = icmp sgt i32 %13, 0
  %4295 = add i32 %13, -2
  %4296 = zext i32 %4295 to i64
  %4297 = zext i32 %13 to i64
  %4298 = add nuw i32 %5, 1
  %4299 = icmp eq i32 %13, 1
  br label %4300

4300:                                             ; preds = %4292, %4434
  %4301 = phi float [ %4270, %4292 ], [ %4385, %4434 ]
  %4302 = phi i32 [ 0, %4292 ], [ %4386, %4434 ]
  %4303 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4293, label %4304, label %4373

4304:                                             ; preds = %4300, %4363
  %4305 = phi i32 [ %4372, %4363 ], [ 0, %4300 ]
  %4306 = phi i64 [ %4314, %4363 ], [ %4297, %4300 ]
  %4307 = phi i64 [ %4371, %4363 ], [ %4296, %4300 ]
  %4308 = phi i32 [ %4369, %4363 ], [ %4303, %4300 ]
  %4309 = sub i32 %4295, %4305
  %4310 = tail call i32 @llvm.smin.i32(i32 %4309, i32 0)
  %4311 = sub i32 %4309, %4310
  %4312 = zext i32 %4311 to i64
  %4313 = add nuw nsw i64 %4312, 1
  %4314 = add nsw i64 %4306, -1
  %4315 = icmp ult i32 %4311, 31
  br i1 %4315, label %4351, label %4316

4316:                                             ; preds = %4304
  %4317 = and i64 %4313, 8589934560
  %4318 = sub i64 %4307, %4317
  br label %4319

4319:                                             ; preds = %4319, %4316
  %4320 = phi i64 [ 0, %4316 ], [ %4343, %4319 ]
  %4321 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4316 ], [ %4339, %4319 ]
  %4322 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4316 ], [ %4340, %4319 ]
  %4323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4316 ], [ %4341, %4319 ]
  %4324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4316 ], [ %4342, %4319 ]
  %4325 = sub i64 %4307, %4320
  %4326 = getelementptr inbounds i32, ptr %9, i64 %4325
  %4327 = getelementptr inbounds i32, ptr %4326, i64 -7
  %4328 = load <8 x i32>, ptr %4327, align 4, !tbaa !5
  %4329 = shufflevector <8 x i32> %4328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4330 = getelementptr inbounds i32, ptr %4326, i64 -15
  %4331 = load <8 x i32>, ptr %4330, align 4, !tbaa !5
  %4332 = shufflevector <8 x i32> %4331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4333 = getelementptr inbounds i32, ptr %4326, i64 -23
  %4334 = load <8 x i32>, ptr %4333, align 4, !tbaa !5
  %4335 = shufflevector <8 x i32> %4334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4336 = getelementptr inbounds i32, ptr %4326, i64 -31
  %4337 = load <8 x i32>, ptr %4336, align 4, !tbaa !5
  %4338 = shufflevector <8 x i32> %4337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4339 = mul <8 x i32> %4329, %4321
  %4340 = mul <8 x i32> %4332, %4322
  %4341 = mul <8 x i32> %4335, %4323
  %4342 = mul <8 x i32> %4338, %4324
  %4343 = add nuw i64 %4320, 32
  %4344 = icmp eq i64 %4343, %4317
  br i1 %4344, label %4345, label %4319, !llvm.loop !1264

4345:                                             ; preds = %4319
  %4346 = mul <8 x i32> %4340, %4339
  %4347 = mul <8 x i32> %4341, %4346
  %4348 = mul <8 x i32> %4342, %4347
  %4349 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4348)
  %4350 = icmp eq i64 %4313, %4317
  br i1 %4350, label %4363, label %4351

4351:                                             ; preds = %4304, %4345
  %4352 = phi i64 [ %4307, %4304 ], [ %4318, %4345 ]
  %4353 = phi i32 [ 1, %4304 ], [ %4349, %4345 ]
  br label %4354

4354:                                             ; preds = %4351, %4354
  %4355 = phi i64 [ %4360, %4354 ], [ %4352, %4351 ]
  %4356 = phi i32 [ %4359, %4354 ], [ %4353, %4351 ]
  %4357 = getelementptr inbounds i32, ptr %9, i64 %4355
  %4358 = load i32, ptr %4357, align 4, !tbaa !5
  %4359 = mul nsw i32 %4358, %4356
  %4360 = add nsw i64 %4355, -1
  %4361 = trunc i64 %4355 to i32
  %4362 = icmp sgt i32 %4361, 0
  br i1 %4362, label %4354, label %4363, !llvm.loop !1265

4363:                                             ; preds = %4354, %4345
  %4364 = phi i32 [ %4349, %4345 ], [ %4359, %4354 ]
  %4365 = and i64 %4314, 4294967295
  %4366 = getelementptr inbounds i32, ptr %6, i64 %4365
  %4367 = load i32, ptr %4366, align 4, !tbaa !5
  %4368 = mul nsw i32 %4367, %4364
  %4369 = add nsw i32 %4368, %4308
  %4370 = icmp sgt i64 %4306, 2
  %4371 = add nsw i64 %4307, -1
  %4372 = add i32 %4305, 1
  br i1 %4370, label %4304, label %4373, !llvm.loop !1266

4373:                                             ; preds = %4363, %4300
  %4374 = phi i32 [ %4303, %4300 ], [ %4369, %4363 ]
  %4375 = sext i32 %4374 to i64
  %4376 = getelementptr inbounds double, ptr %2, i64 %4375
  %4377 = load double, ptr %4376, align 8, !tbaa !18
  %4378 = getelementptr inbounds float, ptr %4267, i64 %4375
  %4379 = load float, ptr %4378, align 4, !tbaa !162
  %4380 = fcmp fast one double %4377, 0.000000e+00
  %4381 = fcmp fast ogt float %4301, %4379
  %4382 = select i1 %4380, i1 %4381, i1 false
  br i1 %4382, label %4383, label %4384

4383:                                             ; preds = %4373
  store float %4379, ptr %4269, align 4, !tbaa !162
  br label %4384

4384:                                             ; preds = %4383, %4373
  %4385 = phi float [ %4379, %4383 ], [ %4301, %4373 ]
  %4386 = add nuw nsw i32 %4302, 1
  br i1 %4294, label %4387, label %4434

4387:                                             ; preds = %4384
  %4388 = load i32, ptr %4, align 4, !tbaa !5
  %4389 = load i32, ptr %12, align 4, !tbaa !5
  %4390 = add nsw i32 %4389, -1
  %4391 = icmp slt i32 %4388, %4390
  br i1 %4391, label %4411, label %4392

4392:                                             ; preds = %4387
  %4393 = icmp eq i32 %4388, %4390
  br i1 %4393, label %4394, label %4427

4394:                                             ; preds = %4392
  store i32 0, ptr %4, align 4, !tbaa !5
  %4395 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4395, ptr %6, align 4, !tbaa !5
  br i1 %4299, label %4434, label %4396

4396:                                             ; preds = %4394, %4421
  %4397 = phi i64 [ %4425, %4421 ], [ 1, %4394 ]
  %4398 = getelementptr inbounds i32, ptr %4, i64 %4397
  %4399 = load i32, ptr %4398, align 4, !tbaa !5
  %4400 = getelementptr inbounds i32, ptr %12, i64 %4397
  %4401 = load i32, ptr %4400, align 4, !tbaa !5
  %4402 = add nsw i32 %4401, -1
  %4403 = icmp slt i32 %4399, %4402
  br i1 %4403, label %4404, label %4419

4404:                                             ; preds = %4396
  br i1 %4391, label %4411, label %4405

4405:                                             ; preds = %4404
  %4406 = getelementptr inbounds i32, ptr %7, i64 %4397
  %4407 = load i32, ptr %4406, align 4, !tbaa !5
  %4408 = getelementptr inbounds i32, ptr %6, i64 %4397
  %4409 = load i32, ptr %4408, align 4, !tbaa !5
  %4410 = add nsw i32 %4409, %4407
  store i32 %4410, ptr %4408, align 4, !tbaa !5
  br label %4429

4411:                                             ; preds = %4387, %4404
  %4412 = phi i32 [ %4399, %4404 ], [ %4388, %4387 ]
  %4413 = phi ptr [ %4398, %4404 ], [ %4, %4387 ]
  %4414 = phi i64 [ %4397, %4404 ], [ 0, %4387 ]
  %4415 = add nsw i32 %4412, 1
  store i32 %4415, ptr %4413, align 4, !tbaa !5
  %4416 = getelementptr inbounds i32, ptr %7, i64 %4414
  %4417 = load i32, ptr %4416, align 4, !tbaa !5
  %4418 = getelementptr inbounds i32, ptr %6, i64 %4414
  br label %4429

4419:                                             ; preds = %4396
  %4420 = icmp eq i32 %4399, %4402
  br i1 %4420, label %4421, label %4427

4421:                                             ; preds = %4419
  store i32 0, ptr %4398, align 4, !tbaa !5
  %4422 = getelementptr inbounds i32, ptr %8, i64 %4397
  %4423 = load i32, ptr %4422, align 4, !tbaa !5
  %4424 = getelementptr inbounds i32, ptr %6, i64 %4397
  store i32 %4423, ptr %4424, align 4, !tbaa !5
  %4425 = add nuw nsw i64 %4397, 1
  %4426 = icmp eq i64 %4425, %4297
  br i1 %4426, label %4434, label %4396, !llvm.loop !1267

4427:                                             ; preds = %4392, %4419
  %4428 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4429:                                             ; preds = %4405, %4411
  %4430 = phi ptr [ %4418, %4411 ], [ %4398, %4405 ]
  %4431 = phi i32 [ %4417, %4411 ], [ 1, %4405 ]
  %4432 = load i32, ptr %4430, align 4, !tbaa !5
  %4433 = add nsw i32 %4432, %4431
  store i32 %4433, ptr %4430, align 4, !tbaa !5
  br label %4434

4434:                                             ; preds = %4421, %4429, %4394, %4384
  %4435 = icmp eq i32 %4386, %5
  br i1 %4435, label %5478, label %4300, !llvm.loop !1268

4436:                                             ; preds = %4283, %4573
  %4437 = phi float [ %4270, %4283 ], [ %4521, %4573 ]
  %4438 = phi i32 [ 0, %4283 ], [ %4522, %4573 ]
  %4439 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4284, label %4440, label %4509

4440:                                             ; preds = %4436, %4499
  %4441 = phi i32 [ %4508, %4499 ], [ 0, %4436 ]
  %4442 = phi i64 [ %4450, %4499 ], [ %4288, %4436 ]
  %4443 = phi i64 [ %4507, %4499 ], [ %4287, %4436 ]
  %4444 = phi i32 [ %4505, %4499 ], [ %4439, %4436 ]
  %4445 = sub i32 %4286, %4441
  %4446 = tail call i32 @llvm.smin.i32(i32 %4445, i32 0)
  %4447 = sub i32 %4445, %4446
  %4448 = zext i32 %4447 to i64
  %4449 = add nuw nsw i64 %4448, 1
  %4450 = add nsw i64 %4442, -1
  %4451 = icmp ult i32 %4447, 31
  br i1 %4451, label %4487, label %4452

4452:                                             ; preds = %4440
  %4453 = and i64 %4449, 8589934560
  %4454 = sub i64 %4443, %4453
  br label %4455

4455:                                             ; preds = %4455, %4452
  %4456 = phi i64 [ 0, %4452 ], [ %4479, %4455 ]
  %4457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4452 ], [ %4475, %4455 ]
  %4458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4452 ], [ %4476, %4455 ]
  %4459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4452 ], [ %4477, %4455 ]
  %4460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4452 ], [ %4478, %4455 ]
  %4461 = sub i64 %4443, %4456
  %4462 = getelementptr inbounds i32, ptr %11, i64 %4461
  %4463 = getelementptr inbounds i32, ptr %4462, i64 -7
  %4464 = load <8 x i32>, ptr %4463, align 4, !tbaa !5
  %4465 = shufflevector <8 x i32> %4464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4466 = getelementptr inbounds i32, ptr %4462, i64 -15
  %4467 = load <8 x i32>, ptr %4466, align 4, !tbaa !5
  %4468 = shufflevector <8 x i32> %4467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4469 = getelementptr inbounds i32, ptr %4462, i64 -23
  %4470 = load <8 x i32>, ptr %4469, align 4, !tbaa !5
  %4471 = shufflevector <8 x i32> %4470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4472 = getelementptr inbounds i32, ptr %4462, i64 -31
  %4473 = load <8 x i32>, ptr %4472, align 4, !tbaa !5
  %4474 = shufflevector <8 x i32> %4473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4475 = mul <8 x i32> %4465, %4457
  %4476 = mul <8 x i32> %4468, %4458
  %4477 = mul <8 x i32> %4471, %4459
  %4478 = mul <8 x i32> %4474, %4460
  %4479 = add nuw i64 %4456, 32
  %4480 = icmp eq i64 %4479, %4453
  br i1 %4480, label %4481, label %4455, !llvm.loop !1269

4481:                                             ; preds = %4455
  %4482 = mul <8 x i32> %4476, %4475
  %4483 = mul <8 x i32> %4477, %4482
  %4484 = mul <8 x i32> %4478, %4483
  %4485 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4484)
  %4486 = icmp eq i64 %4449, %4453
  br i1 %4486, label %4499, label %4487

4487:                                             ; preds = %4440, %4481
  %4488 = phi i64 [ %4443, %4440 ], [ %4454, %4481 ]
  %4489 = phi i32 [ 1, %4440 ], [ %4485, %4481 ]
  br label %4490

4490:                                             ; preds = %4487, %4490
  %4491 = phi i64 [ %4496, %4490 ], [ %4488, %4487 ]
  %4492 = phi i32 [ %4495, %4490 ], [ %4489, %4487 ]
  %4493 = getelementptr inbounds i32, ptr %11, i64 %4491
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = mul nsw i32 %4494, %4492
  %4496 = add nsw i64 %4491, -1
  %4497 = trunc i64 %4491 to i32
  %4498 = icmp sgt i32 %4497, 0
  br i1 %4498, label %4490, label %4499, !llvm.loop !1270

4499:                                             ; preds = %4490, %4481
  %4500 = phi i32 [ %4485, %4481 ], [ %4495, %4490 ]
  %4501 = and i64 %4450, 4294967295
  %4502 = getelementptr inbounds i32, ptr %6, i64 %4501
  %4503 = load i32, ptr %4502, align 4, !tbaa !5
  %4504 = mul nsw i32 %4503, %4500
  %4505 = add nsw i32 %4504, %4444
  %4506 = icmp sgt i64 %4442, 2
  %4507 = add nsw i64 %4443, -1
  %4508 = add i32 %4441, 1
  br i1 %4506, label %4440, label %4509, !llvm.loop !1271

4509:                                             ; preds = %4499, %4436
  %4510 = phi i32 [ %4439, %4436 ], [ %4505, %4499 ]
  %4511 = icmp slt i32 %4510, %5
  br i1 %4511, label %4514, label %4512

4512:                                             ; preds = %4509
  %4513 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4514:                                             ; preds = %4509
  %4515 = sext i32 %4510 to i64
  %4516 = getelementptr inbounds float, ptr %4267, i64 %4515
  %4517 = load float, ptr %4516, align 4, !tbaa !162
  %4518 = fcmp fast ogt float %4437, %4517
  br i1 %4518, label %4519, label %4520

4519:                                             ; preds = %4514
  store float %4517, ptr %4269, align 4, !tbaa !162
  br label %4520

4520:                                             ; preds = %4514, %4519
  %4521 = phi float [ %4437, %4514 ], [ %4517, %4519 ]
  %4522 = add nuw nsw i32 %4438, 1
  br i1 %4285, label %4523, label %4573

4523:                                             ; preds = %4520
  %4524 = load i32, ptr %4, align 4, !tbaa !5
  %4525 = load i32, ptr %12, align 4, !tbaa !5
  %4526 = add nsw i32 %4525, -1
  %4527 = icmp slt i32 %4524, %4526
  br i1 %4527, label %4550, label %4528

4528:                                             ; preds = %4523
  %4529 = icmp eq i32 %4524, %4526
  br i1 %4529, label %4530, label %4566

4530:                                             ; preds = %4528
  store i32 0, ptr %4, align 4, !tbaa !5
  %4531 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4531, ptr %6, align 4, !tbaa !5
  br i1 %4290, label %4573, label %4532

4532:                                             ; preds = %4530, %4560
  %4533 = phi i64 [ %4564, %4560 ], [ 1, %4530 ]
  %4534 = getelementptr inbounds i32, ptr %4, i64 %4533
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = getelementptr inbounds i32, ptr %12, i64 %4533
  %4537 = load i32, ptr %4536, align 4, !tbaa !5
  %4538 = add nsw i32 %4537, -1
  %4539 = icmp slt i32 %4535, %4538
  br i1 %4539, label %4540, label %4558

4540:                                             ; preds = %4532
  br i1 %4527, label %4550, label %4541

4541:                                             ; preds = %4540
  %4542 = shl i64 %4533, 32
  %4543 = add i64 %4542, -4294967296
  %4544 = ashr exact i64 %4543, 32
  %4545 = getelementptr inbounds i32, ptr %7, i64 %4544
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = getelementptr inbounds i32, ptr %6, i64 %4533
  %4548 = load i32, ptr %4547, align 4, !tbaa !5
  %4549 = add nsw i32 %4548, %4546
  store i32 %4549, ptr %4547, align 4, !tbaa !5
  br label %4568

4550:                                             ; preds = %4523, %4540
  %4551 = phi i32 [ %4535, %4540 ], [ %4524, %4523 ]
  %4552 = phi ptr [ %4534, %4540 ], [ %4, %4523 ]
  %4553 = phi i64 [ %4533, %4540 ], [ 0, %4523 ]
  %4554 = add nsw i32 %4551, 1
  store i32 %4554, ptr %4552, align 4, !tbaa !5
  %4555 = getelementptr inbounds i32, ptr %7, i64 %4553
  %4556 = load i32, ptr %4555, align 4, !tbaa !5
  %4557 = getelementptr inbounds i32, ptr %6, i64 %4553
  br label %4568

4558:                                             ; preds = %4532
  %4559 = icmp eq i32 %4535, %4538
  br i1 %4559, label %4560, label %4566

4560:                                             ; preds = %4558
  store i32 0, ptr %4534, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %8, i64 %4533
  %4562 = load i32, ptr %4561, align 4, !tbaa !5
  %4563 = getelementptr inbounds i32, ptr %6, i64 %4533
  store i32 %4562, ptr %4563, align 4, !tbaa !5
  %4564 = add nuw nsw i64 %4533, 1
  %4565 = icmp eq i64 %4564, %4288
  br i1 %4565, label %4573, label %4532, !llvm.loop !1272

4566:                                             ; preds = %4528, %4558
  %4567 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4568:                                             ; preds = %4541, %4550
  %4569 = phi ptr [ %4557, %4550 ], [ %4534, %4541 ]
  %4570 = phi i32 [ %4556, %4550 ], [ 1, %4541 ]
  %4571 = load i32, ptr %4569, align 4, !tbaa !5
  %4572 = add nsw i32 %4571, %4570
  store i32 %4572, ptr %4569, align 4, !tbaa !5
  br label %4573

4573:                                             ; preds = %4560, %4568, %4530, %4520
  %4574 = icmp eq i32 %4522, %5
  br i1 %4574, label %5478, label %4436, !llvm.loop !1273

4575:                                             ; preds = %4276
  %4576 = getelementptr inbounds i32, ptr %3, i64 %19
  %4577 = load i32, ptr %4576, align 4, !tbaa !5
  %4578 = icmp eq i32 %4577, 0
  %4579 = icmp sgt i32 %5, 0
  br i1 %4578, label %4589, label %4580

4580:                                             ; preds = %4575
  br i1 %4579, label %4581, label %5478

4581:                                             ; preds = %4580
  %4582 = icmp sgt i32 %13, 1
  %4583 = icmp sgt i32 %13, 0
  %4584 = add i32 %13, -2
  %4585 = zext i32 %4584 to i64
  %4586 = zext i32 %13 to i64
  %4587 = add nuw i32 %5, 1
  %4588 = icmp eq i32 %13, 1
  br label %4730

4589:                                             ; preds = %4575
  br i1 %4579, label %4590, label %5478

4590:                                             ; preds = %4589
  %4591 = icmp sgt i32 %13, 1
  %4592 = icmp sgt i32 %13, 0
  %4593 = add i32 %13, -2
  %4594 = zext i32 %4593 to i64
  %4595 = zext i32 %13 to i64
  %4596 = add nuw i32 %5, 1
  %4597 = icmp eq i32 %13, 1
  br label %4598

4598:                                             ; preds = %4590, %4728
  %4599 = phi float [ %4270, %4590 ], [ %4679, %4728 ]
  %4600 = phi i32 [ 0, %4590 ], [ %4680, %4728 ]
  %4601 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4591, label %4602, label %4671

4602:                                             ; preds = %4598, %4661
  %4603 = phi i32 [ %4670, %4661 ], [ 0, %4598 ]
  %4604 = phi i64 [ %4612, %4661 ], [ %4595, %4598 ]
  %4605 = phi i64 [ %4669, %4661 ], [ %4594, %4598 ]
  %4606 = phi i32 [ %4667, %4661 ], [ %4601, %4598 ]
  %4607 = sub i32 %4593, %4603
  %4608 = tail call i32 @llvm.smin.i32(i32 %4607, i32 0)
  %4609 = sub i32 %4607, %4608
  %4610 = zext i32 %4609 to i64
  %4611 = add nuw nsw i64 %4610, 1
  %4612 = add nsw i64 %4604, -1
  %4613 = icmp ult i32 %4609, 31
  br i1 %4613, label %4649, label %4614

4614:                                             ; preds = %4602
  %4615 = and i64 %4611, 8589934560
  %4616 = sub i64 %4605, %4615
  br label %4617

4617:                                             ; preds = %4617, %4614
  %4618 = phi i64 [ 0, %4614 ], [ %4641, %4617 ]
  %4619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4614 ], [ %4637, %4617 ]
  %4620 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4614 ], [ %4638, %4617 ]
  %4621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4614 ], [ %4639, %4617 ]
  %4622 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4614 ], [ %4640, %4617 ]
  %4623 = sub i64 %4605, %4618
  %4624 = getelementptr inbounds i32, ptr %9, i64 %4623
  %4625 = getelementptr inbounds i32, ptr %4624, i64 -7
  %4626 = load <8 x i32>, ptr %4625, align 4, !tbaa !5
  %4627 = shufflevector <8 x i32> %4626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4628 = getelementptr inbounds i32, ptr %4624, i64 -15
  %4629 = load <8 x i32>, ptr %4628, align 4, !tbaa !5
  %4630 = shufflevector <8 x i32> %4629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4631 = getelementptr inbounds i32, ptr %4624, i64 -23
  %4632 = load <8 x i32>, ptr %4631, align 4, !tbaa !5
  %4633 = shufflevector <8 x i32> %4632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4634 = getelementptr inbounds i32, ptr %4624, i64 -31
  %4635 = load <8 x i32>, ptr %4634, align 4, !tbaa !5
  %4636 = shufflevector <8 x i32> %4635, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4637 = mul <8 x i32> %4627, %4619
  %4638 = mul <8 x i32> %4630, %4620
  %4639 = mul <8 x i32> %4633, %4621
  %4640 = mul <8 x i32> %4636, %4622
  %4641 = add nuw i64 %4618, 32
  %4642 = icmp eq i64 %4641, %4615
  br i1 %4642, label %4643, label %4617, !llvm.loop !1274

4643:                                             ; preds = %4617
  %4644 = mul <8 x i32> %4638, %4637
  %4645 = mul <8 x i32> %4639, %4644
  %4646 = mul <8 x i32> %4640, %4645
  %4647 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4646)
  %4648 = icmp eq i64 %4611, %4615
  br i1 %4648, label %4661, label %4649

4649:                                             ; preds = %4602, %4643
  %4650 = phi i64 [ %4605, %4602 ], [ %4616, %4643 ]
  %4651 = phi i32 [ 1, %4602 ], [ %4647, %4643 ]
  br label %4652

4652:                                             ; preds = %4649, %4652
  %4653 = phi i64 [ %4658, %4652 ], [ %4650, %4649 ]
  %4654 = phi i32 [ %4657, %4652 ], [ %4651, %4649 ]
  %4655 = getelementptr inbounds i32, ptr %9, i64 %4653
  %4656 = load i32, ptr %4655, align 4, !tbaa !5
  %4657 = mul nsw i32 %4656, %4654
  %4658 = add nsw i64 %4653, -1
  %4659 = trunc i64 %4653 to i32
  %4660 = icmp sgt i32 %4659, 0
  br i1 %4660, label %4652, label %4661, !llvm.loop !1275

4661:                                             ; preds = %4652, %4643
  %4662 = phi i32 [ %4647, %4643 ], [ %4657, %4652 ]
  %4663 = and i64 %4612, 4294967295
  %4664 = getelementptr inbounds i32, ptr %6, i64 %4663
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = mul nsw i32 %4665, %4662
  %4667 = add nsw i32 %4666, %4606
  %4668 = icmp sgt i64 %4604, 2
  %4669 = add nsw i64 %4605, -1
  %4670 = add i32 %4603, 1
  br i1 %4668, label %4602, label %4671, !llvm.loop !1276

4671:                                             ; preds = %4661, %4598
  %4672 = phi i32 [ %4601, %4598 ], [ %4667, %4661 ]
  %4673 = sext i32 %4672 to i64
  %4674 = getelementptr inbounds float, ptr %4267, i64 %4673
  %4675 = load float, ptr %4674, align 4, !tbaa !162
  %4676 = fcmp fast ogt float %4599, %4675
  br i1 %4676, label %4677, label %4678

4677:                                             ; preds = %4671
  store float %4675, ptr %4269, align 4, !tbaa !162
  br label %4678

4678:                                             ; preds = %4677, %4671
  %4679 = phi float [ %4675, %4677 ], [ %4599, %4671 ]
  %4680 = add nuw nsw i32 %4600, 1
  br i1 %4592, label %4681, label %4728

4681:                                             ; preds = %4678
  %4682 = load i32, ptr %4, align 4, !tbaa !5
  %4683 = load i32, ptr %12, align 4, !tbaa !5
  %4684 = add nsw i32 %4683, -1
  %4685 = icmp slt i32 %4682, %4684
  br i1 %4685, label %4705, label %4686

4686:                                             ; preds = %4681
  %4687 = icmp eq i32 %4682, %4684
  br i1 %4687, label %4688, label %4721

4688:                                             ; preds = %4686
  store i32 0, ptr %4, align 4, !tbaa !5
  %4689 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4689, ptr %6, align 4, !tbaa !5
  br i1 %4597, label %4728, label %4690

4690:                                             ; preds = %4688, %4715
  %4691 = phi i64 [ %4719, %4715 ], [ 1, %4688 ]
  %4692 = getelementptr inbounds i32, ptr %4, i64 %4691
  %4693 = load i32, ptr %4692, align 4, !tbaa !5
  %4694 = getelementptr inbounds i32, ptr %12, i64 %4691
  %4695 = load i32, ptr %4694, align 4, !tbaa !5
  %4696 = add nsw i32 %4695, -1
  %4697 = icmp slt i32 %4693, %4696
  br i1 %4697, label %4698, label %4713

4698:                                             ; preds = %4690
  br i1 %4685, label %4705, label %4699

4699:                                             ; preds = %4698
  %4700 = getelementptr inbounds i32, ptr %7, i64 %4691
  %4701 = load i32, ptr %4700, align 4, !tbaa !5
  %4702 = getelementptr inbounds i32, ptr %6, i64 %4691
  %4703 = load i32, ptr %4702, align 4, !tbaa !5
  %4704 = add nsw i32 %4703, %4701
  store i32 %4704, ptr %4702, align 4, !tbaa !5
  br label %4723

4705:                                             ; preds = %4681, %4698
  %4706 = phi i32 [ %4693, %4698 ], [ %4682, %4681 ]
  %4707 = phi ptr [ %4692, %4698 ], [ %4, %4681 ]
  %4708 = phi i64 [ %4691, %4698 ], [ 0, %4681 ]
  %4709 = add nsw i32 %4706, 1
  store i32 %4709, ptr %4707, align 4, !tbaa !5
  %4710 = getelementptr inbounds i32, ptr %7, i64 %4708
  %4711 = load i32, ptr %4710, align 4, !tbaa !5
  %4712 = getelementptr inbounds i32, ptr %6, i64 %4708
  br label %4723

4713:                                             ; preds = %4690
  %4714 = icmp eq i32 %4693, %4696
  br i1 %4714, label %4715, label %4721

4715:                                             ; preds = %4713
  store i32 0, ptr %4692, align 4, !tbaa !5
  %4716 = getelementptr inbounds i32, ptr %8, i64 %4691
  %4717 = load i32, ptr %4716, align 4, !tbaa !5
  %4718 = getelementptr inbounds i32, ptr %6, i64 %4691
  store i32 %4717, ptr %4718, align 4, !tbaa !5
  %4719 = add nuw nsw i64 %4691, 1
  %4720 = icmp eq i64 %4719, %4595
  br i1 %4720, label %4728, label %4690, !llvm.loop !1277

4721:                                             ; preds = %4686, %4713
  %4722 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4723:                                             ; preds = %4699, %4705
  %4724 = phi ptr [ %4712, %4705 ], [ %4692, %4699 ]
  %4725 = phi i32 [ %4711, %4705 ], [ 1, %4699 ]
  %4726 = load i32, ptr %4724, align 4, !tbaa !5
  %4727 = add nsw i32 %4726, %4725
  store i32 %4727, ptr %4724, align 4, !tbaa !5
  br label %4728

4728:                                             ; preds = %4715, %4723, %4688, %4678
  %4729 = icmp eq i32 %4680, %5
  br i1 %4729, label %5478, label %4598, !llvm.loop !1278

4730:                                             ; preds = %4581, %4867
  %4731 = phi float [ %4270, %4581 ], [ %4815, %4867 ]
  %4732 = phi i32 [ 0, %4581 ], [ %4816, %4867 ]
  %4733 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4582, label %4734, label %4803

4734:                                             ; preds = %4730, %4793
  %4735 = phi i32 [ %4802, %4793 ], [ 0, %4730 ]
  %4736 = phi i64 [ %4744, %4793 ], [ %4586, %4730 ]
  %4737 = phi i64 [ %4801, %4793 ], [ %4585, %4730 ]
  %4738 = phi i32 [ %4799, %4793 ], [ %4733, %4730 ]
  %4739 = sub i32 %4584, %4735
  %4740 = tail call i32 @llvm.smin.i32(i32 %4739, i32 0)
  %4741 = sub i32 %4739, %4740
  %4742 = zext i32 %4741 to i64
  %4743 = add nuw nsw i64 %4742, 1
  %4744 = add nsw i64 %4736, -1
  %4745 = icmp ult i32 %4741, 31
  br i1 %4745, label %4781, label %4746

4746:                                             ; preds = %4734
  %4747 = and i64 %4743, 8589934560
  %4748 = sub i64 %4737, %4747
  br label %4749

4749:                                             ; preds = %4749, %4746
  %4750 = phi i64 [ 0, %4746 ], [ %4773, %4749 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4746 ], [ %4769, %4749 ]
  %4752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4746 ], [ %4770, %4749 ]
  %4753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4746 ], [ %4771, %4749 ]
  %4754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4746 ], [ %4772, %4749 ]
  %4755 = sub i64 %4737, %4750
  %4756 = getelementptr inbounds i32, ptr %11, i64 %4755
  %4757 = getelementptr inbounds i32, ptr %4756, i64 -7
  %4758 = load <8 x i32>, ptr %4757, align 4, !tbaa !5
  %4759 = shufflevector <8 x i32> %4758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4760 = getelementptr inbounds i32, ptr %4756, i64 -15
  %4761 = load <8 x i32>, ptr %4760, align 4, !tbaa !5
  %4762 = shufflevector <8 x i32> %4761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4763 = getelementptr inbounds i32, ptr %4756, i64 -23
  %4764 = load <8 x i32>, ptr %4763, align 4, !tbaa !5
  %4765 = shufflevector <8 x i32> %4764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4766 = getelementptr inbounds i32, ptr %4756, i64 -31
  %4767 = load <8 x i32>, ptr %4766, align 4, !tbaa !5
  %4768 = shufflevector <8 x i32> %4767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4769 = mul <8 x i32> %4759, %4751
  %4770 = mul <8 x i32> %4762, %4752
  %4771 = mul <8 x i32> %4765, %4753
  %4772 = mul <8 x i32> %4768, %4754
  %4773 = add nuw i64 %4750, 32
  %4774 = icmp eq i64 %4773, %4747
  br i1 %4774, label %4775, label %4749, !llvm.loop !1279

4775:                                             ; preds = %4749
  %4776 = mul <8 x i32> %4770, %4769
  %4777 = mul <8 x i32> %4771, %4776
  %4778 = mul <8 x i32> %4772, %4777
  %4779 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4778)
  %4780 = icmp eq i64 %4743, %4747
  br i1 %4780, label %4793, label %4781

4781:                                             ; preds = %4734, %4775
  %4782 = phi i64 [ %4737, %4734 ], [ %4748, %4775 ]
  %4783 = phi i32 [ 1, %4734 ], [ %4779, %4775 ]
  br label %4784

4784:                                             ; preds = %4781, %4784
  %4785 = phi i64 [ %4790, %4784 ], [ %4782, %4781 ]
  %4786 = phi i32 [ %4789, %4784 ], [ %4783, %4781 ]
  %4787 = getelementptr inbounds i32, ptr %11, i64 %4785
  %4788 = load i32, ptr %4787, align 4, !tbaa !5
  %4789 = mul nsw i32 %4788, %4786
  %4790 = add nsw i64 %4785, -1
  %4791 = trunc i64 %4785 to i32
  %4792 = icmp sgt i32 %4791, 0
  br i1 %4792, label %4784, label %4793, !llvm.loop !1280

4793:                                             ; preds = %4784, %4775
  %4794 = phi i32 [ %4779, %4775 ], [ %4789, %4784 ]
  %4795 = and i64 %4744, 4294967295
  %4796 = getelementptr inbounds i32, ptr %6, i64 %4795
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = mul nsw i32 %4797, %4794
  %4799 = add nsw i32 %4798, %4738
  %4800 = icmp sgt i64 %4736, 2
  %4801 = add nsw i64 %4737, -1
  %4802 = add i32 %4735, 1
  br i1 %4800, label %4734, label %4803, !llvm.loop !1281

4803:                                             ; preds = %4793, %4730
  %4804 = phi i32 [ %4733, %4730 ], [ %4799, %4793 ]
  %4805 = icmp slt i32 %4804, %5
  br i1 %4805, label %4808, label %4806

4806:                                             ; preds = %4803
  %4807 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4808:                                             ; preds = %4803
  %4809 = sext i32 %4804 to i64
  %4810 = getelementptr inbounds float, ptr %4267, i64 %4809
  %4811 = load float, ptr %4810, align 4, !tbaa !162
  %4812 = fcmp fast ogt float %4731, %4811
  br i1 %4812, label %4813, label %4814

4813:                                             ; preds = %4808
  store float %4811, ptr %4269, align 4, !tbaa !162
  br label %4814

4814:                                             ; preds = %4813, %4808
  %4815 = phi float [ %4811, %4813 ], [ %4731, %4808 ]
  %4816 = add nuw nsw i32 %4732, 1
  br i1 %4583, label %4817, label %4867

4817:                                             ; preds = %4814
  %4818 = load i32, ptr %4, align 4, !tbaa !5
  %4819 = load i32, ptr %12, align 4, !tbaa !5
  %4820 = add nsw i32 %4819, -1
  %4821 = icmp slt i32 %4818, %4820
  br i1 %4821, label %4844, label %4822

4822:                                             ; preds = %4817
  %4823 = icmp eq i32 %4818, %4820
  br i1 %4823, label %4824, label %4860

4824:                                             ; preds = %4822
  store i32 0, ptr %4, align 4, !tbaa !5
  %4825 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4825, ptr %6, align 4, !tbaa !5
  br i1 %4588, label %4867, label %4826

4826:                                             ; preds = %4824, %4854
  %4827 = phi i64 [ %4858, %4854 ], [ 1, %4824 ]
  %4828 = getelementptr inbounds i32, ptr %4, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = getelementptr inbounds i32, ptr %12, i64 %4827
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, -1
  %4833 = icmp slt i32 %4829, %4832
  br i1 %4833, label %4834, label %4852

4834:                                             ; preds = %4826
  br i1 %4821, label %4844, label %4835

4835:                                             ; preds = %4834
  %4836 = shl i64 %4827, 32
  %4837 = add i64 %4836, -4294967296
  %4838 = ashr exact i64 %4837, 32
  %4839 = getelementptr inbounds i32, ptr %7, i64 %4838
  %4840 = load i32, ptr %4839, align 4, !tbaa !5
  %4841 = getelementptr inbounds i32, ptr %6, i64 %4827
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = add nsw i32 %4842, %4840
  store i32 %4843, ptr %4841, align 4, !tbaa !5
  br label %4862

4844:                                             ; preds = %4817, %4834
  %4845 = phi i32 [ %4829, %4834 ], [ %4818, %4817 ]
  %4846 = phi ptr [ %4828, %4834 ], [ %4, %4817 ]
  %4847 = phi i64 [ %4827, %4834 ], [ 0, %4817 ]
  %4848 = add nsw i32 %4845, 1
  store i32 %4848, ptr %4846, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %7, i64 %4847
  %4850 = load i32, ptr %4849, align 4, !tbaa !5
  %4851 = getelementptr inbounds i32, ptr %6, i64 %4847
  br label %4862

4852:                                             ; preds = %4826
  %4853 = icmp eq i32 %4829, %4832
  br i1 %4853, label %4854, label %4860

4854:                                             ; preds = %4852
  store i32 0, ptr %4828, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %8, i64 %4827
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = getelementptr inbounds i32, ptr %6, i64 %4827
  store i32 %4856, ptr %4857, align 4, !tbaa !5
  %4858 = add nuw nsw i64 %4827, 1
  %4859 = icmp eq i64 %4858, %4586
  br i1 %4859, label %4867, label %4826, !llvm.loop !1282

4860:                                             ; preds = %4822, %4852
  %4861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4862:                                             ; preds = %4835, %4844
  %4863 = phi ptr [ %4851, %4844 ], [ %4828, %4835 ]
  %4864 = phi i32 [ %4850, %4844 ], [ 1, %4835 ]
  %4865 = load i32, ptr %4863, align 4, !tbaa !5
  %4866 = add nsw i32 %4865, %4864
  store i32 %4866, ptr %4863, align 4, !tbaa !5
  br label %4867

4867:                                             ; preds = %4854, %4862, %4824, %4814
  %4868 = icmp eq i32 %4816, %5
  br i1 %4868, label %5478, label %4730, !llvm.loop !1283

4869:                                             ; preds = %4276
  %4870 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1751, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

4871:                                             ; preds = %18
  %4872 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4873 = load ptr, ptr %4872, align 8, !tbaa !9
  %4874 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4875 = load ptr, ptr %4874, align 8, !tbaa !9
  %4876 = load float, ptr %4873, align 4, !tbaa !162
  %4877 = fpext float %4876 to double
  store double %4877, ptr %4875, align 8, !tbaa !18
  %4878 = icmp eq i32 %13, 0
  br i1 %4878, label %5478, label %4879

4879:                                             ; preds = %4871
  switch i32 %1, label %5476 [
    i32 1, label %4880
    i32 0, label %5180
  ]

4880:                                             ; preds = %4879
  %4881 = getelementptr inbounds i32, ptr %3, i64 %19
  %4882 = load i32, ptr %4881, align 4, !tbaa !5
  %4883 = icmp eq i32 %4882, 0
  %4884 = icmp sgt i32 %5, 0
  br i1 %4883, label %4894, label %4885

4885:                                             ; preds = %4880
  br i1 %4884, label %4886, label %5478

4886:                                             ; preds = %4885
  %4887 = icmp sgt i32 %13, 1
  %4888 = icmp sgt i32 %13, 0
  %4889 = add i32 %13, -2
  %4890 = zext i32 %4889 to i64
  %4891 = zext i32 %13 to i64
  %4892 = add nuw i32 %5, 1
  %4893 = icmp eq i32 %13, 1
  br label %5040

4894:                                             ; preds = %4880
  br i1 %4884, label %4895, label %5478

4895:                                             ; preds = %4894
  %4896 = icmp sgt i32 %13, 1
  %4897 = icmp sgt i32 %13, 0
  %4898 = add i32 %13, -2
  %4899 = zext i32 %4898 to i64
  %4900 = zext i32 %13 to i64
  %4901 = add nuw i32 %5, 1
  %4902 = icmp eq i32 %13, 1
  br label %4903

4903:                                             ; preds = %4895, %5038
  %4904 = phi double [ %4877, %4895 ], [ %4989, %5038 ]
  %4905 = phi i32 [ 0, %4895 ], [ %4990, %5038 ]
  %4906 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4896, label %4907, label %4976

4907:                                             ; preds = %4903, %4966
  %4908 = phi i32 [ %4975, %4966 ], [ 0, %4903 ]
  %4909 = phi i64 [ %4917, %4966 ], [ %4900, %4903 ]
  %4910 = phi i64 [ %4974, %4966 ], [ %4899, %4903 ]
  %4911 = phi i32 [ %4972, %4966 ], [ %4906, %4903 ]
  %4912 = sub i32 %4898, %4908
  %4913 = tail call i32 @llvm.smin.i32(i32 %4912, i32 0)
  %4914 = sub i32 %4912, %4913
  %4915 = zext i32 %4914 to i64
  %4916 = add nuw nsw i64 %4915, 1
  %4917 = add nsw i64 %4909, -1
  %4918 = icmp ult i32 %4914, 31
  br i1 %4918, label %4954, label %4919

4919:                                             ; preds = %4907
  %4920 = and i64 %4916, 8589934560
  %4921 = sub i64 %4910, %4920
  br label %4922

4922:                                             ; preds = %4922, %4919
  %4923 = phi i64 [ 0, %4919 ], [ %4946, %4922 ]
  %4924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4919 ], [ %4942, %4922 ]
  %4925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4919 ], [ %4943, %4922 ]
  %4926 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4919 ], [ %4944, %4922 ]
  %4927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4919 ], [ %4945, %4922 ]
  %4928 = sub i64 %4910, %4923
  %4929 = getelementptr inbounds i32, ptr %9, i64 %4928
  %4930 = getelementptr inbounds i32, ptr %4929, i64 -7
  %4931 = load <8 x i32>, ptr %4930, align 4, !tbaa !5
  %4932 = shufflevector <8 x i32> %4931, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4933 = getelementptr inbounds i32, ptr %4929, i64 -15
  %4934 = load <8 x i32>, ptr %4933, align 4, !tbaa !5
  %4935 = shufflevector <8 x i32> %4934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4936 = getelementptr inbounds i32, ptr %4929, i64 -23
  %4937 = load <8 x i32>, ptr %4936, align 4, !tbaa !5
  %4938 = shufflevector <8 x i32> %4937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4939 = getelementptr inbounds i32, ptr %4929, i64 -31
  %4940 = load <8 x i32>, ptr %4939, align 4, !tbaa !5
  %4941 = shufflevector <8 x i32> %4940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4942 = mul <8 x i32> %4932, %4924
  %4943 = mul <8 x i32> %4935, %4925
  %4944 = mul <8 x i32> %4938, %4926
  %4945 = mul <8 x i32> %4941, %4927
  %4946 = add nuw i64 %4923, 32
  %4947 = icmp eq i64 %4946, %4920
  br i1 %4947, label %4948, label %4922, !llvm.loop !1284

4948:                                             ; preds = %4922
  %4949 = mul <8 x i32> %4943, %4942
  %4950 = mul <8 x i32> %4944, %4949
  %4951 = mul <8 x i32> %4945, %4950
  %4952 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4951)
  %4953 = icmp eq i64 %4916, %4920
  br i1 %4953, label %4966, label %4954

4954:                                             ; preds = %4907, %4948
  %4955 = phi i64 [ %4910, %4907 ], [ %4921, %4948 ]
  %4956 = phi i32 [ 1, %4907 ], [ %4952, %4948 ]
  br label %4957

4957:                                             ; preds = %4954, %4957
  %4958 = phi i64 [ %4963, %4957 ], [ %4955, %4954 ]
  %4959 = phi i32 [ %4962, %4957 ], [ %4956, %4954 ]
  %4960 = getelementptr inbounds i32, ptr %9, i64 %4958
  %4961 = load i32, ptr %4960, align 4, !tbaa !5
  %4962 = mul nsw i32 %4961, %4959
  %4963 = add nsw i64 %4958, -1
  %4964 = trunc i64 %4958 to i32
  %4965 = icmp sgt i32 %4964, 0
  br i1 %4965, label %4957, label %4966, !llvm.loop !1285

4966:                                             ; preds = %4957, %4948
  %4967 = phi i32 [ %4952, %4948 ], [ %4962, %4957 ]
  %4968 = and i64 %4917, 4294967295
  %4969 = getelementptr inbounds i32, ptr %6, i64 %4968
  %4970 = load i32, ptr %4969, align 4, !tbaa !5
  %4971 = mul nsw i32 %4970, %4967
  %4972 = add nsw i32 %4971, %4911
  %4973 = icmp sgt i64 %4909, 2
  %4974 = add nsw i64 %4910, -1
  %4975 = add i32 %4908, 1
  br i1 %4973, label %4907, label %4976, !llvm.loop !1286

4976:                                             ; preds = %4966, %4903
  %4977 = phi i32 [ %4906, %4903 ], [ %4972, %4966 ]
  %4978 = sext i32 %4977 to i64
  %4979 = getelementptr inbounds double, ptr %2, i64 %4978
  %4980 = load double, ptr %4979, align 8, !tbaa !18
  %4981 = getelementptr inbounds float, ptr %4873, i64 %4978
  %4982 = load float, ptr %4981, align 4, !tbaa !162
  %4983 = fpext float %4982 to double
  %4984 = fcmp fast one double %4980, 0.000000e+00
  %4985 = fcmp fast ogt double %4904, %4983
  %4986 = select i1 %4984, i1 %4985, i1 false
  br i1 %4986, label %4987, label %4988

4987:                                             ; preds = %4976
  store double %4983, ptr %4875, align 8, !tbaa !18
  br label %4988

4988:                                             ; preds = %4987, %4976
  %4989 = phi double [ %4983, %4987 ], [ %4904, %4976 ]
  %4990 = add nuw nsw i32 %4905, 1
  br i1 %4897, label %4991, label %5038

4991:                                             ; preds = %4988
  %4992 = load i32, ptr %4, align 4, !tbaa !5
  %4993 = load i32, ptr %12, align 4, !tbaa !5
  %4994 = add nsw i32 %4993, -1
  %4995 = icmp slt i32 %4992, %4994
  br i1 %4995, label %5015, label %4996

4996:                                             ; preds = %4991
  %4997 = icmp eq i32 %4992, %4994
  br i1 %4997, label %4998, label %5031

4998:                                             ; preds = %4996
  store i32 0, ptr %4, align 4, !tbaa !5
  %4999 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4999, ptr %6, align 4, !tbaa !5
  br i1 %4902, label %5038, label %5000

5000:                                             ; preds = %4998, %5025
  %5001 = phi i64 [ %5029, %5025 ], [ 1, %4998 ]
  %5002 = getelementptr inbounds i32, ptr %4, i64 %5001
  %5003 = load i32, ptr %5002, align 4, !tbaa !5
  %5004 = getelementptr inbounds i32, ptr %12, i64 %5001
  %5005 = load i32, ptr %5004, align 4, !tbaa !5
  %5006 = add nsw i32 %5005, -1
  %5007 = icmp slt i32 %5003, %5006
  br i1 %5007, label %5008, label %5023

5008:                                             ; preds = %5000
  br i1 %4995, label %5015, label %5009

5009:                                             ; preds = %5008
  %5010 = getelementptr inbounds i32, ptr %7, i64 %5001
  %5011 = load i32, ptr %5010, align 4, !tbaa !5
  %5012 = getelementptr inbounds i32, ptr %6, i64 %5001
  %5013 = load i32, ptr %5012, align 4, !tbaa !5
  %5014 = add nsw i32 %5013, %5011
  store i32 %5014, ptr %5012, align 4, !tbaa !5
  br label %5033

5015:                                             ; preds = %4991, %5008
  %5016 = phi i32 [ %5003, %5008 ], [ %4992, %4991 ]
  %5017 = phi ptr [ %5002, %5008 ], [ %4, %4991 ]
  %5018 = phi i64 [ %5001, %5008 ], [ 0, %4991 ]
  %5019 = add nsw i32 %5016, 1
  store i32 %5019, ptr %5017, align 4, !tbaa !5
  %5020 = getelementptr inbounds i32, ptr %7, i64 %5018
  %5021 = load i32, ptr %5020, align 4, !tbaa !5
  %5022 = getelementptr inbounds i32, ptr %6, i64 %5018
  br label %5033

5023:                                             ; preds = %5000
  %5024 = icmp eq i32 %5003, %5006
  br i1 %5024, label %5025, label %5031

5025:                                             ; preds = %5023
  store i32 0, ptr %5002, align 4, !tbaa !5
  %5026 = getelementptr inbounds i32, ptr %8, i64 %5001
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %6, i64 %5001
  store i32 %5027, ptr %5028, align 4, !tbaa !5
  %5029 = add nuw nsw i64 %5001, 1
  %5030 = icmp eq i64 %5029, %4900
  br i1 %5030, label %5038, label %5000, !llvm.loop !1287

5031:                                             ; preds = %4996, %5023
  %5032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5033:                                             ; preds = %5009, %5015
  %5034 = phi ptr [ %5022, %5015 ], [ %5002, %5009 ]
  %5035 = phi i32 [ %5021, %5015 ], [ 1, %5009 ]
  %5036 = load i32, ptr %5034, align 4, !tbaa !5
  %5037 = add nsw i32 %5036, %5035
  store i32 %5037, ptr %5034, align 4, !tbaa !5
  br label %5038

5038:                                             ; preds = %5025, %5033, %4998, %4988
  %5039 = icmp eq i32 %4990, %5
  br i1 %5039, label %5478, label %4903, !llvm.loop !1288

5040:                                             ; preds = %4886, %5178
  %5041 = phi double [ %4877, %4886 ], [ %5126, %5178 ]
  %5042 = phi i32 [ 0, %4886 ], [ %5127, %5178 ]
  %5043 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4887, label %5044, label %5113

5044:                                             ; preds = %5040, %5103
  %5045 = phi i32 [ %5112, %5103 ], [ 0, %5040 ]
  %5046 = phi i64 [ %5054, %5103 ], [ %4891, %5040 ]
  %5047 = phi i64 [ %5111, %5103 ], [ %4890, %5040 ]
  %5048 = phi i32 [ %5109, %5103 ], [ %5043, %5040 ]
  %5049 = sub i32 %4889, %5045
  %5050 = tail call i32 @llvm.smin.i32(i32 %5049, i32 0)
  %5051 = sub i32 %5049, %5050
  %5052 = zext i32 %5051 to i64
  %5053 = add nuw nsw i64 %5052, 1
  %5054 = add nsw i64 %5046, -1
  %5055 = icmp ult i32 %5051, 31
  br i1 %5055, label %5091, label %5056

5056:                                             ; preds = %5044
  %5057 = and i64 %5053, 8589934560
  %5058 = sub i64 %5047, %5057
  br label %5059

5059:                                             ; preds = %5059, %5056
  %5060 = phi i64 [ 0, %5056 ], [ %5083, %5059 ]
  %5061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5056 ], [ %5079, %5059 ]
  %5062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5056 ], [ %5080, %5059 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5056 ], [ %5081, %5059 ]
  %5064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5056 ], [ %5082, %5059 ]
  %5065 = sub i64 %5047, %5060
  %5066 = getelementptr inbounds i32, ptr %11, i64 %5065
  %5067 = getelementptr inbounds i32, ptr %5066, i64 -7
  %5068 = load <8 x i32>, ptr %5067, align 4, !tbaa !5
  %5069 = shufflevector <8 x i32> %5068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5070 = getelementptr inbounds i32, ptr %5066, i64 -15
  %5071 = load <8 x i32>, ptr %5070, align 4, !tbaa !5
  %5072 = shufflevector <8 x i32> %5071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5073 = getelementptr inbounds i32, ptr %5066, i64 -23
  %5074 = load <8 x i32>, ptr %5073, align 4, !tbaa !5
  %5075 = shufflevector <8 x i32> %5074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5076 = getelementptr inbounds i32, ptr %5066, i64 -31
  %5077 = load <8 x i32>, ptr %5076, align 4, !tbaa !5
  %5078 = shufflevector <8 x i32> %5077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5079 = mul <8 x i32> %5069, %5061
  %5080 = mul <8 x i32> %5072, %5062
  %5081 = mul <8 x i32> %5075, %5063
  %5082 = mul <8 x i32> %5078, %5064
  %5083 = add nuw i64 %5060, 32
  %5084 = icmp eq i64 %5083, %5057
  br i1 %5084, label %5085, label %5059, !llvm.loop !1289

5085:                                             ; preds = %5059
  %5086 = mul <8 x i32> %5080, %5079
  %5087 = mul <8 x i32> %5081, %5086
  %5088 = mul <8 x i32> %5082, %5087
  %5089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5088)
  %5090 = icmp eq i64 %5053, %5057
  br i1 %5090, label %5103, label %5091

5091:                                             ; preds = %5044, %5085
  %5092 = phi i64 [ %5047, %5044 ], [ %5058, %5085 ]
  %5093 = phi i32 [ 1, %5044 ], [ %5089, %5085 ]
  br label %5094

5094:                                             ; preds = %5091, %5094
  %5095 = phi i64 [ %5100, %5094 ], [ %5092, %5091 ]
  %5096 = phi i32 [ %5099, %5094 ], [ %5093, %5091 ]
  %5097 = getelementptr inbounds i32, ptr %11, i64 %5095
  %5098 = load i32, ptr %5097, align 4, !tbaa !5
  %5099 = mul nsw i32 %5098, %5096
  %5100 = add nsw i64 %5095, -1
  %5101 = trunc i64 %5095 to i32
  %5102 = icmp sgt i32 %5101, 0
  br i1 %5102, label %5094, label %5103, !llvm.loop !1290

5103:                                             ; preds = %5094, %5085
  %5104 = phi i32 [ %5089, %5085 ], [ %5099, %5094 ]
  %5105 = and i64 %5054, 4294967295
  %5106 = getelementptr inbounds i32, ptr %6, i64 %5105
  %5107 = load i32, ptr %5106, align 4, !tbaa !5
  %5108 = mul nsw i32 %5107, %5104
  %5109 = add nsw i32 %5108, %5048
  %5110 = icmp sgt i64 %5046, 2
  %5111 = add nsw i64 %5047, -1
  %5112 = add i32 %5045, 1
  br i1 %5110, label %5044, label %5113, !llvm.loop !1291

5113:                                             ; preds = %5103, %5040
  %5114 = phi i32 [ %5043, %5040 ], [ %5109, %5103 ]
  %5115 = icmp slt i32 %5114, %5
  br i1 %5115, label %5118, label %5116

5116:                                             ; preds = %5113
  %5117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

5118:                                             ; preds = %5113
  %5119 = sext i32 %5114 to i64
  %5120 = getelementptr inbounds float, ptr %4873, i64 %5119
  %5121 = load float, ptr %5120, align 4, !tbaa !162
  %5122 = fpext float %5121 to double
  %5123 = fcmp fast ogt double %5041, %5122
  br i1 %5123, label %5124, label %5125

5124:                                             ; preds = %5118
  store double %5122, ptr %4875, align 8, !tbaa !18
  br label %5125

5125:                                             ; preds = %5118, %5124
  %5126 = phi double [ %5041, %5118 ], [ %5122, %5124 ]
  %5127 = add nuw nsw i32 %5042, 1
  br i1 %4888, label %5128, label %5178

5128:                                             ; preds = %5125
  %5129 = load i32, ptr %4, align 4, !tbaa !5
  %5130 = load i32, ptr %12, align 4, !tbaa !5
  %5131 = add nsw i32 %5130, -1
  %5132 = icmp slt i32 %5129, %5131
  br i1 %5132, label %5155, label %5133

5133:                                             ; preds = %5128
  %5134 = icmp eq i32 %5129, %5131
  br i1 %5134, label %5135, label %5171

5135:                                             ; preds = %5133
  store i32 0, ptr %4, align 4, !tbaa !5
  %5136 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5136, ptr %6, align 4, !tbaa !5
  br i1 %4893, label %5178, label %5137

5137:                                             ; preds = %5135, %5165
  %5138 = phi i64 [ %5169, %5165 ], [ 1, %5135 ]
  %5139 = getelementptr inbounds i32, ptr %4, i64 %5138
  %5140 = load i32, ptr %5139, align 4, !tbaa !5
  %5141 = getelementptr inbounds i32, ptr %12, i64 %5138
  %5142 = load i32, ptr %5141, align 4, !tbaa !5
  %5143 = add nsw i32 %5142, -1
  %5144 = icmp slt i32 %5140, %5143
  br i1 %5144, label %5145, label %5163

5145:                                             ; preds = %5137
  br i1 %5132, label %5155, label %5146

5146:                                             ; preds = %5145
  %5147 = shl i64 %5138, 32
  %5148 = add i64 %5147, -4294967296
  %5149 = ashr exact i64 %5148, 32
  %5150 = getelementptr inbounds i32, ptr %7, i64 %5149
  %5151 = load i32, ptr %5150, align 4, !tbaa !5
  %5152 = getelementptr inbounds i32, ptr %6, i64 %5138
  %5153 = load i32, ptr %5152, align 4, !tbaa !5
  %5154 = add nsw i32 %5153, %5151
  store i32 %5154, ptr %5152, align 4, !tbaa !5
  br label %5173

5155:                                             ; preds = %5128, %5145
  %5156 = phi i32 [ %5140, %5145 ], [ %5129, %5128 ]
  %5157 = phi ptr [ %5139, %5145 ], [ %4, %5128 ]
  %5158 = phi i64 [ %5138, %5145 ], [ 0, %5128 ]
  %5159 = add nsw i32 %5156, 1
  store i32 %5159, ptr %5157, align 4, !tbaa !5
  %5160 = getelementptr inbounds i32, ptr %7, i64 %5158
  %5161 = load i32, ptr %5160, align 4, !tbaa !5
  %5162 = getelementptr inbounds i32, ptr %6, i64 %5158
  br label %5173

5163:                                             ; preds = %5137
  %5164 = icmp eq i32 %5140, %5143
  br i1 %5164, label %5165, label %5171

5165:                                             ; preds = %5163
  store i32 0, ptr %5139, align 4, !tbaa !5
  %5166 = getelementptr inbounds i32, ptr %8, i64 %5138
  %5167 = load i32, ptr %5166, align 4, !tbaa !5
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5138
  store i32 %5167, ptr %5168, align 4, !tbaa !5
  %5169 = add nuw nsw i64 %5138, 1
  %5170 = icmp eq i64 %5169, %4891
  br i1 %5170, label %5178, label %5137, !llvm.loop !1292

5171:                                             ; preds = %5133, %5163
  %5172 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5173:                                             ; preds = %5146, %5155
  %5174 = phi ptr [ %5162, %5155 ], [ %5139, %5146 ]
  %5175 = phi i32 [ %5161, %5155 ], [ 1, %5146 ]
  %5176 = load i32, ptr %5174, align 4, !tbaa !5
  %5177 = add nsw i32 %5176, %5175
  store i32 %5177, ptr %5174, align 4, !tbaa !5
  br label %5178

5178:                                             ; preds = %5165, %5173, %5135, %5125
  %5179 = icmp eq i32 %5127, %5
  br i1 %5179, label %5478, label %5040, !llvm.loop !1293

5180:                                             ; preds = %4879
  %5181 = getelementptr inbounds i32, ptr %3, i64 %19
  %5182 = load i32, ptr %5181, align 4, !tbaa !5
  %5183 = icmp eq i32 %5182, 0
  %5184 = icmp sgt i32 %5, 0
  br i1 %5183, label %5194, label %5185

5185:                                             ; preds = %5180
  br i1 %5184, label %5186, label %5478

5186:                                             ; preds = %5185
  %5187 = icmp sgt i32 %13, 1
  %5188 = icmp sgt i32 %13, 0
  %5189 = add i32 %13, -2
  %5190 = zext i32 %5189 to i64
  %5191 = zext i32 %13 to i64
  %5192 = add nuw i32 %5, 1
  %5193 = icmp eq i32 %13, 1
  br label %5336

5194:                                             ; preds = %5180
  br i1 %5184, label %5195, label %5478

5195:                                             ; preds = %5194
  %5196 = icmp sgt i32 %13, 1
  %5197 = icmp sgt i32 %13, 0
  %5198 = add i32 %13, -2
  %5199 = zext i32 %5198 to i64
  %5200 = zext i32 %13 to i64
  %5201 = add nuw i32 %5, 1
  %5202 = icmp eq i32 %13, 1
  br label %5203

5203:                                             ; preds = %5195, %5334
  %5204 = phi double [ %4877, %5195 ], [ %5285, %5334 ]
  %5205 = phi i32 [ 0, %5195 ], [ %5286, %5334 ]
  %5206 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5196, label %5207, label %5276

5207:                                             ; preds = %5203, %5266
  %5208 = phi i32 [ %5275, %5266 ], [ 0, %5203 ]
  %5209 = phi i64 [ %5217, %5266 ], [ %5200, %5203 ]
  %5210 = phi i64 [ %5274, %5266 ], [ %5199, %5203 ]
  %5211 = phi i32 [ %5272, %5266 ], [ %5206, %5203 ]
  %5212 = sub i32 %5198, %5208
  %5213 = tail call i32 @llvm.smin.i32(i32 %5212, i32 0)
  %5214 = sub i32 %5212, %5213
  %5215 = zext i32 %5214 to i64
  %5216 = add nuw nsw i64 %5215, 1
  %5217 = add nsw i64 %5209, -1
  %5218 = icmp ult i32 %5214, 31
  br i1 %5218, label %5254, label %5219

5219:                                             ; preds = %5207
  %5220 = and i64 %5216, 8589934560
  %5221 = sub i64 %5210, %5220
  br label %5222

5222:                                             ; preds = %5222, %5219
  %5223 = phi i64 [ 0, %5219 ], [ %5246, %5222 ]
  %5224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5219 ], [ %5242, %5222 ]
  %5225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5219 ], [ %5243, %5222 ]
  %5226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5219 ], [ %5244, %5222 ]
  %5227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5219 ], [ %5245, %5222 ]
  %5228 = sub i64 %5210, %5223
  %5229 = getelementptr inbounds i32, ptr %9, i64 %5228
  %5230 = getelementptr inbounds i32, ptr %5229, i64 -7
  %5231 = load <8 x i32>, ptr %5230, align 4, !tbaa !5
  %5232 = shufflevector <8 x i32> %5231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5233 = getelementptr inbounds i32, ptr %5229, i64 -15
  %5234 = load <8 x i32>, ptr %5233, align 4, !tbaa !5
  %5235 = shufflevector <8 x i32> %5234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5236 = getelementptr inbounds i32, ptr %5229, i64 -23
  %5237 = load <8 x i32>, ptr %5236, align 4, !tbaa !5
  %5238 = shufflevector <8 x i32> %5237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5239 = getelementptr inbounds i32, ptr %5229, i64 -31
  %5240 = load <8 x i32>, ptr %5239, align 4, !tbaa !5
  %5241 = shufflevector <8 x i32> %5240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5242 = mul <8 x i32> %5232, %5224
  %5243 = mul <8 x i32> %5235, %5225
  %5244 = mul <8 x i32> %5238, %5226
  %5245 = mul <8 x i32> %5241, %5227
  %5246 = add nuw i64 %5223, 32
  %5247 = icmp eq i64 %5246, %5220
  br i1 %5247, label %5248, label %5222, !llvm.loop !1294

5248:                                             ; preds = %5222
  %5249 = mul <8 x i32> %5243, %5242
  %5250 = mul <8 x i32> %5244, %5249
  %5251 = mul <8 x i32> %5245, %5250
  %5252 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5251)
  %5253 = icmp eq i64 %5216, %5220
  br i1 %5253, label %5266, label %5254

5254:                                             ; preds = %5207, %5248
  %5255 = phi i64 [ %5210, %5207 ], [ %5221, %5248 ]
  %5256 = phi i32 [ 1, %5207 ], [ %5252, %5248 ]
  br label %5257

5257:                                             ; preds = %5254, %5257
  %5258 = phi i64 [ %5263, %5257 ], [ %5255, %5254 ]
  %5259 = phi i32 [ %5262, %5257 ], [ %5256, %5254 ]
  %5260 = getelementptr inbounds i32, ptr %9, i64 %5258
  %5261 = load i32, ptr %5260, align 4, !tbaa !5
  %5262 = mul nsw i32 %5261, %5259
  %5263 = add nsw i64 %5258, -1
  %5264 = trunc i64 %5258 to i32
  %5265 = icmp sgt i32 %5264, 0
  br i1 %5265, label %5257, label %5266, !llvm.loop !1295

5266:                                             ; preds = %5257, %5248
  %5267 = phi i32 [ %5252, %5248 ], [ %5262, %5257 ]
  %5268 = and i64 %5217, 4294967295
  %5269 = getelementptr inbounds i32, ptr %6, i64 %5268
  %5270 = load i32, ptr %5269, align 4, !tbaa !5
  %5271 = mul nsw i32 %5270, %5267
  %5272 = add nsw i32 %5271, %5211
  %5273 = icmp sgt i64 %5209, 2
  %5274 = add nsw i64 %5210, -1
  %5275 = add i32 %5208, 1
  br i1 %5273, label %5207, label %5276, !llvm.loop !1296

5276:                                             ; preds = %5266, %5203
  %5277 = phi i32 [ %5206, %5203 ], [ %5272, %5266 ]
  %5278 = sext i32 %5277 to i64
  %5279 = getelementptr inbounds float, ptr %4873, i64 %5278
  %5280 = load float, ptr %5279, align 4, !tbaa !162
  %5281 = fpext float %5280 to double
  %5282 = fcmp fast ogt double %5204, %5281
  br i1 %5282, label %5283, label %5284

5283:                                             ; preds = %5276
  store double %5281, ptr %4875, align 8, !tbaa !18
  br label %5284

5284:                                             ; preds = %5283, %5276
  %5285 = phi double [ %5281, %5283 ], [ %5204, %5276 ]
  %5286 = add nuw nsw i32 %5205, 1
  br i1 %5197, label %5287, label %5334

5287:                                             ; preds = %5284
  %5288 = load i32, ptr %4, align 4, !tbaa !5
  %5289 = load i32, ptr %12, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, -1
  %5291 = icmp slt i32 %5288, %5290
  br i1 %5291, label %5311, label %5292

5292:                                             ; preds = %5287
  %5293 = icmp eq i32 %5288, %5290
  br i1 %5293, label %5294, label %5327

5294:                                             ; preds = %5292
  store i32 0, ptr %4, align 4, !tbaa !5
  %5295 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5295, ptr %6, align 4, !tbaa !5
  br i1 %5202, label %5334, label %5296

5296:                                             ; preds = %5294, %5321
  %5297 = phi i64 [ %5325, %5321 ], [ 1, %5294 ]
  %5298 = getelementptr inbounds i32, ptr %4, i64 %5297
  %5299 = load i32, ptr %5298, align 4, !tbaa !5
  %5300 = getelementptr inbounds i32, ptr %12, i64 %5297
  %5301 = load i32, ptr %5300, align 4, !tbaa !5
  %5302 = add nsw i32 %5301, -1
  %5303 = icmp slt i32 %5299, %5302
  br i1 %5303, label %5304, label %5319

5304:                                             ; preds = %5296
  br i1 %5291, label %5311, label %5305

5305:                                             ; preds = %5304
  %5306 = getelementptr inbounds i32, ptr %7, i64 %5297
  %5307 = load i32, ptr %5306, align 4, !tbaa !5
  %5308 = getelementptr inbounds i32, ptr %6, i64 %5297
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = add nsw i32 %5309, %5307
  store i32 %5310, ptr %5308, align 4, !tbaa !5
  br label %5329

5311:                                             ; preds = %5287, %5304
  %5312 = phi i32 [ %5299, %5304 ], [ %5288, %5287 ]
  %5313 = phi ptr [ %5298, %5304 ], [ %4, %5287 ]
  %5314 = phi i64 [ %5297, %5304 ], [ 0, %5287 ]
  %5315 = add nsw i32 %5312, 1
  store i32 %5315, ptr %5313, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %7, i64 %5314
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = getelementptr inbounds i32, ptr %6, i64 %5314
  br label %5329

5319:                                             ; preds = %5296
  %5320 = icmp eq i32 %5299, %5302
  br i1 %5320, label %5321, label %5327

5321:                                             ; preds = %5319
  store i32 0, ptr %5298, align 4, !tbaa !5
  %5322 = getelementptr inbounds i32, ptr %8, i64 %5297
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5297
  store i32 %5323, ptr %5324, align 4, !tbaa !5
  %5325 = add nuw nsw i64 %5297, 1
  %5326 = icmp eq i64 %5325, %5200
  br i1 %5326, label %5334, label %5296, !llvm.loop !1297

5327:                                             ; preds = %5292, %5319
  %5328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5329:                                             ; preds = %5305, %5311
  %5330 = phi ptr [ %5318, %5311 ], [ %5298, %5305 ]
  %5331 = phi i32 [ %5317, %5311 ], [ 1, %5305 ]
  %5332 = load i32, ptr %5330, align 4, !tbaa !5
  %5333 = add nsw i32 %5332, %5331
  store i32 %5333, ptr %5330, align 4, !tbaa !5
  br label %5334

5334:                                             ; preds = %5321, %5329, %5294, %5284
  %5335 = icmp eq i32 %5286, %5
  br i1 %5335, label %5478, label %5203, !llvm.loop !1298

5336:                                             ; preds = %5186, %5474
  %5337 = phi double [ %4877, %5186 ], [ %5422, %5474 ]
  %5338 = phi i32 [ 0, %5186 ], [ %5423, %5474 ]
  %5339 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5187, label %5340, label %5409

5340:                                             ; preds = %5336, %5399
  %5341 = phi i32 [ %5408, %5399 ], [ 0, %5336 ]
  %5342 = phi i64 [ %5350, %5399 ], [ %5191, %5336 ]
  %5343 = phi i64 [ %5407, %5399 ], [ %5190, %5336 ]
  %5344 = phi i32 [ %5405, %5399 ], [ %5339, %5336 ]
  %5345 = sub i32 %5189, %5341
  %5346 = tail call i32 @llvm.smin.i32(i32 %5345, i32 0)
  %5347 = sub i32 %5345, %5346
  %5348 = zext i32 %5347 to i64
  %5349 = add nuw nsw i64 %5348, 1
  %5350 = add nsw i64 %5342, -1
  %5351 = icmp ult i32 %5347, 31
  br i1 %5351, label %5387, label %5352

5352:                                             ; preds = %5340
  %5353 = and i64 %5349, 8589934560
  %5354 = sub i64 %5343, %5353
  br label %5355

5355:                                             ; preds = %5355, %5352
  %5356 = phi i64 [ 0, %5352 ], [ %5379, %5355 ]
  %5357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5375, %5355 ]
  %5358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5376, %5355 ]
  %5359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5377, %5355 ]
  %5360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5378, %5355 ]
  %5361 = sub i64 %5343, %5356
  %5362 = getelementptr inbounds i32, ptr %11, i64 %5361
  %5363 = getelementptr inbounds i32, ptr %5362, i64 -7
  %5364 = load <8 x i32>, ptr %5363, align 4, !tbaa !5
  %5365 = shufflevector <8 x i32> %5364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5366 = getelementptr inbounds i32, ptr %5362, i64 -15
  %5367 = load <8 x i32>, ptr %5366, align 4, !tbaa !5
  %5368 = shufflevector <8 x i32> %5367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5369 = getelementptr inbounds i32, ptr %5362, i64 -23
  %5370 = load <8 x i32>, ptr %5369, align 4, !tbaa !5
  %5371 = shufflevector <8 x i32> %5370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5372 = getelementptr inbounds i32, ptr %5362, i64 -31
  %5373 = load <8 x i32>, ptr %5372, align 4, !tbaa !5
  %5374 = shufflevector <8 x i32> %5373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5375 = mul <8 x i32> %5365, %5357
  %5376 = mul <8 x i32> %5368, %5358
  %5377 = mul <8 x i32> %5371, %5359
  %5378 = mul <8 x i32> %5374, %5360
  %5379 = add nuw i64 %5356, 32
  %5380 = icmp eq i64 %5379, %5353
  br i1 %5380, label %5381, label %5355, !llvm.loop !1299

5381:                                             ; preds = %5355
  %5382 = mul <8 x i32> %5376, %5375
  %5383 = mul <8 x i32> %5377, %5382
  %5384 = mul <8 x i32> %5378, %5383
  %5385 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5384)
  %5386 = icmp eq i64 %5349, %5353
  br i1 %5386, label %5399, label %5387

5387:                                             ; preds = %5340, %5381
  %5388 = phi i64 [ %5343, %5340 ], [ %5354, %5381 ]
  %5389 = phi i32 [ 1, %5340 ], [ %5385, %5381 ]
  br label %5390

5390:                                             ; preds = %5387, %5390
  %5391 = phi i64 [ %5396, %5390 ], [ %5388, %5387 ]
  %5392 = phi i32 [ %5395, %5390 ], [ %5389, %5387 ]
  %5393 = getelementptr inbounds i32, ptr %11, i64 %5391
  %5394 = load i32, ptr %5393, align 4, !tbaa !5
  %5395 = mul nsw i32 %5394, %5392
  %5396 = add nsw i64 %5391, -1
  %5397 = trunc i64 %5391 to i32
  %5398 = icmp sgt i32 %5397, 0
  br i1 %5398, label %5390, label %5399, !llvm.loop !1300

5399:                                             ; preds = %5390, %5381
  %5400 = phi i32 [ %5385, %5381 ], [ %5395, %5390 ]
  %5401 = and i64 %5350, 4294967295
  %5402 = getelementptr inbounds i32, ptr %6, i64 %5401
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = mul nsw i32 %5403, %5400
  %5405 = add nsw i32 %5404, %5344
  %5406 = icmp sgt i64 %5342, 2
  %5407 = add nsw i64 %5343, -1
  %5408 = add i32 %5341, 1
  br i1 %5406, label %5340, label %5409, !llvm.loop !1301

5409:                                             ; preds = %5399, %5336
  %5410 = phi i32 [ %5339, %5336 ], [ %5405, %5399 ]
  %5411 = icmp slt i32 %5410, %5
  br i1 %5411, label %5414, label %5412

5412:                                             ; preds = %5409
  %5413 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

5414:                                             ; preds = %5409
  %5415 = sext i32 %5410 to i64
  %5416 = getelementptr inbounds float, ptr %4873, i64 %5415
  %5417 = load float, ptr %5416, align 4, !tbaa !162
  %5418 = fpext float %5417 to double
  %5419 = fcmp fast ogt double %5337, %5418
  br i1 %5419, label %5420, label %5421

5420:                                             ; preds = %5414
  store double %5418, ptr %4875, align 8, !tbaa !18
  br label %5421

5421:                                             ; preds = %5420, %5414
  %5422 = phi double [ %5418, %5420 ], [ %5337, %5414 ]
  %5423 = add nuw nsw i32 %5338, 1
  br i1 %5188, label %5424, label %5474

5424:                                             ; preds = %5421
  %5425 = load i32, ptr %4, align 4, !tbaa !5
  %5426 = load i32, ptr %12, align 4, !tbaa !5
  %5427 = add nsw i32 %5426, -1
  %5428 = icmp slt i32 %5425, %5427
  br i1 %5428, label %5451, label %5429

5429:                                             ; preds = %5424
  %5430 = icmp eq i32 %5425, %5427
  br i1 %5430, label %5431, label %5467

5431:                                             ; preds = %5429
  store i32 0, ptr %4, align 4, !tbaa !5
  %5432 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5432, ptr %6, align 4, !tbaa !5
  br i1 %5193, label %5474, label %5433

5433:                                             ; preds = %5431, %5461
  %5434 = phi i64 [ %5465, %5461 ], [ 1, %5431 ]
  %5435 = getelementptr inbounds i32, ptr %4, i64 %5434
  %5436 = load i32, ptr %5435, align 4, !tbaa !5
  %5437 = getelementptr inbounds i32, ptr %12, i64 %5434
  %5438 = load i32, ptr %5437, align 4, !tbaa !5
  %5439 = add nsw i32 %5438, -1
  %5440 = icmp slt i32 %5436, %5439
  br i1 %5440, label %5441, label %5459

5441:                                             ; preds = %5433
  br i1 %5428, label %5451, label %5442

5442:                                             ; preds = %5441
  %5443 = shl i64 %5434, 32
  %5444 = add i64 %5443, -4294967296
  %5445 = ashr exact i64 %5444, 32
  %5446 = getelementptr inbounds i32, ptr %7, i64 %5445
  %5447 = load i32, ptr %5446, align 4, !tbaa !5
  %5448 = getelementptr inbounds i32, ptr %6, i64 %5434
  %5449 = load i32, ptr %5448, align 4, !tbaa !5
  %5450 = add nsw i32 %5449, %5447
  store i32 %5450, ptr %5448, align 4, !tbaa !5
  br label %5469

5451:                                             ; preds = %5424, %5441
  %5452 = phi i32 [ %5436, %5441 ], [ %5425, %5424 ]
  %5453 = phi ptr [ %5435, %5441 ], [ %4, %5424 ]
  %5454 = phi i64 [ %5434, %5441 ], [ 0, %5424 ]
  %5455 = add nsw i32 %5452, 1
  store i32 %5455, ptr %5453, align 4, !tbaa !5
  %5456 = getelementptr inbounds i32, ptr %7, i64 %5454
  %5457 = load i32, ptr %5456, align 4, !tbaa !5
  %5458 = getelementptr inbounds i32, ptr %6, i64 %5454
  br label %5469

5459:                                             ; preds = %5433
  %5460 = icmp eq i32 %5436, %5439
  br i1 %5460, label %5461, label %5467

5461:                                             ; preds = %5459
  store i32 0, ptr %5435, align 4, !tbaa !5
  %5462 = getelementptr inbounds i32, ptr %8, i64 %5434
  %5463 = load i32, ptr %5462, align 4, !tbaa !5
  %5464 = getelementptr inbounds i32, ptr %6, i64 %5434
  store i32 %5463, ptr %5464, align 4, !tbaa !5
  %5465 = add nuw nsw i64 %5434, 1
  %5466 = icmp eq i64 %5465, %5191
  br i1 %5466, label %5474, label %5433, !llvm.loop !1302

5467:                                             ; preds = %5429, %5459
  %5468 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5469:                                             ; preds = %5442, %5451
  %5470 = phi ptr [ %5458, %5451 ], [ %5435, %5442 ]
  %5471 = phi i32 [ %5457, %5451 ], [ 1, %5442 ]
  %5472 = load i32, ptr %5470, align 4, !tbaa !5
  %5473 = add nsw i32 %5472, %5471
  store i32 %5473, ptr %5470, align 4, !tbaa !5
  br label %5474

5474:                                             ; preds = %5461, %5469, %5431, %5421
  %5475 = icmp eq i32 %5423, %5
  br i1 %5475, label %5478, label %5336, !llvm.loop !1303

5476:                                             ; preds = %4879
  %5477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1756, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5478

5478:                                             ; preds = %5474, %5334, %5178, %5038, %4867, %4728, %4573, %4434, %4261, %4121, %3965, %3825, %3654, %3514, %3358, %3218, %3047, %2908, %2753, %2614, %2444, %2304, %2148, %2008, %1837, %1698, %1543, %1404, %1229, %1090, %935, %796, %626, %487, %332, %193, %5185, %5194, %4885, %4894, %4580, %4589, %4282, %4291, %3972, %3981, %3672, %3681, %3365, %3374, %3065, %3074, %2760, %2769, %2462, %2471, %2155, %2164, %1855, %1864, %1550, %1559, %1252, %1261, %942, %951, %644, %653, %339, %348, %41, %50, %4871, %5476, %4275, %4272, %4869, %3658, %4263, %3051, %3656, %2448, %3049, %1841, %2446, %1245, %1241, %1839, %630, %1231, %34, %30, %628, %18, %5031, %5116, %5171, %5327, %5412, %5467, %4427, %4512, %4566, %4721, %4806, %4860, %3818, %3903, %3958, %4114, %4199, %4254, %3211, %3296, %3351, %3507, %3592, %3647, %2607, %2691, %2746, %2901, %2985, %3040, %2001, %2086, %2141, %2297, %2382, %2437, %1397, %1481, %1536, %1691, %1775, %1830, %789, %873, %928, %1083, %1167, %1222, %186, %270, %325, %480, %564, %619
  %5479 = phi i32 [ -1, %619 ], [ -1, %564 ], [ -1, %480 ], [ -1, %325 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1222 ], [ -1, %1167 ], [ -1, %1083 ], [ -1, %928 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1830 ], [ -1, %1775 ], [ -1, %1691 ], [ -1, %1536 ], [ -1, %1481 ], [ -1, %1397 ], [ -1, %2437 ], [ -1, %2382 ], [ -1, %2297 ], [ -1, %2141 ], [ -1, %2086 ], [ -1, %2001 ], [ -1, %3040 ], [ -1, %2985 ], [ -1, %2901 ], [ -1, %2746 ], [ -1, %2691 ], [ -1, %2607 ], [ -1, %3647 ], [ -1, %3592 ], [ -1, %3507 ], [ -1, %3351 ], [ -1, %3296 ], [ -1, %3211 ], [ -1, %4254 ], [ -1, %4199 ], [ -1, %4114 ], [ -1, %3958 ], [ -1, %3903 ], [ -1, %3818 ], [ -1, %4860 ], [ -1, %4806 ], [ -1, %4721 ], [ -1, %4566 ], [ -1, %4512 ], [ -1, %4427 ], [ -1, %5467 ], [ -1, %5412 ], [ -1, %5327 ], [ -1, %5171 ], [ -1, %5116 ], [ -1, %5031 ], [ %10, %18 ], [ 1, %628 ], [ 1, %30 ], [ 1, %34 ], [ 1, %630 ], [ 1, %1231 ], [ 1, %1839 ], [ 1, %1241 ], [ 1, %1245 ], [ 1, %1841 ], [ 1, %2446 ], [ 1, %2448 ], [ 1, %3049 ], [ 1, %3051 ], [ 1, %3656 ], [ 1, %3658 ], [ 1, %4263 ], [ 1, %4869 ], [ 1, %4272 ], [ 1, %4275 ], [ 1, %4871 ], [ 1, %5476 ], [ 1, %50 ], [ 1, %41 ], [ 1, %348 ], [ 1, %339 ], [ 1, %653 ], [ 1, %644 ], [ 1, %951 ], [ 1, %942 ], [ 1, %1261 ], [ 1, %1252 ], [ 1, %1559 ], [ 1, %1550 ], [ 1, %1864 ], [ 1, %1855 ], [ 1, %2164 ], [ 1, %2155 ], [ 1, %2471 ], [ 1, %2462 ], [ 1, %2769 ], [ 1, %2760 ], [ 1, %3074 ], [ 1, %3065 ], [ 1, %3374 ], [ 1, %3365 ], [ 1, %3681 ], [ 1, %3672 ], [ 1, %3981 ], [ 1, %3972 ], [ 1, %4291 ], [ 1, %4282 ], [ 1, %4589 ], [ 1, %4580 ], [ 1, %4894 ], [ 1, %4885 ], [ 1, %5194 ], [ 1, %5185 ], [ %57, %193 ], [ %48, %332 ], [ %355, %487 ], [ %346, %626 ], [ %660, %796 ], [ %651, %935 ], [ %958, %1090 ], [ %949, %1229 ], [ %1268, %1404 ], [ %1259, %1543 ], [ %1566, %1698 ], [ %1557, %1837 ], [ %1871, %2008 ], [ %1862, %2148 ], [ %2171, %2304 ], [ %2162, %2444 ], [ %2478, %2614 ], [ %2469, %2753 ], [ %2776, %2908 ], [ %2767, %3047 ], [ %3081, %3218 ], [ %3072, %3358 ], [ %3381, %3514 ], [ %3372, %3654 ], [ %3688, %3825 ], [ %3679, %3965 ], [ %3988, %4121 ], [ %3979, %4261 ], [ %4298, %4434 ], [ %4289, %4573 ], [ %4596, %4728 ], [ %4587, %4867 ], [ %4901, %5038 ], [ %4892, %5178 ], [ %5201, %5334 ], [ %5192, %5474 ]
  ret i32 %5479
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Min_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5477 [
    i32 101, label %22
    i32 102, label %630
    i32 103, label %1233
    i32 104, label %1841
    i32 105, label %2448
    i32 106, label %3051
    i32 107, label %3658
    i32 108, label %4264
    i32 109, label %4871
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  %27 = load double, ptr %24, align 8, !tbaa !18
  %28 = fptoui double %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !11
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load double, ptr %24, align 8, !tbaa !18
  %32 = fptoui double %31 to i8
  %33 = icmp ugt i8 %28, %32
  br i1 %33, label %34, label %5477

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !11
  br label %5477

35:                                               ; preds = %22
  switch i32 %1, label %628 [
    i32 1, label %36
    i32 0, label %334
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !5
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5477

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %195

50:                                               ; preds = %36
  br i1 %40, label %51, label %5477

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %193
  %60 = phi i32 [ 0, %51 ], [ %145, %193 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %52, label %62, label %131

62:                                               ; preds = %59, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %59 ]
  %64 = phi i64 [ %72, %121 ], [ %56, %59 ]
  %65 = phi i64 [ %129, %121 ], [ %55, %59 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %59 ]
  %67 = sub i32 %54, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !1304

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !1305

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !1306

131:                                              ; preds = %121, %59
  %132 = phi i32 [ %61, %59 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds double, ptr %24, i64 %133
  %137 = load double, ptr %136, align 8, !tbaa !18
  %138 = fptoui double %137 to i8
  %139 = fcmp fast ueq double %135, 0.000000e+00
  br i1 %139, label %144, label %140

140:                                              ; preds = %131
  %141 = load i8, ptr %26, align 1, !tbaa !11
  %142 = icmp ugt i8 %141, %138
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  store i8 %138, ptr %26, align 1, !tbaa !11
  br label %144

144:                                              ; preds = %140, %143, %131
  %145 = add nuw nsw i32 %60, 1
  br i1 %53, label %146, label %193

146:                                              ; preds = %144
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %58, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %56
  br i1 %185, label %193, label %155, !llvm.loop !1307

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %144
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5477, label %59, !llvm.loop !1308

195:                                              ; preds = %42, %332
  %196 = phi i32 [ 0, %42 ], [ %281, %332 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %43, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %47, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %46, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %45, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !1309

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !1310

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !1311

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = icmp ugt i8 %277, %276
  br i1 %278, label %279, label %280

279:                                              ; preds = %272
  store i8 %276, ptr %26, align 1, !tbaa !11
  br label %280

280:                                              ; preds = %272, %279
  %281 = add nuw nsw i32 %196, 1
  br i1 %44, label %282, label %332

282:                                              ; preds = %280
  %283 = load i32, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %12, align 4, !tbaa !5
  %285 = add nsw i32 %284, -1
  %286 = icmp slt i32 %283, %285
  br i1 %286, label %309, label %287

287:                                              ; preds = %282
  %288 = icmp eq i32 %283, %285
  br i1 %288, label %289, label %325

289:                                              ; preds = %287
  store i32 0, ptr %4, align 4, !tbaa !5
  %290 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %290, ptr %6, align 4, !tbaa !5
  br i1 %49, label %332, label %291

291:                                              ; preds = %289, %319
  %292 = phi i64 [ %323, %319 ], [ 1, %289 ]
  %293 = getelementptr inbounds i32, ptr %4, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !5
  %295 = getelementptr inbounds i32, ptr %12, i64 %292
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = add nsw i32 %296, -1
  %298 = icmp slt i32 %294, %297
  br i1 %298, label %299, label %317

299:                                              ; preds = %291
  br i1 %286, label %309, label %300

300:                                              ; preds = %299
  %301 = shl i64 %292, 32
  %302 = add i64 %301, -4294967296
  %303 = ashr exact i64 %302, 32
  %304 = getelementptr inbounds i32, ptr %7, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = getelementptr inbounds i32, ptr %6, i64 %292
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = add nsw i32 %307, %305
  store i32 %308, ptr %306, align 4, !tbaa !5
  br label %327

309:                                              ; preds = %282, %299
  %310 = phi i32 [ %294, %299 ], [ %283, %282 ]
  %311 = phi ptr [ %293, %299 ], [ %4, %282 ]
  %312 = phi i64 [ %292, %299 ], [ 0, %282 ]
  %313 = add nsw i32 %310, 1
  store i32 %313, ptr %311, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %7, i64 %312
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %312
  br label %327

317:                                              ; preds = %291
  %318 = icmp eq i32 %294, %297
  br i1 %318, label %319, label %325

319:                                              ; preds = %317
  store i32 0, ptr %293, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %8, i64 %292
  %321 = load i32, ptr %320, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %6, i64 %292
  store i32 %321, ptr %322, align 4, !tbaa !5
  %323 = add nuw nsw i64 %292, 1
  %324 = icmp eq i64 %323, %47
  br i1 %324, label %332, label %291, !llvm.loop !1312

325:                                              ; preds = %287, %317
  %326 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

327:                                              ; preds = %300, %309
  %328 = phi ptr [ %316, %309 ], [ %293, %300 ]
  %329 = phi i32 [ %315, %309 ], [ 1, %300 ]
  %330 = load i32, ptr %328, align 4, !tbaa !5
  %331 = add nsw i32 %330, %329
  store i32 %331, ptr %328, align 4, !tbaa !5
  br label %332

332:                                              ; preds = %319, %327, %289, %280
  %333 = icmp eq i32 %281, %5
  br i1 %333, label %5477, label %195, !llvm.loop !1313

334:                                              ; preds = %35
  %335 = getelementptr inbounds i32, ptr %3, i64 %19
  %336 = load i32, ptr %335, align 4, !tbaa !5
  %337 = icmp eq i32 %336, 0
  %338 = icmp sgt i32 %5, 0
  br i1 %337, label %348, label %339

339:                                              ; preds = %334
  br i1 %338, label %340, label %5477

340:                                              ; preds = %339
  %341 = icmp sgt i32 %13, 1
  %342 = icmp sgt i32 %13, 0
  %343 = add i32 %13, -2
  %344 = zext i32 %343 to i64
  %345 = zext i32 %13 to i64
  %346 = add nuw i32 %5, 1
  %347 = icmp eq i32 %13, 1
  br label %489

348:                                              ; preds = %334
  br i1 %338, label %349, label %5477

349:                                              ; preds = %348
  %350 = icmp sgt i32 %13, 1
  %351 = icmp sgt i32 %13, 0
  %352 = add i32 %13, -2
  %353 = zext i32 %352 to i64
  %354 = zext i32 %13 to i64
  %355 = add nuw i32 %5, 1
  %356 = icmp eq i32 %13, 1
  br label %357

357:                                              ; preds = %349, %487
  %358 = phi i32 [ 0, %349 ], [ %439, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %350, label %360, label %429

360:                                              ; preds = %357, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %357 ]
  %362 = phi i64 [ %370, %419 ], [ %354, %357 ]
  %363 = phi i64 [ %427, %419 ], [ %353, %357 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %357 ]
  %365 = sub i32 %352, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !1314

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !1315

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !1316

429:                                              ; preds = %419, %357
  %430 = phi i32 [ %359, %357 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds double, ptr %24, i64 %431
  %433 = load double, ptr %432, align 8, !tbaa !18
  %434 = fptoui double %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = icmp ugt i8 %435, %434
  br i1 %436, label %437, label %438

437:                                              ; preds = %429
  store i8 %434, ptr %26, align 1, !tbaa !11
  br label %438

438:                                              ; preds = %437, %429
  %439 = add nuw nsw i32 %358, 1
  br i1 %351, label %440, label %487

440:                                              ; preds = %438
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %356, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %354
  br i1 %479, label %487, label %449, !llvm.loop !1317

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %438
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5477, label %357, !llvm.loop !1318

489:                                              ; preds = %340, %626
  %490 = phi i32 [ 0, %340 ], [ %575, %626 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %341, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %345, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %344, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %343, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !1319

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !1320

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !1321

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds double, ptr %24, i64 %567
  %569 = load double, ptr %568, align 8, !tbaa !18
  %570 = fptoui double %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = icmp ugt i8 %571, %570
  br i1 %572, label %573, label %574

573:                                              ; preds = %566
  store i8 %570, ptr %26, align 1, !tbaa !11
  br label %574

574:                                              ; preds = %573, %566
  %575 = add nuw nsw i32 %490, 1
  br i1 %342, label %576, label %626

576:                                              ; preds = %574
  %577 = load i32, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %12, align 4, !tbaa !5
  %579 = add nsw i32 %578, -1
  %580 = icmp slt i32 %577, %579
  br i1 %580, label %603, label %581

581:                                              ; preds = %576
  %582 = icmp eq i32 %577, %579
  br i1 %582, label %583, label %619

583:                                              ; preds = %581
  store i32 0, ptr %4, align 4, !tbaa !5
  %584 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %584, ptr %6, align 4, !tbaa !5
  br i1 %347, label %626, label %585

585:                                              ; preds = %583, %613
  %586 = phi i64 [ %617, %613 ], [ 1, %583 ]
  %587 = getelementptr inbounds i32, ptr %4, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !5
  %589 = getelementptr inbounds i32, ptr %12, i64 %586
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = add nsw i32 %590, -1
  %592 = icmp slt i32 %588, %591
  br i1 %592, label %593, label %611

593:                                              ; preds = %585
  br i1 %580, label %603, label %594

594:                                              ; preds = %593
  %595 = shl i64 %586, 32
  %596 = add i64 %595, -4294967296
  %597 = ashr exact i64 %596, 32
  %598 = getelementptr inbounds i32, ptr %7, i64 %597
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %586
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = add nsw i32 %601, %599
  store i32 %602, ptr %600, align 4, !tbaa !5
  br label %621

603:                                              ; preds = %576, %593
  %604 = phi i32 [ %588, %593 ], [ %577, %576 ]
  %605 = phi ptr [ %587, %593 ], [ %4, %576 ]
  %606 = phi i64 [ %586, %593 ], [ 0, %576 ]
  %607 = add nsw i32 %604, 1
  store i32 %607, ptr %605, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %7, i64 %606
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %606
  br label %621

611:                                              ; preds = %585
  %612 = icmp eq i32 %588, %591
  br i1 %612, label %613, label %619

613:                                              ; preds = %611
  store i32 0, ptr %587, align 4, !tbaa !5
  %614 = getelementptr inbounds i32, ptr %8, i64 %586
  %615 = load i32, ptr %614, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %6, i64 %586
  store i32 %615, ptr %616, align 4, !tbaa !5
  %617 = add nuw nsw i64 %586, 1
  %618 = icmp eq i64 %617, %345
  br i1 %618, label %626, label %585, !llvm.loop !1322

619:                                              ; preds = %581, %611
  %620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

621:                                              ; preds = %594, %603
  %622 = phi ptr [ %610, %603 ], [ %587, %594 ]
  %623 = phi i32 [ %609, %603 ], [ 1, %594 ]
  %624 = load i32, ptr %622, align 4, !tbaa !5
  %625 = add nsw i32 %624, %623
  store i32 %625, ptr %622, align 4, !tbaa !5
  br label %626

626:                                              ; preds = %613, %621, %583, %574
  %627 = icmp eq i32 %575, %5
  br i1 %627, label %5477, label %489, !llvm.loop !1323

628:                                              ; preds = %35
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

630:                                              ; preds = %18
  %631 = getelementptr inbounds ptr, ptr %14, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !9
  %633 = getelementptr inbounds ptr, ptr %16, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = load double, ptr %632, align 8, !tbaa !18
  %636 = fptosi double %635 to i32
  store i32 %636, ptr %634, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %5477, label %638

638:                                              ; preds = %630
  switch i32 %1, label %1231 [
    i32 1, label %639
    i32 0, label %937
  ]

639:                                              ; preds = %638
  %640 = getelementptr inbounds i32, ptr %3, i64 %19
  %641 = load i32, ptr %640, align 4, !tbaa !5
  %642 = icmp eq i32 %641, 0
  %643 = icmp sgt i32 %5, 0
  br i1 %642, label %653, label %644

644:                                              ; preds = %639
  br i1 %643, label %645, label %5477

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %798

653:                                              ; preds = %639
  br i1 %643, label %654, label %5477

654:                                              ; preds = %653
  %655 = icmp sgt i32 %13, 1
  %656 = icmp sgt i32 %13, 0
  %657 = add i32 %13, -2
  %658 = zext i32 %657 to i64
  %659 = zext i32 %13 to i64
  %660 = add nuw i32 %5, 1
  %661 = icmp eq i32 %13, 1
  br label %662

662:                                              ; preds = %654, %796
  %663 = phi i32 [ 0, %654 ], [ %748, %796 ]
  %664 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %655, label %665, label %734

665:                                              ; preds = %662, %724
  %666 = phi i32 [ %733, %724 ], [ 0, %662 ]
  %667 = phi i64 [ %675, %724 ], [ %659, %662 ]
  %668 = phi i64 [ %732, %724 ], [ %658, %662 ]
  %669 = phi i32 [ %730, %724 ], [ %664, %662 ]
  %670 = sub i32 %657, %666
  %671 = tail call i32 @llvm.smin.i32(i32 %670, i32 0)
  %672 = sub i32 %670, %671
  %673 = zext i32 %672 to i64
  %674 = add nuw nsw i64 %673, 1
  %675 = add nsw i64 %667, -1
  %676 = icmp ult i32 %672, 31
  br i1 %676, label %712, label %677

677:                                              ; preds = %665
  %678 = and i64 %674, 8589934560
  %679 = sub i64 %668, %678
  br label %680

680:                                              ; preds = %680, %677
  %681 = phi i64 [ 0, %677 ], [ %704, %680 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %700, %680 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %701, %680 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %702, %680 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %677 ], [ %703, %680 ]
  %686 = sub i64 %668, %681
  %687 = getelementptr inbounds i32, ptr %9, i64 %686
  %688 = getelementptr inbounds i32, ptr %687, i64 -7
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %687, i64 -15
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %687, i64 -23
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = getelementptr inbounds i32, ptr %687, i64 -31
  %698 = load <8 x i32>, ptr %697, align 4, !tbaa !5
  %699 = shufflevector <8 x i32> %698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %700 = mul <8 x i32> %690, %682
  %701 = mul <8 x i32> %693, %683
  %702 = mul <8 x i32> %696, %684
  %703 = mul <8 x i32> %699, %685
  %704 = add nuw i64 %681, 32
  %705 = icmp eq i64 %704, %678
  br i1 %705, label %706, label %680, !llvm.loop !1324

706:                                              ; preds = %680
  %707 = mul <8 x i32> %701, %700
  %708 = mul <8 x i32> %702, %707
  %709 = mul <8 x i32> %703, %708
  %710 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %709)
  %711 = icmp eq i64 %674, %678
  br i1 %711, label %724, label %712

712:                                              ; preds = %665, %706
  %713 = phi i64 [ %668, %665 ], [ %679, %706 ]
  %714 = phi i32 [ 1, %665 ], [ %710, %706 ]
  br label %715

715:                                              ; preds = %712, %715
  %716 = phi i64 [ %721, %715 ], [ %713, %712 ]
  %717 = phi i32 [ %720, %715 ], [ %714, %712 ]
  %718 = getelementptr inbounds i32, ptr %9, i64 %716
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %717
  %721 = add nsw i64 %716, -1
  %722 = trunc i64 %716 to i32
  %723 = icmp sgt i32 %722, 0
  br i1 %723, label %715, label %724, !llvm.loop !1325

724:                                              ; preds = %715, %706
  %725 = phi i32 [ %710, %706 ], [ %720, %715 ]
  %726 = and i64 %675, 4294967295
  %727 = getelementptr inbounds i32, ptr %6, i64 %726
  %728 = load i32, ptr %727, align 4, !tbaa !5
  %729 = mul nsw i32 %728, %725
  %730 = add nsw i32 %729, %669
  %731 = icmp sgt i64 %667, 2
  %732 = add nsw i64 %668, -1
  %733 = add i32 %666, 1
  br i1 %731, label %665, label %734, !llvm.loop !1326

734:                                              ; preds = %724, %662
  %735 = phi i32 [ %664, %662 ], [ %730, %724 ]
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds double, ptr %2, i64 %736
  %738 = load double, ptr %737, align 8, !tbaa !18
  %739 = getelementptr inbounds double, ptr %632, i64 %736
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = fptosi double %740 to i32
  %742 = fcmp fast ueq double %738, 0.000000e+00
  br i1 %742, label %747, label %743

743:                                              ; preds = %734
  %744 = load i32, ptr %634, align 4, !tbaa !5
  %745 = icmp sgt i32 %744, %741
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  store i32 %741, ptr %634, align 4, !tbaa !5
  br label %747

747:                                              ; preds = %743, %746, %734
  %748 = add nuw nsw i32 %663, 1
  br i1 %656, label %749, label %796

749:                                              ; preds = %747
  %750 = load i32, ptr %4, align 4, !tbaa !5
  %751 = load i32, ptr %12, align 4, !tbaa !5
  %752 = add nsw i32 %751, -1
  %753 = icmp slt i32 %750, %752
  br i1 %753, label %773, label %754

754:                                              ; preds = %749
  %755 = icmp eq i32 %750, %752
  br i1 %755, label %756, label %789

756:                                              ; preds = %754
  store i32 0, ptr %4, align 4, !tbaa !5
  %757 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %757, ptr %6, align 4, !tbaa !5
  br i1 %661, label %796, label %758

758:                                              ; preds = %756, %783
  %759 = phi i64 [ %787, %783 ], [ 1, %756 ]
  %760 = getelementptr inbounds i32, ptr %4, i64 %759
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %12, i64 %759
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, -1
  %765 = icmp slt i32 %761, %764
  br i1 %765, label %766, label %781

766:                                              ; preds = %758
  br i1 %753, label %773, label %767

767:                                              ; preds = %766
  %768 = getelementptr inbounds i32, ptr %7, i64 %759
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %759
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = add nsw i32 %771, %769
  store i32 %772, ptr %770, align 4, !tbaa !5
  br label %791

773:                                              ; preds = %749, %766
  %774 = phi i32 [ %761, %766 ], [ %750, %749 ]
  %775 = phi ptr [ %760, %766 ], [ %4, %749 ]
  %776 = phi i64 [ %759, %766 ], [ 0, %749 ]
  %777 = add nsw i32 %774, 1
  store i32 %777, ptr %775, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %7, i64 %776
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %6, i64 %776
  br label %791

781:                                              ; preds = %758
  %782 = icmp eq i32 %761, %764
  br i1 %782, label %783, label %789

783:                                              ; preds = %781
  store i32 0, ptr %760, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %8, i64 %759
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %6, i64 %759
  store i32 %785, ptr %786, align 4, !tbaa !5
  %787 = add nuw nsw i64 %759, 1
  %788 = icmp eq i64 %787, %659
  br i1 %788, label %796, label %758, !llvm.loop !1327

789:                                              ; preds = %754, %781
  %790 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

791:                                              ; preds = %767, %773
  %792 = phi ptr [ %780, %773 ], [ %760, %767 ]
  %793 = phi i32 [ %779, %773 ], [ 1, %767 ]
  %794 = load i32, ptr %792, align 4, !tbaa !5
  %795 = add nsw i32 %794, %793
  store i32 %795, ptr %792, align 4, !tbaa !5
  br label %796

796:                                              ; preds = %783, %791, %756, %747
  %797 = icmp eq i32 %748, %5
  br i1 %797, label %5477, label %662, !llvm.loop !1328

798:                                              ; preds = %645, %935
  %799 = phi i32 [ 0, %645 ], [ %884, %935 ]
  %800 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %801, label %870

801:                                              ; preds = %798, %860
  %802 = phi i32 [ %869, %860 ], [ 0, %798 ]
  %803 = phi i64 [ %811, %860 ], [ %650, %798 ]
  %804 = phi i64 [ %868, %860 ], [ %649, %798 ]
  %805 = phi i32 [ %866, %860 ], [ %800, %798 ]
  %806 = sub i32 %648, %802
  %807 = tail call i32 @llvm.smin.i32(i32 %806, i32 0)
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = add nuw nsw i64 %809, 1
  %811 = add nsw i64 %803, -1
  %812 = icmp ult i32 %808, 31
  br i1 %812, label %848, label %813

813:                                              ; preds = %801
  %814 = and i64 %810, 8589934560
  %815 = sub i64 %804, %814
  br label %816

816:                                              ; preds = %816, %813
  %817 = phi i64 [ 0, %813 ], [ %840, %816 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %836, %816 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %837, %816 ]
  %820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %838, %816 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %813 ], [ %839, %816 ]
  %822 = sub i64 %804, %817
  %823 = getelementptr inbounds i32, ptr %11, i64 %822
  %824 = getelementptr inbounds i32, ptr %823, i64 -7
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = getelementptr inbounds i32, ptr %823, i64 -15
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %823, i64 -23
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %823, i64 -31
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = mul <8 x i32> %826, %818
  %837 = mul <8 x i32> %829, %819
  %838 = mul <8 x i32> %832, %820
  %839 = mul <8 x i32> %835, %821
  %840 = add nuw i64 %817, 32
  %841 = icmp eq i64 %840, %814
  br i1 %841, label %842, label %816, !llvm.loop !1329

842:                                              ; preds = %816
  %843 = mul <8 x i32> %837, %836
  %844 = mul <8 x i32> %838, %843
  %845 = mul <8 x i32> %839, %844
  %846 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %845)
  %847 = icmp eq i64 %810, %814
  br i1 %847, label %860, label %848

848:                                              ; preds = %801, %842
  %849 = phi i64 [ %804, %801 ], [ %815, %842 ]
  %850 = phi i32 [ 1, %801 ], [ %846, %842 ]
  br label %851

851:                                              ; preds = %848, %851
  %852 = phi i64 [ %857, %851 ], [ %849, %848 ]
  %853 = phi i32 [ %856, %851 ], [ %850, %848 ]
  %854 = getelementptr inbounds i32, ptr %11, i64 %852
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %853
  %857 = add nsw i64 %852, -1
  %858 = trunc i64 %852 to i32
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %851, label %860, !llvm.loop !1330

860:                                              ; preds = %851, %842
  %861 = phi i32 [ %846, %842 ], [ %856, %851 ]
  %862 = and i64 %811, 4294967295
  %863 = getelementptr inbounds i32, ptr %6, i64 %862
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %861
  %866 = add nsw i32 %865, %805
  %867 = icmp sgt i64 %803, 2
  %868 = add nsw i64 %804, -1
  %869 = add i32 %802, 1
  br i1 %867, label %801, label %870, !llvm.loop !1331

870:                                              ; preds = %860, %798
  %871 = phi i32 [ %800, %798 ], [ %866, %860 ]
  %872 = icmp slt i32 %871, %5
  br i1 %872, label %875, label %873

873:                                              ; preds = %870
  %874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

875:                                              ; preds = %870
  %876 = sext i32 %871 to i64
  %877 = getelementptr inbounds double, ptr %632, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !18
  %879 = fptosi double %878 to i32
  %880 = load i32, ptr %634, align 4, !tbaa !5
  %881 = icmp sgt i32 %880, %879
  br i1 %881, label %882, label %883

882:                                              ; preds = %875
  store i32 %879, ptr %634, align 4, !tbaa !5
  br label %883

883:                                              ; preds = %875, %882
  %884 = add nuw nsw i32 %799, 1
  br i1 %647, label %885, label %935

885:                                              ; preds = %883
  %886 = load i32, ptr %4, align 4, !tbaa !5
  %887 = load i32, ptr %12, align 4, !tbaa !5
  %888 = add nsw i32 %887, -1
  %889 = icmp slt i32 %886, %888
  br i1 %889, label %912, label %890

890:                                              ; preds = %885
  %891 = icmp eq i32 %886, %888
  br i1 %891, label %892, label %928

892:                                              ; preds = %890
  store i32 0, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %893, ptr %6, align 4, !tbaa !5
  br i1 %652, label %935, label %894

894:                                              ; preds = %892, %922
  %895 = phi i64 [ %926, %922 ], [ 1, %892 ]
  %896 = getelementptr inbounds i32, ptr %4, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %12, i64 %895
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, -1
  %901 = icmp slt i32 %897, %900
  br i1 %901, label %902, label %920

902:                                              ; preds = %894
  br i1 %889, label %912, label %903

903:                                              ; preds = %902
  %904 = shl i64 %895, 32
  %905 = add i64 %904, -4294967296
  %906 = ashr exact i64 %905, 32
  %907 = getelementptr inbounds i32, ptr %7, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %6, i64 %895
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, %908
  store i32 %911, ptr %909, align 4, !tbaa !5
  br label %930

912:                                              ; preds = %885, %902
  %913 = phi i32 [ %897, %902 ], [ %886, %885 ]
  %914 = phi ptr [ %896, %902 ], [ %4, %885 ]
  %915 = phi i64 [ %895, %902 ], [ 0, %885 ]
  %916 = add nsw i32 %913, 1
  store i32 %916, ptr %914, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %7, i64 %915
  %918 = load i32, ptr %917, align 4, !tbaa !5
  %919 = getelementptr inbounds i32, ptr %6, i64 %915
  br label %930

920:                                              ; preds = %894
  %921 = icmp eq i32 %897, %900
  br i1 %921, label %922, label %928

922:                                              ; preds = %920
  store i32 0, ptr %896, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %8, i64 %895
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %895
  store i32 %924, ptr %925, align 4, !tbaa !5
  %926 = add nuw nsw i64 %895, 1
  %927 = icmp eq i64 %926, %650
  br i1 %927, label %935, label %894, !llvm.loop !1332

928:                                              ; preds = %890, %920
  %929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

930:                                              ; preds = %903, %912
  %931 = phi ptr [ %919, %912 ], [ %896, %903 ]
  %932 = phi i32 [ %918, %912 ], [ 1, %903 ]
  %933 = load i32, ptr %931, align 4, !tbaa !5
  %934 = add nsw i32 %933, %932
  store i32 %934, ptr %931, align 4, !tbaa !5
  br label %935

935:                                              ; preds = %922, %930, %892, %883
  %936 = icmp eq i32 %884, %5
  br i1 %936, label %5477, label %798, !llvm.loop !1333

937:                                              ; preds = %638
  %938 = getelementptr inbounds i32, ptr %3, i64 %19
  %939 = load i32, ptr %938, align 4, !tbaa !5
  %940 = icmp eq i32 %939, 0
  %941 = icmp sgt i32 %5, 0
  br i1 %940, label %951, label %942

942:                                              ; preds = %937
  br i1 %941, label %943, label %5477

943:                                              ; preds = %942
  %944 = icmp sgt i32 %13, 1
  %945 = icmp sgt i32 %13, 0
  %946 = add i32 %13, -2
  %947 = zext i32 %946 to i64
  %948 = zext i32 %13 to i64
  %949 = add nuw i32 %5, 1
  %950 = icmp eq i32 %13, 1
  br label %1092

951:                                              ; preds = %937
  br i1 %941, label %952, label %5477

952:                                              ; preds = %951
  %953 = icmp sgt i32 %13, 1
  %954 = icmp sgt i32 %13, 0
  %955 = add i32 %13, -2
  %956 = zext i32 %955 to i64
  %957 = zext i32 %13 to i64
  %958 = add nuw i32 %5, 1
  %959 = icmp eq i32 %13, 1
  br label %960

960:                                              ; preds = %952, %1090
  %961 = phi i32 [ 0, %952 ], [ %1042, %1090 ]
  %962 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %953, label %963, label %1032

963:                                              ; preds = %960, %1022
  %964 = phi i32 [ %1031, %1022 ], [ 0, %960 ]
  %965 = phi i64 [ %973, %1022 ], [ %957, %960 ]
  %966 = phi i64 [ %1030, %1022 ], [ %956, %960 ]
  %967 = phi i32 [ %1028, %1022 ], [ %962, %960 ]
  %968 = sub i32 %955, %964
  %969 = tail call i32 @llvm.smin.i32(i32 %968, i32 0)
  %970 = sub i32 %968, %969
  %971 = zext i32 %970 to i64
  %972 = add nuw nsw i64 %971, 1
  %973 = add nsw i64 %965, -1
  %974 = icmp ult i32 %970, 31
  br i1 %974, label %1010, label %975

975:                                              ; preds = %963
  %976 = and i64 %972, 8589934560
  %977 = sub i64 %966, %976
  br label %978

978:                                              ; preds = %978, %975
  %979 = phi i64 [ 0, %975 ], [ %1002, %978 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %998, %978 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %999, %978 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1000, %978 ]
  %983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %975 ], [ %1001, %978 ]
  %984 = sub i64 %966, %979
  %985 = getelementptr inbounds i32, ptr %9, i64 %984
  %986 = getelementptr inbounds i32, ptr %985, i64 -7
  %987 = load <8 x i32>, ptr %986, align 4, !tbaa !5
  %988 = shufflevector <8 x i32> %987, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %989 = getelementptr inbounds i32, ptr %985, i64 -15
  %990 = load <8 x i32>, ptr %989, align 4, !tbaa !5
  %991 = shufflevector <8 x i32> %990, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %992 = getelementptr inbounds i32, ptr %985, i64 -23
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !5
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %985, i64 -31
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !5
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = mul <8 x i32> %988, %980
  %999 = mul <8 x i32> %991, %981
  %1000 = mul <8 x i32> %994, %982
  %1001 = mul <8 x i32> %997, %983
  %1002 = add nuw i64 %979, 32
  %1003 = icmp eq i64 %1002, %976
  br i1 %1003, label %1004, label %978, !llvm.loop !1334

1004:                                             ; preds = %978
  %1005 = mul <8 x i32> %999, %998
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = mul <8 x i32> %1001, %1006
  %1008 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1007)
  %1009 = icmp eq i64 %972, %976
  br i1 %1009, label %1022, label %1010

1010:                                             ; preds = %963, %1004
  %1011 = phi i64 [ %966, %963 ], [ %977, %1004 ]
  %1012 = phi i32 [ 1, %963 ], [ %1008, %1004 ]
  br label %1013

1013:                                             ; preds = %1010, %1013
  %1014 = phi i64 [ %1019, %1013 ], [ %1011, %1010 ]
  %1015 = phi i32 [ %1018, %1013 ], [ %1012, %1010 ]
  %1016 = getelementptr inbounds i32, ptr %9, i64 %1014
  %1017 = load i32, ptr %1016, align 4, !tbaa !5
  %1018 = mul nsw i32 %1017, %1015
  %1019 = add nsw i64 %1014, -1
  %1020 = trunc i64 %1014 to i32
  %1021 = icmp sgt i32 %1020, 0
  br i1 %1021, label %1013, label %1022, !llvm.loop !1335

1022:                                             ; preds = %1013, %1004
  %1023 = phi i32 [ %1008, %1004 ], [ %1018, %1013 ]
  %1024 = and i64 %973, 4294967295
  %1025 = getelementptr inbounds i32, ptr %6, i64 %1024
  %1026 = load i32, ptr %1025, align 4, !tbaa !5
  %1027 = mul nsw i32 %1026, %1023
  %1028 = add nsw i32 %1027, %967
  %1029 = icmp sgt i64 %965, 2
  %1030 = add nsw i64 %966, -1
  %1031 = add i32 %964, 1
  br i1 %1029, label %963, label %1032, !llvm.loop !1336

1032:                                             ; preds = %1022, %960
  %1033 = phi i32 [ %962, %960 ], [ %1028, %1022 ]
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds double, ptr %632, i64 %1034
  %1036 = load double, ptr %1035, align 8, !tbaa !18
  %1037 = fptosi double %1036 to i32
  %1038 = load i32, ptr %634, align 4, !tbaa !5
  %1039 = icmp sgt i32 %1038, %1037
  br i1 %1039, label %1040, label %1041

1040:                                             ; preds = %1032
  store i32 %1037, ptr %634, align 4, !tbaa !5
  br label %1041

1041:                                             ; preds = %1040, %1032
  %1042 = add nuw nsw i32 %961, 1
  br i1 %954, label %1043, label %1090

1043:                                             ; preds = %1041
  %1044 = load i32, ptr %4, align 4, !tbaa !5
  %1045 = load i32, ptr %12, align 4, !tbaa !5
  %1046 = add nsw i32 %1045, -1
  %1047 = icmp slt i32 %1044, %1046
  br i1 %1047, label %1067, label %1048

1048:                                             ; preds = %1043
  %1049 = icmp eq i32 %1044, %1046
  br i1 %1049, label %1050, label %1083

1050:                                             ; preds = %1048
  store i32 0, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1051, ptr %6, align 4, !tbaa !5
  br i1 %959, label %1090, label %1052

1052:                                             ; preds = %1050, %1077
  %1053 = phi i64 [ %1081, %1077 ], [ 1, %1050 ]
  %1054 = getelementptr inbounds i32, ptr %4, i64 %1053
  %1055 = load i32, ptr %1054, align 4, !tbaa !5
  %1056 = getelementptr inbounds i32, ptr %12, i64 %1053
  %1057 = load i32, ptr %1056, align 4, !tbaa !5
  %1058 = add nsw i32 %1057, -1
  %1059 = icmp slt i32 %1055, %1058
  br i1 %1059, label %1060, label %1075

1060:                                             ; preds = %1052
  br i1 %1047, label %1067, label %1061

1061:                                             ; preds = %1060
  %1062 = getelementptr inbounds i32, ptr %7, i64 %1053
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = getelementptr inbounds i32, ptr %6, i64 %1053
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = add nsw i32 %1065, %1063
  store i32 %1066, ptr %1064, align 4, !tbaa !5
  br label %1085

1067:                                             ; preds = %1043, %1060
  %1068 = phi i32 [ %1055, %1060 ], [ %1044, %1043 ]
  %1069 = phi ptr [ %1054, %1060 ], [ %4, %1043 ]
  %1070 = phi i64 [ %1053, %1060 ], [ 0, %1043 ]
  %1071 = add nsw i32 %1068, 1
  store i32 %1071, ptr %1069, align 4, !tbaa !5
  %1072 = getelementptr inbounds i32, ptr %7, i64 %1070
  %1073 = load i32, ptr %1072, align 4, !tbaa !5
  %1074 = getelementptr inbounds i32, ptr %6, i64 %1070
  br label %1085

1075:                                             ; preds = %1052
  %1076 = icmp eq i32 %1055, %1058
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1075
  store i32 0, ptr %1054, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %8, i64 %1053
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1053
  store i32 %1079, ptr %1080, align 4, !tbaa !5
  %1081 = add nuw nsw i64 %1053, 1
  %1082 = icmp eq i64 %1081, %957
  br i1 %1082, label %1090, label %1052, !llvm.loop !1337

1083:                                             ; preds = %1048, %1075
  %1084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1085:                                             ; preds = %1061, %1067
  %1086 = phi ptr [ %1074, %1067 ], [ %1054, %1061 ]
  %1087 = phi i32 [ %1073, %1067 ], [ 1, %1061 ]
  %1088 = load i32, ptr %1086, align 4, !tbaa !5
  %1089 = add nsw i32 %1088, %1087
  store i32 %1089, ptr %1086, align 4, !tbaa !5
  br label %1090

1090:                                             ; preds = %1077, %1085, %1050, %1041
  %1091 = icmp eq i32 %1042, %5
  br i1 %1091, label %5477, label %960, !llvm.loop !1338

1092:                                             ; preds = %943, %1229
  %1093 = phi i32 [ 0, %943 ], [ %1178, %1229 ]
  %1094 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %944, label %1095, label %1164

1095:                                             ; preds = %1092, %1154
  %1096 = phi i32 [ %1163, %1154 ], [ 0, %1092 ]
  %1097 = phi i64 [ %1105, %1154 ], [ %948, %1092 ]
  %1098 = phi i64 [ %1162, %1154 ], [ %947, %1092 ]
  %1099 = phi i32 [ %1160, %1154 ], [ %1094, %1092 ]
  %1100 = sub i32 %946, %1096
  %1101 = tail call i32 @llvm.smin.i32(i32 %1100, i32 0)
  %1102 = sub i32 %1100, %1101
  %1103 = zext i32 %1102 to i64
  %1104 = add nuw nsw i64 %1103, 1
  %1105 = add nsw i64 %1097, -1
  %1106 = icmp ult i32 %1102, 31
  br i1 %1106, label %1142, label %1107

1107:                                             ; preds = %1095
  %1108 = and i64 %1104, 8589934560
  %1109 = sub i64 %1098, %1108
  br label %1110

1110:                                             ; preds = %1110, %1107
  %1111 = phi i64 [ 0, %1107 ], [ %1134, %1110 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1130, %1110 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1131, %1110 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1132, %1110 ]
  %1115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1107 ], [ %1133, %1110 ]
  %1116 = sub i64 %1098, %1111
  %1117 = getelementptr inbounds i32, ptr %11, i64 %1116
  %1118 = getelementptr inbounds i32, ptr %1117, i64 -7
  %1119 = load <8 x i32>, ptr %1118, align 4, !tbaa !5
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1121 = getelementptr inbounds i32, ptr %1117, i64 -15
  %1122 = load <8 x i32>, ptr %1121, align 4, !tbaa !5
  %1123 = shufflevector <8 x i32> %1122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1124 = getelementptr inbounds i32, ptr %1117, i64 -23
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1117, i64 -31
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = mul <8 x i32> %1120, %1112
  %1131 = mul <8 x i32> %1123, %1113
  %1132 = mul <8 x i32> %1126, %1114
  %1133 = mul <8 x i32> %1129, %1115
  %1134 = add nuw i64 %1111, 32
  %1135 = icmp eq i64 %1134, %1108
  br i1 %1135, label %1136, label %1110, !llvm.loop !1339

1136:                                             ; preds = %1110
  %1137 = mul <8 x i32> %1131, %1130
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = mul <8 x i32> %1133, %1138
  %1140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1139)
  %1141 = icmp eq i64 %1104, %1108
  br i1 %1141, label %1154, label %1142

1142:                                             ; preds = %1095, %1136
  %1143 = phi i64 [ %1098, %1095 ], [ %1109, %1136 ]
  %1144 = phi i32 [ 1, %1095 ], [ %1140, %1136 ]
  br label %1145

1145:                                             ; preds = %1142, %1145
  %1146 = phi i64 [ %1151, %1145 ], [ %1143, %1142 ]
  %1147 = phi i32 [ %1150, %1145 ], [ %1144, %1142 ]
  %1148 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1149 = load i32, ptr %1148, align 4, !tbaa !5
  %1150 = mul nsw i32 %1149, %1147
  %1151 = add nsw i64 %1146, -1
  %1152 = trunc i64 %1146 to i32
  %1153 = icmp sgt i32 %1152, 0
  br i1 %1153, label %1145, label %1154, !llvm.loop !1340

1154:                                             ; preds = %1145, %1136
  %1155 = phi i32 [ %1140, %1136 ], [ %1150, %1145 ]
  %1156 = and i64 %1105, 4294967295
  %1157 = getelementptr inbounds i32, ptr %6, i64 %1156
  %1158 = load i32, ptr %1157, align 4, !tbaa !5
  %1159 = mul nsw i32 %1158, %1155
  %1160 = add nsw i32 %1159, %1099
  %1161 = icmp sgt i64 %1097, 2
  %1162 = add nsw i64 %1098, -1
  %1163 = add i32 %1096, 1
  br i1 %1161, label %1095, label %1164, !llvm.loop !1341

1164:                                             ; preds = %1154, %1092
  %1165 = phi i32 [ %1094, %1092 ], [ %1160, %1154 ]
  %1166 = icmp slt i32 %1165, %5
  br i1 %1166, label %1169, label %1167

1167:                                             ; preds = %1164
  %1168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1169:                                             ; preds = %1164
  %1170 = sext i32 %1165 to i64
  %1171 = getelementptr inbounds double, ptr %632, i64 %1170
  %1172 = load double, ptr %1171, align 8, !tbaa !18
  %1173 = fptosi double %1172 to i32
  %1174 = load i32, ptr %634, align 4, !tbaa !5
  %1175 = icmp sgt i32 %1174, %1173
  br i1 %1175, label %1176, label %1177

1176:                                             ; preds = %1169
  store i32 %1173, ptr %634, align 4, !tbaa !5
  br label %1177

1177:                                             ; preds = %1176, %1169
  %1178 = add nuw nsw i32 %1093, 1
  br i1 %945, label %1179, label %1229

1179:                                             ; preds = %1177
  %1180 = load i32, ptr %4, align 4, !tbaa !5
  %1181 = load i32, ptr %12, align 4, !tbaa !5
  %1182 = add nsw i32 %1181, -1
  %1183 = icmp slt i32 %1180, %1182
  br i1 %1183, label %1206, label %1184

1184:                                             ; preds = %1179
  %1185 = icmp eq i32 %1180, %1182
  br i1 %1185, label %1186, label %1222

1186:                                             ; preds = %1184
  store i32 0, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1187, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1229, label %1188

1188:                                             ; preds = %1186, %1216
  %1189 = phi i64 [ %1220, %1216 ], [ 1, %1186 ]
  %1190 = getelementptr inbounds i32, ptr %4, i64 %1189
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %12, i64 %1189
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = add nsw i32 %1193, -1
  %1195 = icmp slt i32 %1191, %1194
  br i1 %1195, label %1196, label %1214

1196:                                             ; preds = %1188
  br i1 %1183, label %1206, label %1197

1197:                                             ; preds = %1196
  %1198 = shl i64 %1189, 32
  %1199 = add i64 %1198, -4294967296
  %1200 = ashr exact i64 %1199, 32
  %1201 = getelementptr inbounds i32, ptr %7, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1189
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = add nsw i32 %1204, %1202
  store i32 %1205, ptr %1203, align 4, !tbaa !5
  br label %1224

1206:                                             ; preds = %1179, %1196
  %1207 = phi i32 [ %1191, %1196 ], [ %1180, %1179 ]
  %1208 = phi ptr [ %1190, %1196 ], [ %4, %1179 ]
  %1209 = phi i64 [ %1189, %1196 ], [ 0, %1179 ]
  %1210 = add nsw i32 %1207, 1
  store i32 %1210, ptr %1208, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %7, i64 %1209
  %1212 = load i32, ptr %1211, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %6, i64 %1209
  br label %1224

1214:                                             ; preds = %1188
  %1215 = icmp eq i32 %1191, %1194
  br i1 %1215, label %1216, label %1222

1216:                                             ; preds = %1214
  store i32 0, ptr %1190, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %8, i64 %1189
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1189
  store i32 %1218, ptr %1219, align 4, !tbaa !5
  %1220 = add nuw nsw i64 %1189, 1
  %1221 = icmp eq i64 %1220, %948
  br i1 %1221, label %1229, label %1188, !llvm.loop !1342

1222:                                             ; preds = %1184, %1214
  %1223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1224:                                             ; preds = %1197, %1206
  %1225 = phi ptr [ %1213, %1206 ], [ %1190, %1197 ]
  %1226 = phi i32 [ %1212, %1206 ], [ 1, %1197 ]
  %1227 = load i32, ptr %1225, align 4, !tbaa !5
  %1228 = add nsw i32 %1227, %1226
  store i32 %1228, ptr %1225, align 4, !tbaa !5
  br label %1229

1229:                                             ; preds = %1216, %1224, %1186, %1177
  %1230 = icmp eq i32 %1178, %5
  br i1 %1230, label %5477, label %1092, !llvm.loop !1343

1231:                                             ; preds = %638
  %1232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1963, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

1233:                                             ; preds = %18
  %1234 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1235 = load ptr, ptr %1234, align 8, !tbaa !9
  %1236 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1237 = load ptr, ptr %1236, align 8, !tbaa !9
  %1238 = load double, ptr %1235, align 8, !tbaa !18
  %1239 = fptosi double %1238 to i8
  store i8 %1239, ptr %1237, align 1, !tbaa !11
  %1240 = icmp eq i32 %13, 0
  br i1 %1240, label %1241, label %1246

1241:                                             ; preds = %1233
  %1242 = load double, ptr %1235, align 8, !tbaa !18
  %1243 = fptosi double %1242 to i8
  %1244 = icmp sgt i8 %1239, %1243
  br i1 %1244, label %1245, label %5477

1245:                                             ; preds = %1241
  store i8 %1243, ptr %1237, align 1, !tbaa !11
  br label %5477

1246:                                             ; preds = %1233
  switch i32 %1, label %1839 [
    i32 1, label %1247
    i32 0, label %1545
  ]

1247:                                             ; preds = %1246
  %1248 = getelementptr inbounds i32, ptr %3, i64 %19
  %1249 = load i32, ptr %1248, align 4, !tbaa !5
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp sgt i32 %5, 0
  br i1 %1250, label %1261, label %1252

1252:                                             ; preds = %1247
  br i1 %1251, label %1253, label %5477

1253:                                             ; preds = %1252
  %1254 = icmp sgt i32 %13, 1
  %1255 = icmp sgt i32 %13, 0
  %1256 = add i32 %13, -2
  %1257 = zext i32 %1256 to i64
  %1258 = zext i32 %13 to i64
  %1259 = add nuw i32 %5, 1
  %1260 = icmp eq i32 %13, 1
  br label %1406

1261:                                             ; preds = %1247
  br i1 %1251, label %1262, label %5477

1262:                                             ; preds = %1261
  %1263 = icmp sgt i32 %13, 1
  %1264 = icmp sgt i32 %13, 0
  %1265 = add i32 %13, -2
  %1266 = zext i32 %1265 to i64
  %1267 = zext i32 %13 to i64
  %1268 = add nuw i32 %5, 1
  %1269 = icmp eq i32 %13, 1
  br label %1270

1270:                                             ; preds = %1262, %1404
  %1271 = phi i32 [ 0, %1262 ], [ %1356, %1404 ]
  %1272 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1273, label %1342

1273:                                             ; preds = %1270, %1332
  %1274 = phi i32 [ %1341, %1332 ], [ 0, %1270 ]
  %1275 = phi i64 [ %1283, %1332 ], [ %1267, %1270 ]
  %1276 = phi i64 [ %1340, %1332 ], [ %1266, %1270 ]
  %1277 = phi i32 [ %1338, %1332 ], [ %1272, %1270 ]
  %1278 = sub i32 %1265, %1274
  %1279 = tail call i32 @llvm.smin.i32(i32 %1278, i32 0)
  %1280 = sub i32 %1278, %1279
  %1281 = zext i32 %1280 to i64
  %1282 = add nuw nsw i64 %1281, 1
  %1283 = add nsw i64 %1275, -1
  %1284 = icmp ult i32 %1280, 31
  br i1 %1284, label %1320, label %1285

1285:                                             ; preds = %1273
  %1286 = and i64 %1282, 8589934560
  %1287 = sub i64 %1276, %1286
  br label %1288

1288:                                             ; preds = %1288, %1285
  %1289 = phi i64 [ 0, %1285 ], [ %1312, %1288 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1308, %1288 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1309, %1288 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1310, %1288 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1285 ], [ %1311, %1288 ]
  %1294 = sub i64 %1276, %1289
  %1295 = getelementptr inbounds i32, ptr %9, i64 %1294
  %1296 = getelementptr inbounds i32, ptr %1295, i64 -7
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1295, i64 -15
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1295, i64 -23
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1295, i64 -31
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = mul <8 x i32> %1298, %1290
  %1309 = mul <8 x i32> %1301, %1291
  %1310 = mul <8 x i32> %1304, %1292
  %1311 = mul <8 x i32> %1307, %1293
  %1312 = add nuw i64 %1289, 32
  %1313 = icmp eq i64 %1312, %1286
  br i1 %1313, label %1314, label %1288, !llvm.loop !1344

1314:                                             ; preds = %1288
  %1315 = mul <8 x i32> %1309, %1308
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = mul <8 x i32> %1311, %1316
  %1318 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1317)
  %1319 = icmp eq i64 %1282, %1286
  br i1 %1319, label %1332, label %1320

1320:                                             ; preds = %1273, %1314
  %1321 = phi i64 [ %1276, %1273 ], [ %1287, %1314 ]
  %1322 = phi i32 [ 1, %1273 ], [ %1318, %1314 ]
  br label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1329, %1323 ], [ %1321, %1320 ]
  %1325 = phi i32 [ %1328, %1323 ], [ %1322, %1320 ]
  %1326 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1327 = load i32, ptr %1326, align 4, !tbaa !5
  %1328 = mul nsw i32 %1327, %1325
  %1329 = add nsw i64 %1324, -1
  %1330 = trunc i64 %1324 to i32
  %1331 = icmp sgt i32 %1330, 0
  br i1 %1331, label %1323, label %1332, !llvm.loop !1345

1332:                                             ; preds = %1323, %1314
  %1333 = phi i32 [ %1318, %1314 ], [ %1328, %1323 ]
  %1334 = and i64 %1283, 4294967295
  %1335 = getelementptr inbounds i32, ptr %6, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1333
  %1338 = add nsw i32 %1337, %1277
  %1339 = icmp sgt i64 %1275, 2
  %1340 = add nsw i64 %1276, -1
  %1341 = add i32 %1274, 1
  br i1 %1339, label %1273, label %1342, !llvm.loop !1346

1342:                                             ; preds = %1332, %1270
  %1343 = phi i32 [ %1272, %1270 ], [ %1338, %1332 ]
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds double, ptr %2, i64 %1344
  %1346 = load double, ptr %1345, align 8, !tbaa !18
  %1347 = getelementptr inbounds double, ptr %1235, i64 %1344
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = fptosi double %1348 to i8
  %1350 = fcmp fast ueq double %1346, 0.000000e+00
  br i1 %1350, label %1355, label %1351

1351:                                             ; preds = %1342
  %1352 = load i8, ptr %1237, align 1, !tbaa !11
  %1353 = icmp sgt i8 %1352, %1349
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  store i8 %1349, ptr %1237, align 1, !tbaa !11
  br label %1355

1355:                                             ; preds = %1351, %1354, %1342
  %1356 = add nuw nsw i32 %1271, 1
  br i1 %1264, label %1357, label %1404

1357:                                             ; preds = %1355
  %1358 = load i32, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %12, align 4, !tbaa !5
  %1360 = add nsw i32 %1359, -1
  %1361 = icmp slt i32 %1358, %1360
  br i1 %1361, label %1381, label %1362

1362:                                             ; preds = %1357
  %1363 = icmp eq i32 %1358, %1360
  br i1 %1363, label %1364, label %1397

1364:                                             ; preds = %1362
  store i32 0, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1365, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1404, label %1366

1366:                                             ; preds = %1364, %1391
  %1367 = phi i64 [ %1395, %1391 ], [ 1, %1364 ]
  %1368 = getelementptr inbounds i32, ptr %4, i64 %1367
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %12, i64 %1367
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = add nsw i32 %1371, -1
  %1373 = icmp slt i32 %1369, %1372
  br i1 %1373, label %1374, label %1389

1374:                                             ; preds = %1366
  br i1 %1361, label %1381, label %1375

1375:                                             ; preds = %1374
  %1376 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1367
  %1379 = load i32, ptr %1378, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1377
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  br label %1399

1381:                                             ; preds = %1357, %1374
  %1382 = phi i32 [ %1369, %1374 ], [ %1358, %1357 ]
  %1383 = phi ptr [ %1368, %1374 ], [ %4, %1357 ]
  %1384 = phi i64 [ %1367, %1374 ], [ 0, %1357 ]
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1384
  br label %1399

1389:                                             ; preds = %1366
  %1390 = icmp eq i32 %1369, %1372
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1389
  store i32 0, ptr %1368, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %8, i64 %1367
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1367
  store i32 %1393, ptr %1394, align 4, !tbaa !5
  %1395 = add nuw nsw i64 %1367, 1
  %1396 = icmp eq i64 %1395, %1267
  br i1 %1396, label %1404, label %1366, !llvm.loop !1347

1397:                                             ; preds = %1362, %1389
  %1398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1399:                                             ; preds = %1375, %1381
  %1400 = phi ptr [ %1388, %1381 ], [ %1368, %1375 ]
  %1401 = phi i32 [ %1387, %1381 ], [ 1, %1375 ]
  %1402 = load i32, ptr %1400, align 4, !tbaa !5
  %1403 = add nsw i32 %1402, %1401
  store i32 %1403, ptr %1400, align 4, !tbaa !5
  br label %1404

1404:                                             ; preds = %1391, %1399, %1364, %1355
  %1405 = icmp eq i32 %1356, %5
  br i1 %1405, label %5477, label %1270, !llvm.loop !1348

1406:                                             ; preds = %1253, %1543
  %1407 = phi i32 [ 0, %1253 ], [ %1492, %1543 ]
  %1408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1409, label %1478

1409:                                             ; preds = %1406, %1468
  %1410 = phi i32 [ %1477, %1468 ], [ 0, %1406 ]
  %1411 = phi i64 [ %1419, %1468 ], [ %1258, %1406 ]
  %1412 = phi i64 [ %1476, %1468 ], [ %1257, %1406 ]
  %1413 = phi i32 [ %1474, %1468 ], [ %1408, %1406 ]
  %1414 = sub i32 %1256, %1410
  %1415 = tail call i32 @llvm.smin.i32(i32 %1414, i32 0)
  %1416 = sub i32 %1414, %1415
  %1417 = zext i32 %1416 to i64
  %1418 = add nuw nsw i64 %1417, 1
  %1419 = add nsw i64 %1411, -1
  %1420 = icmp ult i32 %1416, 31
  br i1 %1420, label %1456, label %1421

1421:                                             ; preds = %1409
  %1422 = and i64 %1418, 8589934560
  %1423 = sub i64 %1412, %1422
  br label %1424

1424:                                             ; preds = %1424, %1421
  %1425 = phi i64 [ 0, %1421 ], [ %1448, %1424 ]
  %1426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1444, %1424 ]
  %1427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1445, %1424 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1446, %1424 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1421 ], [ %1447, %1424 ]
  %1430 = sub i64 %1412, %1425
  %1431 = getelementptr inbounds i32, ptr %11, i64 %1430
  %1432 = getelementptr inbounds i32, ptr %1431, i64 -7
  %1433 = load <8 x i32>, ptr %1432, align 4, !tbaa !5
  %1434 = shufflevector <8 x i32> %1433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1435 = getelementptr inbounds i32, ptr %1431, i64 -15
  %1436 = load <8 x i32>, ptr %1435, align 4, !tbaa !5
  %1437 = shufflevector <8 x i32> %1436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1438 = getelementptr inbounds i32, ptr %1431, i64 -23
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1431, i64 -31
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = mul <8 x i32> %1434, %1426
  %1445 = mul <8 x i32> %1437, %1427
  %1446 = mul <8 x i32> %1440, %1428
  %1447 = mul <8 x i32> %1443, %1429
  %1448 = add nuw i64 %1425, 32
  %1449 = icmp eq i64 %1448, %1422
  br i1 %1449, label %1450, label %1424, !llvm.loop !1349

1450:                                             ; preds = %1424
  %1451 = mul <8 x i32> %1445, %1444
  %1452 = mul <8 x i32> %1446, %1451
  %1453 = mul <8 x i32> %1447, %1452
  %1454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1453)
  %1455 = icmp eq i64 %1418, %1422
  br i1 %1455, label %1468, label %1456

1456:                                             ; preds = %1409, %1450
  %1457 = phi i64 [ %1412, %1409 ], [ %1423, %1450 ]
  %1458 = phi i32 [ 1, %1409 ], [ %1454, %1450 ]
  br label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1465, %1459 ], [ %1457, %1456 ]
  %1461 = phi i32 [ %1464, %1459 ], [ %1458, %1456 ]
  %1462 = getelementptr inbounds i32, ptr %11, i64 %1460
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = mul nsw i32 %1463, %1461
  %1465 = add nsw i64 %1460, -1
  %1466 = trunc i64 %1460 to i32
  %1467 = icmp sgt i32 %1466, 0
  br i1 %1467, label %1459, label %1468, !llvm.loop !1350

1468:                                             ; preds = %1459, %1450
  %1469 = phi i32 [ %1454, %1450 ], [ %1464, %1459 ]
  %1470 = and i64 %1419, 4294967295
  %1471 = getelementptr inbounds i32, ptr %6, i64 %1470
  %1472 = load i32, ptr %1471, align 4, !tbaa !5
  %1473 = mul nsw i32 %1472, %1469
  %1474 = add nsw i32 %1473, %1413
  %1475 = icmp sgt i64 %1411, 2
  %1476 = add nsw i64 %1412, -1
  %1477 = add i32 %1410, 1
  br i1 %1475, label %1409, label %1478, !llvm.loop !1351

1478:                                             ; preds = %1468, %1406
  %1479 = phi i32 [ %1408, %1406 ], [ %1474, %1468 ]
  %1480 = icmp slt i32 %1479, %5
  br i1 %1480, label %1483, label %1481

1481:                                             ; preds = %1478
  %1482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1483:                                             ; preds = %1478
  %1484 = sext i32 %1479 to i64
  %1485 = getelementptr inbounds double, ptr %1235, i64 %1484
  %1486 = load double, ptr %1485, align 8, !tbaa !18
  %1487 = fptosi double %1486 to i8
  %1488 = load i8, ptr %1237, align 1, !tbaa !11
  %1489 = icmp sgt i8 %1488, %1487
  br i1 %1489, label %1490, label %1491

1490:                                             ; preds = %1483
  store i8 %1487, ptr %1237, align 1, !tbaa !11
  br label %1491

1491:                                             ; preds = %1483, %1490
  %1492 = add nuw nsw i32 %1407, 1
  br i1 %1255, label %1493, label %1543

1493:                                             ; preds = %1491
  %1494 = load i32, ptr %4, align 4, !tbaa !5
  %1495 = load i32, ptr %12, align 4, !tbaa !5
  %1496 = add nsw i32 %1495, -1
  %1497 = icmp slt i32 %1494, %1496
  br i1 %1497, label %1520, label %1498

1498:                                             ; preds = %1493
  %1499 = icmp eq i32 %1494, %1496
  br i1 %1499, label %1500, label %1536

1500:                                             ; preds = %1498
  store i32 0, ptr %4, align 4, !tbaa !5
  %1501 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1501, ptr %6, align 4, !tbaa !5
  br i1 %1260, label %1543, label %1502

1502:                                             ; preds = %1500, %1530
  %1503 = phi i64 [ %1534, %1530 ], [ 1, %1500 ]
  %1504 = getelementptr inbounds i32, ptr %4, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %12, i64 %1503
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = add nsw i32 %1507, -1
  %1509 = icmp slt i32 %1505, %1508
  br i1 %1509, label %1510, label %1528

1510:                                             ; preds = %1502
  br i1 %1497, label %1520, label %1511

1511:                                             ; preds = %1510
  %1512 = shl i64 %1503, 32
  %1513 = add i64 %1512, -4294967296
  %1514 = ashr exact i64 %1513, 32
  %1515 = getelementptr inbounds i32, ptr %7, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !5
  %1517 = getelementptr inbounds i32, ptr %6, i64 %1503
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = add nsw i32 %1518, %1516
  store i32 %1519, ptr %1517, align 4, !tbaa !5
  br label %1538

1520:                                             ; preds = %1493, %1510
  %1521 = phi i32 [ %1505, %1510 ], [ %1494, %1493 ]
  %1522 = phi ptr [ %1504, %1510 ], [ %4, %1493 ]
  %1523 = phi i64 [ %1503, %1510 ], [ 0, %1493 ]
  %1524 = add nsw i32 %1521, 1
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1523
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1523
  br label %1538

1528:                                             ; preds = %1502
  %1529 = icmp eq i32 %1505, %1508
  br i1 %1529, label %1530, label %1536

1530:                                             ; preds = %1528
  store i32 0, ptr %1504, align 4, !tbaa !5
  %1531 = getelementptr inbounds i32, ptr %8, i64 %1503
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %6, i64 %1503
  store i32 %1532, ptr %1533, align 4, !tbaa !5
  %1534 = add nuw nsw i64 %1503, 1
  %1535 = icmp eq i64 %1534, %1258
  br i1 %1535, label %1543, label %1502, !llvm.loop !1352

1536:                                             ; preds = %1498, %1528
  %1537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1538:                                             ; preds = %1511, %1520
  %1539 = phi ptr [ %1527, %1520 ], [ %1504, %1511 ]
  %1540 = phi i32 [ %1526, %1520 ], [ 1, %1511 ]
  %1541 = load i32, ptr %1539, align 4, !tbaa !5
  %1542 = add nsw i32 %1541, %1540
  store i32 %1542, ptr %1539, align 4, !tbaa !5
  br label %1543

1543:                                             ; preds = %1530, %1538, %1500, %1491
  %1544 = icmp eq i32 %1492, %5
  br i1 %1544, label %5477, label %1406, !llvm.loop !1353

1545:                                             ; preds = %1246
  %1546 = getelementptr inbounds i32, ptr %3, i64 %19
  %1547 = load i32, ptr %1546, align 4, !tbaa !5
  %1548 = icmp eq i32 %1547, 0
  %1549 = icmp sgt i32 %5, 0
  br i1 %1548, label %1559, label %1550

1550:                                             ; preds = %1545
  br i1 %1549, label %1551, label %5477

1551:                                             ; preds = %1550
  %1552 = icmp sgt i32 %13, 1
  %1553 = icmp sgt i32 %13, 0
  %1554 = add i32 %13, -2
  %1555 = zext i32 %1554 to i64
  %1556 = zext i32 %13 to i64
  %1557 = add nuw i32 %5, 1
  %1558 = icmp eq i32 %13, 1
  br label %1700

1559:                                             ; preds = %1545
  br i1 %1549, label %1560, label %5477

1560:                                             ; preds = %1559
  %1561 = icmp sgt i32 %13, 1
  %1562 = icmp sgt i32 %13, 0
  %1563 = add i32 %13, -2
  %1564 = zext i32 %1563 to i64
  %1565 = zext i32 %13 to i64
  %1566 = add nuw i32 %5, 1
  %1567 = icmp eq i32 %13, 1
  br label %1568

1568:                                             ; preds = %1560, %1698
  %1569 = phi i32 [ 0, %1560 ], [ %1650, %1698 ]
  %1570 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1561, label %1571, label %1640

1571:                                             ; preds = %1568, %1630
  %1572 = phi i32 [ %1639, %1630 ], [ 0, %1568 ]
  %1573 = phi i64 [ %1581, %1630 ], [ %1565, %1568 ]
  %1574 = phi i64 [ %1638, %1630 ], [ %1564, %1568 ]
  %1575 = phi i32 [ %1636, %1630 ], [ %1570, %1568 ]
  %1576 = sub i32 %1563, %1572
  %1577 = tail call i32 @llvm.smin.i32(i32 %1576, i32 0)
  %1578 = sub i32 %1576, %1577
  %1579 = zext i32 %1578 to i64
  %1580 = add nuw nsw i64 %1579, 1
  %1581 = add nsw i64 %1573, -1
  %1582 = icmp ult i32 %1578, 31
  br i1 %1582, label %1618, label %1583

1583:                                             ; preds = %1571
  %1584 = and i64 %1580, 8589934560
  %1585 = sub i64 %1574, %1584
  br label %1586

1586:                                             ; preds = %1586, %1583
  %1587 = phi i64 [ 0, %1583 ], [ %1610, %1586 ]
  %1588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1606, %1586 ]
  %1589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1607, %1586 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1608, %1586 ]
  %1591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1583 ], [ %1609, %1586 ]
  %1592 = sub i64 %1574, %1587
  %1593 = getelementptr inbounds i32, ptr %9, i64 %1592
  %1594 = getelementptr inbounds i32, ptr %1593, i64 -7
  %1595 = load <8 x i32>, ptr %1594, align 4, !tbaa !5
  %1596 = shufflevector <8 x i32> %1595, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1597 = getelementptr inbounds i32, ptr %1593, i64 -15
  %1598 = load <8 x i32>, ptr %1597, align 4, !tbaa !5
  %1599 = shufflevector <8 x i32> %1598, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1600 = getelementptr inbounds i32, ptr %1593, i64 -23
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1593, i64 -31
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = mul <8 x i32> %1596, %1588
  %1607 = mul <8 x i32> %1599, %1589
  %1608 = mul <8 x i32> %1602, %1590
  %1609 = mul <8 x i32> %1605, %1591
  %1610 = add nuw i64 %1587, 32
  %1611 = icmp eq i64 %1610, %1584
  br i1 %1611, label %1612, label %1586, !llvm.loop !1354

1612:                                             ; preds = %1586
  %1613 = mul <8 x i32> %1607, %1606
  %1614 = mul <8 x i32> %1608, %1613
  %1615 = mul <8 x i32> %1609, %1614
  %1616 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1615)
  %1617 = icmp eq i64 %1580, %1584
  br i1 %1617, label %1630, label %1618

1618:                                             ; preds = %1571, %1612
  %1619 = phi i64 [ %1574, %1571 ], [ %1585, %1612 ]
  %1620 = phi i32 [ 1, %1571 ], [ %1616, %1612 ]
  br label %1621

1621:                                             ; preds = %1618, %1621
  %1622 = phi i64 [ %1627, %1621 ], [ %1619, %1618 ]
  %1623 = phi i32 [ %1626, %1621 ], [ %1620, %1618 ]
  %1624 = getelementptr inbounds i32, ptr %9, i64 %1622
  %1625 = load i32, ptr %1624, align 4, !tbaa !5
  %1626 = mul nsw i32 %1625, %1623
  %1627 = add nsw i64 %1622, -1
  %1628 = trunc i64 %1622 to i32
  %1629 = icmp sgt i32 %1628, 0
  br i1 %1629, label %1621, label %1630, !llvm.loop !1355

1630:                                             ; preds = %1621, %1612
  %1631 = phi i32 [ %1616, %1612 ], [ %1626, %1621 ]
  %1632 = and i64 %1581, 4294967295
  %1633 = getelementptr inbounds i32, ptr %6, i64 %1632
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1631
  %1636 = add nsw i32 %1635, %1575
  %1637 = icmp sgt i64 %1573, 2
  %1638 = add nsw i64 %1574, -1
  %1639 = add i32 %1572, 1
  br i1 %1637, label %1571, label %1640, !llvm.loop !1356

1640:                                             ; preds = %1630, %1568
  %1641 = phi i32 [ %1570, %1568 ], [ %1636, %1630 ]
  %1642 = sext i32 %1641 to i64
  %1643 = getelementptr inbounds double, ptr %1235, i64 %1642
  %1644 = load double, ptr %1643, align 8, !tbaa !18
  %1645 = fptosi double %1644 to i8
  %1646 = load i8, ptr %1237, align 1, !tbaa !11
  %1647 = icmp sgt i8 %1646, %1645
  br i1 %1647, label %1648, label %1649

1648:                                             ; preds = %1640
  store i8 %1645, ptr %1237, align 1, !tbaa !11
  br label %1649

1649:                                             ; preds = %1648, %1640
  %1650 = add nuw nsw i32 %1569, 1
  br i1 %1562, label %1651, label %1698

1651:                                             ; preds = %1649
  %1652 = load i32, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %12, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, -1
  %1655 = icmp slt i32 %1652, %1654
  br i1 %1655, label %1675, label %1656

1656:                                             ; preds = %1651
  %1657 = icmp eq i32 %1652, %1654
  br i1 %1657, label %1658, label %1691

1658:                                             ; preds = %1656
  store i32 0, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1659, ptr %6, align 4, !tbaa !5
  br i1 %1567, label %1698, label %1660

1660:                                             ; preds = %1658, %1685
  %1661 = phi i64 [ %1689, %1685 ], [ 1, %1658 ]
  %1662 = getelementptr inbounds i32, ptr %4, i64 %1661
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %12, i64 %1661
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1663, %1666
  br i1 %1667, label %1668, label %1683

1668:                                             ; preds = %1660
  br i1 %1655, label %1675, label %1669

1669:                                             ; preds = %1668
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1661
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1661
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1671
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  br label %1693

1675:                                             ; preds = %1651, %1668
  %1676 = phi i32 [ %1663, %1668 ], [ %1652, %1651 ]
  %1677 = phi ptr [ %1662, %1668 ], [ %4, %1651 ]
  %1678 = phi i64 [ %1661, %1668 ], [ 0, %1651 ]
  %1679 = add nsw i32 %1676, 1
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %7, i64 %1678
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1678
  br label %1693

1683:                                             ; preds = %1660
  %1684 = icmp eq i32 %1663, %1666
  br i1 %1684, label %1685, label %1691

1685:                                             ; preds = %1683
  store i32 0, ptr %1662, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %8, i64 %1661
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1661
  store i32 %1687, ptr %1688, align 4, !tbaa !5
  %1689 = add nuw nsw i64 %1661, 1
  %1690 = icmp eq i64 %1689, %1565
  br i1 %1690, label %1698, label %1660, !llvm.loop !1357

1691:                                             ; preds = %1656, %1683
  %1692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1693:                                             ; preds = %1669, %1675
  %1694 = phi ptr [ %1682, %1675 ], [ %1662, %1669 ]
  %1695 = phi i32 [ %1681, %1675 ], [ 1, %1669 ]
  %1696 = load i32, ptr %1694, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, %1695
  store i32 %1697, ptr %1694, align 4, !tbaa !5
  br label %1698

1698:                                             ; preds = %1685, %1693, %1658, %1649
  %1699 = icmp eq i32 %1650, %5
  br i1 %1699, label %5477, label %1568, !llvm.loop !1358

1700:                                             ; preds = %1551, %1837
  %1701 = phi i32 [ 0, %1551 ], [ %1786, %1837 ]
  %1702 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1703, label %1772

1703:                                             ; preds = %1700, %1762
  %1704 = phi i32 [ %1771, %1762 ], [ 0, %1700 ]
  %1705 = phi i64 [ %1713, %1762 ], [ %1556, %1700 ]
  %1706 = phi i64 [ %1770, %1762 ], [ %1555, %1700 ]
  %1707 = phi i32 [ %1768, %1762 ], [ %1702, %1700 ]
  %1708 = sub i32 %1554, %1704
  %1709 = tail call i32 @llvm.smin.i32(i32 %1708, i32 0)
  %1710 = sub i32 %1708, %1709
  %1711 = zext i32 %1710 to i64
  %1712 = add nuw nsw i64 %1711, 1
  %1713 = add nsw i64 %1705, -1
  %1714 = icmp ult i32 %1710, 31
  br i1 %1714, label %1750, label %1715

1715:                                             ; preds = %1703
  %1716 = and i64 %1712, 8589934560
  %1717 = sub i64 %1706, %1716
  br label %1718

1718:                                             ; preds = %1718, %1715
  %1719 = phi i64 [ 0, %1715 ], [ %1742, %1718 ]
  %1720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1738, %1718 ]
  %1721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1739, %1718 ]
  %1722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1740, %1718 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1715 ], [ %1741, %1718 ]
  %1724 = sub i64 %1706, %1719
  %1725 = getelementptr inbounds i32, ptr %11, i64 %1724
  %1726 = getelementptr inbounds i32, ptr %1725, i64 -7
  %1727 = load <8 x i32>, ptr %1726, align 4, !tbaa !5
  %1728 = shufflevector <8 x i32> %1727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1729 = getelementptr inbounds i32, ptr %1725, i64 -15
  %1730 = load <8 x i32>, ptr %1729, align 4, !tbaa !5
  %1731 = shufflevector <8 x i32> %1730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1732 = getelementptr inbounds i32, ptr %1725, i64 -23
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1725, i64 -31
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = mul <8 x i32> %1728, %1720
  %1739 = mul <8 x i32> %1731, %1721
  %1740 = mul <8 x i32> %1734, %1722
  %1741 = mul <8 x i32> %1737, %1723
  %1742 = add nuw i64 %1719, 32
  %1743 = icmp eq i64 %1742, %1716
  br i1 %1743, label %1744, label %1718, !llvm.loop !1359

1744:                                             ; preds = %1718
  %1745 = mul <8 x i32> %1739, %1738
  %1746 = mul <8 x i32> %1740, %1745
  %1747 = mul <8 x i32> %1741, %1746
  %1748 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1747)
  %1749 = icmp eq i64 %1712, %1716
  br i1 %1749, label %1762, label %1750

1750:                                             ; preds = %1703, %1744
  %1751 = phi i64 [ %1706, %1703 ], [ %1717, %1744 ]
  %1752 = phi i32 [ 1, %1703 ], [ %1748, %1744 ]
  br label %1753

1753:                                             ; preds = %1750, %1753
  %1754 = phi i64 [ %1759, %1753 ], [ %1751, %1750 ]
  %1755 = phi i32 [ %1758, %1753 ], [ %1752, %1750 ]
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1754
  %1757 = load i32, ptr %1756, align 4, !tbaa !5
  %1758 = mul nsw i32 %1757, %1755
  %1759 = add nsw i64 %1754, -1
  %1760 = trunc i64 %1754 to i32
  %1761 = icmp sgt i32 %1760, 0
  br i1 %1761, label %1753, label %1762, !llvm.loop !1360

1762:                                             ; preds = %1753, %1744
  %1763 = phi i32 [ %1748, %1744 ], [ %1758, %1753 ]
  %1764 = and i64 %1713, 4294967295
  %1765 = getelementptr inbounds i32, ptr %6, i64 %1764
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1763
  %1768 = add nsw i32 %1767, %1707
  %1769 = icmp sgt i64 %1705, 2
  %1770 = add nsw i64 %1706, -1
  %1771 = add i32 %1704, 1
  br i1 %1769, label %1703, label %1772, !llvm.loop !1361

1772:                                             ; preds = %1762, %1700
  %1773 = phi i32 [ %1702, %1700 ], [ %1768, %1762 ]
  %1774 = icmp slt i32 %1773, %5
  br i1 %1774, label %1777, label %1775

1775:                                             ; preds = %1772
  %1776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

1777:                                             ; preds = %1772
  %1778 = sext i32 %1773 to i64
  %1779 = getelementptr inbounds double, ptr %1235, i64 %1778
  %1780 = load double, ptr %1779, align 8, !tbaa !18
  %1781 = fptosi double %1780 to i8
  %1782 = load i8, ptr %1237, align 1, !tbaa !11
  %1783 = icmp sgt i8 %1782, %1781
  br i1 %1783, label %1784, label %1785

1784:                                             ; preds = %1777
  store i8 %1781, ptr %1237, align 1, !tbaa !11
  br label %1785

1785:                                             ; preds = %1784, %1777
  %1786 = add nuw nsw i32 %1701, 1
  br i1 %1553, label %1787, label %1837

1787:                                             ; preds = %1785
  %1788 = load i32, ptr %4, align 4, !tbaa !5
  %1789 = load i32, ptr %12, align 4, !tbaa !5
  %1790 = add nsw i32 %1789, -1
  %1791 = icmp slt i32 %1788, %1790
  br i1 %1791, label %1814, label %1792

1792:                                             ; preds = %1787
  %1793 = icmp eq i32 %1788, %1790
  br i1 %1793, label %1794, label %1830

1794:                                             ; preds = %1792
  store i32 0, ptr %4, align 4, !tbaa !5
  %1795 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1795, ptr %6, align 4, !tbaa !5
  br i1 %1558, label %1837, label %1796

1796:                                             ; preds = %1794, %1824
  %1797 = phi i64 [ %1828, %1824 ], [ 1, %1794 ]
  %1798 = getelementptr inbounds i32, ptr %4, i64 %1797
  %1799 = load i32, ptr %1798, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %12, i64 %1797
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1799, %1802
  br i1 %1803, label %1804, label %1822

1804:                                             ; preds = %1796
  br i1 %1791, label %1814, label %1805

1805:                                             ; preds = %1804
  %1806 = shl i64 %1797, 32
  %1807 = add i64 %1806, -4294967296
  %1808 = ashr exact i64 %1807, 32
  %1809 = getelementptr inbounds i32, ptr %7, i64 %1808
  %1810 = load i32, ptr %1809, align 4, !tbaa !5
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1797
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, %1810
  store i32 %1813, ptr %1811, align 4, !tbaa !5
  br label %1832

1814:                                             ; preds = %1787, %1804
  %1815 = phi i32 [ %1799, %1804 ], [ %1788, %1787 ]
  %1816 = phi ptr [ %1798, %1804 ], [ %4, %1787 ]
  %1817 = phi i64 [ %1797, %1804 ], [ 0, %1787 ]
  %1818 = add nsw i32 %1815, 1
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %7, i64 %1817
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = getelementptr inbounds i32, ptr %6, i64 %1817
  br label %1832

1822:                                             ; preds = %1796
  %1823 = icmp eq i32 %1799, %1802
  br i1 %1823, label %1824, label %1830

1824:                                             ; preds = %1822
  store i32 0, ptr %1798, align 4, !tbaa !5
  %1825 = getelementptr inbounds i32, ptr %8, i64 %1797
  %1826 = load i32, ptr %1825, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %6, i64 %1797
  store i32 %1826, ptr %1827, align 4, !tbaa !5
  %1828 = add nuw nsw i64 %1797, 1
  %1829 = icmp eq i64 %1828, %1556
  br i1 %1829, label %1837, label %1796, !llvm.loop !1362

1830:                                             ; preds = %1792, %1822
  %1831 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

1832:                                             ; preds = %1805, %1814
  %1833 = phi ptr [ %1821, %1814 ], [ %1798, %1805 ]
  %1834 = phi i32 [ %1820, %1814 ], [ 1, %1805 ]
  %1835 = load i32, ptr %1833, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1834
  store i32 %1836, ptr %1833, align 4, !tbaa !5
  br label %1837

1837:                                             ; preds = %1824, %1832, %1794, %1785
  %1838 = icmp eq i32 %1786, %5
  br i1 %1838, label %5477, label %1700, !llvm.loop !1363

1839:                                             ; preds = %1246
  %1840 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1967, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

1841:                                             ; preds = %18
  %1842 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1843 = load ptr, ptr %1842, align 8, !tbaa !9
  %1844 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1845 = load ptr, ptr %1844, align 8, !tbaa !9
  %1846 = load double, ptr %1843, align 8, !tbaa !18
  %1847 = fptosi double %1846 to i16
  store i16 %1847, ptr %1845, align 2, !tbaa !78
  %1848 = icmp eq i32 %13, 0
  br i1 %1848, label %5477, label %1849

1849:                                             ; preds = %1841
  switch i32 %1, label %2446 [
    i32 1, label %1850
    i32 0, label %2150
  ]

1850:                                             ; preds = %1849
  %1851 = getelementptr inbounds i32, ptr %3, i64 %19
  %1852 = load i32, ptr %1851, align 4, !tbaa !5
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp sgt i32 %5, 0
  br i1 %1853, label %1864, label %1855

1855:                                             ; preds = %1850
  br i1 %1854, label %1856, label %5477

1856:                                             ; preds = %1855
  %1857 = icmp sgt i32 %13, 1
  %1858 = icmp sgt i32 %13, 0
  %1859 = add i32 %13, -2
  %1860 = zext i32 %1859 to i64
  %1861 = zext i32 %13 to i64
  %1862 = add nuw i32 %5, 1
  %1863 = icmp eq i32 %13, 1
  br label %2010

1864:                                             ; preds = %1850
  br i1 %1854, label %1865, label %5477

1865:                                             ; preds = %1864
  %1866 = icmp sgt i32 %13, 1
  %1867 = icmp sgt i32 %13, 0
  %1868 = add i32 %13, -2
  %1869 = zext i32 %1868 to i64
  %1870 = zext i32 %13 to i64
  %1871 = add nuw i32 %5, 1
  %1872 = icmp eq i32 %13, 1
  br label %1873

1873:                                             ; preds = %1865, %2008
  %1874 = phi i16 [ %1847, %1865 ], [ %1959, %2008 ]
  %1875 = phi i32 [ 0, %1865 ], [ %1960, %2008 ]
  %1876 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1866, label %1877, label %1946

1877:                                             ; preds = %1873, %1936
  %1878 = phi i32 [ %1945, %1936 ], [ 0, %1873 ]
  %1879 = phi i64 [ %1887, %1936 ], [ %1870, %1873 ]
  %1880 = phi i64 [ %1944, %1936 ], [ %1869, %1873 ]
  %1881 = phi i32 [ %1942, %1936 ], [ %1876, %1873 ]
  %1882 = sub i32 %1868, %1878
  %1883 = tail call i32 @llvm.smin.i32(i32 %1882, i32 0)
  %1884 = sub i32 %1882, %1883
  %1885 = zext i32 %1884 to i64
  %1886 = add nuw nsw i64 %1885, 1
  %1887 = add nsw i64 %1879, -1
  %1888 = icmp ult i32 %1884, 31
  br i1 %1888, label %1924, label %1889

1889:                                             ; preds = %1877
  %1890 = and i64 %1886, 8589934560
  %1891 = sub i64 %1880, %1890
  br label %1892

1892:                                             ; preds = %1892, %1889
  %1893 = phi i64 [ 0, %1889 ], [ %1916, %1892 ]
  %1894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1912, %1892 ]
  %1895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1913, %1892 ]
  %1896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1914, %1892 ]
  %1897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1889 ], [ %1915, %1892 ]
  %1898 = sub i64 %1880, %1893
  %1899 = getelementptr inbounds i32, ptr %9, i64 %1898
  %1900 = getelementptr inbounds i32, ptr %1899, i64 -7
  %1901 = load <8 x i32>, ptr %1900, align 4, !tbaa !5
  %1902 = shufflevector <8 x i32> %1901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1903 = getelementptr inbounds i32, ptr %1899, i64 -15
  %1904 = load <8 x i32>, ptr %1903, align 4, !tbaa !5
  %1905 = shufflevector <8 x i32> %1904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1906 = getelementptr inbounds i32, ptr %1899, i64 -23
  %1907 = load <8 x i32>, ptr %1906, align 4, !tbaa !5
  %1908 = shufflevector <8 x i32> %1907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1909 = getelementptr inbounds i32, ptr %1899, i64 -31
  %1910 = load <8 x i32>, ptr %1909, align 4, !tbaa !5
  %1911 = shufflevector <8 x i32> %1910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1912 = mul <8 x i32> %1902, %1894
  %1913 = mul <8 x i32> %1905, %1895
  %1914 = mul <8 x i32> %1908, %1896
  %1915 = mul <8 x i32> %1911, %1897
  %1916 = add nuw i64 %1893, 32
  %1917 = icmp eq i64 %1916, %1890
  br i1 %1917, label %1918, label %1892, !llvm.loop !1364

1918:                                             ; preds = %1892
  %1919 = mul <8 x i32> %1913, %1912
  %1920 = mul <8 x i32> %1914, %1919
  %1921 = mul <8 x i32> %1915, %1920
  %1922 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1921)
  %1923 = icmp eq i64 %1886, %1890
  br i1 %1923, label %1936, label %1924

1924:                                             ; preds = %1877, %1918
  %1925 = phi i64 [ %1880, %1877 ], [ %1891, %1918 ]
  %1926 = phi i32 [ 1, %1877 ], [ %1922, %1918 ]
  br label %1927

1927:                                             ; preds = %1924, %1927
  %1928 = phi i64 [ %1933, %1927 ], [ %1925, %1924 ]
  %1929 = phi i32 [ %1932, %1927 ], [ %1926, %1924 ]
  %1930 = getelementptr inbounds i32, ptr %9, i64 %1928
  %1931 = load i32, ptr %1930, align 4, !tbaa !5
  %1932 = mul nsw i32 %1931, %1929
  %1933 = add nsw i64 %1928, -1
  %1934 = trunc i64 %1928 to i32
  %1935 = icmp sgt i32 %1934, 0
  br i1 %1935, label %1927, label %1936, !llvm.loop !1365

1936:                                             ; preds = %1927, %1918
  %1937 = phi i32 [ %1922, %1918 ], [ %1932, %1927 ]
  %1938 = and i64 %1887, 4294967295
  %1939 = getelementptr inbounds i32, ptr %6, i64 %1938
  %1940 = load i32, ptr %1939, align 4, !tbaa !5
  %1941 = mul nsw i32 %1940, %1937
  %1942 = add nsw i32 %1941, %1881
  %1943 = icmp sgt i64 %1879, 2
  %1944 = add nsw i64 %1880, -1
  %1945 = add i32 %1878, 1
  br i1 %1943, label %1877, label %1946, !llvm.loop !1366

1946:                                             ; preds = %1936, %1873
  %1947 = phi i32 [ %1876, %1873 ], [ %1942, %1936 ]
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds double, ptr %2, i64 %1948
  %1950 = load double, ptr %1949, align 8, !tbaa !18
  %1951 = getelementptr inbounds double, ptr %1843, i64 %1948
  %1952 = load double, ptr %1951, align 8, !tbaa !18
  %1953 = fptosi double %1952 to i16
  %1954 = fcmp fast one double %1950, 0.000000e+00
  %1955 = icmp sgt i16 %1874, %1953
  %1956 = select i1 %1954, i1 %1955, i1 false
  br i1 %1956, label %1957, label %1958

1957:                                             ; preds = %1946
  store i16 %1953, ptr %1845, align 2, !tbaa !78
  br label %1958

1958:                                             ; preds = %1957, %1946
  %1959 = phi i16 [ %1953, %1957 ], [ %1874, %1946 ]
  %1960 = add nuw nsw i32 %1875, 1
  br i1 %1867, label %1961, label %2008

1961:                                             ; preds = %1958
  %1962 = load i32, ptr %4, align 4, !tbaa !5
  %1963 = load i32, ptr %12, align 4, !tbaa !5
  %1964 = add nsw i32 %1963, -1
  %1965 = icmp slt i32 %1962, %1964
  br i1 %1965, label %1985, label %1966

1966:                                             ; preds = %1961
  %1967 = icmp eq i32 %1962, %1964
  br i1 %1967, label %1968, label %2001

1968:                                             ; preds = %1966
  store i32 0, ptr %4, align 4, !tbaa !5
  %1969 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1969, ptr %6, align 4, !tbaa !5
  br i1 %1872, label %2008, label %1970

1970:                                             ; preds = %1968, %1995
  %1971 = phi i64 [ %1999, %1995 ], [ 1, %1968 ]
  %1972 = getelementptr inbounds i32, ptr %4, i64 %1971
  %1973 = load i32, ptr %1972, align 4, !tbaa !5
  %1974 = getelementptr inbounds i32, ptr %12, i64 %1971
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = add nsw i32 %1975, -1
  %1977 = icmp slt i32 %1973, %1976
  br i1 %1977, label %1978, label %1993

1978:                                             ; preds = %1970
  br i1 %1965, label %1985, label %1979

1979:                                             ; preds = %1978
  %1980 = getelementptr inbounds i32, ptr %7, i64 %1971
  %1981 = load i32, ptr %1980, align 4, !tbaa !5
  %1982 = getelementptr inbounds i32, ptr %6, i64 %1971
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = add nsw i32 %1983, %1981
  store i32 %1984, ptr %1982, align 4, !tbaa !5
  br label %2003

1985:                                             ; preds = %1961, %1978
  %1986 = phi i32 [ %1973, %1978 ], [ %1962, %1961 ]
  %1987 = phi ptr [ %1972, %1978 ], [ %4, %1961 ]
  %1988 = phi i64 [ %1971, %1978 ], [ 0, %1961 ]
  %1989 = add nsw i32 %1986, 1
  store i32 %1989, ptr %1987, align 4, !tbaa !5
  %1990 = getelementptr inbounds i32, ptr %7, i64 %1988
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %6, i64 %1988
  br label %2003

1993:                                             ; preds = %1970
  %1994 = icmp eq i32 %1973, %1976
  br i1 %1994, label %1995, label %2001

1995:                                             ; preds = %1993
  store i32 0, ptr %1972, align 4, !tbaa !5
  %1996 = getelementptr inbounds i32, ptr %8, i64 %1971
  %1997 = load i32, ptr %1996, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %6, i64 %1971
  store i32 %1997, ptr %1998, align 4, !tbaa !5
  %1999 = add nuw nsw i64 %1971, 1
  %2000 = icmp eq i64 %1999, %1870
  br i1 %2000, label %2008, label %1970, !llvm.loop !1367

2001:                                             ; preds = %1966, %1993
  %2002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2003:                                             ; preds = %1979, %1985
  %2004 = phi ptr [ %1992, %1985 ], [ %1972, %1979 ]
  %2005 = phi i32 [ %1991, %1985 ], [ 1, %1979 ]
  %2006 = load i32, ptr %2004, align 4, !tbaa !5
  %2007 = add nsw i32 %2006, %2005
  store i32 %2007, ptr %2004, align 4, !tbaa !5
  br label %2008

2008:                                             ; preds = %1995, %2003, %1968, %1958
  %2009 = icmp eq i32 %1960, %5
  br i1 %2009, label %5477, label %1873, !llvm.loop !1368

2010:                                             ; preds = %1856, %2148
  %2011 = phi i16 [ %1847, %1856 ], [ %2096, %2148 ]
  %2012 = phi i32 [ 0, %1856 ], [ %2097, %2148 ]
  %2013 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1857, label %2014, label %2083

2014:                                             ; preds = %2010, %2073
  %2015 = phi i32 [ %2082, %2073 ], [ 0, %2010 ]
  %2016 = phi i64 [ %2024, %2073 ], [ %1861, %2010 ]
  %2017 = phi i64 [ %2081, %2073 ], [ %1860, %2010 ]
  %2018 = phi i32 [ %2079, %2073 ], [ %2013, %2010 ]
  %2019 = sub i32 %1859, %2015
  %2020 = tail call i32 @llvm.smin.i32(i32 %2019, i32 0)
  %2021 = sub i32 %2019, %2020
  %2022 = zext i32 %2021 to i64
  %2023 = add nuw nsw i64 %2022, 1
  %2024 = add nsw i64 %2016, -1
  %2025 = icmp ult i32 %2021, 31
  br i1 %2025, label %2061, label %2026

2026:                                             ; preds = %2014
  %2027 = and i64 %2023, 8589934560
  %2028 = sub i64 %2017, %2027
  br label %2029

2029:                                             ; preds = %2029, %2026
  %2030 = phi i64 [ 0, %2026 ], [ %2053, %2029 ]
  %2031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2049, %2029 ]
  %2032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2050, %2029 ]
  %2033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2051, %2029 ]
  %2034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2026 ], [ %2052, %2029 ]
  %2035 = sub i64 %2017, %2030
  %2036 = getelementptr inbounds i32, ptr %11, i64 %2035
  %2037 = getelementptr inbounds i32, ptr %2036, i64 -7
  %2038 = load <8 x i32>, ptr %2037, align 4, !tbaa !5
  %2039 = shufflevector <8 x i32> %2038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2040 = getelementptr inbounds i32, ptr %2036, i64 -15
  %2041 = load <8 x i32>, ptr %2040, align 4, !tbaa !5
  %2042 = shufflevector <8 x i32> %2041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2043 = getelementptr inbounds i32, ptr %2036, i64 -23
  %2044 = load <8 x i32>, ptr %2043, align 4, !tbaa !5
  %2045 = shufflevector <8 x i32> %2044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2046 = getelementptr inbounds i32, ptr %2036, i64 -31
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = mul <8 x i32> %2039, %2031
  %2050 = mul <8 x i32> %2042, %2032
  %2051 = mul <8 x i32> %2045, %2033
  %2052 = mul <8 x i32> %2048, %2034
  %2053 = add nuw i64 %2030, 32
  %2054 = icmp eq i64 %2053, %2027
  br i1 %2054, label %2055, label %2029, !llvm.loop !1369

2055:                                             ; preds = %2029
  %2056 = mul <8 x i32> %2050, %2049
  %2057 = mul <8 x i32> %2051, %2056
  %2058 = mul <8 x i32> %2052, %2057
  %2059 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2058)
  %2060 = icmp eq i64 %2023, %2027
  br i1 %2060, label %2073, label %2061

2061:                                             ; preds = %2014, %2055
  %2062 = phi i64 [ %2017, %2014 ], [ %2028, %2055 ]
  %2063 = phi i32 [ 1, %2014 ], [ %2059, %2055 ]
  br label %2064

2064:                                             ; preds = %2061, %2064
  %2065 = phi i64 [ %2070, %2064 ], [ %2062, %2061 ]
  %2066 = phi i32 [ %2069, %2064 ], [ %2063, %2061 ]
  %2067 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2068 = load i32, ptr %2067, align 4, !tbaa !5
  %2069 = mul nsw i32 %2068, %2066
  %2070 = add nsw i64 %2065, -1
  %2071 = trunc i64 %2065 to i32
  %2072 = icmp sgt i32 %2071, 0
  br i1 %2072, label %2064, label %2073, !llvm.loop !1370

2073:                                             ; preds = %2064, %2055
  %2074 = phi i32 [ %2059, %2055 ], [ %2069, %2064 ]
  %2075 = and i64 %2024, 4294967295
  %2076 = getelementptr inbounds i32, ptr %6, i64 %2075
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2074
  %2079 = add nsw i32 %2078, %2018
  %2080 = icmp sgt i64 %2016, 2
  %2081 = add nsw i64 %2017, -1
  %2082 = add i32 %2015, 1
  br i1 %2080, label %2014, label %2083, !llvm.loop !1371

2083:                                             ; preds = %2073, %2010
  %2084 = phi i32 [ %2013, %2010 ], [ %2079, %2073 ]
  %2085 = icmp slt i32 %2084, %5
  br i1 %2085, label %2088, label %2086

2086:                                             ; preds = %2083
  %2087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2088:                                             ; preds = %2083
  %2089 = sext i32 %2084 to i64
  %2090 = getelementptr inbounds double, ptr %1843, i64 %2089
  %2091 = load double, ptr %2090, align 8, !tbaa !18
  %2092 = fptosi double %2091 to i16
  %2093 = icmp sgt i16 %2011, %2092
  br i1 %2093, label %2094, label %2095

2094:                                             ; preds = %2088
  store i16 %2092, ptr %1845, align 2, !tbaa !78
  br label %2095

2095:                                             ; preds = %2088, %2094
  %2096 = phi i16 [ %2011, %2088 ], [ %2092, %2094 ]
  %2097 = add nuw nsw i32 %2012, 1
  br i1 %1858, label %2098, label %2148

2098:                                             ; preds = %2095
  %2099 = load i32, ptr %4, align 4, !tbaa !5
  %2100 = load i32, ptr %12, align 4, !tbaa !5
  %2101 = add nsw i32 %2100, -1
  %2102 = icmp slt i32 %2099, %2101
  br i1 %2102, label %2125, label %2103

2103:                                             ; preds = %2098
  %2104 = icmp eq i32 %2099, %2101
  br i1 %2104, label %2105, label %2141

2105:                                             ; preds = %2103
  store i32 0, ptr %4, align 4, !tbaa !5
  %2106 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2106, ptr %6, align 4, !tbaa !5
  br i1 %1863, label %2148, label %2107

2107:                                             ; preds = %2105, %2135
  %2108 = phi i64 [ %2139, %2135 ], [ 1, %2105 ]
  %2109 = getelementptr inbounds i32, ptr %4, i64 %2108
  %2110 = load i32, ptr %2109, align 4, !tbaa !5
  %2111 = getelementptr inbounds i32, ptr %12, i64 %2108
  %2112 = load i32, ptr %2111, align 4, !tbaa !5
  %2113 = add nsw i32 %2112, -1
  %2114 = icmp slt i32 %2110, %2113
  br i1 %2114, label %2115, label %2133

2115:                                             ; preds = %2107
  br i1 %2102, label %2125, label %2116

2116:                                             ; preds = %2115
  %2117 = shl i64 %2108, 32
  %2118 = add i64 %2117, -4294967296
  %2119 = ashr exact i64 %2118, 32
  %2120 = getelementptr inbounds i32, ptr %7, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %6, i64 %2108
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, %2121
  store i32 %2124, ptr %2122, align 4, !tbaa !5
  br label %2143

2125:                                             ; preds = %2098, %2115
  %2126 = phi i32 [ %2110, %2115 ], [ %2099, %2098 ]
  %2127 = phi ptr [ %2109, %2115 ], [ %4, %2098 ]
  %2128 = phi i64 [ %2108, %2115 ], [ 0, %2098 ]
  %2129 = add nsw i32 %2126, 1
  store i32 %2129, ptr %2127, align 4, !tbaa !5
  %2130 = getelementptr inbounds i32, ptr %7, i64 %2128
  %2131 = load i32, ptr %2130, align 4, !tbaa !5
  %2132 = getelementptr inbounds i32, ptr %6, i64 %2128
  br label %2143

2133:                                             ; preds = %2107
  %2134 = icmp eq i32 %2110, %2113
  br i1 %2134, label %2135, label %2141

2135:                                             ; preds = %2133
  store i32 0, ptr %2109, align 4, !tbaa !5
  %2136 = getelementptr inbounds i32, ptr %8, i64 %2108
  %2137 = load i32, ptr %2136, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %6, i64 %2108
  store i32 %2137, ptr %2138, align 4, !tbaa !5
  %2139 = add nuw nsw i64 %2108, 1
  %2140 = icmp eq i64 %2139, %1861
  br i1 %2140, label %2148, label %2107, !llvm.loop !1372

2141:                                             ; preds = %2103, %2133
  %2142 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2143:                                             ; preds = %2116, %2125
  %2144 = phi ptr [ %2132, %2125 ], [ %2109, %2116 ]
  %2145 = phi i32 [ %2131, %2125 ], [ 1, %2116 ]
  %2146 = load i32, ptr %2144, align 4, !tbaa !5
  %2147 = add nsw i32 %2146, %2145
  store i32 %2147, ptr %2144, align 4, !tbaa !5
  br label %2148

2148:                                             ; preds = %2135, %2143, %2105, %2095
  %2149 = icmp eq i32 %2097, %5
  br i1 %2149, label %5477, label %2010, !llvm.loop !1373

2150:                                             ; preds = %1849
  %2151 = getelementptr inbounds i32, ptr %3, i64 %19
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = icmp eq i32 %2152, 0
  %2154 = icmp sgt i32 %5, 0
  br i1 %2153, label %2164, label %2155

2155:                                             ; preds = %2150
  br i1 %2154, label %2156, label %5477

2156:                                             ; preds = %2155
  %2157 = icmp sgt i32 %13, 1
  %2158 = icmp sgt i32 %13, 0
  %2159 = add i32 %13, -2
  %2160 = zext i32 %2159 to i64
  %2161 = zext i32 %13 to i64
  %2162 = add nuw i32 %5, 1
  %2163 = icmp eq i32 %13, 1
  br label %2306

2164:                                             ; preds = %2150
  br i1 %2154, label %2165, label %5477

2165:                                             ; preds = %2164
  %2166 = icmp sgt i32 %13, 1
  %2167 = icmp sgt i32 %13, 0
  %2168 = add i32 %13, -2
  %2169 = zext i32 %2168 to i64
  %2170 = zext i32 %13 to i64
  %2171 = add nuw i32 %5, 1
  %2172 = icmp eq i32 %13, 1
  br label %2173

2173:                                             ; preds = %2165, %2304
  %2174 = phi i16 [ %1847, %2165 ], [ %2255, %2304 ]
  %2175 = phi i32 [ 0, %2165 ], [ %2256, %2304 ]
  %2176 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2166, label %2177, label %2246

2177:                                             ; preds = %2173, %2236
  %2178 = phi i32 [ %2245, %2236 ], [ 0, %2173 ]
  %2179 = phi i64 [ %2187, %2236 ], [ %2170, %2173 ]
  %2180 = phi i64 [ %2244, %2236 ], [ %2169, %2173 ]
  %2181 = phi i32 [ %2242, %2236 ], [ %2176, %2173 ]
  %2182 = sub i32 %2168, %2178
  %2183 = tail call i32 @llvm.smin.i32(i32 %2182, i32 0)
  %2184 = sub i32 %2182, %2183
  %2185 = zext i32 %2184 to i64
  %2186 = add nuw nsw i64 %2185, 1
  %2187 = add nsw i64 %2179, -1
  %2188 = icmp ult i32 %2184, 31
  br i1 %2188, label %2224, label %2189

2189:                                             ; preds = %2177
  %2190 = and i64 %2186, 8589934560
  %2191 = sub i64 %2180, %2190
  br label %2192

2192:                                             ; preds = %2192, %2189
  %2193 = phi i64 [ 0, %2189 ], [ %2216, %2192 ]
  %2194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2212, %2192 ]
  %2195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2213, %2192 ]
  %2196 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2214, %2192 ]
  %2197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2189 ], [ %2215, %2192 ]
  %2198 = sub i64 %2180, %2193
  %2199 = getelementptr inbounds i32, ptr %9, i64 %2198
  %2200 = getelementptr inbounds i32, ptr %2199, i64 -7
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = getelementptr inbounds i32, ptr %2199, i64 -15
  %2204 = load <8 x i32>, ptr %2203, align 4, !tbaa !5
  %2205 = shufflevector <8 x i32> %2204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2206 = getelementptr inbounds i32, ptr %2199, i64 -23
  %2207 = load <8 x i32>, ptr %2206, align 4, !tbaa !5
  %2208 = shufflevector <8 x i32> %2207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2209 = getelementptr inbounds i32, ptr %2199, i64 -31
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = mul <8 x i32> %2202, %2194
  %2213 = mul <8 x i32> %2205, %2195
  %2214 = mul <8 x i32> %2208, %2196
  %2215 = mul <8 x i32> %2211, %2197
  %2216 = add nuw i64 %2193, 32
  %2217 = icmp eq i64 %2216, %2190
  br i1 %2217, label %2218, label %2192, !llvm.loop !1374

2218:                                             ; preds = %2192
  %2219 = mul <8 x i32> %2213, %2212
  %2220 = mul <8 x i32> %2214, %2219
  %2221 = mul <8 x i32> %2215, %2220
  %2222 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2221)
  %2223 = icmp eq i64 %2186, %2190
  br i1 %2223, label %2236, label %2224

2224:                                             ; preds = %2177, %2218
  %2225 = phi i64 [ %2180, %2177 ], [ %2191, %2218 ]
  %2226 = phi i32 [ 1, %2177 ], [ %2222, %2218 ]
  br label %2227

2227:                                             ; preds = %2224, %2227
  %2228 = phi i64 [ %2233, %2227 ], [ %2225, %2224 ]
  %2229 = phi i32 [ %2232, %2227 ], [ %2226, %2224 ]
  %2230 = getelementptr inbounds i32, ptr %9, i64 %2228
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = mul nsw i32 %2231, %2229
  %2233 = add nsw i64 %2228, -1
  %2234 = trunc i64 %2228 to i32
  %2235 = icmp sgt i32 %2234, 0
  br i1 %2235, label %2227, label %2236, !llvm.loop !1375

2236:                                             ; preds = %2227, %2218
  %2237 = phi i32 [ %2222, %2218 ], [ %2232, %2227 ]
  %2238 = and i64 %2187, 4294967295
  %2239 = getelementptr inbounds i32, ptr %6, i64 %2238
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = mul nsw i32 %2240, %2237
  %2242 = add nsw i32 %2241, %2181
  %2243 = icmp sgt i64 %2179, 2
  %2244 = add nsw i64 %2180, -1
  %2245 = add i32 %2178, 1
  br i1 %2243, label %2177, label %2246, !llvm.loop !1376

2246:                                             ; preds = %2236, %2173
  %2247 = phi i32 [ %2176, %2173 ], [ %2242, %2236 ]
  %2248 = sext i32 %2247 to i64
  %2249 = getelementptr inbounds double, ptr %1843, i64 %2248
  %2250 = load double, ptr %2249, align 8, !tbaa !18
  %2251 = fptosi double %2250 to i16
  %2252 = icmp sgt i16 %2174, %2251
  br i1 %2252, label %2253, label %2254

2253:                                             ; preds = %2246
  store i16 %2251, ptr %1845, align 2, !tbaa !78
  br label %2254

2254:                                             ; preds = %2253, %2246
  %2255 = phi i16 [ %2251, %2253 ], [ %2174, %2246 ]
  %2256 = add nuw nsw i32 %2175, 1
  br i1 %2167, label %2257, label %2304

2257:                                             ; preds = %2254
  %2258 = load i32, ptr %4, align 4, !tbaa !5
  %2259 = load i32, ptr %12, align 4, !tbaa !5
  %2260 = add nsw i32 %2259, -1
  %2261 = icmp slt i32 %2258, %2260
  br i1 %2261, label %2281, label %2262

2262:                                             ; preds = %2257
  %2263 = icmp eq i32 %2258, %2260
  br i1 %2263, label %2264, label %2297

2264:                                             ; preds = %2262
  store i32 0, ptr %4, align 4, !tbaa !5
  %2265 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2265, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2304, label %2266

2266:                                             ; preds = %2264, %2291
  %2267 = phi i64 [ %2295, %2291 ], [ 1, %2264 ]
  %2268 = getelementptr inbounds i32, ptr %4, i64 %2267
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %12, i64 %2267
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = add nsw i32 %2271, -1
  %2273 = icmp slt i32 %2269, %2272
  br i1 %2273, label %2274, label %2289

2274:                                             ; preds = %2266
  br i1 %2261, label %2281, label %2275

2275:                                             ; preds = %2274
  %2276 = getelementptr inbounds i32, ptr %7, i64 %2267
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = getelementptr inbounds i32, ptr %6, i64 %2267
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = add nsw i32 %2279, %2277
  store i32 %2280, ptr %2278, align 4, !tbaa !5
  br label %2299

2281:                                             ; preds = %2257, %2274
  %2282 = phi i32 [ %2269, %2274 ], [ %2258, %2257 ]
  %2283 = phi ptr [ %2268, %2274 ], [ %4, %2257 ]
  %2284 = phi i64 [ %2267, %2274 ], [ 0, %2257 ]
  %2285 = add nsw i32 %2282, 1
  store i32 %2285, ptr %2283, align 4, !tbaa !5
  %2286 = getelementptr inbounds i32, ptr %7, i64 %2284
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %6, i64 %2284
  br label %2299

2289:                                             ; preds = %2266
  %2290 = icmp eq i32 %2269, %2272
  br i1 %2290, label %2291, label %2297

2291:                                             ; preds = %2289
  store i32 0, ptr %2268, align 4, !tbaa !5
  %2292 = getelementptr inbounds i32, ptr %8, i64 %2267
  %2293 = load i32, ptr %2292, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2267
  store i32 %2293, ptr %2294, align 4, !tbaa !5
  %2295 = add nuw nsw i64 %2267, 1
  %2296 = icmp eq i64 %2295, %2170
  br i1 %2296, label %2304, label %2266, !llvm.loop !1377

2297:                                             ; preds = %2262, %2289
  %2298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2299:                                             ; preds = %2275, %2281
  %2300 = phi ptr [ %2288, %2281 ], [ %2268, %2275 ]
  %2301 = phi i32 [ %2287, %2281 ], [ 1, %2275 ]
  %2302 = load i32, ptr %2300, align 4, !tbaa !5
  %2303 = add nsw i32 %2302, %2301
  store i32 %2303, ptr %2300, align 4, !tbaa !5
  br label %2304

2304:                                             ; preds = %2291, %2299, %2264, %2254
  %2305 = icmp eq i32 %2256, %5
  br i1 %2305, label %5477, label %2173, !llvm.loop !1378

2306:                                             ; preds = %2156, %2444
  %2307 = phi i16 [ %1847, %2156 ], [ %2392, %2444 ]
  %2308 = phi i32 [ 0, %2156 ], [ %2393, %2444 ]
  %2309 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2157, label %2310, label %2379

2310:                                             ; preds = %2306, %2369
  %2311 = phi i32 [ %2378, %2369 ], [ 0, %2306 ]
  %2312 = phi i64 [ %2320, %2369 ], [ %2161, %2306 ]
  %2313 = phi i64 [ %2377, %2369 ], [ %2160, %2306 ]
  %2314 = phi i32 [ %2375, %2369 ], [ %2309, %2306 ]
  %2315 = sub i32 %2159, %2311
  %2316 = tail call i32 @llvm.smin.i32(i32 %2315, i32 0)
  %2317 = sub i32 %2315, %2316
  %2318 = zext i32 %2317 to i64
  %2319 = add nuw nsw i64 %2318, 1
  %2320 = add nsw i64 %2312, -1
  %2321 = icmp ult i32 %2317, 31
  br i1 %2321, label %2357, label %2322

2322:                                             ; preds = %2310
  %2323 = and i64 %2319, 8589934560
  %2324 = sub i64 %2313, %2323
  br label %2325

2325:                                             ; preds = %2325, %2322
  %2326 = phi i64 [ 0, %2322 ], [ %2349, %2325 ]
  %2327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2345, %2325 ]
  %2328 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2346, %2325 ]
  %2329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2347, %2325 ]
  %2330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2322 ], [ %2348, %2325 ]
  %2331 = sub i64 %2313, %2326
  %2332 = getelementptr inbounds i32, ptr %11, i64 %2331
  %2333 = getelementptr inbounds i32, ptr %2332, i64 -7
  %2334 = load <8 x i32>, ptr %2333, align 4, !tbaa !5
  %2335 = shufflevector <8 x i32> %2334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2336 = getelementptr inbounds i32, ptr %2332, i64 -15
  %2337 = load <8 x i32>, ptr %2336, align 4, !tbaa !5
  %2338 = shufflevector <8 x i32> %2337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2339 = getelementptr inbounds i32, ptr %2332, i64 -23
  %2340 = load <8 x i32>, ptr %2339, align 4, !tbaa !5
  %2341 = shufflevector <8 x i32> %2340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2342 = getelementptr inbounds i32, ptr %2332, i64 -31
  %2343 = load <8 x i32>, ptr %2342, align 4, !tbaa !5
  %2344 = shufflevector <8 x i32> %2343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2345 = mul <8 x i32> %2335, %2327
  %2346 = mul <8 x i32> %2338, %2328
  %2347 = mul <8 x i32> %2341, %2329
  %2348 = mul <8 x i32> %2344, %2330
  %2349 = add nuw i64 %2326, 32
  %2350 = icmp eq i64 %2349, %2323
  br i1 %2350, label %2351, label %2325, !llvm.loop !1379

2351:                                             ; preds = %2325
  %2352 = mul <8 x i32> %2346, %2345
  %2353 = mul <8 x i32> %2347, %2352
  %2354 = mul <8 x i32> %2348, %2353
  %2355 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2354)
  %2356 = icmp eq i64 %2319, %2323
  br i1 %2356, label %2369, label %2357

2357:                                             ; preds = %2310, %2351
  %2358 = phi i64 [ %2313, %2310 ], [ %2324, %2351 ]
  %2359 = phi i32 [ 1, %2310 ], [ %2355, %2351 ]
  br label %2360

2360:                                             ; preds = %2357, %2360
  %2361 = phi i64 [ %2366, %2360 ], [ %2358, %2357 ]
  %2362 = phi i32 [ %2365, %2360 ], [ %2359, %2357 ]
  %2363 = getelementptr inbounds i32, ptr %11, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = mul nsw i32 %2364, %2362
  %2366 = add nsw i64 %2361, -1
  %2367 = trunc i64 %2361 to i32
  %2368 = icmp sgt i32 %2367, 0
  br i1 %2368, label %2360, label %2369, !llvm.loop !1380

2369:                                             ; preds = %2360, %2351
  %2370 = phi i32 [ %2355, %2351 ], [ %2365, %2360 ]
  %2371 = and i64 %2320, 4294967295
  %2372 = getelementptr inbounds i32, ptr %6, i64 %2371
  %2373 = load i32, ptr %2372, align 4, !tbaa !5
  %2374 = mul nsw i32 %2373, %2370
  %2375 = add nsw i32 %2374, %2314
  %2376 = icmp sgt i64 %2312, 2
  %2377 = add nsw i64 %2313, -1
  %2378 = add i32 %2311, 1
  br i1 %2376, label %2310, label %2379, !llvm.loop !1381

2379:                                             ; preds = %2369, %2306
  %2380 = phi i32 [ %2309, %2306 ], [ %2375, %2369 ]
  %2381 = icmp slt i32 %2380, %5
  br i1 %2381, label %2384, label %2382

2382:                                             ; preds = %2379
  %2383 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2384:                                             ; preds = %2379
  %2385 = sext i32 %2380 to i64
  %2386 = getelementptr inbounds double, ptr %1843, i64 %2385
  %2387 = load double, ptr %2386, align 8, !tbaa !18
  %2388 = fptosi double %2387 to i16
  %2389 = icmp sgt i16 %2307, %2388
  br i1 %2389, label %2390, label %2391

2390:                                             ; preds = %2384
  store i16 %2388, ptr %1845, align 2, !tbaa !78
  br label %2391

2391:                                             ; preds = %2390, %2384
  %2392 = phi i16 [ %2388, %2390 ], [ %2307, %2384 ]
  %2393 = add nuw nsw i32 %2308, 1
  br i1 %2158, label %2394, label %2444

2394:                                             ; preds = %2391
  %2395 = load i32, ptr %4, align 4, !tbaa !5
  %2396 = load i32, ptr %12, align 4, !tbaa !5
  %2397 = add nsw i32 %2396, -1
  %2398 = icmp slt i32 %2395, %2397
  br i1 %2398, label %2421, label %2399

2399:                                             ; preds = %2394
  %2400 = icmp eq i32 %2395, %2397
  br i1 %2400, label %2401, label %2437

2401:                                             ; preds = %2399
  store i32 0, ptr %4, align 4, !tbaa !5
  %2402 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2402, ptr %6, align 4, !tbaa !5
  br i1 %2163, label %2444, label %2403

2403:                                             ; preds = %2401, %2431
  %2404 = phi i64 [ %2435, %2431 ], [ 1, %2401 ]
  %2405 = getelementptr inbounds i32, ptr %4, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %12, i64 %2404
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = add nsw i32 %2408, -1
  %2410 = icmp slt i32 %2406, %2409
  br i1 %2410, label %2411, label %2429

2411:                                             ; preds = %2403
  br i1 %2398, label %2421, label %2412

2412:                                             ; preds = %2411
  %2413 = shl i64 %2404, 32
  %2414 = add i64 %2413, -4294967296
  %2415 = ashr exact i64 %2414, 32
  %2416 = getelementptr inbounds i32, ptr %7, i64 %2415
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = add nsw i32 %2419, %2417
  store i32 %2420, ptr %2418, align 4, !tbaa !5
  br label %2439

2421:                                             ; preds = %2394, %2411
  %2422 = phi i32 [ %2406, %2411 ], [ %2395, %2394 ]
  %2423 = phi ptr [ %2405, %2411 ], [ %4, %2394 ]
  %2424 = phi i64 [ %2404, %2411 ], [ 0, %2394 ]
  %2425 = add nsw i32 %2422, 1
  store i32 %2425, ptr %2423, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2424
  br label %2439

2429:                                             ; preds = %2403
  %2430 = icmp eq i32 %2406, %2409
  br i1 %2430, label %2431, label %2437

2431:                                             ; preds = %2429
  store i32 0, ptr %2405, align 4, !tbaa !5
  %2432 = getelementptr inbounds i32, ptr %8, i64 %2404
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2404
  store i32 %2433, ptr %2434, align 4, !tbaa !5
  %2435 = add nuw nsw i64 %2404, 1
  %2436 = icmp eq i64 %2435, %2161
  br i1 %2436, label %2444, label %2403, !llvm.loop !1382

2437:                                             ; preds = %2399, %2429
  %2438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2439:                                             ; preds = %2412, %2421
  %2440 = phi ptr [ %2428, %2421 ], [ %2405, %2412 ]
  %2441 = phi i32 [ %2427, %2421 ], [ 1, %2412 ]
  %2442 = load i32, ptr %2440, align 4, !tbaa !5
  %2443 = add nsw i32 %2442, %2441
  store i32 %2443, ptr %2440, align 4, !tbaa !5
  br label %2444

2444:                                             ; preds = %2431, %2439, %2401, %2391
  %2445 = icmp eq i32 %2393, %5
  br i1 %2445, label %5477, label %2306, !llvm.loop !1383

2446:                                             ; preds = %1849
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1972, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

2448:                                             ; preds = %18
  %2449 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2450 = load ptr, ptr %2449, align 8, !tbaa !9
  %2451 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2452 = load ptr, ptr %2451, align 8, !tbaa !9
  %2453 = load double, ptr %2450, align 8, !tbaa !18
  %2454 = fptosi double %2453 to i32
  store i32 %2454, ptr %2452, align 4, !tbaa !5
  %2455 = icmp eq i32 %13, 0
  br i1 %2455, label %5477, label %2456

2456:                                             ; preds = %2448
  switch i32 %1, label %3049 [
    i32 1, label %2457
    i32 0, label %2755
  ]

2457:                                             ; preds = %2456
  %2458 = getelementptr inbounds i32, ptr %3, i64 %19
  %2459 = load i32, ptr %2458, align 4, !tbaa !5
  %2460 = icmp eq i32 %2459, 0
  %2461 = icmp sgt i32 %5, 0
  br i1 %2460, label %2471, label %2462

2462:                                             ; preds = %2457
  br i1 %2461, label %2463, label %5477

2463:                                             ; preds = %2462
  %2464 = icmp sgt i32 %13, 1
  %2465 = icmp sgt i32 %13, 0
  %2466 = add i32 %13, -2
  %2467 = zext i32 %2466 to i64
  %2468 = zext i32 %13 to i64
  %2469 = add nuw i32 %5, 1
  %2470 = icmp eq i32 %13, 1
  br label %2616

2471:                                             ; preds = %2457
  br i1 %2461, label %2472, label %5477

2472:                                             ; preds = %2471
  %2473 = icmp sgt i32 %13, 1
  %2474 = icmp sgt i32 %13, 0
  %2475 = add i32 %13, -2
  %2476 = zext i32 %2475 to i64
  %2477 = zext i32 %13 to i64
  %2478 = add nuw i32 %5, 1
  %2479 = icmp eq i32 %13, 1
  br label %2480

2480:                                             ; preds = %2472, %2614
  %2481 = phi i32 [ 0, %2472 ], [ %2566, %2614 ]
  %2482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2473, label %2483, label %2552

2483:                                             ; preds = %2480, %2542
  %2484 = phi i32 [ %2551, %2542 ], [ 0, %2480 ]
  %2485 = phi i64 [ %2493, %2542 ], [ %2477, %2480 ]
  %2486 = phi i64 [ %2550, %2542 ], [ %2476, %2480 ]
  %2487 = phi i32 [ %2548, %2542 ], [ %2482, %2480 ]
  %2488 = sub i32 %2475, %2484
  %2489 = tail call i32 @llvm.smin.i32(i32 %2488, i32 0)
  %2490 = sub i32 %2488, %2489
  %2491 = zext i32 %2490 to i64
  %2492 = add nuw nsw i64 %2491, 1
  %2493 = add nsw i64 %2485, -1
  %2494 = icmp ult i32 %2490, 31
  br i1 %2494, label %2530, label %2495

2495:                                             ; preds = %2483
  %2496 = and i64 %2492, 8589934560
  %2497 = sub i64 %2486, %2496
  br label %2498

2498:                                             ; preds = %2498, %2495
  %2499 = phi i64 [ 0, %2495 ], [ %2522, %2498 ]
  %2500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2518, %2498 ]
  %2501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2519, %2498 ]
  %2502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2520, %2498 ]
  %2503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2495 ], [ %2521, %2498 ]
  %2504 = sub i64 %2486, %2499
  %2505 = getelementptr inbounds i32, ptr %9, i64 %2504
  %2506 = getelementptr inbounds i32, ptr %2505, i64 -7
  %2507 = load <8 x i32>, ptr %2506, align 4, !tbaa !5
  %2508 = shufflevector <8 x i32> %2507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2509 = getelementptr inbounds i32, ptr %2505, i64 -15
  %2510 = load <8 x i32>, ptr %2509, align 4, !tbaa !5
  %2511 = shufflevector <8 x i32> %2510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2512 = getelementptr inbounds i32, ptr %2505, i64 -23
  %2513 = load <8 x i32>, ptr %2512, align 4, !tbaa !5
  %2514 = shufflevector <8 x i32> %2513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2515 = getelementptr inbounds i32, ptr %2505, i64 -31
  %2516 = load <8 x i32>, ptr %2515, align 4, !tbaa !5
  %2517 = shufflevector <8 x i32> %2516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2518 = mul <8 x i32> %2508, %2500
  %2519 = mul <8 x i32> %2511, %2501
  %2520 = mul <8 x i32> %2514, %2502
  %2521 = mul <8 x i32> %2517, %2503
  %2522 = add nuw i64 %2499, 32
  %2523 = icmp eq i64 %2522, %2496
  br i1 %2523, label %2524, label %2498, !llvm.loop !1384

2524:                                             ; preds = %2498
  %2525 = mul <8 x i32> %2519, %2518
  %2526 = mul <8 x i32> %2520, %2525
  %2527 = mul <8 x i32> %2521, %2526
  %2528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2527)
  %2529 = icmp eq i64 %2492, %2496
  br i1 %2529, label %2542, label %2530

2530:                                             ; preds = %2483, %2524
  %2531 = phi i64 [ %2486, %2483 ], [ %2497, %2524 ]
  %2532 = phi i32 [ 1, %2483 ], [ %2528, %2524 ]
  br label %2533

2533:                                             ; preds = %2530, %2533
  %2534 = phi i64 [ %2539, %2533 ], [ %2531, %2530 ]
  %2535 = phi i32 [ %2538, %2533 ], [ %2532, %2530 ]
  %2536 = getelementptr inbounds i32, ptr %9, i64 %2534
  %2537 = load i32, ptr %2536, align 4, !tbaa !5
  %2538 = mul nsw i32 %2537, %2535
  %2539 = add nsw i64 %2534, -1
  %2540 = trunc i64 %2534 to i32
  %2541 = icmp sgt i32 %2540, 0
  br i1 %2541, label %2533, label %2542, !llvm.loop !1385

2542:                                             ; preds = %2533, %2524
  %2543 = phi i32 [ %2528, %2524 ], [ %2538, %2533 ]
  %2544 = and i64 %2493, 4294967295
  %2545 = getelementptr inbounds i32, ptr %6, i64 %2544
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = mul nsw i32 %2546, %2543
  %2548 = add nsw i32 %2547, %2487
  %2549 = icmp sgt i64 %2485, 2
  %2550 = add nsw i64 %2486, -1
  %2551 = add i32 %2484, 1
  br i1 %2549, label %2483, label %2552, !llvm.loop !1386

2552:                                             ; preds = %2542, %2480
  %2553 = phi i32 [ %2482, %2480 ], [ %2548, %2542 ]
  %2554 = sext i32 %2553 to i64
  %2555 = getelementptr inbounds double, ptr %2, i64 %2554
  %2556 = load double, ptr %2555, align 8, !tbaa !18
  %2557 = getelementptr inbounds double, ptr %2450, i64 %2554
  %2558 = load double, ptr %2557, align 8, !tbaa !18
  %2559 = fptosi double %2558 to i32
  %2560 = fcmp fast ueq double %2556, 0.000000e+00
  br i1 %2560, label %2565, label %2561

2561:                                             ; preds = %2552
  %2562 = load i32, ptr %2452, align 4, !tbaa !5
  %2563 = icmp sgt i32 %2562, %2559
  br i1 %2563, label %2564, label %2565

2564:                                             ; preds = %2561
  store i32 %2559, ptr %2452, align 4, !tbaa !5
  br label %2565

2565:                                             ; preds = %2561, %2564, %2552
  %2566 = add nuw nsw i32 %2481, 1
  br i1 %2474, label %2567, label %2614

2567:                                             ; preds = %2565
  %2568 = load i32, ptr %4, align 4, !tbaa !5
  %2569 = load i32, ptr %12, align 4, !tbaa !5
  %2570 = add nsw i32 %2569, -1
  %2571 = icmp slt i32 %2568, %2570
  br i1 %2571, label %2591, label %2572

2572:                                             ; preds = %2567
  %2573 = icmp eq i32 %2568, %2570
  br i1 %2573, label %2574, label %2607

2574:                                             ; preds = %2572
  store i32 0, ptr %4, align 4, !tbaa !5
  %2575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2575, ptr %6, align 4, !tbaa !5
  br i1 %2479, label %2614, label %2576

2576:                                             ; preds = %2574, %2601
  %2577 = phi i64 [ %2605, %2601 ], [ 1, %2574 ]
  %2578 = getelementptr inbounds i32, ptr %4, i64 %2577
  %2579 = load i32, ptr %2578, align 4, !tbaa !5
  %2580 = getelementptr inbounds i32, ptr %12, i64 %2577
  %2581 = load i32, ptr %2580, align 4, !tbaa !5
  %2582 = add nsw i32 %2581, -1
  %2583 = icmp slt i32 %2579, %2582
  br i1 %2583, label %2584, label %2599

2584:                                             ; preds = %2576
  br i1 %2571, label %2591, label %2585

2585:                                             ; preds = %2584
  %2586 = getelementptr inbounds i32, ptr %7, i64 %2577
  %2587 = load i32, ptr %2586, align 4, !tbaa !5
  %2588 = getelementptr inbounds i32, ptr %6, i64 %2577
  %2589 = load i32, ptr %2588, align 4, !tbaa !5
  %2590 = add nsw i32 %2589, %2587
  store i32 %2590, ptr %2588, align 4, !tbaa !5
  br label %2609

2591:                                             ; preds = %2567, %2584
  %2592 = phi i32 [ %2579, %2584 ], [ %2568, %2567 ]
  %2593 = phi ptr [ %2578, %2584 ], [ %4, %2567 ]
  %2594 = phi i64 [ %2577, %2584 ], [ 0, %2567 ]
  %2595 = add nsw i32 %2592, 1
  store i32 %2595, ptr %2593, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %7, i64 %2594
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %6, i64 %2594
  br label %2609

2599:                                             ; preds = %2576
  %2600 = icmp eq i32 %2579, %2582
  br i1 %2600, label %2601, label %2607

2601:                                             ; preds = %2599
  store i32 0, ptr %2578, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %8, i64 %2577
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2577
  store i32 %2603, ptr %2604, align 4, !tbaa !5
  %2605 = add nuw nsw i64 %2577, 1
  %2606 = icmp eq i64 %2605, %2477
  br i1 %2606, label %2614, label %2576, !llvm.loop !1387

2607:                                             ; preds = %2572, %2599
  %2608 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2609:                                             ; preds = %2585, %2591
  %2610 = phi ptr [ %2598, %2591 ], [ %2578, %2585 ]
  %2611 = phi i32 [ %2597, %2591 ], [ 1, %2585 ]
  %2612 = load i32, ptr %2610, align 4, !tbaa !5
  %2613 = add nsw i32 %2612, %2611
  store i32 %2613, ptr %2610, align 4, !tbaa !5
  br label %2614

2614:                                             ; preds = %2601, %2609, %2574, %2565
  %2615 = icmp eq i32 %2566, %5
  br i1 %2615, label %5477, label %2480, !llvm.loop !1388

2616:                                             ; preds = %2463, %2753
  %2617 = phi i32 [ 0, %2463 ], [ %2702, %2753 ]
  %2618 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2464, label %2619, label %2688

2619:                                             ; preds = %2616, %2678
  %2620 = phi i32 [ %2687, %2678 ], [ 0, %2616 ]
  %2621 = phi i64 [ %2629, %2678 ], [ %2468, %2616 ]
  %2622 = phi i64 [ %2686, %2678 ], [ %2467, %2616 ]
  %2623 = phi i32 [ %2684, %2678 ], [ %2618, %2616 ]
  %2624 = sub i32 %2466, %2620
  %2625 = tail call i32 @llvm.smin.i32(i32 %2624, i32 0)
  %2626 = sub i32 %2624, %2625
  %2627 = zext i32 %2626 to i64
  %2628 = add nuw nsw i64 %2627, 1
  %2629 = add nsw i64 %2621, -1
  %2630 = icmp ult i32 %2626, 31
  br i1 %2630, label %2666, label %2631

2631:                                             ; preds = %2619
  %2632 = and i64 %2628, 8589934560
  %2633 = sub i64 %2622, %2632
  br label %2634

2634:                                             ; preds = %2634, %2631
  %2635 = phi i64 [ 0, %2631 ], [ %2658, %2634 ]
  %2636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2654, %2634 ]
  %2637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2655, %2634 ]
  %2638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2656, %2634 ]
  %2639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2631 ], [ %2657, %2634 ]
  %2640 = sub i64 %2622, %2635
  %2641 = getelementptr inbounds i32, ptr %11, i64 %2640
  %2642 = getelementptr inbounds i32, ptr %2641, i64 -7
  %2643 = load <8 x i32>, ptr %2642, align 4, !tbaa !5
  %2644 = shufflevector <8 x i32> %2643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2645 = getelementptr inbounds i32, ptr %2641, i64 -15
  %2646 = load <8 x i32>, ptr %2645, align 4, !tbaa !5
  %2647 = shufflevector <8 x i32> %2646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2648 = getelementptr inbounds i32, ptr %2641, i64 -23
  %2649 = load <8 x i32>, ptr %2648, align 4, !tbaa !5
  %2650 = shufflevector <8 x i32> %2649, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2651 = getelementptr inbounds i32, ptr %2641, i64 -31
  %2652 = load <8 x i32>, ptr %2651, align 4, !tbaa !5
  %2653 = shufflevector <8 x i32> %2652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2654 = mul <8 x i32> %2644, %2636
  %2655 = mul <8 x i32> %2647, %2637
  %2656 = mul <8 x i32> %2650, %2638
  %2657 = mul <8 x i32> %2653, %2639
  %2658 = add nuw i64 %2635, 32
  %2659 = icmp eq i64 %2658, %2632
  br i1 %2659, label %2660, label %2634, !llvm.loop !1389

2660:                                             ; preds = %2634
  %2661 = mul <8 x i32> %2655, %2654
  %2662 = mul <8 x i32> %2656, %2661
  %2663 = mul <8 x i32> %2657, %2662
  %2664 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2663)
  %2665 = icmp eq i64 %2628, %2632
  br i1 %2665, label %2678, label %2666

2666:                                             ; preds = %2619, %2660
  %2667 = phi i64 [ %2622, %2619 ], [ %2633, %2660 ]
  %2668 = phi i32 [ 1, %2619 ], [ %2664, %2660 ]
  br label %2669

2669:                                             ; preds = %2666, %2669
  %2670 = phi i64 [ %2675, %2669 ], [ %2667, %2666 ]
  %2671 = phi i32 [ %2674, %2669 ], [ %2668, %2666 ]
  %2672 = getelementptr inbounds i32, ptr %11, i64 %2670
  %2673 = load i32, ptr %2672, align 4, !tbaa !5
  %2674 = mul nsw i32 %2673, %2671
  %2675 = add nsw i64 %2670, -1
  %2676 = trunc i64 %2670 to i32
  %2677 = icmp sgt i32 %2676, 0
  br i1 %2677, label %2669, label %2678, !llvm.loop !1390

2678:                                             ; preds = %2669, %2660
  %2679 = phi i32 [ %2664, %2660 ], [ %2674, %2669 ]
  %2680 = and i64 %2629, 4294967295
  %2681 = getelementptr inbounds i32, ptr %6, i64 %2680
  %2682 = load i32, ptr %2681, align 4, !tbaa !5
  %2683 = mul nsw i32 %2682, %2679
  %2684 = add nsw i32 %2683, %2623
  %2685 = icmp sgt i64 %2621, 2
  %2686 = add nsw i64 %2622, -1
  %2687 = add i32 %2620, 1
  br i1 %2685, label %2619, label %2688, !llvm.loop !1391

2688:                                             ; preds = %2678, %2616
  %2689 = phi i32 [ %2618, %2616 ], [ %2684, %2678 ]
  %2690 = icmp slt i32 %2689, %5
  br i1 %2690, label %2693, label %2691

2691:                                             ; preds = %2688
  %2692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2693:                                             ; preds = %2688
  %2694 = sext i32 %2689 to i64
  %2695 = getelementptr inbounds double, ptr %2450, i64 %2694
  %2696 = load double, ptr %2695, align 8, !tbaa !18
  %2697 = fptosi double %2696 to i32
  %2698 = load i32, ptr %2452, align 4, !tbaa !5
  %2699 = icmp sgt i32 %2698, %2697
  br i1 %2699, label %2700, label %2701

2700:                                             ; preds = %2693
  store i32 %2697, ptr %2452, align 4, !tbaa !5
  br label %2701

2701:                                             ; preds = %2693, %2700
  %2702 = add nuw nsw i32 %2617, 1
  br i1 %2465, label %2703, label %2753

2703:                                             ; preds = %2701
  %2704 = load i32, ptr %4, align 4, !tbaa !5
  %2705 = load i32, ptr %12, align 4, !tbaa !5
  %2706 = add nsw i32 %2705, -1
  %2707 = icmp slt i32 %2704, %2706
  br i1 %2707, label %2730, label %2708

2708:                                             ; preds = %2703
  %2709 = icmp eq i32 %2704, %2706
  br i1 %2709, label %2710, label %2746

2710:                                             ; preds = %2708
  store i32 0, ptr %4, align 4, !tbaa !5
  %2711 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2711, ptr %6, align 4, !tbaa !5
  br i1 %2470, label %2753, label %2712

2712:                                             ; preds = %2710, %2740
  %2713 = phi i64 [ %2744, %2740 ], [ 1, %2710 ]
  %2714 = getelementptr inbounds i32, ptr %4, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = getelementptr inbounds i32, ptr %12, i64 %2713
  %2717 = load i32, ptr %2716, align 4, !tbaa !5
  %2718 = add nsw i32 %2717, -1
  %2719 = icmp slt i32 %2715, %2718
  br i1 %2719, label %2720, label %2738

2720:                                             ; preds = %2712
  br i1 %2707, label %2730, label %2721

2721:                                             ; preds = %2720
  %2722 = shl i64 %2713, 32
  %2723 = add i64 %2722, -4294967296
  %2724 = ashr exact i64 %2723, 32
  %2725 = getelementptr inbounds i32, ptr %7, i64 %2724
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2728 = load i32, ptr %2727, align 4, !tbaa !5
  %2729 = add nsw i32 %2728, %2726
  store i32 %2729, ptr %2727, align 4, !tbaa !5
  br label %2748

2730:                                             ; preds = %2703, %2720
  %2731 = phi i32 [ %2715, %2720 ], [ %2704, %2703 ]
  %2732 = phi ptr [ %2714, %2720 ], [ %4, %2703 ]
  %2733 = phi i64 [ %2713, %2720 ], [ 0, %2703 ]
  %2734 = add nsw i32 %2731, 1
  store i32 %2734, ptr %2732, align 4, !tbaa !5
  %2735 = getelementptr inbounds i32, ptr %7, i64 %2733
  %2736 = load i32, ptr %2735, align 4, !tbaa !5
  %2737 = getelementptr inbounds i32, ptr %6, i64 %2733
  br label %2748

2738:                                             ; preds = %2712
  %2739 = icmp eq i32 %2715, %2718
  br i1 %2739, label %2740, label %2746

2740:                                             ; preds = %2738
  store i32 0, ptr %2714, align 4, !tbaa !5
  %2741 = getelementptr inbounds i32, ptr %8, i64 %2713
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2713
  store i32 %2742, ptr %2743, align 4, !tbaa !5
  %2744 = add nuw nsw i64 %2713, 1
  %2745 = icmp eq i64 %2744, %2468
  br i1 %2745, label %2753, label %2712, !llvm.loop !1392

2746:                                             ; preds = %2708, %2738
  %2747 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2748:                                             ; preds = %2721, %2730
  %2749 = phi ptr [ %2737, %2730 ], [ %2714, %2721 ]
  %2750 = phi i32 [ %2736, %2730 ], [ 1, %2721 ]
  %2751 = load i32, ptr %2749, align 4, !tbaa !5
  %2752 = add nsw i32 %2751, %2750
  store i32 %2752, ptr %2749, align 4, !tbaa !5
  br label %2753

2753:                                             ; preds = %2740, %2748, %2710, %2701
  %2754 = icmp eq i32 %2702, %5
  br i1 %2754, label %5477, label %2616, !llvm.loop !1393

2755:                                             ; preds = %2456
  %2756 = getelementptr inbounds i32, ptr %3, i64 %19
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = icmp eq i32 %2757, 0
  %2759 = icmp sgt i32 %5, 0
  br i1 %2758, label %2769, label %2760

2760:                                             ; preds = %2755
  br i1 %2759, label %2761, label %5477

2761:                                             ; preds = %2760
  %2762 = icmp sgt i32 %13, 1
  %2763 = icmp sgt i32 %13, 0
  %2764 = add i32 %13, -2
  %2765 = zext i32 %2764 to i64
  %2766 = zext i32 %13 to i64
  %2767 = add nuw i32 %5, 1
  %2768 = icmp eq i32 %13, 1
  br label %2910

2769:                                             ; preds = %2755
  br i1 %2759, label %2770, label %5477

2770:                                             ; preds = %2769
  %2771 = icmp sgt i32 %13, 1
  %2772 = icmp sgt i32 %13, 0
  %2773 = add i32 %13, -2
  %2774 = zext i32 %2773 to i64
  %2775 = zext i32 %13 to i64
  %2776 = add nuw i32 %5, 1
  %2777 = icmp eq i32 %13, 1
  br label %2778

2778:                                             ; preds = %2770, %2908
  %2779 = phi i32 [ 0, %2770 ], [ %2860, %2908 ]
  %2780 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2771, label %2781, label %2850

2781:                                             ; preds = %2778, %2840
  %2782 = phi i32 [ %2849, %2840 ], [ 0, %2778 ]
  %2783 = phi i64 [ %2791, %2840 ], [ %2775, %2778 ]
  %2784 = phi i64 [ %2848, %2840 ], [ %2774, %2778 ]
  %2785 = phi i32 [ %2846, %2840 ], [ %2780, %2778 ]
  %2786 = sub i32 %2773, %2782
  %2787 = tail call i32 @llvm.smin.i32(i32 %2786, i32 0)
  %2788 = sub i32 %2786, %2787
  %2789 = zext i32 %2788 to i64
  %2790 = add nuw nsw i64 %2789, 1
  %2791 = add nsw i64 %2783, -1
  %2792 = icmp ult i32 %2788, 31
  br i1 %2792, label %2828, label %2793

2793:                                             ; preds = %2781
  %2794 = and i64 %2790, 8589934560
  %2795 = sub i64 %2784, %2794
  br label %2796

2796:                                             ; preds = %2796, %2793
  %2797 = phi i64 [ 0, %2793 ], [ %2820, %2796 ]
  %2798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2816, %2796 ]
  %2799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2817, %2796 ]
  %2800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2818, %2796 ]
  %2801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2793 ], [ %2819, %2796 ]
  %2802 = sub i64 %2784, %2797
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2802
  %2804 = getelementptr inbounds i32, ptr %2803, i64 -7
  %2805 = load <8 x i32>, ptr %2804, align 4, !tbaa !5
  %2806 = shufflevector <8 x i32> %2805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2807 = getelementptr inbounds i32, ptr %2803, i64 -15
  %2808 = load <8 x i32>, ptr %2807, align 4, !tbaa !5
  %2809 = shufflevector <8 x i32> %2808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2810 = getelementptr inbounds i32, ptr %2803, i64 -23
  %2811 = load <8 x i32>, ptr %2810, align 4, !tbaa !5
  %2812 = shufflevector <8 x i32> %2811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2813 = getelementptr inbounds i32, ptr %2803, i64 -31
  %2814 = load <8 x i32>, ptr %2813, align 4, !tbaa !5
  %2815 = shufflevector <8 x i32> %2814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2816 = mul <8 x i32> %2806, %2798
  %2817 = mul <8 x i32> %2809, %2799
  %2818 = mul <8 x i32> %2812, %2800
  %2819 = mul <8 x i32> %2815, %2801
  %2820 = add nuw i64 %2797, 32
  %2821 = icmp eq i64 %2820, %2794
  br i1 %2821, label %2822, label %2796, !llvm.loop !1394

2822:                                             ; preds = %2796
  %2823 = mul <8 x i32> %2817, %2816
  %2824 = mul <8 x i32> %2818, %2823
  %2825 = mul <8 x i32> %2819, %2824
  %2826 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2825)
  %2827 = icmp eq i64 %2790, %2794
  br i1 %2827, label %2840, label %2828

2828:                                             ; preds = %2781, %2822
  %2829 = phi i64 [ %2784, %2781 ], [ %2795, %2822 ]
  %2830 = phi i32 [ 1, %2781 ], [ %2826, %2822 ]
  br label %2831

2831:                                             ; preds = %2828, %2831
  %2832 = phi i64 [ %2837, %2831 ], [ %2829, %2828 ]
  %2833 = phi i32 [ %2836, %2831 ], [ %2830, %2828 ]
  %2834 = getelementptr inbounds i32, ptr %9, i64 %2832
  %2835 = load i32, ptr %2834, align 4, !tbaa !5
  %2836 = mul nsw i32 %2835, %2833
  %2837 = add nsw i64 %2832, -1
  %2838 = trunc i64 %2832 to i32
  %2839 = icmp sgt i32 %2838, 0
  br i1 %2839, label %2831, label %2840, !llvm.loop !1395

2840:                                             ; preds = %2831, %2822
  %2841 = phi i32 [ %2826, %2822 ], [ %2836, %2831 ]
  %2842 = and i64 %2791, 4294967295
  %2843 = getelementptr inbounds i32, ptr %6, i64 %2842
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = mul nsw i32 %2844, %2841
  %2846 = add nsw i32 %2845, %2785
  %2847 = icmp sgt i64 %2783, 2
  %2848 = add nsw i64 %2784, -1
  %2849 = add i32 %2782, 1
  br i1 %2847, label %2781, label %2850, !llvm.loop !1396

2850:                                             ; preds = %2840, %2778
  %2851 = phi i32 [ %2780, %2778 ], [ %2846, %2840 ]
  %2852 = sext i32 %2851 to i64
  %2853 = getelementptr inbounds double, ptr %2450, i64 %2852
  %2854 = load double, ptr %2853, align 8, !tbaa !18
  %2855 = fptosi double %2854 to i32
  %2856 = load i32, ptr %2452, align 4, !tbaa !5
  %2857 = icmp sgt i32 %2856, %2855
  br i1 %2857, label %2858, label %2859

2858:                                             ; preds = %2850
  store i32 %2855, ptr %2452, align 4, !tbaa !5
  br label %2859

2859:                                             ; preds = %2858, %2850
  %2860 = add nuw nsw i32 %2779, 1
  br i1 %2772, label %2861, label %2908

2861:                                             ; preds = %2859
  %2862 = load i32, ptr %4, align 4, !tbaa !5
  %2863 = load i32, ptr %12, align 4, !tbaa !5
  %2864 = add nsw i32 %2863, -1
  %2865 = icmp slt i32 %2862, %2864
  br i1 %2865, label %2885, label %2866

2866:                                             ; preds = %2861
  %2867 = icmp eq i32 %2862, %2864
  br i1 %2867, label %2868, label %2901

2868:                                             ; preds = %2866
  store i32 0, ptr %4, align 4, !tbaa !5
  %2869 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2869, ptr %6, align 4, !tbaa !5
  br i1 %2777, label %2908, label %2870

2870:                                             ; preds = %2868, %2895
  %2871 = phi i64 [ %2899, %2895 ], [ 1, %2868 ]
  %2872 = getelementptr inbounds i32, ptr %4, i64 %2871
  %2873 = load i32, ptr %2872, align 4, !tbaa !5
  %2874 = getelementptr inbounds i32, ptr %12, i64 %2871
  %2875 = load i32, ptr %2874, align 4, !tbaa !5
  %2876 = add nsw i32 %2875, -1
  %2877 = icmp slt i32 %2873, %2876
  br i1 %2877, label %2878, label %2893

2878:                                             ; preds = %2870
  br i1 %2865, label %2885, label %2879

2879:                                             ; preds = %2878
  %2880 = getelementptr inbounds i32, ptr %7, i64 %2871
  %2881 = load i32, ptr %2880, align 4, !tbaa !5
  %2882 = getelementptr inbounds i32, ptr %6, i64 %2871
  %2883 = load i32, ptr %2882, align 4, !tbaa !5
  %2884 = add nsw i32 %2883, %2881
  store i32 %2884, ptr %2882, align 4, !tbaa !5
  br label %2903

2885:                                             ; preds = %2861, %2878
  %2886 = phi i32 [ %2873, %2878 ], [ %2862, %2861 ]
  %2887 = phi ptr [ %2872, %2878 ], [ %4, %2861 ]
  %2888 = phi i64 [ %2871, %2878 ], [ 0, %2861 ]
  %2889 = add nsw i32 %2886, 1
  store i32 %2889, ptr %2887, align 4, !tbaa !5
  %2890 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2891 = load i32, ptr %2890, align 4, !tbaa !5
  %2892 = getelementptr inbounds i32, ptr %6, i64 %2888
  br label %2903

2893:                                             ; preds = %2870
  %2894 = icmp eq i32 %2873, %2876
  br i1 %2894, label %2895, label %2901

2895:                                             ; preds = %2893
  store i32 0, ptr %2872, align 4, !tbaa !5
  %2896 = getelementptr inbounds i32, ptr %8, i64 %2871
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2871
  store i32 %2897, ptr %2898, align 4, !tbaa !5
  %2899 = add nuw nsw i64 %2871, 1
  %2900 = icmp eq i64 %2899, %2775
  br i1 %2900, label %2908, label %2870, !llvm.loop !1397

2901:                                             ; preds = %2866, %2893
  %2902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

2903:                                             ; preds = %2879, %2885
  %2904 = phi ptr [ %2892, %2885 ], [ %2872, %2879 ]
  %2905 = phi i32 [ %2891, %2885 ], [ 1, %2879 ]
  %2906 = load i32, ptr %2904, align 4, !tbaa !5
  %2907 = add nsw i32 %2906, %2905
  store i32 %2907, ptr %2904, align 4, !tbaa !5
  br label %2908

2908:                                             ; preds = %2895, %2903, %2868, %2859
  %2909 = icmp eq i32 %2860, %5
  br i1 %2909, label %5477, label %2778, !llvm.loop !1398

2910:                                             ; preds = %2761, %3047
  %2911 = phi i32 [ 0, %2761 ], [ %2996, %3047 ]
  %2912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2762, label %2913, label %2982

2913:                                             ; preds = %2910, %2972
  %2914 = phi i32 [ %2981, %2972 ], [ 0, %2910 ]
  %2915 = phi i64 [ %2923, %2972 ], [ %2766, %2910 ]
  %2916 = phi i64 [ %2980, %2972 ], [ %2765, %2910 ]
  %2917 = phi i32 [ %2978, %2972 ], [ %2912, %2910 ]
  %2918 = sub i32 %2764, %2914
  %2919 = tail call i32 @llvm.smin.i32(i32 %2918, i32 0)
  %2920 = sub i32 %2918, %2919
  %2921 = zext i32 %2920 to i64
  %2922 = add nuw nsw i64 %2921, 1
  %2923 = add nsw i64 %2915, -1
  %2924 = icmp ult i32 %2920, 31
  br i1 %2924, label %2960, label %2925

2925:                                             ; preds = %2913
  %2926 = and i64 %2922, 8589934560
  %2927 = sub i64 %2916, %2926
  br label %2928

2928:                                             ; preds = %2928, %2925
  %2929 = phi i64 [ 0, %2925 ], [ %2952, %2928 ]
  %2930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2948, %2928 ]
  %2931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2949, %2928 ]
  %2932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2950, %2928 ]
  %2933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2925 ], [ %2951, %2928 ]
  %2934 = sub i64 %2916, %2929
  %2935 = getelementptr inbounds i32, ptr %11, i64 %2934
  %2936 = getelementptr inbounds i32, ptr %2935, i64 -7
  %2937 = load <8 x i32>, ptr %2936, align 4, !tbaa !5
  %2938 = shufflevector <8 x i32> %2937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2939 = getelementptr inbounds i32, ptr %2935, i64 -15
  %2940 = load <8 x i32>, ptr %2939, align 4, !tbaa !5
  %2941 = shufflevector <8 x i32> %2940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2942 = getelementptr inbounds i32, ptr %2935, i64 -23
  %2943 = load <8 x i32>, ptr %2942, align 4, !tbaa !5
  %2944 = shufflevector <8 x i32> %2943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2945 = getelementptr inbounds i32, ptr %2935, i64 -31
  %2946 = load <8 x i32>, ptr %2945, align 4, !tbaa !5
  %2947 = shufflevector <8 x i32> %2946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2948 = mul <8 x i32> %2938, %2930
  %2949 = mul <8 x i32> %2941, %2931
  %2950 = mul <8 x i32> %2944, %2932
  %2951 = mul <8 x i32> %2947, %2933
  %2952 = add nuw i64 %2929, 32
  %2953 = icmp eq i64 %2952, %2926
  br i1 %2953, label %2954, label %2928, !llvm.loop !1399

2954:                                             ; preds = %2928
  %2955 = mul <8 x i32> %2949, %2948
  %2956 = mul <8 x i32> %2950, %2955
  %2957 = mul <8 x i32> %2951, %2956
  %2958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2957)
  %2959 = icmp eq i64 %2922, %2926
  br i1 %2959, label %2972, label %2960

2960:                                             ; preds = %2913, %2954
  %2961 = phi i64 [ %2916, %2913 ], [ %2927, %2954 ]
  %2962 = phi i32 [ 1, %2913 ], [ %2958, %2954 ]
  br label %2963

2963:                                             ; preds = %2960, %2963
  %2964 = phi i64 [ %2969, %2963 ], [ %2961, %2960 ]
  %2965 = phi i32 [ %2968, %2963 ], [ %2962, %2960 ]
  %2966 = getelementptr inbounds i32, ptr %11, i64 %2964
  %2967 = load i32, ptr %2966, align 4, !tbaa !5
  %2968 = mul nsw i32 %2967, %2965
  %2969 = add nsw i64 %2964, -1
  %2970 = trunc i64 %2964 to i32
  %2971 = icmp sgt i32 %2970, 0
  br i1 %2971, label %2963, label %2972, !llvm.loop !1400

2972:                                             ; preds = %2963, %2954
  %2973 = phi i32 [ %2958, %2954 ], [ %2968, %2963 ]
  %2974 = and i64 %2923, 4294967295
  %2975 = getelementptr inbounds i32, ptr %6, i64 %2974
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = mul nsw i32 %2976, %2973
  %2978 = add nsw i32 %2977, %2917
  %2979 = icmp sgt i64 %2915, 2
  %2980 = add nsw i64 %2916, -1
  %2981 = add i32 %2914, 1
  br i1 %2979, label %2913, label %2982, !llvm.loop !1401

2982:                                             ; preds = %2972, %2910
  %2983 = phi i32 [ %2912, %2910 ], [ %2978, %2972 ]
  %2984 = icmp slt i32 %2983, %5
  br i1 %2984, label %2987, label %2985

2985:                                             ; preds = %2982
  %2986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

2987:                                             ; preds = %2982
  %2988 = sext i32 %2983 to i64
  %2989 = getelementptr inbounds double, ptr %2450, i64 %2988
  %2990 = load double, ptr %2989, align 8, !tbaa !18
  %2991 = fptosi double %2990 to i32
  %2992 = load i32, ptr %2452, align 4, !tbaa !5
  %2993 = icmp sgt i32 %2992, %2991
  br i1 %2993, label %2994, label %2995

2994:                                             ; preds = %2987
  store i32 %2991, ptr %2452, align 4, !tbaa !5
  br label %2995

2995:                                             ; preds = %2994, %2987
  %2996 = add nuw nsw i32 %2911, 1
  br i1 %2763, label %2997, label %3047

2997:                                             ; preds = %2995
  %2998 = load i32, ptr %4, align 4, !tbaa !5
  %2999 = load i32, ptr %12, align 4, !tbaa !5
  %3000 = add nsw i32 %2999, -1
  %3001 = icmp slt i32 %2998, %3000
  br i1 %3001, label %3024, label %3002

3002:                                             ; preds = %2997
  %3003 = icmp eq i32 %2998, %3000
  br i1 %3003, label %3004, label %3040

3004:                                             ; preds = %3002
  store i32 0, ptr %4, align 4, !tbaa !5
  %3005 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3005, ptr %6, align 4, !tbaa !5
  br i1 %2768, label %3047, label %3006

3006:                                             ; preds = %3004, %3034
  %3007 = phi i64 [ %3038, %3034 ], [ 1, %3004 ]
  %3008 = getelementptr inbounds i32, ptr %4, i64 %3007
  %3009 = load i32, ptr %3008, align 4, !tbaa !5
  %3010 = getelementptr inbounds i32, ptr %12, i64 %3007
  %3011 = load i32, ptr %3010, align 4, !tbaa !5
  %3012 = add nsw i32 %3011, -1
  %3013 = icmp slt i32 %3009, %3012
  br i1 %3013, label %3014, label %3032

3014:                                             ; preds = %3006
  br i1 %3001, label %3024, label %3015

3015:                                             ; preds = %3014
  %3016 = shl i64 %3007, 32
  %3017 = add i64 %3016, -4294967296
  %3018 = ashr exact i64 %3017, 32
  %3019 = getelementptr inbounds i32, ptr %7, i64 %3018
  %3020 = load i32, ptr %3019, align 4, !tbaa !5
  %3021 = getelementptr inbounds i32, ptr %6, i64 %3007
  %3022 = load i32, ptr %3021, align 4, !tbaa !5
  %3023 = add nsw i32 %3022, %3020
  store i32 %3023, ptr %3021, align 4, !tbaa !5
  br label %3042

3024:                                             ; preds = %2997, %3014
  %3025 = phi i32 [ %3009, %3014 ], [ %2998, %2997 ]
  %3026 = phi ptr [ %3008, %3014 ], [ %4, %2997 ]
  %3027 = phi i64 [ %3007, %3014 ], [ 0, %2997 ]
  %3028 = add nsw i32 %3025, 1
  store i32 %3028, ptr %3026, align 4, !tbaa !5
  %3029 = getelementptr inbounds i32, ptr %7, i64 %3027
  %3030 = load i32, ptr %3029, align 4, !tbaa !5
  %3031 = getelementptr inbounds i32, ptr %6, i64 %3027
  br label %3042

3032:                                             ; preds = %3006
  %3033 = icmp eq i32 %3009, %3012
  br i1 %3033, label %3034, label %3040

3034:                                             ; preds = %3032
  store i32 0, ptr %3008, align 4, !tbaa !5
  %3035 = getelementptr inbounds i32, ptr %8, i64 %3007
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3007
  store i32 %3036, ptr %3037, align 4, !tbaa !5
  %3038 = add nuw nsw i64 %3007, 1
  %3039 = icmp eq i64 %3038, %2766
  br i1 %3039, label %3047, label %3006, !llvm.loop !1402

3040:                                             ; preds = %3002, %3032
  %3041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3042:                                             ; preds = %3015, %3024
  %3043 = phi ptr [ %3031, %3024 ], [ %3008, %3015 ]
  %3044 = phi i32 [ %3030, %3024 ], [ 1, %3015 ]
  %3045 = load i32, ptr %3043, align 4, !tbaa !5
  %3046 = add nsw i32 %3045, %3044
  store i32 %3046, ptr %3043, align 4, !tbaa !5
  br label %3047

3047:                                             ; preds = %3034, %3042, %3004, %2995
  %3048 = icmp eq i32 %2996, %5
  br i1 %3048, label %5477, label %2910, !llvm.loop !1403

3049:                                             ; preds = %2456
  %3050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

3051:                                             ; preds = %18
  %3052 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3053 = load ptr, ptr %3052, align 8, !tbaa !9
  %3054 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3055 = load ptr, ptr %3054, align 8, !tbaa !9
  %3056 = load double, ptr %3053, align 8, !tbaa !18
  %3057 = fptosi double %3056 to i64
  store i64 %3057, ptr %3055, align 8, !tbaa !120
  %3058 = icmp eq i32 %13, 0
  br i1 %3058, label %5477, label %3059

3059:                                             ; preds = %3051
  switch i32 %1, label %3656 [
    i32 1, label %3060
    i32 0, label %3360
  ]

3060:                                             ; preds = %3059
  %3061 = getelementptr inbounds i32, ptr %3, i64 %19
  %3062 = load i32, ptr %3061, align 4, !tbaa !5
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp sgt i32 %5, 0
  br i1 %3063, label %3074, label %3065

3065:                                             ; preds = %3060
  br i1 %3064, label %3066, label %5477

3066:                                             ; preds = %3065
  %3067 = icmp sgt i32 %13, 1
  %3068 = icmp sgt i32 %13, 0
  %3069 = add i32 %13, -2
  %3070 = zext i32 %3069 to i64
  %3071 = zext i32 %13 to i64
  %3072 = add nuw i32 %5, 1
  %3073 = icmp eq i32 %13, 1
  br label %3220

3074:                                             ; preds = %3060
  br i1 %3064, label %3075, label %5477

3075:                                             ; preds = %3074
  %3076 = icmp sgt i32 %13, 1
  %3077 = icmp sgt i32 %13, 0
  %3078 = add i32 %13, -2
  %3079 = zext i32 %3078 to i64
  %3080 = zext i32 %13 to i64
  %3081 = add nuw i32 %5, 1
  %3082 = icmp eq i32 %13, 1
  br label %3083

3083:                                             ; preds = %3075, %3218
  %3084 = phi i64 [ %3057, %3075 ], [ %3169, %3218 ]
  %3085 = phi i32 [ 0, %3075 ], [ %3170, %3218 ]
  %3086 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3076, label %3087, label %3156

3087:                                             ; preds = %3083, %3146
  %3088 = phi i32 [ %3155, %3146 ], [ 0, %3083 ]
  %3089 = phi i64 [ %3097, %3146 ], [ %3080, %3083 ]
  %3090 = phi i64 [ %3154, %3146 ], [ %3079, %3083 ]
  %3091 = phi i32 [ %3152, %3146 ], [ %3086, %3083 ]
  %3092 = sub i32 %3078, %3088
  %3093 = tail call i32 @llvm.smin.i32(i32 %3092, i32 0)
  %3094 = sub i32 %3092, %3093
  %3095 = zext i32 %3094 to i64
  %3096 = add nuw nsw i64 %3095, 1
  %3097 = add nsw i64 %3089, -1
  %3098 = icmp ult i32 %3094, 31
  br i1 %3098, label %3134, label %3099

3099:                                             ; preds = %3087
  %3100 = and i64 %3096, 8589934560
  %3101 = sub i64 %3090, %3100
  br label %3102

3102:                                             ; preds = %3102, %3099
  %3103 = phi i64 [ 0, %3099 ], [ %3126, %3102 ]
  %3104 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3122, %3102 ]
  %3105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3123, %3102 ]
  %3106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3124, %3102 ]
  %3107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3099 ], [ %3125, %3102 ]
  %3108 = sub i64 %3090, %3103
  %3109 = getelementptr inbounds i32, ptr %9, i64 %3108
  %3110 = getelementptr inbounds i32, ptr %3109, i64 -7
  %3111 = load <8 x i32>, ptr %3110, align 4, !tbaa !5
  %3112 = shufflevector <8 x i32> %3111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3113 = getelementptr inbounds i32, ptr %3109, i64 -15
  %3114 = load <8 x i32>, ptr %3113, align 4, !tbaa !5
  %3115 = shufflevector <8 x i32> %3114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3116 = getelementptr inbounds i32, ptr %3109, i64 -23
  %3117 = load <8 x i32>, ptr %3116, align 4, !tbaa !5
  %3118 = shufflevector <8 x i32> %3117, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3119 = getelementptr inbounds i32, ptr %3109, i64 -31
  %3120 = load <8 x i32>, ptr %3119, align 4, !tbaa !5
  %3121 = shufflevector <8 x i32> %3120, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3122 = mul <8 x i32> %3112, %3104
  %3123 = mul <8 x i32> %3115, %3105
  %3124 = mul <8 x i32> %3118, %3106
  %3125 = mul <8 x i32> %3121, %3107
  %3126 = add nuw i64 %3103, 32
  %3127 = icmp eq i64 %3126, %3100
  br i1 %3127, label %3128, label %3102, !llvm.loop !1404

3128:                                             ; preds = %3102
  %3129 = mul <8 x i32> %3123, %3122
  %3130 = mul <8 x i32> %3124, %3129
  %3131 = mul <8 x i32> %3125, %3130
  %3132 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3131)
  %3133 = icmp eq i64 %3096, %3100
  br i1 %3133, label %3146, label %3134

3134:                                             ; preds = %3087, %3128
  %3135 = phi i64 [ %3090, %3087 ], [ %3101, %3128 ]
  %3136 = phi i32 [ 1, %3087 ], [ %3132, %3128 ]
  br label %3137

3137:                                             ; preds = %3134, %3137
  %3138 = phi i64 [ %3143, %3137 ], [ %3135, %3134 ]
  %3139 = phi i32 [ %3142, %3137 ], [ %3136, %3134 ]
  %3140 = getelementptr inbounds i32, ptr %9, i64 %3138
  %3141 = load i32, ptr %3140, align 4, !tbaa !5
  %3142 = mul nsw i32 %3141, %3139
  %3143 = add nsw i64 %3138, -1
  %3144 = trunc i64 %3138 to i32
  %3145 = icmp sgt i32 %3144, 0
  br i1 %3145, label %3137, label %3146, !llvm.loop !1405

3146:                                             ; preds = %3137, %3128
  %3147 = phi i32 [ %3132, %3128 ], [ %3142, %3137 ]
  %3148 = and i64 %3097, 4294967295
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3148
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = mul nsw i32 %3150, %3147
  %3152 = add nsw i32 %3151, %3091
  %3153 = icmp sgt i64 %3089, 2
  %3154 = add nsw i64 %3090, -1
  %3155 = add i32 %3088, 1
  br i1 %3153, label %3087, label %3156, !llvm.loop !1406

3156:                                             ; preds = %3146, %3083
  %3157 = phi i32 [ %3086, %3083 ], [ %3152, %3146 ]
  %3158 = sext i32 %3157 to i64
  %3159 = getelementptr inbounds double, ptr %2, i64 %3158
  %3160 = load double, ptr %3159, align 8, !tbaa !18
  %3161 = getelementptr inbounds double, ptr %3053, i64 %3158
  %3162 = load double, ptr %3161, align 8, !tbaa !18
  %3163 = fptosi double %3162 to i64
  %3164 = fcmp fast one double %3160, 0.000000e+00
  %3165 = icmp sgt i64 %3084, %3163
  %3166 = select i1 %3164, i1 %3165, i1 false
  br i1 %3166, label %3167, label %3168

3167:                                             ; preds = %3156
  store i64 %3163, ptr %3055, align 8, !tbaa !120
  br label %3168

3168:                                             ; preds = %3167, %3156
  %3169 = phi i64 [ %3163, %3167 ], [ %3084, %3156 ]
  %3170 = add nuw nsw i32 %3085, 1
  br i1 %3077, label %3171, label %3218

3171:                                             ; preds = %3168
  %3172 = load i32, ptr %4, align 4, !tbaa !5
  %3173 = load i32, ptr %12, align 4, !tbaa !5
  %3174 = add nsw i32 %3173, -1
  %3175 = icmp slt i32 %3172, %3174
  br i1 %3175, label %3195, label %3176

3176:                                             ; preds = %3171
  %3177 = icmp eq i32 %3172, %3174
  br i1 %3177, label %3178, label %3211

3178:                                             ; preds = %3176
  store i32 0, ptr %4, align 4, !tbaa !5
  %3179 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3179, ptr %6, align 4, !tbaa !5
  br i1 %3082, label %3218, label %3180

3180:                                             ; preds = %3178, %3205
  %3181 = phi i64 [ %3209, %3205 ], [ 1, %3178 ]
  %3182 = getelementptr inbounds i32, ptr %4, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = getelementptr inbounds i32, ptr %12, i64 %3181
  %3185 = load i32, ptr %3184, align 4, !tbaa !5
  %3186 = add nsw i32 %3185, -1
  %3187 = icmp slt i32 %3183, %3186
  br i1 %3187, label %3188, label %3203

3188:                                             ; preds = %3180
  br i1 %3175, label %3195, label %3189

3189:                                             ; preds = %3188
  %3190 = getelementptr inbounds i32, ptr %7, i64 %3181
  %3191 = load i32, ptr %3190, align 4, !tbaa !5
  %3192 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3193 = load i32, ptr %3192, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, %3191
  store i32 %3194, ptr %3192, align 4, !tbaa !5
  br label %3213

3195:                                             ; preds = %3171, %3188
  %3196 = phi i32 [ %3183, %3188 ], [ %3172, %3171 ]
  %3197 = phi ptr [ %3182, %3188 ], [ %4, %3171 ]
  %3198 = phi i64 [ %3181, %3188 ], [ 0, %3171 ]
  %3199 = add nsw i32 %3196, 1
  store i32 %3199, ptr %3197, align 4, !tbaa !5
  %3200 = getelementptr inbounds i32, ptr %7, i64 %3198
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %6, i64 %3198
  br label %3213

3203:                                             ; preds = %3180
  %3204 = icmp eq i32 %3183, %3186
  br i1 %3204, label %3205, label %3211

3205:                                             ; preds = %3203
  store i32 0, ptr %3182, align 4, !tbaa !5
  %3206 = getelementptr inbounds i32, ptr %8, i64 %3181
  %3207 = load i32, ptr %3206, align 4, !tbaa !5
  %3208 = getelementptr inbounds i32, ptr %6, i64 %3181
  store i32 %3207, ptr %3208, align 4, !tbaa !5
  %3209 = add nuw nsw i64 %3181, 1
  %3210 = icmp eq i64 %3209, %3080
  br i1 %3210, label %3218, label %3180, !llvm.loop !1407

3211:                                             ; preds = %3176, %3203
  %3212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3213:                                             ; preds = %3189, %3195
  %3214 = phi ptr [ %3202, %3195 ], [ %3182, %3189 ]
  %3215 = phi i32 [ %3201, %3195 ], [ 1, %3189 ]
  %3216 = load i32, ptr %3214, align 4, !tbaa !5
  %3217 = add nsw i32 %3216, %3215
  store i32 %3217, ptr %3214, align 4, !tbaa !5
  br label %3218

3218:                                             ; preds = %3205, %3213, %3178, %3168
  %3219 = icmp eq i32 %3170, %5
  br i1 %3219, label %5477, label %3083, !llvm.loop !1408

3220:                                             ; preds = %3066, %3358
  %3221 = phi i64 [ %3057, %3066 ], [ %3306, %3358 ]
  %3222 = phi i32 [ 0, %3066 ], [ %3307, %3358 ]
  %3223 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3067, label %3224, label %3293

3224:                                             ; preds = %3220, %3283
  %3225 = phi i32 [ %3292, %3283 ], [ 0, %3220 ]
  %3226 = phi i64 [ %3234, %3283 ], [ %3071, %3220 ]
  %3227 = phi i64 [ %3291, %3283 ], [ %3070, %3220 ]
  %3228 = phi i32 [ %3289, %3283 ], [ %3223, %3220 ]
  %3229 = sub i32 %3069, %3225
  %3230 = tail call i32 @llvm.smin.i32(i32 %3229, i32 0)
  %3231 = sub i32 %3229, %3230
  %3232 = zext i32 %3231 to i64
  %3233 = add nuw nsw i64 %3232, 1
  %3234 = add nsw i64 %3226, -1
  %3235 = icmp ult i32 %3231, 31
  br i1 %3235, label %3271, label %3236

3236:                                             ; preds = %3224
  %3237 = and i64 %3233, 8589934560
  %3238 = sub i64 %3227, %3237
  br label %3239

3239:                                             ; preds = %3239, %3236
  %3240 = phi i64 [ 0, %3236 ], [ %3263, %3239 ]
  %3241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3259, %3239 ]
  %3242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3260, %3239 ]
  %3243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3261, %3239 ]
  %3244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3236 ], [ %3262, %3239 ]
  %3245 = sub i64 %3227, %3240
  %3246 = getelementptr inbounds i32, ptr %11, i64 %3245
  %3247 = getelementptr inbounds i32, ptr %3246, i64 -7
  %3248 = load <8 x i32>, ptr %3247, align 4, !tbaa !5
  %3249 = shufflevector <8 x i32> %3248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3250 = getelementptr inbounds i32, ptr %3246, i64 -15
  %3251 = load <8 x i32>, ptr %3250, align 4, !tbaa !5
  %3252 = shufflevector <8 x i32> %3251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3253 = getelementptr inbounds i32, ptr %3246, i64 -23
  %3254 = load <8 x i32>, ptr %3253, align 4, !tbaa !5
  %3255 = shufflevector <8 x i32> %3254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3256 = getelementptr inbounds i32, ptr %3246, i64 -31
  %3257 = load <8 x i32>, ptr %3256, align 4, !tbaa !5
  %3258 = shufflevector <8 x i32> %3257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3259 = mul <8 x i32> %3249, %3241
  %3260 = mul <8 x i32> %3252, %3242
  %3261 = mul <8 x i32> %3255, %3243
  %3262 = mul <8 x i32> %3258, %3244
  %3263 = add nuw i64 %3240, 32
  %3264 = icmp eq i64 %3263, %3237
  br i1 %3264, label %3265, label %3239, !llvm.loop !1409

3265:                                             ; preds = %3239
  %3266 = mul <8 x i32> %3260, %3259
  %3267 = mul <8 x i32> %3261, %3266
  %3268 = mul <8 x i32> %3262, %3267
  %3269 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3268)
  %3270 = icmp eq i64 %3233, %3237
  br i1 %3270, label %3283, label %3271

3271:                                             ; preds = %3224, %3265
  %3272 = phi i64 [ %3227, %3224 ], [ %3238, %3265 ]
  %3273 = phi i32 [ 1, %3224 ], [ %3269, %3265 ]
  br label %3274

3274:                                             ; preds = %3271, %3274
  %3275 = phi i64 [ %3280, %3274 ], [ %3272, %3271 ]
  %3276 = phi i32 [ %3279, %3274 ], [ %3273, %3271 ]
  %3277 = getelementptr inbounds i32, ptr %11, i64 %3275
  %3278 = load i32, ptr %3277, align 4, !tbaa !5
  %3279 = mul nsw i32 %3278, %3276
  %3280 = add nsw i64 %3275, -1
  %3281 = trunc i64 %3275 to i32
  %3282 = icmp sgt i32 %3281, 0
  br i1 %3282, label %3274, label %3283, !llvm.loop !1410

3283:                                             ; preds = %3274, %3265
  %3284 = phi i32 [ %3269, %3265 ], [ %3279, %3274 ]
  %3285 = and i64 %3234, 4294967295
  %3286 = getelementptr inbounds i32, ptr %6, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = mul nsw i32 %3287, %3284
  %3289 = add nsw i32 %3288, %3228
  %3290 = icmp sgt i64 %3226, 2
  %3291 = add nsw i64 %3227, -1
  %3292 = add i32 %3225, 1
  br i1 %3290, label %3224, label %3293, !llvm.loop !1411

3293:                                             ; preds = %3283, %3220
  %3294 = phi i32 [ %3223, %3220 ], [ %3289, %3283 ]
  %3295 = icmp slt i32 %3294, %5
  br i1 %3295, label %3298, label %3296

3296:                                             ; preds = %3293
  %3297 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3298:                                             ; preds = %3293
  %3299 = sext i32 %3294 to i64
  %3300 = getelementptr inbounds double, ptr %3053, i64 %3299
  %3301 = load double, ptr %3300, align 8, !tbaa !18
  %3302 = fptosi double %3301 to i64
  %3303 = icmp sgt i64 %3221, %3302
  br i1 %3303, label %3304, label %3305

3304:                                             ; preds = %3298
  store i64 %3302, ptr %3055, align 8, !tbaa !120
  br label %3305

3305:                                             ; preds = %3298, %3304
  %3306 = phi i64 [ %3221, %3298 ], [ %3302, %3304 ]
  %3307 = add nuw nsw i32 %3222, 1
  br i1 %3068, label %3308, label %3358

3308:                                             ; preds = %3305
  %3309 = load i32, ptr %4, align 4, !tbaa !5
  %3310 = load i32, ptr %12, align 4, !tbaa !5
  %3311 = add nsw i32 %3310, -1
  %3312 = icmp slt i32 %3309, %3311
  br i1 %3312, label %3335, label %3313

3313:                                             ; preds = %3308
  %3314 = icmp eq i32 %3309, %3311
  br i1 %3314, label %3315, label %3351

3315:                                             ; preds = %3313
  store i32 0, ptr %4, align 4, !tbaa !5
  %3316 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3316, ptr %6, align 4, !tbaa !5
  br i1 %3073, label %3358, label %3317

3317:                                             ; preds = %3315, %3345
  %3318 = phi i64 [ %3349, %3345 ], [ 1, %3315 ]
  %3319 = getelementptr inbounds i32, ptr %4, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = getelementptr inbounds i32, ptr %12, i64 %3318
  %3322 = load i32, ptr %3321, align 4, !tbaa !5
  %3323 = add nsw i32 %3322, -1
  %3324 = icmp slt i32 %3320, %3323
  br i1 %3324, label %3325, label %3343

3325:                                             ; preds = %3317
  br i1 %3312, label %3335, label %3326

3326:                                             ; preds = %3325
  %3327 = shl i64 %3318, 32
  %3328 = add i64 %3327, -4294967296
  %3329 = ashr exact i64 %3328, 32
  %3330 = getelementptr inbounds i32, ptr %7, i64 %3329
  %3331 = load i32, ptr %3330, align 4, !tbaa !5
  %3332 = getelementptr inbounds i32, ptr %6, i64 %3318
  %3333 = load i32, ptr %3332, align 4, !tbaa !5
  %3334 = add nsw i32 %3333, %3331
  store i32 %3334, ptr %3332, align 4, !tbaa !5
  br label %3353

3335:                                             ; preds = %3308, %3325
  %3336 = phi i32 [ %3320, %3325 ], [ %3309, %3308 ]
  %3337 = phi ptr [ %3319, %3325 ], [ %4, %3308 ]
  %3338 = phi i64 [ %3318, %3325 ], [ 0, %3308 ]
  %3339 = add nsw i32 %3336, 1
  store i32 %3339, ptr %3337, align 4, !tbaa !5
  %3340 = getelementptr inbounds i32, ptr %7, i64 %3338
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %6, i64 %3338
  br label %3353

3343:                                             ; preds = %3317
  %3344 = icmp eq i32 %3320, %3323
  br i1 %3344, label %3345, label %3351

3345:                                             ; preds = %3343
  store i32 0, ptr %3319, align 4, !tbaa !5
  %3346 = getelementptr inbounds i32, ptr %8, i64 %3318
  %3347 = load i32, ptr %3346, align 4, !tbaa !5
  %3348 = getelementptr inbounds i32, ptr %6, i64 %3318
  store i32 %3347, ptr %3348, align 4, !tbaa !5
  %3349 = add nuw nsw i64 %3318, 1
  %3350 = icmp eq i64 %3349, %3071
  br i1 %3350, label %3358, label %3317, !llvm.loop !1412

3351:                                             ; preds = %3313, %3343
  %3352 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3353:                                             ; preds = %3326, %3335
  %3354 = phi ptr [ %3342, %3335 ], [ %3319, %3326 ]
  %3355 = phi i32 [ %3341, %3335 ], [ 1, %3326 ]
  %3356 = load i32, ptr %3354, align 4, !tbaa !5
  %3357 = add nsw i32 %3356, %3355
  store i32 %3357, ptr %3354, align 4, !tbaa !5
  br label %3358

3358:                                             ; preds = %3345, %3353, %3315, %3305
  %3359 = icmp eq i32 %3307, %5
  br i1 %3359, label %5477, label %3220, !llvm.loop !1413

3360:                                             ; preds = %3059
  %3361 = getelementptr inbounds i32, ptr %3, i64 %19
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = icmp eq i32 %3362, 0
  %3364 = icmp sgt i32 %5, 0
  br i1 %3363, label %3374, label %3365

3365:                                             ; preds = %3360
  br i1 %3364, label %3366, label %5477

3366:                                             ; preds = %3365
  %3367 = icmp sgt i32 %13, 1
  %3368 = icmp sgt i32 %13, 0
  %3369 = add i32 %13, -2
  %3370 = zext i32 %3369 to i64
  %3371 = zext i32 %13 to i64
  %3372 = add nuw i32 %5, 1
  %3373 = icmp eq i32 %13, 1
  br label %3516

3374:                                             ; preds = %3360
  br i1 %3364, label %3375, label %5477

3375:                                             ; preds = %3374
  %3376 = icmp sgt i32 %13, 1
  %3377 = icmp sgt i32 %13, 0
  %3378 = add i32 %13, -2
  %3379 = zext i32 %3378 to i64
  %3380 = zext i32 %13 to i64
  %3381 = add nuw i32 %5, 1
  %3382 = icmp eq i32 %13, 1
  br label %3383

3383:                                             ; preds = %3375, %3514
  %3384 = phi i64 [ %3057, %3375 ], [ %3465, %3514 ]
  %3385 = phi i32 [ 0, %3375 ], [ %3466, %3514 ]
  %3386 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3376, label %3387, label %3456

3387:                                             ; preds = %3383, %3446
  %3388 = phi i32 [ %3455, %3446 ], [ 0, %3383 ]
  %3389 = phi i64 [ %3397, %3446 ], [ %3380, %3383 ]
  %3390 = phi i64 [ %3454, %3446 ], [ %3379, %3383 ]
  %3391 = phi i32 [ %3452, %3446 ], [ %3386, %3383 ]
  %3392 = sub i32 %3378, %3388
  %3393 = tail call i32 @llvm.smin.i32(i32 %3392, i32 0)
  %3394 = sub i32 %3392, %3393
  %3395 = zext i32 %3394 to i64
  %3396 = add nuw nsw i64 %3395, 1
  %3397 = add nsw i64 %3389, -1
  %3398 = icmp ult i32 %3394, 31
  br i1 %3398, label %3434, label %3399

3399:                                             ; preds = %3387
  %3400 = and i64 %3396, 8589934560
  %3401 = sub i64 %3390, %3400
  br label %3402

3402:                                             ; preds = %3402, %3399
  %3403 = phi i64 [ 0, %3399 ], [ %3426, %3402 ]
  %3404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3422, %3402 ]
  %3405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3423, %3402 ]
  %3406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3424, %3402 ]
  %3407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3399 ], [ %3425, %3402 ]
  %3408 = sub i64 %3390, %3403
  %3409 = getelementptr inbounds i32, ptr %9, i64 %3408
  %3410 = getelementptr inbounds i32, ptr %3409, i64 -7
  %3411 = load <8 x i32>, ptr %3410, align 4, !tbaa !5
  %3412 = shufflevector <8 x i32> %3411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3413 = getelementptr inbounds i32, ptr %3409, i64 -15
  %3414 = load <8 x i32>, ptr %3413, align 4, !tbaa !5
  %3415 = shufflevector <8 x i32> %3414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3416 = getelementptr inbounds i32, ptr %3409, i64 -23
  %3417 = load <8 x i32>, ptr %3416, align 4, !tbaa !5
  %3418 = shufflevector <8 x i32> %3417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3419 = getelementptr inbounds i32, ptr %3409, i64 -31
  %3420 = load <8 x i32>, ptr %3419, align 4, !tbaa !5
  %3421 = shufflevector <8 x i32> %3420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3422 = mul <8 x i32> %3412, %3404
  %3423 = mul <8 x i32> %3415, %3405
  %3424 = mul <8 x i32> %3418, %3406
  %3425 = mul <8 x i32> %3421, %3407
  %3426 = add nuw i64 %3403, 32
  %3427 = icmp eq i64 %3426, %3400
  br i1 %3427, label %3428, label %3402, !llvm.loop !1414

3428:                                             ; preds = %3402
  %3429 = mul <8 x i32> %3423, %3422
  %3430 = mul <8 x i32> %3424, %3429
  %3431 = mul <8 x i32> %3425, %3430
  %3432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3431)
  %3433 = icmp eq i64 %3396, %3400
  br i1 %3433, label %3446, label %3434

3434:                                             ; preds = %3387, %3428
  %3435 = phi i64 [ %3390, %3387 ], [ %3401, %3428 ]
  %3436 = phi i32 [ 1, %3387 ], [ %3432, %3428 ]
  br label %3437

3437:                                             ; preds = %3434, %3437
  %3438 = phi i64 [ %3443, %3437 ], [ %3435, %3434 ]
  %3439 = phi i32 [ %3442, %3437 ], [ %3436, %3434 ]
  %3440 = getelementptr inbounds i32, ptr %9, i64 %3438
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = mul nsw i32 %3441, %3439
  %3443 = add nsw i64 %3438, -1
  %3444 = trunc i64 %3438 to i32
  %3445 = icmp sgt i32 %3444, 0
  br i1 %3445, label %3437, label %3446, !llvm.loop !1415

3446:                                             ; preds = %3437, %3428
  %3447 = phi i32 [ %3432, %3428 ], [ %3442, %3437 ]
  %3448 = and i64 %3397, 4294967295
  %3449 = getelementptr inbounds i32, ptr %6, i64 %3448
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = mul nsw i32 %3450, %3447
  %3452 = add nsw i32 %3451, %3391
  %3453 = icmp sgt i64 %3389, 2
  %3454 = add nsw i64 %3390, -1
  %3455 = add i32 %3388, 1
  br i1 %3453, label %3387, label %3456, !llvm.loop !1416

3456:                                             ; preds = %3446, %3383
  %3457 = phi i32 [ %3386, %3383 ], [ %3452, %3446 ]
  %3458 = sext i32 %3457 to i64
  %3459 = getelementptr inbounds double, ptr %3053, i64 %3458
  %3460 = load double, ptr %3459, align 8, !tbaa !18
  %3461 = fptosi double %3460 to i64
  %3462 = icmp sgt i64 %3384, %3461
  br i1 %3462, label %3463, label %3464

3463:                                             ; preds = %3456
  store i64 %3461, ptr %3055, align 8, !tbaa !120
  br label %3464

3464:                                             ; preds = %3463, %3456
  %3465 = phi i64 [ %3461, %3463 ], [ %3384, %3456 ]
  %3466 = add nuw nsw i32 %3385, 1
  br i1 %3377, label %3467, label %3514

3467:                                             ; preds = %3464
  %3468 = load i32, ptr %4, align 4, !tbaa !5
  %3469 = load i32, ptr %12, align 4, !tbaa !5
  %3470 = add nsw i32 %3469, -1
  %3471 = icmp slt i32 %3468, %3470
  br i1 %3471, label %3491, label %3472

3472:                                             ; preds = %3467
  %3473 = icmp eq i32 %3468, %3470
  br i1 %3473, label %3474, label %3507

3474:                                             ; preds = %3472
  store i32 0, ptr %4, align 4, !tbaa !5
  %3475 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3475, ptr %6, align 4, !tbaa !5
  br i1 %3382, label %3514, label %3476

3476:                                             ; preds = %3474, %3501
  %3477 = phi i64 [ %3505, %3501 ], [ 1, %3474 ]
  %3478 = getelementptr inbounds i32, ptr %4, i64 %3477
  %3479 = load i32, ptr %3478, align 4, !tbaa !5
  %3480 = getelementptr inbounds i32, ptr %12, i64 %3477
  %3481 = load i32, ptr %3480, align 4, !tbaa !5
  %3482 = add nsw i32 %3481, -1
  %3483 = icmp slt i32 %3479, %3482
  br i1 %3483, label %3484, label %3499

3484:                                             ; preds = %3476
  br i1 %3471, label %3491, label %3485

3485:                                             ; preds = %3484
  %3486 = getelementptr inbounds i32, ptr %7, i64 %3477
  %3487 = load i32, ptr %3486, align 4, !tbaa !5
  %3488 = getelementptr inbounds i32, ptr %6, i64 %3477
  %3489 = load i32, ptr %3488, align 4, !tbaa !5
  %3490 = add nsw i32 %3489, %3487
  store i32 %3490, ptr %3488, align 4, !tbaa !5
  br label %3509

3491:                                             ; preds = %3467, %3484
  %3492 = phi i32 [ %3479, %3484 ], [ %3468, %3467 ]
  %3493 = phi ptr [ %3478, %3484 ], [ %4, %3467 ]
  %3494 = phi i64 [ %3477, %3484 ], [ 0, %3467 ]
  %3495 = add nsw i32 %3492, 1
  store i32 %3495, ptr %3493, align 4, !tbaa !5
  %3496 = getelementptr inbounds i32, ptr %7, i64 %3494
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = getelementptr inbounds i32, ptr %6, i64 %3494
  br label %3509

3499:                                             ; preds = %3476
  %3500 = icmp eq i32 %3479, %3482
  br i1 %3500, label %3501, label %3507

3501:                                             ; preds = %3499
  store i32 0, ptr %3478, align 4, !tbaa !5
  %3502 = getelementptr inbounds i32, ptr %8, i64 %3477
  %3503 = load i32, ptr %3502, align 4, !tbaa !5
  %3504 = getelementptr inbounds i32, ptr %6, i64 %3477
  store i32 %3503, ptr %3504, align 4, !tbaa !5
  %3505 = add nuw nsw i64 %3477, 1
  %3506 = icmp eq i64 %3505, %3380
  br i1 %3506, label %3514, label %3476, !llvm.loop !1417

3507:                                             ; preds = %3472, %3499
  %3508 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3509:                                             ; preds = %3485, %3491
  %3510 = phi ptr [ %3498, %3491 ], [ %3478, %3485 ]
  %3511 = phi i32 [ %3497, %3491 ], [ 1, %3485 ]
  %3512 = load i32, ptr %3510, align 4, !tbaa !5
  %3513 = add nsw i32 %3512, %3511
  store i32 %3513, ptr %3510, align 4, !tbaa !5
  br label %3514

3514:                                             ; preds = %3501, %3509, %3474, %3464
  %3515 = icmp eq i32 %3466, %5
  br i1 %3515, label %5477, label %3383, !llvm.loop !1418

3516:                                             ; preds = %3366, %3654
  %3517 = phi i64 [ %3057, %3366 ], [ %3602, %3654 ]
  %3518 = phi i32 [ 0, %3366 ], [ %3603, %3654 ]
  %3519 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3367, label %3520, label %3589

3520:                                             ; preds = %3516, %3579
  %3521 = phi i32 [ %3588, %3579 ], [ 0, %3516 ]
  %3522 = phi i64 [ %3530, %3579 ], [ %3371, %3516 ]
  %3523 = phi i64 [ %3587, %3579 ], [ %3370, %3516 ]
  %3524 = phi i32 [ %3585, %3579 ], [ %3519, %3516 ]
  %3525 = sub i32 %3369, %3521
  %3526 = tail call i32 @llvm.smin.i32(i32 %3525, i32 0)
  %3527 = sub i32 %3525, %3526
  %3528 = zext i32 %3527 to i64
  %3529 = add nuw nsw i64 %3528, 1
  %3530 = add nsw i64 %3522, -1
  %3531 = icmp ult i32 %3527, 31
  br i1 %3531, label %3567, label %3532

3532:                                             ; preds = %3520
  %3533 = and i64 %3529, 8589934560
  %3534 = sub i64 %3523, %3533
  br label %3535

3535:                                             ; preds = %3535, %3532
  %3536 = phi i64 [ 0, %3532 ], [ %3559, %3535 ]
  %3537 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3555, %3535 ]
  %3538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3556, %3535 ]
  %3539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3557, %3535 ]
  %3540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3532 ], [ %3558, %3535 ]
  %3541 = sub i64 %3523, %3536
  %3542 = getelementptr inbounds i32, ptr %11, i64 %3541
  %3543 = getelementptr inbounds i32, ptr %3542, i64 -7
  %3544 = load <8 x i32>, ptr %3543, align 4, !tbaa !5
  %3545 = shufflevector <8 x i32> %3544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3546 = getelementptr inbounds i32, ptr %3542, i64 -15
  %3547 = load <8 x i32>, ptr %3546, align 4, !tbaa !5
  %3548 = shufflevector <8 x i32> %3547, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3549 = getelementptr inbounds i32, ptr %3542, i64 -23
  %3550 = load <8 x i32>, ptr %3549, align 4, !tbaa !5
  %3551 = shufflevector <8 x i32> %3550, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3552 = getelementptr inbounds i32, ptr %3542, i64 -31
  %3553 = load <8 x i32>, ptr %3552, align 4, !tbaa !5
  %3554 = shufflevector <8 x i32> %3553, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3555 = mul <8 x i32> %3545, %3537
  %3556 = mul <8 x i32> %3548, %3538
  %3557 = mul <8 x i32> %3551, %3539
  %3558 = mul <8 x i32> %3554, %3540
  %3559 = add nuw i64 %3536, 32
  %3560 = icmp eq i64 %3559, %3533
  br i1 %3560, label %3561, label %3535, !llvm.loop !1419

3561:                                             ; preds = %3535
  %3562 = mul <8 x i32> %3556, %3555
  %3563 = mul <8 x i32> %3557, %3562
  %3564 = mul <8 x i32> %3558, %3563
  %3565 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3564)
  %3566 = icmp eq i64 %3529, %3533
  br i1 %3566, label %3579, label %3567

3567:                                             ; preds = %3520, %3561
  %3568 = phi i64 [ %3523, %3520 ], [ %3534, %3561 ]
  %3569 = phi i32 [ 1, %3520 ], [ %3565, %3561 ]
  br label %3570

3570:                                             ; preds = %3567, %3570
  %3571 = phi i64 [ %3576, %3570 ], [ %3568, %3567 ]
  %3572 = phi i32 [ %3575, %3570 ], [ %3569, %3567 ]
  %3573 = getelementptr inbounds i32, ptr %11, i64 %3571
  %3574 = load i32, ptr %3573, align 4, !tbaa !5
  %3575 = mul nsw i32 %3574, %3572
  %3576 = add nsw i64 %3571, -1
  %3577 = trunc i64 %3571 to i32
  %3578 = icmp sgt i32 %3577, 0
  br i1 %3578, label %3570, label %3579, !llvm.loop !1420

3579:                                             ; preds = %3570, %3561
  %3580 = phi i32 [ %3565, %3561 ], [ %3575, %3570 ]
  %3581 = and i64 %3530, 4294967295
  %3582 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = mul nsw i32 %3583, %3580
  %3585 = add nsw i32 %3584, %3524
  %3586 = icmp sgt i64 %3522, 2
  %3587 = add nsw i64 %3523, -1
  %3588 = add i32 %3521, 1
  br i1 %3586, label %3520, label %3589, !llvm.loop !1421

3589:                                             ; preds = %3579, %3516
  %3590 = phi i32 [ %3519, %3516 ], [ %3585, %3579 ]
  %3591 = icmp slt i32 %3590, %5
  br i1 %3591, label %3594, label %3592

3592:                                             ; preds = %3589
  %3593 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3594:                                             ; preds = %3589
  %3595 = sext i32 %3590 to i64
  %3596 = getelementptr inbounds double, ptr %3053, i64 %3595
  %3597 = load double, ptr %3596, align 8, !tbaa !18
  %3598 = fptosi double %3597 to i64
  %3599 = icmp sgt i64 %3517, %3598
  br i1 %3599, label %3600, label %3601

3600:                                             ; preds = %3594
  store i64 %3598, ptr %3055, align 8, !tbaa !120
  br label %3601

3601:                                             ; preds = %3600, %3594
  %3602 = phi i64 [ %3598, %3600 ], [ %3517, %3594 ]
  %3603 = add nuw nsw i32 %3518, 1
  br i1 %3368, label %3604, label %3654

3604:                                             ; preds = %3601
  %3605 = load i32, ptr %4, align 4, !tbaa !5
  %3606 = load i32, ptr %12, align 4, !tbaa !5
  %3607 = add nsw i32 %3606, -1
  %3608 = icmp slt i32 %3605, %3607
  br i1 %3608, label %3631, label %3609

3609:                                             ; preds = %3604
  %3610 = icmp eq i32 %3605, %3607
  br i1 %3610, label %3611, label %3647

3611:                                             ; preds = %3609
  store i32 0, ptr %4, align 4, !tbaa !5
  %3612 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3612, ptr %6, align 4, !tbaa !5
  br i1 %3373, label %3654, label %3613

3613:                                             ; preds = %3611, %3641
  %3614 = phi i64 [ %3645, %3641 ], [ 1, %3611 ]
  %3615 = getelementptr inbounds i32, ptr %4, i64 %3614
  %3616 = load i32, ptr %3615, align 4, !tbaa !5
  %3617 = getelementptr inbounds i32, ptr %12, i64 %3614
  %3618 = load i32, ptr %3617, align 4, !tbaa !5
  %3619 = add nsw i32 %3618, -1
  %3620 = icmp slt i32 %3616, %3619
  br i1 %3620, label %3621, label %3639

3621:                                             ; preds = %3613
  br i1 %3608, label %3631, label %3622

3622:                                             ; preds = %3621
  %3623 = shl i64 %3614, 32
  %3624 = add i64 %3623, -4294967296
  %3625 = ashr exact i64 %3624, 32
  %3626 = getelementptr inbounds i32, ptr %7, i64 %3625
  %3627 = load i32, ptr %3626, align 4, !tbaa !5
  %3628 = getelementptr inbounds i32, ptr %6, i64 %3614
  %3629 = load i32, ptr %3628, align 4, !tbaa !5
  %3630 = add nsw i32 %3629, %3627
  store i32 %3630, ptr %3628, align 4, !tbaa !5
  br label %3649

3631:                                             ; preds = %3604, %3621
  %3632 = phi i32 [ %3616, %3621 ], [ %3605, %3604 ]
  %3633 = phi ptr [ %3615, %3621 ], [ %4, %3604 ]
  %3634 = phi i64 [ %3614, %3621 ], [ 0, %3604 ]
  %3635 = add nsw i32 %3632, 1
  store i32 %3635, ptr %3633, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %7, i64 %3634
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = getelementptr inbounds i32, ptr %6, i64 %3634
  br label %3649

3639:                                             ; preds = %3613
  %3640 = icmp eq i32 %3616, %3619
  br i1 %3640, label %3641, label %3647

3641:                                             ; preds = %3639
  store i32 0, ptr %3615, align 4, !tbaa !5
  %3642 = getelementptr inbounds i32, ptr %8, i64 %3614
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3614
  store i32 %3643, ptr %3644, align 4, !tbaa !5
  %3645 = add nuw nsw i64 %3614, 1
  %3646 = icmp eq i64 %3645, %3371
  br i1 %3646, label %3654, label %3613, !llvm.loop !1422

3647:                                             ; preds = %3609, %3639
  %3648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3649:                                             ; preds = %3622, %3631
  %3650 = phi ptr [ %3638, %3631 ], [ %3615, %3622 ]
  %3651 = phi i32 [ %3637, %3631 ], [ 1, %3622 ]
  %3652 = load i32, ptr %3650, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, %3651
  store i32 %3653, ptr %3650, align 4, !tbaa !5
  br label %3654

3654:                                             ; preds = %3641, %3649, %3611, %3601
  %3655 = icmp eq i32 %3603, %5
  br i1 %3655, label %5477, label %3516, !llvm.loop !1423

3656:                                             ; preds = %3059
  %3657 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1982, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

3658:                                             ; preds = %18
  %3659 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3660 = load ptr, ptr %3659, align 8, !tbaa !9
  %3661 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3662 = load ptr, ptr %3661, align 8, !tbaa !9
  %3663 = load double, ptr %3660, align 8, !tbaa !18
  store double %3663, ptr %3662, align 8, !tbaa !18
  %3664 = icmp eq i32 %13, 0
  br i1 %3664, label %3665, label %3669

3665:                                             ; preds = %3658
  %3666 = load double, ptr %3660, align 8, !tbaa !18
  %3667 = fcmp fast ogt double %3663, %3666
  br i1 %3667, label %3668, label %5477

3668:                                             ; preds = %3665
  store double %3666, ptr %3662, align 8, !tbaa !18
  br label %5477

3669:                                             ; preds = %3658
  switch i32 %1, label %4262 [
    i32 1, label %3670
    i32 0, label %3968
  ]

3670:                                             ; preds = %3669
  %3671 = getelementptr inbounds i32, ptr %3, i64 %19
  %3672 = load i32, ptr %3671, align 4, !tbaa !5
  %3673 = icmp eq i32 %3672, 0
  %3674 = icmp sgt i32 %5, 0
  br i1 %3673, label %3684, label %3675

3675:                                             ; preds = %3670
  br i1 %3674, label %3676, label %5477

3676:                                             ; preds = %3675
  %3677 = icmp sgt i32 %13, 1
  %3678 = icmp sgt i32 %13, 0
  %3679 = add i32 %13, -2
  %3680 = zext i32 %3679 to i64
  %3681 = zext i32 %13 to i64
  %3682 = add nuw i32 %5, 1
  %3683 = icmp eq i32 %13, 1
  br label %3829

3684:                                             ; preds = %3670
  br i1 %3674, label %3685, label %5477

3685:                                             ; preds = %3684
  %3686 = icmp sgt i32 %13, 1
  %3687 = icmp sgt i32 %13, 0
  %3688 = add i32 %13, -2
  %3689 = zext i32 %3688 to i64
  %3690 = zext i32 %13 to i64
  %3691 = add nuw i32 %5, 1
  %3692 = icmp eq i32 %13, 1
  br label %3693

3693:                                             ; preds = %3685, %3827
  %3694 = phi double [ %3663, %3685 ], [ %3778, %3827 ]
  %3695 = phi i32 [ 0, %3685 ], [ %3779, %3827 ]
  %3696 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3686, label %3697, label %3766

3697:                                             ; preds = %3693, %3756
  %3698 = phi i32 [ %3765, %3756 ], [ 0, %3693 ]
  %3699 = phi i64 [ %3707, %3756 ], [ %3690, %3693 ]
  %3700 = phi i64 [ %3764, %3756 ], [ %3689, %3693 ]
  %3701 = phi i32 [ %3762, %3756 ], [ %3696, %3693 ]
  %3702 = sub i32 %3688, %3698
  %3703 = tail call i32 @llvm.smin.i32(i32 %3702, i32 0)
  %3704 = sub i32 %3702, %3703
  %3705 = zext i32 %3704 to i64
  %3706 = add nuw nsw i64 %3705, 1
  %3707 = add nsw i64 %3699, -1
  %3708 = icmp ult i32 %3704, 31
  br i1 %3708, label %3744, label %3709

3709:                                             ; preds = %3697
  %3710 = and i64 %3706, 8589934560
  %3711 = sub i64 %3700, %3710
  br label %3712

3712:                                             ; preds = %3712, %3709
  %3713 = phi i64 [ 0, %3709 ], [ %3736, %3712 ]
  %3714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3732, %3712 ]
  %3715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3733, %3712 ]
  %3716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3734, %3712 ]
  %3717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3709 ], [ %3735, %3712 ]
  %3718 = sub i64 %3700, %3713
  %3719 = getelementptr inbounds i32, ptr %9, i64 %3718
  %3720 = getelementptr inbounds i32, ptr %3719, i64 -7
  %3721 = load <8 x i32>, ptr %3720, align 4, !tbaa !5
  %3722 = shufflevector <8 x i32> %3721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3723 = getelementptr inbounds i32, ptr %3719, i64 -15
  %3724 = load <8 x i32>, ptr %3723, align 4, !tbaa !5
  %3725 = shufflevector <8 x i32> %3724, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3726 = getelementptr inbounds i32, ptr %3719, i64 -23
  %3727 = load <8 x i32>, ptr %3726, align 4, !tbaa !5
  %3728 = shufflevector <8 x i32> %3727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3729 = getelementptr inbounds i32, ptr %3719, i64 -31
  %3730 = load <8 x i32>, ptr %3729, align 4, !tbaa !5
  %3731 = shufflevector <8 x i32> %3730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3732 = mul <8 x i32> %3722, %3714
  %3733 = mul <8 x i32> %3725, %3715
  %3734 = mul <8 x i32> %3728, %3716
  %3735 = mul <8 x i32> %3731, %3717
  %3736 = add nuw i64 %3713, 32
  %3737 = icmp eq i64 %3736, %3710
  br i1 %3737, label %3738, label %3712, !llvm.loop !1424

3738:                                             ; preds = %3712
  %3739 = mul <8 x i32> %3733, %3732
  %3740 = mul <8 x i32> %3734, %3739
  %3741 = mul <8 x i32> %3735, %3740
  %3742 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3741)
  %3743 = icmp eq i64 %3706, %3710
  br i1 %3743, label %3756, label %3744

3744:                                             ; preds = %3697, %3738
  %3745 = phi i64 [ %3700, %3697 ], [ %3711, %3738 ]
  %3746 = phi i32 [ 1, %3697 ], [ %3742, %3738 ]
  br label %3747

3747:                                             ; preds = %3744, %3747
  %3748 = phi i64 [ %3753, %3747 ], [ %3745, %3744 ]
  %3749 = phi i32 [ %3752, %3747 ], [ %3746, %3744 ]
  %3750 = getelementptr inbounds i32, ptr %9, i64 %3748
  %3751 = load i32, ptr %3750, align 4, !tbaa !5
  %3752 = mul nsw i32 %3751, %3749
  %3753 = add nsw i64 %3748, -1
  %3754 = trunc i64 %3748 to i32
  %3755 = icmp sgt i32 %3754, 0
  br i1 %3755, label %3747, label %3756, !llvm.loop !1425

3756:                                             ; preds = %3747, %3738
  %3757 = phi i32 [ %3742, %3738 ], [ %3752, %3747 ]
  %3758 = and i64 %3707, 4294967295
  %3759 = getelementptr inbounds i32, ptr %6, i64 %3758
  %3760 = load i32, ptr %3759, align 4, !tbaa !5
  %3761 = mul nsw i32 %3760, %3757
  %3762 = add nsw i32 %3761, %3701
  %3763 = icmp sgt i64 %3699, 2
  %3764 = add nsw i64 %3700, -1
  %3765 = add i32 %3698, 1
  br i1 %3763, label %3697, label %3766, !llvm.loop !1426

3766:                                             ; preds = %3756, %3693
  %3767 = phi i32 [ %3696, %3693 ], [ %3762, %3756 ]
  %3768 = sext i32 %3767 to i64
  %3769 = getelementptr inbounds double, ptr %2, i64 %3768
  %3770 = load double, ptr %3769, align 8, !tbaa !18
  %3771 = getelementptr inbounds double, ptr %3660, i64 %3768
  %3772 = load double, ptr %3771, align 8, !tbaa !18
  %3773 = fcmp fast one double %3770, 0.000000e+00
  %3774 = fcmp fast ogt double %3694, %3772
  %3775 = select i1 %3773, i1 %3774, i1 false
  br i1 %3775, label %3776, label %3777

3776:                                             ; preds = %3766
  store double %3772, ptr %3662, align 8, !tbaa !18
  br label %3777

3777:                                             ; preds = %3776, %3766
  %3778 = phi double [ %3772, %3776 ], [ %3694, %3766 ]
  %3779 = add nuw nsw i32 %3695, 1
  br i1 %3687, label %3780, label %3827

3780:                                             ; preds = %3777
  %3781 = load i32, ptr %4, align 4, !tbaa !5
  %3782 = load i32, ptr %12, align 4, !tbaa !5
  %3783 = add nsw i32 %3782, -1
  %3784 = icmp slt i32 %3781, %3783
  br i1 %3784, label %3804, label %3785

3785:                                             ; preds = %3780
  %3786 = icmp eq i32 %3781, %3783
  br i1 %3786, label %3787, label %3820

3787:                                             ; preds = %3785
  store i32 0, ptr %4, align 4, !tbaa !5
  %3788 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3788, ptr %6, align 4, !tbaa !5
  br i1 %3692, label %3827, label %3789

3789:                                             ; preds = %3787, %3814
  %3790 = phi i64 [ %3818, %3814 ], [ 1, %3787 ]
  %3791 = getelementptr inbounds i32, ptr %4, i64 %3790
  %3792 = load i32, ptr %3791, align 4, !tbaa !5
  %3793 = getelementptr inbounds i32, ptr %12, i64 %3790
  %3794 = load i32, ptr %3793, align 4, !tbaa !5
  %3795 = add nsw i32 %3794, -1
  %3796 = icmp slt i32 %3792, %3795
  br i1 %3796, label %3797, label %3812

3797:                                             ; preds = %3789
  br i1 %3784, label %3804, label %3798

3798:                                             ; preds = %3797
  %3799 = getelementptr inbounds i32, ptr %7, i64 %3790
  %3800 = load i32, ptr %3799, align 4, !tbaa !5
  %3801 = getelementptr inbounds i32, ptr %6, i64 %3790
  %3802 = load i32, ptr %3801, align 4, !tbaa !5
  %3803 = add nsw i32 %3802, %3800
  store i32 %3803, ptr %3801, align 4, !tbaa !5
  br label %3822

3804:                                             ; preds = %3780, %3797
  %3805 = phi i32 [ %3792, %3797 ], [ %3781, %3780 ]
  %3806 = phi ptr [ %3791, %3797 ], [ %4, %3780 ]
  %3807 = phi i64 [ %3790, %3797 ], [ 0, %3780 ]
  %3808 = add nsw i32 %3805, 1
  store i32 %3808, ptr %3806, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %7, i64 %3807
  %3810 = load i32, ptr %3809, align 4, !tbaa !5
  %3811 = getelementptr inbounds i32, ptr %6, i64 %3807
  br label %3822

3812:                                             ; preds = %3789
  %3813 = icmp eq i32 %3792, %3795
  br i1 %3813, label %3814, label %3820

3814:                                             ; preds = %3812
  store i32 0, ptr %3791, align 4, !tbaa !5
  %3815 = getelementptr inbounds i32, ptr %8, i64 %3790
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %6, i64 %3790
  store i32 %3816, ptr %3817, align 4, !tbaa !5
  %3818 = add nuw nsw i64 %3790, 1
  %3819 = icmp eq i64 %3818, %3690
  br i1 %3819, label %3827, label %3789, !llvm.loop !1427

3820:                                             ; preds = %3785, %3812
  %3821 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3822:                                             ; preds = %3798, %3804
  %3823 = phi ptr [ %3811, %3804 ], [ %3791, %3798 ]
  %3824 = phi i32 [ %3810, %3804 ], [ 1, %3798 ]
  %3825 = load i32, ptr %3823, align 4, !tbaa !5
  %3826 = add nsw i32 %3825, %3824
  store i32 %3826, ptr %3823, align 4, !tbaa !5
  br label %3827

3827:                                             ; preds = %3814, %3822, %3787, %3777
  %3828 = icmp eq i32 %3779, %5
  br i1 %3828, label %5477, label %3693, !llvm.loop !1428

3829:                                             ; preds = %3676, %3966
  %3830 = phi double [ %3663, %3676 ], [ %3914, %3966 ]
  %3831 = phi i32 [ 0, %3676 ], [ %3915, %3966 ]
  %3832 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3677, label %3833, label %3902

3833:                                             ; preds = %3829, %3892
  %3834 = phi i32 [ %3901, %3892 ], [ 0, %3829 ]
  %3835 = phi i64 [ %3843, %3892 ], [ %3681, %3829 ]
  %3836 = phi i64 [ %3900, %3892 ], [ %3680, %3829 ]
  %3837 = phi i32 [ %3898, %3892 ], [ %3832, %3829 ]
  %3838 = sub i32 %3679, %3834
  %3839 = tail call i32 @llvm.smin.i32(i32 %3838, i32 0)
  %3840 = sub i32 %3838, %3839
  %3841 = zext i32 %3840 to i64
  %3842 = add nuw nsw i64 %3841, 1
  %3843 = add nsw i64 %3835, -1
  %3844 = icmp ult i32 %3840, 31
  br i1 %3844, label %3880, label %3845

3845:                                             ; preds = %3833
  %3846 = and i64 %3842, 8589934560
  %3847 = sub i64 %3836, %3846
  br label %3848

3848:                                             ; preds = %3848, %3845
  %3849 = phi i64 [ 0, %3845 ], [ %3872, %3848 ]
  %3850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3868, %3848 ]
  %3851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3869, %3848 ]
  %3852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3870, %3848 ]
  %3853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3845 ], [ %3871, %3848 ]
  %3854 = sub i64 %3836, %3849
  %3855 = getelementptr inbounds i32, ptr %11, i64 %3854
  %3856 = getelementptr inbounds i32, ptr %3855, i64 -7
  %3857 = load <8 x i32>, ptr %3856, align 4, !tbaa !5
  %3858 = shufflevector <8 x i32> %3857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3859 = getelementptr inbounds i32, ptr %3855, i64 -15
  %3860 = load <8 x i32>, ptr %3859, align 4, !tbaa !5
  %3861 = shufflevector <8 x i32> %3860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3862 = getelementptr inbounds i32, ptr %3855, i64 -23
  %3863 = load <8 x i32>, ptr %3862, align 4, !tbaa !5
  %3864 = shufflevector <8 x i32> %3863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3865 = getelementptr inbounds i32, ptr %3855, i64 -31
  %3866 = load <8 x i32>, ptr %3865, align 4, !tbaa !5
  %3867 = shufflevector <8 x i32> %3866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3868 = mul <8 x i32> %3858, %3850
  %3869 = mul <8 x i32> %3861, %3851
  %3870 = mul <8 x i32> %3864, %3852
  %3871 = mul <8 x i32> %3867, %3853
  %3872 = add nuw i64 %3849, 32
  %3873 = icmp eq i64 %3872, %3846
  br i1 %3873, label %3874, label %3848, !llvm.loop !1429

3874:                                             ; preds = %3848
  %3875 = mul <8 x i32> %3869, %3868
  %3876 = mul <8 x i32> %3870, %3875
  %3877 = mul <8 x i32> %3871, %3876
  %3878 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3877)
  %3879 = icmp eq i64 %3842, %3846
  br i1 %3879, label %3892, label %3880

3880:                                             ; preds = %3833, %3874
  %3881 = phi i64 [ %3836, %3833 ], [ %3847, %3874 ]
  %3882 = phi i32 [ 1, %3833 ], [ %3878, %3874 ]
  br label %3883

3883:                                             ; preds = %3880, %3883
  %3884 = phi i64 [ %3889, %3883 ], [ %3881, %3880 ]
  %3885 = phi i32 [ %3888, %3883 ], [ %3882, %3880 ]
  %3886 = getelementptr inbounds i32, ptr %11, i64 %3884
  %3887 = load i32, ptr %3886, align 4, !tbaa !5
  %3888 = mul nsw i32 %3887, %3885
  %3889 = add nsw i64 %3884, -1
  %3890 = trunc i64 %3884 to i32
  %3891 = icmp sgt i32 %3890, 0
  br i1 %3891, label %3883, label %3892, !llvm.loop !1430

3892:                                             ; preds = %3883, %3874
  %3893 = phi i32 [ %3878, %3874 ], [ %3888, %3883 ]
  %3894 = and i64 %3843, 4294967295
  %3895 = getelementptr inbounds i32, ptr %6, i64 %3894
  %3896 = load i32, ptr %3895, align 4, !tbaa !5
  %3897 = mul nsw i32 %3896, %3893
  %3898 = add nsw i32 %3897, %3837
  %3899 = icmp sgt i64 %3835, 2
  %3900 = add nsw i64 %3836, -1
  %3901 = add i32 %3834, 1
  br i1 %3899, label %3833, label %3902, !llvm.loop !1431

3902:                                             ; preds = %3892, %3829
  %3903 = phi i32 [ %3832, %3829 ], [ %3898, %3892 ]
  %3904 = icmp slt i32 %3903, %5
  br i1 %3904, label %3907, label %3905

3905:                                             ; preds = %3902
  %3906 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

3907:                                             ; preds = %3902
  %3908 = sext i32 %3903 to i64
  %3909 = getelementptr inbounds double, ptr %3660, i64 %3908
  %3910 = load double, ptr %3909, align 8, !tbaa !18
  %3911 = fcmp fast ogt double %3830, %3910
  br i1 %3911, label %3912, label %3913

3912:                                             ; preds = %3907
  store double %3910, ptr %3662, align 8, !tbaa !18
  br label %3913

3913:                                             ; preds = %3907, %3912
  %3914 = phi double [ %3830, %3907 ], [ %3910, %3912 ]
  %3915 = add nuw nsw i32 %3831, 1
  br i1 %3678, label %3916, label %3966

3916:                                             ; preds = %3913
  %3917 = load i32, ptr %4, align 4, !tbaa !5
  %3918 = load i32, ptr %12, align 4, !tbaa !5
  %3919 = add nsw i32 %3918, -1
  %3920 = icmp slt i32 %3917, %3919
  br i1 %3920, label %3943, label %3921

3921:                                             ; preds = %3916
  %3922 = icmp eq i32 %3917, %3919
  br i1 %3922, label %3923, label %3959

3923:                                             ; preds = %3921
  store i32 0, ptr %4, align 4, !tbaa !5
  %3924 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3924, ptr %6, align 4, !tbaa !5
  br i1 %3683, label %3966, label %3925

3925:                                             ; preds = %3923, %3953
  %3926 = phi i64 [ %3957, %3953 ], [ 1, %3923 ]
  %3927 = getelementptr inbounds i32, ptr %4, i64 %3926
  %3928 = load i32, ptr %3927, align 4, !tbaa !5
  %3929 = getelementptr inbounds i32, ptr %12, i64 %3926
  %3930 = load i32, ptr %3929, align 4, !tbaa !5
  %3931 = add nsw i32 %3930, -1
  %3932 = icmp slt i32 %3928, %3931
  br i1 %3932, label %3933, label %3951

3933:                                             ; preds = %3925
  br i1 %3920, label %3943, label %3934

3934:                                             ; preds = %3933
  %3935 = shl i64 %3926, 32
  %3936 = add i64 %3935, -4294967296
  %3937 = ashr exact i64 %3936, 32
  %3938 = getelementptr inbounds i32, ptr %7, i64 %3937
  %3939 = load i32, ptr %3938, align 4, !tbaa !5
  %3940 = getelementptr inbounds i32, ptr %6, i64 %3926
  %3941 = load i32, ptr %3940, align 4, !tbaa !5
  %3942 = add nsw i32 %3941, %3939
  store i32 %3942, ptr %3940, align 4, !tbaa !5
  br label %3961

3943:                                             ; preds = %3916, %3933
  %3944 = phi i32 [ %3928, %3933 ], [ %3917, %3916 ]
  %3945 = phi ptr [ %3927, %3933 ], [ %4, %3916 ]
  %3946 = phi i64 [ %3926, %3933 ], [ 0, %3916 ]
  %3947 = add nsw i32 %3944, 1
  store i32 %3947, ptr %3945, align 4, !tbaa !5
  %3948 = getelementptr inbounds i32, ptr %7, i64 %3946
  %3949 = load i32, ptr %3948, align 4, !tbaa !5
  %3950 = getelementptr inbounds i32, ptr %6, i64 %3946
  br label %3961

3951:                                             ; preds = %3925
  %3952 = icmp eq i32 %3928, %3931
  br i1 %3952, label %3953, label %3959

3953:                                             ; preds = %3951
  store i32 0, ptr %3927, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %8, i64 %3926
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = getelementptr inbounds i32, ptr %6, i64 %3926
  store i32 %3955, ptr %3956, align 4, !tbaa !5
  %3957 = add nuw nsw i64 %3926, 1
  %3958 = icmp eq i64 %3957, %3681
  br i1 %3958, label %3966, label %3925, !llvm.loop !1432

3959:                                             ; preds = %3921, %3951
  %3960 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

3961:                                             ; preds = %3934, %3943
  %3962 = phi ptr [ %3950, %3943 ], [ %3927, %3934 ]
  %3963 = phi i32 [ %3949, %3943 ], [ 1, %3934 ]
  %3964 = load i32, ptr %3962, align 4, !tbaa !5
  %3965 = add nsw i32 %3964, %3963
  store i32 %3965, ptr %3962, align 4, !tbaa !5
  br label %3966

3966:                                             ; preds = %3953, %3961, %3923, %3913
  %3967 = icmp eq i32 %3915, %5
  br i1 %3967, label %5477, label %3829, !llvm.loop !1433

3968:                                             ; preds = %3669
  %3969 = getelementptr inbounds i32, ptr %3, i64 %19
  %3970 = load i32, ptr %3969, align 4, !tbaa !5
  %3971 = icmp eq i32 %3970, 0
  %3972 = icmp sgt i32 %5, 0
  br i1 %3971, label %3982, label %3973

3973:                                             ; preds = %3968
  br i1 %3972, label %3974, label %5477

3974:                                             ; preds = %3973
  %3975 = icmp sgt i32 %13, 1
  %3976 = icmp sgt i32 %13, 0
  %3977 = add i32 %13, -2
  %3978 = zext i32 %3977 to i64
  %3979 = zext i32 %13 to i64
  %3980 = add nuw i32 %5, 1
  %3981 = icmp eq i32 %13, 1
  br label %4123

3982:                                             ; preds = %3968
  br i1 %3972, label %3983, label %5477

3983:                                             ; preds = %3982
  %3984 = icmp sgt i32 %13, 1
  %3985 = icmp sgt i32 %13, 0
  %3986 = add i32 %13, -2
  %3987 = zext i32 %3986 to i64
  %3988 = zext i32 %13 to i64
  %3989 = add nuw i32 %5, 1
  %3990 = icmp eq i32 %13, 1
  br label %3991

3991:                                             ; preds = %3983, %4121
  %3992 = phi double [ %3663, %3983 ], [ %4072, %4121 ]
  %3993 = phi i32 [ 0, %3983 ], [ %4073, %4121 ]
  %3994 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3984, label %3995, label %4064

3995:                                             ; preds = %3991, %4054
  %3996 = phi i32 [ %4063, %4054 ], [ 0, %3991 ]
  %3997 = phi i64 [ %4005, %4054 ], [ %3988, %3991 ]
  %3998 = phi i64 [ %4062, %4054 ], [ %3987, %3991 ]
  %3999 = phi i32 [ %4060, %4054 ], [ %3994, %3991 ]
  %4000 = sub i32 %3986, %3996
  %4001 = tail call i32 @llvm.smin.i32(i32 %4000, i32 0)
  %4002 = sub i32 %4000, %4001
  %4003 = zext i32 %4002 to i64
  %4004 = add nuw nsw i64 %4003, 1
  %4005 = add nsw i64 %3997, -1
  %4006 = icmp ult i32 %4002, 31
  br i1 %4006, label %4042, label %4007

4007:                                             ; preds = %3995
  %4008 = and i64 %4004, 8589934560
  %4009 = sub i64 %3998, %4008
  br label %4010

4010:                                             ; preds = %4010, %4007
  %4011 = phi i64 [ 0, %4007 ], [ %4034, %4010 ]
  %4012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4030, %4010 ]
  %4013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4031, %4010 ]
  %4014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4032, %4010 ]
  %4015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4007 ], [ %4033, %4010 ]
  %4016 = sub i64 %3998, %4011
  %4017 = getelementptr inbounds i32, ptr %9, i64 %4016
  %4018 = getelementptr inbounds i32, ptr %4017, i64 -7
  %4019 = load <8 x i32>, ptr %4018, align 4, !tbaa !5
  %4020 = shufflevector <8 x i32> %4019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4021 = getelementptr inbounds i32, ptr %4017, i64 -15
  %4022 = load <8 x i32>, ptr %4021, align 4, !tbaa !5
  %4023 = shufflevector <8 x i32> %4022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4024 = getelementptr inbounds i32, ptr %4017, i64 -23
  %4025 = load <8 x i32>, ptr %4024, align 4, !tbaa !5
  %4026 = shufflevector <8 x i32> %4025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4027 = getelementptr inbounds i32, ptr %4017, i64 -31
  %4028 = load <8 x i32>, ptr %4027, align 4, !tbaa !5
  %4029 = shufflevector <8 x i32> %4028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4030 = mul <8 x i32> %4020, %4012
  %4031 = mul <8 x i32> %4023, %4013
  %4032 = mul <8 x i32> %4026, %4014
  %4033 = mul <8 x i32> %4029, %4015
  %4034 = add nuw i64 %4011, 32
  %4035 = icmp eq i64 %4034, %4008
  br i1 %4035, label %4036, label %4010, !llvm.loop !1434

4036:                                             ; preds = %4010
  %4037 = mul <8 x i32> %4031, %4030
  %4038 = mul <8 x i32> %4032, %4037
  %4039 = mul <8 x i32> %4033, %4038
  %4040 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4039)
  %4041 = icmp eq i64 %4004, %4008
  br i1 %4041, label %4054, label %4042

4042:                                             ; preds = %3995, %4036
  %4043 = phi i64 [ %3998, %3995 ], [ %4009, %4036 ]
  %4044 = phi i32 [ 1, %3995 ], [ %4040, %4036 ]
  br label %4045

4045:                                             ; preds = %4042, %4045
  %4046 = phi i64 [ %4051, %4045 ], [ %4043, %4042 ]
  %4047 = phi i32 [ %4050, %4045 ], [ %4044, %4042 ]
  %4048 = getelementptr inbounds i32, ptr %9, i64 %4046
  %4049 = load i32, ptr %4048, align 4, !tbaa !5
  %4050 = mul nsw i32 %4049, %4047
  %4051 = add nsw i64 %4046, -1
  %4052 = trunc i64 %4046 to i32
  %4053 = icmp sgt i32 %4052, 0
  br i1 %4053, label %4045, label %4054, !llvm.loop !1435

4054:                                             ; preds = %4045, %4036
  %4055 = phi i32 [ %4040, %4036 ], [ %4050, %4045 ]
  %4056 = and i64 %4005, 4294967295
  %4057 = getelementptr inbounds i32, ptr %6, i64 %4056
  %4058 = load i32, ptr %4057, align 4, !tbaa !5
  %4059 = mul nsw i32 %4058, %4055
  %4060 = add nsw i32 %4059, %3999
  %4061 = icmp sgt i64 %3997, 2
  %4062 = add nsw i64 %3998, -1
  %4063 = add i32 %3996, 1
  br i1 %4061, label %3995, label %4064, !llvm.loop !1436

4064:                                             ; preds = %4054, %3991
  %4065 = phi i32 [ %3994, %3991 ], [ %4060, %4054 ]
  %4066 = sext i32 %4065 to i64
  %4067 = getelementptr inbounds double, ptr %3660, i64 %4066
  %4068 = load double, ptr %4067, align 8, !tbaa !18
  %4069 = fcmp fast ogt double %3992, %4068
  br i1 %4069, label %4070, label %4071

4070:                                             ; preds = %4064
  store double %4068, ptr %3662, align 8, !tbaa !18
  br label %4071

4071:                                             ; preds = %4070, %4064
  %4072 = phi double [ %4068, %4070 ], [ %3992, %4064 ]
  %4073 = add nuw nsw i32 %3993, 1
  br i1 %3985, label %4074, label %4121

4074:                                             ; preds = %4071
  %4075 = load i32, ptr %4, align 4, !tbaa !5
  %4076 = load i32, ptr %12, align 4, !tbaa !5
  %4077 = add nsw i32 %4076, -1
  %4078 = icmp slt i32 %4075, %4077
  br i1 %4078, label %4098, label %4079

4079:                                             ; preds = %4074
  %4080 = icmp eq i32 %4075, %4077
  br i1 %4080, label %4081, label %4114

4081:                                             ; preds = %4079
  store i32 0, ptr %4, align 4, !tbaa !5
  %4082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4082, ptr %6, align 4, !tbaa !5
  br i1 %3990, label %4121, label %4083

4083:                                             ; preds = %4081, %4108
  %4084 = phi i64 [ %4112, %4108 ], [ 1, %4081 ]
  %4085 = getelementptr inbounds i32, ptr %4, i64 %4084
  %4086 = load i32, ptr %4085, align 4, !tbaa !5
  %4087 = getelementptr inbounds i32, ptr %12, i64 %4084
  %4088 = load i32, ptr %4087, align 4, !tbaa !5
  %4089 = add nsw i32 %4088, -1
  %4090 = icmp slt i32 %4086, %4089
  br i1 %4090, label %4091, label %4106

4091:                                             ; preds = %4083
  br i1 %4078, label %4098, label %4092

4092:                                             ; preds = %4091
  %4093 = getelementptr inbounds i32, ptr %7, i64 %4084
  %4094 = load i32, ptr %4093, align 4, !tbaa !5
  %4095 = getelementptr inbounds i32, ptr %6, i64 %4084
  %4096 = load i32, ptr %4095, align 4, !tbaa !5
  %4097 = add nsw i32 %4096, %4094
  store i32 %4097, ptr %4095, align 4, !tbaa !5
  br label %4116

4098:                                             ; preds = %4074, %4091
  %4099 = phi i32 [ %4086, %4091 ], [ %4075, %4074 ]
  %4100 = phi ptr [ %4085, %4091 ], [ %4, %4074 ]
  %4101 = phi i64 [ %4084, %4091 ], [ 0, %4074 ]
  %4102 = add nsw i32 %4099, 1
  store i32 %4102, ptr %4100, align 4, !tbaa !5
  %4103 = getelementptr inbounds i32, ptr %7, i64 %4101
  %4104 = load i32, ptr %4103, align 4, !tbaa !5
  %4105 = getelementptr inbounds i32, ptr %6, i64 %4101
  br label %4116

4106:                                             ; preds = %4083
  %4107 = icmp eq i32 %4086, %4089
  br i1 %4107, label %4108, label %4114

4108:                                             ; preds = %4106
  store i32 0, ptr %4085, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %8, i64 %4084
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = getelementptr inbounds i32, ptr %6, i64 %4084
  store i32 %4110, ptr %4111, align 4, !tbaa !5
  %4112 = add nuw nsw i64 %4084, 1
  %4113 = icmp eq i64 %4112, %3988
  br i1 %4113, label %4121, label %4083, !llvm.loop !1437

4114:                                             ; preds = %4079, %4106
  %4115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4116:                                             ; preds = %4092, %4098
  %4117 = phi ptr [ %4105, %4098 ], [ %4085, %4092 ]
  %4118 = phi i32 [ %4104, %4098 ], [ 1, %4092 ]
  %4119 = load i32, ptr %4117, align 4, !tbaa !5
  %4120 = add nsw i32 %4119, %4118
  store i32 %4120, ptr %4117, align 4, !tbaa !5
  br label %4121

4121:                                             ; preds = %4108, %4116, %4081, %4071
  %4122 = icmp eq i32 %4073, %5
  br i1 %4122, label %5477, label %3991, !llvm.loop !1438

4123:                                             ; preds = %3974, %4260
  %4124 = phi double [ %3663, %3974 ], [ %4208, %4260 ]
  %4125 = phi i32 [ 0, %3974 ], [ %4209, %4260 ]
  %4126 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3975, label %4127, label %4196

4127:                                             ; preds = %4123, %4186
  %4128 = phi i32 [ %4195, %4186 ], [ 0, %4123 ]
  %4129 = phi i64 [ %4137, %4186 ], [ %3979, %4123 ]
  %4130 = phi i64 [ %4194, %4186 ], [ %3978, %4123 ]
  %4131 = phi i32 [ %4192, %4186 ], [ %4126, %4123 ]
  %4132 = sub i32 %3977, %4128
  %4133 = tail call i32 @llvm.smin.i32(i32 %4132, i32 0)
  %4134 = sub i32 %4132, %4133
  %4135 = zext i32 %4134 to i64
  %4136 = add nuw nsw i64 %4135, 1
  %4137 = add nsw i64 %4129, -1
  %4138 = icmp ult i32 %4134, 31
  br i1 %4138, label %4174, label %4139

4139:                                             ; preds = %4127
  %4140 = and i64 %4136, 8589934560
  %4141 = sub i64 %4130, %4140
  br label %4142

4142:                                             ; preds = %4142, %4139
  %4143 = phi i64 [ 0, %4139 ], [ %4166, %4142 ]
  %4144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4162, %4142 ]
  %4145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4163, %4142 ]
  %4146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4164, %4142 ]
  %4147 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4139 ], [ %4165, %4142 ]
  %4148 = sub i64 %4130, %4143
  %4149 = getelementptr inbounds i32, ptr %11, i64 %4148
  %4150 = getelementptr inbounds i32, ptr %4149, i64 -7
  %4151 = load <8 x i32>, ptr %4150, align 4, !tbaa !5
  %4152 = shufflevector <8 x i32> %4151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4153 = getelementptr inbounds i32, ptr %4149, i64 -15
  %4154 = load <8 x i32>, ptr %4153, align 4, !tbaa !5
  %4155 = shufflevector <8 x i32> %4154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4156 = getelementptr inbounds i32, ptr %4149, i64 -23
  %4157 = load <8 x i32>, ptr %4156, align 4, !tbaa !5
  %4158 = shufflevector <8 x i32> %4157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4159 = getelementptr inbounds i32, ptr %4149, i64 -31
  %4160 = load <8 x i32>, ptr %4159, align 4, !tbaa !5
  %4161 = shufflevector <8 x i32> %4160, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4162 = mul <8 x i32> %4152, %4144
  %4163 = mul <8 x i32> %4155, %4145
  %4164 = mul <8 x i32> %4158, %4146
  %4165 = mul <8 x i32> %4161, %4147
  %4166 = add nuw i64 %4143, 32
  %4167 = icmp eq i64 %4166, %4140
  br i1 %4167, label %4168, label %4142, !llvm.loop !1439

4168:                                             ; preds = %4142
  %4169 = mul <8 x i32> %4163, %4162
  %4170 = mul <8 x i32> %4164, %4169
  %4171 = mul <8 x i32> %4165, %4170
  %4172 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4171)
  %4173 = icmp eq i64 %4136, %4140
  br i1 %4173, label %4186, label %4174

4174:                                             ; preds = %4127, %4168
  %4175 = phi i64 [ %4130, %4127 ], [ %4141, %4168 ]
  %4176 = phi i32 [ 1, %4127 ], [ %4172, %4168 ]
  br label %4177

4177:                                             ; preds = %4174, %4177
  %4178 = phi i64 [ %4183, %4177 ], [ %4175, %4174 ]
  %4179 = phi i32 [ %4182, %4177 ], [ %4176, %4174 ]
  %4180 = getelementptr inbounds i32, ptr %11, i64 %4178
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = mul nsw i32 %4181, %4179
  %4183 = add nsw i64 %4178, -1
  %4184 = trunc i64 %4178 to i32
  %4185 = icmp sgt i32 %4184, 0
  br i1 %4185, label %4177, label %4186, !llvm.loop !1440

4186:                                             ; preds = %4177, %4168
  %4187 = phi i32 [ %4172, %4168 ], [ %4182, %4177 ]
  %4188 = and i64 %4137, 4294967295
  %4189 = getelementptr inbounds i32, ptr %6, i64 %4188
  %4190 = load i32, ptr %4189, align 4, !tbaa !5
  %4191 = mul nsw i32 %4190, %4187
  %4192 = add nsw i32 %4191, %4131
  %4193 = icmp sgt i64 %4129, 2
  %4194 = add nsw i64 %4130, -1
  %4195 = add i32 %4128, 1
  br i1 %4193, label %4127, label %4196, !llvm.loop !1441

4196:                                             ; preds = %4186, %4123
  %4197 = phi i32 [ %4126, %4123 ], [ %4192, %4186 ]
  %4198 = icmp slt i32 %4197, %5
  br i1 %4198, label %4201, label %4199

4199:                                             ; preds = %4196
  %4200 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4201:                                             ; preds = %4196
  %4202 = sext i32 %4197 to i64
  %4203 = getelementptr inbounds double, ptr %3660, i64 %4202
  %4204 = load double, ptr %4203, align 8, !tbaa !18
  %4205 = fcmp fast ogt double %4124, %4204
  br i1 %4205, label %4206, label %4207

4206:                                             ; preds = %4201
  store double %4204, ptr %3662, align 8, !tbaa !18
  br label %4207

4207:                                             ; preds = %4206, %4201
  %4208 = phi double [ %4204, %4206 ], [ %4124, %4201 ]
  %4209 = add nuw nsw i32 %4125, 1
  br i1 %3976, label %4210, label %4260

4210:                                             ; preds = %4207
  %4211 = load i32, ptr %4, align 4, !tbaa !5
  %4212 = load i32, ptr %12, align 4, !tbaa !5
  %4213 = add nsw i32 %4212, -1
  %4214 = icmp slt i32 %4211, %4213
  br i1 %4214, label %4237, label %4215

4215:                                             ; preds = %4210
  %4216 = icmp eq i32 %4211, %4213
  br i1 %4216, label %4217, label %4253

4217:                                             ; preds = %4215
  store i32 0, ptr %4, align 4, !tbaa !5
  %4218 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4218, ptr %6, align 4, !tbaa !5
  br i1 %3981, label %4260, label %4219

4219:                                             ; preds = %4217, %4247
  %4220 = phi i64 [ %4251, %4247 ], [ 1, %4217 ]
  %4221 = getelementptr inbounds i32, ptr %4, i64 %4220
  %4222 = load i32, ptr %4221, align 4, !tbaa !5
  %4223 = getelementptr inbounds i32, ptr %12, i64 %4220
  %4224 = load i32, ptr %4223, align 4, !tbaa !5
  %4225 = add nsw i32 %4224, -1
  %4226 = icmp slt i32 %4222, %4225
  br i1 %4226, label %4227, label %4245

4227:                                             ; preds = %4219
  br i1 %4214, label %4237, label %4228

4228:                                             ; preds = %4227
  %4229 = shl i64 %4220, 32
  %4230 = add i64 %4229, -4294967296
  %4231 = ashr exact i64 %4230, 32
  %4232 = getelementptr inbounds i32, ptr %7, i64 %4231
  %4233 = load i32, ptr %4232, align 4, !tbaa !5
  %4234 = getelementptr inbounds i32, ptr %6, i64 %4220
  %4235 = load i32, ptr %4234, align 4, !tbaa !5
  %4236 = add nsw i32 %4235, %4233
  store i32 %4236, ptr %4234, align 4, !tbaa !5
  br label %4255

4237:                                             ; preds = %4210, %4227
  %4238 = phi i32 [ %4222, %4227 ], [ %4211, %4210 ]
  %4239 = phi ptr [ %4221, %4227 ], [ %4, %4210 ]
  %4240 = phi i64 [ %4220, %4227 ], [ 0, %4210 ]
  %4241 = add nsw i32 %4238, 1
  store i32 %4241, ptr %4239, align 4, !tbaa !5
  %4242 = getelementptr inbounds i32, ptr %7, i64 %4240
  %4243 = load i32, ptr %4242, align 4, !tbaa !5
  %4244 = getelementptr inbounds i32, ptr %6, i64 %4240
  br label %4255

4245:                                             ; preds = %4219
  %4246 = icmp eq i32 %4222, %4225
  br i1 %4246, label %4247, label %4253

4247:                                             ; preds = %4245
  store i32 0, ptr %4221, align 4, !tbaa !5
  %4248 = getelementptr inbounds i32, ptr %8, i64 %4220
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = getelementptr inbounds i32, ptr %6, i64 %4220
  store i32 %4249, ptr %4250, align 4, !tbaa !5
  %4251 = add nuw nsw i64 %4220, 1
  %4252 = icmp eq i64 %4251, %3979
  br i1 %4252, label %4260, label %4219, !llvm.loop !1442

4253:                                             ; preds = %4215, %4245
  %4254 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4255:                                             ; preds = %4228, %4237
  %4256 = phi ptr [ %4244, %4237 ], [ %4221, %4228 ]
  %4257 = phi i32 [ %4243, %4237 ], [ 1, %4228 ]
  %4258 = load i32, ptr %4256, align 4, !tbaa !5
  %4259 = add nsw i32 %4258, %4257
  store i32 %4259, ptr %4256, align 4, !tbaa !5
  br label %4260

4260:                                             ; preds = %4247, %4255, %4217, %4207
  %4261 = icmp eq i32 %4209, %5
  br i1 %4261, label %5477, label %4123, !llvm.loop !1443

4262:                                             ; preds = %3669
  %4263 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1986, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

4264:                                             ; preds = %18
  %4265 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4266 = load ptr, ptr %4265, align 8, !tbaa !9
  %4267 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4268 = load ptr, ptr %4267, align 8, !tbaa !9
  %4269 = load double, ptr %4266, align 8, !tbaa !18
  %4270 = fptrunc double %4269 to float
  store float %4270, ptr %4268, align 4, !tbaa !162
  %4271 = icmp eq i32 %13, 0
  br i1 %4271, label %5477, label %4272

4272:                                             ; preds = %4264
  switch i32 %1, label %4869 [
    i32 1, label %4273
    i32 0, label %4573
  ]

4273:                                             ; preds = %4272
  %4274 = getelementptr inbounds i32, ptr %3, i64 %19
  %4275 = load i32, ptr %4274, align 4, !tbaa !5
  %4276 = icmp eq i32 %4275, 0
  %4277 = icmp sgt i32 %5, 0
  br i1 %4276, label %4287, label %4278

4278:                                             ; preds = %4273
  br i1 %4277, label %4279, label %5477

4279:                                             ; preds = %4278
  %4280 = icmp sgt i32 %13, 1
  %4281 = icmp sgt i32 %13, 0
  %4282 = add i32 %13, -2
  %4283 = zext i32 %4282 to i64
  %4284 = zext i32 %13 to i64
  %4285 = add nuw i32 %5, 1
  %4286 = icmp eq i32 %13, 1
  br label %4433

4287:                                             ; preds = %4273
  br i1 %4277, label %4288, label %5477

4288:                                             ; preds = %4287
  %4289 = icmp sgt i32 %13, 1
  %4290 = icmp sgt i32 %13, 0
  %4291 = add i32 %13, -2
  %4292 = zext i32 %4291 to i64
  %4293 = zext i32 %13 to i64
  %4294 = add nuw i32 %5, 1
  %4295 = icmp eq i32 %13, 1
  br label %4296

4296:                                             ; preds = %4288, %4431
  %4297 = phi float [ %4270, %4288 ], [ %4382, %4431 ]
  %4298 = phi i32 [ 0, %4288 ], [ %4383, %4431 ]
  %4299 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4289, label %4300, label %4369

4300:                                             ; preds = %4296, %4359
  %4301 = phi i32 [ %4368, %4359 ], [ 0, %4296 ]
  %4302 = phi i64 [ %4310, %4359 ], [ %4293, %4296 ]
  %4303 = phi i64 [ %4367, %4359 ], [ %4292, %4296 ]
  %4304 = phi i32 [ %4365, %4359 ], [ %4299, %4296 ]
  %4305 = sub i32 %4291, %4301
  %4306 = tail call i32 @llvm.smin.i32(i32 %4305, i32 0)
  %4307 = sub i32 %4305, %4306
  %4308 = zext i32 %4307 to i64
  %4309 = add nuw nsw i64 %4308, 1
  %4310 = add nsw i64 %4302, -1
  %4311 = icmp ult i32 %4307, 31
  br i1 %4311, label %4347, label %4312

4312:                                             ; preds = %4300
  %4313 = and i64 %4309, 8589934560
  %4314 = sub i64 %4303, %4313
  br label %4315

4315:                                             ; preds = %4315, %4312
  %4316 = phi i64 [ 0, %4312 ], [ %4339, %4315 ]
  %4317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4335, %4315 ]
  %4318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4336, %4315 ]
  %4319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4337, %4315 ]
  %4320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4338, %4315 ]
  %4321 = sub i64 %4303, %4316
  %4322 = getelementptr inbounds i32, ptr %9, i64 %4321
  %4323 = getelementptr inbounds i32, ptr %4322, i64 -7
  %4324 = load <8 x i32>, ptr %4323, align 4, !tbaa !5
  %4325 = shufflevector <8 x i32> %4324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4326 = getelementptr inbounds i32, ptr %4322, i64 -15
  %4327 = load <8 x i32>, ptr %4326, align 4, !tbaa !5
  %4328 = shufflevector <8 x i32> %4327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4329 = getelementptr inbounds i32, ptr %4322, i64 -23
  %4330 = load <8 x i32>, ptr %4329, align 4, !tbaa !5
  %4331 = shufflevector <8 x i32> %4330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4332 = getelementptr inbounds i32, ptr %4322, i64 -31
  %4333 = load <8 x i32>, ptr %4332, align 4, !tbaa !5
  %4334 = shufflevector <8 x i32> %4333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4335 = mul <8 x i32> %4325, %4317
  %4336 = mul <8 x i32> %4328, %4318
  %4337 = mul <8 x i32> %4331, %4319
  %4338 = mul <8 x i32> %4334, %4320
  %4339 = add nuw i64 %4316, 32
  %4340 = icmp eq i64 %4339, %4313
  br i1 %4340, label %4341, label %4315, !llvm.loop !1444

4341:                                             ; preds = %4315
  %4342 = mul <8 x i32> %4336, %4335
  %4343 = mul <8 x i32> %4337, %4342
  %4344 = mul <8 x i32> %4338, %4343
  %4345 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4344)
  %4346 = icmp eq i64 %4309, %4313
  br i1 %4346, label %4359, label %4347

4347:                                             ; preds = %4300, %4341
  %4348 = phi i64 [ %4303, %4300 ], [ %4314, %4341 ]
  %4349 = phi i32 [ 1, %4300 ], [ %4345, %4341 ]
  br label %4350

4350:                                             ; preds = %4347, %4350
  %4351 = phi i64 [ %4356, %4350 ], [ %4348, %4347 ]
  %4352 = phi i32 [ %4355, %4350 ], [ %4349, %4347 ]
  %4353 = getelementptr inbounds i32, ptr %9, i64 %4351
  %4354 = load i32, ptr %4353, align 4, !tbaa !5
  %4355 = mul nsw i32 %4354, %4352
  %4356 = add nsw i64 %4351, -1
  %4357 = trunc i64 %4351 to i32
  %4358 = icmp sgt i32 %4357, 0
  br i1 %4358, label %4350, label %4359, !llvm.loop !1445

4359:                                             ; preds = %4350, %4341
  %4360 = phi i32 [ %4345, %4341 ], [ %4355, %4350 ]
  %4361 = and i64 %4310, 4294967295
  %4362 = getelementptr inbounds i32, ptr %6, i64 %4361
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = mul nsw i32 %4363, %4360
  %4365 = add nsw i32 %4364, %4304
  %4366 = icmp sgt i64 %4302, 2
  %4367 = add nsw i64 %4303, -1
  %4368 = add i32 %4301, 1
  br i1 %4366, label %4300, label %4369, !llvm.loop !1446

4369:                                             ; preds = %4359, %4296
  %4370 = phi i32 [ %4299, %4296 ], [ %4365, %4359 ]
  %4371 = sext i32 %4370 to i64
  %4372 = getelementptr inbounds double, ptr %2, i64 %4371
  %4373 = load double, ptr %4372, align 8, !tbaa !18
  %4374 = getelementptr inbounds double, ptr %4266, i64 %4371
  %4375 = load double, ptr %4374, align 8, !tbaa !18
  %4376 = fptrunc double %4375 to float
  %4377 = fcmp fast one double %4373, 0.000000e+00
  %4378 = fcmp fast ogt float %4297, %4376
  %4379 = select i1 %4377, i1 %4378, i1 false
  br i1 %4379, label %4380, label %4381

4380:                                             ; preds = %4369
  store float %4376, ptr %4268, align 4, !tbaa !162
  br label %4381

4381:                                             ; preds = %4380, %4369
  %4382 = phi float [ %4376, %4380 ], [ %4297, %4369 ]
  %4383 = add nuw nsw i32 %4298, 1
  br i1 %4290, label %4384, label %4431

4384:                                             ; preds = %4381
  %4385 = load i32, ptr %4, align 4, !tbaa !5
  %4386 = load i32, ptr %12, align 4, !tbaa !5
  %4387 = add nsw i32 %4386, -1
  %4388 = icmp slt i32 %4385, %4387
  br i1 %4388, label %4408, label %4389

4389:                                             ; preds = %4384
  %4390 = icmp eq i32 %4385, %4387
  br i1 %4390, label %4391, label %4424

4391:                                             ; preds = %4389
  store i32 0, ptr %4, align 4, !tbaa !5
  %4392 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4392, ptr %6, align 4, !tbaa !5
  br i1 %4295, label %4431, label %4393

4393:                                             ; preds = %4391, %4418
  %4394 = phi i64 [ %4422, %4418 ], [ 1, %4391 ]
  %4395 = getelementptr inbounds i32, ptr %4, i64 %4394
  %4396 = load i32, ptr %4395, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %12, i64 %4394
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = add nsw i32 %4398, -1
  %4400 = icmp slt i32 %4396, %4399
  br i1 %4400, label %4401, label %4416

4401:                                             ; preds = %4393
  br i1 %4388, label %4408, label %4402

4402:                                             ; preds = %4401
  %4403 = getelementptr inbounds i32, ptr %7, i64 %4394
  %4404 = load i32, ptr %4403, align 4, !tbaa !5
  %4405 = getelementptr inbounds i32, ptr %6, i64 %4394
  %4406 = load i32, ptr %4405, align 4, !tbaa !5
  %4407 = add nsw i32 %4406, %4404
  store i32 %4407, ptr %4405, align 4, !tbaa !5
  br label %4426

4408:                                             ; preds = %4384, %4401
  %4409 = phi i32 [ %4396, %4401 ], [ %4385, %4384 ]
  %4410 = phi ptr [ %4395, %4401 ], [ %4, %4384 ]
  %4411 = phi i64 [ %4394, %4401 ], [ 0, %4384 ]
  %4412 = add nsw i32 %4409, 1
  store i32 %4412, ptr %4410, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %7, i64 %4411
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = getelementptr inbounds i32, ptr %6, i64 %4411
  br label %4426

4416:                                             ; preds = %4393
  %4417 = icmp eq i32 %4396, %4399
  br i1 %4417, label %4418, label %4424

4418:                                             ; preds = %4416
  store i32 0, ptr %4395, align 4, !tbaa !5
  %4419 = getelementptr inbounds i32, ptr %8, i64 %4394
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4394
  store i32 %4420, ptr %4421, align 4, !tbaa !5
  %4422 = add nuw nsw i64 %4394, 1
  %4423 = icmp eq i64 %4422, %4293
  br i1 %4423, label %4431, label %4393, !llvm.loop !1447

4424:                                             ; preds = %4389, %4416
  %4425 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4426:                                             ; preds = %4402, %4408
  %4427 = phi ptr [ %4415, %4408 ], [ %4395, %4402 ]
  %4428 = phi i32 [ %4414, %4408 ], [ 1, %4402 ]
  %4429 = load i32, ptr %4427, align 4, !tbaa !5
  %4430 = add nsw i32 %4429, %4428
  store i32 %4430, ptr %4427, align 4, !tbaa !5
  br label %4431

4431:                                             ; preds = %4418, %4426, %4391, %4381
  %4432 = icmp eq i32 %4383, %5
  br i1 %4432, label %5477, label %4296, !llvm.loop !1448

4433:                                             ; preds = %4279, %4571
  %4434 = phi float [ %4270, %4279 ], [ %4519, %4571 ]
  %4435 = phi i32 [ 0, %4279 ], [ %4520, %4571 ]
  %4436 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4280, label %4437, label %4506

4437:                                             ; preds = %4433, %4496
  %4438 = phi i32 [ %4505, %4496 ], [ 0, %4433 ]
  %4439 = phi i64 [ %4447, %4496 ], [ %4284, %4433 ]
  %4440 = phi i64 [ %4504, %4496 ], [ %4283, %4433 ]
  %4441 = phi i32 [ %4502, %4496 ], [ %4436, %4433 ]
  %4442 = sub i32 %4282, %4438
  %4443 = tail call i32 @llvm.smin.i32(i32 %4442, i32 0)
  %4444 = sub i32 %4442, %4443
  %4445 = zext i32 %4444 to i64
  %4446 = add nuw nsw i64 %4445, 1
  %4447 = add nsw i64 %4439, -1
  %4448 = icmp ult i32 %4444, 31
  br i1 %4448, label %4484, label %4449

4449:                                             ; preds = %4437
  %4450 = and i64 %4446, 8589934560
  %4451 = sub i64 %4440, %4450
  br label %4452

4452:                                             ; preds = %4452, %4449
  %4453 = phi i64 [ 0, %4449 ], [ %4476, %4452 ]
  %4454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4472, %4452 ]
  %4455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4473, %4452 ]
  %4456 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4474, %4452 ]
  %4457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4475, %4452 ]
  %4458 = sub i64 %4440, %4453
  %4459 = getelementptr inbounds i32, ptr %11, i64 %4458
  %4460 = getelementptr inbounds i32, ptr %4459, i64 -7
  %4461 = load <8 x i32>, ptr %4460, align 4, !tbaa !5
  %4462 = shufflevector <8 x i32> %4461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4463 = getelementptr inbounds i32, ptr %4459, i64 -15
  %4464 = load <8 x i32>, ptr %4463, align 4, !tbaa !5
  %4465 = shufflevector <8 x i32> %4464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4466 = getelementptr inbounds i32, ptr %4459, i64 -23
  %4467 = load <8 x i32>, ptr %4466, align 4, !tbaa !5
  %4468 = shufflevector <8 x i32> %4467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4469 = getelementptr inbounds i32, ptr %4459, i64 -31
  %4470 = load <8 x i32>, ptr %4469, align 4, !tbaa !5
  %4471 = shufflevector <8 x i32> %4470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4472 = mul <8 x i32> %4462, %4454
  %4473 = mul <8 x i32> %4465, %4455
  %4474 = mul <8 x i32> %4468, %4456
  %4475 = mul <8 x i32> %4471, %4457
  %4476 = add nuw i64 %4453, 32
  %4477 = icmp eq i64 %4476, %4450
  br i1 %4477, label %4478, label %4452, !llvm.loop !1449

4478:                                             ; preds = %4452
  %4479 = mul <8 x i32> %4473, %4472
  %4480 = mul <8 x i32> %4474, %4479
  %4481 = mul <8 x i32> %4475, %4480
  %4482 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4481)
  %4483 = icmp eq i64 %4446, %4450
  br i1 %4483, label %4496, label %4484

4484:                                             ; preds = %4437, %4478
  %4485 = phi i64 [ %4440, %4437 ], [ %4451, %4478 ]
  %4486 = phi i32 [ 1, %4437 ], [ %4482, %4478 ]
  br label %4487

4487:                                             ; preds = %4484, %4487
  %4488 = phi i64 [ %4493, %4487 ], [ %4485, %4484 ]
  %4489 = phi i32 [ %4492, %4487 ], [ %4486, %4484 ]
  %4490 = getelementptr inbounds i32, ptr %11, i64 %4488
  %4491 = load i32, ptr %4490, align 4, !tbaa !5
  %4492 = mul nsw i32 %4491, %4489
  %4493 = add nsw i64 %4488, -1
  %4494 = trunc i64 %4488 to i32
  %4495 = icmp sgt i32 %4494, 0
  br i1 %4495, label %4487, label %4496, !llvm.loop !1450

4496:                                             ; preds = %4487, %4478
  %4497 = phi i32 [ %4482, %4478 ], [ %4492, %4487 ]
  %4498 = and i64 %4447, 4294967295
  %4499 = getelementptr inbounds i32, ptr %6, i64 %4498
  %4500 = load i32, ptr %4499, align 4, !tbaa !5
  %4501 = mul nsw i32 %4500, %4497
  %4502 = add nsw i32 %4501, %4441
  %4503 = icmp sgt i64 %4439, 2
  %4504 = add nsw i64 %4440, -1
  %4505 = add i32 %4438, 1
  br i1 %4503, label %4437, label %4506, !llvm.loop !1451

4506:                                             ; preds = %4496, %4433
  %4507 = phi i32 [ %4436, %4433 ], [ %4502, %4496 ]
  %4508 = icmp slt i32 %4507, %5
  br i1 %4508, label %4511, label %4509

4509:                                             ; preds = %4506
  %4510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4511:                                             ; preds = %4506
  %4512 = sext i32 %4507 to i64
  %4513 = getelementptr inbounds double, ptr %4266, i64 %4512
  %4514 = load double, ptr %4513, align 8, !tbaa !18
  %4515 = fptrunc double %4514 to float
  %4516 = fcmp fast ogt float %4434, %4515
  br i1 %4516, label %4517, label %4518

4517:                                             ; preds = %4511
  store float %4515, ptr %4268, align 4, !tbaa !162
  br label %4518

4518:                                             ; preds = %4511, %4517
  %4519 = phi float [ %4434, %4511 ], [ %4515, %4517 ]
  %4520 = add nuw nsw i32 %4435, 1
  br i1 %4281, label %4521, label %4571

4521:                                             ; preds = %4518
  %4522 = load i32, ptr %4, align 4, !tbaa !5
  %4523 = load i32, ptr %12, align 4, !tbaa !5
  %4524 = add nsw i32 %4523, -1
  %4525 = icmp slt i32 %4522, %4524
  br i1 %4525, label %4548, label %4526

4526:                                             ; preds = %4521
  %4527 = icmp eq i32 %4522, %4524
  br i1 %4527, label %4528, label %4564

4528:                                             ; preds = %4526
  store i32 0, ptr %4, align 4, !tbaa !5
  %4529 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4529, ptr %6, align 4, !tbaa !5
  br i1 %4286, label %4571, label %4530

4530:                                             ; preds = %4528, %4558
  %4531 = phi i64 [ %4562, %4558 ], [ 1, %4528 ]
  %4532 = getelementptr inbounds i32, ptr %4, i64 %4531
  %4533 = load i32, ptr %4532, align 4, !tbaa !5
  %4534 = getelementptr inbounds i32, ptr %12, i64 %4531
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = add nsw i32 %4535, -1
  %4537 = icmp slt i32 %4533, %4536
  br i1 %4537, label %4538, label %4556

4538:                                             ; preds = %4530
  br i1 %4525, label %4548, label %4539

4539:                                             ; preds = %4538
  %4540 = shl i64 %4531, 32
  %4541 = add i64 %4540, -4294967296
  %4542 = ashr exact i64 %4541, 32
  %4543 = getelementptr inbounds i32, ptr %7, i64 %4542
  %4544 = load i32, ptr %4543, align 4, !tbaa !5
  %4545 = getelementptr inbounds i32, ptr %6, i64 %4531
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = add nsw i32 %4546, %4544
  store i32 %4547, ptr %4545, align 4, !tbaa !5
  br label %4566

4548:                                             ; preds = %4521, %4538
  %4549 = phi i32 [ %4533, %4538 ], [ %4522, %4521 ]
  %4550 = phi ptr [ %4532, %4538 ], [ %4, %4521 ]
  %4551 = phi i64 [ %4531, %4538 ], [ 0, %4521 ]
  %4552 = add nsw i32 %4549, 1
  store i32 %4552, ptr %4550, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %7, i64 %4551
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = getelementptr inbounds i32, ptr %6, i64 %4551
  br label %4566

4556:                                             ; preds = %4530
  %4557 = icmp eq i32 %4533, %4536
  br i1 %4557, label %4558, label %4564

4558:                                             ; preds = %4556
  store i32 0, ptr %4532, align 4, !tbaa !5
  %4559 = getelementptr inbounds i32, ptr %8, i64 %4531
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %6, i64 %4531
  store i32 %4560, ptr %4561, align 4, !tbaa !5
  %4562 = add nuw nsw i64 %4531, 1
  %4563 = icmp eq i64 %4562, %4284
  br i1 %4563, label %4571, label %4530, !llvm.loop !1452

4564:                                             ; preds = %4526, %4556
  %4565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4566:                                             ; preds = %4539, %4548
  %4567 = phi ptr [ %4555, %4548 ], [ %4532, %4539 ]
  %4568 = phi i32 [ %4554, %4548 ], [ 1, %4539 ]
  %4569 = load i32, ptr %4567, align 4, !tbaa !5
  %4570 = add nsw i32 %4569, %4568
  store i32 %4570, ptr %4567, align 4, !tbaa !5
  br label %4571

4571:                                             ; preds = %4558, %4566, %4528, %4518
  %4572 = icmp eq i32 %4520, %5
  br i1 %4572, label %5477, label %4433, !llvm.loop !1453

4573:                                             ; preds = %4272
  %4574 = getelementptr inbounds i32, ptr %3, i64 %19
  %4575 = load i32, ptr %4574, align 4, !tbaa !5
  %4576 = icmp eq i32 %4575, 0
  %4577 = icmp sgt i32 %5, 0
  br i1 %4576, label %4587, label %4578

4578:                                             ; preds = %4573
  br i1 %4577, label %4579, label %5477

4579:                                             ; preds = %4578
  %4580 = icmp sgt i32 %13, 1
  %4581 = icmp sgt i32 %13, 0
  %4582 = add i32 %13, -2
  %4583 = zext i32 %4582 to i64
  %4584 = zext i32 %13 to i64
  %4585 = add nuw i32 %5, 1
  %4586 = icmp eq i32 %13, 1
  br label %4729

4587:                                             ; preds = %4573
  br i1 %4577, label %4588, label %5477

4588:                                             ; preds = %4587
  %4589 = icmp sgt i32 %13, 1
  %4590 = icmp sgt i32 %13, 0
  %4591 = add i32 %13, -2
  %4592 = zext i32 %4591 to i64
  %4593 = zext i32 %13 to i64
  %4594 = add nuw i32 %5, 1
  %4595 = icmp eq i32 %13, 1
  br label %4596

4596:                                             ; preds = %4588, %4727
  %4597 = phi float [ %4270, %4588 ], [ %4678, %4727 ]
  %4598 = phi i32 [ 0, %4588 ], [ %4679, %4727 ]
  %4599 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4589, label %4600, label %4669

4600:                                             ; preds = %4596, %4659
  %4601 = phi i32 [ %4668, %4659 ], [ 0, %4596 ]
  %4602 = phi i64 [ %4610, %4659 ], [ %4593, %4596 ]
  %4603 = phi i64 [ %4667, %4659 ], [ %4592, %4596 ]
  %4604 = phi i32 [ %4665, %4659 ], [ %4599, %4596 ]
  %4605 = sub i32 %4591, %4601
  %4606 = tail call i32 @llvm.smin.i32(i32 %4605, i32 0)
  %4607 = sub i32 %4605, %4606
  %4608 = zext i32 %4607 to i64
  %4609 = add nuw nsw i64 %4608, 1
  %4610 = add nsw i64 %4602, -1
  %4611 = icmp ult i32 %4607, 31
  br i1 %4611, label %4647, label %4612

4612:                                             ; preds = %4600
  %4613 = and i64 %4609, 8589934560
  %4614 = sub i64 %4603, %4613
  br label %4615

4615:                                             ; preds = %4615, %4612
  %4616 = phi i64 [ 0, %4612 ], [ %4639, %4615 ]
  %4617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4635, %4615 ]
  %4618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4636, %4615 ]
  %4619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4637, %4615 ]
  %4620 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4612 ], [ %4638, %4615 ]
  %4621 = sub i64 %4603, %4616
  %4622 = getelementptr inbounds i32, ptr %9, i64 %4621
  %4623 = getelementptr inbounds i32, ptr %4622, i64 -7
  %4624 = load <8 x i32>, ptr %4623, align 4, !tbaa !5
  %4625 = shufflevector <8 x i32> %4624, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4626 = getelementptr inbounds i32, ptr %4622, i64 -15
  %4627 = load <8 x i32>, ptr %4626, align 4, !tbaa !5
  %4628 = shufflevector <8 x i32> %4627, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4629 = getelementptr inbounds i32, ptr %4622, i64 -23
  %4630 = load <8 x i32>, ptr %4629, align 4, !tbaa !5
  %4631 = shufflevector <8 x i32> %4630, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4632 = getelementptr inbounds i32, ptr %4622, i64 -31
  %4633 = load <8 x i32>, ptr %4632, align 4, !tbaa !5
  %4634 = shufflevector <8 x i32> %4633, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4635 = mul <8 x i32> %4625, %4617
  %4636 = mul <8 x i32> %4628, %4618
  %4637 = mul <8 x i32> %4631, %4619
  %4638 = mul <8 x i32> %4634, %4620
  %4639 = add nuw i64 %4616, 32
  %4640 = icmp eq i64 %4639, %4613
  br i1 %4640, label %4641, label %4615, !llvm.loop !1454

4641:                                             ; preds = %4615
  %4642 = mul <8 x i32> %4636, %4635
  %4643 = mul <8 x i32> %4637, %4642
  %4644 = mul <8 x i32> %4638, %4643
  %4645 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4644)
  %4646 = icmp eq i64 %4609, %4613
  br i1 %4646, label %4659, label %4647

4647:                                             ; preds = %4600, %4641
  %4648 = phi i64 [ %4603, %4600 ], [ %4614, %4641 ]
  %4649 = phi i32 [ 1, %4600 ], [ %4645, %4641 ]
  br label %4650

4650:                                             ; preds = %4647, %4650
  %4651 = phi i64 [ %4656, %4650 ], [ %4648, %4647 ]
  %4652 = phi i32 [ %4655, %4650 ], [ %4649, %4647 ]
  %4653 = getelementptr inbounds i32, ptr %9, i64 %4651
  %4654 = load i32, ptr %4653, align 4, !tbaa !5
  %4655 = mul nsw i32 %4654, %4652
  %4656 = add nsw i64 %4651, -1
  %4657 = trunc i64 %4651 to i32
  %4658 = icmp sgt i32 %4657, 0
  br i1 %4658, label %4650, label %4659, !llvm.loop !1455

4659:                                             ; preds = %4650, %4641
  %4660 = phi i32 [ %4645, %4641 ], [ %4655, %4650 ]
  %4661 = and i64 %4610, 4294967295
  %4662 = getelementptr inbounds i32, ptr %6, i64 %4661
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = mul nsw i32 %4663, %4660
  %4665 = add nsw i32 %4664, %4604
  %4666 = icmp sgt i64 %4602, 2
  %4667 = add nsw i64 %4603, -1
  %4668 = add i32 %4601, 1
  br i1 %4666, label %4600, label %4669, !llvm.loop !1456

4669:                                             ; preds = %4659, %4596
  %4670 = phi i32 [ %4599, %4596 ], [ %4665, %4659 ]
  %4671 = sext i32 %4670 to i64
  %4672 = getelementptr inbounds double, ptr %4266, i64 %4671
  %4673 = load double, ptr %4672, align 8, !tbaa !18
  %4674 = fptrunc double %4673 to float
  %4675 = fcmp fast ogt float %4597, %4674
  br i1 %4675, label %4676, label %4677

4676:                                             ; preds = %4669
  store float %4674, ptr %4268, align 4, !tbaa !162
  br label %4677

4677:                                             ; preds = %4676, %4669
  %4678 = phi float [ %4674, %4676 ], [ %4597, %4669 ]
  %4679 = add nuw nsw i32 %4598, 1
  br i1 %4590, label %4680, label %4727

4680:                                             ; preds = %4677
  %4681 = load i32, ptr %4, align 4, !tbaa !5
  %4682 = load i32, ptr %12, align 4, !tbaa !5
  %4683 = add nsw i32 %4682, -1
  %4684 = icmp slt i32 %4681, %4683
  br i1 %4684, label %4704, label %4685

4685:                                             ; preds = %4680
  %4686 = icmp eq i32 %4681, %4683
  br i1 %4686, label %4687, label %4720

4687:                                             ; preds = %4685
  store i32 0, ptr %4, align 4, !tbaa !5
  %4688 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4688, ptr %6, align 4, !tbaa !5
  br i1 %4595, label %4727, label %4689

4689:                                             ; preds = %4687, %4714
  %4690 = phi i64 [ %4718, %4714 ], [ 1, %4687 ]
  %4691 = getelementptr inbounds i32, ptr %4, i64 %4690
  %4692 = load i32, ptr %4691, align 4, !tbaa !5
  %4693 = getelementptr inbounds i32, ptr %12, i64 %4690
  %4694 = load i32, ptr %4693, align 4, !tbaa !5
  %4695 = add nsw i32 %4694, -1
  %4696 = icmp slt i32 %4692, %4695
  br i1 %4696, label %4697, label %4712

4697:                                             ; preds = %4689
  br i1 %4684, label %4704, label %4698

4698:                                             ; preds = %4697
  %4699 = getelementptr inbounds i32, ptr %7, i64 %4690
  %4700 = load i32, ptr %4699, align 4, !tbaa !5
  %4701 = getelementptr inbounds i32, ptr %6, i64 %4690
  %4702 = load i32, ptr %4701, align 4, !tbaa !5
  %4703 = add nsw i32 %4702, %4700
  store i32 %4703, ptr %4701, align 4, !tbaa !5
  br label %4722

4704:                                             ; preds = %4680, %4697
  %4705 = phi i32 [ %4692, %4697 ], [ %4681, %4680 ]
  %4706 = phi ptr [ %4691, %4697 ], [ %4, %4680 ]
  %4707 = phi i64 [ %4690, %4697 ], [ 0, %4680 ]
  %4708 = add nsw i32 %4705, 1
  store i32 %4708, ptr %4706, align 4, !tbaa !5
  %4709 = getelementptr inbounds i32, ptr %7, i64 %4707
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = getelementptr inbounds i32, ptr %6, i64 %4707
  br label %4722

4712:                                             ; preds = %4689
  %4713 = icmp eq i32 %4692, %4695
  br i1 %4713, label %4714, label %4720

4714:                                             ; preds = %4712
  store i32 0, ptr %4691, align 4, !tbaa !5
  %4715 = getelementptr inbounds i32, ptr %8, i64 %4690
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = getelementptr inbounds i32, ptr %6, i64 %4690
  store i32 %4716, ptr %4717, align 4, !tbaa !5
  %4718 = add nuw nsw i64 %4690, 1
  %4719 = icmp eq i64 %4718, %4593
  br i1 %4719, label %4727, label %4689, !llvm.loop !1457

4720:                                             ; preds = %4685, %4712
  %4721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4722:                                             ; preds = %4698, %4704
  %4723 = phi ptr [ %4711, %4704 ], [ %4691, %4698 ]
  %4724 = phi i32 [ %4710, %4704 ], [ 1, %4698 ]
  %4725 = load i32, ptr %4723, align 4, !tbaa !5
  %4726 = add nsw i32 %4725, %4724
  store i32 %4726, ptr %4723, align 4, !tbaa !5
  br label %4727

4727:                                             ; preds = %4714, %4722, %4687, %4677
  %4728 = icmp eq i32 %4679, %5
  br i1 %4728, label %5477, label %4596, !llvm.loop !1458

4729:                                             ; preds = %4579, %4867
  %4730 = phi float [ %4270, %4579 ], [ %4815, %4867 ]
  %4731 = phi i32 [ 0, %4579 ], [ %4816, %4867 ]
  %4732 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4580, label %4733, label %4802

4733:                                             ; preds = %4729, %4792
  %4734 = phi i32 [ %4801, %4792 ], [ 0, %4729 ]
  %4735 = phi i64 [ %4743, %4792 ], [ %4584, %4729 ]
  %4736 = phi i64 [ %4800, %4792 ], [ %4583, %4729 ]
  %4737 = phi i32 [ %4798, %4792 ], [ %4732, %4729 ]
  %4738 = sub i32 %4582, %4734
  %4739 = tail call i32 @llvm.smin.i32(i32 %4738, i32 0)
  %4740 = sub i32 %4738, %4739
  %4741 = zext i32 %4740 to i64
  %4742 = add nuw nsw i64 %4741, 1
  %4743 = add nsw i64 %4735, -1
  %4744 = icmp ult i32 %4740, 31
  br i1 %4744, label %4780, label %4745

4745:                                             ; preds = %4733
  %4746 = and i64 %4742, 8589934560
  %4747 = sub i64 %4736, %4746
  br label %4748

4748:                                             ; preds = %4748, %4745
  %4749 = phi i64 [ 0, %4745 ], [ %4772, %4748 ]
  %4750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4768, %4748 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4769, %4748 ]
  %4752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4770, %4748 ]
  %4753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4771, %4748 ]
  %4754 = sub i64 %4736, %4749
  %4755 = getelementptr inbounds i32, ptr %11, i64 %4754
  %4756 = getelementptr inbounds i32, ptr %4755, i64 -7
  %4757 = load <8 x i32>, ptr %4756, align 4, !tbaa !5
  %4758 = shufflevector <8 x i32> %4757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4759 = getelementptr inbounds i32, ptr %4755, i64 -15
  %4760 = load <8 x i32>, ptr %4759, align 4, !tbaa !5
  %4761 = shufflevector <8 x i32> %4760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4762 = getelementptr inbounds i32, ptr %4755, i64 -23
  %4763 = load <8 x i32>, ptr %4762, align 4, !tbaa !5
  %4764 = shufflevector <8 x i32> %4763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4765 = getelementptr inbounds i32, ptr %4755, i64 -31
  %4766 = load <8 x i32>, ptr %4765, align 4, !tbaa !5
  %4767 = shufflevector <8 x i32> %4766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4768 = mul <8 x i32> %4758, %4750
  %4769 = mul <8 x i32> %4761, %4751
  %4770 = mul <8 x i32> %4764, %4752
  %4771 = mul <8 x i32> %4767, %4753
  %4772 = add nuw i64 %4749, 32
  %4773 = icmp eq i64 %4772, %4746
  br i1 %4773, label %4774, label %4748, !llvm.loop !1459

4774:                                             ; preds = %4748
  %4775 = mul <8 x i32> %4769, %4768
  %4776 = mul <8 x i32> %4770, %4775
  %4777 = mul <8 x i32> %4771, %4776
  %4778 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4777)
  %4779 = icmp eq i64 %4742, %4746
  br i1 %4779, label %4792, label %4780

4780:                                             ; preds = %4733, %4774
  %4781 = phi i64 [ %4736, %4733 ], [ %4747, %4774 ]
  %4782 = phi i32 [ 1, %4733 ], [ %4778, %4774 ]
  br label %4783

4783:                                             ; preds = %4780, %4783
  %4784 = phi i64 [ %4789, %4783 ], [ %4781, %4780 ]
  %4785 = phi i32 [ %4788, %4783 ], [ %4782, %4780 ]
  %4786 = getelementptr inbounds i32, ptr %11, i64 %4784
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = mul nsw i32 %4787, %4785
  %4789 = add nsw i64 %4784, -1
  %4790 = trunc i64 %4784 to i32
  %4791 = icmp sgt i32 %4790, 0
  br i1 %4791, label %4783, label %4792, !llvm.loop !1460

4792:                                             ; preds = %4783, %4774
  %4793 = phi i32 [ %4778, %4774 ], [ %4788, %4783 ]
  %4794 = and i64 %4743, 4294967295
  %4795 = getelementptr inbounds i32, ptr %6, i64 %4794
  %4796 = load i32, ptr %4795, align 4, !tbaa !5
  %4797 = mul nsw i32 %4796, %4793
  %4798 = add nsw i32 %4797, %4737
  %4799 = icmp sgt i64 %4735, 2
  %4800 = add nsw i64 %4736, -1
  %4801 = add i32 %4734, 1
  br i1 %4799, label %4733, label %4802, !llvm.loop !1461

4802:                                             ; preds = %4792, %4729
  %4803 = phi i32 [ %4732, %4729 ], [ %4798, %4792 ]
  %4804 = icmp slt i32 %4803, %5
  br i1 %4804, label %4807, label %4805

4805:                                             ; preds = %4802
  %4806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

4807:                                             ; preds = %4802
  %4808 = sext i32 %4803 to i64
  %4809 = getelementptr inbounds double, ptr %4266, i64 %4808
  %4810 = load double, ptr %4809, align 8, !tbaa !18
  %4811 = fptrunc double %4810 to float
  %4812 = fcmp fast ogt float %4730, %4811
  br i1 %4812, label %4813, label %4814

4813:                                             ; preds = %4807
  store float %4811, ptr %4268, align 4, !tbaa !162
  br label %4814

4814:                                             ; preds = %4813, %4807
  %4815 = phi float [ %4811, %4813 ], [ %4730, %4807 ]
  %4816 = add nuw nsw i32 %4731, 1
  br i1 %4581, label %4817, label %4867

4817:                                             ; preds = %4814
  %4818 = load i32, ptr %4, align 4, !tbaa !5
  %4819 = load i32, ptr %12, align 4, !tbaa !5
  %4820 = add nsw i32 %4819, -1
  %4821 = icmp slt i32 %4818, %4820
  br i1 %4821, label %4844, label %4822

4822:                                             ; preds = %4817
  %4823 = icmp eq i32 %4818, %4820
  br i1 %4823, label %4824, label %4860

4824:                                             ; preds = %4822
  store i32 0, ptr %4, align 4, !tbaa !5
  %4825 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4825, ptr %6, align 4, !tbaa !5
  br i1 %4586, label %4867, label %4826

4826:                                             ; preds = %4824, %4854
  %4827 = phi i64 [ %4858, %4854 ], [ 1, %4824 ]
  %4828 = getelementptr inbounds i32, ptr %4, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = getelementptr inbounds i32, ptr %12, i64 %4827
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = add nsw i32 %4831, -1
  %4833 = icmp slt i32 %4829, %4832
  br i1 %4833, label %4834, label %4852

4834:                                             ; preds = %4826
  br i1 %4821, label %4844, label %4835

4835:                                             ; preds = %4834
  %4836 = shl i64 %4827, 32
  %4837 = add i64 %4836, -4294967296
  %4838 = ashr exact i64 %4837, 32
  %4839 = getelementptr inbounds i32, ptr %7, i64 %4838
  %4840 = load i32, ptr %4839, align 4, !tbaa !5
  %4841 = getelementptr inbounds i32, ptr %6, i64 %4827
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = add nsw i32 %4842, %4840
  store i32 %4843, ptr %4841, align 4, !tbaa !5
  br label %4862

4844:                                             ; preds = %4817, %4834
  %4845 = phi i32 [ %4829, %4834 ], [ %4818, %4817 ]
  %4846 = phi ptr [ %4828, %4834 ], [ %4, %4817 ]
  %4847 = phi i64 [ %4827, %4834 ], [ 0, %4817 ]
  %4848 = add nsw i32 %4845, 1
  store i32 %4848, ptr %4846, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %7, i64 %4847
  %4850 = load i32, ptr %4849, align 4, !tbaa !5
  %4851 = getelementptr inbounds i32, ptr %6, i64 %4847
  br label %4862

4852:                                             ; preds = %4826
  %4853 = icmp eq i32 %4829, %4832
  br i1 %4853, label %4854, label %4860

4854:                                             ; preds = %4852
  store i32 0, ptr %4828, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %8, i64 %4827
  %4856 = load i32, ptr %4855, align 4, !tbaa !5
  %4857 = getelementptr inbounds i32, ptr %6, i64 %4827
  store i32 %4856, ptr %4857, align 4, !tbaa !5
  %4858 = add nuw nsw i64 %4827, 1
  %4859 = icmp eq i64 %4858, %4584
  br i1 %4859, label %4867, label %4826, !llvm.loop !1462

4860:                                             ; preds = %4822, %4852
  %4861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

4862:                                             ; preds = %4835, %4844
  %4863 = phi ptr [ %4851, %4844 ], [ %4828, %4835 ]
  %4864 = phi i32 [ %4850, %4844 ], [ 1, %4835 ]
  %4865 = load i32, ptr %4863, align 4, !tbaa !5
  %4866 = add nsw i32 %4865, %4864
  store i32 %4866, ptr %4863, align 4, !tbaa !5
  br label %4867

4867:                                             ; preds = %4854, %4862, %4824, %4814
  %4868 = icmp eq i32 %4816, %5
  br i1 %4868, label %5477, label %4729, !llvm.loop !1463

4869:                                             ; preds = %4272
  %4870 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1990, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

4871:                                             ; preds = %18
  %4872 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4873 = load ptr, ptr %4872, align 8, !tbaa !9
  %4874 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4875 = load ptr, ptr %4874, align 8, !tbaa !9
  %4876 = load double, ptr %4873, align 8, !tbaa !18
  store double %4876, ptr %4875, align 8, !tbaa !18
  %4877 = icmp eq i32 %13, 0
  br i1 %4877, label %4878, label %4882

4878:                                             ; preds = %4871
  %4879 = load double, ptr %4873, align 8, !tbaa !18
  %4880 = fcmp fast ogt double %4876, %4879
  br i1 %4880, label %4881, label %5477

4881:                                             ; preds = %4878
  store double %4879, ptr %4875, align 8, !tbaa !18
  br label %5477

4882:                                             ; preds = %4871
  switch i32 %1, label %5475 [
    i32 1, label %4883
    i32 0, label %5181
  ]

4883:                                             ; preds = %4882
  %4884 = getelementptr inbounds i32, ptr %3, i64 %19
  %4885 = load i32, ptr %4884, align 4, !tbaa !5
  %4886 = icmp eq i32 %4885, 0
  %4887 = icmp sgt i32 %5, 0
  br i1 %4886, label %4897, label %4888

4888:                                             ; preds = %4883
  br i1 %4887, label %4889, label %5477

4889:                                             ; preds = %4888
  %4890 = icmp sgt i32 %13, 1
  %4891 = icmp sgt i32 %13, 0
  %4892 = add i32 %13, -2
  %4893 = zext i32 %4892 to i64
  %4894 = zext i32 %13 to i64
  %4895 = add nuw i32 %5, 1
  %4896 = icmp eq i32 %13, 1
  br label %5042

4897:                                             ; preds = %4883
  br i1 %4887, label %4898, label %5477

4898:                                             ; preds = %4897
  %4899 = icmp sgt i32 %13, 1
  %4900 = icmp sgt i32 %13, 0
  %4901 = add i32 %13, -2
  %4902 = zext i32 %4901 to i64
  %4903 = zext i32 %13 to i64
  %4904 = add nuw i32 %5, 1
  %4905 = icmp eq i32 %13, 1
  br label %4906

4906:                                             ; preds = %4898, %5040
  %4907 = phi double [ %4876, %4898 ], [ %4991, %5040 ]
  %4908 = phi i32 [ 0, %4898 ], [ %4992, %5040 ]
  %4909 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4899, label %4910, label %4979

4910:                                             ; preds = %4906, %4969
  %4911 = phi i32 [ %4978, %4969 ], [ 0, %4906 ]
  %4912 = phi i64 [ %4920, %4969 ], [ %4903, %4906 ]
  %4913 = phi i64 [ %4977, %4969 ], [ %4902, %4906 ]
  %4914 = phi i32 [ %4975, %4969 ], [ %4909, %4906 ]
  %4915 = sub i32 %4901, %4911
  %4916 = tail call i32 @llvm.smin.i32(i32 %4915, i32 0)
  %4917 = sub i32 %4915, %4916
  %4918 = zext i32 %4917 to i64
  %4919 = add nuw nsw i64 %4918, 1
  %4920 = add nsw i64 %4912, -1
  %4921 = icmp ult i32 %4917, 31
  br i1 %4921, label %4957, label %4922

4922:                                             ; preds = %4910
  %4923 = and i64 %4919, 8589934560
  %4924 = sub i64 %4913, %4923
  br label %4925

4925:                                             ; preds = %4925, %4922
  %4926 = phi i64 [ 0, %4922 ], [ %4949, %4925 ]
  %4927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4945, %4925 ]
  %4928 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4946, %4925 ]
  %4929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4947, %4925 ]
  %4930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4922 ], [ %4948, %4925 ]
  %4931 = sub i64 %4913, %4926
  %4932 = getelementptr inbounds i32, ptr %9, i64 %4931
  %4933 = getelementptr inbounds i32, ptr %4932, i64 -7
  %4934 = load <8 x i32>, ptr %4933, align 4, !tbaa !5
  %4935 = shufflevector <8 x i32> %4934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4936 = getelementptr inbounds i32, ptr %4932, i64 -15
  %4937 = load <8 x i32>, ptr %4936, align 4, !tbaa !5
  %4938 = shufflevector <8 x i32> %4937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4939 = getelementptr inbounds i32, ptr %4932, i64 -23
  %4940 = load <8 x i32>, ptr %4939, align 4, !tbaa !5
  %4941 = shufflevector <8 x i32> %4940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4942 = getelementptr inbounds i32, ptr %4932, i64 -31
  %4943 = load <8 x i32>, ptr %4942, align 4, !tbaa !5
  %4944 = shufflevector <8 x i32> %4943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4945 = mul <8 x i32> %4935, %4927
  %4946 = mul <8 x i32> %4938, %4928
  %4947 = mul <8 x i32> %4941, %4929
  %4948 = mul <8 x i32> %4944, %4930
  %4949 = add nuw i64 %4926, 32
  %4950 = icmp eq i64 %4949, %4923
  br i1 %4950, label %4951, label %4925, !llvm.loop !1464

4951:                                             ; preds = %4925
  %4952 = mul <8 x i32> %4946, %4945
  %4953 = mul <8 x i32> %4947, %4952
  %4954 = mul <8 x i32> %4948, %4953
  %4955 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4954)
  %4956 = icmp eq i64 %4919, %4923
  br i1 %4956, label %4969, label %4957

4957:                                             ; preds = %4910, %4951
  %4958 = phi i64 [ %4913, %4910 ], [ %4924, %4951 ]
  %4959 = phi i32 [ 1, %4910 ], [ %4955, %4951 ]
  br label %4960

4960:                                             ; preds = %4957, %4960
  %4961 = phi i64 [ %4966, %4960 ], [ %4958, %4957 ]
  %4962 = phi i32 [ %4965, %4960 ], [ %4959, %4957 ]
  %4963 = getelementptr inbounds i32, ptr %9, i64 %4961
  %4964 = load i32, ptr %4963, align 4, !tbaa !5
  %4965 = mul nsw i32 %4964, %4962
  %4966 = add nsw i64 %4961, -1
  %4967 = trunc i64 %4961 to i32
  %4968 = icmp sgt i32 %4967, 0
  br i1 %4968, label %4960, label %4969, !llvm.loop !1465

4969:                                             ; preds = %4960, %4951
  %4970 = phi i32 [ %4955, %4951 ], [ %4965, %4960 ]
  %4971 = and i64 %4920, 4294967295
  %4972 = getelementptr inbounds i32, ptr %6, i64 %4971
  %4973 = load i32, ptr %4972, align 4, !tbaa !5
  %4974 = mul nsw i32 %4973, %4970
  %4975 = add nsw i32 %4974, %4914
  %4976 = icmp sgt i64 %4912, 2
  %4977 = add nsw i64 %4913, -1
  %4978 = add i32 %4911, 1
  br i1 %4976, label %4910, label %4979, !llvm.loop !1466

4979:                                             ; preds = %4969, %4906
  %4980 = phi i32 [ %4909, %4906 ], [ %4975, %4969 ]
  %4981 = sext i32 %4980 to i64
  %4982 = getelementptr inbounds double, ptr %2, i64 %4981
  %4983 = load double, ptr %4982, align 8, !tbaa !18
  %4984 = getelementptr inbounds double, ptr %4873, i64 %4981
  %4985 = load double, ptr %4984, align 8, !tbaa !18
  %4986 = fcmp fast one double %4983, 0.000000e+00
  %4987 = fcmp fast ogt double %4907, %4985
  %4988 = select i1 %4986, i1 %4987, i1 false
  br i1 %4988, label %4989, label %4990

4989:                                             ; preds = %4979
  store double %4985, ptr %4875, align 8, !tbaa !18
  br label %4990

4990:                                             ; preds = %4989, %4979
  %4991 = phi double [ %4985, %4989 ], [ %4907, %4979 ]
  %4992 = add nuw nsw i32 %4908, 1
  br i1 %4900, label %4993, label %5040

4993:                                             ; preds = %4990
  %4994 = load i32, ptr %4, align 4, !tbaa !5
  %4995 = load i32, ptr %12, align 4, !tbaa !5
  %4996 = add nsw i32 %4995, -1
  %4997 = icmp slt i32 %4994, %4996
  br i1 %4997, label %5017, label %4998

4998:                                             ; preds = %4993
  %4999 = icmp eq i32 %4994, %4996
  br i1 %4999, label %5000, label %5033

5000:                                             ; preds = %4998
  store i32 0, ptr %4, align 4, !tbaa !5
  %5001 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5001, ptr %6, align 4, !tbaa !5
  br i1 %4905, label %5040, label %5002

5002:                                             ; preds = %5000, %5027
  %5003 = phi i64 [ %5031, %5027 ], [ 1, %5000 ]
  %5004 = getelementptr inbounds i32, ptr %4, i64 %5003
  %5005 = load i32, ptr %5004, align 4, !tbaa !5
  %5006 = getelementptr inbounds i32, ptr %12, i64 %5003
  %5007 = load i32, ptr %5006, align 4, !tbaa !5
  %5008 = add nsw i32 %5007, -1
  %5009 = icmp slt i32 %5005, %5008
  br i1 %5009, label %5010, label %5025

5010:                                             ; preds = %5002
  br i1 %4997, label %5017, label %5011

5011:                                             ; preds = %5010
  %5012 = getelementptr inbounds i32, ptr %7, i64 %5003
  %5013 = load i32, ptr %5012, align 4, !tbaa !5
  %5014 = getelementptr inbounds i32, ptr %6, i64 %5003
  %5015 = load i32, ptr %5014, align 4, !tbaa !5
  %5016 = add nsw i32 %5015, %5013
  store i32 %5016, ptr %5014, align 4, !tbaa !5
  br label %5035

5017:                                             ; preds = %4993, %5010
  %5018 = phi i32 [ %5005, %5010 ], [ %4994, %4993 ]
  %5019 = phi ptr [ %5004, %5010 ], [ %4, %4993 ]
  %5020 = phi i64 [ %5003, %5010 ], [ 0, %4993 ]
  %5021 = add nsw i32 %5018, 1
  store i32 %5021, ptr %5019, align 4, !tbaa !5
  %5022 = getelementptr inbounds i32, ptr %7, i64 %5020
  %5023 = load i32, ptr %5022, align 4, !tbaa !5
  %5024 = getelementptr inbounds i32, ptr %6, i64 %5020
  br label %5035

5025:                                             ; preds = %5002
  %5026 = icmp eq i32 %5005, %5008
  br i1 %5026, label %5027, label %5033

5027:                                             ; preds = %5025
  store i32 0, ptr %5004, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %8, i64 %5003
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5003
  store i32 %5029, ptr %5030, align 4, !tbaa !5
  %5031 = add nuw nsw i64 %5003, 1
  %5032 = icmp eq i64 %5031, %4903
  br i1 %5032, label %5040, label %5002, !llvm.loop !1467

5033:                                             ; preds = %4998, %5025
  %5034 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5035:                                             ; preds = %5011, %5017
  %5036 = phi ptr [ %5024, %5017 ], [ %5004, %5011 ]
  %5037 = phi i32 [ %5023, %5017 ], [ 1, %5011 ]
  %5038 = load i32, ptr %5036, align 4, !tbaa !5
  %5039 = add nsw i32 %5038, %5037
  store i32 %5039, ptr %5036, align 4, !tbaa !5
  br label %5040

5040:                                             ; preds = %5027, %5035, %5000, %4990
  %5041 = icmp eq i32 %4992, %5
  br i1 %5041, label %5477, label %4906, !llvm.loop !1468

5042:                                             ; preds = %4889, %5179
  %5043 = phi double [ %4876, %4889 ], [ %5127, %5179 ]
  %5044 = phi i32 [ 0, %4889 ], [ %5128, %5179 ]
  %5045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4890, label %5046, label %5115

5046:                                             ; preds = %5042, %5105
  %5047 = phi i32 [ %5114, %5105 ], [ 0, %5042 ]
  %5048 = phi i64 [ %5056, %5105 ], [ %4894, %5042 ]
  %5049 = phi i64 [ %5113, %5105 ], [ %4893, %5042 ]
  %5050 = phi i32 [ %5111, %5105 ], [ %5045, %5042 ]
  %5051 = sub i32 %4892, %5047
  %5052 = tail call i32 @llvm.smin.i32(i32 %5051, i32 0)
  %5053 = sub i32 %5051, %5052
  %5054 = zext i32 %5053 to i64
  %5055 = add nuw nsw i64 %5054, 1
  %5056 = add nsw i64 %5048, -1
  %5057 = icmp ult i32 %5053, 31
  br i1 %5057, label %5093, label %5058

5058:                                             ; preds = %5046
  %5059 = and i64 %5055, 8589934560
  %5060 = sub i64 %5049, %5059
  br label %5061

5061:                                             ; preds = %5061, %5058
  %5062 = phi i64 [ 0, %5058 ], [ %5085, %5061 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5081, %5061 ]
  %5064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5082, %5061 ]
  %5065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5083, %5061 ]
  %5066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5084, %5061 ]
  %5067 = sub i64 %5049, %5062
  %5068 = getelementptr inbounds i32, ptr %11, i64 %5067
  %5069 = getelementptr inbounds i32, ptr %5068, i64 -7
  %5070 = load <8 x i32>, ptr %5069, align 4, !tbaa !5
  %5071 = shufflevector <8 x i32> %5070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5072 = getelementptr inbounds i32, ptr %5068, i64 -15
  %5073 = load <8 x i32>, ptr %5072, align 4, !tbaa !5
  %5074 = shufflevector <8 x i32> %5073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5075 = getelementptr inbounds i32, ptr %5068, i64 -23
  %5076 = load <8 x i32>, ptr %5075, align 4, !tbaa !5
  %5077 = shufflevector <8 x i32> %5076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5078 = getelementptr inbounds i32, ptr %5068, i64 -31
  %5079 = load <8 x i32>, ptr %5078, align 4, !tbaa !5
  %5080 = shufflevector <8 x i32> %5079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5081 = mul <8 x i32> %5071, %5063
  %5082 = mul <8 x i32> %5074, %5064
  %5083 = mul <8 x i32> %5077, %5065
  %5084 = mul <8 x i32> %5080, %5066
  %5085 = add nuw i64 %5062, 32
  %5086 = icmp eq i64 %5085, %5059
  br i1 %5086, label %5087, label %5061, !llvm.loop !1469

5087:                                             ; preds = %5061
  %5088 = mul <8 x i32> %5082, %5081
  %5089 = mul <8 x i32> %5083, %5088
  %5090 = mul <8 x i32> %5084, %5089
  %5091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5090)
  %5092 = icmp eq i64 %5055, %5059
  br i1 %5092, label %5105, label %5093

5093:                                             ; preds = %5046, %5087
  %5094 = phi i64 [ %5049, %5046 ], [ %5060, %5087 ]
  %5095 = phi i32 [ 1, %5046 ], [ %5091, %5087 ]
  br label %5096

5096:                                             ; preds = %5093, %5096
  %5097 = phi i64 [ %5102, %5096 ], [ %5094, %5093 ]
  %5098 = phi i32 [ %5101, %5096 ], [ %5095, %5093 ]
  %5099 = getelementptr inbounds i32, ptr %11, i64 %5097
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = mul nsw i32 %5100, %5098
  %5102 = add nsw i64 %5097, -1
  %5103 = trunc i64 %5097 to i32
  %5104 = icmp sgt i32 %5103, 0
  br i1 %5104, label %5096, label %5105, !llvm.loop !1470

5105:                                             ; preds = %5096, %5087
  %5106 = phi i32 [ %5091, %5087 ], [ %5101, %5096 ]
  %5107 = and i64 %5056, 4294967295
  %5108 = getelementptr inbounds i32, ptr %6, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = mul nsw i32 %5109, %5106
  %5111 = add nsw i32 %5110, %5050
  %5112 = icmp sgt i64 %5048, 2
  %5113 = add nsw i64 %5049, -1
  %5114 = add i32 %5047, 1
  br i1 %5112, label %5046, label %5115, !llvm.loop !1471

5115:                                             ; preds = %5105, %5042
  %5116 = phi i32 [ %5045, %5042 ], [ %5111, %5105 ]
  %5117 = icmp slt i32 %5116, %5
  br i1 %5117, label %5120, label %5118

5118:                                             ; preds = %5115
  %5119 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

5120:                                             ; preds = %5115
  %5121 = sext i32 %5116 to i64
  %5122 = getelementptr inbounds double, ptr %4873, i64 %5121
  %5123 = load double, ptr %5122, align 8, !tbaa !18
  %5124 = fcmp fast ogt double %5043, %5123
  br i1 %5124, label %5125, label %5126

5125:                                             ; preds = %5120
  store double %5123, ptr %4875, align 8, !tbaa !18
  br label %5126

5126:                                             ; preds = %5120, %5125
  %5127 = phi double [ %5043, %5120 ], [ %5123, %5125 ]
  %5128 = add nuw nsw i32 %5044, 1
  br i1 %4891, label %5129, label %5179

5129:                                             ; preds = %5126
  %5130 = load i32, ptr %4, align 4, !tbaa !5
  %5131 = load i32, ptr %12, align 4, !tbaa !5
  %5132 = add nsw i32 %5131, -1
  %5133 = icmp slt i32 %5130, %5132
  br i1 %5133, label %5156, label %5134

5134:                                             ; preds = %5129
  %5135 = icmp eq i32 %5130, %5132
  br i1 %5135, label %5136, label %5172

5136:                                             ; preds = %5134
  store i32 0, ptr %4, align 4, !tbaa !5
  %5137 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5137, ptr %6, align 4, !tbaa !5
  br i1 %4896, label %5179, label %5138

5138:                                             ; preds = %5136, %5166
  %5139 = phi i64 [ %5170, %5166 ], [ 1, %5136 ]
  %5140 = getelementptr inbounds i32, ptr %4, i64 %5139
  %5141 = load i32, ptr %5140, align 4, !tbaa !5
  %5142 = getelementptr inbounds i32, ptr %12, i64 %5139
  %5143 = load i32, ptr %5142, align 4, !tbaa !5
  %5144 = add nsw i32 %5143, -1
  %5145 = icmp slt i32 %5141, %5144
  br i1 %5145, label %5146, label %5164

5146:                                             ; preds = %5138
  br i1 %5133, label %5156, label %5147

5147:                                             ; preds = %5146
  %5148 = shl i64 %5139, 32
  %5149 = add i64 %5148, -4294967296
  %5150 = ashr exact i64 %5149, 32
  %5151 = getelementptr inbounds i32, ptr %7, i64 %5150
  %5152 = load i32, ptr %5151, align 4, !tbaa !5
  %5153 = getelementptr inbounds i32, ptr %6, i64 %5139
  %5154 = load i32, ptr %5153, align 4, !tbaa !5
  %5155 = add nsw i32 %5154, %5152
  store i32 %5155, ptr %5153, align 4, !tbaa !5
  br label %5174

5156:                                             ; preds = %5129, %5146
  %5157 = phi i32 [ %5141, %5146 ], [ %5130, %5129 ]
  %5158 = phi ptr [ %5140, %5146 ], [ %4, %5129 ]
  %5159 = phi i64 [ %5139, %5146 ], [ 0, %5129 ]
  %5160 = add nsw i32 %5157, 1
  store i32 %5160, ptr %5158, align 4, !tbaa !5
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5159
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5159
  br label %5174

5164:                                             ; preds = %5138
  %5165 = icmp eq i32 %5141, %5144
  br i1 %5165, label %5166, label %5172

5166:                                             ; preds = %5164
  store i32 0, ptr %5140, align 4, !tbaa !5
  %5167 = getelementptr inbounds i32, ptr %8, i64 %5139
  %5168 = load i32, ptr %5167, align 4, !tbaa !5
  %5169 = getelementptr inbounds i32, ptr %6, i64 %5139
  store i32 %5168, ptr %5169, align 4, !tbaa !5
  %5170 = add nuw nsw i64 %5139, 1
  %5171 = icmp eq i64 %5170, %4894
  br i1 %5171, label %5179, label %5138, !llvm.loop !1472

5172:                                             ; preds = %5134, %5164
  %5173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5174:                                             ; preds = %5147, %5156
  %5175 = phi ptr [ %5163, %5156 ], [ %5140, %5147 ]
  %5176 = phi i32 [ %5162, %5156 ], [ 1, %5147 ]
  %5177 = load i32, ptr %5175, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, %5176
  store i32 %5178, ptr %5175, align 4, !tbaa !5
  br label %5179

5179:                                             ; preds = %5166, %5174, %5136, %5126
  %5180 = icmp eq i32 %5128, %5
  br i1 %5180, label %5477, label %5042, !llvm.loop !1473

5181:                                             ; preds = %4882
  %5182 = getelementptr inbounds i32, ptr %3, i64 %19
  %5183 = load i32, ptr %5182, align 4, !tbaa !5
  %5184 = icmp eq i32 %5183, 0
  %5185 = icmp sgt i32 %5, 0
  br i1 %5184, label %5195, label %5186

5186:                                             ; preds = %5181
  br i1 %5185, label %5187, label %5477

5187:                                             ; preds = %5186
  %5188 = icmp sgt i32 %13, 1
  %5189 = icmp sgt i32 %13, 0
  %5190 = add i32 %13, -2
  %5191 = zext i32 %5190 to i64
  %5192 = zext i32 %13 to i64
  %5193 = add nuw i32 %5, 1
  %5194 = icmp eq i32 %13, 1
  br label %5336

5195:                                             ; preds = %5181
  br i1 %5185, label %5196, label %5477

5196:                                             ; preds = %5195
  %5197 = icmp sgt i32 %13, 1
  %5198 = icmp sgt i32 %13, 0
  %5199 = add i32 %13, -2
  %5200 = zext i32 %5199 to i64
  %5201 = zext i32 %13 to i64
  %5202 = add nuw i32 %5, 1
  %5203 = icmp eq i32 %13, 1
  br label %5204

5204:                                             ; preds = %5196, %5334
  %5205 = phi double [ %4876, %5196 ], [ %5285, %5334 ]
  %5206 = phi i32 [ 0, %5196 ], [ %5286, %5334 ]
  %5207 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5197, label %5208, label %5277

5208:                                             ; preds = %5204, %5267
  %5209 = phi i32 [ %5276, %5267 ], [ 0, %5204 ]
  %5210 = phi i64 [ %5218, %5267 ], [ %5201, %5204 ]
  %5211 = phi i64 [ %5275, %5267 ], [ %5200, %5204 ]
  %5212 = phi i32 [ %5273, %5267 ], [ %5207, %5204 ]
  %5213 = sub i32 %5199, %5209
  %5214 = tail call i32 @llvm.smin.i32(i32 %5213, i32 0)
  %5215 = sub i32 %5213, %5214
  %5216 = zext i32 %5215 to i64
  %5217 = add nuw nsw i64 %5216, 1
  %5218 = add nsw i64 %5210, -1
  %5219 = icmp ult i32 %5215, 31
  br i1 %5219, label %5255, label %5220

5220:                                             ; preds = %5208
  %5221 = and i64 %5217, 8589934560
  %5222 = sub i64 %5211, %5221
  br label %5223

5223:                                             ; preds = %5223, %5220
  %5224 = phi i64 [ 0, %5220 ], [ %5247, %5223 ]
  %5225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5243, %5223 ]
  %5226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5244, %5223 ]
  %5227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5245, %5223 ]
  %5228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5220 ], [ %5246, %5223 ]
  %5229 = sub i64 %5211, %5224
  %5230 = getelementptr inbounds i32, ptr %9, i64 %5229
  %5231 = getelementptr inbounds i32, ptr %5230, i64 -7
  %5232 = load <8 x i32>, ptr %5231, align 4, !tbaa !5
  %5233 = shufflevector <8 x i32> %5232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5234 = getelementptr inbounds i32, ptr %5230, i64 -15
  %5235 = load <8 x i32>, ptr %5234, align 4, !tbaa !5
  %5236 = shufflevector <8 x i32> %5235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5237 = getelementptr inbounds i32, ptr %5230, i64 -23
  %5238 = load <8 x i32>, ptr %5237, align 4, !tbaa !5
  %5239 = shufflevector <8 x i32> %5238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5240 = getelementptr inbounds i32, ptr %5230, i64 -31
  %5241 = load <8 x i32>, ptr %5240, align 4, !tbaa !5
  %5242 = shufflevector <8 x i32> %5241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5243 = mul <8 x i32> %5233, %5225
  %5244 = mul <8 x i32> %5236, %5226
  %5245 = mul <8 x i32> %5239, %5227
  %5246 = mul <8 x i32> %5242, %5228
  %5247 = add nuw i64 %5224, 32
  %5248 = icmp eq i64 %5247, %5221
  br i1 %5248, label %5249, label %5223, !llvm.loop !1474

5249:                                             ; preds = %5223
  %5250 = mul <8 x i32> %5244, %5243
  %5251 = mul <8 x i32> %5245, %5250
  %5252 = mul <8 x i32> %5246, %5251
  %5253 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5252)
  %5254 = icmp eq i64 %5217, %5221
  br i1 %5254, label %5267, label %5255

5255:                                             ; preds = %5208, %5249
  %5256 = phi i64 [ %5211, %5208 ], [ %5222, %5249 ]
  %5257 = phi i32 [ 1, %5208 ], [ %5253, %5249 ]
  br label %5258

5258:                                             ; preds = %5255, %5258
  %5259 = phi i64 [ %5264, %5258 ], [ %5256, %5255 ]
  %5260 = phi i32 [ %5263, %5258 ], [ %5257, %5255 ]
  %5261 = getelementptr inbounds i32, ptr %9, i64 %5259
  %5262 = load i32, ptr %5261, align 4, !tbaa !5
  %5263 = mul nsw i32 %5262, %5260
  %5264 = add nsw i64 %5259, -1
  %5265 = trunc i64 %5259 to i32
  %5266 = icmp sgt i32 %5265, 0
  br i1 %5266, label %5258, label %5267, !llvm.loop !1475

5267:                                             ; preds = %5258, %5249
  %5268 = phi i32 [ %5253, %5249 ], [ %5263, %5258 ]
  %5269 = and i64 %5218, 4294967295
  %5270 = getelementptr inbounds i32, ptr %6, i64 %5269
  %5271 = load i32, ptr %5270, align 4, !tbaa !5
  %5272 = mul nsw i32 %5271, %5268
  %5273 = add nsw i32 %5272, %5212
  %5274 = icmp sgt i64 %5210, 2
  %5275 = add nsw i64 %5211, -1
  %5276 = add i32 %5209, 1
  br i1 %5274, label %5208, label %5277, !llvm.loop !1476

5277:                                             ; preds = %5267, %5204
  %5278 = phi i32 [ %5207, %5204 ], [ %5273, %5267 ]
  %5279 = sext i32 %5278 to i64
  %5280 = getelementptr inbounds double, ptr %4873, i64 %5279
  %5281 = load double, ptr %5280, align 8, !tbaa !18
  %5282 = fcmp fast ogt double %5205, %5281
  br i1 %5282, label %5283, label %5284

5283:                                             ; preds = %5277
  store double %5281, ptr %4875, align 8, !tbaa !18
  br label %5284

5284:                                             ; preds = %5283, %5277
  %5285 = phi double [ %5281, %5283 ], [ %5205, %5277 ]
  %5286 = add nuw nsw i32 %5206, 1
  br i1 %5198, label %5287, label %5334

5287:                                             ; preds = %5284
  %5288 = load i32, ptr %4, align 4, !tbaa !5
  %5289 = load i32, ptr %12, align 4, !tbaa !5
  %5290 = add nsw i32 %5289, -1
  %5291 = icmp slt i32 %5288, %5290
  br i1 %5291, label %5311, label %5292

5292:                                             ; preds = %5287
  %5293 = icmp eq i32 %5288, %5290
  br i1 %5293, label %5294, label %5327

5294:                                             ; preds = %5292
  store i32 0, ptr %4, align 4, !tbaa !5
  %5295 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5295, ptr %6, align 4, !tbaa !5
  br i1 %5203, label %5334, label %5296

5296:                                             ; preds = %5294, %5321
  %5297 = phi i64 [ %5325, %5321 ], [ 1, %5294 ]
  %5298 = getelementptr inbounds i32, ptr %4, i64 %5297
  %5299 = load i32, ptr %5298, align 4, !tbaa !5
  %5300 = getelementptr inbounds i32, ptr %12, i64 %5297
  %5301 = load i32, ptr %5300, align 4, !tbaa !5
  %5302 = add nsw i32 %5301, -1
  %5303 = icmp slt i32 %5299, %5302
  br i1 %5303, label %5304, label %5319

5304:                                             ; preds = %5296
  br i1 %5291, label %5311, label %5305

5305:                                             ; preds = %5304
  %5306 = getelementptr inbounds i32, ptr %7, i64 %5297
  %5307 = load i32, ptr %5306, align 4, !tbaa !5
  %5308 = getelementptr inbounds i32, ptr %6, i64 %5297
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = add nsw i32 %5309, %5307
  store i32 %5310, ptr %5308, align 4, !tbaa !5
  br label %5329

5311:                                             ; preds = %5287, %5304
  %5312 = phi i32 [ %5299, %5304 ], [ %5288, %5287 ]
  %5313 = phi ptr [ %5298, %5304 ], [ %4, %5287 ]
  %5314 = phi i64 [ %5297, %5304 ], [ 0, %5287 ]
  %5315 = add nsw i32 %5312, 1
  store i32 %5315, ptr %5313, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %7, i64 %5314
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = getelementptr inbounds i32, ptr %6, i64 %5314
  br label %5329

5319:                                             ; preds = %5296
  %5320 = icmp eq i32 %5299, %5302
  br i1 %5320, label %5321, label %5327

5321:                                             ; preds = %5319
  store i32 0, ptr %5298, align 4, !tbaa !5
  %5322 = getelementptr inbounds i32, ptr %8, i64 %5297
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5297
  store i32 %5323, ptr %5324, align 4, !tbaa !5
  %5325 = add nuw nsw i64 %5297, 1
  %5326 = icmp eq i64 %5325, %5201
  br i1 %5326, label %5334, label %5296, !llvm.loop !1477

5327:                                             ; preds = %5292, %5319
  %5328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5329:                                             ; preds = %5305, %5311
  %5330 = phi ptr [ %5318, %5311 ], [ %5298, %5305 ]
  %5331 = phi i32 [ %5317, %5311 ], [ 1, %5305 ]
  %5332 = load i32, ptr %5330, align 4, !tbaa !5
  %5333 = add nsw i32 %5332, %5331
  store i32 %5333, ptr %5330, align 4, !tbaa !5
  br label %5334

5334:                                             ; preds = %5321, %5329, %5294, %5284
  %5335 = icmp eq i32 %5286, %5
  br i1 %5335, label %5477, label %5204, !llvm.loop !1478

5336:                                             ; preds = %5187, %5473
  %5337 = phi double [ %4876, %5187 ], [ %5421, %5473 ]
  %5338 = phi i32 [ 0, %5187 ], [ %5422, %5473 ]
  %5339 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5188, label %5340, label %5409

5340:                                             ; preds = %5336, %5399
  %5341 = phi i32 [ %5408, %5399 ], [ 0, %5336 ]
  %5342 = phi i64 [ %5350, %5399 ], [ %5192, %5336 ]
  %5343 = phi i64 [ %5407, %5399 ], [ %5191, %5336 ]
  %5344 = phi i32 [ %5405, %5399 ], [ %5339, %5336 ]
  %5345 = sub i32 %5190, %5341
  %5346 = tail call i32 @llvm.smin.i32(i32 %5345, i32 0)
  %5347 = sub i32 %5345, %5346
  %5348 = zext i32 %5347 to i64
  %5349 = add nuw nsw i64 %5348, 1
  %5350 = add nsw i64 %5342, -1
  %5351 = icmp ult i32 %5347, 31
  br i1 %5351, label %5387, label %5352

5352:                                             ; preds = %5340
  %5353 = and i64 %5349, 8589934560
  %5354 = sub i64 %5343, %5353
  br label %5355

5355:                                             ; preds = %5355, %5352
  %5356 = phi i64 [ 0, %5352 ], [ %5379, %5355 ]
  %5357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5375, %5355 ]
  %5358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5376, %5355 ]
  %5359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5377, %5355 ]
  %5360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5352 ], [ %5378, %5355 ]
  %5361 = sub i64 %5343, %5356
  %5362 = getelementptr inbounds i32, ptr %11, i64 %5361
  %5363 = getelementptr inbounds i32, ptr %5362, i64 -7
  %5364 = load <8 x i32>, ptr %5363, align 4, !tbaa !5
  %5365 = shufflevector <8 x i32> %5364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5366 = getelementptr inbounds i32, ptr %5362, i64 -15
  %5367 = load <8 x i32>, ptr %5366, align 4, !tbaa !5
  %5368 = shufflevector <8 x i32> %5367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5369 = getelementptr inbounds i32, ptr %5362, i64 -23
  %5370 = load <8 x i32>, ptr %5369, align 4, !tbaa !5
  %5371 = shufflevector <8 x i32> %5370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5372 = getelementptr inbounds i32, ptr %5362, i64 -31
  %5373 = load <8 x i32>, ptr %5372, align 4, !tbaa !5
  %5374 = shufflevector <8 x i32> %5373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5375 = mul <8 x i32> %5365, %5357
  %5376 = mul <8 x i32> %5368, %5358
  %5377 = mul <8 x i32> %5371, %5359
  %5378 = mul <8 x i32> %5374, %5360
  %5379 = add nuw i64 %5356, 32
  %5380 = icmp eq i64 %5379, %5353
  br i1 %5380, label %5381, label %5355, !llvm.loop !1479

5381:                                             ; preds = %5355
  %5382 = mul <8 x i32> %5376, %5375
  %5383 = mul <8 x i32> %5377, %5382
  %5384 = mul <8 x i32> %5378, %5383
  %5385 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5384)
  %5386 = icmp eq i64 %5349, %5353
  br i1 %5386, label %5399, label %5387

5387:                                             ; preds = %5340, %5381
  %5388 = phi i64 [ %5343, %5340 ], [ %5354, %5381 ]
  %5389 = phi i32 [ 1, %5340 ], [ %5385, %5381 ]
  br label %5390

5390:                                             ; preds = %5387, %5390
  %5391 = phi i64 [ %5396, %5390 ], [ %5388, %5387 ]
  %5392 = phi i32 [ %5395, %5390 ], [ %5389, %5387 ]
  %5393 = getelementptr inbounds i32, ptr %11, i64 %5391
  %5394 = load i32, ptr %5393, align 4, !tbaa !5
  %5395 = mul nsw i32 %5394, %5392
  %5396 = add nsw i64 %5391, -1
  %5397 = trunc i64 %5391 to i32
  %5398 = icmp sgt i32 %5397, 0
  br i1 %5398, label %5390, label %5399, !llvm.loop !1480

5399:                                             ; preds = %5390, %5381
  %5400 = phi i32 [ %5385, %5381 ], [ %5395, %5390 ]
  %5401 = and i64 %5350, 4294967295
  %5402 = getelementptr inbounds i32, ptr %6, i64 %5401
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = mul nsw i32 %5403, %5400
  %5405 = add nsw i32 %5404, %5344
  %5406 = icmp sgt i64 %5342, 2
  %5407 = add nsw i64 %5343, -1
  %5408 = add i32 %5341, 1
  br i1 %5406, label %5340, label %5409, !llvm.loop !1481

5409:                                             ; preds = %5399, %5336
  %5410 = phi i32 [ %5339, %5336 ], [ %5405, %5399 ]
  %5411 = icmp slt i32 %5410, %5
  br i1 %5411, label %5414, label %5412

5412:                                             ; preds = %5409
  %5413 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5477

5414:                                             ; preds = %5409
  %5415 = sext i32 %5410 to i64
  %5416 = getelementptr inbounds double, ptr %4873, i64 %5415
  %5417 = load double, ptr %5416, align 8, !tbaa !18
  %5418 = fcmp fast ogt double %5337, %5417
  br i1 %5418, label %5419, label %5420

5419:                                             ; preds = %5414
  store double %5417, ptr %4875, align 8, !tbaa !18
  br label %5420

5420:                                             ; preds = %5419, %5414
  %5421 = phi double [ %5417, %5419 ], [ %5337, %5414 ]
  %5422 = add nuw nsw i32 %5338, 1
  br i1 %5189, label %5423, label %5473

5423:                                             ; preds = %5420
  %5424 = load i32, ptr %4, align 4, !tbaa !5
  %5425 = load i32, ptr %12, align 4, !tbaa !5
  %5426 = add nsw i32 %5425, -1
  %5427 = icmp slt i32 %5424, %5426
  br i1 %5427, label %5450, label %5428

5428:                                             ; preds = %5423
  %5429 = icmp eq i32 %5424, %5426
  br i1 %5429, label %5430, label %5466

5430:                                             ; preds = %5428
  store i32 0, ptr %4, align 4, !tbaa !5
  %5431 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5431, ptr %6, align 4, !tbaa !5
  br i1 %5194, label %5473, label %5432

5432:                                             ; preds = %5430, %5460
  %5433 = phi i64 [ %5464, %5460 ], [ 1, %5430 ]
  %5434 = getelementptr inbounds i32, ptr %4, i64 %5433
  %5435 = load i32, ptr %5434, align 4, !tbaa !5
  %5436 = getelementptr inbounds i32, ptr %12, i64 %5433
  %5437 = load i32, ptr %5436, align 4, !tbaa !5
  %5438 = add nsw i32 %5437, -1
  %5439 = icmp slt i32 %5435, %5438
  br i1 %5439, label %5440, label %5458

5440:                                             ; preds = %5432
  br i1 %5427, label %5450, label %5441

5441:                                             ; preds = %5440
  %5442 = shl i64 %5433, 32
  %5443 = add i64 %5442, -4294967296
  %5444 = ashr exact i64 %5443, 32
  %5445 = getelementptr inbounds i32, ptr %7, i64 %5444
  %5446 = load i32, ptr %5445, align 4, !tbaa !5
  %5447 = getelementptr inbounds i32, ptr %6, i64 %5433
  %5448 = load i32, ptr %5447, align 4, !tbaa !5
  %5449 = add nsw i32 %5448, %5446
  store i32 %5449, ptr %5447, align 4, !tbaa !5
  br label %5468

5450:                                             ; preds = %5423, %5440
  %5451 = phi i32 [ %5435, %5440 ], [ %5424, %5423 ]
  %5452 = phi ptr [ %5434, %5440 ], [ %4, %5423 ]
  %5453 = phi i64 [ %5433, %5440 ], [ 0, %5423 ]
  %5454 = add nsw i32 %5451, 1
  store i32 %5454, ptr %5452, align 4, !tbaa !5
  %5455 = getelementptr inbounds i32, ptr %7, i64 %5453
  %5456 = load i32, ptr %5455, align 4, !tbaa !5
  %5457 = getelementptr inbounds i32, ptr %6, i64 %5453
  br label %5468

5458:                                             ; preds = %5432
  %5459 = icmp eq i32 %5435, %5438
  br i1 %5459, label %5460, label %5466

5460:                                             ; preds = %5458
  store i32 0, ptr %5434, align 4, !tbaa !5
  %5461 = getelementptr inbounds i32, ptr %8, i64 %5433
  %5462 = load i32, ptr %5461, align 4, !tbaa !5
  %5463 = getelementptr inbounds i32, ptr %6, i64 %5433
  store i32 %5462, ptr %5463, align 4, !tbaa !5
  %5464 = add nuw nsw i64 %5433, 1
  %5465 = icmp eq i64 %5464, %5192
  br i1 %5465, label %5473, label %5432, !llvm.loop !1482

5466:                                             ; preds = %5428, %5458
  %5467 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5477

5468:                                             ; preds = %5441, %5450
  %5469 = phi ptr [ %5457, %5450 ], [ %5434, %5441 ]
  %5470 = phi i32 [ %5456, %5450 ], [ 1, %5441 ]
  %5471 = load i32, ptr %5469, align 4, !tbaa !5
  %5472 = add nsw i32 %5471, %5470
  store i32 %5472, ptr %5469, align 4, !tbaa !5
  br label %5473

5473:                                             ; preds = %5460, %5468, %5430, %5420
  %5474 = icmp eq i32 %5422, %5
  br i1 %5474, label %5477, label %5336, !llvm.loop !1483

5475:                                             ; preds = %4882
  %5476 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1995, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5477

5477:                                             ; preds = %5473, %5334, %5179, %5040, %4867, %4727, %4571, %4431, %4260, %4121, %3966, %3827, %3654, %3514, %3358, %3218, %3047, %2908, %2753, %2614, %2444, %2304, %2148, %2008, %1837, %1698, %1543, %1404, %1229, %1090, %935, %796, %626, %487, %332, %193, %5186, %5195, %4888, %4897, %4578, %4587, %4278, %4287, %3973, %3982, %3675, %3684, %3365, %3374, %3065, %3074, %2760, %2769, %2462, %2471, %2155, %2164, %1855, %1864, %1550, %1559, %1252, %1261, %942, %951, %644, %653, %339, %348, %41, %50, %4881, %4878, %5475, %4264, %4869, %3668, %3665, %4262, %3051, %3656, %2448, %3049, %1841, %2446, %1245, %1241, %1839, %630, %1231, %34, %30, %628, %18, %5033, %5118, %5172, %5327, %5412, %5466, %4424, %4509, %4564, %4720, %4805, %4860, %3820, %3905, %3959, %4114, %4199, %4253, %3211, %3296, %3351, %3507, %3592, %3647, %2607, %2691, %2746, %2901, %2985, %3040, %2001, %2086, %2141, %2297, %2382, %2437, %1397, %1481, %1536, %1691, %1775, %1830, %789, %873, %928, %1083, %1167, %1222, %186, %270, %325, %480, %564, %619
  %5478 = phi i32 [ -1, %619 ], [ -1, %564 ], [ -1, %480 ], [ -1, %325 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1222 ], [ -1, %1167 ], [ -1, %1083 ], [ -1, %928 ], [ -1, %873 ], [ -1, %789 ], [ -1, %1830 ], [ -1, %1775 ], [ -1, %1691 ], [ -1, %1536 ], [ -1, %1481 ], [ -1, %1397 ], [ -1, %2437 ], [ -1, %2382 ], [ -1, %2297 ], [ -1, %2141 ], [ -1, %2086 ], [ -1, %2001 ], [ -1, %3040 ], [ -1, %2985 ], [ -1, %2901 ], [ -1, %2746 ], [ -1, %2691 ], [ -1, %2607 ], [ -1, %3647 ], [ -1, %3592 ], [ -1, %3507 ], [ -1, %3351 ], [ -1, %3296 ], [ -1, %3211 ], [ -1, %4253 ], [ -1, %4199 ], [ -1, %4114 ], [ -1, %3959 ], [ -1, %3905 ], [ -1, %3820 ], [ -1, %4860 ], [ -1, %4805 ], [ -1, %4720 ], [ -1, %4564 ], [ -1, %4509 ], [ -1, %4424 ], [ -1, %5466 ], [ -1, %5412 ], [ -1, %5327 ], [ -1, %5172 ], [ -1, %5118 ], [ -1, %5033 ], [ %10, %18 ], [ 1, %628 ], [ 1, %30 ], [ 1, %34 ], [ 1, %630 ], [ 1, %1231 ], [ 1, %1839 ], [ 1, %1241 ], [ 1, %1245 ], [ 1, %1841 ], [ 1, %2446 ], [ 1, %2448 ], [ 1, %3049 ], [ 1, %3051 ], [ 1, %3656 ], [ 1, %4262 ], [ 1, %3665 ], [ 1, %3668 ], [ 1, %4264 ], [ 1, %4869 ], [ 1, %5475 ], [ 1, %4878 ], [ 1, %4881 ], [ 1, %50 ], [ 1, %41 ], [ 1, %348 ], [ 1, %339 ], [ 1, %653 ], [ 1, %644 ], [ 1, %951 ], [ 1, %942 ], [ 1, %1261 ], [ 1, %1252 ], [ 1, %1559 ], [ 1, %1550 ], [ 1, %1864 ], [ 1, %1855 ], [ 1, %2164 ], [ 1, %2155 ], [ 1, %2471 ], [ 1, %2462 ], [ 1, %2769 ], [ 1, %2760 ], [ 1, %3074 ], [ 1, %3065 ], [ 1, %3374 ], [ 1, %3365 ], [ 1, %3684 ], [ 1, %3675 ], [ 1, %3982 ], [ 1, %3973 ], [ 1, %4287 ], [ 1, %4278 ], [ 1, %4587 ], [ 1, %4578 ], [ 1, %4897 ], [ 1, %4888 ], [ 1, %5195 ], [ 1, %5186 ], [ %57, %193 ], [ %48, %332 ], [ %355, %487 ], [ %346, %626 ], [ %660, %796 ], [ %651, %935 ], [ %958, %1090 ], [ %949, %1229 ], [ %1268, %1404 ], [ %1259, %1543 ], [ %1566, %1698 ], [ %1557, %1837 ], [ %1871, %2008 ], [ %1862, %2148 ], [ %2171, %2304 ], [ %2162, %2444 ], [ %2478, %2614 ], [ %2469, %2753 ], [ %2776, %2908 ], [ %2767, %3047 ], [ %3081, %3218 ], [ %3072, %3358 ], [ %3381, %3514 ], [ %3372, %3654 ], [ %3691, %3827 ], [ %3682, %3966 ], [ %3989, %4121 ], [ %3980, %4260 ], [ %4294, %4431 ], [ %4285, %4571 ], [ %4594, %4727 ], [ %4585, %4867 ], [ %4904, %5040 ], [ %4895, %5179 ], [ %5202, %5334 ], [ %5193, %5473 ]
  ret i32 %5478
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
